
1src\main\java\org\jabref\gui\DefaultInjector.java¿	
org.jabref.gui.DefaultInjectorCLASS;
1src\main\java\org\jabref\gui\DefaultInjector.java ("
packageorg.jabref.gui"
isFinalfalse"
inner classfalse"

isAbstractfalse"´
declarationStringï<mark class="modifier">public </mark><mark class="modifier">class </mark>DefaultInjector<mark class="modifier"><br>implements </mark>PresenterFactory"
accesspublic*DefaultInjector2è
Corg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)DECLARATION;
1src\main\java\org\jabref\gui\DefaultInjector.java (*2’
àorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>)DECLARATION;
1src\main\java\org\jabref\gui\DefaultInjector.javaA A(%2À
org.jabref.gui.DefaultInjector.injectMembers(java.lang.Object, java.util.function.Function<java.lang.String, java.lang.Object>)DECLARATION;
1src\main\java\org\jabref\gui\DefaultInjector.javaK K(2}
1org.jabref.gui.DefaultInjector?LOGGER@22.32:22.38DECLARATION;
1src\main\java\org\jabref\gui\DefaultInjector.java  (&2z
3com.airhacks.afterburner.injection.PresenterFactoryEXTEND;
1src\main\java\org\jabref\gui\DefaultInjector.java( (8”
Corg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)METHOD;
1src\main\java\org\jabref\gui\DefaultInjector.java (*"
isFinalfalse"™
declarationStringî<mark class="modifier">private </mark><mark class="modifier">static </mark>Object <mark class="method">createDependency</mark>(Class&lt;?&gt; clazz)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeObject*createDependency2p
+org.jabref.gui.JabRefGUI.getDialogService()CALL;
1src\main\java\org\jabref\gui\DefaultInjector.java (-2i
$org.jabref.gui.Globals.getKeyPrefs()CALL;
1src\main\java\org\jabref\gui\DefaultInjector.java% %(&2o
*org.jabref.gui.JabRefGUI.getThemeManager()CALL;
1src\main\java\org\jabref\gui\DefaultInjector.java+ +(,2r
-org.jabref.gui.Globals.getFileUpdateMonitor()CALL;
1src\main\java\org\jabref\gui\DefaultInjector.java- -(/2q
,org.jabref.gui.Globals.getClipboardManager()CALL;
1src\main\java\org\jabref\gui\DefaultInjector.java1 1(.2b
java.lang.Class.newInstance()CALL;
1src\main\java\org\jabref\gui\DefaultInjector.java8 8((2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java (2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java   (2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java" "(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java$ $(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java& &(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java( ((2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java* *(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java, ,(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java. .(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java0 0(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java2 2(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java4 4(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java8 8(2v
1org.jabref.gui.DefaultInjector?LOGGER@22.32:22.38CALL;
1src\main\java\org\jabref\gui\DefaultInjector.java: :(2é
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.java:A :(F2ó
Rorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)?ex@57.69:57.71CALL;
1src\main\java\org\jabref\gui\DefaultInjector.java:H :(J2ì
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazz	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.java4 (92û
Rorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)?ex@57.69:57.71DECLARATION;
1src\main\java\org\jabref\gui\DefaultInjector.java9E 9(G2\
java.lang.ObjectRETURN_TYPE;
1src\main\java\org\jabref\gui\DefaultInjector.java (π
Iorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)!clazz	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.java4 (9"
typeClass<?>"
isFinalfalse"#
declarationStringClass<?> clazz*clazz2T
java.lang.ClassTYPE;
1src\main\java\org\jabref\gui\DefaultInjector.java+ (0æ
Rorg.jabref.gui.DefaultInjector.createDependency(java.lang.Class<?>)?ex@57.69:57.71VARIABLE;
1src\main\java\org\jabref\gui\DefaultInjector.java9E 9(G"7
type/InstantiationException | IllegalAccessException"
isFinalfalse"G
declarationString2InstantiationException | IllegalAccessException ex*ex2à
Cjava.lang.InstantiationException | java.lang.IllegalAccessExceptionTYPE;
1src\main\java\org\jabref\gui\DefaultInjector.java9 9(DÒ
àorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>)METHOD;
1src\main\java\org\jabref\gui\DefaultInjector.javaA A(%"
isFinalfalse"⁄
declarationStringƒ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>T <mark class="method">instantiatePresenter</mark>(Class&lt;T&gt; clazz<mark class="modifier"><mark class="modifier">,</mark></mark> Function&lt;String<mark class="modifier"><mark class="modifier">,</mark></mark> Object&gt; injectionContext)"
isStaticfalse"
accesspublic"

isAbstractfalse"	
typeT*instantiatePresenter2^
java.lang.Class.getName()CALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaB- B(42v
1org.jabref.gui.DefaultInjector?LOGGER@22.32:22.38CALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaB B(2‘
éorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaB' B(,2‘
éorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>)!clazzCALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaG- G(22ﬂ
ôorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>)!injectionContextCALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaG4 G(D2Ÿ
éorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>)!clazz	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaA/ A(42‰
ôorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>)!injectionContext	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaAO A(_2M
TRETURN_TYPE;
1src\main\java\org\jabref\gui\DefaultInjector.javaA A(2⁄
äorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>).TTYPE_PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaA A(ˇ
éorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>)!clazz	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaA/ A(4"
typeClass<T>"
isFinalfalse"G
declarationString2Class<<mark class="type-parameter">T</mark>> clazz*clazz2T
java.lang.ClassTYPE;
1src\main\java\org\jabref\gui\DefaultInjector.javaA& A(+2Ÿ
äorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>).TTYPE_ARGUMENT;
1src\main\java\org\jabref\gui\DefaultInjector.javaA, A(-å
ôorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>)!injectionContext	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaAO A(_" 
typeFunction<String, Object>"
isFinalfalse">
declarationString)Function<String, Object> injectionContext*injectionContext2`
java.util.function.FunctionTYPE;
1src\main\java\org\jabref\gui\DefaultInjector.javaA6 A(>2^
java.lang.ObjectTYPE_ARGUMENT;
1src\main\java\org\jabref\gui\DefaultInjector.javaA? A(E2^
java.lang.StringTYPE_ARGUMENT;
1src\main\java\org\jabref\gui\DefaultInjector.javaAG A(M›
äorg.jabref.gui.DefaultInjector.instantiatePresenter(java.lang.Class<T>, java.util.function.Function<java.lang.String, java.lang.Object>).TTYPE_PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaA A(*T‹
org.jabref.gui.DefaultInjector.injectMembers(java.lang.Object, java.util.function.Function<java.lang.String, java.lang.Object>)METHOD;
1src\main\java\org\jabref\gui\DefaultInjector.javaK K("
isFinalfalse"Ô
declarationStringŸ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">injectMembers</mark>(Object instance<mark class="modifier"><mark class="modifier">,</mark></mark> Function&lt;String<mark class="modifier"><mark class="modifier">,</mark></mark> Object&gt; injectionContext)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*injectMembers2^
java.lang.Class.getName()CALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaL; L(B2`
java.lang.Object.getClass()CALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaL0 L(82v
1org.jabref.gui.DefaultInjector?LOGGER@22.32:22.38CALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaL L(2Œ
àorg.jabref.gui.DefaultInjector.injectMembers(java.lang.Object, java.util.function.Function<java.lang.String, java.lang.Object>)!instanceCALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaL' L(/2Œ
àorg.jabref.gui.DefaultInjector.injectMembers(java.lang.Object, java.util.function.Function<java.lang.String, java.lang.Object>)!instanceCALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaQ Q('2÷
êorg.jabref.gui.DefaultInjector.injectMembers(java.lang.Object, java.util.function.Function<java.lang.String, java.lang.Object>)!injectionContextCALL;
1src\main\java\org\jabref\gui\DefaultInjector.javaQ) Q(92”
àorg.jabref.gui.DefaultInjector.injectMembers(java.lang.Object, java.util.function.Function<java.lang.String, java.lang.Object>)!instance	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaK% K(-2€
êorg.jabref.gui.DefaultInjector.injectMembers(java.lang.Object, java.util.function.Function<java.lang.String, java.lang.Object>)!injectionContext	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaKH K(X2P
voidRETURN_TYPE;
1src\main\java\org\jabref\gui\DefaultInjector.javaK K(¸
àorg.jabref.gui.DefaultInjector.injectMembers(java.lang.Object, java.util.function.Function<java.lang.String, java.lang.Object>)!instance	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaK% K(-"
typeObject"
isFinalfalse"$
declarationStringObject instance*instance2U
java.lang.ObjectTYPE;
1src\main\java\org\jabref\gui\DefaultInjector.javaK K($É
êorg.jabref.gui.DefaultInjector.injectMembers(java.lang.Object, java.util.function.Function<java.lang.String, java.lang.Object>)!injectionContext	PARAMETER;
1src\main\java\org\jabref\gui\DefaultInjector.javaKH K(X" 
typeFunction<String, Object>"
isFinalfalse">
declarationString)Function<String, Object> injectionContext*injectionContext2`
java.util.function.FunctionTYPE;
1src\main\java\org\jabref\gui\DefaultInjector.javaK/ K(72^
java.lang.ObjectTYPE_ARGUMENT;
1src\main\java\org\jabref\gui\DefaultInjector.javaK8 K(>2^
java.lang.StringTYPE_ARGUMENT;
1src\main\java\org\jabref\gui\DefaultInjector.javaK@ K(FÑ
1org.jabref.gui.DefaultInjector?LOGGER@22.32:22.38VALUE;
1src\main\java\org\jabref\gui\DefaultInjector.java  (&"
isFinaltrue"
typeLogger"Â
declarationStringœ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(DefaultInjector.class);"
isStatictrue"
accessprivate*LOGGER2U
org.slf4j.LoggerTYPE;
1src\main\java\org\jabref\gui\DefaultInjector.java (