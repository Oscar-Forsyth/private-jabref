
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java‰
'org.jabref.gui.util.DefaultTaskExecutorCLASSD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java ( "
packageorg.jabref.gui.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"´
declarationStringï<mark class="modifier">public </mark><mark class="modifier">class </mark>DefaultTaskExecutor<mark class="modifier"><br>implements </mark>TaskExecutor"
accesspublic*DefaultTaskExecutor2≠
Xorg.jabref.gui.util.DefaultTaskExecutor.DefaultTaskExecutor(org.jabref.gui.StateManager)DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java& &(2∞
[org.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java. .()2©
Torg.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaJ J(/2¢
Morg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.lang.Runnable)DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javad d((2´
Vorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai i( 2ü
Jorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>)DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar r( 2—
|org.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax x(!2â
2org.jabref.gui.util.DefaultTaskExecutor.shutdown()DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÄ Ä(2ì
<org.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaà à(-2≥
\org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé é(%2¶
Oorg.jabref.gui.util.DefaultTaskExecutor.convertToException(java.lang.Throwable)DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≤ ≤((2è
:org.jabref.gui.util.DefaultTaskExecutor?LOGGER@30.32:30.38DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java  (&2ë
<org.jabref.gui.util.DefaultTaskExecutor?executor@32.34:32.42DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java "  (*2ö
Eorg.jabref.gui.util.DefaultTaskExecutor?scheduledExecutor@33.43:33.60DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java!+ !(<2ì
>org.jabref.gui.util.DefaultTaskExecutor?throttlers@34.56:34.66DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java"8 "(B2ï
@org.jabref.gui.util.DefaultTaskExecutor?stateManager@36.31:36.43DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java$ $(+2p
 org.jabref.gui.util.TaskExecutorEXTENDD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java, (8≤
Xorg.jabref.gui.util.DefaultTaskExecutor.DefaultTaskExecutor(org.jabref.gui.StateManager)CONSTRUCTORD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java& &("Ñ
declarationStringo<mark class="modifier">public </mark><mark class="method">DefaultTaskExecutor</mark>(StateManager stateManager)*DefaultTaskExecutor2g
java.lang.Object.Object()CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java' '(2≥
eorg.jabref.gui.util.DefaultTaskExecutor.DefaultTaskExecutor(org.jabref.gui.StateManager)!stateManagerCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java( (((2é
@org.jabref.gui.util.DefaultTaskExecutor?stateManager@36.31:36.43CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java( ((2∏
eorg.jabref.gui.util.DefaultTaskExecutor.DefaultTaskExecutor(org.jabref.gui.StateManager)!stateManager	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java&, &(82|
'org.jabref.gui.util.DefaultTaskExecutorRETURN_TYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java& &(â
eorg.jabref.gui.util.DefaultTaskExecutor.DefaultTaskExecutor(org.jabref.gui.StateManager)!stateManager	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java&, &(8"
typeStateManager"
isFinalfalse".
declarationStringStateManager stateManager*stateManager2i
org.jabref.gui.StateManagerTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java& &(+∆
[org.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)METHODD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java. .()"
isFinalfalse"´
declarationStringï<mark class="modifier">public </mark><mark class="modifier">static </mark>V <mark class="method">runInJavaFXThread</mark>(Callable&lt;V&gt; callable)"
isStatictrue"
accesspublic"

isAbstractfalse"	
typeV*runInJavaFXThread2r
$java.util.concurrent.Callable.call()CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java1  1($2s
%java.util.concurrent.FutureTask.get()CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java= =(2ö
Ljava.util.concurrent.FutureTask.FutureTask(java.util.concurrent.Callable<V>)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java8! 8(-2≤
dorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)!callableCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java1 1(2à
:org.jabref.gui.util.DefaultTaskExecutor?LOGGER@30.32:30.38CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java3 3(2∑
iorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?e@50.31:50.32CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java37 3(82≤
dorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)!callableCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java8. 8(62∫
lorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?task@56.22:56.26CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java: :(2∫
lorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?task@56.22:56.26CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java= =(2à
:org.jabref.gui.util.DefaultTaskExecutor?LOGGER@30.32:30.38CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java? ?(2∑
iorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?e@62.59:62.60CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java?9 ?(:2∑
dorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)!callable	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java.6 .(>2¡
lorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?task@56.22:56.26DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java8 8(2æ
iorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?e@50.31:50.32DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java2 2( 2æ
iorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?e@62.59:62.60DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java>; >(<2V
VRETURN_TYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java. .(2µ
]org.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>).VTYPE_PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java. .(Ï
lorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?task@56.22:56.26VARIABLED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java8 8("
typeFutureTask<V>"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>FutureTask<V> <mark class="class-field">task</mark> = new FutureTask<>(callable)*task2m
java.util.concurrent.FutureTaskTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java8 8(2¥
]org.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>).VTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java8 8(2ö
Ljava.util.concurrent.FutureTask.FutureTask(java.util.concurrent.Callable<V>)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java8! 8(-2≤
dorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)!callableCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java8. 8(6€
dorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)!callable	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java.6 .(>"
typeCallable<V>"
isFinalfalse"M
declarationString8Callable<<mark class="type-parameter">V</mark>> callable*callable2k
java.util.concurrent.CallableTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java.* .(22¥
]org.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>).VTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java.3 .(4Ë
iorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?e@50.31:50.32VARIABLED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java2 2( "
type	Exception"
isFinalfalse" 
declarationStringException e*e2a
java.lang.ExceptionTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java2 2(ﬁ
iorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>)?e@62.59:62.60VARIABLED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java>; >(<"1
type)InterruptedException | ExecutionException"
isFinalfalse"@
declarationString+InterruptedException | ExecutionException e*e2ñ
Hjava.lang.InterruptedException | java.util.concurrent.ExecutionExceptionTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java> >(:∏
]org.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.util.concurrent.Callable<V>).VTYPE_PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java. .(*VÁ
Torg.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)METHODD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaJ J(/"
isFinalfalse"»
declarationString≤<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">runAndWaitInJavaFXThread</mark>(Runnable action)"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*runAndWaitInJavaFXThread2q
#java.util.Objects.requireNonNull(T)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaK K(2f
java.lang.Runnable.run()CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaO O(2f
java.lang.Runnable.run()CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaW W(2}
/java.util.concurrent.CountDownLatch.countDown()CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaY Y(#2y
+java.util.concurrent.CountDownLatch.await()CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java^ ^(2Ö
7java.util.concurrent.CountDownLatch.CountDownLatch(int)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaT- T(;2©
[org.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)!actionCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaK K(%2©
[org.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)!actionCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaO O(2©
[org.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)!actionCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaW W(2∏
jorg.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)?doneLatch@84.29:84.38CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaY Y(2∏
jorg.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)?doneLatch@84.29:84.38CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java^ ^(2à
:org.jabref.gui.util.DefaultTaskExecutor?LOGGER@30.32:30.38CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java` `(2∞
borg.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)?e@95.38:95.39CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java`D `(E2Æ
[org.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)!action	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaJ9 J(?2ø
jorg.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)?doneLatch@84.29:84.38DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaT T(&2∑
borg.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)?e@95.38:95.39DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java_& _('2Y
voidRETURN_TYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaJ J(ï
jorg.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)?doneLatch@84.29:84.38VALUED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaT T(&"
typeCountDownLatch"
isFinaltrue"™
declarationStringî<mark class="modifier"> </mark><mark class="modifier">final </mark>CountDownLatch <mark class="class-field">doneLatch</mark> = new CountDownLatch(1)*	doneLatch2q
#java.util.concurrent.CountDownLatchTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaT T(2Ö
7java.util.concurrent.CountDownLatch.CountDownLatch(int)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaT- T(;‚
[org.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)!action	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaJ9 J(?"
typeRunnable"
isFinalfalse"$
declarationStringRunnable action*action2`
java.lang.RunnableTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaJ0 J(8Ç
borg.jabref.gui.util.DefaultTaskExecutor.runAndWaitInJavaFXThread(java.lang.Runnable)?e@95.38:95.39VARIABLED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java_& _('"
typeInterruptedException"
isFinalfalse"+
declarationStringInterruptedException e*e2l
java.lang.InterruptedExceptionTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java_ _(%˝
Morg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.lang.Runnable)METHODD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javad d(("
isFinalfalse"√
declarationString≠<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">runInJavaFXThread</mark>(Runnable runnable)"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*runInJavaFXThread2§
Vorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.lang.Runnable)!runnableCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javae e("2©
Vorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.lang.Runnable)!runnable	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javad2 d(:2Y
voidRETURN_TYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javad d(·
Vorg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.lang.Runnable)!runnable	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javad2 d(:"
typeRunnable"
isFinalfalse"&
declarationStringRunnable runnable*runnable2`
java.lang.RunnableTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javad) d(1·
Vorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)METHODD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai i( "
isFinalfalse"∫
declarationString§<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Future&lt;V&gt; <mark class="method">execute</mark>(BackgroundTask&lt;V&gt; task)"
isStaticfalse"
accesspublic"

isAbstractfalse"
type	Future<V>*execute2™
\org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaj j(*2}
/org.jabref.gui.util.BackgroundTask.showToUser()CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javak k(2Ω
oorg.jabref.gui.StateManager.addBackgroundTask(org.jabref.gui.util.BackgroundTask<?>, javafx.concurrent.Task<?>)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javal l(*2ò
Jorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javan n(2©
[org.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaj+ j(/2©
[org.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javak k(2é
@org.jabref.gui.util.DefaultTaskExecutor?stateManager@36.31:36.43CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javal l(2©
[org.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javal+ l(/2Ω
oorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?javafxTask@106.16:106.26CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javal1 l(;2Ω
oorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?javafxTask@106.16:106.26CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javan n(!2°
Oorg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)OVERRIDED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai i( 2Æ
[org.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!task	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai3 i(72ƒ
oorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?javafxTask@106.16:106.26DECLARATIOND
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaj j(2p
java.util.concurrent.FutureRETURN_TYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai i(2∂
Xorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VRETURN_TYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai i(2∞
Xorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai i(‡
oorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?javafxTask@106.16:106.26VARIABLED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaj j("
typeTask<V>"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Task<V> <mark class="class-field">javafxTask</mark> = getJavaFXTask(task)*
javafxTask2d
javafx.concurrent.TaskTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaj j(2Ø
Xorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaj j(2™
\org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaj j(*2©
[org.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaj+ j(/÷
[org.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!task	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai3 i(7"
typeBackgroundTask<V>"
isFinalfalse"O
declarationString:BackgroundTask<<mark class="type-parameter">V</mark>> task*task2p
"org.jabref.gui.util.BackgroundTaskTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai! i(/2Ø
Xorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai0 i(1≥
Xorg.jabref.gui.util.DefaultTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javai i(*VÖ
Jorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>)METHODD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar r( "
isFinalfalse"∞
declarationStringö<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Future&lt;V&gt; <mark class="method">execute</mark>(Task&lt;V&gt; task)"
isStaticfalse"
accesspublic"

isAbstractfalse"
type	Future<V>*execute2ä
<org.jabref.gui.util.DefaultTaskExecutor?executor@32.34:32.42CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javas s(2ù
Oorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>)!taskCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javas s(2ù
Oorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>)!taskCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javat t(2ï
Corg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>)OVERRIDED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar r( 2¢
Oorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>)!task	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar) r(-2p
java.util.concurrent.FutureRETURN_TYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar r(2™
Lorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>).VRETURN_TYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar r(2§
Lorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>).VTYPE_PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar r(û
Oorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>)!task	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar) r(-"
typeTask<V>"
isFinalfalse"E
declarationString0Task<<mark class="type-parameter">V</mark>> task*task2d
javafx.concurrent.TaskTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar! r(%2£
Lorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>).VTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar& r('ß
Lorg.jabref.gui.util.DefaultTaskExecutor.execute(javafx.concurrent.Task<V>).VTYPE_PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javar r(*Vˇ
|org.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)METHODD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax x(!"
isFinalfalse"Ï
declarationString÷<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Future&lt;?&gt; <mark class="method">schedule</mark>(BackgroundTask&lt;V&gt; task<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">long</mark> delay<mark class="modifier"><mark class="modifier">,</mark></mark> TimeUnit unit)"
isStaticfalse"
accesspublic"

isAbstractfalse"
type	Future<?>*schedule2™
\org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javay* y(72ì
Eorg.jabref.gui.util.DefaultTaskExecutor?scheduledExecutor@33.43:33.60CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javay y( 2–
Åorg.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!taskCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javay8 y(<2—
Çorg.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!delayCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javay? y(D2–
Åorg.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!unitCALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javayF y(J2«
uorg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)OVERRIDED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax x(!2’
Åorg.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!task	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax4 x(82÷
Çorg.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!delay	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax? x(D2’
Åorg.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!unit	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaxO x(S2p
java.util.concurrent.FutureRETURN_TYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax x(2÷
~org.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit).VTYPE_PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax x(£
Åorg.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!task	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax4 x(8"
typeBackgroundTask<V>"
isFinalfalse"O
declarationString:BackgroundTask<<mark class="type-parameter">V</mark>> task*task2p
"org.jabref.gui.util.BackgroundTaskTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax" x(02’
~org.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit).VTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax1 x(2ê
Çorg.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!delay	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax? x(D"
typelong"
isFinalfalse"=
declarationString(<mark class="modifier">long</mark> delay*delay2R
longTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax: x(>ê
Åorg.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!unit	PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaxO x(S"
typeTimeUnit"
isFinalfalse""
declarationStringTimeUnit unit*unit2k
java.util.concurrent.TimeUnitTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaxF x(NŸ
~org.jabref.gui.util.DefaultTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit).VTYPE_PARAMETERD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javax x(*Vñ
2org.jabref.gui.util.DefaultTaskExecutor.shutdown()METHODF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÄ Ä("
isFinalfalse"≤
declarationStringú<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">shutdown</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*shutdown2Ä
0org.jabref.gui.StateManager.getBackgroundTasks()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÅ Å('2Ç
2java.util.concurrent.ExecutorService.shutdownNow()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÇ Ç(2Ç
2java.util.concurrent.ExecutorService.shutdownNow()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÉ É(%2¢
Rjava.util.WeakHashMap.forEach(java.util.function.BiConsumer<? super K, ? super V>)CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÑ Ñ(2É
3org.jabref.logic.util.DelayTaskThrottler.shutdown()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÑ; Ñ(C2ê
@org.jabref.gui.util.DefaultTaskExecutor?stateManager@36.31:36.43CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÅ Å(2ï
Eorg.jabref.gui.util.DefaultTaskExecutor.shutdown()?task@129.58:129.62CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÅC Å(G2å
<org.jabref.gui.util.DefaultTaskExecutor?executor@32.34:32.42CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÇ Ç(2ï
Eorg.jabref.gui.util.DefaultTaskExecutor?scheduledExecutor@33.43:33.60CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÉ É(2é
>org.jabref.gui.util.DefaultTaskExecutor?throttlers@34.56:34.66CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÑ Ñ(2ö
Jorg.jabref.gui.util.DefaultTaskExecutor.shutdown()?throttler@132.28:132.37CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÑ1 Ñ(:2
+org.jabref.gui.util.TaskExecutor.shutdown()OVERRIDEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÄ Ä(2ú
Eorg.jabref.gui.util.DefaultTaskExecutor.shutdown()?task@129.58:129.62DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÅ: Å(>2°
Jorg.jabref.gui.util.DefaultTaskExecutor.shutdown()?throttler@132.28:132.37DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÑ Ñ(%2ù
Forg.jabref.gui.util.DefaultTaskExecutor.shutdown()?aVoid@132.39:132.44DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÑ' Ñ(,2[
voidRETURN_TYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÄ Ä(›
Eorg.jabref.gui.util.DefaultTaskExecutor.shutdown()?task@129.58:129.62VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÅ: Å(>"
type"
isFinalfalse"
declarationString task*task2TYPEÏ
Jorg.jabref.gui.util.DefaultTaskExecutor.shutdown()?throttler@132.28:132.37VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÑ Ñ(%"
type"
isFinalfalse"
declarationString
 throttler*	throttler2TYPE‡
Forg.jabref.gui.util.DefaultTaskExecutor.shutdown()?aVoid@132.39:132.44VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaÑ' Ñ(,"
type"
isFinalfalse"
declarationString aVoid*aVoid2TYPEß
<org.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)METHODF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaà à(-"
isFinalfalse"–
declarationString∫<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>DelayTaskThrottler <mark class="method">createThrottler</mark>(<mark class="modifier">int</mark> delay)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeDelayTaskThrottler*createThrottler2o
java.util.WeakHashMap.put(K, V)CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaä ä(2ê
@org.jabref.logic.util.DelayTaskThrottler.DelayTaskThrottler(int)CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaâ+ â(=2í
Borg.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)!delayCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaâ> â(C2é
>org.jabref.gui.util.DefaultTaskExecutor?throttlers@34.56:34.66CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaä ä(2§
Torg.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)?throttler@137.27:137.36CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaä ä( 2§
Torg.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)?throttler@137.27:137.36CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaã ã(2â
5org.jabref.gui.util.TaskExecutor.createThrottler(int)OVERRIDEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaà à(-2ó
Borg.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)!delay	PARAMETERF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaà2 à(72´
Torg.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)?throttler@137.27:137.36DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaâ â($2
(org.jabref.logic.util.DelayTaskThrottlerRETURN_TYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaà à(ó
Torg.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)?throttler@137.27:137.36VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaâ â($"
typeDelayTaskThrottler"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>DelayTaskThrottler <mark class="class-field">throttler</mark> = new DelayTaskThrottler(delay)*	throttler2x
(org.jabref.logic.util.DelayTaskThrottlerTYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaâ â(2ê
@org.jabref.logic.util.DelayTaskThrottler.DelayTaskThrottler(int)CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaâ+ â(=2í
Borg.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)!delayCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaâ> â(C–
Borg.jabref.gui.util.DefaultTaskExecutor.createThrottler(int)!delay	PARAMETERF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaà2 à(7"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> delay*delay2S
intTYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaà. à(1 K
\org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)METHODF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé é(%"
isFinalfalse"ê
declarationString{<mark class="modifier">private </mark>Task&lt;V&gt; <mark class="method">getJavaFXTask</mark>(BackgroundTask&lt;V&gt; task)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeTask<V>*getJavaFXTask2Ñ
4org.jabref.gui.util.BackgroundTask.messageProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaë( ë(72Ç
2org.jabref.gui.util.BackgroundTask.titleProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaí& í(32Ö
5org.jabref.gui.util.BackgroundTask.progressProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaì4 ì(D2Ñ
4org.jabref.gui.util.BackgroundTask.messageProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaî4 î(C2Ç
2org.jabref.gui.util.BackgroundTask.titleProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaï4 ï(A2á
7org.jabref.gui.util.BackgroundTask.isCanceledProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javañ4 ñ(F2{
+org.jabref.gui.util.BackgroundTask.cancel()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaõ- õ(32y
)org.jabref.gui.util.BackgroundTask.call()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java† †( 2Å
1org.jabref.gui.util.BackgroundTask.getOnRunning()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java£" £(.2h
java.lang.Runnable.run()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java•5 •(82Å
1org.jabref.gui.util.BackgroundTask.getOnSuccess()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaß% ß(12É
3org.jabref.gui.util.BackgroundTask.getOnException()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java´/ ´(=2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaë# ë('2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaí! í(%2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaì/ ì(32√
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?progress@147.72:147.80CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaìc ì(k2ƒ
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?progress@147.72:147.80CALLG
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaìx ì(Ä2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaî/ î(32±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaï/ ï(32±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javañ/ ñ(32ƒ
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?cancelled@150.74:150.83CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaó ó(!2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaõ( õ(,2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java† †(2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java£ £(!2ƒ
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onRunning@163.17:163.26CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java§ §(2√
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?javaTask@143.16:143.24CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java• •(2ƒ
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onRunning@163.17:163.26CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java•+ •(42±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaß  ß($2ƒ
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onSuccess@167.20:167.29CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java® ®(2√
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?javaTask@143.16:143.24CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java© ©(2ƒ
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onSuccess@167.20:167.29CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java©- ©(62√
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?javaTask@143.16:143.24CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java©> ©(F2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java´* ´(.2∆
vorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onException@171.28:171.39CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java¨ ¨(2√
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?javaTask@143.16:143.24CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≠ ≠(2∆
vorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onException@171.28:171.39CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≠* ≠(52√
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?javaTask@143.16:143.24CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≠P ≠(X2√
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?javaTask@143.16:143.24CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaØ Ø(2∂
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!task	PARAMETERF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé8 é(<2 
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?javaTask@143.16:143.24DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaè è(2À
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onRunning@163.17:163.26DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java£ £(2À
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onSuccess@167.20:167.29DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaß ß(2Õ
vorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onException@171.28:171.39DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java´ ´('2 
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?progress@147.72:147.80DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaìH ì(P2À
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?cancelled@150.74:150.83DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javañJ ñ(S2«
porg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?event@155.31:155.36DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaõ õ($2«
porg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?event@165.34:165.39DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java•" •('2«
porg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?event@169.36:169.41DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java©$ ©()2«
porg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?event@173.33:173.38DECLARATIONF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≠! ≠(&2m
javafx.concurrent.TaskRETURN_TYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé é(2æ
^org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>).VRETURN_TYPE_ARGUMENTF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé é(2∏
^org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>).VTYPE_PARAMETERF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé é(∏%
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?javaTask@143.16:143.24VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaè è("
typeTask<V>"
isFinalfalse"â	
declarationStringÛ<mark class="modifier"> </mark>Task<V> <mark class="class-field">javaTask</mark> = new Task<V>() {

    {
        <mark class="modifier">this</mark>.updateMessage(task.messageProperty().get());
        <mark class="modifier">this</mark>.updateTitle(task.titleProperty().get());
        BindingsHelper.subscribeFuture(task.progressProperty()<mark class="modifier">,</mark> progress -> updateProgress(progress.workDone()<mark class="modifier">,</mark> progress.max()));
        BindingsHelper.subscribeFuture(task.messageProperty()<mark class="modifier">,</mark> <mark class="modifier">this</mark>::updateMessage);
        BindingsHelper.subscribeFuture(task.titleProperty()<mark class="modifier">,</mark> <mark class="modifier">this</mark>::updateTitle);
        BindingsHelper.subscribeFuture(task.isCanceledProperty()<mark class="modifier">,</mark> cancelled -> {
            if (cancelled) {
                cancel();
            }
        });
        setOnCancelled(event -> task.cancel());
    }

    @Override
    public V call() <mark class="modifier">throws</mark> Exception {
        return task.call();
    }
}*javaTask2f
javafx.concurrent.TaskTYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaè è(2∑
^org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>).VTYPE_ARGUMENTF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaè è(2Ñ
4org.jabref.gui.util.BackgroundTask.messageProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaë( ë(72Ç
2org.jabref.gui.util.BackgroundTask.titleProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaí& í(32Ö
5org.jabref.gui.util.BackgroundTask.progressProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaì4 ì(D2Ñ
4org.jabref.gui.util.BackgroundTask.messageProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaî4 î(C2Ç
2org.jabref.gui.util.BackgroundTask.titleProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaï4 ï(A2á
7org.jabref.gui.util.BackgroundTask.isCanceledProperty()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javañ4 ñ(F2{
+org.jabref.gui.util.BackgroundTask.cancel()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaõ- õ(32y
)org.jabref.gui.util.BackgroundTask.call()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java† †( 2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaë# ë('2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaí! í(%2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaì/ ì(32√
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?progress@147.72:147.80CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaìc ì(k2ƒ
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?progress@147.72:147.80CALLG
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaìx ì(Ä2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaî/ î(32±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaï/ ï(32±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javañ/ ñ(32ƒ
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?cancelled@150.74:150.83CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaó ó(!2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaõ( õ(,2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java† †(í
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onRunning@163.17:163.26VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java£ £("
typeRunnable"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Runnable <mark class="class-field">onRunning</mark> = task.getOnRunning()*	onRunning2b
java.lang.RunnableTYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java£ £(2Å
1org.jabref.gui.util.BackgroundTask.getOnRunning()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java£" £(.2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java£ £(!‹
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onSuccess@167.20:167.29VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaß ß("
typeConsumer<V>"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>Consumer<V> <mark class="class-field">onSuccess</mark> = task.getOnSuccess()*	onSuccess2k
java.util.function.ConsumerTYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaß ß(2∑
^org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>).VTYPE_ARGUMENTF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaß ß(2Å
1org.jabref.gui.util.BackgroundTask.getOnSuccess()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaß% ß(12±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaß  ß($™
vorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?onException@171.28:171.39VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java´ ´('"
typeConsumer<Exception>"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>Consumer<Exception> <mark class="class-field">onException</mark> = task.getOnException()*onException2k
java.util.function.ConsumerTYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java´ ´(2l
java.lang.ExceptionTYPE_ARGUMENTF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java´ ´(2É
3org.jabref.gui.util.BackgroundTask.getOnException()CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java´/ ´(=2±
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!taskCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java´* ´(.Ë
aorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)!task	PARAMETERF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé8 é(<"
typeBackgroundTask<V>"
isFinalfalse"O
declarationString:BackgroundTask<<mark class="type-parameter">V</mark>> task*task2r
"org.jabref.gui.util.BackgroundTaskTYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé& é(42∑
^org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>).VTYPE_ARGUMENTF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé5 é(6ì
sorg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?progress@147.72:147.80VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaìH ì(P"
type"
isFinalfalse"
declarationString	 progress*progress2TYPEñ
torg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?cancelled@150.74:150.83VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javañJ ñ(S"
type"
isFinalfalse"
declarationString
 cancelled*	cancelled2TYPEä
porg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?event@155.31:155.36VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaõ õ($"
type"
isFinalfalse"
declarationString event*event2TYPEä
porg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?event@165.34:165.39VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java•" •('"
type"
isFinalfalse"
declarationString event*event2TYPEä
porg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?event@169.36:169.41VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java©$ ©()"
type"
isFinalfalse"
declarationString event*event2TYPEä
porg.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>)?event@173.33:173.38VARIABLEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≠! ≠(&"
type"
isFinalfalse"
declarationString event*event2TYPEª
^org.jabref.gui.util.DefaultTaskExecutor.getJavaFXTask(org.jabref.gui.util.BackgroundTask<V>).VTYPE_PARAMETERF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.javaé é(*Vö	
Oorg.jabref.gui.util.DefaultTaskExecutor.convertToException(java.lang.Throwable)METHODF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≤ ≤(("
isFinalfalse"à
declarationStrings<mark class="modifier">private </mark>Exception <mark class="method">convertToException</mark>(Throwable throwable)"
isStaticfalse"
accessprivate"

isAbstractfalse"
type	Exception*convertToException2Ç
2java.lang.Exception.Exception(java.lang.Throwable)CALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java∂ ∂( 2©
Yorg.jabref.gui.util.DefaultTaskExecutor.convertToException(java.lang.Throwable)!throwableCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≥ ≥(2©
Yorg.jabref.gui.util.DefaultTaskExecutor.convertToException(java.lang.Throwable)!throwableCALLF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java∂! ∂(*2Æ
Yorg.jabref.gui.util.DefaultTaskExecutor.convertToException(java.lang.Throwable)!throwable	PARAMETERF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≤3 ≤(<2j
java.lang.ExceptionRETURN_TYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≤ ≤(Ì
Yorg.jabref.gui.util.DefaultTaskExecutor.convertToException(java.lang.Throwable)!throwable	PARAMETERF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≤3 ≤(<"
type	Throwable"
isFinalfalse"(
declarationStringThrowable throwable*	throwable2c
java.lang.ThrowableTYPEF
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java≤) ≤(2£
:org.jabref.gui.util.DefaultTaskExecutor?LOGGER@30.32:30.38VALUED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java  (&"
isFinaltrue"
typeLogger"È
declarationString”<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(DefaultTaskExecutor.class);"
isStatictrue"
accessprivate*LOGGER2^
org.slf4j.LoggerTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java (ü
<org.jabref.gui.util.DefaultTaskExecutor?executor@32.34:32.42VALUED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java "  (*"
isFinaltrue"
typeExecutorService"º
declarationString¶<mark class="modifier">private </mark><mark class="modifier">final </mark>ExecutorService <mark class="class-field">executor</mark> = Executors.newFixedThreadPool(5);"
isStaticfalse"
accessprivate*executor2r
$java.util.concurrent.ExecutorServiceTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java   (!2Ñ
6java.util.concurrent.Executors.newFixedThreadPool(int)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java 7  (I›
Eorg.jabref.gui.util.DefaultTaskExecutor?scheduledExecutor@33.43:33.60VALUED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java!+ !(<"
isFinaltrue" 
typeScheduledExecutorService"“
declarationStringº<mark class="modifier">private </mark><mark class="modifier">final </mark>ScheduledExecutorService <mark class="class-field">scheduledExecutor</mark> = Executors.newScheduledThreadPool(2);"
isStaticfalse"
accessprivate*scheduledExecutor2{
-java.util.concurrent.ScheduledExecutorServiceTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java! !(*2à
:java.util.concurrent.Executors.newScheduledThreadPool(int)CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java!I !(_ä
>org.jabref.gui.util.DefaultTaskExecutor?throttlers@34.56:34.66VALUED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java"8 "(B"
isFinaltrue"-
type%WeakHashMap<DelayTaskThrottler, Void>"»
declarationString≤<mark class="modifier">private </mark><mark class="modifier">final </mark>WeakHashMap<DelayTaskThrottler, Void> <mark class="class-field">throttlers</mark> = new WeakHashMap<>();"
isStaticfalse"
accessprivate*
throttlers2c
java.util.WeakHashMapTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java" "(2e
java.lang.VoidTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java" "(02
(org.jabref.logic.util.DelayTaskThrottlerTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java"2 "(62q
#java.util.WeakHashMap.WeakHashMap()CALLD
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java"I "(VÚ
@org.jabref.gui.util.DefaultTaskExecutor?stateManager@36.31:36.43VALUED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java$ $(+"
isFinaltrue"
typeStateManager"ö
declarationStringÑ<mark class="modifier">private </mark><mark class="modifier">final </mark>StateManager <mark class="class-field">stateManager</mark>"
isStaticfalse"
accessprivate*stateManager2i
org.jabref.gui.StateManagerTYPED
:src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java$ $(