
3src\main\java\org\jabref\gui\util\TaskExecutor.java–
 org.jabref.gui.util.TaskExecutorTRAIT=
3src\main\java\org\jabref\gui\util\TaskExecutor.java ("
packageorg.jabref.gui.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"n
declarationStringY<mark class="modifier">public </mark><mark class="modifier">interface </mark>TaskExecutor"
accesspublic*TaskExecutor2ù
Oorg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)DECLARATION=
3src\main\java\org\jabref\gui\util\TaskExecutor.java (2ë
Corg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>)DECLARATION=
3src\main\java\org\jabref\gui\util\TaskExecutor.java   (2√
uorg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)DECLARATION=
3src\main\java\org\jabref\gui\util\TaskExecutor.java, ,(2y
+org.jabref.gui.util.TaskExecutor.shutdown()DECLARATION=
3src\main\java\org\jabref\gui\util\TaskExecutor.java1	 1(2É
5org.jabref.gui.util.TaskExecutor.createThrottler(int)DECLARATION=
3src\main\java\org\jabref\gui\util\TaskExecutor.java6 6(&Ô
Oorg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)METHOD=
3src\main\java\org\jabref\gui\util\TaskExecutor.java ("
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>Future&lt;V&gt; <mark class="method">execute</mark>(BackgroundTask&lt;V&gt; task)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
type	Future<V>*execute2†
Torg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!task	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java, (02i
java.util.concurrent.FutureRETURN_TYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java (2®
Qorg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VRETURN_TYPE_ARGUMENT=
3src\main\java\org\jabref\gui\util\TaskExecutor.java (2¢
Qorg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java (≥
Torg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!task	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java, (0"
typeBackgroundTask<V>"
isFinalfalse"O
declarationString:BackgroundTask<<mark class="type-parameter">V</mark>> task*task2i
"org.jabref.gui.util.BackgroundTaskTYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java ((2°
Qorg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_ARGUMENT=
3src\main\java\org\jabref\gui\util\TaskExecutor.java) (*•
Qorg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java (*V¥
Corg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>)METHOD=
3src\main\java\org\jabref\gui\util\TaskExecutor.java   ("
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>Future&lt;V&gt; <mark class="method">execute</mark>(Task&lt;V&gt; task)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
type	Future<V>*execute2î
Horg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>)!task	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java "  (&2i
java.util.concurrent.FutureRETURN_TYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java   (2ú
Eorg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>).VRETURN_TYPE_ARGUMENT=
3src\main\java\org\jabref\gui\util\TaskExecutor.java   (2ñ
Eorg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>).VTYPE_PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java   (˚
Horg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>)!task	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java "  (&"
typeTask<V>"
isFinalfalse"E
declarationString0Task<<mark class="type-parameter">V</mark>> task*task2]
javafx.concurrent.TaskTYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java   (2ï
Eorg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>).VTYPE_ARGUMENT=
3src\main\java\org\jabref\gui\util\TaskExecutor.java   ( ô
Eorg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>).VTYPE_PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java   (*V˝
uorg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)METHOD=
3src\main\java\org\jabref\gui\util\TaskExecutor.java, ,("
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>Future&lt;?&gt; <mark class="method">schedule</mark>(BackgroundTask&lt;V&gt; task<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">long</mark> delay<mark class="modifier"><mark class="modifier">,</mark></mark> TimeUnit unit)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
type	Future<?>*schedule2∆
zorg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!task	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java,- ,(12«
{org.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!delay	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java,8 ,(=2∆
zorg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!unit	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java,H ,(L2i
java.util.concurrent.FutureRETURN_TYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java, ,(2»
worg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit).VTYPE_PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java, ,(ˇ
zorg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!task	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java,- ,(1"
typeBackgroundTask<V>"
isFinalfalse"O
declarationString:BackgroundTask<<mark class="type-parameter">V</mark>> task*task2i
"org.jabref.gui.util.BackgroundTaskTYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java, ,()2«
worg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit).VTYPE_ARGUMENT=
3src\main\java\org\jabref\gui\util\TaskExecutor.java,* ,(+˙
{org.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!delay	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java,8 ,(="
typelong"
isFinalfalse"=
declarationString(<mark class="modifier">long</mark> delay*delay2K
longTYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java,3 ,(7˙
zorg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!unit	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java,H ,(L"
typeTimeUnit"
isFinalfalse""
declarationStringTimeUnit unit*unit2d
java.util.concurrent.TimeUnitTYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java,? ,(GÀ
worg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit).VTYPE_PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java, ,(*V¥
+org.jabref.gui.util.TaskExecutor.shutdown()METHOD=
3src\main\java\org\jabref\gui\util\TaskExecutor.java1	 1("
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">shutdown</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*shutdown2R
voidRETURN_TYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java1 1(°
5org.jabref.gui.util.TaskExecutor.createThrottler(int)METHOD=
3src\main\java\org\jabref\gui\util\TaskExecutor.java6 6(&"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>DelayTaskThrottler <mark class="method">createThrottler</mark>(<mark class="modifier">int</mark> delay)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeDelayTaskThrottler*createThrottler2á
;org.jabref.gui.util.TaskExecutor.createThrottler(int)!delay	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java6+ 6(02v
(org.jabref.logic.util.DelayTaskThrottlerRETURN_TYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java6 6(∑
;org.jabref.gui.util.TaskExecutor.createThrottler(int)!delay	PARAMETER=
3src\main\java\org\jabref\gui\util\TaskExecutor.java6+ 6(0"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> delay*delay2J
intTYPE=
3src\main\java\org\jabref\gui\util\TaskExecutor.java6' 6(*