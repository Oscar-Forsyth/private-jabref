
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaÈ
'org.jabref.gui.util.FileFilterConverterCLASSD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java ( "
packageorg.jabref.gui.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"q
declarationString\<mark class="modifier">public </mark><mark class="modifier">class </mark>FileFilterConverter"
accesspublic*FileFilterConverter2í
=org.jabref.gui.util.FileFilterConverter.FileFilterConverter()DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java (2Æ
Yorg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java. (?2¿
korg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java". "(?2Ì
óorg.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java&% &(02Ì
óorg.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java*% *(02≈
porg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java.. .(=2–
{org.jabref.gui.util.FileFilterConverter.importerToExtensionFilter(java.util.Collection<org.jabref.logic.importer.Importer>)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java74 7(M2–
{org.jabref.gui.util.FileFilterConverter.exporterToExtensionFilter(java.util.Collection<org.jabref.logic.exporter.Exporter>)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java=4 =(M2≥
^org.jabref.gui.util.FileFilterConverter.toFileFilter(javafx.stage.FileChooser.ExtensionFilter)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaC C()2´
Vorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaG G()2™
Uorg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaR R(*2ë
<org.jabref.gui.util.FileFilterConverter?ANY_FILE@23.46:23.54DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java. (6ì
=org.jabref.gui.util.FileFilterConverter.FileFilterConverter()CONSTRUCTORD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java ("l
declarationStringW<mark class="modifier">private </mark><mark class="method">FileFilterConverter</mark>()*FileFilterConverter2|
'org.jabref.gui.util.FileFilterConverterRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java (∏
Yorg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java. (?"
isFinalfalse"º
declarationString¶<mark class="modifier">public </mark><mark class="modifier">static </mark>FileChooser.ExtensionFilter <mark class="method">toExtensionFilter</mark>(FileType fileType)"
isStatictrue"
accesspublic"

isAbstractfalse"#
typeFileChooser.ExtensionFilter*toExtensionFilter2±
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java! (%2é
@org.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java5 (T2ú
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java* (.2v
(org.jabref.logic.util.FileType.getName()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaH (O2é
@org.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaE (d2∞
borg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)!fileTypeCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java, (42∞
borg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)!fileTypeCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java? (G2º
norg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)?fileList@29.15:29.23CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS ([2ø
qorg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)?description@30.15:30.26CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/ (:2∞
borg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)!fileTypeCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java< (D2µ
borg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)!fileType	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaI (Q2√
norg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)?fileList@29.15:29.23DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java (2∆
qorg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)?description@30.15:30.26DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java (2}
(javafx.stage.FileChooser.ExtensionFilterRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java (-®
norg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)?fileList@29.15:29.23VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java ("
typeString"
isFinalfalse"·
declarationStringÀ<mark class="modifier"> </mark>String <mark class="class-field">fileList</mark> = String.join("<mark class="modifier">,</mark> "<mark class="modifier">,</mark> fileType.getExtensionsWithAsteriskAndDot())*fileList2^
java.lang.StringTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java (2±
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java! (%2é
@org.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java5 (T2∞
borg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)!fileTypeCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java, (4ƒ	
qorg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)?description@30.15:30.26VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java ("
typeString"
isFinalfalse"Ê
declarationString–<mark class="modifier"> </mark>String <mark class="class-field">description</mark> = Localization.lang("%0 file (%1)"<mark class="modifier">,</mark> fileType.getName()<mark class="modifier">,</mark> fileList)*description2^
java.lang.StringTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java (2ú
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java* (.2v
(org.jabref.logic.util.FileType.getName()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaH (O2∞
borg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)!fileTypeCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java? (G2º
norg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)?fileList@29.15:29.23CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS ([˘
borg.jabref.gui.util.FileFilterConverter.toExtensionFilter(org.jabref.logic.util.FileType)!fileType	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaI (Q"
typeFileType"
isFinalfalse"&
declarationStringFileType fileType*fileType2l
org.jabref.logic.util.FileTypeTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java@ (HÅ
korg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java". "(?"
isFinalfalse"å
declarationStringˆ<mark class="modifier">public </mark><mark class="modifier">static </mark>FileChooser.ExtensionFilter <mark class="method">toExtensionFilter</mark>(String description<mark class="modifier"><mark class="modifier">,</mark></mark> FileType fileType)"
isStatictrue"
accesspublic"

isAbstractfalse"#
typeFileChooser.ExtensionFilter*toExtensionFilter2é
@org.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java#E #(d2≈
worg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)!descriptionCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java#/ #(:2¬
torg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)!fileTypeCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java#< #(D2 
worg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)!description	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java"G "(R2«
torg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)!fileType	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java"] "(e2}
(javafx.stage.FileChooser.ExtensionFilterRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java" "(-Ç
worg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)!description	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java"G "(R"
typeString"
isFinalfalse"'
declarationStringString description*description2^
java.lang.StringTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java"@ "(Fã
torg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)!fileType	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java"] "(e"
typeFileType"
isFinalfalse"&
declarationStringFileType fileType*fileType2l
org.jabref.logic.util.FileTypeTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java"T "(\‡
óorg.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java&% &(0"
isFinalfalse"Ø
declarationStringô<mark class="modifier">public </mark><mark class="modifier">static </mark>Optional&lt;Importer&gt; <mark class="method">getImporter</mark>(FileChooser.ExtensionFilter extensionFilter<mark class="modifier"><mark class="modifier">,</mark></mark> Collection&lt;Importer&gt; importers)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOptional<Importer>*getImporter2ï
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java'" '((2k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java' '(2z
,org.jabref.logic.importer.Importer.getName()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java'> '(E2
°org.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)!importersCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java' '(2˚
¨org.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)?importer@39.41:39.49CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java'5 '(=2ˆ
ßorg.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)!extensionFilterCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java'O '(^2˚
ßorg.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)!extensionFilter	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java&M &(\2ı
°org.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)!importers	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java&s &(|2Ç
¨org.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)?importer@39.41:39.49DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java') '(12g
java.util.OptionalRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java& &(2Ä
"org.jabref.logic.importer.ImporterRETURN_TYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java& &(#˝
ßorg.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)!extensionFilter	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java&M &(\"#
typeFileChooser.ExtensionFilter"
isFinalfalse"@
declarationString+FileChooser.ExtensionFilter extensionFilter*extensionFilter2v
(javafx.stage.FileChooser.ExtensionFilterTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java&= &(Lƒ
°org.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)!importers	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java&s &(|"
typeCollection<Importer>"
isFinalfalse"3
declarationStringCollection<Importer> importers*	importers2b
java.util.CollectionTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java&^ &(h2y
"org.jabref.logic.importer.ImporterTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java&i &(qÀ
¨org.jabref.gui.util.FileFilterConverter.getImporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.importer.Importer>)?importer@39.41:39.49VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java') '(1"
type"
isFinalfalse"
declarationString	 importer*importer2TYPE‡
óorg.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java*% *(0"
isFinalfalse"Ø
declarationStringô<mark class="modifier">public </mark><mark class="modifier">static </mark>Optional&lt;Exporter&gt; <mark class="method">getExporter</mark>(FileChooser.ExtensionFilter extensionFilter<mark class="modifier"><mark class="modifier">,</mark></mark> Collection&lt;Exporter&gt; exporters)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOptional<Exporter>*getExporter2ï
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java+" +((2k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java+ +(2z
,org.jabref.logic.exporter.Exporter.getName()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java+> +(E2
°org.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)!exportersCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java+ +(2˚
¨org.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)?exporter@43.41:43.49CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java+5 +(=2ˆ
ßorg.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)!extensionFilterCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java+O +(^2˚
ßorg.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)!extensionFilter	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java*M *(\2ı
°org.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)!exporters	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java*s *(|2Ç
¨org.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)?exporter@43.41:43.49DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java+) +(12g
java.util.OptionalRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java* *(2Ä
"org.jabref.logic.exporter.ExporterRETURN_TYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java* *(#˝
ßorg.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)!extensionFilter	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java*M *(\"#
typeFileChooser.ExtensionFilter"
isFinalfalse"@
declarationString+FileChooser.ExtensionFilter extensionFilter*extensionFilter2v
(javafx.stage.FileChooser.ExtensionFilterTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java*= *(Lƒ
°org.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)!exporters	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java*s *(|"
typeCollection<Exporter>"
isFinalfalse"3
declarationStringCollection<Exporter> exporters*	exporters2b
java.util.CollectionTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java*^ *(h2y
"org.jabref.logic.exporter.ExporterTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java*i *(qÀ
¨org.jabref.gui.util.FileFilterConverter.getExporter(javafx.stage.FileChooser.ExtensionFilter, java.util.Collection<org.jabref.logic.exporter.Exporter>)?exporter@43.41:43.49VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java+) +(1"
type"
isFinalfalse"
declarationString	 exporter*exporter2TYPE—
porg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java.. .(="
isFinalfalse"Ã
declarationString∂<mark class="modifier">public </mark><mark class="modifier">static </mark>FileChooser.ExtensionFilter <mark class="method">forAllImporters</mark>(SortedSet&lt;Importer&gt; importers)"
isStatictrue"
accesspublic"

isAbstractfalse"#
typeFileChooser.ExtensionFilter*forAllImporters2ö
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/Q /(X2û
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/6 /(92k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/- /(32r
$java.util.stream.Collectors.toList()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/d /(j2ö
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java20 2(72≈
wjava.util.stream.Stream.flatMap(java.util.function.Function<? super T, ? extends java.util.stream.Stream<? extends R>>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java10 1(72k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java00 0(62k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java1g 1(m2é
@org.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java1E 1(d2r
$java.util.stream.Collectors.toList()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java2C 2(I2ú
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java4< 4(@2»
zorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)!importersCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/# /(,2’
Üorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?fileTypes@47.23:47.32CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java0& 0(/2–
Åorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?type@49.56:49.60CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java1@ 1(D2⁄
ãorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?flatExtensions@48.21:48.35CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java4^ 4(l2~
0org.jabref.logic.importer.Importer.getFileType()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/: /(O2Õ
zorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)!importers	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java.R .([2‹
Üorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?fileTypes@47.23:47.32DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/ /( 2·
ãorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?flatExtensions@48.21:48.35DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java0 0(#2◊
Åorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?type@49.56:49.60DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java18 1(<2}
(javafx.stage.FileChooser.ExtensionFilterRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java. .(-ã
Üorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?fileTypes@47.23:47.32VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/ /( "
typeList<FileType>"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>List<FileType> <mark class="class-field">fileTypes</mark> = importers.stream().map(Importer::getFileType).collect(Collectors.toList())*	fileTypes2\
java.util.ListTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/ /(2u
org.jabref.logic.util.FileTypeTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/ /(2ö
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/Q /(X2û
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/6 /(92k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/- /(32r
$java.util.stream.Collectors.toList()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/d /(j2»
zorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)!importersCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/# /(,2~
0org.jabref.logic.importer.Importer.getFileType()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java/: /(O≥
ãorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?flatExtensions@48.21:48.35VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java0 0(#"
typeList<String>"
isFinalfalse"‰
declarationStringŒ<mark class="modifier"> </mark>List<String> <mark class="class-field">flatExtensions</mark> = fileTypes.stream().flatMap(type -> type.getExtensionsWithAsteriskAndDot().stream()).collect(Collectors.toList())*flatExtensions2\
java.util.ListTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java0 0(2g
java.lang.StringTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java0 0(2ö
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java20 2(72≈
wjava.util.stream.Stream.flatMap(java.util.function.Function<? super T, ? extends java.util.stream.Stream<? extends R>>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java10 1(72k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java00 0(62k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java1g 1(m2é
@org.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java1E 1(d2r
$java.util.stream.Collectors.toList()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java2C 2(I2’
Üorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?fileTypes@47.23:47.32CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java0& 0(/2–
Åorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?type@49.56:49.60CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java1@ 1(Dô
zorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)!importers	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java.R .(["
typeSortedSet<Importer>"
isFinalfalse"2
declarationStringSortedSet<Importer> importers*	importers2a
java.util.SortedSetTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java.> .(G2y
"org.jabref.logic.importer.ImporterTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java.H .(Pò
Åorg.jabref.gui.util.FileFilterConverter.forAllImporters(java.util.SortedSet<org.jabref.logic.importer.Importer>)?type@49.56:49.60VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java18 1(<"
type"
isFinalfalse"
declarationString type*type2TYPEÁ
{org.jabref.gui.util.FileFilterConverter.importerToExtensionFilter(java.util.Collection<org.jabref.logic.importer.Importer>)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java74 7(M"
isFinalfalse"„
declarationStringÕ<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;FileChooser.ExtensionFilter&gt; <mark class="method">importerToExtensionFilter</mark>(Collection&lt;Importer&gt; importers)"
isStatictrue"
accesspublic"

isAbstractfalse")
type!List<FileChooser.ExtensionFilter>*importerToExtensionFilter2ö
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java: :( 2û
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java9 9(2k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java8 8(2π
korg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java9) 9(:2z
,org.jabref.logic.importer.Importer.getName()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java9D 9(K2~
0org.jabref.logic.importer.Importer.getFileType()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java9X 9(c2r
$java.util.stream.Collectors.toList()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java:, :(22‘
Öorg.jabref.gui.util.FileFilterConverter.importerToExtensionFilter(java.util.Collection<org.jabref.logic.importer.Importer>)!importersCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java8 8(2ﬂ
êorg.jabref.gui.util.FileFilterConverter.importerToExtensionFilter(java.util.Collection<org.jabref.logic.importer.Importer>)?importer@57.29:57.37CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java9; 9(C2ﬂ
êorg.jabref.gui.util.FileFilterConverter.importerToExtensionFilter(java.util.Collection<org.jabref.logic.importer.Importer>)?importer@57.29:57.37CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java9O 9(W2Ÿ
Öorg.jabref.gui.util.FileFilterConverter.importerToExtensionFilter(java.util.Collection<org.jabref.logic.importer.Importer>)!importers	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java7c 7(l2Ê
êorg.jabref.gui.util.FileFilterConverter.importerToExtensionFilter(java.util.Collection<org.jabref.logic.importer.Importer>)?importer@57.29:57.37DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java9 9(%2c
java.util.ListRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java7 7(2Ü
(javafx.stage.FileChooser.ExtensionFilterRETURN_TYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java7# 7(2®
Öorg.jabref.gui.util.FileFilterConverter.importerToExtensionFilter(java.util.Collection<org.jabref.logic.importer.Importer>)!importers	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java7c 7(l"
typeCollection<Importer>"
isFinalfalse"3
declarationStringCollection<Importer> importers*	importers2b
java.util.CollectionTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java7N 7(X2y
"org.jabref.logic.importer.ImporterTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java7Y 7(aØ
êorg.jabref.gui.util.FileFilterConverter.importerToExtensionFilter(java.util.Collection<org.jabref.logic.importer.Importer>)?importer@57.29:57.37VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java9 9(%"
type"
isFinalfalse"
declarationString	 importer*importer2TYPEÁ
{org.jabref.gui.util.FileFilterConverter.exporterToExtensionFilter(java.util.Collection<org.jabref.logic.exporter.Exporter>)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java=4 =(M"
isFinalfalse"„
declarationStringÕ<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;FileChooser.ExtensionFilter&gt; <mark class="method">exporterToExtensionFilter</mark>(Collection&lt;Exporter&gt; exporters)"
isStatictrue"
accesspublic"

isAbstractfalse")
type!List<FileChooser.ExtensionFilter>*exporterToExtensionFilter2ö
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java@ @( 2û
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java? ?(2k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java> >(2π
korg.jabref.gui.util.FileFilterConverter.toExtensionFilter(java.lang.String, org.jabref.logic.util.FileType)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java?) ?(:2z
,org.jabref.logic.exporter.Exporter.getName()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java?D ?(K2~
0org.jabref.logic.exporter.Exporter.getFileType()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java?X ?(c2r
$java.util.stream.Collectors.toList()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java@, @(22‘
Öorg.jabref.gui.util.FileFilterConverter.exporterToExtensionFilter(java.util.Collection<org.jabref.logic.exporter.Exporter>)!exportersCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java> >(2ﬂ
êorg.jabref.gui.util.FileFilterConverter.exporterToExtensionFilter(java.util.Collection<org.jabref.logic.exporter.Exporter>)?exporter@63.29:63.37CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java?; ?(C2ﬂ
êorg.jabref.gui.util.FileFilterConverter.exporterToExtensionFilter(java.util.Collection<org.jabref.logic.exporter.Exporter>)?exporter@63.29:63.37CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java?O ?(W2Ÿ
Öorg.jabref.gui.util.FileFilterConverter.exporterToExtensionFilter(java.util.Collection<org.jabref.logic.exporter.Exporter>)!exporters	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java=c =(l2Ê
êorg.jabref.gui.util.FileFilterConverter.exporterToExtensionFilter(java.util.Collection<org.jabref.logic.exporter.Exporter>)?exporter@63.29:63.37DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java? ?(%2c
java.util.ListRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java= =(2Ü
(javafx.stage.FileChooser.ExtensionFilterRETURN_TYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java=# =(2®
Öorg.jabref.gui.util.FileFilterConverter.exporterToExtensionFilter(java.util.Collection<org.jabref.logic.exporter.Exporter>)!exporters	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java=c =(l"
typeCollection<Exporter>"
isFinalfalse"3
declarationStringCollection<Exporter> exporters*	exporters2b
java.util.CollectionTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java=N =(X2y
"org.jabref.logic.exporter.ExporterTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java=Y =(aØ
êorg.jabref.gui.util.FileFilterConverter.exporterToExtensionFilter(java.util.Collection<org.jabref.logic.exporter.Exporter>)?exporter@63.29:63.37VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java? ?(%"
type"
isFinalfalse"
declarationString	 exporter*exporter2TYPE 
^org.jabref.gui.util.FileFilterConverter.toFileFilter(javafx.stage.FileChooser.ExtensionFilter)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaC C()"
isFinalfalse"¿
declarationString™<mark class="modifier">public </mark><mark class="modifier">static </mark>FileFilter <mark class="method">toFileFilter</mark>(FileChooser.ExtensionFilter extensionFilter)"
isStatictrue"
accesspublic"

isAbstractfalse"
type
FileFilter*toFileFilter2º
norg.jabref.gui.util.FileFilterConverter.toFileFilter(javafx.stage.FileChooser.ExtensionFilter)!extensionFilterCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaD D(+2¡
norg.jabref.gui.util.FileFilterConverter.toFileFilter(javafx.stage.FileChooser.ExtensionFilter)!extensionFilter	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaCF C(U2g
java.io.FileFilterRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaC C(√
norg.jabref.gui.util.FileFilterConverter.toFileFilter(javafx.stage.FileChooser.ExtensionFilter)!extensionFilter	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaCF C(U"#
typeFileChooser.ExtensionFilter"
isFinalfalse"@
declarationString+FileChooser.ExtensionFilter extensionFilter*extensionFilter2v
(javafx.stage.FileChooser.ExtensionFilterTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaC6 C(E—
Vorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaG G()"
isFinalfalse"≤
declarationStringú<mark class="modifier">public </mark><mark class="modifier">static </mark>FileFilter <mark class="method">toFileFilter</mark>(List&lt;String&gt; extensions)"
isStatictrue"
accesspublic"

isAbstractfalse"
type
FileFilter*toFileFilter2£
Uorg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaH H( 2|
.java.nio.file.DirectoryStream.Filter.accept(T)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaK K($2c
java.io.File.toPath()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaK* K(02Ø
aorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)!extensionsCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaH! H(+2∑
iorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)?filter@72.12:72.18CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaK K(2µ
gorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)?file@73.15:73.19CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaK% K()2¥
aorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)!extensions	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaG7 G(A2æ
iorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)?filter@72.12:72.18DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaH H(2º
gorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)?file@73.15:73.19DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaI I(2π
dorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)?e@76.33:76.34DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaL! L("2g
java.io.FileFilterRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaG G(©
iorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)?filter@72.12:72.18VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaH H("
typevar"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>var <mark class="class-field">filter</mark> = toDirFilter(extensions)*filter2r
$java.nio.file.DirectoryStream.FilterTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaH H(2£
Uorg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaH H( 2Ø
aorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)!extensionsCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaH! H(+›
aorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)!extensions	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaG7 G(A"
typeList<String>"
isFinalfalse",
declarationStringList<String> extensions*
extensions2\
java.util.ListTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaG* G(.2g
java.lang.StringTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaG/ G(5˝
gorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)?file@73.15:73.19VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaI I("
type"
isFinalfalse"
declarationString file*file2TYPEÁ
dorg.jabref.gui.util.FileFilterConverter.toFileFilter(java.util.List<java.lang.String>)?e@76.33:76.34VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaL! L(""
typeIOException"
isFinalfalse""
declarationStringIOException e*e2a
java.io.IOExceptionTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaL L( Ú
Uorg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)METHODD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaR R(*"
isFinalfalse"π
declarationString£<mark class="modifier">public </mark><mark class="modifier">static </mark>Filter&lt;Path&gt; <mark class="method">toDirFilter</mark>(List&lt;String&gt; extensions)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeFilter<Path>*toDirFilter2ö
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaV4 V(;2ï
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaU4 U(:2û
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaT4 T(72k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS4 S(:2ñ
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaT` T(g2ñ
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaTO T(V2r
$java.util.stream.Collectors.toList()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaVG V(M2f
java.util.List.isEmpty()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaW W(%2ô
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java\( \(+2î
Forg.jabref.logic.util.io.FileUtil.getFileExtension(java.nio.file.Path)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java[$ [(42Æ
`org.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)!extensionsCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS) S(32π
korg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?extension@84.56:84.65CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaTE T(N2¡
sorg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?extensionsCleaned@83.21:83.38CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaW W(2¥
forg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?path@91.19:91.23CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java[5 [(92é
@org.jabref.model.strings.StringUtil.isNotBlank(java.lang.String)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaU; U(Q2w
)java.util.List.contains(java.lang.Object)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.java\, \(G2≥
`org.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)!extensions	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaR8 R(B2»
sorg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?extensionsCleaned@83.21:83.38DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS S(&2¿
korg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?extension@84.56:84.65DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaT8 T(A2ª
forg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?path@89.19:89.23DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaY Y(2ª
forg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?path@91.19:91.23DECLARATIOND
:src\main\java\org\jabref\gui\util\FileFilterConverter.java[ [(2y
$java.nio.file.DirectoryStream.FilterRETURN_TYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaR R(2p
java.nio.file.PathRETURN_TYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaR R(Ò
sorg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?extensionsCleaned@83.21:83.38VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS S(&"
typeList<String>"
isFinalfalse"¿
declarationString™<mark class="modifier"> </mark>List<String> <mark class="class-field">extensionsCleaned</mark> = extensions.stream().map(extension -> extension.replace("."<mark class="modifier">,</mark> "").replace("*"<mark class="modifier">,</mark> "")).filter(StringUtil::isNotBlank).collect(Collectors.toList())*extensionsCleaned2\
java.util.ListTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS S(2g
java.lang.StringTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS S(2ö
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaV4 V(;2ï
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaU4 U(:2û
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaT4 T(72k
java.util.Collection.stream()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS4 S(:2ñ
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaT` T(g2ñ
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaTO T(V2r
$java.util.stream.Collectors.toList()CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaVG V(M2Æ
`org.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)!extensionsCALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaS) S(32π
korg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?extension@84.56:84.65CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaTE T(N2é
@org.jabref.model.strings.StringUtil.isNotBlank(java.lang.String)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaU; U(Q‹
`org.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)!extensions	PARAMETERD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaR8 R(B"
typeList<String>"
isFinalfalse",
declarationStringList<String> extensions*
extensions2\
java.util.ListTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaR+ R(/2g
java.lang.StringTYPE_ARGUMENTD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaR0 R(6ã
korg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?extension@84.56:84.65VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaT8 T(A"
type"
isFinalfalse"
declarationString
 extension*	extension2TYPE¸
forg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?path@89.19:89.23VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaY Y("
type"
isFinalfalse"
declarationString path*path2TYPE¸
forg.jabref.gui.util.FileFilterConverter.toDirFilter(java.util.List<java.lang.String>)?path@91.19:91.23VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java[ [("
type"
isFinalfalse"
declarationString path*path2TYPEô
<org.jabref.gui.util.FileFilterConverter?ANY_FILE@23.46:23.54VARIABLED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java. (6"
isFinalfalse"#
typeFileChooser.ExtensionFilter"å
declarationStringˆ<mark class="modifier">public </mark><mark class="modifier">static </mark>FileChooser.ExtensionFilter <mark class="class-field">ANY_FILE</mark> = new FileChooser.ExtensionFilter(Localization.lang("Any file")<mark class="modifier">,</mark> "*.*");"
isStatictrue"
accesspublic*ANY_FILE2v
(javafx.stage.FileChooser.ExtensionFilterTYPED
:src\main\java\org\jabref\gui\util\FileFilterConverter.java (-2ú
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLD
:src\main\java\org\jabref\gui\util\FileFilterConverter.javaf (j