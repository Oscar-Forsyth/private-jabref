
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java˜
-org.jabref.gui.util.CurrentThreadTaskExecutorCLASSJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java (&"
packageorg.jabref.gui.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"±
declarationStringõ<mark class="modifier">public </mark><mark class="modifier">class </mark>CurrentThreadTaskExecutor<mark class="modifier"><br>implements </mark>TaskExecutor"
accesspublic*CurrentThreadTaskExecutor2∑
\org.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java ( 2´
Porg.jabref.gui.util.CurrentThreadTaskExecutor.execute(javafx.concurrent.Task<V>)DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7 7( 2ﬁ
Çorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java< <(!2ì
8org.jabref.gui.util.CurrentThreadTaskExecutor.shutdown()DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaA A(2ù
Borg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaF F(-2õ
@org.jabref.gui.util.CurrentThreadTaskExecutor?LOGGER@23.32:23.38DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java  (&2ü
Dorg.jabref.gui.util.CurrentThreadTaskExecutor?throttlers@24.56:24.66DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java8 (B2v
 org.jabref.gui.util.TaskExecutorEXTENDJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java2 (>°4
\org.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java ( "
isFinalfalse"∫
declarationString§<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Future&lt;V&gt; <mark class="method">execute</mark>(BackgroundTask&lt;V&gt; task)"
isStaticfalse"
accesspublic"

isAbstractfalse"
type	Future<V>*execute2Ö
1org.jabref.gui.util.BackgroundTask.getOnRunning()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java "  (.2l
java.lang.Runnable.run()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java" "(2}
)org.jabref.gui.util.BackgroundTask.call()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java%" %(&2Ö
1org.jabref.gui.util.BackgroundTask.getOnSuccess()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java&) &(52y
%java.util.function.Consumer.accept(T)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java( (( 2ç
9java.util.concurrent.CompletableFuture.completedFuture(U)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java*% *(42á
3org.jabref.gui.util.BackgroundTask.getOnException()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java,3 ,(A2y
%java.util.function.Consumer.accept(T)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java. .("2∞
\org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.FailedFuture(java.lang.Throwable)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java2 2(%2µ
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java   (!2∆
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onRunning@32.17:32.26CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java! !(2∆
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onRunning@32.17:32.26CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java" "(2µ
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java% %(!2µ
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java&$ &((2∆
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onSuccess@38.24:38.33CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java' '(2∆
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onSuccess@38.24:38.33CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java( ((2√
oorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?result@37.20:37.26CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java(! (('2√
oorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?result@37.20:37.26CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java*5 *(;2µ
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java,. ,(22»
torg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onException@44.32:44.43CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java- -(2»
torg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onException@44.32:44.43CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java. .(2∆
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?exception@43.27:43.36CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java.# .(,2î
@org.jabref.gui.util.CurrentThreadTaskExecutor?LOGGER@23.32:23.38CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java0 0(2∆
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?exception@43.27:43.36CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java04 0(=2∆
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?exception@43.27:43.36CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java2& 2(/2ß
Oorg.jabref.gui.util.TaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)OVERRIDEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java ( 2∫
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!task	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java3 (72Õ
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onRunning@32.17:32.26DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java   (2 
oorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?result@37.20:37.26DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java% %(2Õ
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onSuccess@38.24:38.33DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java& &(!2œ
torg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onException@44.32:44.43DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java,  ,(+2Õ
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?exception@43.27:43.36DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java+ +($2v
java.util.concurrent.FutureRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java (2¬
^org.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VRETURN_TYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java (2º
^org.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java (†
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onRunning@32.17:32.26VARIABLEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java   ("
typeRunnable"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Runnable <mark class="class-field">onRunning</mark> = task.getOnRunning()*	onRunning2f
java.lang.RunnableTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java   (2Ö
1org.jabref.gui.util.BackgroundTask.getOnRunning()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java "  (.2µ
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java   (!Ê
oorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?result@37.20:37.26VALUEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java% %("	
typeV"
isFinaltrue"è
declarationStringz<mark class="modifier"> </mark><mark class="modifier">final </mark>V <mark class="class-field">result</mark> = task.call()*result2≤
^org.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java% %(2}
)org.jabref.gui.util.BackgroundTask.call()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java%" %(&2µ
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java% %(!Ó
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onSuccess@38.24:38.33VARIABLEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java& &(!"
typeConsumer<V>"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>Consumer<V> <mark class="class-field">onSuccess</mark> = task.getOnSuccess()*	onSuccess2o
java.util.function.ConsumerTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java& &(2ª
^org.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java& &(2Ö
1org.jabref.gui.util.BackgroundTask.getOnSuccess()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java&) &(52µ
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java&$ &((º
torg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?onException@44.32:44.43VARIABLEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java,  ,(+"
typeConsumer<Exception>"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>Consumer<Exception> <mark class="class-field">onException</mark> = task.getOnException()*onException2o
java.util.function.ConsumerTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java, ,(2p
java.lang.ExceptionTYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java, ,(2á
3org.jabref.gui.util.BackgroundTask.getOnException()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java,3 ,(A2µ
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java,. ,(2Ù
aorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)!task	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java3 (7"
typeBackgroundTask<V>"
isFinalfalse"O
declarationString:BackgroundTask<<mark class="type-parameter">V</mark>> task*task2v
"org.jabref.gui.util.BackgroundTaskTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java! (/2ª
^org.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java0 (1ç
rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)?exception@43.27:43.36VARIABLEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java+ +($"
type	Exception"
isFinalfalse"(
declarationStringException exception*	exception2g
java.lang.ExceptionTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java+ +(ø
^org.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>).VTYPE_PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java (*V†
Porg.jabref.gui.util.CurrentThreadTaskExecutor.execute(javafx.concurrent.Task<V>)METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7 7( "
isFinalfalse"∞
declarationStringö<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Future&lt;V&gt; <mark class="method">execute</mark>(Task&lt;V&gt; task)"
isStaticfalse"
accesspublic"

isAbstractfalse"
type	Future<V>*execute2©
Uorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(javafx.concurrent.Task<V>)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java8 8(2õ
Corg.jabref.gui.util.TaskExecutor.execute(javafx.concurrent.Task<V>)OVERRIDEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7 7( 2Æ
Uorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(javafx.concurrent.Task<V>)!task	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7) 7(-2v
java.util.concurrent.FutureRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7 7(2∂
Rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(javafx.concurrent.Task<V>).VRETURN_TYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7 7(2∞
Rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(javafx.concurrent.Task<V>).VTYPE_PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7 7(º
Uorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(javafx.concurrent.Task<V>)!task	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7) 7(-"
typeTask<V>"
isFinalfalse"E
declarationString0Task<<mark class="type-parameter">V</mark>> task*task2j
javafx.concurrent.TaskTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7! 7(%2Ø
Rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(javafx.concurrent.Task<V>).VTYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7& 7('≥
Rorg.jabref.gui.util.CurrentThreadTaskExecutor.execute(javafx.concurrent.Task<V>).VTYPE_PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java7 7(*Vû
Çorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java< <(!"
isFinalfalse"Ï
declarationString÷<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Future&lt;?&gt; <mark class="method">schedule</mark>(BackgroundTask&lt;V&gt; task<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">long</mark> delay<mark class="modifier"><mark class="modifier">,</mark></mark> TimeUnit unit)"
isStaticfalse"
accesspublic"

isAbstractfalse"
type	Future<?>*schedule2∞
\org.jabref.gui.util.CurrentThreadTaskExecutor.execute(org.jabref.gui.util.BackgroundTask<V>)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java= =(2‹
áorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!taskCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java= =(2Õ
uorg.jabref.gui.util.TaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)OVERRIDEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java< <(!2·
áorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!task	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<4 <(82‚
àorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!delay	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<? <(D2·
áorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!unit	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<O <(S2v
java.util.concurrent.FutureRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java< <(2„
Ñorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit).VTYPE_PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java< <(¬
áorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!task	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<4 <(8"
typeBackgroundTask<V>"
isFinalfalse"O
declarationString:BackgroundTask<<mark class="type-parameter">V</mark>> task*task2v
"org.jabref.gui.util.BackgroundTaskTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<" <(02‚
Ñorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit).VTYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<1 <(2¢
àorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!delay	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<? <(D"
typelong"
isFinalfalse"=
declarationString(<mark class="modifier">long</mark> delay*delay2X
longTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<: <(>¢
áorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit)!unit	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<O <(S"
typeTimeUnit"
isFinalfalse""
declarationStringTimeUnit unit*unit2q
java.util.concurrent.TimeUnitTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java<F <(NÊ
Ñorg.jabref.gui.util.CurrentThreadTaskExecutor.schedule(org.jabref.gui.util.BackgroundTask<V>, long, java.util.concurrent.TimeUnit).VTYPE_PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java< <(*V’
8org.jabref.gui.util.CurrentThreadTaskExecutor.shutdown()METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaA A("
isFinalfalse"≤
declarationStringú<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">shutdown</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*shutdown2¶
Rjava.util.WeakHashMap.forEach(java.util.function.BiConsumer<? super K, ? super V>)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaB B(2á
3org.jabref.logic.util.DelayTaskThrottler.shutdown()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaB; B(C2ò
Dorg.jabref.gui.util.CurrentThreadTaskExecutor?throttlers@24.56:24.66CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaB B(2¢
Norg.jabref.gui.util.CurrentThreadTaskExecutor.shutdown()?throttler@66.28:66.37CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaB1 B(:2É
+org.jabref.gui.util.TaskExecutor.shutdown()OVERRIDEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaA A(2©
Norg.jabref.gui.util.CurrentThreadTaskExecutor.shutdown()?throttler@66.28:66.37DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaB B(%2•
Jorg.jabref.gui.util.CurrentThreadTaskExecutor.shutdown()?aVoid@66.39:66.44DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaB' B(,2_
voidRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaA A(Ù
Norg.jabref.gui.util.CurrentThreadTaskExecutor.shutdown()?throttler@66.28:66.37VARIABLEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaB B(%"
type"
isFinalfalse"
declarationString
 throttler*	throttler2TYPEË
Jorg.jabref.gui.util.CurrentThreadTaskExecutor.shutdown()?aVoid@66.39:66.44VARIABLEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaB' B(,"
type"
isFinalfalse"
declarationString aVoid*aVoid2TYPE¯
Borg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaF F(-"
isFinalfalse"–
declarationString∫<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>DelayTaskThrottler <mark class="method">createThrottler</mark>(<mark class="modifier">int</mark> delay)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeDelayTaskThrottler*createThrottler2s
java.util.WeakHashMap.put(K, V)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaH H(2î
@org.jabref.logic.util.DelayTaskThrottler.DelayTaskThrottler(int)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaG+ G(=2ú
Horg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)!delayCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaG> G(C2ò
Dorg.jabref.gui.util.CurrentThreadTaskExecutor?throttlers@24.56:24.66CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaH H(2¨
Xorg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)?throttler@71.27:71.36CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaH H( 2¨
Xorg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)?throttler@71.27:71.36CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaI I(2ç
5org.jabref.gui.util.TaskExecutor.createThrottler(int)OVERRIDEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaF F(-2°
Horg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)!delay	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaF2 F(72≥
Xorg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)?throttler@71.27:71.36DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaG G($2É
(org.jabref.logic.util.DelayTaskThrottlerRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaF F(±
Xorg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)?throttler@71.27:71.36VARIABLEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaG G($"
typeDelayTaskThrottler"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>DelayTaskThrottler <mark class="class-field">throttler</mark> = new DelayTaskThrottler(delay)*	throttler2|
(org.jabref.logic.util.DelayTaskThrottlerTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaG G(2î
@org.jabref.logic.util.DelayTaskThrottler.DelayTaskThrottler(int)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaG+ G(=2ú
Horg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)!delayCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaG> G(Cﬁ
Horg.jabref.gui.util.CurrentThreadTaskExecutor.createThrottler(int)!delay	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaF2 F(7"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> delay*delay2W
intTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaF. F(1ª
@org.jabref.gui.util.CurrentThreadTaskExecutor?LOGGER@23.32:23.38VALUEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java  (&"
isFinaltrue"
typeLogger"Ô
declarationStringŸ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(CurrentThreadTaskExecutor.class);"
isStatictrue"
accessprivate*LOGGER2d
org.slf4j.LoggerTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java (Ø
Dorg.jabref.gui.util.CurrentThreadTaskExecutor?throttlers@24.56:24.66VALUEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java8 (B"
isFinaltrue"-
type%WeakHashMap<DelayTaskThrottler, Void>"»
declarationString≤<mark class="modifier">private </mark><mark class="modifier">final </mark>WeakHashMap<DelayTaskThrottler, Void> <mark class="class-field">throttlers</mark> = new WeakHashMap<>();"
isStaticfalse"
accessprivate*
throttlers2i
java.util.WeakHashMapTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java (2k
java.lang.VoidTYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java (02Ö
(org.jabref.logic.util.DelayTaskThrottlerTYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java2 (62w
#java.util.WeakHashMap.WeakHashMap()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaI (Vª
:org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFutureCLASSJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaL L(%"8
package-org.jabref.gui.util.CurrentThreadTaskExecutor"
isFinalfalse"
inner classfalse"

isAbstractfalse"®
declarationStringí<mark class="modifier">private </mark><mark class="modifier">class </mark>FailedFuture<mark class="modifier"><br>implements </mark>Future&lt;T&gt;"
accessprivate*FailedFuture2∑
\org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.FailedFuture(java.lang.Throwable)DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaO O(2õ
@org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.get()DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaT T(2æ
corg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.get(long, java.util.concurrent.TimeUnit)DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaY Y(2•
Jorg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.cancel(boolean)DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java^ ^(2£
Horg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.isCancelled()DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javac c("2û
Corg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.isDone()DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javah h(2´
Porg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture?exception@77.32:77.41DECLARATIONJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaM  M()2q
java.util.concurrent.FutureEXTENDJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaL4 L(:2ö
<org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.TTYPE_PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaL& L('2†
<org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.TEXTEND_TYPE_ARGUMENTJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaL; L(<ˆ
\org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.FailedFuture(java.lang.Throwable)CONSTRUCTORJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaO O("q
declarationString\<mark class="modifier"> </mark><mark class="method">FailedFuture</mark>(Throwable exception)*FailedFuture2∫
forg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.FailedFuture(java.lang.Throwable)!exceptionCALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaP P(&2§
Porg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture?exception@77.32:77.41CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaP P(2ø
forg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.FailedFuture(java.lang.Throwable)!exception	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaO O((2ï
:org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFutureRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaO O(Ç
forg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.FailedFuture(java.lang.Throwable)!exception	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaO O(("
type	Throwable"
isFinalfalse"(
declarationStringThrowable exception*	exception2g
java.lang.ThrowableTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaO O(Œ
@org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.get()METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaT T("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">T</mark></mark>&gt; T <mark class="method">get</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ExecutionException"
isStaticfalse"
accesspublic"

isAbstractfalse"	
typeT*get2£
Ojava.util.concurrent.ExecutionException.ExecutionException(java.lang.Throwable)CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaU U((2§
Porg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture?exception@77.32:77.41CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaU) U(22\
TRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaT T(ª

corg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.get(long, java.util.concurrent.TimeUnit)METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaY Y("
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">T</mark></mark>&gt; T <mark class="method">get</mark>(<mark class="modifier">long</mark> timeout<mark class="modifier"><mark class="modifier">,</mark></mark> TimeUnit unit)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ExecutionException"
isStaticfalse"
accesspublic"

isAbstractfalse"	
typeT*get2î
@org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.get()CALLJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaZ Z(2ƒ
korg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.get(long, java.util.concurrent.TimeUnit)!timeout	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaY Y(!2¡
horg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.get(long, java.util.concurrent.TimeUnit)!unit	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaY, Y(02\
TRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaY Y(à
korg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.get(long, java.util.concurrent.TimeUnit)!timeout	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaY Y(!"
typelong"
isFinalfalse"?
declarationString*<mark class="modifier">long</mark> timeout*timeout2X
longTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaY Y(Ç
horg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.get(long, java.util.concurrent.TimeUnit)!unit	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaY, Y(0"
typeTimeUnit"
isFinalfalse""
declarationStringTimeUnit unit*unit2q
java.util.concurrent.TimeUnitTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaY# Y(+‚
Jorg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.cancel(boolean)METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java^ ^("
isFinalfalse"∫
declarationString§<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">T</mark></mark>&gt; <mark class="modifier">boolean</mark> <mark class="method">cancel</mark>(<mark class="modifier">boolean</mark> mayInterruptIfRunning)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*cancel2π
`org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.cancel(boolean)!mayInterruptIfRunning	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java^& ^(;2b
booleanRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java^ ^(¢
`org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.cancel(boolean)!mayInterruptIfRunning	PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java^& ^(;"
typeboolean"
isFinalfalse"P
declarationString;<mark class="modifier">boolean</mark> mayInterruptIfRunning*mayInterruptIfRunning2[
booleanTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java^ ^(%Û
Horg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.isCancelled()METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javac c(""
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">T</mark></mark>&gt; <mark class="modifier">boolean</mark> <mark class="method">isCancelled</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isCancelled2b
booleanRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javac c(‰
Corg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.isDone()METHODJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javah h("
isFinalfalse"ˇ
declarationStringÈ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">T</mark></mark>&gt; <mark class="modifier">boolean</mark> <mark class="method">isDone</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isDone2b
booleanRETURN_TYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javah h(˘
Porg.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture?exception@77.32:77.41VALUEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaM  M()"
isFinaltrue"
type	Throwable"ì
declarationString~<mark class="modifier">private </mark><mark class="modifier">final </mark>Throwable <mark class="class-field">exception</mark>"
isStaticfalse"
accessprivate*	exception2g
java.lang.ThrowableTYPEJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaM M(ù
<org.jabref.gui.util.CurrentThreadTaskExecutor.FailedFuture.TTYPE_PARAMETERJ
@src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.javaL& L('*T