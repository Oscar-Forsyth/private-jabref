
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÚ
'org.jabref.gui.util.TooltipTextUtilTestCLASSD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java ( "
packageorg.jabref.gui.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"q
declarationString\<mark class="modifier">public </mark><mark class="modifier">class </mark>TooltipTextUtilTest"
accesspublic*TooltipTextUtilTest2ù
Horg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleNormal()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (.2Æ
Yorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToNormal()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (?2õ
Forg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleBold()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java" "(,2¨
Worg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToBold()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java* *(=2ù
Horg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleItalic()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java1 1(.2Æ
Yorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToItalic()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java9 9(?2ì
>org.jabref.gui.util.TooltipTextUtilTest.createTextMonospaced()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java@ @($2ù
Horg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectStyleMonospaced()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaG G(.2≤
]org.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToMonospaced()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaO O(C2ú
Gorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaV V(-2û
Iorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java_ _(/2¢
Morg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javah h(32¶
Qorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaq q(72¶
Qorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java{ {(72ú
Eorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÖ Ö(+2ë
:org.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaè è( 2ì
<org.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaö ö("2î
=org.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java• •(#2ë
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (¿
Horg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleNormal()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (."
isFinalfalse"ƒ
declarationStringÆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">retrieveCorrectTextStyleNormal</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*retrieveCorrectTextStyleNormal2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java$ (.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java/ (72¨
^org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleNormal()?textStyle@21.15:21.24CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (2ß
Yorg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleNormal()?text@20.13:20.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java  ($2Æ
Yorg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleNormal()?text@20.13:20.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (2≥
^org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleNormal()?textStyle@21.15:21.24DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (≠
Yorg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleNormal()?text@20.13:20.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java ("
typeText"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.NORMAL)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java$ (.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java/ (7∞
^org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleNormal()?textStyle@21.15:21.24VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java ("
typeString"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>String <mark class="class-field">textStyle</mark> = "Regular"*	textStyle2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (Ω
Yorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToNormal()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (?"
isFinalfalse"’
declarationStringø<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">stringRemainsTheSameAfterTransformationToNormal</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*/stringRemainsTheSameAfterTransformationToNormal2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java$ (.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java/ (72ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (2∏
jorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToNormal()?text@28.13:28.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (#2ø
jorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToNormal()?text@28.13:28.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (æ
jorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToNormal()?text@28.13:28.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java ("
typeText"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.NORMAL)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java$ (.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java/ (7≤
Forg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleBold()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java" "(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">retrieveCorrectTextStyleBold</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*retrieveCorrectTextStyleBold2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java#$ #(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java#/ #(72™
\org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleBold()?textStyle@36.15:36.24CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java& &(2•
Worg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleBold()?text@35.13:35.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java&  &($2¨
Worg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleBold()?text@35.13:35.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java# #(2±
\org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleBold()?textStyle@36.15:36.24DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java$ $(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java" "(©
Worg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleBold()?text@35.13:35.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java# #("
typeText"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.BOLD)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java# #(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java#$ #(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java#/ #(7∏
\org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleBold()?textStyle@36.15:36.24VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java$ $("
typeString"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>String <mark class="class-field">textStyle</mark> = "tooltip-text-bold"*	textStyle2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java$ $(≥
Worg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToBold()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java* *(="
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">stringRemainsTheSameAfterTransformationToBold</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*-stringRemainsTheSameAfterTransformationToBold2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java+$ +(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java+/ +(72ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java- -(2∂
horg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToBold()?text@43.13:43.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java- -(#2Ω
horg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToBold()?text@43.13:43.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java+ +(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java* *(∫
horg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToBold()?text@43.13:43.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java+ +("
typeText"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.BOLD)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java+ +(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java+$ +(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java+/ +(7¿
Horg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleItalic()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java1 1(."
isFinalfalse"ƒ
declarationStringÆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">retrieveCorrectTextStyleItalic</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*retrieveCorrectTextStyleItalic2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java2$ 2(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java2/ 2(72¨
^org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleItalic()?textStyle@51.15:51.24CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java5 5(2ß
Yorg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleItalic()?text@50.13:50.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java5  5($2Æ
Yorg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleItalic()?text@50.13:50.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java2 2(2≥
^org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleItalic()?textStyle@51.15:51.24DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java3 3(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java1 1(≠
Yorg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleItalic()?text@50.13:50.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java2 2("
typeText"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.ITALIC)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java2 2(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java2$ 2(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java2/ 2(7º
^org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectTextStyleItalic()?textStyle@51.15:51.24VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java3 3("
typeString"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>String <mark class="class-field">textStyle</mark> = "tooltip-text-italic"*	textStyle2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java3 3(Ω
Yorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToItalic()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java9 9(?"
isFinalfalse"’
declarationStringø<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">stringRemainsTheSameAfterTransformationToItalic</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*/stringRemainsTheSameAfterTransformationToItalic2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java:$ :(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java:/ :(72ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java< <(2∏
jorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToItalic()?text@58.13:58.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java< <(#2ø
jorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToItalic()?text@58.13:58.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java: :(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java9 9(æ
jorg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToItalic()?text@58.13:58.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java: :("
typeText"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.ITALIC)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java: :(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java:$ :(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java:/ :(7÷
>org.jabref.gui.util.TooltipTextUtilTest.createTextMonospaced()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java@ @($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">createTextMonospaced</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*createTextMonospaced2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaA$ A(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaA/ A(72ù
Oorg.jabref.gui.util.TooltipTextUtilTest.createTextMonospaced()?text@65.13:65.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaB0 B(42ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaC C(2ù
Oorg.jabref.gui.util.TooltipTextUtilTest.createTextMonospaced()?text@65.13:65.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaC C(#2§
Oorg.jabref.gui.util.TooltipTextUtilTest.createTextMonospaced()?text@65.13:65.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaA A(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java@ @(ß
Oorg.jabref.gui.util.TooltipTextUtilTest.createTextMonospaced()?text@65.13:65.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaA A("
typeText"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.MONOSPACED)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaA A(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaA$ A(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaA/ A(7¿
Horg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectStyleMonospaced()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaG G(."
isFinalfalse"ƒ
declarationStringÆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">retrieveCorrectStyleMonospaced</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*retrieveCorrectStyleMonospaced2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaH$ H(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaH/ H(72¨
^org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectStyleMonospaced()?textStyle@73.15:73.24CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaK K(2ß
Yorg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectStyleMonospaced()?text@72.13:72.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaK  K($2Æ
Yorg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectStyleMonospaced()?text@72.13:72.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaH H(2≥
^org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectStyleMonospaced()?textStyle@73.15:73.24DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaI I(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaG G(±
Yorg.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectStyleMonospaced()?text@72.13:72.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaH H("
typeText"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.MONOSPACED)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaH H(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaH$ H(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaH/ H(7¡
^org.jabref.gui.util.TooltipTextUtilTest.retrieveCorrectStyleMonospaced()?textStyle@73.15:73.24VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaI I("
typeString"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>String <mark class="class-field">textStyle</mark> = "tooltip-text-monospaced"*	textStyle2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaI I(—
]org.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToMonospaced()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaO O(C"
isFinalfalse"Ÿ
declarationString√<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">stringRemainsTheSameAfterTransformationToMonospaced</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*3stringRemainsTheSameAfterTransformationToMonospaced2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaP$ P(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaP/ P(72ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaR R(2º
norg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToMonospaced()?text@80.13:80.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaR R(#2√
norg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToMonospaced()?text@80.13:80.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaP P(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaO O(∆
norg.jabref.gui.util.TooltipTextUtilTest.stringRemainsTheSameAfterTransformationToMonospaced()?text@80.13:80.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaP P("
typeText"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.MONOSPACED)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaP P(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaP$ P(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaP/ P(7“
Gorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaV V(-"
isFinalfalse"√
declarationString≠<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">transformTextToHtmlStringBold</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*transformTextToHtmlStringBold2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaW$ W(.2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaX, X(<2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaW/ W(72¶
Xorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?text@87.13:87.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaX= X(A2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaY( Y(02∞
borg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?expectedString@89.15:89.29CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java[ [(#2¨
^org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?htmlString@88.15:88.25CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java[% [(/2≠
Xorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?text@87.13:87.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaW W(2≥
^org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?htmlString@88.15:88.25DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaX X(2∑
borg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?expectedString@89.15:89.29DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaY Y(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaV V(™
Xorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?text@87.13:87.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaW W("
typeText"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.BOLD)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaW W(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaW$ W(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaW/ W(7ñ
^org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?htmlString@88.15:88.25VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaX X("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">htmlString</mark> = TooltipTextUtil.textToHtmlString(text)*
htmlString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaX X(2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaX, X(<2¶
Xorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?text@87.13:87.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaX= X(A‹
borg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringBold()?expectedString@89.15:89.29VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaY Y("
typeString"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>String <mark class="class-field">expectedString</mark> = "<b>" + testText + "</b>"*expectedString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaY Y(2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaY( Y(0‰
Iorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java_ _(/"
isFinalfalse"≈
declarationStringØ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">transformTextToHtmlStringItalic</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*transformTextToHtmlStringItalic2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java`$ `(.2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaa, a(<2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java`/ `(72®
Zorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?text@96.13:96.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaa= a(A2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javab( b(02≤
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?expectedString@98.15:98.29CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javad d(#2Æ
`org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?htmlString@97.15:97.25CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javad% d(/2Ø
Zorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?text@96.13:96.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java` `(2µ
`org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?htmlString@97.15:97.25DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaa a(2π
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?expectedString@98.15:98.29DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javab b(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java_ _(Æ
Zorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?text@96.13:96.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java` `("
typeText"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.ITALIC)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java` `(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java`$ `(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java`/ `(7ö
`org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?htmlString@97.15:97.25VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaa a("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">htmlString</mark> = TooltipTextUtil.textToHtmlString(text)*
htmlString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaa a(2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaa, a(<2®
Zorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?text@96.13:96.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaa= a(Aﬁ
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringItalic()?expectedString@98.15:98.29VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javab b("
typeString"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>String <mark class="class-field">expectedString</mark> = "<i>" + testText + "</i>"*expectedString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javab b(2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javab( b(0î
Morg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javah h(3"
isFinalfalse"…
declarationString≥<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">transformTextToHtmlStringMonospaced</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*#transformTextToHtmlStringMonospaced2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javai$ i(.2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaj, j(<2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javai/ i(72Æ
`org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?text@105.13:105.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaj= j(A2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javak) k(12∏
jorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?expectedString@107.15:107.29CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javam m(#2¥
forg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?htmlString@106.15:106.25CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javam% m(/2µ
`org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?text@105.13:105.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javai i(2ª
forg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?htmlString@106.15:106.25DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaj j(2ø
jorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?expectedString@107.15:107.29DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javak k(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javah h(∏
`org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?text@105.13:105.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javai i("
typeText"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.MONOSPACED)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javai i(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javai$ i(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javai/ i(7¶
forg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?htmlString@106.15:106.25VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaj j("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">htmlString</mark> = TooltipTextUtil.textToHtmlString(text)*
htmlString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaj j(2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaj, j(<2Æ
`org.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?text@105.13:105.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaj= j(AÊ
jorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospaced()?expectedString@107.15:107.29VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javak k("
typeString"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>String <mark class="class-field">expectedString</mark> = "<tt>" + testText + "</tt>"*expectedString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javak k(2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javak) k(1Ì
Qorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaq q(7"
isFinalfalse"Õ
declarationString∑<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">transformTextToHtmlStringMonospacedBold</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*'transformTextToHtmlStringMonospacedBold2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javar$ r(.2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javat, t(<2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javar/ r(72≤
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?text@114.13:114.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javas s(2≤
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?text@114.13:114.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javat= t(A2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javau, u(42º
norg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?expectedString@117.15:117.29CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaw w(#2∏
jorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?htmlString@116.15:116.25CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaw% w(/2π
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?text@114.13:114.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javar r(2ø
jorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?htmlString@116.15:116.25DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javat t(2√
norg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?expectedString@117.15:117.29DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javau u(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaq q(º
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?text@114.13:114.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javar r("
typeText"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.MONOSPACED)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javar r(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javar$ r(.2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javar/ r(7Æ
jorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?htmlString@116.15:116.25VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javat t("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">htmlString</mark> = TooltipTextUtil.textToHtmlString(text)*
htmlString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javat t(2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javat, t(<2≤
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?text@114.13:114.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javat= t(AÒ
norg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringMonospacedBold()?expectedString@117.15:117.29VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javau u("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">expectedString</mark> = "<b><tt>" + testText + "</tt></b>"*expectedString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javau u(2ä
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javau, u(4õ
Qorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()METHODD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java{ {(7"
isFinalfalse"Õ
declarationString∑<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">transformTextToHtmlStringWithLinebreaks</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*'transformTextToHtmlStringWithLinebreaks2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java}$ }(.2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java~, ~(<2∂
horg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?testText@124.15:124.23CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java}/ }(72≤
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?text@125.13:125.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java~= ~(A2æ
norg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?expectedString@127.15:127.29CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÅ Å(#2∫
jorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?htmlString@126.15:126.25CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÅ% Å(/2Ω
horg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?testText@124.15:124.23DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java| |(2π
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?text@125.13:125.17DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java} }(2ø
jorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?htmlString@126.15:126.25DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java~ ~(2√
norg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?expectedString@127.15:127.29DECLARATIOND
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (2Y
voidRETURN_TYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java{ {(Ê
horg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?testText@124.15:124.23VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java| |("
typeString"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>String <mark class="class-field">testText</mark> = "<mark class="modifier">this</mark>\nis a\ntest text"*testText2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java| |(‰
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?text@125.13:125.17VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java} }("
typeText"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Text <mark class="class-field">text</mark> = TooltipTextUtil.createText(testText, TooltipTextUtil.TextType.NORMAL)*text2d
javafx.scene.text.TextTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java} }(2º
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java}$ }(.2∂
horg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?testText@124.15:124.23CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java}/ }(7Æ
jorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?htmlString@126.15:126.25VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java~ ~("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">htmlString</mark> = TooltipTextUtil.textToHtmlString(text)*
htmlString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java~ ~(2ö
Lorg.jabref.gui.util.TooltipTextUtil.textToHtmlString(javafx.scene.text.Text)CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java~, ~(<2≤
dorg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?text@125.13:125.17CALLD
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java~= ~(A¸
norg.jabref.gui.util.TooltipTextUtilTest.transformTextToHtmlStringWithLinebreaks()?expectedString@127.15:127.29VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java ("
typeString"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>String <mark class="class-field">expectedString</mark> = "<mark class="modifier">this</mark><br>is a<br>test text"*expectedString2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (∆
Eorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()METHODF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÖ Ö(+"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">formatToTextsNoReplacements</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*formatToTextsNoReplacements2e
java.util.List.add(E)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaá á(2ê
@org.jabref.gui.util.TooltipTextUtil.createText(java.lang.String)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaá- á(72À
{org.jabref.gui.util.TooltipTextUtil.formatToTexts(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextReplacement...)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaâ. â(;2Ì
úorg.jabref.gui.search.TextFlowEqualityHelper.checkIfTextsEqualsExpectedTexts(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaã* ã(I2o
java.util.ArrayList.ArrayList()CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÜ* Ü(52¥
dorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?expectedTextList@134.19:134.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaá á(2®
Xorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?test@136.15:136.19CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaâ< â(@2¥
dorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?expectedTextList@134.19:134.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaãJ ã(Z2¨
\org.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?textList@137.19:137.27CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaã\ ã(d2ª
dorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?expectedTextList@134.19:134.35DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÜ Ü(#2Ø
Xorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?test@136.15:136.19DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaà à(2≥
\org.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?textList@137.19:137.27DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaâ â(2[
voidRETURN_TYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÖ Ö(π
dorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?expectedTextList@134.19:134.35VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÜ Ü(#"
type
List<Text>"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>List<Text> <mark class="class-field">expectedTextList</mark> = new ArrayList<>()*expectedTextList2^
java.util.ListTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÜ Ü(2o
javafx.scene.text.TextTYPE_ARGUMENTF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÜ Ü(2o
java.util.ArrayList.ArrayList()CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaÜ* Ü(5Ô
Xorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?test@136.15:136.19VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaà à("
typeString"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>String <mark class="class-field">test</mark> = "This search contains entries in which any field contains the regular expression "*test2`
java.lang.StringTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaà à(ª
\org.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?textList@137.19:137.27VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaâ â("
type
List<Text>"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>List<Text> <mark class="class-field">textList</mark> = TooltipTextUtil.formatToTexts(test)*textList2^
java.util.ListTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaâ â(2o
javafx.scene.text.TextTYPE_ARGUMENTF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaâ â(2À
{org.jabref.gui.util.TooltipTextUtil.formatToTexts(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextReplacement...)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaâ. â(;2®
Xorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsNoReplacements()?test@136.15:136.19CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaâ< â(@ï
:org.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()METHODF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaè è( "
isFinalfalse"∂
declarationString†<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">formatToTextsEnd</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*formatToTextsEnd2e
java.util.List.add(E)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaë ë(2ê
@org.jabref.gui.util.TooltipTextUtil.createText(java.lang.String)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaë- ë(72e
java.util.List.add(E)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaí í(2æ
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaí- í(72À
{org.jabref.gui.util.TooltipTextUtil.formatToTexts(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextReplacement...)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaî. î(;2Ì
úorg.jabref.gui.search.TextFlowEqualityHelper.checkIfTextsEqualsExpectedTexts(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javañ* ñ(I2o
java.util.ArrayList.ArrayList()CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaê* ê(52Ê
ïorg.jabref.gui.util.TooltipTextUtil.TextReplacement.TextReplacement(java.lang.String, java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaîF î(e2©
Yorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?expectedTextList@144.19:144.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaë ë(2©
Yorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?expectedTextList@144.19:144.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaí í(2ù
Morg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?test@147.15:147.19CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaî< î(@2©
Yorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?expectedTextList@144.19:144.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javañJ ñ(Z2°
Qorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?textList@148.19:148.27CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javañ\ ñ(d2∞
Yorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?expectedTextList@144.19:144.35DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaê ê(#2§
Morg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?test@147.15:147.19DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaì ì(2®
Qorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?textList@148.19:148.27DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaî î(2[
voidRETURN_TYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaè è(Æ
Yorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?expectedTextList@144.19:144.35VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaê ê(#"
type
List<Text>"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>List<Text> <mark class="class-field">expectedTextList</mark> = new ArrayList<>()*expectedTextList2^
java.util.ListTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaê ê(2o
javafx.scene.text.TextTYPE_ARGUMENTF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaê ê(2o
java.util.ArrayList.ArrayList()CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaê* ê(5Ì
Morg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?test@147.15:147.19VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaì ì("
typeString"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>String <mark class="class-field">test</mark> = "This search contains entries in which any field contains the regular expression <b>%0</b>"*test2`
java.lang.StringTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaì ì(Æ

Qorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?textList@148.19:148.27VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaî î("
type
List<Text>"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>List<Text> <mark class="class-field">textList</mark> = TooltipTextUtil.formatToTexts(test, new TooltipTextUtil.TextReplacement("<b>%0</b>"<mark class="modifier">,</mark> "replacing text"<mark class="modifier">,</mark> TooltipTextUtil.TextType.BOLD))*textList2^
java.util.ListTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaî î(2o
javafx.scene.text.TextTYPE_ARGUMENTF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaî î(2À
{org.jabref.gui.util.TooltipTextUtil.formatToTexts(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextReplacement...)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaî. î(;2Ê
ïorg.jabref.gui.util.TooltipTextUtil.TextReplacement.TextReplacement(java.lang.String, java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaîF î(e2ù
Morg.jabref.gui.util.TooltipTextUtilTest.formatToTextsEnd()?test@147.15:147.19CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaî< î(@´
<org.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()METHODF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaö ö(""
isFinalfalse"∏
declarationString¢<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">formatToTextsBegin</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*formatToTextsBegin2e
java.util.List.add(E)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaú ú(2æ
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaú- ú(72e
java.util.List.add(E)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaù ù(2ê
@org.jabref.gui.util.TooltipTextUtil.createText(java.lang.String)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaù- ù(72À
{org.jabref.gui.util.TooltipTextUtil.formatToTexts(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextReplacement...)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaü. ü(;2Ì
úorg.jabref.gui.search.TextFlowEqualityHelper.checkIfTextsEqualsExpectedTexts(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java°* °(I2o
java.util.ArrayList.ArrayList()CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaõ* õ(52Ê
ïorg.jabref.gui.util.TooltipTextUtil.TextReplacement.TextReplacement(java.lang.String, java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaüF ü(e2´
[org.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?expectedTextList@155.19:155.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaú ú(2´
[org.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?expectedTextList@155.19:155.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaù ù(2ü
Oorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?test@158.15:158.19CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaü< ü(@2´
[org.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?expectedTextList@155.19:155.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java°J °(Z2£
Sorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?textList@159.19:159.27CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java°\ °(d2≤
[org.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?expectedTextList@155.19:155.35DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaõ õ(#2¶
Oorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?test@158.15:158.19DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaû û(2™
Sorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?textList@159.19:159.27DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaü ü(2[
voidRETURN_TYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaö ö(∞
[org.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?expectedTextList@155.19:155.35VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaõ õ(#"
type
List<Text>"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>List<Text> <mark class="class-field">expectedTextList</mark> = new ArrayList<>()*expectedTextList2^
java.util.ListTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaõ õ(2o
javafx.scene.text.TextTYPE_ARGUMENTF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaõ õ(2o
java.util.ArrayList.ArrayList()CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaõ* õ(5Ô
Oorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?test@158.15:158.19VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaû û("
typeString"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>String <mark class="class-field">test</mark> = "<b>%0</b> This search contains entries in which any field contains the regular expression"*test2`
java.lang.StringTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaû û(≤

Sorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?textList@159.19:159.27VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaü ü("
type
List<Text>"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>List<Text> <mark class="class-field">textList</mark> = TooltipTextUtil.formatToTexts(test, new TooltipTextUtil.TextReplacement("<b>%0</b>"<mark class="modifier">,</mark> "replacing text"<mark class="modifier">,</mark> TooltipTextUtil.TextType.BOLD))*textList2^
java.util.ListTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaü ü(2o
javafx.scene.text.TextTYPE_ARGUMENTF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaü ü(2À
{org.jabref.gui.util.TooltipTextUtil.formatToTexts(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextReplacement...)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaü. ü(;2Ê
ïorg.jabref.gui.util.TooltipTextUtil.TextReplacement.TextReplacement(java.lang.String, java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaüF ü(e2ü
Oorg.jabref.gui.util.TooltipTextUtilTest.formatToTextsBegin()?test@158.15:158.19CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaü< ü(@ﬂ
=org.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()METHODF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java• •(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">formatToTextsMiddle</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*formatToTextsMiddle2e
java.util.List.add(E)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaß ß(2ê
@org.jabref.gui.util.TooltipTextUtil.createText(java.lang.String)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaß- ß(72e
java.util.List.add(E)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java® ®(2æ
norg.jabref.gui.util.TooltipTextUtil.createText(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java®- ®(72e
java.util.List.add(E)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java© ©(2ê
@org.jabref.gui.util.TooltipTextUtil.createText(java.lang.String)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java©- ©(72À
{org.jabref.gui.util.TooltipTextUtil.formatToTexts(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextReplacement...)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´. ´(;2Ì
úorg.jabref.gui.search.TextFlowEqualityHelper.checkIfTextsEqualsExpectedTexts(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java≠* ≠(I2o
java.util.ArrayList.ArrayList()CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java¶* ¶(52Ê
ïorg.jabref.gui.util.TooltipTextUtil.TextReplacement.TextReplacement(java.lang.String, java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´F ´(e2¨
\org.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?expectedTextList@166.19:166.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.javaß ß(2¨
\org.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?expectedTextList@166.19:166.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java® ®(2¨
\org.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?expectedTextList@166.19:166.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java© ©(2†
Porg.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?test@170.15:170.19CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´< ´(@2¨
\org.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?expectedTextList@166.19:166.35CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java≠J ≠(Z2§
Torg.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?textList@171.19:171.27CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java≠\ ≠(d2≥
\org.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?expectedTextList@166.19:166.35DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java¶ ¶(#2ß
Porg.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?test@170.15:170.19DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java™ ™(2´
Torg.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?textList@171.19:171.27DECLARATIONF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´ ´(2[
voidRETURN_TYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java• •(±
\org.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?expectedTextList@166.19:166.35VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java¶ ¶(#"
type
List<Text>"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>List<Text> <mark class="class-field">expectedTextList</mark> = new ArrayList<>()*expectedTextList2^
java.util.ListTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java¶ ¶(2o
javafx.scene.text.TextTYPE_ARGUMENTF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java¶ ¶(2o
java.util.ArrayList.ArrayList()CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java¶* ¶(5
Porg.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?test@170.15:170.19VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java™ ™("
typeString"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>String <mark class="class-field">test</mark> = "This search contains entries <b>%0</b> in which any field contains the regular expression"*test2`
java.lang.StringTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java™ ™(¥

Torg.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?textList@171.19:171.27VARIABLEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´ ´("
type
List<Text>"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>List<Text> <mark class="class-field">textList</mark> = TooltipTextUtil.formatToTexts(test, new TooltipTextUtil.TextReplacement("<b>%0</b>"<mark class="modifier">,</mark> "replacing text"<mark class="modifier">,</mark> TooltipTextUtil.TextType.BOLD))*textList2^
java.util.ListTYPEF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´ ´(2o
javafx.scene.text.TextTYPE_ARGUMENTF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´ ´(2À
{org.jabref.gui.util.TooltipTextUtil.formatToTexts(java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextReplacement...)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´. ´(;2Ê
ïorg.jabref.gui.util.TooltipTextUtil.TextReplacement.TextReplacement(java.lang.String, java.lang.String, org.jabref.gui.util.TooltipTextUtil.TextType)CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´F ´(e2†
Porg.jabref.gui.util.TooltipTextUtilTest.formatToTextsMiddle()?test@170.15:170.19CALLF
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java´< ´(@Ê
<org.jabref.gui.util.TooltipTextUtilTest?testText@16.19:16.27VARIABLED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java ("
isFinalfalse"
typeString"£
declarationStringç<mark class="modifier">private </mark>String <mark class="class-field">testText</mark> = "<mark class="modifier">this</mark> is a test text";"
isStaticfalse"
accessprivate*testText2^
java.lang.StringTYPED
:src\test\java\org\jabref\gui\util\TooltipTextUtilTest.java (