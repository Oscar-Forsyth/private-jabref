
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ
org.jabref.gui.desktop.os.LinuxCLASS<
2src\main\java\org\jabref\gui\desktop\os\Linux.java! !("$
packageorg.jabref.gui.desktop.os"
isFinalfalse"
inner classfalse"

isAbstractfalse"É
declarationStringÌ<mark class="annotation">@AllowedToUseAwt("Requires AWT to open a file with the native method")</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>Linux<mark class="modifier"> extends </mark>NativeDesktop"
accesspublic*Linux2ç
@org.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java% %(2¡
torg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java: :(2®
[org.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM M('2ò
Korg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javad d('2™
[org.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ Ñ(2§
Uorg.jabref.gui.desktop.os.Linux.detectProgramPath(java.lang.String, java.lang.String)DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ Ø(#2à
9org.jabref.gui.desktop.os.Linux.getApplicationDirectory()DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¥ ¥('2è
@org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaπ π(.2ù
Porg.jabref.gui.desktop.os.Linux?ETC_ALTERNATIVES_X_TERMINAL_EMULATOR@35.32:35.68DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java#  #(D2o
'org.jabref.gui.desktop.os.NativeDesktopEXTEND<
2src\main\java\org\jabref\gui\desktop\os\Linux.java! !((∏
@org.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)METHOD<
2src\main\java\org\jabref\gui\desktop\os\Linux.java% %("
isFinalfalse"ö
declarationStringÑ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">nativeOpenFile</mark>(String filePath)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*nativeOpenFile2Ü
@org.jabref.gui.JabRefExecutorService.execute(java.lang.Runnable)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java&' &(.2i
#java.awt.Desktop.open(java.io.File)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java)% )()2c
java.awt.Desktop.getDesktop()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java) )("2p
*java.lang.Runtime.exec(java.lang.String[])CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java/) /(-2d
java.lang.Runtime.getRuntime()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java/ /(&2i
#java.io.File.File(java.lang.String)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java(  (($2è
Iorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java(% ((-2ó
Qorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?file@40.21:40.25CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java)* )(.2è
Iorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java.0 .(82ñ
Porg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?cmd@46.29:46.32CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java/. /(12ï
Oorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?e2@48.35:48.37CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java1a 1(c2î
Norg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?e@51.33:51.34CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java4d 4(e2î
Iorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)!filePath	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.java%' %(/2û
Qorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?file@40.21:40.25DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java( ((2ù
Porg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?cmd@46.29:46.32DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java. .( 2õ
Norg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?e@43.46:43.47DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java+. +(/2ú
Oorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?e2@48.35:48.37DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java0# 0(%2õ
Norg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?e@51.33:51.34DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java3! 3("2Q
voidRETURN_TYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java% %(á
Qorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?file@40.21:40.25VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java( (("
typeFile"
isFinalfalse"s
declarationString^<mark class="modifier"> </mark>File <mark class="class-field">file</mark> = new File(filePath)*file2R
java.io.FileTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java( ((2i
#java.io.File.File(java.lang.String)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java(  (($2è
Iorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java(% ((-À
Porg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?cmd@46.29:46.32VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java. .( "
typeString"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>String[] <mark class="class-field">cmd</mark> = { "xdg-open"<mark class="modifier">,</mark> filePath }*cmd2X
java.lang.String[]TYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java. .(2è
Iorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java.0 .(8æ
Iorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)!filePath	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.java%' %(/"
typeString"
isFinalfalse"$
declarationStringString filePath*filePath2V
java.lang.StringTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java%  %(&Í
Norg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?e@43.46:43.47VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java+. +(/" 
typeIllegalArgumentException"
isFinalfalse"/
declarationStringIllegalArgumentException e*e2h
"java.lang.IllegalArgumentExceptionTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java+ +(-¿
Oorg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?e2@48.35:48.37VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java0# 0(%"
type	Exception"
isFinalfalse"!
declarationStringException e2*e22Y
java.lang.ExceptionTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java0 0("¡
Norg.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)?e@51.33:51.34VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java3! 3(""
typeIOException"
isFinalfalse""
declarationStringIOException e*e2Y
java.io.IOExceptionTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java3 3( ≈>
torg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)METHOD<
2src\main\java\org\jabref\gui\desktop\os\Linux.java: :("
isFinalfalse"∫
declarationString§<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">openFile</mark>(String filePath<mark class="modifier"><mark class="modifier">,</mark></mark> String fileType<mark class="modifier"><mark class="modifier">,</mark></mark> FilePreferences filePreferences)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*openFile2À
Ñorg.jabref.gui.externalfiletype.ExternalFileTypes.getExternalFileTypeByExt(java.lang.String, org.jabref.preferences.FilePreferences)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java;< ;(T2d
java.util.Optional.isPresent()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java> >(2`
java.lang.String.isEmpty()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java>E >(L2è
Iorg.jabref.gui.externalfiletype.ExternalFileType.getOpenWithApplication()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java>, >(B2^
java.util.Optional.get()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java>& >()2è
Iorg.jabref.gui.externalfiletype.ExternalFileType.getOpenWithApplication()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java?  ?(62^
java.util.Optional.get()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java? ?(2f
 java.lang.ProcessBuilder.start()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaA- A(22h
"java.lang.Process.getInputStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaBI B(W2h
"java.lang.Process.getErrorStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaCI C(W2Ü
@org.jabref.gui.JabRefExecutorService.execute(java.lang.Runnable)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaE+ E(22Ü
@org.jabref.gui.JabRefExecutorService.execute(java.lang.Runnable)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaF+ F(22Ü
@org.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaH H(2Ç
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java@0 @(>2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaB3 B(@2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaC3 C(@2√
}org.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!fileTypeCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java;U ;(]2À
Ñorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!filePreferencesCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java;_ ;(n2Ã
Öorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?type@59.35:59.39CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java> >(2Ã
Öorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?type@59.35:59.39CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java>! >(%2Œ
áorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?viewer@60.15:60.21CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java? ?(2Ã
Öorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?type@59.35:59.39CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java? ?(2Œ
áorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?viewer@60.15:60.21CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java@? @(E2√
}org.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java@G @(O2÷
èorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?processBuilder@64.27:64.41CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaA A(,2œ
àorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?process@65.20:65.27CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaBA B(H2œ
àorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?process@65.20:65.27CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaCA C(H2⁄
ìorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?streamGobblerInput@66.26:66.44CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaE3 E(E2⁄
ìorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?streamGobblerError@67.26:67.44CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaF3 F(E2√
}org.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaH H(#2∆
|org.jabref.gui.desktop.os.NativeDesktop.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)OVERRIDE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java: :(2»
}org.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!filePath	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.java:  :((2»
}org.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!fileType	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.java:1 :(92–
Ñorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!filePreferences	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.java:K :(Z2”
Öorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?type@59.35:59.39DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java;# ;('2’
áorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?viewer@60.15:60.21DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java< <(2›
èorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?processBuilder@64.27:64.41DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java@ @()2÷
àorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?process@65.20:65.27DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaA A(2·
ìorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?streamGobblerInput@66.26:66.44DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaB B(,2·
ìorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?streamGobblerError@67.26:67.44DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaC C(,2Q
voidRETURN_TYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java: :(â

Öorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?type@59.35:59.39VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java;# ;('""
typeOptional<ExternalFileType>"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>Optional<ExternalFileType> <mark class="class-field">type</mark> = ExternalFileTypes.getExternalFileTypeByExt(fileType, filePreferences)*type2X
java.util.OptionalTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java; ;(2
0org.jabref.gui.externalfiletype.ExternalFileTypeTYPE_ARGUMENT<
2src\main\java\org\jabref\gui\desktop\os\Linux.java; ;(!2À
Ñorg.jabref.gui.externalfiletype.ExternalFileTypes.getExternalFileTypeByExt(java.lang.String, org.jabref.preferences.FilePreferences)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java;< ;(T2√
}org.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!fileTypeCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java;U ;(]2À
Ñorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!filePreferencesCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java;_ ;(n∏
áorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?viewer@60.15:60.21VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java< <("
typeString"
isFinalfalse"b
declarationStringM<mark class="modifier"> </mark>String <mark class="class-field">viewer</mark>*viewer2V
java.lang.StringTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java< <(≠
èorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?processBuilder@64.27:64.41VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java@ @()"
typeProcessBuilder"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>ProcessBuilder <mark class="class-field">processBuilder</mark> = new ProcessBuilder(viewer, filePath)*processBuilder2^
java.lang.ProcessBuilderTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java@ @(2Ç
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java@0 @(>2Œ
áorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?viewer@60.15:60.21CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java@? @(E2√
}org.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java@G @(Oò
àorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?process@65.20:65.27VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaA A("
typeProcess"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Process <mark class="class-field">process</mark> = processBuilder.start()*process2W
java.lang.ProcessTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaA A(2f
 java.lang.ProcessBuilder.start()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaA- A(22÷
èorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?processBuilder@64.27:64.41CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaA A(,Ó
ìorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?streamGobblerInput@66.26:66.44VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaB B(,"
typeStreamGobbler"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>StreamGobbler <mark class="class-field">streamGobblerInput</mark> = new StreamGobbler(process.getInputStream()<mark class="modifier">,</mark> LoggerFactory.getLogger(Linux.class)::debug)*streamGobblerInput2g
!org.jabref.gui.util.StreamGobblerTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaB B(2h
"java.lang.Process.getInputStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaBI B(W2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaB3 B(@2œ
àorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?process@65.20:65.27CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaBA B(HÓ
ìorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?streamGobblerError@67.26:67.44VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaC C(,"
typeStreamGobbler"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>StreamGobbler <mark class="class-field">streamGobblerError</mark> = new StreamGobbler(process.getErrorStream()<mark class="modifier">,</mark> LoggerFactory.getLogger(Linux.class)::debug)*streamGobblerError2g
!org.jabref.gui.util.StreamGobblerTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaC C(2h
"java.lang.Process.getErrorStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaCI C(W2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaC3 C(@2œ
àorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)?process@65.20:65.27CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaCA C(HÚ
}org.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!filePath	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.java:  :(("
typeString"
isFinalfalse"$
declarationStringString filePath*filePath2V
java.lang.StringTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java: :(Ú
}org.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!fileType	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.java:1 :(9"
typeString"
isFinalfalse"$
declarationStringString fileType*fileType2V
java.lang.StringTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java:* :(0∞
Ñorg.jabref.gui.desktop.os.Linux.openFile(java.lang.String, java.lang.String, org.jabref.preferences.FilePreferences)!filePreferences	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.java:K :(Z"
typeFilePreferences"
isFinalfalse"4
declarationStringFilePreferences filePreferences*filePreferences2l
&org.jabref.preferences.FilePreferencesTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java:; :(JÆ9
[org.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)METHOD<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM M('"
isFinalfalse"Ô
declarationStringŸ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">openFileWithApplication</mark>(String filePath<mark class="modifier"><mark class="modifier">,</mark></mark> String application)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*openFileWithApplication2`
java.lang.String.isEmpty()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaP2 P(92n
(java.lang.String.split(java.lang.String)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaQ# Q((2ì
Mjava.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaS S(2f
 java.lang.ProcessBuilder.start()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaW- W(22h
"java.lang.Process.getInputStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaYI Y(W2h
"java.lang.Process.getErrorStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaZI Z(W2Ü
@org.jabref.gui.JabRefExecutorService.execute(java.lang.Runnable)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java\+ \(22Ü
@org.jabref.gui.JabRefExecutorService.execute(java.lang.Runnable)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java]+ ](22Ü
@org.jabref.gui.desktop.os.Linux.nativeOpenFile(java.lang.String)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java_ _(2Ç
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaV0 V(>2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaY3 Y(@2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaZ3 Z(@2≠
gorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)!applicationCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaP P(2≠
gorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)!applicationCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaP& P(12∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?openWith@79.17:79.25CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaQ Q(2≠
gorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)!applicationCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaQ Q("2∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?openWith@79.17:79.25CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaR+ R(32∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?openWith@79.17:79.25CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaS S(%2∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?cmdArray@82.21:82.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaS* S(22∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?openWith@79.17:79.25CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaS7 S(?2∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?cmdArray@82.21:82.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaT T(2∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?cmdArray@82.21:82.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaT T(2™
dorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaT, T(42∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?cmdArray@82.21:82.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaV? V(G2º
vorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?processBuilder@86.27:86.41CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaW W(,2µ
oorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?process@87.20:87.27CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaYA Y(H2µ
oorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?process@87.20:87.27CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaZA Z(H2¿
zorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?streamGobblerInput@89.26:89.44CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java\3 \(E2¿
zorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?streamGobblerError@90.26:90.44CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java]3 ](E2™
dorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java_ _(#2≠
corg.jabref.gui.desktop.os.NativeDesktop.openFileWithApplication(java.lang.String, java.lang.String)OVERRIDE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM M('2Ø
dorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)!filePath	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM/ M(72≤
gorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)!application	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM@ M(K2Ω
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?openWith@79.17:79.25DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaO O(2Ω
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?cmdArray@82.21:82.29DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaR R(2√
vorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?processBuilder@86.27:86.41DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaV V()2º
oorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?process@87.20:87.27DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaW W(2«
zorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?streamGobblerInput@89.26:89.44DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaY Y(,2«
zorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?streamGobblerError@90.26:90.44DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaZ Z(,2Q
voidRETURN_TYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM M(®
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?openWith@79.17:79.25VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaO O("
typeString"
isFinalfalse"f
declarationStringQ<mark class="modifier"> </mark>String[] <mark class="class-field">openWith</mark>*openWith2X
java.lang.String[]TYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaO O(Ñ
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?cmdArray@82.21:82.29VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaR R("
typeString"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>String[] <mark class="class-field">cmdArray</mark> = new String[openWith.length + 1]*cmdArray2X
java.lang.String[]TYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaR R(2∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?openWith@79.17:79.25CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaR+ R(3¨
vorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?processBuilder@86.27:86.41VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaV V()"
typeProcessBuilder"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>ProcessBuilder <mark class="class-field">processBuilder</mark> = new ProcessBuilder(cmdArray)*processBuilder2^
java.lang.ProcessBuilderTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaV V(2Ç
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaV0 V(>2∂
porg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?cmdArray@82.21:82.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaV? V(G‰
oorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?process@87.20:87.27VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaW W("
typeProcess"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Process <mark class="class-field">process</mark> = processBuilder.start()*process2W
java.lang.ProcessTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaW W(2f
 java.lang.ProcessBuilder.start()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaW- W(22º
vorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?processBuilder@86.27:86.41CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaW W(,∫
zorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?streamGobblerInput@89.26:89.44VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaY Y(,"
typeStreamGobbler"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>StreamGobbler <mark class="class-field">streamGobblerInput</mark> = new StreamGobbler(process.getInputStream()<mark class="modifier">,</mark> LoggerFactory.getLogger(Linux.class)::debug)*streamGobblerInput2g
!org.jabref.gui.util.StreamGobblerTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaY Y(2h
"java.lang.Process.getInputStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaYI Y(W2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaY3 Y(@2µ
oorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?process@87.20:87.27CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaYA Y(H∫
zorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?streamGobblerError@90.26:90.44VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaZ Z(,"
typeStreamGobbler"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>StreamGobbler <mark class="class-field">streamGobblerError</mark> = new StreamGobbler(process.getErrorStream()<mark class="modifier">,</mark> LoggerFactory.getLogger(Linux.class)::debug)*streamGobblerError2g
!org.jabref.gui.util.StreamGobblerTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaZ Z(2h
"java.lang.Process.getErrorStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaZI Z(W2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaZ3 Z(@2µ
oorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)?process@87.20:87.27CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaZA Z(HŸ
dorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)!filePath	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM/ M(7"
typeString"
isFinalfalse"$
declarationStringString filePath*filePath2V
java.lang.StringTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM( M(.‚
gorg.jabref.gui.desktop.os.Linux.openFileWithApplication(java.lang.String, java.lang.String)!application	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM@ M(K"
typeString"
isFinalfalse"'
declarationStringString application*application2V
java.lang.StringTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaM9 M(?ﬁK
Korg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)METHOD<
2src\main\java\org\jabref\gui\desktop\os\Linux.javad d('"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">openFolderAndSelectFile</mark>(Path filePath)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*openFolderAndSelectFile2o
)java.lang.System.getenv(java.lang.String)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javae' e(-2c
java.nio.file.Path.toString()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javag< g(D2i
#java.nio.file.Path.toAbsolutePath()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javag+ g(92c
java.nio.file.Path.toString()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javah9 h(A2d
java.nio.file.Path.getParent()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javah- h(62t
.java.lang.String.toLowerCase(java.util.Locale)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javak, k(72w
1java.lang.String.contains(java.lang.CharSequence)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javal l('2w
1java.lang.String.contains(java.lang.CharSequence)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javan& n(.2w
1java.lang.String.contains(java.lang.CharSequence)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javanH n(P2w
1java.lang.String.contains(java.lang.CharSequence)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javap& p(.2w
1java.lang.String.contains(java.lang.CharSequence)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javar& r(.2w
1java.lang.String.contains(java.lang.CharSequence)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javat& t(.2é
Hjava.lang.String.join(java.lang.CharSequence, java.lang.CharSequence...)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaxh x(l2f
 java.lang.ProcessBuilder.start()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaz) z(.2h
"java.lang.Process.getInputStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java|E |(S2h
"java.lang.Process.getErrorStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java}E }(S2Ü
@org.jabref.gui.JabRefExecutorService.execute(java.lang.Runnable)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java' (.2à
@org.jabref.gui.JabRefExecutorService.execute(java.lang.Runnable)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÄ' Ä(.2Ç
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javay, y(:2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java|/ |(<2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java}/ }(<2ö
Torg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javag" g(*2ö
Torg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javah$ h(,2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaj j(2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javak k(2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javak k(+2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javal l(2£
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javam m(2∞
jorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?absoluteFilePath@103.15:103.31CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javam< m(L2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javan n(%2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javan9 n(G2£
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javao o(2∞
jorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?absoluteFilePath@103.15:103.31CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javao; o(K2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javap p(%2£
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaq q(2∞
jorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?absoluteFilePath@103.15:103.31CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaq8 q(H2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javar r(%2£
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javas s(2∞
jorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?absoluteFilePath@103.15:103.31CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javas, s(<2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javat t(%2£
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javau u(2∞
jorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?absoluteFilePath@103.15:103.31CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javau. u(>2£
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaxr x(u2£
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javay; y(>2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?processBuilder@121.23:121.37CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaz z((2ß
aorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?process@122.16:122.23CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java|= |(D2ß
aorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?process@122.16:122.23CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java}= }(D2≤
lorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?streamGobblerInput@124.22:124.40CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java/ (A2¥
lorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?streamGobblerError@125.22:125.40CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÄ/ Ä(A2ù
Sorg.jabref.gui.desktop.os.NativeDesktop.openFolderAndSelectFile(java.nio.file.Path)OVERRIDE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javad d('2ü
Torg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)!filePath	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.javad- d(52µ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javae e(2∑
jorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?absoluteFilePath@103.15:103.31DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javag g(2™
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javah h(2µ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?processBuilder@121.23:121.37DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javay y(%2Æ
aorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?process@122.16:122.23DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaz z(2π
lorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?streamGobblerInput@124.22:124.40DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java| |((2π
lorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?streamGobblerError@125.22:125.40DECLARATION<
2src\main\java\org\jabref\gui\desktop\os\Linux.java} }((2Q
voidRETURN_TYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javad d(Ω
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?desktopSession@101.15:101.29VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javae e("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">desktopSession</mark> = System.getenv("DESKTOP_SESSION")*desktopSession2V
java.lang.StringTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javae e(2o
)java.lang.System.getenv(java.lang.String)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javae' e(-√
jorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?absoluteFilePath@103.15:103.31VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javag g("
typeString"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>String <mark class="class-field">absoluteFilePath</mark> = filePath.toAbsolutePath().toString()*absoluteFilePath2V
java.lang.StringTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javag g(2c
java.nio.file.Path.toString()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javag< g(D2i
#java.nio.file.Path.toAbsolutePath()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javag+ g(92ö
Torg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javag" g(*≈
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javah h("
typeString"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>String[] <mark class="class-field">cmd</mark> = { "xdg-open"<mark class="modifier">,</mark> filePath.getParent().toString() }*cmd2X
java.lang.String[]TYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javah h(2c
java.nio.file.Path.toString()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javah9 h(A2d
java.nio.file.Path.getParent()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javah- h(62ö
Torg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)!filePathCALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javah$ h(,Ü
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?processBuilder@121.23:121.37VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javay y(%"
typeProcessBuilder"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>ProcessBuilder <mark class="class-field">processBuilder</mark> = new ProcessBuilder(cmd)*processBuilder2^
java.lang.ProcessBuilderTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javay y(2Ç
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javay, y(:2£
]org.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?cmd@104.17:104.20CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javay; y(>»
aorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?process@122.16:122.23VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaz z("
typeProcess"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Process <mark class="class-field">process</mark> = processBuilder.start()*process2W
java.lang.ProcessTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaz z(2f
 java.lang.ProcessBuilder.start()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaz) z(.2Æ
horg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?processBuilder@121.23:121.37CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.javaz z((û
lorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?streamGobblerInput@124.22:124.40VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java| |(("
typeStreamGobbler"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>StreamGobbler <mark class="class-field">streamGobblerInput</mark> = new StreamGobbler(process.getInputStream()<mark class="modifier">,</mark> LoggerFactory.getLogger(Linux.class)::debug)*streamGobblerInput2g
!org.jabref.gui.util.StreamGobblerTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java| |(2h
"java.lang.Process.getInputStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java|E |(S2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java|/ |(<2ß
aorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?process@122.16:122.23CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java|= |(Dû
lorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?streamGobblerError@125.22:125.40VARIABLE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java} }(("
typeStreamGobbler"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>StreamGobbler <mark class="class-field">streamGobblerError</mark> = new StreamGobbler(process.getErrorStream()<mark class="modifier">,</mark> LoggerFactory.getLogger(Linux.class)::debug)*streamGobblerError2g
!org.jabref.gui.util.StreamGobblerTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java} }(2h
"java.lang.Process.getErrorStream()CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java}E }(S2π
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java}/ }(<2ß
aorg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)?process@122.16:122.23CALL<
2src\main\java\org\jabref\gui\desktop\os\Linux.java}= }(D«
Torg.jabref.gui.desktop.os.Linux.openFolderAndSelectFile(java.nio.file.Path)!filePath	PARAMETER<
2src\main\java\org\jabref\gui\desktop\os\Linux.javad- d(5"
typePath"
isFinalfalse""
declarationStringPath filePath*filePath2X
java.nio.file.PathTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.javad( d(,‹`
[org.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)METHOD>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ Ñ("
isFinalfalse"
declarationString⁄<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">openConsole</mark>(String absolutePath<mark class="modifier"><mark class="modifier">,</mark></mark> DialogService dialogService)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*openConsole2ì
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÜ Ü(2Ñ
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÜ Ü(!2ç
Eorg.jabref.gui.DialogService.showErrorDialogAndWait(java.lang.String)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaá á(02ñ
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaá> á(B2h
 java.lang.ProcessBuilder.start()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaå) å(.2j
"java.lang.Process.getInputStream()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaéV é(d2i
!java.io.BufferedReader.readLine()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaè) è(12g
java.lang.String.substring(int)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaë, ë(52v
.java.lang.String.lastIndexOf(java.lang.String)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaëC ë(N2y
1java.lang.String.contains(java.lang.CharSequence)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaî! î()2y
1java.lang.String.contains(java.lang.CharSequence)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javañ( ñ(02y
1java.lang.String.contains(java.lang.CharSequence)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaô( ô(02ê
Hjava.lang.String.join(java.lang.CharSequence, java.lang.CharSequence...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaü_ ü(c2x
0java.lang.ProcessBuilder.directory(java.io.File)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¢ ¢(!2h
 java.lang.ProcessBuilder.start()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java£2 £(72j
"java.lang.Process.getInputStream()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java•U •(c2j
"java.lang.Process.getErrorStream()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¶U ¶(c2à
@org.jabref.gui.JabRefExecutorService.execute(java.lang.Runnable)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java®/ ®(62à
@org.jabref.gui.JabRefExecutorService.execute(java.lang.Runnable)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java©/ ©(62Ñ
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaã, ã(:2}
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaé) é(72à
@java.io.InputStreamReader.InputStreamReader(java.io.InputStream)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaé< é(M2Ñ
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java°- °(;2k
#java.io.File.File(java.lang.String)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¢& ¢(*2ª
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java•7 •(D2ª
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¶7 ¶(D2ò
Porg.jabref.gui.desktop.os.Linux?ETC_ALTERNATIVES_X_TERMINAL_EMULATOR@35.32:35.68CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÜ" Ü(F2±
iorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!dialogServiceCALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaá á(2ö
Porg.jabref.gui.desktop.os.Linux?ETC_ALTERNATIVES_X_TERMINAL_EMULATOR@35.32:35.68CALL@
2src\main\java\org\jabref\gui\desktop\os\Linux.javaáÆ á(“2ò
Porg.jabref.gui.desktop.os.Linux?ETC_ALTERNATIVES_X_TERMINAL_EMULATOR@35.32:35.68CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaãG ã(k2¿
xorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processBuilder@139.23:139.37CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaå å((2π
qorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?process@140.16:140.23CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaéN é(U2∏
porg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?reader@142.28:142.34CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaè" è((2æ
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaê ê(2æ
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaë ë(2æ
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaë ë(+2æ
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaë6 ë(B2æ
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaî î( 2µ
morg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?cmd@147.25:147.28CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaï ï(2∞
horg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!absolutePathCALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaïQ ï(]2æ
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javañ ñ('2µ
morg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?cmd@147.25:147.28CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaò ò(2∞
horg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!absolutePathCALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaòS ò(_2æ
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaô ô('2µ
morg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?cmd@147.25:147.28CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaö ö(2∞
horg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!absolutePathCALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaö@ ö(L2µ
morg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?cmd@147.25:147.28CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaú ú(2æ
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaú( ú(42∞
horg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!absolutePathCALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaú6 ú(B2µ
morg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?cmd@147.25:147.28CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaüi ü(l2µ
morg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?cmd@147.25:147.28CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java°< °(?2π
qorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?builder@161.31:161.38CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¢ ¢(2∞
horg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!absolutePathCALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¢+ ¢(72π
qorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?builder@161.31:161.38CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java£* £(12¡
yorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processTerminal@163.24:163.39CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java•E •(T2¡
yorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processTerminal@163.24:163.39CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¶E ¶(T2ƒ
|org.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?streamGobblerInput@165.30:165.48CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java®7 ®(I2ƒ
|org.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?streamGobblerError@166.30:166.48CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java©7 ©(I2Ø
corg.jabref.gui.desktop.os.NativeDesktop.openConsole(java.lang.String, org.jabref.gui.DialogService)OVERRIDE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ Ñ(2µ
horg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!absolutePath	PARAMETER>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ# Ñ(/2∂
iorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!dialogService	PARAMETER>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ? Ñ(L2«
xorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processBuilder@139.23:139.37DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaã ã(%2¿
qorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?process@140.16:140.23DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaå å(2ø
porg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?reader@142.28:142.34DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaé é("2≈
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaè è(2º
morg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?cmd@147.25:147.28DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaì ì(2¿
qorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?builder@161.31:161.38DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java° °(&2»
yorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processTerminal@163.24:163.39DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java£ £('2À
|org.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?streamGobblerInput@165.30:165.48DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java• •(02À
|org.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?streamGobblerError@166.30:166.48DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¶ ¶(02S
voidRETURN_TYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ Ñ(›
xorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processBuilder@139.23:139.37VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaã ã(%"
typeProcessBuilder"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>ProcessBuilder <mark class="class-field">processBuilder</mark> = new ProcessBuilder("readlink"<mark class="modifier">,</mark> ETC_ALTERNATIVES_X_TERMINAL_EMULATOR)*processBuilder2`
java.lang.ProcessBuilderTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaã ã(2Ñ
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaã, ã(:2ò
Porg.jabref.gui.desktop.os.Linux?ETC_ALTERNATIVES_X_TERMINAL_EMULATOR@35.32:35.68CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaãG ã(k
qorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?process@140.16:140.23VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaå å("
typeProcess"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Process <mark class="class-field">process</mark> = processBuilder.start()*process2Y
java.lang.ProcessTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaå å(2h
 java.lang.ProcessBuilder.start()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaå) å(.2¿
xorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processBuilder@139.23:139.37CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaå å((¥
porg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?reader@142.28:142.34VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaé é(""
typeBufferedReader"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>BufferedReader <mark class="class-field">reader</mark> = new BufferedReader(new InputStreamReader(process.getInputStream()))*reader2^
java.io.BufferedReaderTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaé é(2j
"java.lang.Process.getInputStream()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaéV é(d2}
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaé) é(72à
@java.io.InputStreamReader.InputStreamReader(java.io.InputStream)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaé< é(M2π
qorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?process@140.16:140.23CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaéN é(U
vorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?emulatorName@143.19:143.31VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaè è("
typeString"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>String <mark class="class-field">emulatorName</mark> = reader.readLine()*emulatorName2X
java.lang.StringTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaè è(2i
!java.io.BufferedReader.readLine()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaè) è(12∏
porg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?reader@142.28:142.34CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaè" è((ü
morg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?cmd@147.25:147.28VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaì ì("
typeString"
isFinalfalse"a
declarationStringL<mark class="modifier"> </mark>String[] <mark class="class-field">cmd</mark>*cmd2Z
java.lang.String[]TYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaì ì(ô
qorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?builder@161.31:161.38VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java° °(&"
typeProcessBuilder"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>ProcessBuilder <mark class="class-field">builder</mark> = new ProcessBuilder(cmd)*builder2`
java.lang.ProcessBuilderTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java° °(2Ñ
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java°- °(;2µ
morg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?cmd@147.25:147.28CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java°< °(?˙
yorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processTerminal@163.24:163.39VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java£ £('"
typeProcess"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>Process <mark class="class-field">processTerminal</mark> = builder.start()*processTerminal2Y
java.lang.ProcessTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java£ £(2h
 java.lang.ProcessBuilder.start()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java£2 £(72π
qorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?builder@161.31:161.38CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java£* £(1ÿ
|org.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?streamGobblerInput@165.30:165.48VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java• •(0"
typeStreamGobbler"
isFinalfalse"˜
declarationString·<mark class="modifier"> </mark>StreamGobbler <mark class="class-field">streamGobblerInput</mark> = new StreamGobbler(processTerminal.getInputStream()<mark class="modifier">,</mark> LoggerFactory.getLogger(Linux.class)::debug)*streamGobblerInput2i
!org.jabref.gui.util.StreamGobblerTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java• •(2j
"java.lang.Process.getInputStream()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java•U •(c2ª
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java•7 •(D2¡
yorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processTerminal@163.24:163.39CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java•E •(Tÿ
|org.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?streamGobblerError@166.30:166.48VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¶ ¶(0"
typeStreamGobbler"
isFinalfalse"˜
declarationString·<mark class="modifier"> </mark>StreamGobbler <mark class="class-field">streamGobblerError</mark> = new StreamGobbler(processTerminal.getErrorStream()<mark class="modifier">,</mark> LoggerFactory.getLogger(Linux.class)::debug)*streamGobblerError2i
!org.jabref.gui.util.StreamGobblerTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¶ ¶(2j
"java.lang.Process.getErrorStream()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¶U ¶(c2ª
sorg.jabref.gui.util.StreamGobbler.StreamGobbler(java.io.InputStream, java.util.function.Consumer<java.lang.String>)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¶7 ¶(D2¡
yorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)?processTerminal@163.24:163.39CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¶E ¶(TÈ
horg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!absolutePath	PARAMETER>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ# Ñ(/"
typeString"
isFinalfalse"(
declarationStringString absolutePath*absolutePath2X
java.lang.StringTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ Ñ("Ü
iorg.jabref.gui.desktop.os.Linux.openConsole(java.lang.String, org.jabref.gui.DialogService)!dialogService	PARAMETER>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ? Ñ(L"
typeDialogService"
isFinalfalse"0
declarationStringDialogService dialogService*dialogService2d
org.jabref.gui.DialogServiceTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÑ1 Ñ(>±

Uorg.jabref.gui.desktop.os.Linux.detectProgramPath(java.lang.String, java.lang.String)METHOD>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ Ø(#"
isFinalfalse"É
declarationStringÌ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">detectProgramPath</mark>(String programName<mark class="modifier"><mark class="modifier">,</mark></mark> String directoryName)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*detectProgramPath2©
aorg.jabref.gui.desktop.os.Linux.detectProgramPath(java.lang.String, java.lang.String)!programNameCALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java∞ ∞(2©
]org.jabref.gui.desktop.os.NativeDesktop.detectProgramPath(java.lang.String, java.lang.String)OVERRIDE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ Ø(#2Æ
aorg.jabref.gui.desktop.os.Linux.detectProgramPath(java.lang.String, java.lang.String)!programName	PARAMETER>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ+ Ø(62∞
corg.jabref.gui.desktop.os.Linux.detectProgramPath(java.lang.String, java.lang.String)!directoryName	PARAMETER>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ? Ø(L2_
java.lang.StringRETURN_TYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ Ø(‡
aorg.jabref.gui.desktop.os.Linux.detectProgramPath(java.lang.String, java.lang.String)!programName	PARAMETER>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ+ Ø(6"
typeString"
isFinalfalse"'
declarationStringString programName*programName2X
java.lang.StringTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ$ Ø(*Ê
corg.jabref.gui.desktop.os.Linux.detectProgramPath(java.lang.String, java.lang.String)!directoryName	PARAMETER>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ? Ø(L"
typeString"
isFinalfalse")
declarationStringString directoryName*directoryName2X
java.lang.StringTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaØ8 Ø(>ñ
9org.jabref.gui.desktop.os.Linux.getApplicationDirectory()METHOD>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¥ ¥('"
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Path <mark class="method">getApplicationDirectory</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typePath*getApplicationDirectory2Ñ
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaµ µ(2ç
Aorg.jabref.gui.desktop.os.NativeDesktop.getApplicationDirectory()OVERRIDE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¥ ¥('2a
java.nio.file.PathRETURN_TYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¥ ¥(ß*
@org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()METHOD>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaπ π(."
isFinalfalse"™
declarationStringî<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Path <mark class="method">getDefaultFileChooserDirectory</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typePath*getDefaultFileChooserDirectory2q
)java.lang.System.getenv(java.lang.String)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java∫( ∫(.2Ñ
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaº º(2h
 java.lang.ProcessBuilder.start()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¬N ¬(S2h
 java.util.stream.Stream.toList()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaƒ ƒ(#2f
java.io.BufferedReader.lines()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaƒ ƒ(2j
"java.lang.Process.getInputStream()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√T √(b2`
java.util.List.isEmpty()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java≈ ≈(2Ç
:org.jabref.gui.desktop.os.NativeDesktop.getUserDirectory()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java« «('2Ñ
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java &  ((2ì
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÀ À(2Ç
:org.jabref.gui.desktop.os.NativeDesktop.getUserDirectory()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÕ Õ('2Ç
:org.jabref.gui.desktop.os.NativeDesktop.getUserDirectory()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java÷ ÷(2Ñ
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¬" ¬(02}
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√' √(52¢
Zjava.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.nio.charset.Charset)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√: √(K2¶
^org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?xdgDocumentsDir@186.15:186.30CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaª ª(2¶
^org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?xdgDocumentsDir@186.15:186.30CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaº º(*2û
Vorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?process@194.20:194.27CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√L √(S2û
Vorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?strings@195.25:195.32CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java≈ ≈(2û
Vorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?strings@195.25:195.32CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java…( …(/2©
aorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsDirectory@201.19:201.37CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java )  (;2§
\org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsPath@202.17:202.30CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÀ À(+2™
aorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsDirectory@201.19:201.37CALL?
2src\main\java\org\jabref\gui\desktop\os\Linux.javaÃn Ã(Ä2§
\org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsPath@202.17:202.30CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaœP œ(]2§
\org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsPath@202.17:202.30CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java– –( 2ò
Porg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?e@209.29:209.30CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java“] “(^2î
Horg.jabref.gui.desktop.os.NativeDesktop.getDefaultFileChooserDirectory()OVERRIDE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaπ π(.2≠
^org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?xdgDocumentsDir@186.15:186.30DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java∫ ∫(2•
Vorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?process@194.20:194.27DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¬ ¬(2•
Vorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?strings@195.25:195.32DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√ √( 2∞
aorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsDirectory@201.19:201.37DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java… …(%2´
\org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsPath@202.17:202.30DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java   (2ü
Porg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?e@209.29:209.30DECLARATION>
2src\main\java\org\jabref\gui\desktop\os\Linux.java— —(2a
java.nio.file.PathRETURN_TYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaπ π(Ω
^org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?xdgDocumentsDir@186.15:186.30VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java∫ ∫("
typeString"
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark>String <mark class="class-field">xdgDocumentsDir</mark> = System.getenv("XDG_DOCUMENTS_DIR")*xdgDocumentsDir2X
java.lang.StringTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java∫ ∫(2q
)java.lang.System.getenv(java.lang.String)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java∫( ∫(.⁄
Vorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?process@194.20:194.27VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¬ ¬("
typeProcess"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>Process <mark class="class-field">process</mark> = new ProcessBuilder("xdg-user-dir"<mark class="modifier">,</mark> "DOCUMENTS").start()*process2Y
java.lang.ProcessTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¬ ¬(2h
 java.lang.ProcessBuilder.start()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¬N ¬(S2Ñ
<java.lang.ProcessBuilder.ProcessBuilder(java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java¬" ¬(0ã
Vorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?strings@195.25:195.32VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√ √( "
typeList<String>"
isFinalfalse"˜
declarationString·<mark class="modifier"> </mark>List<String> <mark class="class-field">strings</mark> = new BufferedReader(new InputStreamReader(process.getInputStream()<mark class="modifier">,</mark> StandardCharsets.UTF_8)).lines().toList()*strings2V
java.util.ListTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√ √(2a
java.lang.StringTYPE_ARGUMENT>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√ √(2h
 java.util.stream.Stream.toList()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaƒ ƒ(#2f
java.io.BufferedReader.lines()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.javaƒ ƒ(2j
"java.lang.Process.getInputStream()CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√T √(b2}
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√' √(52¢
Zjava.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.nio.charset.Charset)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√: √(K2û
Vorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?process@194.20:194.27CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java√L √(S‰
aorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsDirectory@201.19:201.37VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java… …(%"
typeString"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>String <mark class="class-field">documentsDirectory</mark> = strings.getFirst()*documentsDirectory2X
java.lang.StringTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java… …(2û
Vorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?strings@195.25:195.32CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java…( …(/Ó
\org.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsPath@202.17:202.30VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java   ("
typePath"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>Path <mark class="class-field">documentsPath</mark> = Path.of(documentsDirectory)*documentsPath2Z
java.nio.file.PathTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java   (2Ñ
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java &  ((2©
aorg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?documentsDirectory@201.19:201.37CALL>
2src\main\java\org\jabref\gui\desktop\os\Linux.java )  (;«
Porg.jabref.gui.desktop.os.Linux.getDefaultFileChooserDirectory()?e@209.29:209.30VARIABLE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java— —("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2[
java.io.IOExceptionTYPE>
2src\main\java\org\jabref\gui\desktop\os\Linux.java— —(⁄
Porg.jabref.gui.desktop.os.Linux?ETC_ALTERNATIVES_X_TERMINAL_EMULATOR@35.32:35.68VALUE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java#  #(D"
isFinaltrue"
typeString"¸
declarationStringÊ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">ETC_ALTERNATIVES_X_TERMINAL_EMULATOR</mark> = "/etc/alternatives/x-terminal-emulator";"
isStatictrue"
accessprivate*$ETC_ALTERNATIVES_X_TERMINAL_EMULATOR2V
java.lang.StringTYPE<
2src\main\java\org\jabref\gui\desktop\os\Linux.java# #(