
:src\main\java\org\jabref\gui\FallbackExceptionHandler.javaû
'org.jabref.gui.FallbackExceptionHandlerCLASSD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (%"
packageorg.jabref.gui"
isFinalfalse"
inner classfalse"

isAbstractfalse"√
declarationString≠<mark class="modifier">public </mark><mark class="modifier">class </mark>FallbackExceptionHandler<mark class="modifier"><br>implements </mark>Thread.UncaughtExceptionHandler"
accesspublic*FallbackExceptionHandler2ñ
Aorg.jabref.gui.FallbackExceptionHandler.installExceptionHandler()DECLARATIOND
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (.2µ
`org.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)DECLARATIOND
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (!2è
:org.jabref.gui.FallbackExceptionHandler?LOGGER@13.32:13.38DECLARATIOND
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java  (&2y
)java.lang.Thread.UncaughtExceptionHandlerEXTENDD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java8 (P€
Aorg.jabref.gui.FallbackExceptionHandler.installExceptionHandler()METHODD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (."
isFinalfalse"∏
declarationString¢<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">installExceptionHandler</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*installExceptionHandler2¨
^java.lang.Thread.setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)CALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (12ê
Borg.jabref.gui.FallbackExceptionHandler.FallbackExceptionHandler()CALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java6 (N2Y
voidRETURN_TYPED
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (Ë
`org.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)METHODD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (!"
isFinalfalse"ô
declarationStringÉ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">uncaughtException</mark>(Thread thread<mark class="modifier"><mark class="modifier">,</mark></mark> Throwable exception)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*uncaughtException2õ
Morg.jabref.gui.util.DefaultTaskExecutor.runInJavaFXThread(java.lang.Runnable)CALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (-2®
Zorg.jabref.gui.DialogService.showErrorDialogAndWait(java.lang.String, java.lang.Throwable)CALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java" (82à
:org.jabref.gui.FallbackExceptionHandler?LOGGER@13.32:13.38CALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (2µ
gorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)!threadCALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java9 (?2∏
jorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)!exceptionCALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.javaA (J2»
zorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)?dialogService@23.34:23.47CALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (!2µ
gorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)!threadCALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java] (c2∏
jorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)!exceptionCALLD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.javae (n2∫
gorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)!thread	PARAMETERD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java) (/2Ω
jorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)!exception	PARAMETERD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java; (D2œ
zorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)?dialogService@23.34:23.47DECLARATIOND
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java" (/2Y
voidRETURN_TYPED
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (û
zorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)?dialogService@23.34:23.47VARIABLED
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java" (/"
typeDialogService"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>DialogService <mark class="class-field">dialogService</mark> = Injector.instantiateModelOrService(DialogService.class)*dialogService2j
org.jabref.gui.DialogServiceTYPED
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (!Ë
gorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)!thread	PARAMETERD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java) (/"
typeThread"
isFinalfalse""
declarationStringThread thread*thread2^
java.lang.ThreadTYPED
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java" ((˙
jorg.jabref.gui.FallbackExceptionHandler.uncaughtException(java.lang.Thread, java.lang.Throwable)!exception	PARAMETERD
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java; (D"
type	Throwable"
isFinalfalse"(
declarationStringThrowable exception*	exception2a
java.lang.ThrowableTYPED
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java1 (:®
:org.jabref.gui.FallbackExceptionHandler?LOGGER@13.32:13.38VALUED
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java  (&"
isFinaltrue"
typeLogger"Ó
declarationStringÿ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(FallbackExceptionHandler.class);"
isStatictrue"
accessprivate*LOGGER2^
org.slf4j.LoggerTYPED
:src\main\java\org\jabref\gui\FallbackExceptionHandler.java (