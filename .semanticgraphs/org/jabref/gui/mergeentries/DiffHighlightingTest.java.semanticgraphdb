
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaî
0org.jabref.gui.mergeentries.DiffHighlightingTestCLASSM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java ("&
packageorg.jabref.gui.mergeentries"
isFinalfalse"
inner classfalse"

isAbstractfalse"Ê
declarationString–<mark class="annotation">@GUITest</mark> <br><mark class="annotation">@ExtendWith(ApplicationExtension.class)</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>DiffHighlightingTest"
accesspackage_private*DiffHighlightingTest2Ï
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (#2∫
\org.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingBothNullThrowsNPE()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java	 (22ß
Iorg.jabref.gui.mergeentries.DiffHighlightingTest.nullSeparatorThrowsNPE()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java$	 $(2Ø
Qorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingNoDiff()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java)	 )('2¬
dorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingSingleWordAddTextWordDiff()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java4	 4(:2«
iorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingSingleWordAddTextCharacterDiff()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java>	 >(?2≈
gorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingSingleWordDeleteTextWordDiff()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaJ	 J(=2 
lorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingSingleWordDeleteTextCharacterDiff()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaT	 T(B2«
iorg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingSingleWordAddTextWordDiff()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javab	 b(?2Ã
norg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingSingleWordAddTextCharacterDiff()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javai	 i(D2 
lorg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingSingleWordDeleteTextWordDiff()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javat	 t(B2œ
qorg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingSingleWordDeleteTextCharacterDiff()DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java{	 {(G2‘
torg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingMultipleWordsDeleteTextCharacterDiff()DECLARATIONO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaâ	 â(J2œ
oorg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingMultipleWordsDeleteTextWordDiff()DECLARATIONO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java•	 •(E§)
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (#"
isFinalfalse"õ
declarationStringÖ<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">assertEquals</mark>(List&lt;Text&gt; expected<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;Text&gt; actual)"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*assertEquals2r
java.lang.Object.toString()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java) (12r
java.lang.Object.toString()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java< (D2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java8 (;2t
java.util.Collection.stream()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java/ (52{
$java.util.stream.Collectors.toList()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javax (~2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java4 (72t
java.util.Collection.stream()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java+ (12{
$java.util.stream.Collectors.toList()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javat (z2Ó
ñorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!expectedCALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java  ((2Ï
îorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!actualCALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java5 (;2Ó
ñorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!expectedCALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java& (.2ˆ
ûorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?text@25.60:25.64CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaD (H2Ï
îorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!actualCALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java$ (*2ˆ
ûorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?text@26.56:26.60CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java@ (D2Ä
®org.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?expectedStyles@25.21:25.35CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java  (.2˛
¶org.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?actualStyles@26.21:26.33CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java0 (<2Û
ñorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!expected	PARAMETERM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java/ (72Ò
îorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!actual	PARAMETERM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaD (J2á
®org.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?expectedStyles@25.21:25.35DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (#2Ö
¶org.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?actualStyles@26.21:26.33DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (!2˝
ûorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?text@25.60:25.64DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java< (@2˝
ûorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?text@26.56:26.60DECLARATIONM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java8 (<2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (î
®org.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?expectedStyles@25.21:25.35VARIABLEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (#"
typeList<String>"
isFinalfalse"œ
declarationStringπ<mark class="modifier"> </mark>List<String> <mark class="class-field">expectedStyles</mark> = expected.stream().map(text -> text.getStyleClass().toString()).collect(Collectors.toList())*expectedStyles2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (2p
java.lang.StringTYPE_ARGUMENTM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (2£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javae (l2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java8 (;2t
java.util.Collection.stream()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java/ (52{
$java.util.stream.Collectors.toList()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javax (~2Ó
ñorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!expectedCALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java& (.2ˆ
ûorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?text@25.60:25.64CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaD (Hä
¶org.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?actualStyles@26.21:26.33VARIABLEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (!"
typeList<String>"
isFinalfalse"À
declarationStringµ<mark class="modifier"> </mark>List<String> <mark class="class-field">actualStyles</mark> = actual.stream().map(text -> text.getStyleClass().toString()).collect(Collectors.toList())*actualStyles2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (2p
java.lang.StringTYPE_ARGUMENTM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (2£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaa (h2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java4 (72t
java.util.Collection.stream()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java+ (12{
$java.util.stream.Collectors.toList()CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javat (z2Ï
îorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!actualCALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java$ (*2ˆ
ûorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?text@26.56:26.60CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java@ (D¨
ñorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!expected	PARAMETERM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java/ (7"
type
List<Text>"
isFinalfalse"(
declarationStringList<Text> expected*expected2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java$ ((2v
javafx.scene.text.TextTYPE_ARGUMENTM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java) (-¶
îorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)!actual	PARAMETERM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaD (J"
type
List<Text>"
isFinalfalse"&
declarationStringList<Text> actual*actual2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java9 (=2v
javafx.scene.text.TextTYPE_ARGUMENTM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java> (Bæ
ûorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?text@25.60:25.64VARIABLEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java< (@"
type"
isFinalfalse"
declarationString text*text2TYPEæ
ûorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)?text@26.56:26.60VARIABLEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java8 (<"
type"
isFinalfalse"
declarationString text*text2TYPE»
\org.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingBothNullThrowsNPE()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java	 (2"
isFinalfalse"…
declarationString≥<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateDiffHighlightingBothNullThrowsNPE</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)generateDiffHighlightingBothNullThrowsNPE2“
{org.jabref.gui.mergeentries.DiffHighlighting.generateDiffHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java S  (k2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java (è
Iorg.jabref.gui.mergeentries.DiffHighlightingTest.nullSeparatorThrowsNPE()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java$	 $("
isFinalfalse"∂
declarationString†<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">nullSeparatorThrowsNPE</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*nullSeparatorThrowsNPE2“
{org.jabref.gui.mergeentries.DiffHighlighting.generateDiffHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java%S %(k2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java$ $(Ù
Qorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingNoDiff()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java)	 )('"
isFinalfalse"æ
declarationString®<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateDiffHighlightingNoDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*generateDiffHighlightingNoDiff2Â
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java* *(2t
java.util.Arrays.asList(T...)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java+ +(2¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java,) ,(52¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java-) -(52¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java.) .(52“
{org.jabref.gui.mergeentries.DiffHighlighting.generateDiffHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java0! 0(92b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java) )(Ç
dorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingSingleWordAddTextWordDiff()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java4	 4(:"
isFinalfalse"—
declarationStringª<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateDiffHighlightingSingleWordAddTextWordDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*1generateDiffHighlightingSingleWordAddTextWordDiff2Â
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java5 5(2t
java.util.Arrays.asList(T...)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java6 6(2†
Iorg.jabref.gui.mergeentries.DiffHighlighting.forRemoved(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java7) 7(32û
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java8) 8(12“
{org.jabref.gui.mergeentries.DiffHighlighting.generateDiffHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java:! :(92b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java4 4(›
iorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingSingleWordAddTextCharacterDiff()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java>	 >(?"
isFinalfalse"÷
declarationString¿<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateDiffHighlightingSingleWordAddTextCharacterDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*6generateDiffHighlightingSingleWordAddTextCharacterDiff2Â
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java? ?(2t
java.util.Arrays.asList(T...)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java@ @(2¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaA) A(52¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaB) B(52¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaC) C(52û
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaD) D(12“
{org.jabref.gui.mergeentries.DiffHighlighting.generateDiffHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaF! F(92b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java> >(ã
gorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingSingleWordDeleteTextWordDiff()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaJ	 J(="
isFinalfalse"‘
declarationStringæ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateDiffHighlightingSingleWordDeleteTextWordDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*4generateDiffHighlightingSingleWordDeleteTextWordDiff2Â
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaK K(2t
java.util.Arrays.asList(T...)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaL L(2†
Iorg.jabref.gui.mergeentries.DiffHighlighting.forRemoved(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaM) M(32û
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaN) N(12“
{org.jabref.gui.mergeentries.DiffHighlighting.generateDiffHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaP! P(92b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaJ J(Æ
lorg.jabref.gui.mergeentries.DiffHighlightingTest.generateDiffHighlightingSingleWordDeleteTextCharacterDiff()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaT	 T(B"
isFinalfalse"Ÿ
declarationString√<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateDiffHighlightingSingleWordDeleteTextCharacterDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*9generateDiffHighlightingSingleWordDeleteTextCharacterDiff2Â
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaU U(2t
java.util.Arrays.asList(T...)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaV V(2¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaW) W(52¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaX) X(52¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaY) Y(52†
Iorg.jabref.gui.mergeentries.DiffHighlighting.forRemoved(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaZ) Z(32†
Iorg.jabref.gui.mergeentries.DiffHighlighting.forRemoved(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java[) [(32†
Iorg.jabref.gui.mergeentries.DiffHighlighting.forRemoved(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java\) \(32“
{org.jabref.gui.mergeentries.DiffHighlighting.generateDiffHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java^! ^(92b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaT T(ˇ

iorg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingSingleWordAddTextWordDiff()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javab	 b(?"
isFinalfalse"÷
declarationString¿<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateSymmetricHighlightingSingleWordAddTextWordDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*6generateSymmetricHighlightingSingleWordAddTextWordDiff2Â
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javac c(2}
&java.util.Collections.singletonList(T)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javad d()2†
Iorg.jabref.gui.mergeentries.DiffHighlighting.forChanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javad; d(E2ÿ
Äorg.jabref.gui.mergeentries.DiffHighlighting.generateSymmetricHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javae! e(>2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javab b(—
norg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingSingleWordAddTextCharacterDiff()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javai	 i(D"
isFinalfalse"€
declarationString≈<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateSymmetricHighlightingSingleWordAddTextCharacterDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*;generateSymmetricHighlightingSingleWordAddTextCharacterDiff2Â
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaj j(2t
java.util.Arrays.asList(T...)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javak k(2¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javal) l(52¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javam) m(52¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javan) n(52ÿ
Äorg.jabref.gui.mergeentries.DiffHighlighting.generateSymmetricHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javap! p(>2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javai i(à
lorg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingSingleWordDeleteTextWordDiff()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javat	 t(B"
isFinalfalse"Ÿ
declarationString√<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateSymmetricHighlightingSingleWordDeleteTextWordDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*9generateSymmetricHighlightingSingleWordDeleteTextWordDiff2Â
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javau u(2}
&java.util.Collections.singletonList(T)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javav v()2†
Iorg.jabref.gui.mergeentries.DiffHighlighting.forChanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javav; v(E2ÿ
Äorg.jabref.gui.mergeentries.DiffHighlighting.generateSymmetricHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaw! w(>2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javat t(«
qorg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingSingleWordDeleteTextCharacterDiff()METHODM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java{	 {(G"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateSymmetricHighlightingSingleWordDeleteTextCharacterDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*>generateSymmetricHighlightingSingleWordDeleteTextCharacterDiff2Â
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java| |(2t
java.util.Arrays.asList(T...)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java} }(2¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java~) ~(52¢
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java) (52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaÄ) Ä(52†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaÅ) Å(12†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaÇ) Ç(12†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaÉ) É(12⁄
Äorg.jabref.gui.mergeentries.DiffHighlighting.generateSymmetricHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaÖ! Ö(>2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java{ {(Ó#
torg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingMultipleWordsDeleteTextCharacterDiff()METHODO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaâ	 â(J"
isFinalfalse"·
declarationStringÀ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateSymmetricHighlightingMultipleWordsDeleteTextCharacterDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*AgenerateSymmetricHighlightingMultipleWordsDeleteTextCharacterDiff2Á
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaä ä(2v
java.util.Arrays.asList(T...)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaã ã(2§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaå) å(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaç) ç(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaé) é(52†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaè) è(12†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaê) ê(12†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaë) ë(12§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaí) í(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaì) ì(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaî) î(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaï) ï(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javañ) ñ(52†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaó) ó(12†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaò) ò(12†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaô) ô(12†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaö) ö(12§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaõ) õ(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaú) ú(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaù) ù(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaû) û(52§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaü) ü(52⁄
Äorg.jabref.gui.mergeentries.DiffHighlighting.generateSymmetricHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java°! °(>2d
voidRETURN_TYPEO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaâ â(™
oorg.jabref.gui.mergeentries.DiffHighlightingTest.generateSymmetricHighlightingMultipleWordsDeleteTextWordDiff()METHODO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java•	 •(E"
isFinalfalse"‹
declarationString∆<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">generateSymmetricHighlightingMultipleWordsDeleteTextWordDiff</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*<generateSymmetricHighlightingMultipleWordsDeleteTextWordDiff2Á
çorg.jabref.gui.mergeentries.DiffHighlightingTest.assertEquals(java.util.List<javafx.scene.text.Text>, java.util.List<javafx.scene.text.Text>)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java¶ ¶(2v
java.util.Arrays.asList(T...)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaß ß(2§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java®) ®(52†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java©) ©(12§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java™) ™(52†
Gorg.jabref.gui.mergeentries.DiffHighlighting.forAdded(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java´) ´(12§
Korg.jabref.gui.mergeentries.DiffHighlighting.forUnchanged(java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java¨) ¨(52⁄
Äorg.jabref.gui.mergeentries.DiffHighlighting.generateSymmetricHighlighting(java.lang.String, java.lang.String, java.lang.String)CALLO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.javaÆ! Æ(>2d
voidRETURN_TYPEO
Csrc\test\java\org\jabref\gui\mergeentries\DiffHighlightingTest.java• •(