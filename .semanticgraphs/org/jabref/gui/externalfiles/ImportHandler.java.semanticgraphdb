
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaõ8
*org.jabref.gui.externalfiles.ImportHandlerCLASSG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java< <("'
packageorg.jabref.gui.externalfiles"
isFinalfalse"
inner classfalse"

isAbstractfalse"k
declarationStringV<mark class="modifier">public </mark><mark class="modifier">class </mark>ImportHandler"
accesspublic*ImportHandler2é
µorg.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaI I(2é
6org.jabref.gui.externalfiles.ImportHandler.getLinker()DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java]$ ](-2æ
forg.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaa@ a(W2±
Worg.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¨ ¨(-2√
iorg.jabref.gui.externalfiles.ImportHandler.importEntries(java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑ ∑(2 
porg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaΩ Ω($2Ú
óorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaƒ ƒ(-2ƒ
Èorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java» »(.2·
Üorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊ ◊(2‚
áorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹ ‹(+2ÿ
˝org.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡ ‡(.2‹
Åorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ# Ù(72»
norg.jabref.gui.externalfiles.ImportHandler.setAutomaticFields(java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaˇ ˇ("2π
_org.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá á(#2ˇ
§org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaò ò(2¬
horg.jabref.gui.externalfiles.ImportHandler.generateKeys(java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java™ ™(2ß
Morg.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∂ ∂(*2ß
Morg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¿ ¿(*2ß
Morg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊ ◊(+2∂
\org.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÂ Â(%2ƒ
jorg.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÎ Î('2∏
^org.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÒ Ò(&2Ñ
©org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜ ˜(/2ï
=org.jabref.gui.externalfiles.ImportHandler?LOGGER@62.32:62.38DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java>  >(&2°
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java?% ?(72°
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java@% @(72†
Horg.jabref.gui.externalfiles.ImportHandler?fileUpdateMonitor@65.36:65.53DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaA$ A(52ï
=org.jabref.gui.externalfiles.ImportHandler?linker@66.43:66.49DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaB+ B(12û
Forg.jabref.gui.externalfiles.ImportHandler?contentImporter@67.47:67.62DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaC/ C(>2ö
Borg.jabref.gui.externalfiles.ImportHandler?undoManager@68.30:68.41DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaD D()2õ
Corg.jabref.gui.externalfiles.ImportHandler?stateManager@69.31:69.43DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaE E(+2ú
Dorg.jabref.gui.externalfiles.ImportHandler?dialogService@70.32:70.45DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaF  F(-2õ
Corg.jabref.gui.externalfiles.ImportHandler?taskExecutor@71.31:71.43DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaG G(+æR
µorg.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)CONSTRUCTORG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaI I("°
declarationStringã<mark class="modifier">public </mark><mark class="method">ImportHandler</mark>(BibDatabaseContext database<mark class="modifier"><mark class="modifier">,</mark></mark> PreferencesService preferencesService<mark class="modifier"><mark class="modifier">,</mark></mark> FileUpdateMonitor fileupdateMonitor<mark class="modifier"><mark class="modifier">,</mark></mark> UndoManager undoManager<mark class="modifier"><mark class="modifier">,</mark></mark> StateManager stateManager<mark class="modifier"><mark class="modifier">,</mark></mark> DialogService dialogService<mark class="modifier"><mark class="modifier">,</mark></mark> TaskExecutor taskExecutor)*ImportHandler2è
>org.jabref.preferences.PreferencesService.getFilePreferences()CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaXF X(X2ó
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaYS Y(m2î
¬org.jabref.gui.externalfiles.ExternalFilesEntryLinker.ExternalFilesEntryLinker(org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.DialogService)CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaX X(22ê
æorg.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!databaseCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaQ" Q(*2ö
»org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!preferencesServiceCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaR" R(42ô
«org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!fileupdateMonitorCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaS! S(22î
¬org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!stateManagerCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaT T((2ï
√org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!dialogServiceCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaU U(*2î
¬org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!taskExecutorCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaV V((2ö
»org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!preferencesServiceCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaX3 X(E2ê
æorg.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!databaseCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaX\ X(d2ï
√org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!dialogServiceCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaXf X(s2ö
»org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!preferencesServiceCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaY@ Y(R2ì
¡org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!undoManagerCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaZ Z(&2ö
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaQ Q(2ö
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaR R(2ô
Horg.jabref.gui.externalfiles.ImportHandler?fileUpdateMonitor@65.36:65.53CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaS S(2î
Corg.jabref.gui.externalfiles.ImportHandler?stateManager@69.31:69.43CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaT T(2ï
Dorg.jabref.gui.externalfiles.ImportHandler?dialogService@70.32:70.45CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaU U(2î
Corg.jabref.gui.externalfiles.ImportHandler?taskExecutor@71.31:71.43CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaV V(2é
=org.jabref.gui.externalfiles.ImportHandler?linker@66.43:66.49CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaX X(2ó
Forg.jabref.gui.externalfiles.ImportHandler?contentImporter@67.47:67.62CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaY Y(2ì
Borg.jabref.gui.externalfiles.ImportHandler?undoManager@68.30:68.41CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaZ Z(2ï
æorg.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!database	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaI, I(42ü
»org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!preferencesService	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaJ, J(>2û
«org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!fileupdateMonitor	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaK+ K(<2ò
¡org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!undoManager	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaL% L(02ô
¬org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!stateManager	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaM& M(22ö
√org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!dialogService	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaN' N(42ô
¬org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!taskExecutor	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaO& O(22Ç
*org.jabref.gui.externalfiles.ImportHandlerRETURN_TYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaI I(˛
æorg.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!database	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaI, I(4"
typeBibDatabaseContext"
isFinalfalse"0
declarationStringBibDatabaseContext database*database2}
,org.jabref.model.database.BibDatabaseContextTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaI I(+ô
»org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!preferencesService	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaJ, J(>"
typePreferencesService"
isFinalfalse":
declarationString%PreferencesService preferencesService*preferencesService2z
)org.jabref.preferences.PreferencesServiceTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaJ J(+í
«org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!fileupdateMonitor	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaK+ K(<"
typeFileUpdateMonitor"
isFinalfalse"8
declarationString#FileUpdateMonitor fileupdateMonitor*fileupdateMonitor2x
'org.jabref.model.util.FileUpdateMonitorTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaK K(*È
¡org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!undoManager	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaL% L(0"
typeUndoManager"
isFinalfalse",
declarationStringUndoManager undoManager*undoManager2m
javax.swing.undo.UndoManagerTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaL L($Ì
¬org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!stateManager	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaM& M(2"
typeStateManager"
isFinalfalse".
declarationStringStateManager stateManager*stateManager2l
org.jabref.gui.StateManagerTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaM M(%Û
√org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!dialogService	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaN' N(4"
typeDialogService"
isFinalfalse"0
declarationStringDialogService dialogService*dialogService2m
org.jabref.gui.DialogServiceTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaN N(&Ú
¬org.jabref.gui.externalfiles.ImportHandler.ImportHandler(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, javax.swing.undo.UndoManager, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.gui.util.TaskExecutor)!taskExecutor	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaO& O(2"
typeTaskExecutor"
isFinalfalse".
declarationStringTaskExecutor taskExecutor*taskExecutor2q
 org.jabref.gui.util.TaskExecutorTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaO O(%ü
6org.jabref.gui.externalfiles.ImportHandler.getLinker()METHODG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java]$ ](-"
isFinalfalse"z
declarationStringe<mark class="modifier">public </mark>ExternalFilesEntryLinker <mark class="method">getLinker</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse" 
typeExternalFilesEntryLinker*	getLinker2é
=org.jabref.gui.externalfiles.ImportHandler?linker@66.43:66.49CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java^ ^(2ç
5org.jabref.gui.externalfiles.ExternalFilesEntryLinkerRETURN_TYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java] ](#‰\
forg.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)METHODG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaa@ a(W"
isFinalfalse"Õ
declarationString∑<mark class="modifier">public </mark>BackgroundTask&lt;List&lt;ImportFilesResultItemViewModel&gt;&gt; <mark class="method">importFilesInBackground</mark>(final List&lt;Path&gt; files)"
isStaticfalse"
accesspublic"

isAbstractfalse"<
type4BackgroundTask<List<ImportFilesResultItemViewModel>>*importFilesInBackground2Ä
/org.jabref.gui.util.BackgroundTask.isCanceled()CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javam m("2Ñ
3org.jabref.gui.util.BackgroundTask.BackgroundTask()CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javab b(#2À
zorg.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)?counter@99.24:99.31CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javah h(2Ω
lorg.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)!filesCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaj' j(,2ƒ
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-365f45f2-4228-4608-90e0-49bd40b15635.call()?file@106.32:106.36CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javarN r(R2À
zorg.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)?counter@99.24:99.31CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javas' s(.2Ω
lorg.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)!filesCALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javas0 s(52ƒ
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-a39d42b7-c4bf-40f5-a12d-09c796208d8f.call()?file@106.32:106.36CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaw/ w(32ó
Forg.jabref.gui.externalfiles.ImportHandler?contentImporter@67.47:67.62CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javax4 x(C2ƒ
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-aadcc8f1-d493-43e3-94d7-b7c56ae971f9.call()?file@106.32:106.36CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaxU x(Y2“
Äorg.jabref.gui.externalfiles.ImportHandler.Anonymous-3d68ddad-6590-45fb-80b7-ba8f0ab6bb0f.call()?pdfImporterResult@120.32:120.49CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javay> y(O2“
Äorg.jabref.gui.externalfiles.ImportHandler.Anonymous-6eb413a1-c93e-4c30-86b6-22ef2ea45d1a.call()?pdfImporterResult@120.32:120.49CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java{  {(12ƒ
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-d19d42e3-bf9b-4707-aad5-818fb4b9ca53.call()?file@106.32:106.36CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java|0 |(42”
Äorg.jabref.gui.externalfiles.ImportHandler.Anonymous-b99ecc86-9594-4443-b271-34f3f41fb47f.call()?pdfImporterResult@120.32:120.49CALLH
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java|p |(Å2–
org.jabref.gui.externalfiles.ImportHandler.Anonymous-48cc073e-d2f9-4f2f-8da7-a051297d39c5.call()?pdfEntriesInFile@121.43:121.59CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java! (12Œ
{org.jabref.gui.externalfiles.ImportHandler.Anonymous-66641418-e5e5-4bfa-8352-1cfe27a3ba63.call()?entriesToAdd@107.41:107.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÄ  Ä(,2“
org.jabref.gui.externalfiles.ImportHandler.Anonymous-2f3153f3-5872-4b74-ab9a-e5a2b9ce362b.call()?pdfEntriesInFile@121.43:121.59CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÄ4 Ä(D2∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-f1621b23-6974-45f6-b147-ba368257fb60.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅ0 Å(42Œ
{org.jabref.gui.externalfiles.ImportHandler.Anonymous-af4388c1-982f-49c7-a337-daa25c014070.call()?entriesToAdd@107.41:107.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÉ  É(,2∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-18966f79-c741-4e48-b115-1e5ca8647385.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÉJ É(N2∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-ea27f990-1d79-4726-a2df-674fec84c851.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÑ0 Ñ(42∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-942c00a0-dcc6-420d-bbb5-14056d56ad90.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÜ6 Ü(:2ô
Forg.jabref.gui.externalfiles.ImportHandler?contentImporter@67.47:67.62CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá5 á(D2∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-49edcf47-231b-4ef0-aeb5-9ee02f6790d9.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaáW á([2õ
Horg.jabref.gui.externalfiles.ImportHandler?fileUpdateMonitor@65.36:65.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá] á(n2’
Åorg.jabref.gui.externalfiles.ImportHandler.Anonymous-07337f76-4ac4-4296-86d3-d9ded480bfdb.call()?bibtexParserResult@135.32:135.50CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaà  à(22∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-f1b856ff-39d6-4c7b-a2a6-b52570fd5a9d.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaâ0 â(42’
Åorg.jabref.gui.externalfiles.ImportHandler.Anonymous-8e3f8159-03fc-47bb-a26f-824c3d66ade7.call()?bibtexParserResult@135.32:135.50CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaâ= â(O2Œ
{org.jabref.gui.externalfiles.ImportHandler.Anonymous-67eabf59-b1b4-4a15-b68d-07f861d10fbb.call()?entriesToAdd@107.41:107.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaå å((2’
Åorg.jabref.gui.externalfiles.ImportHandler.Anonymous-ad7a75cb-90a3-4ed4-b38a-7165ebb82e6b.call()?bibtexParserResult@135.32:135.50CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaå0 å(B2∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-22b887de-8913-48c9-ac85-0cfcb1cfd5c8.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaç, ç(02Œ
{org.jabref.gui.externalfiles.ImportHandler.Anonymous-105fb7f5-de42-4c73-8f98-f649a5450562.call()?entriesToAdd@107.41:107.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaè è((2∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-40fe71af-552d-4bf8-930d-520eb6bc126f.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaèF è(J2∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-93f7cce1-ce0e-491f-b620-2c7b8a0cc07f.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaê, ê(02ƒ
qorg.jabref.gui.externalfiles.ImportHandler.Anonymous-aecfc32c-359a-40cb-b89b-a09716d91386.call()?ex@146.41:146.43CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaì8 ì(:2∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-da762bc3-74b1-4a3c-98fd-86453b542971.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaî( î(,2ƒ
qorg.jabref.gui.externalfiles.ImportHandler.Anonymous-088c3a30-ef97-413f-958f-0848185e6074.call()?ex@146.41:146.43CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaî` î(b2Œ
{org.jabref.gui.externalfiles.ImportHandler.Anonymous-7b147f16-f7d7-4d4a-9fe4-fb74415ebd1c.call()?entriesToAdd@107.41:107.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaöN ö(Z2ƒ
qorg.jabref.gui.externalfiles.ImportHandler.Anonymous-373072ef-6f17-41af-88b5-23345c4ab93c.call()?ce@105.29:105.31CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaú ú(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaú9 ú(K2Œ
{org.jabref.gui.externalfiles.ImportHandler.Anonymous-3ab6068d-10c6-4b4c-991e-6df885ec2379.call()?entriesToAdd@107.41:107.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaú[ ú(g2ƒ
qorg.jabref.gui.externalfiles.ImportHandler.Anonymous-2bdc05bd-6e38-4099-a86b-4bdb68acd116.call()?ce@105.29:105.31CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaù ù(2ï
Borg.jabref.gui.externalfiles.ImportHandler?undoManager@68.30:68.41CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaû û(2ƒ
qorg.jabref.gui.externalfiles.ImportHandler.Anonymous-e6468bb2-28b1-4ec2-9293-e7f379d218d1.call()?ce@105.29:105.31CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaû( û(*2Õ
zorg.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)?counter@99.24:99.31CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java† †(2œ
|org.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)?results@100.63:100.70CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¢ ¢(2œ
|org.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)?results@100.63:100.70CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaß ß(2¬
lorg.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)!files	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaai a(n2…
qorg.jabref.gui.externalfiles.ImportHandler.Anonymous-b9aa8a66-df33-4f67-b818-6fbfcafe1436.call()?ce@105.29:105.31DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javai i(2À
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-93d8d8b2-3e3a-495f-b650-67552b90654d.call()?file@106.32:106.36DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaj  j($2”
{org.jabref.gui.externalfiles.ImportHandler.Anonymous-9310b800-0d8a-412b-9cce-b3f5db633eaa.call()?entriesToAdd@107.41:107.53DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javak) k(52Ÿ
Äorg.jabref.gui.externalfiles.ImportHandler.Anonymous-097698ce-eb24-47b5-9107-1c3026b9eb4a.call()?pdfImporterResult@120.32:120.49DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javax  x(12◊
org.jabref.gui.externalfiles.ImportHandler.Anonymous-e87077fa-8771-41c1-9047-86ba7726e2c1.call()?pdfEntriesInFile@121.43:121.59DECLARATIONG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javay+ y(;2‹
Åorg.jabref.gui.externalfiles.ImportHandler.Anonymous-832b4042-1e65-48a5-adf1-ae04d0bf3ce3.call()?bibtexParserResult@135.32:135.50DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá  á(22À
qorg.jabref.gui.externalfiles.ImportHandler.Anonymous-600bce19-05e9-4e40-97b7-6cee2ccb74b1.call()?ex@146.41:146.43DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaí) í(+2z
"org.jabref.gui.util.BackgroundTaskRETURN_TYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaa a(2o
java.util.ListRETURN_TYPE_ARGUMENTG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaa a(2ú
;org.jabref.gui.externalfiles.ImportFilesResultItemViewModelRETURN_TYPE_ARGUMENTG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaa a(=Ã
qorg.jabref.gui.externalfiles.ImportHandler.Anonymous-615dee77-0a37-42e2-a98b-568fe5cc089d.call()?ce@105.29:105.31VARIABLEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javai i("
typeCompoundEdit"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>CompoundEdit <mark class="class-field">ce</mark> = new CompoundEdit()*ce2]
CompoundEditTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javai i(∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-8efb0324-a121-475b-a1a7-b2f354d3a7b1.call()?file@106.32:106.36VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaj  j($"
typePath"
isFinaltrue"Ç
declarationStringm<mark class="modifier"> </mark><mark class="modifier">final </mark>Path <mark class="class-field">file</mark>*file2U
PathTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaj j(á
{org.jabref.gui.externalfiles.ImportHandler.Anonymous-e7fa9847-7d33-41b4-9f56-9ad056f4cdbe.call()?entriesToAdd@107.41:107.53VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javak) k(5"
typeList<BibEntry>"
isFinaltrue"©
declarationStringì<mark class="modifier"> </mark><mark class="modifier">final </mark>List<BibEntry> <mark class="class-field">entriesToAdd</mark> = new ArrayList<>()*entriesToAdd2U
ListTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javak k(’
Äorg.jabref.gui.externalfiles.ImportHandler.Anonymous-6191025f-e476-44e9-8aed-0c3c9e60cd61.call()?pdfImporterResult@120.32:120.49VARIABLEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javax  x(1"
typevar"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>var <mark class="class-field">pdfImporterResult</mark> = contentImporter.importPDFContent(file)*pdfImporterResult2T
varTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javax x(2ó
Forg.jabref.gui.externalfiles.ImportHandler?contentImporter@67.47:67.62CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javax4 x(C2ƒ
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-223d21c8-1985-4f58-a22a-f5b167358d3e.call()?file@106.32:106.36CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaxU x(Y„
org.jabref.gui.externalfiles.ImportHandler.Anonymous-02ce2d3b-7a9d-407b-bbf0-499595516257.call()?pdfEntriesInFile@121.43:121.59VARIABLEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javay+ y(;"
typeList<BibEntry>"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">pdfEntriesInFile</mark> = pdfImporterResult.getDatabase().getEntries()*pdfEntriesInFile2U
ListTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javay y( 2“
Äorg.jabref.gui.externalfiles.ImportHandler.Anonymous-6bf93788-d61e-4d97-bb0b-7b738684bebb.call()?pdfImporterResult@120.32:120.49CALLG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javay> y(Oì
Åorg.jabref.gui.externalfiles.ImportHandler.Anonymous-e8dd161f-ec92-4787-b2c1-45c0b0bdcff4.call()?bibtexParserResult@135.32:135.50VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá  á(2"
typevar"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>var <mark class="class-field">bibtexParserResult</mark> = contentImporter.importFromBibFile(file, fileUpdateMonitor)*bibtexParserResult2V
varTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá á(2ô
Forg.jabref.gui.externalfiles.ImportHandler?contentImporter@67.47:67.62CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá5 á(D2∆
sorg.jabref.gui.externalfiles.ImportHandler.Anonymous-30a59068-15fe-45f2-b5af-36d2d3882da3.call()?file@106.32:106.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaáW á([2õ
Horg.jabref.gui.externalfiles.ImportHandler?fileUpdateMonitor@65.36:65.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá] á(n‰
lorg.jabref.gui.externalfiles.ImportHandler.importFilesInBackground(java.util.List<java.nio.file.Path>)!files	PARAMETERG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaai a(n"
type
List<Path>"
isFinaltrue"%
declarationStringList<Path> files*files2_
java.util.ListTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaa^ a(b2l
java.nio.file.PathTYPE_ARGUMENTG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaac a(g¯
qorg.jabref.gui.externalfiles.ImportHandler.Anonymous-0fcdcbaa-c4a7-4e9f-8c86-2e0de435eab2.call()?ex@146.41:146.43VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaí) í(+"
typeIOException"
isFinalfalse"#
declarationStringIOException ex*ex2^
IOExceptionTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaí í((Ñ
newFile	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java•. •(5"
typePath"
isFinalfalse"!
declarationStringPath newFile*newFile2W
PathTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java•) •(-´
success	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java•? •(F"
typeboolean"
isFinalfalse"B
declarationString-<mark class="modifier">boolean</mark> success*success2Z
booleanTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java•7 •(>ì

logMessage	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java•O •(Y"
typeString"
isFinalfalse"&
declarationStringString logMessage*
logMessage2Y
StringTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java•H •(N’
Worg.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¨ ¨(-"
isFinalfalse"É
declarationStringn<mark class="modifier">private </mark>BibEntry <mark class="method">createEmptyEntryWithLink</mark>(Path file)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibEntry*createEmptyEntryWithLink2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ Æ(2p
java.nio.file.Path.toString()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ? Æ(G2s
 java.nio.file.Path.getFileName()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ1 Æ(<2ﬁ
äorg.jabref.gui.externalfiles.ExternalFilesEntryLinker.addFilesToEntry(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ Ø(2y
&java.util.Collections.singletonList(T)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ2 Ø(?2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≠ ≠(%2æ
korg.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)?entry@173.17:173.22CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ Æ(2Ø
\org.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)!fileCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ, Æ(02ê
=org.jabref.gui.externalfiles.ImportHandler?linker@66.43:66.49CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ Ø(2æ
korg.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)?entry@173.17:173.22CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ Ø($2Ø
\org.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)!fileCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ@ Ø(D2æ
korg.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)?entry@173.17:173.22CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∞ ∞(2¥
\org.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)!file	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¨3 ¨(72≈
korg.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)?entry@173.17:173.22DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≠ ≠(2y
org.jabref.model.entry.BibEntryRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¨ ¨(÷
korg.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)?entry@173.17:173.22VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≠ ≠("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≠ ≠(2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≠ ≠(%·
\org.jabref.gui.externalfiles.ImportHandler.createEmptyEntryWithLink(java.nio.file.Path)!file	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¨3 ¨(7"
typePath"
isFinalfalse"
declarationString	Path file*file2e
java.nio.file.PathTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¨. ¨(2ü
iorg.jabref.gui.externalfiles.ImportHandler.importEntries(java.util.List<org.jabref.model.entry.BibEntry>)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑ ∑("
isFinalfalse"•
declarationStringè<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntries</mark>(List&lt;BibEntry&gt; entries)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntries2Ø
\org.jabref.logic.importer.ImportCleanup.targeting(org.jabref.model.database.BibDatabaseMode)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∏. ∏(72â
6org.jabref.model.database.BibDatabaseContext.getMode()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∏K ∏(R2ø
lorg.jabref.logic.importer.ImportCleanup.doPostCleanup(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaπ π(2√
porg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∫ ∫(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∏8 ∏(J2“
org.jabref.gui.externalfiles.ImportHandler.importEntries(java.util.List<org.jabref.model.entry.BibEntry>)?cleanup@184.22:184.29CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaπ π(2ƒ
qorg.jabref.gui.externalfiles.ImportHandler.importEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaπ π(%2ƒ
qorg.jabref.gui.externalfiles.ImportHandler.importEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∫ ∫($2…
qorg.jabref.gui.externalfiles.ImportHandler.importEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑- ∑(42Ÿ
org.jabref.gui.externalfiles.ImportHandler.importEntries(java.util.List<org.jabref.model.entry.BibEntry>)?cleanup@184.22:184.29DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∏ ∏(2^
voidRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑ ∑(á
org.jabref.gui.externalfiles.ImportHandler.importEntries(java.util.List<org.jabref.model.entry.BibEntry>)?cleanup@184.22:184.29VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∏ ∏("
typeImportCleanup"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>ImportCleanup <mark class="class-field">cleanup</mark> = ImportCleanup.targeting(bibDatabaseContext.getMode())*cleanup2z
'org.jabref.logic.importer.ImportCleanupTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∏ ∏(2Ø
\org.jabref.logic.importer.ImportCleanup.targeting(org.jabref.model.database.BibDatabaseMode)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∏. ∏(72â
6org.jabref.model.database.BibDatabaseContext.getMode()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∏K ∏(R2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∏8 ∏(Jâ
qorg.jabref.gui.externalfiles.ImportHandler.importEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑- ∑(4"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2a
java.util.ListTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑ ∑("2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑# ∑(+¢
porg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaΩ Ω($"
isFinalfalse"¨
declarationStringñ<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importCleanedEntries</mark>(List&lt;BibEntry&gt; entries)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importCleanedEntries2∑
dorg.jabref.model.database.BibDatabase.insertEntries(java.util.List<org.jabref.model.entry.BibEntry>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaæ) æ(62ç
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaæ æ(&2ª
horg.jabref.gui.externalfiles.ImportHandler.generateKeys(java.util.List<org.jabref.model.entry.BibEntry>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaø ø(2¡
norg.jabref.gui.externalfiles.ImportHandler.setAutomaticFields(java.util.List<org.jabref.model.entry.BibEntry>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¿ ¿(2≠
Zorg.jabref.gui.StateManager.getSelectedGroup(org.jabref.model.database.BibDatabaseContext)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¡* ¡(:2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaæ æ(2À
xorg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaæ7 æ(>2À
xorg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaø ø(2À
xorg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¿ ¿("2À
xorg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¡ ¡(2ñ
Corg.jabref.gui.externalfiles.ImportHandler?stateManager@69.31:69.43CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¡ ¡()2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¡; ¡(M2–
xorg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaΩ4 Ω(;2^
voidRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaΩ Ω(ê
xorg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaΩ4 Ω(;"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2a
java.util.ListTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaΩ% Ω()2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaΩ* Ω(2á
óorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaƒ ƒ(-"
isFinalfalse"ä
declarationStringÙ<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntryWithDuplicateCheck</mark>(BibDatabaseContext bibDatabaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntryWithDuplicateCheck2Ω
Èorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈ ≈(%2˛
™org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈& ≈(82Ò
ùorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!entryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈: ≈(?2É
™org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaƒA ƒ(S2ˆ
ùorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!entry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaƒ^ ƒ(c2^
voidRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaƒ ƒ(Ç
™org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaƒA ƒ(S"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2
,org.jabref.model.database.BibDatabaseContextTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaƒ. ƒ(@∫
ùorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!entry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaƒ^ ƒ(c"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaƒU ƒ(]ÚJ
Èorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java» »(."
isFinalfalse"Å
declarationStringÎ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">importEntryWithDuplicateCheck</mark>(BibDatabaseContext bibDatabaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> DuplicateResolverDialog.DuplicateResolverResult decision)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*importEntryWithDuplicateCheck2⁄
Üorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java…! …(-2€
áorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java 8  (E2q
java.util.Optional.isPresent()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÀ' À(02—
˝org.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ7 Ã(G2m
java.util.Optional.get()CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃÜ Ã(â2o
java.util.Optional.isEmpty()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÕ& Õ(-2k
java.util.Optional.get()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java–2 –(52√
porg.jabref.gui.externalfiles.ImportHandler.importCleanedEntries(java.util.List<org.jabref.model.entry.BibEntry>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java“ “(2g
java.util.List.of(E)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java“" “($2≤
_org.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java” ”(2–
¸org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java…. …(@2√
Ôorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!entryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java…B …(G2–
¸org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java F  (X2Ÿ
Öorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?entryToInsert@201.17:201.30CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java Z  (g2Ê
íorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?existingDuplicateInLibrary@202.27:202.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÀ À(&2–
¸org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃH Ã(Z2Ÿ
Öorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?entryToInsert@201.17:201.30CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ\ Ã(i2Á
íorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?existingDuplicateInLibrary@202.27:202.53CALLJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃk Ã(Ö2»
Úorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decisionCALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃç Ã(ï2·
çorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?duplicateHandledEntry@204.31:204.52CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÕ Õ(%2Ÿ
Öorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?entryToInsert@201.17:201.30CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java– –(2·
çorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?duplicateHandledEntry@204.31:204.52CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java– –(12Ÿ
Öorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?entryToInsert@201.17:201.30CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java“% “(22Ÿ
Öorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?entryToInsert@201.17:201.30CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java” ”()2’
¸org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java»B »(T2»
Ôorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!entry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java»_ »(d2Õ
Úorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decision	PARAMETERK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java»ñ »(û2‡
Öorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?entryToInsert@201.17:201.30DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java… …(2Ì
íorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?existingDuplicateInLibrary@202.27:202.53DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java   (52Ë
çorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?duplicateHandledEntry@204.31:204.52DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ Ã(42^
voidRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java» »(ì
Öorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?entryToInsert@201.17:201.30VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java… …("
typeBibEntry"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryToInsert</mark> = cleanUpEntry(bibDatabaseContext, entry)*entryToInsert2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java… …(2⁄
Üorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java…! …(-2–
¸org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java…. …(@2√
Ôorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!entryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java…B …(Gﬁ
íorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?existingDuplicateInLibrary@202.27:202.53VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java   (5"
typeOptional<BibEntry>"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">existingDuplicateInLibrary</mark> = findDuplicate(bibDatabaseContext, entryToInsert)*existingDuplicateInLibrary2e
java.util.OptionalTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java   (2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java   (2€
áorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java 8  (E2–
¸org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java F  (X2Ÿ
Öorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?entryToInsert@201.17:201.30CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java Z  (g∂
çorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?duplicateHandledEntry@204.31:204.52VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ Ã(4"
typeOptional<BibEntry>"
isFinalfalse"˛
declarationStringË<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">duplicateHandledEntry</mark> = handleDuplicates(bibDatabaseContext, entryToInsert, existingDuplicateInLibrary.get()<mark class="modifier">,</mark> decision)*duplicateHandledEntry2e
java.util.OptionalTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ Ã(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ Ã(2—
˝org.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ7 Ã(G2m
java.util.Optional.get()CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃÜ Ã(â2–
¸org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃH Ã(Z2Ÿ
Öorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?entryToInsert@201.17:201.30CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ\ Ã(i2Á
íorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?existingDuplicateInLibrary@202.27:202.53CALLJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃk Ã(Ö2»
Úorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decisionCALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃç Ã(ï‘
¸org.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java»B »(T"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2
,org.jabref.model.database.BibDatabaseContextTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java»/ »(Aå
Ôorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!entry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java»_ »(d"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java»V »(^ò
Úorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decision	PARAMETERK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java»ñ »(û"7
type/DuplicateResolverDialog.DuplicateResolverResult"
isFinalfalse"M
declarationString8DuplicateResolverDialog.DuplicateResolverResult decision*decision2§
Porg.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResultTYPEJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java»~ »(ïÊ
Üorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊ ◊("
isFinalfalse"ê
declarationString˙<mark class="annotation">@VisibleForTesting</mark> <br><mark class="modifier"> </mark>BibEntry <mark class="method">cleanUpEntry</mark>(BibDatabaseContext bibDatabaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeBibEntry*cleanUpEntry2Ø
\org.jabref.logic.importer.ImportCleanup.targeting(org.jabref.model.database.BibDatabaseMode)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÿ. ÿ(72â
6org.jabref.model.database.BibDatabaseContext.getMode()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÿK ÿ(R2©
Vorg.jabref.logic.importer.ImportCleanup.doPostCleanup(org.jabref.model.entry.BibEntry)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaŸ Ÿ($2Ì
ôorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÿ8 ÿ(J2
úorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)?cleanup@216.22:216.29CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaŸ Ÿ(2‡
åorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!entryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaŸ% Ÿ(*2Ú
ôorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊- ◊(?2Â
åorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!entry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊J ◊(O2˜
úorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)?cleanup@216.22:216.29DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÿ ÿ(2y
org.jabref.model.entry.BibEntryRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊ ◊(ˆ
úorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)?cleanup@216.22:216.29VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÿ ÿ("
typeImportCleanup"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>ImportCleanup <mark class="class-field">cleanup</mark> = ImportCleanup.targeting(bibDatabaseContext.getMode())*cleanup2z
'org.jabref.logic.importer.ImportCleanupTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÿ ÿ(2Ø
\org.jabref.logic.importer.ImportCleanup.targeting(org.jabref.model.database.BibDatabaseMode)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÿ. ÿ(72â
6org.jabref.model.database.BibDatabaseContext.getMode()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÿK ÿ(R2Ì
ôorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÿ8 ÿ(JÒ
ôorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊- ◊(?"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2
,org.jabref.model.database.BibDatabaseContextTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊ ◊(,©
åorg.jabref.gui.externalfiles.ImportHandler.cleanUpEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!entry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊J ◊(O"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊A ◊(I—
áorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹ ‹(+"
isFinalfalse"˜
declarationString·<mark class="modifier">public </mark>Optional&lt;BibEntry&gt; <mark class="method">findDuplicate</mark>(BibDatabaseContext bibDatabaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entryToCheck)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<BibEntry>*findDuplicate2Å
≠org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›= ›(N2ç
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›b ›(m2ã
6org.jabref.model.database.BibDatabaseContext.getMode()CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›í ›(ô2∑
dorg.jabref.logic.database.DuplicateCheck.DuplicateCheck(org.jabref.model.entry.BibEntryTypesManager)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java› ›(!2Ó
öorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›O ›(a2Ë
îorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!entryToCheckCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›q ›(}2Ô
öorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContextCALLJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java› ›(ë2Û
öorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹? ‹(Q2Ì
îorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!entryToCheck	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹\ ‹(h2l
java.util.OptionalRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹ ‹(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹ ‹(Ú
öorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹? ‹(Q"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2
,org.jabref.model.database.BibDatabaseContextTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹, ‹(>ø
îorg.jabref.gui.externalfiles.ImportHandler.findDuplicate(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)!entryToCheck	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹\ ‹(h"
typeBibEntry"
isFinalfalse"*
declarationStringBibEntry entryToCheck*entryToCheck2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹S ‹([≤,
˝org.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡ ‡(."
isFinalfalse"∆
declarationString∞<mark class="modifier">public </mark>Optional&lt;BibEntry&gt; <mark class="method">handleDuplicates</mark>(BibDatabaseContext bibDatabaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry originalEntry<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry duplicateEntry<mark class="modifier"><mark class="modifier">,</mark></mark> DuplicateResolverDialog.DuplicateResolverResult decision)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<BibEntry>*handleDuplicates2’
Åorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·1 ·(E2m
java.util.Optional.empty()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÔ  Ô(%2k
java.util.Optional.of(T)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÒ Ò(2ﬂ
ãorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!originalEntryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·F ·(S2‡
åorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!duplicateEntryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·U ·(c2‰
êorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·e ·(w2€
Üorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decisionCALLJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·y ·(Å2Ó
öorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?decisionResult@225.32:225.46CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‚ ‚(2ﬂ
ãorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!originalEntryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÒ Ò((2È
êorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡B ‡(T2‰
ãorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!originalEntry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡_ ‡(l2Ê
åorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!duplicateEntry	PARAMETERJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡w ‡(Ö2·
Üorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decision	PARAMETERK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡∑ ‡(ø2ı
öorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?decisionResult@225.32:225.46DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·  ·(.2l
java.util.OptionalRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡ ‡(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡ ‡(÷
öorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?decisionResult@225.32:225.46VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·  ·(."
typeDuplicateDecisionResult"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>DuplicateDecisionResult <mark class="class-field">decisionResult</mark> = getDuplicateDecision(originalEntry, duplicateEntry, bibDatabaseContext, decision)*decisionResult2j
DuplicateDecisionResultTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java· ·(2’
Åorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·1 ·(E2ﬂ
ãorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!originalEntryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·F ·(S2‡
åorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!duplicateEntryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·U ·(c2‰
êorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·e ·(w2€
Üorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decisionCALLJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java·y ·(ÅË
êorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContext	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡B ‡(T"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2
,org.jabref.model.database.BibDatabaseContextTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡/ ‡(A∏
ãorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!originalEntry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡_ ‡(l"
typeBibEntry"
isFinalfalse"+
declarationStringBibEntry originalEntry*originalEntry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡V ‡(^º
åorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!duplicateEntry	PARAMETERJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡w ‡(Ö"
typeBibEntry"
isFinalfalse",
declarationStringBibEntry duplicateEntry*duplicateEntry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡n ‡(v≠
Üorg.jabref.gui.externalfiles.ImportHandler.handleDuplicates(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decision	PARAMETERK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡∑ ‡(ø"7
type/DuplicateResolverDialog.DuplicateResolverResult"
isFinalfalse"M
declarationString8DuplicateResolverDialog.DuplicateResolverResult decision*decision2•
Porg.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResultTYPEK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡ü ‡(∂·C
Åorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ# Ù(7"
isFinalfalse"…
declarationString≥<mark class="modifier">public </mark>DuplicateDecisionResult <mark class="method">getDuplicateDecision</mark>(BibEntry originalEntry<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry duplicateEntry<mark class="modifier"><mark class="modifier">,</mark></mark> BibDatabaseContext bibDatabaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> DuplicateResolverDialog.DuplicateResolverResult decision)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeDuplicateDecisionResult*getDuplicateDecision2o
java.util.Optional.orElse(T)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜E ˜(K2ß
Torg.jabref.gui.DialogService.showCustomDialogAndWait(javafx.scene.control.Dialog<R>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜% ˜(<2ü
Lorg.jabref.preferences.MergeDialogPreferences.shouldMergeApplyToAllEntries()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˘; ˘(W2ò
Eorg.jabref.preferences.PreferencesService.getMergeDialogPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˘ ˘(82˙
¶org.jabref.preferences.MergeDialogPreferences.setAllEntriesDuplicateResolverDecision(org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˙; ˙(a2ò
Eorg.jabref.preferences.PreferencesService.getMergeDialogPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˙ ˙(82ú
Iorg.jabref.gui.duplicationFinder.DuplicateResolverDialog.getMergedEntry()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¸< ¸(J2 
ˆorg.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverDialog(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverType, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.preferences.PreferencesService)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı- ı(D2‰
êorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!duplicateEntryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaıE ı(S2„
èorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!originalEntryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaıU ı(b2Í
îorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı† ı(≤2ò
Corg.jabref.gui.externalfiles.ImportHandler?stateManager@69.31:69.43CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı¥ ı(¿2ô
Dorg.jabref.gui.externalfiles.ImportHandler?dialogService@70.32:70.45CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı¬ ı(œ2û
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı— ı(„2ﬁ
äorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decisionCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaˆ ˆ(2ﬁ
äorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decisionCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜ ˜(2ó
Dorg.jabref.gui.externalfiles.ImportHandler?dialogService@70.32:70.45CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜ ˜($2Í
ñorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?dialog@245.32:245.38CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜= ˜(C2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˘ ˘(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˙ ˙(2ﬁ
äorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decisionCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˙b ˙(j2ﬁ
äorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decisionCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¸+ ¸(32Í
ñorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?dialog@245.32:245.38CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¸5 ¸(;2Ë
èorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!originalEntry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙA Ù(N2È
êorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!duplicateEntry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙY Ù(g2Ó
îorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContext	PARAMETERJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ| Ù(é2Â
äorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decision	PARAMETERK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ¿ Ù(»2Ò
ñorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?dialog@245.32:245.38DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı  ı(&2q
DuplicateDecisionResultRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ Ù("À
ñorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)?dialog@245.32:245.38VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı  ı(&"
typeDuplicateResolverDialog"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>DuplicateResolverDialog <mark class="class-field">dialog</mark> = new DuplicateResolverDialog(duplicateEntry, originalEntry, DuplicateResolverDialog.DuplicateResolverType.IMPORT_CHECK, bibDatabaseContext, stateManager, dialogService, preferencesService)*dialog2ã
8org.jabref.gui.duplicationFinder.DuplicateResolverDialogTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı ı(2 
ˆorg.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverDialog(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverType, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.StateManager, org.jabref.gui.DialogService, org.jabref.preferences.PreferencesService)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı- ı(D2‰
êorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!duplicateEntryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaıE ı(S2„
èorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!originalEntryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaıU ı(b2Í
îorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContextCALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı† ı(≤2ò
Corg.jabref.gui.externalfiles.ImportHandler?stateManager@69.31:69.43CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı¥ ı(¿2ô
Dorg.jabref.gui.externalfiles.ImportHandler?dialogService@70.32:70.45CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı¬ ı(œ2û
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaı— ı(„º
èorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!originalEntry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙA Ù(N"
typeBibEntry"
isFinalfalse"+
declarationStringBibEntry originalEntry*originalEntry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ8 Ù(@ø
êorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!duplicateEntry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙY Ù(g"
typeBibEntry"
isFinalfalse",
declarationStringBibEntry duplicateEntry*duplicateEntry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙP Ù(XÌ
îorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!bibDatabaseContext	PARAMETERJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ| Ù(é"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2
,org.jabref.model.database.BibDatabaseContextTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙi Ù({±
äorg.jabref.gui.externalfiles.ImportHandler.getDuplicateDecision(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)!decision	PARAMETERK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ¿ Ù(»"7
type/DuplicateResolverDialog.DuplicateResolverResult"
isFinalfalse"M
declarationString8DuplicateResolverDialog.DuplicateResolverResult decision*decision2•
Porg.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResultTYPEK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ® Ù(øÎ
norg.jabref.gui.externalfiles.ImportHandler.setAutomaticFields(java.util.List<org.jabref.model.entry.BibEntry>)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaˇ ˇ(""
isFinalfalse"™
declarationStringî<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setAutomaticFields</mark>(List&lt;BibEntry&gt; entries)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setAutomaticFields2°
Õorg.jabref.logic.util.UpdateField.setAutomaticFields(java.util.Collection<org.jabref.model.entry.BibEntry>, org.jabref.logic.preferences.OwnerPreferences, org.jabref.logic.preferences.TimestampPreferences)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÄ Ä(&2í
?org.jabref.preferences.PreferencesService.getOwnerPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÇ# Ç(62ñ
Corg.jabref.preferences.PreferencesService.getTimestampPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÉ# É(:2…
vorg.jabref.gui.externalfiles.ImportHandler.setAutomaticFields(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅ Å(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÇ Ç("2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÉ É("2Œ
vorg.jabref.gui.externalfiles.ImportHandler.setAutomaticFields(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaˇ2 ˇ(92^
voidRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaˇ ˇ(é
vorg.jabref.gui.externalfiles.ImportHandler.setAutomaticFields(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaˇ2 ˇ(9"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2a
java.util.ListTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaˇ# ˇ('2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaˇ( ˇ(0
_org.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá á(#"
isFinalfalse"ù
declarationStringá<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">downloadLinkedFiles</mark>(BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*downloadLinkedFiles2ï
Borg.jabref.preferences.FilePreferences.shouldDownloadLinkedFiles()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaà4 à(M2ë
>org.jabref.preferences.PreferencesService.getFilePreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaà à(12ö
Gjava.util.stream.Stream.forEach(java.util.function.Consumer<? super T>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaã ã(2ö
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaä ä(2p
java.util.Collection.stream()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaâ â(#2}
*org.jabref.model.entry.BibEntry.getFiles()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaâ â(2ç
:org.jabref.gui.fieldeditors.LinkedFileViewModel.download()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaì ì(#2Ù
†org.jabref.gui.fieldeditors.LinkedFileViewModel.LinkedFileViewModel(org.jabref.model.entry.LinkedFile, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseContext, org.jabref.gui.util.TaskExecutor, org.jabref.gui.DialogService, org.jabref.preferences.PreferencesService)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaå å(02ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaà à(2∏
eorg.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)!entryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaâ â(2À
xorg.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)?linkedFile@267.26:267.36CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaç! ç(+2∏
eorg.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)!entryCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaé! é(&2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaè! è(32ñ
Corg.jabref.gui.externalfiles.ImportHandler?taskExecutor@71.31:71.43CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaê! ê(-2ó
Dorg.jabref.gui.externalfiles.ImportHandler?dialogService@70.32:70.45CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaë! ë(.2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaí! í(32É
0org.jabref.model.entry.LinkedFile.isOnlineLink()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaä ä(12Ω
eorg.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)!entry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá- á(22“
xorg.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)?linkedFile@267.26:267.36DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaã ã($2^
voidRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá á(Å
eorg.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)!entry	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá- á(2"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaá$ á(,ü
xorg.jabref.gui.externalfiles.ImportHandler.downloadLinkedFiles(org.jabref.model.entry.BibEntry)?linkedFile@267.26:267.36VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaã ã($"
type"
isFinalfalse" 
declarationString linkedFile*
linkedFile2TYPEŸ
§org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaò ò("
isFinalfalse"à
declarationStringÚ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">addToGroups</mark>(List&lt;BibEntry&gt; entries<mark class="modifier"><mark class="modifier">,</mark></mark> Collection&lt;GroupTreeNode&gt; groups)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*addToGroups2É
0org.jabref.model.groups.GroupTreeNode.getGroup()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaö ö(2∑
dorg.jabref.model.groups.GroupEntryChanger.add(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaõ6 õ(92ˇ
´org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)!groupsCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaô" ô((2ã
∑org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)?node@281.27:281.31CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaö ö(2Ä
¨org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaõ: õ(A2Ö
¨org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaò, ò(32Ñ
´org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)!groups	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaòO ò(U2í
∑org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)?node@281.27:281.31DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaô ô(2í
∑org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)?undo@283.34:283.38DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaõ" õ(&2^
voidRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaò ò(°
∑org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)?node@281.27:281.31VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaô ô("
typeGroupTreeNode"
isFinalfalse"g
declarationStringR<mark class="modifier"> </mark>GroupTreeNode <mark class="class-field">node</mark>*node2x
%org.jabref.model.groups.GroupTreeNodeTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaô ô(Ê
∑org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)?undo@283.34:283.38VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaõ" õ(&"
typeList<FieldChange>"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark>List<FieldChange> <mark class="class-field">undo</mark> = entryChanger.add(entries)*undo2a
java.util.ListTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaõ õ(2x
org.jabref.model.FieldChangeTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaõ õ( 2∑
dorg.jabref.model.groups.GroupEntryChanger.add(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaõ6 õ(92Ä
¨org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaõ: õ(A≈
¨org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaò, ò(3"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2a
java.util.ListTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaò ò(!2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaò" ò(*Â
´org.jabref.gui.externalfiles.ImportHandler.addToGroups(java.util.List<org.jabref.model.entry.BibEntry>, java.util.Collection<org.jabref.model.groups.GroupTreeNode>)!groups	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaòO ò(U"!
typeCollection<GroupTreeNode>"
isFinalfalse"5
declarationString Collection<GroupTreeNode> groups*groups2g
java.util.CollectionTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaò5 ò(?2Å
%org.jabref.model.groups.GroupTreeNodeTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaò@ ò(MÎ
horg.jabref.gui.externalfiles.ImportHandler.generateKeys(java.util.List<org.jabref.model.entry.BibEntry>)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java™ ™("
isFinalfalse"•
declarationStringè<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">generateKeys</mark>(List&lt;BibEntry&gt; entries)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*generateKeys2õ
Horg.jabref.logic.importer.ImporterPreferences.isGenerateNewKeyOnImport()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java´9 ´(Q2ï
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java´  ´(62≈
rorg.jabref.model.metadata.MetaData.getCiteKeyPattern(org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ1 Ø(B2ç
:org.jabref.model.database.BibDatabaseContext.getMetaData()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ# Ø(.2§
Qorg.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.getKeyPattern()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∞V ∞(c2ü
Lorg.jabref.preferences.PreferencesService.getCitationKeyPatternPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØV Ø(v2ç
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java±# ±(.2ü
Lorg.jabref.preferences.PreferencesService.getCitationKeyPatternPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≤# ≤(C2ï
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≥ ≥(2À
˜org.jabref.logic.citationkeypattern.CitationKeyGenerator.CitationKeyGenerator(org.jabref.logic.citationkeypattern.AbstractCitationKeyPattern, org.jabref.model.database.BibDatabase, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ0 Æ(D2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java´ ´(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ Ø("2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØC Ø(U2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java± ±("2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≤ ≤("2√
porg.jabref.gui.externalfiles.ImportHandler.generateKeys(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≥ ≥(2æ
korg.jabref.logic.citationkeypattern.CitationKeyGenerator.generateAndSetKey(org.jabref.model.entry.BibEntry)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≥ ≥(72»
porg.jabref.gui.externalfiles.ImportHandler.generateKeys(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java™- ™(42ﬁ
Éorg.jabref.gui.externalfiles.ImportHandler.generateKeys(java.util.List<org.jabref.model.entry.BibEntry>)?keyGenerator@302.29:302.41DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ Æ()2^
voidRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java™ ™(È
Éorg.jabref.gui.externalfiles.ImportHandler.generateKeys(java.util.List<org.jabref.model.entry.BibEntry>)?keyGenerator@302.29:302.41VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ Æ()"
typeCitationKeyGenerator"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>CitationKeyGenerator <mark class="class-field">keyGenerator</mark> = new CitationKeyGenerator(bibDatabaseContext.getMetaData().getCiteKeyPattern(preferencesService.getCitationKeyPatternPreferences().getKeyPattern())<mark class="modifier">,</mark> bibDatabaseContext.getDatabase()<mark class="modifier">,</mark> preferencesService.getCitationKeyPatternPreferences())*keyGenerator2ã
8org.jabref.logic.citationkeypattern.CitationKeyGeneratorTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ Æ(2≈
rorg.jabref.model.metadata.MetaData.getCiteKeyPattern(org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ1 Ø(B2ç
:org.jabref.model.database.BibDatabaseContext.getMetaData()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ# Ø(.2§
Qorg.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.getKeyPattern()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∞V ∞(c2ü
Lorg.jabref.preferences.PreferencesService.getCitationKeyPatternPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØV Ø(v2ç
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java±# ±(.2ü
Lorg.jabref.preferences.PreferencesService.getCitationKeyPatternPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≤# ≤(C2À
˜org.jabref.logic.citationkeypattern.CitationKeyGenerator.CitationKeyGenerator(org.jabref.logic.citationkeypattern.AbstractCitationKeyPattern, org.jabref.model.database.BibDatabase, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÆ0 Æ(D2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØ Ø("2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaØC Ø(U2ú
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java± ±("2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≤ ≤("à
porg.jabref.gui.externalfiles.ImportHandler.generateKeys(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java™- ™(4"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2a
java.util.ListTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java™ ™("2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java™# ™(+˘
Morg.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∂ ∂(*"
isFinalfalse"ã
declarationStringv<mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">handleBibTeXData</mark>(String entries)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*handleBibTeXData2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑B ∑(\2¶
Sorg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaπ π(&2Ü
3java.lang.String.getBytes(java.nio.charset.Charset)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaπH π(P2t
!java.util.Collections.emptyList()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaº º((2å
9java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaπ+ π(?2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑/ ∑(A2õ
Horg.jabref.gui.externalfiles.ImportHandler?fileUpdateMonitor@65.36:65.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑` ∑(q2µ
borg.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)?parser@311.21:311.27CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaπ π(2®
Uorg.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)!entriesCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaπ@ π(G2ê
=org.jabref.gui.externalfiles.ImportHandler?LOGGER@62.32:62.38CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaª ª(2±
^org.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)?ex@314.32:314.34CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaª, ª(.2≠
Uorg.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∂2 ∂(92º
borg.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)?parser@311.21:311.27DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑ ∑(2∏
^org.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)?ex@314.32:314.34DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∫  ∫("2h
java.util.ListRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∂ ∂(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∂ ∂(™
borg.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)?parser@311.21:311.27VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑ ∑("
typeBibtexParser"
isFinalfalse"ﬁ
declarationString»<mark class="modifier"> </mark>BibtexParser <mark class="class-field">parser</mark> = new BibtexParser(preferencesService.getImportFormatPreferences()<mark class="modifier">,</mark> fileUpdateMonitor)*parser2Ñ
1org.jabref.logic.importer.fileformat.BibtexParserTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑ ∑(2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑B ∑(\2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑/ ∑(A2õ
Horg.jabref.gui.externalfiles.ImportHandler?fileUpdateMonitor@65.36:65.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∑` ∑(q‚
Uorg.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)!entries	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∂2 ∂(9"
typeString"
isFinalfalse"#
declarationStringString entries*entries2c
java.lang.StringTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∂+ ∂(1à
^org.jabref.gui.externalfiles.ImportHandler.handleBibTeXData(java.lang.String)?ex@314.32:314.34VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∫  ∫(""
typeParseException"
isFinalfalse"&
declarationStringParseException ex*ex2{
(org.jabref.logic.importer.ParseExceptionTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∫ ∫(ò,
Morg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¿ ¿(*"
isFinalfalse"›
declarationString«<mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">handleStringData</mark>(String data)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*handleStringData2m
java.lang.String.isEmpty()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¡# ¡(*2t
!java.util.Collections.emptyList()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¬ ¬((2ï
Borg.jabref.model.entry.identifier.DOI.findInText(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈  ≈(*2q
java.util.Optional.isPresent()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∆ ∆(2Ø
\org.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java« «(2k
java.util.Optional.get()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java«" «(%2ú
Iorg.jabref.model.entry.identifier.ArXivIdentifier.parse(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java :  (?2q
java.util.Optional.isPresent()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÀ À(2Ω
jorg.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ Ã(2k
java.util.Optional.get()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ& Ã()2ë
>org.jabref.model.entry.identifier.ISBN.parse(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaœ# œ((2q
java.util.Optional.isPresent()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java– –(2±
^org.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java— —(2k
java.util.Optional.get()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java—$ —('2†
Morg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‘ ‘(2•
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¡ ¡(2•
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¡ ¡("2•
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈+ ≈(/2≤
_org.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?doi@325.22:325.25CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java∆ ∆(2≤
_org.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?doi@325.22:325.25CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java« «(!2•
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java @  (D2¥
aorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?arXiv@330.34:330.39CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÀ À(2¥
aorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?arXiv@330.34:330.39CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÃ  Ã(%2•
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaœ) œ(-2≥
`org.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?isbn@335.23:335.27CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java– –(2≥
`org.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?isbn@335.23:335.27CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java— —(#2•
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‘  ‘($2™
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!data	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¿2 ¿(62π
_org.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?doi@325.22:325.25DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈ ≈(2ª
aorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?arXiv@330.34:330.39DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java "  ('2∫
`org.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?isbn@335.23:335.27DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaœ œ(2h
java.util.ListRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¿ ¿(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¿ ¿(é
_org.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?doi@325.22:325.25VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈ ≈("
typeOptional<DOI>"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = DOI.findInText(data)*doi2e
java.util.OptionalTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈ ≈(2Å
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈ ≈(2ï
Borg.jabref.model.entry.identifier.DOI.findInText(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈  ≈(*2•
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java≈+ ≈(/«
aorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?arXiv@330.34:330.39VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java "  ('"!
typeOptional<ArXivIdentifier>"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>Optional<ArXivIdentifier> <mark class="class-field">arXiv</mark> = ArXivIdentifier.parse(data)*arXiv2e
java.util.OptionalTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java   (2ç
1org.jabref.model.entry.identifier.ArXivIdentifierTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java   ( 2ú
Iorg.jabref.model.entry.identifier.ArXivIdentifier.parse(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java :  (?2•
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java @  (Då
`org.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)?isbn@335.23:335.27VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaœ œ("
typeOptional<ISBN>"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>Optional<ISBN> <mark class="class-field">isbn</mark> = ISBN.parse(data)*isbn2e
java.util.OptionalTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaœ œ(2Ç
&org.jabref.model.entry.identifier.ISBNTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaœ œ(2ë
>org.jabref.model.entry.identifier.ISBN.parse(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaœ# œ((2•
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaœ) œ(-Ÿ
Rorg.jabref.gui.externalfiles.ImportHandler.handleStringData(java.lang.String)!data	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¿2 ¿(6"
typeString"
isFinalfalse" 
declarationStringString data*data2c
java.lang.StringTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¿+ ¿(1î
Morg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊ ◊(+"
isFinalfalse"â
declarationStringt<mark class="modifier">private </mark>List&lt;BibEntry&gt; <mark class="method">tryImportFormats</mark>(String data)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeList<BibEntry>*tryImportFormats2ï
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java⁄' ⁄(=2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java€' €(A2•
Rorg.jabref.logic.importer.ImportFormatReader.importUnknownFormat(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›I ›(\2≠
Zorg.jabref.gui.DialogService.showErrorDialogAndWait(java.lang.String, java.lang.Throwable)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡ ‡(02°
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡> ‡(B2t
!java.util.Collections.emptyList()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java· ·((2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java⁄ ⁄(&2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java€ €(&2õ
Horg.jabref.gui.externalfiles.ImportHandler?fileUpdateMonitor@65.36:65.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹ ‹(%2¡
norg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?importFormatReader@345.31:345.49CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›6 ›(H2•
Rorg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›] ›(a2¬
oorg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?unknownFormatImport@349.32:349.51CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaﬁ ﬁ(&2ó
Dorg.jabref.gui.externalfiles.ImportHandler?dialogService@70.32:70.45CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡ ‡(2±
^org.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?ex@351.33:351.35CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‡T ‡(V2™
Rorg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)!data	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊3 ◊(72»
norg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?importFormatReader@345.31:345.49DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaŸ Ÿ(12…
oorg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?unknownFormatImport@349.32:349.51DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›  ›(32∏
^org.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?ex@351.33:351.35DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaﬂ! ﬂ(#2h
java.util.ListRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊ ◊(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊ ◊(‹
norg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?importFormatReader@345.31:345.49VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaŸ Ÿ(1"
typeImportFormatReader"
isFinalfalse"¡
declarationString´<mark class="modifier"> </mark>ImportFormatReader <mark class="class-field">importFormatReader</mark> = new ImportFormatReader(preferencesService.getImporterPreferences()<mark class="modifier">,</mark> preferencesService.getImportFormatPreferences()<mark class="modifier">,</mark> fileUpdateMonitor)*importFormatReader2
,org.jabref.logic.importer.ImportFormatReaderTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaŸ Ÿ(2ï
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java⁄' ⁄(=2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java€' €(A2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java⁄ ⁄(&2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java€ €(&2õ
Horg.jabref.gui.externalfiles.ImportHandler?fileUpdateMonitor@65.36:65.53CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java‹ ‹(%µ
oorg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?unknownFormatImport@349.32:349.51VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›  ›(3"
typeUnknownFormatImport"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark>UnknownFormatImport <mark class="class-field">unknownFormatImport</mark> = importFormatReader.importUnknownFormat(data)*unknownFormatImport2f
UnknownFormatImportTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java› ›(2•
Rorg.jabref.logic.importer.ImportFormatReader.importUnknownFormat(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›I ›(\2¡
norg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?importFormatReader@345.31:345.49CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›6 ›(H2•
Rorg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)!dataCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java›] ›(aŸ
Rorg.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)!data	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊3 ◊(7"
typeString"
isFinalfalse" 
declarationStringString data*data2c
java.lang.StringTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java◊, ◊(2ã
^org.jabref.gui.externalfiles.ImportHandler.tryImportFormats(java.lang.String)?ex@351.33:351.35VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaﬂ! ﬂ(#"
typeImportException"
isFinalfalse"'
declarationStringImportException ex*ex2|
)org.jabref.logic.importer.ImportExceptionTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaﬂ ﬂ( ˙
\org.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÂ Â(%"
isFinalfalse"‘
declarationStringæ<mark class="modifier">private </mark>List&lt;BibEntry&gt; <mark class="method">fetchByDOI</mark>(DOI doi)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeList<BibEntry>*
fetchByDOI2£
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁc Á(t2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁE Á(_2Å
.org.jabref.model.entry.identifier.DOI.getDOI()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁy Á(2ì
@org.jabref.model.util.OptionalUtil.toList(java.util.Optional<T>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaË Ë("2ê
=org.jabref.gui.externalfiles.ImportHandler?LOGGER@62.32:62.38CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÊ Ê(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁ2 Á(D2≥
`org.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)!doiCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁu Á(x2√
porg.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)?entry@359.27:359.32CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaË# Ë((2∏
`org.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)!doi	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÂ* Â(-2 
porg.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)?entry@359.27:359.32DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁ Á( 2h
java.util.ListRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÂ Â(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÂ Â(Œ
porg.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)?entry@359.27:359.32VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁ Á( "
typeOptional<BibEntry>"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">entry</mark> = new DoiFetcher(preferencesService.getImportFormatPreferences()).performSearchById(doi.getDOI())*entry2e
java.util.OptionalTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁ Á(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁ Á(2£
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁc Á(t2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁE Á(_2Å
.org.jabref.model.entry.identifier.DOI.getDOI()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁy Á(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁ2 Á(D2≥
`org.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)!doiCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÁu Á(xÙ
`org.jabref.gui.externalfiles.ImportHandler.fetchByDOI(org.jabref.model.entry.identifier.DOI)!doi	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÂ* Â(-"
typeDOI"
isFinalfalse"
declarationStringDOI doi*doi2x
%org.jabref.model.entry.identifier.DOITYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÂ& Â()ö
jorg.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÎ Î('"
isFinalfalse"Ó
declarationStringÿ<mark class="modifier">private </mark>List&lt;BibEntry&gt; <mark class="method">fetchByArXiv</mark>(ArXivIdentifier arXivIdentifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeList<BibEntry>*fetchByArXiv2•
Rorg.jabref.logic.importer.fetcher.ArXivFetcher.performSearchById(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌe Ì(v2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌG Ì(a2§
Oorg.jabref.model.entry.identifier.ArXivIdentifier.getNormalizedWithoutVersion()CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌá Ì(¢2ì
@org.jabref.model.util.OptionalUtil.toList(java.util.Optional<T>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÓ Ó("2ê
=org.jabref.gui.externalfiles.ImportHandler?LOGGER@62.32:62.38CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÏ Ï(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌ4 Ì(F2Œ
zorg.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)!arXivIdentifierCALLJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌw Ì(Ü2—
~org.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)?entry@365.27:365.32CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÓ# Ó((2“
zorg.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)!arXivIdentifier	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÎ8 Î(G2ÿ
~org.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)?entry@365.27:365.32DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌ Ì( 2h
java.util.ListRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÎ Î(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÎ Î(ø
~org.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)?entry@365.27:365.32VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌ Ì( "
typeOptional<BibEntry>"
isFinalfalse"Û
declarationString›<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">entry</mark> = new ArXivFetcher(preferencesService.getImportFormatPreferences()).performSearchById(arXivIdentifier.getNormalizedWithoutVersion())*entry2e
java.util.OptionalTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌ Ì(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌ Ì(2•
Rorg.jabref.logic.importer.fetcher.ArXivFetcher.performSearchById(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌe Ì(v2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌG Ì(a2§
Oorg.jabref.model.entry.identifier.ArXivIdentifier.getNormalizedWithoutVersion()CALLK
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌá Ì(¢2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌ4 Ì(F2Œ
zorg.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)!arXivIdentifierCALLJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÌw Ì(ÜÀ
zorg.jabref.gui.externalfiles.ImportHandler.fetchByArXiv(org.jabref.model.entry.identifier.ArXivIdentifier)!arXivIdentifier	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÎ8 Î(G"
typeArXivIdentifier"
isFinalfalse"4
declarationStringArXivIdentifier arXivIdentifier*arXivIdentifier2Ñ
1org.jabref.model.entry.identifier.ArXivIdentifierTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÎ( Î(7°
^org.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÒ Ò(&"
isFinalfalse"◊
declarationString¡<mark class="modifier">private </mark>List&lt;BibEntry&gt; <mark class="method">fetchByISBN</mark>(ISBN isbn)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeList<BibEntry>*fetchByISBN2±
^org.jabref.logic.importer.fetcher.isbntobibtex.IsbnFetcher.performSearchById(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛd Û(u2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛF Û(`2ä
6org.jabref.model.entry.identifier.ISBN.getNormalized()CALLJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛ{ Û(à2ì
@org.jabref.model.util.OptionalUtil.toList(java.util.Optional<T>)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ Ù("2ê
=org.jabref.gui.externalfiles.ImportHandler?LOGGER@62.32:62.38CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÚ Ú(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛ3 Û(E2∂
corg.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)!isbnCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛv Û(z2≈
rorg.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)?entry@371.27:371.32CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÙ# Ù((2ª
corg.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)!isbn	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÒ, Ò(02Ã
rorg.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)?entry@371.27:371.32DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛ Û( 2h
java.util.ListRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÒ Ò(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÒ Ò(Û
rorg.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)?entry@371.27:371.32VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛ Û( "
typeOptional<BibEntry>"
isFinalfalse"Ÿ
declarationString√<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">entry</mark> = new IsbnFetcher(preferencesService.getImportFormatPreferences()).performSearchById(isbn.getNormalized())*entry2e
java.util.OptionalTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛ Û(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛ Û(2±
^org.jabref.logic.importer.fetcher.isbntobibtex.IsbnFetcher.performSearchById(java.lang.String)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛd Û(u2ô
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛF Û(`2ä
6org.jabref.model.entry.identifier.ISBN.getNormalized()CALLJ
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛ{ Û(à2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛ3 Û(E2∂
corg.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)!isbnCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÛv Û(z¸
corg.jabref.gui.externalfiles.ImportHandler.fetchByISBN(org.jabref.model.entry.identifier.ISBN)!isbn	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÒ, Ò(0"
typeISBN"
isFinalfalse"
declarationString	ISBN isbn*isbn2y
&org.jabref.model.entry.identifier.ISBNTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÒ' Ò(+ò:
©org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)METHODI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜ ˜(/"
isFinalfalse"ï
declarationStringˇ<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntriesWithDuplicateCheck</mark>(BibDatabaseContext database<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;BibEntry&gt; entriesToAdd)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntriesWithDuplicateCheck2Ω
Èorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¸ ¸(-2ü
Lorg.jabref.preferences.MergeDialogPreferences.shouldMergeApplyToAllEntries()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÄ? Ä([2ò
Eorg.jabref.preferences.PreferencesService.getMergeDialogPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÄ# Ä(<2©
Vorg.jabref.preferences.MergeDialogPreferences.getAllEntriesDuplicateResolverDecision()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅN Å(t2ò
Eorg.jabref.preferences.PreferencesService.getMergeDialogPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅ2 Å(K2Ω
Èorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry, org.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResult)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÉ É(-2Î
óorg.jabref.gui.externalfiles.ImportHandler.importEntryWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntry)CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÜ Ü(-2ä
∂org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entriesToAddCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˘ ˘(*2ñ
¬org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?firstEntry@376.16:376.26CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˙ ˙(2ê
=org.jabref.gui.externalfiles.ImportHandler?LOGGER@62.32:62.38CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˚ ˚(2Ü
≤org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!databaseCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¸. ¸(62ë
Ωorg.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@377.22:377.27CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¸8 ¸(=2ñ
¬org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?firstEntry@376.16:376.26CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˝ ˝(2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÄ Ä("2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅ Å(12ê
=org.jabref.gui.externalfiles.ImportHandler?LOGGER@62.32:62.38CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÇ Ç(2î
¿org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?decision@385.20:385.28CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÇN Ç(V2Ü
≤org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!databaseCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÉ. É(62ë
Ωorg.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@377.22:377.27CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÉ8 É(=2î
¿org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?decision@385.20:385.28CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÉ? É(G2ê
=org.jabref.gui.externalfiles.ImportHandler?LOGGER@62.32:62.38CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÖ Ö(2Ü
≤org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!databaseCALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÜ. Ü(62ë
Ωorg.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@377.22:377.27CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÜ8 Ü(=2ã
≤org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!database	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜C ˜(K2è
∂org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entriesToAdd	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜\ ˜(h2ù
¬org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?firstEntry@376.16:376.26DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¯ ¯(2ò
Ωorg.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@377.22:377.27DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˘ ˘(2õ
¿org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?decision@385.20:385.28DECLARATIONI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅ Å(2^
voidRETURN_TYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜ ˜(¥
¬org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?firstEntry@376.16:376.26VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¯ ¯("
typeboolean"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">firstEntry</mark> = true*
firstEntry2Z
booleanTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java¯ ¯(ô
Ωorg.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@377.22:377.27VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˘ ˘("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˘ ˘(å	
¿org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?decision@385.20:385.28VARIABLEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅ Å("
typevar"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>var <mark class="class-field">decision</mark> = preferencesService.getMergeDialogPreferences().getAllEntriesDuplicateResolverDecision()*decision2£
Porg.jabref.gui.duplicationFinder.DuplicateResolverDialog.DuplicateResolverResultTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅ Å(2©
Vorg.jabref.preferences.MergeDialogPreferences.getAllEntriesDuplicateResolverDecision()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅN Å(t2ò
Eorg.jabref.preferences.PreferencesService.getMergeDialogPreferences()CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅ2 Å(K2ú
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55CALLI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaÅ Å(1ˆ
≤org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!database	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜C ˜(K"
typeBibDatabaseContext"
isFinalfalse"0
declarationStringBibDatabaseContext database*database2
,org.jabref.model.database.BibDatabaseContextTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜0 ˜(BŸ
∂org.jabref.gui.externalfiles.ImportHandler.importEntriesWithDuplicateCheck(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entriesToAdd	PARAMETERI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜\ ˜(h"
typeList<BibEntry>"
isFinalfalse"0
declarationStringList<BibEntry> entriesToAdd*entriesToAdd2a
java.util.ListTYPEI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜M ˜(Q2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java˜R ˜(Z¶
=org.jabref.gui.externalfiles.ImportHandler?LOGGER@62.32:62.38VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java>  >(&"
isFinaltrue"
typeLogger"„
declarationStringÕ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(ImportHandler.class);"
isStatictrue"
accessprivate*LOGGER2a
org.slf4j.LoggerTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java> >(™
Iorg.jabref.gui.externalfiles.ImportHandler?bibDatabaseContext@63.37:63.55VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java?% ?(7"
isFinaltrue"
typeBibDatabaseContext"¶
declarationStringê<mark class="modifier">private </mark><mark class="modifier">final </mark>BibDatabaseContext <mark class="class-field">bibDatabaseContext</mark>"
isStaticfalse"
accessprivate*bibDatabaseContext2}
,org.jabref.model.database.BibDatabaseContextTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java? ?($ß
Iorg.jabref.gui.externalfiles.ImportHandler?preferencesService@64.37:64.55VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java@% @(7"
isFinaltrue"
typePreferencesService"¶
declarationStringê<mark class="modifier">private </mark><mark class="modifier">final </mark>PreferencesService <mark class="class-field">preferencesService</mark>"
isStaticfalse"
accessprivate*preferencesService2z
)org.jabref.preferences.PreferencesServiceTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.java@ @($†
Horg.jabref.gui.externalfiles.ImportHandler?fileUpdateMonitor@65.36:65.53VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaA$ A(5"
isFinaltrue"
typeFileUpdateMonitor"§
declarationStringé<mark class="modifier">private </mark><mark class="modifier">final </mark>FileUpdateMonitor <mark class="class-field">fileUpdateMonitor</mark>"
isStaticfalse"
accessprivate*fileUpdateMonitor2x
'org.jabref.model.util.FileUpdateMonitorTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaA A(#ú
=org.jabref.gui.externalfiles.ImportHandler?linker@66.43:66.49VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaB+ B(1"
isFinaltrue" 
typeExternalFilesEntryLinker"†
declarationStringä<mark class="modifier">private </mark><mark class="modifier">final </mark>ExternalFilesEntryLinker <mark class="class-field">linker</mark>"
isStaticfalse"
accessprivate*linker2Ü
5org.jabref.gui.externalfiles.ExternalFilesEntryLinkerTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaB B(*≈
Forg.jabref.gui.externalfiles.ImportHandler?contentImporter@67.47:67.62VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaC/ C(>"
isFinaltrue"$
typeExternalFilesContentImporter"≠
declarationStringó<mark class="modifier">private </mark><mark class="modifier">final </mark>ExternalFilesContentImporter <mark class="class-field">contentImporter</mark>"
isStaticfalse"
accessprivate*contentImporter2å
;org.jabref.logic.externalfiles.ExternalFilesContentImporterTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaC C(.˜
Borg.jabref.gui.externalfiles.ImportHandler?undoManager@68.30:68.41VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaD D()"
isFinaltrue"
typeUndoManager"ò
declarationStringÇ<mark class="modifier">private </mark><mark class="modifier">final </mark>UndoManager <mark class="class-field">undoManager</mark>"
isStaticfalse"
accessprivate*undoManager2m
javax.swing.undo.UndoManagerTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaD D(˚
Corg.jabref.gui.externalfiles.ImportHandler?stateManager@69.31:69.43VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaE E(+"
isFinaltrue"
typeStateManager"ö
declarationStringÑ<mark class="modifier">private </mark><mark class="modifier">final </mark>StateManager <mark class="class-field">stateManager</mark>"
isStaticfalse"
accessprivate*stateManager2l
org.jabref.gui.StateManagerTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaE E(Å
Dorg.jabref.gui.externalfiles.ImportHandler?dialogService@70.32:70.45VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaF  F(-"
isFinaltrue"
typeDialogService"ú
declarationStringÜ<mark class="modifier">private </mark><mark class="modifier">final </mark>DialogService <mark class="class-field">dialogService</mark>"
isStaticfalse"
accessprivate*dialogService2m
org.jabref.gui.DialogServiceTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaF F(Ä
Corg.jabref.gui.externalfiles.ImportHandler?taskExecutor@71.31:71.43VALUEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaG G(+"
isFinaltrue"
typeTaskExecutor"ö
declarationStringÑ<mark class="modifier">private </mark><mark class="modifier">final </mark>TaskExecutor <mark class="class-field">taskExecutor</mark>"
isStaticfalse"
accessprivate*taskExecutor2q
 org.jabref.gui.util.TaskExecutorTYPEG
=src\main\java\org\jabref\gui\externalfiles\ImportHandler.javaG G(