
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.javaã
0org.jabref.gui.externalfiles.GitIgnoreFileFilterCLASSM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java ( "'
packageorg.jabref.gui.externalfiles"
isFinalfalse"
inner classfalse"

isAbstractfalse"¡
declarationString´<mark class="modifier">public </mark><mark class="modifier">class </mark>GitIgnoreFileFilter<mark class="modifier"><br>implements </mark>DirectoryStream.Filter&lt;Path&gt;"
accesspublic*GitIgnoreFileFilter2∂
Xorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (2©
Korg.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java9 9(2°
Corg.jabref.gui.externalfiles.GitIgnoreFileFilter?LOGGER@19.32:19.38DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java  (&2¨
Norg.jabref.gui.externalfiles.GitIgnoreFileFilter?gitIgnorePatterns@21.29:21.46DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (.2}
$java.nio.file.DirectoryStream.FilterEXTENDM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java< (B2y
java.nio.file.PathEXTEND_TYPE_ARGUMENTM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.javaC (G“V
Xorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)CONSTRUCTORM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java ("t
declarationString_<mark class="modifier">public </mark><mark class="method">GitIgnoreFileFilter</mark>(Path path)*GitIgnoreFileFilter2¢
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java/ (52É
,java.nio.file.Path.resolve(java.lang.String)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.javaB (I2u
java.nio.file.Path.getParent()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java& (/2£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java"$ "(+2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java!$ !('2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java $  ('2t
java.util.Collection.stream()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.javaX (^2s
java.util.Set.of(E, E, E, E)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$ (&2ê
9java.nio.file.FileSystem.getPathMatcher(java.lang.String)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java!R !(`2}
&java.nio.file.FileSystems.getDefault()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java!E !(O2z
#java.util.stream.Collectors.toSet()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java"7 "(<2É
,java.nio.file.Path.resolve(java.lang.String)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$) $(02£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java-Q -(X2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java,Q ,(T2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java+Q +(T2û
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java)Q )(W2û
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java(Q ((W2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java'Q '(T2t
java.util.Collection.stream()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java&i &(o2ã
4java.nio.file.Files.readAllLines(java.nio.file.Path)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java&Q &(]2†
Ijava.util.function.Predicate.not(java.util.function.Predicate<? super T>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java(X (([2Ñ
-java.lang.String.startsWith(java.lang.String)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java)f )(p2ë
9java.nio.file.FileSystem.getPathMatcher(java.lang.String)CALLN
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java, ,(ç2}
&java.nio.file.FileSystems.getDefault()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java,r ,(|2z
#java.util.stream.Collectors.toSet()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java-d -(i2k
java.util.Set.add(E)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java0" 0(%2ê
9java.nio.file.FileSystem.getPathMatcher(java.lang.String)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java0? 0(M2}
&java.nio.file.FileSystems.getDefault()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java02 0(<2i
java.util.Set.of()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java3( 3(*2ì
<java.util.HashSet.HashSet(java.util.Collection<? extends E>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java.( .(12¥
]org.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)!pathCALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (2«
porg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?currentPath@24.13:24.24CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (2«
porg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?currentPath@24.13:24.24CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java6 (A2«
porg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?currentPath@24.13:24.24CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (2«
porg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?currentPath@24.13:24.24CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (%2«
porg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?currentPath@24.13:24.24CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (2•
Norg.jabref.gui.externalfiles.GitIgnoreFileFilter?gitIgnorePatterns@21.29:21.46CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (2¿
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@32.40:32.44CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java :  (>2…
rorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?matcherString@33.40:33.53CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java!a !(n2«
porg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?currentPath@24.13:24.24CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$ $((2≈
norg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?gitIgnore@36.17:36.26CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java&^ &(g2¿
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@41.88:41.92CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java)a )(e2¿
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@43.85:43.89CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java+g +(k2À
rorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?matcherString@44.85:44.98CALLO
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java,é ,(õ2•
Norg.jabref.gui.externalfiles.GitIgnoreFileFilter?gitIgnorePatterns@21.29:21.46CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java. .(!2‰
åorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?plainGitIgnorePatternsFromGitIgnoreFile@38.33:38.72CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java.2 .(Y2•
Norg.jabref.gui.externalfiles.GitIgnoreFileFilter?gitIgnorePatterns@21.29:21.46CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java0 0(!2ö
Corg.jabref.gui.externalfiles.GitIgnoreFileFilter?LOGGER@19.32:19.38CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java2 2(2≈
norg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?gitIgnore@36.17:36.26CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java2A 2(J2Ω
forg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?e@49.33:49.34CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java2L 2(M2•
Norg.jabref.gui.externalfiles.GitIgnoreFileFilter?gitIgnorePatterns@21.29:21.46CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java3 3(!2n
java.lang.String.trim()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java'U '(a2q
java.lang.String.isEmpty()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java(\ ((k2π
]org.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)!path	PARAMETERM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$ ((2Œ
porg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?currentPath@24.13:24.24DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (2Ã
norg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?gitIgnore@36.17:36.26DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$ $(2Î
åorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?plainGitIgnorePatternsFromGitIgnoreFile@38.33:38.72DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java&! &(H2«
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@32.40:32.44DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (  (,2–
rorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?matcherString@33.40:33.53DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java!( !(52«
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@41.88:41.92DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java)X )(\2«
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@43.85:43.89DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java+U +(Y2–
rorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?matcherString@44.85:44.98DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java,U ,(b2ƒ
forg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?e@49.33:49.34DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java1! 1("2é
0org.jabref.gui.externalfiles.GitIgnoreFileFilterRETURN_TYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (à
porg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?currentPath@24.13:24.24VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java ("
typePath"
isFinalfalse"l
declarationStringW<mark class="modifier"> </mark>Path <mark class="class-field">currentPath</mark> = path*currentPath2i
java.nio.file.PathTYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (2¥
]org.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)!pathCALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (π
norg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?gitIgnore@36.17:36.26VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$ $("
typePath"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark>Path <mark class="class-field">gitIgnore</mark> = currentPath.resolve(".gitignore")*	gitIgnore2i
java.nio.file.PathTYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$ $(2É
,java.nio.file.Path.resolve(java.lang.String)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$) $(02«
porg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?currentPath@24.13:24.24CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$ $((Å
åorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?plainGitIgnorePatternsFromGitIgnoreFile@38.33:38.72VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java&! &(H"
typeSet<PathMatcher>"
isFinalfalse"æ
declarationString®<mark class="modifier"> </mark>Set<PathMatcher> <mark class="class-field">plainGitIgnorePatternsFromGitIgnoreFile</mark> = Files.readAllLines(gitIgnore).stream().map(String::trim).filter(not(String::isEmpty)).filter(line -> !line.startsWith("#")).// convert to Java syntax for Glob patterns
map(line -> "glob:" + line).map(matcherString -> FileSystems.getDefault().getPathMatcher(matcherString)).collect(Collectors.toSet())*'plainGitIgnorePatternsFromGitIgnoreFile2d
java.util.SetTYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java& &(2y
java.nio.file.PathMatcherTYPE_ARGUMENTM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java& &(2£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java-Q -(X2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java,Q ,(T2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java+Q +(T2û
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java)Q )(W2û
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java(Q ((W2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java'Q '(T2t
java.util.Collection.stream()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java&i &(o2ã
4java.nio.file.Files.readAllLines(java.nio.file.Path)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java&Q &(]2†
Ijava.util.function.Predicate.not(java.util.function.Predicate<? super T>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java(X (([2Ñ
-java.lang.String.startsWith(java.lang.String)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java)f )(p2ë
9java.nio.file.FileSystem.getPathMatcher(java.lang.String)CALLN
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java, ,(ç2}
&java.nio.file.FileSystems.getDefault()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java,r ,(|2z
#java.util.stream.Collectors.toSet()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java-d -(i2≈
norg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?gitIgnore@36.17:36.26CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java&^ &(g2¿
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@41.88:41.92CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java)a )(e2¿
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@43.85:43.89CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java+g +(k2À
rorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?matcherString@44.85:44.98CALLO
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java,é ,(õ2n
java.lang.String.trim()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java'U '(a2q
java.lang.String.isEmpty()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java(\ ((kÍ
]org.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)!path	PARAMETERM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java$ (("
typePath"
isFinalfalse"
declarationString	Path path*path2i
java.nio.file.PathTYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (#à
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@32.40:32.44VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (  (,"
type"
isFinalfalse"
declarationString line*line2TYPE£
rorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?matcherString@33.40:33.53VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java!( !(5"
type"
isFinalfalse"#
declarationString matcherString*matcherString2TYPEà
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@41.88:41.92VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java)X )(\"
type"
isFinalfalse"
declarationString line*line2TYPEà
iorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?line@43.85:43.89VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java+U +(Y"
type"
isFinalfalse"
declarationString line*line2TYPE£
rorg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?matcherString@44.85:44.98VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java,U ,(b"
type"
isFinalfalse"#
declarationString matcherString*matcherString2TYPE˚
forg.jabref.gui.externalfiles.GitIgnoreFileFilter.GitIgnoreFileFilter(java.nio.file.Path)?e@49.33:49.34VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java1! 1(""
typeIOException"
isFinalfalse""
declarationStringIOException e*e2j
java.io.IOExceptionTYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java1 1( â
Korg.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)METHODM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java9 9("
isFinalfalse"ã
declarationStringı<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">accept</mark>(Path path)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*accept2°
Jjava.util.stream.Stream.noneMatch(java.util.function.Predicate<? super T>)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java;* ;(32t
java.util.Collection.stream()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java;! ;('2å
5java.nio.file.PathMatcher.matches(java.nio.file.Path)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java= =(2w
 java.nio.file.Path.getFileName()CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java=$ =(/2å
5java.nio.file.PathMatcher.matches(java.nio.file.Path)CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java? ?(2•
Norg.jabref.gui.externalfiles.GitIgnoreFileFilter?gitIgnorePatterns@21.29:21.46CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java; ;( 2µ
^org.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)?filter@59.52:59.58CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java= =(2ß
Porg.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)!pathCALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java= =(#2µ
^org.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)?filter@59.52:59.58CALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java? ?(2ß
Porg.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)!pathCALLM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java? ?(#2¨
Porg.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)!path	PARAMETERM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java9 9(#2º
^org.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)?filter@59.52:59.58DECLARATIONM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java;4 ;(:2e
booleanRETURN_TYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java9 9(›
Porg.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)!path	PARAMETERM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java9 9(#"
typePath"
isFinalfalse"
declarationString	Path path*path2i
java.nio.file.PathTYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java9 9(Å
^org.jabref.gui.externalfiles.GitIgnoreFileFilter.accept(java.nio.file.Path)?filter@59.52:59.58VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java;4 ;(:"
type"
isFinalfalse"
declarationString filter*filter2TYPEæ
Corg.jabref.gui.externalfiles.GitIgnoreFileFilter?LOGGER@19.32:19.38VALUEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java  (&"
isFinaltrue"
typeLogger"È
declarationString”<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(GitIgnoreFileFilter.class);"
isStatictrue"
accessprivate*LOGGER2g
org.slf4j.LoggerTYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (Ô
Norg.jabref.gui.externalfiles.GitIgnoreFileFilter?gitIgnorePatterns@21.29:21.46VARIABLEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (."
isFinalfalse"
typeSet<PathMatcher>"~
declarationStringi<mark class="modifier">private </mark>Set<PathMatcher> <mark class="class-field">gitIgnorePatterns</mark>"
isStaticfalse"
accessprivate*gitIgnorePatterns2d
java.util.SetTYPEM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (2y
java.nio.file.PathMatcherTYPE_ARGUMENTM
Csrc\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java (