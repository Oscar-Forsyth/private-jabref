
8src\main\java\org\jabref\cli\JournalListMvGenerator.java˛
%org.jabref.cli.JournalListMvGeneratorCLASSB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (#"
packageorg.jabref.cli"
isFinalfalse"
inner classfalse"

isAbstractfalse"t
declarationString_<mark class="modifier">public </mark><mark class="modifier">class </mark>JournalListMvGenerator"
accesspublic*JournalListMvGenerator2ë
>org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (⁄I
>org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])METHODB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java ("
isFinalfalse"Å
declarationStringÎ<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">main</mark>(String[] args)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*main2u
)java.lang.String.equals(java.lang.Object)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java= (C2à
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+ (-2ó
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2y
-java.io.PrintStream.println(java.lang.String)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2o
#java.nio.file.Path.toAbsolutePath()CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java@ (N2f
java.lang.System.exit(int)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2à
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java& ((2h
java.util.Set.of(E, E, E, E)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java' ()2À
java.nio.file.Files.createDirectories(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java) )(2j
java.nio.file.Path.getParent()CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java)2 )(;2ò
Ljava.nio.file.Files.newDirectoryStream(java.nio.file.Path, java.lang.String)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+2 +(D2i
java.nio.file.Path.toString()CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java-0 -(82w
+java.io.PrintStream.print(java.lang.String)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java3 3( 2w
+java.io.PrintStream.print(java.lang.String)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java4 4( 2t
(java.util.Set.contains(java.lang.Object)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java5! 5()2y
-java.io.PrintStream.println(java.lang.String)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java6 6(&2y
-java.io.PrintStream.println(java.lang.String)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java8 8(&2ò
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java< <($2i
java.util.Collection.stream()CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java; ;(#2˛
±java.util.stream.Collectors.toMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends U>, java.util.function.BinaryOperator<U>)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java<0 <(52è
Corg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])!argsCALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2è
Corg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])!argsCALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.javaD (H2≠
aorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviationsDirectory@23.13:23.35CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (02≠
aorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviationsDirectory@23.13:23.35CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java) (?2®
\org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?journalListMvFile@28.13:28.30CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java)  )(12≠
aorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviationsDirectory@23.13:23.35CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+E +([2®
\org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?journalListMvFile@28.13:28.30CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java- -(/2ú
Porg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?store@44.21:44.26CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java0= 0(B2ù
Qorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?stream@43.35:43.41CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java1 1(2õ
Oorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?path@49.46:49.50CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java2" 2(&2ü
Sorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?fileName@50.23:50.31CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java4! 4()2£
Worg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?ignoredNames@30.20:30.32CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java5 5( 2ü
Sorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?fileName@50.23:50.31CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java5* 5(22õ
Oorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?path@49.46:49.50CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java9t 9(x2§
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviations@57.45:57.58CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java:@ :(M2£
Worg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation@62.36:62.48CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java>4 >(@2û
Rorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?verbose@21.16:21.23CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java@, @(32§
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation1@63.37:63.50CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.javaAQ A(^2§
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation2@63.52:63.65CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.javaC/ C(<2©
]org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?fullToAbbreviation@48.40:48.58CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.javaE E(&2¶
Zorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviationMap@58.46:58.61CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.javaE. E(=2|
0org.jabref.logic.journals.Abbreviation.getName()CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java=$ =(92î
Corg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])!args	PARAMETERB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java% ()2•
Rorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?verbose@21.16:21.23DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2¥
aorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviationsDirectory@23.13:23.35DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (#2Ø
\org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?journalListMvFile@28.13:28.30DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2™
Worg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?ignoredNames@30.20:30.32DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java ( 2§
Qorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?stream@43.35:43.41DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+# +()2£
Porg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?store@44.21:44.26DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java, ,(2∞
]org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?fullToAbbreviation@48.40:48.58DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java0( 0(:2¶
Sorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?fileName@50.23:50.31DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java2 2(2´
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviations@57.45:57.58DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java9- 9(:2≠
Zorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviationMap@58.46:58.61DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java:. :(=2¢
Oorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?path@49.46:49.50DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java1. 1(22™
Worg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation@62.36:62.48DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java>$ >(02´
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation1@63.37:63.50DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java?% ?(22´
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation2@63.52:63.65DECLARATIONB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java?4 ?(A2W
voidRETURN_TYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (˙
Rorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?verbose@21.16:21.23VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java ("
typeboolean"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">verbose</mark> = (args.length == 1) && ("--verbose".equals(args[0]))*verbose2S
booleanTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2u
)java.lang.String.equals(java.lang.Object)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java= (C2è
Corg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])!argsCALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2è
Corg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])!argsCALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.javaD (H∫
aorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviationsDirectory@23.13:23.35VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (#"
typePath"
isFinalfalse"„
declarationStringÕ<mark class="modifier"> </mark>Path <mark class="class-field">abbreviationsDirectory</mark> = Path.of("buildres"<mark class="modifier">,</mark> "abbrv.jabref.org"<mark class="modifier">,</mark> "journals")*abbreviationsDirectory2^
java.nio.file.PathTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2à
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+ (-¯
\org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?journalListMvFile@28.13:28.30VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java ("
typePath"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>Path <mark class="class-field">journalListMvFile</mark> = Path.of("build"<mark class="modifier">,</mark> "resources"<mark class="modifier">,</mark> "main"<mark class="modifier">,</mark> "journals"<mark class="modifier">,</mark> "journal-list.mv")*journalListMvFile2^
java.nio.file.PathTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2à
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java& ((∂
Worg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?ignoredNames@30.20:30.32VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java ( "
typeSet<String>"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>Set<String> <mark class="class-field">ignoredNames</mark> = Set.of(// remove all lists without dot in them:
// we use abbreviation lists containing dots in them only (to be consistent)
"journal_abbreviations_entrez.csv"<mark class="modifier">,</mark> "journal_abbreviations_medicus.csv"<mark class="modifier">,</mark> "journal_abbreviations_webofscience-dotless.csv"<mark class="modifier">,</mark> // we currently do not have good support for BibTeX strings
"journal_abbreviations_ieee_strings.csv")*ignoredNames2Y
java.util.SetTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2e
java.lang.StringTYPE_ARGUMENTB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java (2h
java.util.Set.of(E, E, E, E)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java' ()™
Qorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?stream@43.35:43.41VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+# +()"
typeDirectoryStream<Path>"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>DirectoryStream<Path> <mark class="class-field">stream</mark> = Files.newDirectoryStream(abbreviationsDirectory, "*.csv")*stream2i
java.nio.file.DirectoryStreamTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+ +(2g
java.nio.file.PathTYPE_ARGUMENTB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+ +(!2ò
Ljava.nio.file.Files.newDirectoryStream(java.nio.file.Path, java.lang.String)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+2 +(D2≠
aorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviationsDirectory@23.13:23.35CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java+E +([ˇ
Porg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?store@44.21:44.26VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java, ,("
typeMVStore"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>MVStore <mark class="class-field">store</mark> = new MVStore.Builder().fileName(journalListMvFile.toString()).compressHigh().open()*store2b
org.h2.mvstore.MVStoreTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java, ,(2i
java.nio.file.Path.toString()CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java-0 -(82®
\org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?journalListMvFile@28.13:28.30CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java- -(/ä
]org.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?fullToAbbreviation@48.40:48.58VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java0( 0(:"#
typeMVMap<String, Abbreviation>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>MVMap<String, Abbreviation> <mark class="class-field">fullToAbbreviation</mark> = store.openMap("FullToAbbreviation")*fullToAbbreviation2`
org.h2.mvstore.MVMapTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java0 0(2e
java.lang.StringTYPE_ARGUMENTB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java0 0(2{
&org.jabref.logic.journals.AbbreviationTYPE_ARGUMENTB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java0 0(&2ú
Porg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?store@44.21:44.26CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java0= 0(B“
Sorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?fileName@50.23:50.31VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java2 2("
typeString"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>String <mark class="class-field">fileName</mark> = path.getFileName().toString()*fileName2\
java.lang.StringTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java2 2(2õ
Oorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?path@49.46:49.50CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java2" 2(&¶
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviations@57.45:57.58VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java9- 9(:" 
typeCollection<Abbreviation>"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>Collection<Abbreviation> <mark class="class-field">abbreviations</mark> = JournalAbbreviationLoader.readAbbreviationsFromCsvFile(path)*abbreviations2`
java.util.CollectionTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java9 9(2{
&org.jabref.logic.journals.AbbreviationTYPE_ARGUMENTB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java9 9(+2õ
Oorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?path@49.46:49.50CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java9t 9(xÄ
Zorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviationMap@58.46:58.61VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java:. :(="!
typeMap<String, Abbreviation>"
isFinalfalse"ç
declarationString˜<mark class="modifier"> </mark>Map<String, Abbreviation> <mark class="class-field">abbreviationMap</mark> = abbreviations.stream().collect(Collectors.toMap(Abbreviation::getName, abbreviation -> abbreviation, (abbreviation1, abbreviation2) -> {
    if (verbose) {
        System.out.println("Double entry " + abbreviation1.getName());
    }
    return abbreviation2;
}))*abbreviationMap2Y
java.util.MapTYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java: :(2e
java.lang.StringTYPE_ARGUMENTB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java: :(2{
&org.jabref.logic.journals.AbbreviationTYPE_ARGUMENTB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java:  :(,2ò
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java< <($2i
java.util.Collection.stream()CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java; ;(#2˛
±java.util.stream.Collectors.toMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends U>, java.util.function.BinaryOperator<U>)CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java<0 <(52§
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviations@57.45:57.58CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java:@ :(M2£
Worg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation@62.36:62.48CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java>4 >(@2û
Rorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?verbose@21.16:21.23CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java@, @(32§
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation1@63.37:63.50CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.javaAQ A(^2§
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation2@63.52:63.65CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.javaC/ C(<2|
0org.jabref.logic.journals.Abbreviation.getName()CALLB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java=$ =(9¬
Corg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])!args	PARAMETERB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java% ()"
typeString[]"
isFinalfalse""
declarationStringString[] args*args2^
java.lang.String[]TYPEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java ($„
Oorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?path@49.46:49.50VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java1. 1(2"
type"
isFinalfalse"
declarationString path*path2TYPE˚
Worg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation@62.36:62.48VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java>$ >(0"
type"
isFinalfalse""
declarationString abbreviation*abbreviation2TYPE˛
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation1@63.37:63.50VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java?% ?(2"
type"
isFinalfalse"#
declarationString abbreviation1*abbreviation12TYPE˛
Xorg.jabref.cli.JournalListMvGenerator.main(java.lang.String[])?abbreviation2@63.52:63.65VARIABLEB
8src\main\java\org\jabref\cli\JournalListMvGenerator.java?4 ?(A"
type"
isFinalfalse"#
declarationString abbreviation2*abbreviation22TYPE