
/src\test\java\org\jabref\cli\JabRefCLITest.javaï
org.jabref.cli.JabRefCLITestCLASS9
/src\test\java\org\jabref\cli\JabRefCLITest.java ("
packageorg.jabref.cli"
isFinalfalse"
inner classfalse"

isAbstractfalse"e
declarationStringP<mark class="modifier"> </mark><mark class="modifier">class </mark>JabRefCLITest"
accesspackage_private*JabRefCLITest2Ö
;org.jabref.cli.JabRefCLITest.emptyCLILeftOversLongOptions()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java	 (%2Å
7org.jabref.cli.JabRefCLITest.guiIsDisabledLongOptions()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java	 (!2î
Jorg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportCLILongOptions()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java	 (42î
Jorg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportCLILongOptions()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java&	 &(42Ü
<org.jabref.cli.JabRefCLITest.emptyCLILeftOversShortOptions()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java-	 -(&2Ç
8org.jabref.cli.JabRefCLITest.guiIsDisabledShortOptions()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java4	 4("2í
Horg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportShortOptions()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java;	 ;(22í
Horg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportShortOptions()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaB	 B(22Å
7org.jabref.cli.JabRefCLITest.emptyPreferencesLeftOver()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaI	 I(!2Ü
<org.jabref.cli.JabRefCLITest.successfulExportOfPreferences()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaP	 P(&2à
>org.jabref.cli.JabRefCLITest.guiDisabledForPreferencesExport()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaW	 W((2é
Dorg.jabref.cli.JabRefCLITest.emptyLeftOversCLIShortImportingBibtex()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java^	 ^(.2Ñ
:org.jabref.cli.JabRefCLITest.recognizesImportBibtexShort()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javae	 e($2ç
Corg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportShort()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javal	 l(-2ç
Corg.jabref.cli.JabRefCLITest.emptyLeftOversCLILongImportingBibtex()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javas	 s(-2É
9org.jabref.cli.JabRefCLITest.recognizesImportBibtexLong()DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaz	 z(#2é
Borg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportLong()DECLARATION;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÅ	 Å(,2y
-org.jabref.cli.JabRefCLITest.wrapStringList()DECLARATION;
/src\test\java\org\jabref\cli\JabRefCLITest.javaà	 à(2{
/org.jabref.cli.JabRefCLITest.alignStringTable()DECLARATION;
/src\test\java\org\jabref\cli\JabRefCLITest.javaï	 ï(2y
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java (“	
;org.jabref.cli.JabRefCLITest.emptyCLILeftOversLongOptions()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.java	 (%"
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">emptyCLILeftOversLongOptions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*emptyCLILeftOversLongOptions2d
!java.util.Collections.emptyList()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java! (*2i
&org.jabref.cli.JabRefCLI.getLeftOver()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java2 (=2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java (%2é
Korg.jabref.cli.JabRefCLITest.emptyCLILeftOversLongOptions()?cli@18.18:18.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java. (12ï
Korg.jabref.cli.JabRefCLITest.emptyCLILeftOversLongOptions()?cli@18.18:18.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java (2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java (ï
Korg.jabref.cli.JabRefCLITest.emptyCLILeftOversLongOptions()?cli@18.18:18.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.java ("
type	JabRefCLI"
isFinalfalse"˛
declarationStringË<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "--nogui"<mark class="modifier">,</mark> "--import=some/file"<mark class="modifier">,</mark> "--output=some/export/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java (2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java (%Ÿ
7org.jabref.cli.JabRefCLITest.guiIsDisabledLongOptions()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.java	 (!"
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">guiIsDisabledLongOptions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*guiIsDisabledLongOptions2j
'org.jabref.cli.JabRefCLI.isDisableGui()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java (#2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java (%2ä
Gorg.jabref.cli.JabRefCLITest.guiIsDisabledLongOptions()?cli@25.18:25.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java (2ë
Gorg.jabref.cli.JabRefCLITest.guiIsDisabledLongOptions()?cli@25.18:25.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java (2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java (ë
Gorg.jabref.cli.JabRefCLITest.guiIsDisabledLongOptions()?cli@25.18:25.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.java ("
type	JabRefCLI"
isFinalfalse"˛
declarationStringË<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "--nogui"<mark class="modifier">,</mark> "--import=some/file"<mark class="modifier">,</mark> "--output=some/export/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java (2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java (%π	
Jorg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportCLILongOptions()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.java	 (4"
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">successfulParsingOfFileImportCLILongOptions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*+successfulParsingOfFileImportCLILongOptions2k
(org.jabref.cli.JabRefCLI.getFileImport()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java"& "(32y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java   (%2ù
Zorg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportCLILongOptions()?cli@32.18:32.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java"" "(%2§
Zorg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportCLILongOptions()?cli@32.18:32.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java   (2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java (§
Zorg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportCLILongOptions()?cli@32.18:32.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.java   ("
type	JabRefCLI"
isFinalfalse"˛
declarationStringË<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "--nogui"<mark class="modifier">,</mark> "--import=some/file"<mark class="modifier">,</mark> "--output=some/export/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java   (2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java   (%π	
Jorg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportCLILongOptions()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.java&	 &(4"
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">successfulParsingOfFileExportCLILongOptions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*+successfulParsingOfFileExportCLILongOptions2k
(org.jabref.cli.JabRefCLI.getFileExport()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java)- )(:2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java' '(%2ù
Zorg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportCLILongOptions()?cli@39.18:39.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java)) )(,2§
Zorg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportCLILongOptions()?cli@39.18:39.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java' '(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java& &(§
Zorg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportCLILongOptions()?cli@39.18:39.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.java' '("
type	JabRefCLI"
isFinalfalse"˛
declarationStringË<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "--nogui"<mark class="modifier">,</mark> "--import=some/file"<mark class="modifier">,</mark> "--output=some/export/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java' '(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java' '(%◊	
<org.jabref.cli.JabRefCLITest.emptyCLILeftOversShortOptions()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.java-	 -(&"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">emptyCLILeftOversShortOptions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*emptyCLILeftOversShortOptions2d
!java.util.Collections.emptyList()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java0! 0(*2i
&org.jabref.cli.JabRefCLI.getLeftOver()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java02 0(=2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java. .(%2è
Lorg.jabref.cli.JabRefCLITest.emptyCLILeftOversShortOptions()?cli@46.18:46.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java0. 0(12ñ
Lorg.jabref.cli.JabRefCLITest.emptyCLILeftOversShortOptions()?cli@46.18:46.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java. .(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java- -(Ö
Lorg.jabref.cli.JabRefCLITest.emptyCLILeftOversShortOptions()?cli@46.18:46.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.java. .("
type	JabRefCLI"
isFinalfalse"Ì
declarationString◊<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-n"<mark class="modifier">,</mark> "-i=some/file"<mark class="modifier">,</mark> "-o=some/export/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java. .(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java. .(%ﬁ
8org.jabref.cli.JabRefCLITest.guiIsDisabledShortOptions()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.java4	 4(""
isFinalfalse"Ü
declarationString<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">guiIsDisabledShortOptions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*guiIsDisabledShortOptions2j
'org.jabref.cli.JabRefCLI.isDisableGui()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java7 7(#2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java5 5(%2ã
Horg.jabref.cli.JabRefCLITest.guiIsDisabledShortOptions()?cli@53.18:53.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java7 7(2í
Horg.jabref.cli.JabRefCLITest.guiIsDisabledShortOptions()?cli@53.18:53.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java5 5(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java4 4(Å
Horg.jabref.cli.JabRefCLITest.guiIsDisabledShortOptions()?cli@53.18:53.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.java5 5("
type	JabRefCLI"
isFinalfalse"Ì
declarationString◊<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-n"<mark class="modifier">,</mark> "-i=some/file"<mark class="modifier">,</mark> "-o=some/export/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java5 5(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java5 5(%Ø	
Horg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportShortOptions()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.java;	 ;(2"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">successfulParsingOfFileImportShortOptions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)successfulParsingOfFileImportShortOptions2k
(org.jabref.cli.JabRefCLI.getFileImport()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java>& >(32y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java< <(%2õ
Xorg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportShortOptions()?cli@60.18:60.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java>" >(%2¢
Xorg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportShortOptions()?cli@60.18:60.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java< <(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java; ;(ë
Xorg.jabref.cli.JabRefCLITest.successfulParsingOfFileImportShortOptions()?cli@60.18:60.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.java< <("
type	JabRefCLI"
isFinalfalse"Ì
declarationString◊<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-n"<mark class="modifier">,</mark> "-i=some/file"<mark class="modifier">,</mark> "-o=some/export/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java< <(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java< <(%Ø	
Horg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportShortOptions()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.javaB	 B(2"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">successfulParsingOfFileExportShortOptions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)successfulParsingOfFileExportShortOptions2k
(org.jabref.cli.JabRefCLI.getFileExport()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaE- E(:2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaC C(%2õ
Xorg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportShortOptions()?cli@67.18:67.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaE) E(,2¢
Xorg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportShortOptions()?cli@67.18:67.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaC C(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaB B(ë
Xorg.jabref.cli.JabRefCLITest.successfulParsingOfFileExportShortOptions()?cli@67.18:67.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaC C("
type	JabRefCLI"
isFinalfalse"Ì
declarationString◊<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-n"<mark class="modifier">,</mark> "-i=some/file"<mark class="modifier">,</mark> "-o=some/export/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaC C(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaC C(%æ	
7org.jabref.cli.JabRefCLITest.emptyPreferencesLeftOver()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.javaI	 I(!"
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">emptyPreferencesLeftOver</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*emptyPreferencesLeftOver2d
!java.util.Collections.emptyList()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaL! L(*2i
&org.jabref.cli.JabRefCLI.getLeftOver()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaL2 L(=2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaJ J(%2ä
Gorg.jabref.cli.JabRefCLITest.emptyPreferencesLeftOver()?cli@74.18:74.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaL. L(12ë
Gorg.jabref.cli.JabRefCLITest.emptyPreferencesLeftOver()?cli@74.18:74.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaJ J(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaI I(À
Gorg.jabref.cli.JabRefCLITest.emptyPreferencesLeftOver()?cli@74.18:74.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaJ J("
type	JabRefCLI"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-n"<mark class="modifier">,</mark> "-x=some/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaJ J(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaJ J(%˙
<org.jabref.cli.JabRefCLITest.successfulExportOfPreferences()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.javaP	 P(&"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">successfulExportOfPreferences</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*successfulExportOfPreferences2r
/org.jabref.cli.JabRefCLI.getPreferencesExport()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaS& S(:2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaQ Q(%2è
Lorg.jabref.cli.JabRefCLITest.successfulExportOfPreferences()?cli@81.18:81.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaS" S(%2ñ
Lorg.jabref.cli.JabRefCLITest.successfulExportOfPreferences()?cli@81.18:81.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaQ Q(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaP P(–
Lorg.jabref.cli.JabRefCLITest.successfulExportOfPreferences()?cli@81.18:81.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaQ Q("
type	JabRefCLI"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-n"<mark class="modifier">,</mark> "-x=some/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaQ Q(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaQ Q(%¸
>org.jabref.cli.JabRefCLITest.guiDisabledForPreferencesExport()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.javaW	 W(("
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">guiDisabledForPreferencesExport</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*guiDisabledForPreferencesExport2j
'org.jabref.cli.JabRefCLI.isDisableGui()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaZ Z(#2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaX X(%2ë
Norg.jabref.cli.JabRefCLITest.guiDisabledForPreferencesExport()?cli@88.18:88.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaZ Z(2ò
Norg.jabref.cli.JabRefCLITest.guiDisabledForPreferencesExport()?cli@88.18:88.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaX X(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaW W(“
Norg.jabref.cli.JabRefCLITest.guiDisabledForPreferencesExport()?cli@88.18:88.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaX X("
type	JabRefCLI"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-n"<mark class="modifier">,</mark> "-x=some/file" })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaX X(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaX X(%Û

Dorg.jabref.cli.JabRefCLITest.emptyLeftOversCLIShortImportingBibtex()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.java^	 ^(."
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">emptyLeftOversCLIShortImportingBibtex</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*%emptyLeftOversCLIShortImportingBibtex2d
!java.util.Collections.emptyList()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaa! a(*2i
&org.jabref.cli.JabRefCLI.getLeftOver()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaa2 a(=2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java_ _(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java_: _(@2ó
Torg.jabref.cli.JabRefCLITest.emptyLeftOversCLIShortImportingBibtex()?cli@95.18:95.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaa. a(12û
Torg.jabref.cli.JabRefCLITest.emptyLeftOversCLIShortImportingBibtex()?cli@95.18:95.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java_ _(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java^ ^(≈
Torg.jabref.cli.JabRefCLITest.emptyLeftOversCLIShortImportingBibtex()?cli@95.18:95.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.java_ _("
type	JabRefCLI"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-ib"<mark class="modifier">,</mark> bibtex })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java_ _(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java_ _(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java_: _(@‚	
:org.jabref.cli.JabRefCLITest.recognizesImportBibtexShort()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.javae	 e($"
isFinalfalse"à
declarationStringÚ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">recognizesImportBibtexShort</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*recognizesImportBibtexShort2l
)org.jabref.cli.JabRefCLI.isBibtexImport()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javah h(%2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaf f(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaf: f(@2è
Lorg.jabref.cli.JabRefCLITest.recognizesImportBibtexShort()?cli@102.18:102.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javah h(2ñ
Lorg.jabref.cli.JabRefCLITest.recognizesImportBibtexShort()?cli@102.18:102.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javaf f(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javae e(Ω
Lorg.jabref.cli.JabRefCLITest.recognizesImportBibtexShort()?cli@102.18:102.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaf f("
type	JabRefCLI"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-ib"<mark class="modifier">,</mark> bibtex })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaf f(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaf f(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javaf: f(@Ñ
Corg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportShort()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.javal	 l(-"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">successfulParsingOfBibtexImportShort</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$successfulParsingOfBibtexImportShort2m
*org.jabref.cli.JabRefCLI.getBibtexImport()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javao! o(02y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javam m(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javam: m(@2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javao o(2ò
Uorg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportShort()?cli@109.18:109.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javao o( 2ü
Uorg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportShort()?cli@109.18:109.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javam m(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javal l(∆
Uorg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportShort()?cli@109.18:109.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.javam m("
type	JabRefCLI"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-ib"<mark class="modifier">,</mark> bibtex })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javam m(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javam m(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javam: m(@Ú

Corg.jabref.cli.JabRefCLITest.emptyLeftOversCLILongImportingBibtex()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.javas	 s(-"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">emptyLeftOversCLILongImportingBibtex</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$emptyLeftOversCLILongImportingBibtex2d
!java.util.Collections.emptyList()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javav! v(*2i
&org.jabref.cli.JabRefCLI.getLeftOver()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javav2 v(=2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javat t(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javatD t(J2ò
Uorg.jabref.cli.JabRefCLITest.emptyLeftOversCLILongImportingBibtex()?cli@116.18:116.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javav. v(12ü
Uorg.jabref.cli.JabRefCLITest.emptyLeftOversCLILongImportingBibtex()?cli@116.18:116.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.javat t(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javas s(–
Uorg.jabref.cli.JabRefCLITest.emptyLeftOversCLILongImportingBibtex()?cli@116.18:116.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.javat t("
type	JabRefCLI"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-importBibtex"<mark class="modifier">,</mark> bibtex })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javat t(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javat t(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.javatD t(J›	
9org.jabref.cli.JabRefCLITest.recognizesImportBibtexLong()METHOD9
/src\test\java\org\jabref\cli\JabRefCLITest.javaz	 z(#"
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">recognizesImportBibtexLong</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*recognizesImportBibtexLong2l
)org.jabref.cli.JabRefCLI.isBibtexImport()CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java} }(%2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java{ {(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java{D {(J2é
Korg.jabref.cli.JabRefCLITest.recognizesImportBibtexLong()?cli@123.18:123.21CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java} }(2ï
Korg.jabref.cli.JabRefCLITest.recognizesImportBibtexLong()?cli@123.18:123.21DECLARATION9
/src\test\java\org\jabref\cli\JabRefCLITest.java{ {(2N
voidRETURN_TYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.javaz z(∆
Korg.jabref.cli.JabRefCLITest.recognizesImportBibtexLong()?cli@123.18:123.21VARIABLE9
/src\test\java\org\jabref\cli\JabRefCLITest.java{ {("
type	JabRefCLI"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-importBibtex"<mark class="modifier">,</mark> bibtex })*cli2[
org.jabref.cli.JabRefCLITYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java{ {(2y
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java{ {(%2r
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL9
/src\test\java\org\jabref\cli\JabRefCLITest.java{D {(Jè
Borg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportLong()METHOD;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÅ	 Å(,"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">successfulParsingOfBibtexImportLong</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*#successfulParsingOfBibtexImportLong2o
*org.jabref.cli.JabRefCLI.getBibtexImport()CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÑ! Ñ(02{
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÇ Ç(%2t
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÇD Ç(J2t
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÑ Ñ(2ô
Torg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportLong()?cli@130.18:130.21CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÑ Ñ( 2†
Torg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportLong()?cli@130.18:130.21DECLARATION;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÇ Ç(2P
voidRETURN_TYPE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÅ Å(◊
Torg.jabref.cli.JabRefCLITest.successfulParsingOfBibtexImportLong()?cli@130.18:130.21VARIABLE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÇ Ç("
type	JabRefCLI"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">cli</mark> = new JabRefCLI(new String[] { "-importBibtex"<mark class="modifier">,</mark> bibtex })*cli2]
org.jabref.cli.JabRefCLITYPE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÇ Ç(2{
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÇ Ç(%2t
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaÇD Ç(Jñ

-org.jabref.cli.JabRefCLITest.wrapStringList()METHOD;
/src\test\java\org\jabref\cli\JabRefCLITest.javaà	 à("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">wrapStringList</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*wrapStringList2\
java.util.List.of(E...)CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaâ" â($2ì
Norg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaëH ë(V2â
Dorg.jabref.cli.JabRefCLITest.wrapStringList()?expected@140.15:140.23CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaë ë(2Ü
Aorg.jabref.cli.JabRefCLITest.wrapStringList()?given@137.21:137.26CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaëW ë(\2ç
Aorg.jabref.cli.JabRefCLITest.wrapStringList()?given@137.21:137.26DECLARATION;
/src\test\java\org\jabref\cli\JabRefCLITest.javaâ â(2ê
Dorg.jabref.cli.JabRefCLITest.wrapStringList()?expected@140.15:140.23DECLARATION;
/src\test\java\org\jabref\cli\JabRefCLITest.javaå å(2P
voidRETURN_TYPE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaà à(î
Aorg.jabref.cli.JabRefCLITest.wrapStringList()?given@137.21:137.26VARIABLE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaâ â("
typeList<String>"
isFinalfalse"≈
declarationStringØ<mark class="modifier"> </mark>List<String> <mark class="class-field">given</mark> = List.of("html"<mark class="modifier">,</mark> "simplehtml"<mark class="modifier">,</mark> "docbook5"<mark class="modifier">,</mark> "docbook4"<mark class="modifier">,</mark> "din1505"<mark class="modifier">,</mark> "bibordf"<mark class="modifier">,</mark> "tablerefs"<mark class="modifier">,</mark> "listrefs"<mark class="modifier">,</mark> "tablerefsabsbib"<mark class="modifier">,</mark> "harvard"<mark class="modifier">,</mark> "iso690rtf"<mark class="modifier">,</mark> "iso690txt"<mark class="modifier">,</mark> "endnote"<mark class="modifier">,</mark> "oocsv"<mark class="modifier">,</mark> "ris"<mark class="modifier">,</mark> "misq"<mark class="modifier">,</mark> "yaml"<mark class="modifier">,</mark> "bibtexml"<mark class="modifier">,</mark> "oocalc"<mark class="modifier">,</mark> "ods"<mark class="modifier">,</mark> "MSBib"<mark class="modifier">,</mark> "mods"<mark class="modifier">,</mark> "xmp"<mark class="modifier">,</mark> "pdf"<mark class="modifier">,</mark> "bib")*given2S
java.util.ListTYPE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaâ â(2^
java.lang.StringTYPE_ARGUMENT;
/src\test\java\org\jabref\cli\JabRefCLITest.javaâ â(2\
java.util.List.of(E...)CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javaâ" â($˙
Dorg.jabref.cli.JabRefCLITest.wrapStringList()?expected@140.15:140.23VARIABLE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaå å("
typeString"
isFinalfalse"Á
declarationString—<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    Available export formats: html, simplehtml, docbook5, docbook4, din1505, bibordf, tablerefs,
    listrefs, tablerefsabsbib, harvard, iso690rtf, iso690txt, endnote, oocsv, ris, misq, yaml, bibtexml,
    oocalc, ods, MSBib, mods, xmp, pdf, bib"""*expected2U
java.lang.StringTYPE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaå å(À

/org.jabref.cli.JabRefCLITest.alignStringTable()METHOD;
/src\test\java\org\jabref\cli\JabRefCLITest.javaï	 ï("
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">alignStringTable</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*alignStringTable2b
java.util.List.of(E, E, E, E)CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javañ0 ñ(22¥
oorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.java£) £(92ã
Forg.jabref.cli.JabRefCLITest.alignStringTable()?expected@156.15:156.23CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.java£ £(2à
Corg.jabref.cli.JabRefCLITest.alignStringTable()?given@150.35:150.40CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.java£: £(?2è
Corg.jabref.cli.JabRefCLITest.alignStringTable()?given@150.35:150.40DECLARATION;
/src\test\java\org\jabref\cli\JabRefCLITest.javañ# ñ((2í
Forg.jabref.cli.JabRefCLITest.alignStringTable()?expected@156.15:156.23DECLARATION;
/src\test\java\org\jabref\cli\JabRefCLITest.javaú ú(2P
voidRETURN_TYPE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaï ï(Ò
Corg.jabref.cli.JabRefCLITest.alignStringTable()?given@150.35:150.40VARIABLE;
/src\test\java\org\jabref\cli\JabRefCLITest.javañ# ñ((""
typeList<Pair<String, String>>"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>List<Pair<String, String>> <mark class="class-field">given</mark> = List.of(new Pair<>("Apple"<mark class="modifier">,</mark> "Slice")<mark class="modifier">,</mark> new Pair<>("Bread"<mark class="modifier">,</mark> "Loaf")<mark class="modifier">,</mark> new Pair<>("Paper"<mark class="modifier">,</mark> "Sheet")<mark class="modifier">,</mark> new Pair<>("Country"<mark class="modifier">,</mark> "County"))*given2S
java.util.ListTYPE;
/src\test\java\org\jabref\cli\JabRefCLITest.javañ ñ(2^
javafx.util.PairTYPE_ARGUMENT;
/src\test\java\org\jabref\cli\JabRefCLITest.javañ ñ(2^
java.lang.StringTYPE_ARGUMENT;
/src\test\java\org\jabref\cli\JabRefCLITest.javañ ñ(2^
java.lang.StringTYPE_ARGUMENT;
/src\test\java\org\jabref\cli\JabRefCLITest.javañ ñ( 2b
java.util.List.of(E, E, E, E)CALL;
/src\test\java\org\jabref\cli\JabRefCLITest.javañ0 ñ(2›
Forg.jabref.cli.JabRefCLITest.alignStringTable()?expected@156.15:156.23VARIABLE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaú ú("
typeString"
isFinalfalse"»
declarationString≤<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    Apple   : Slice
    Bread   : Loaf
    Paper   : Sheet
    Country : County
    """*expected2U
java.lang.StringTYPE;
/src\test\java\org\jabref\cli\JabRefCLITest.javaú ú(“
/org.jabref.cli.JabRefCLITest?bibtex@14.25:14.31VALUE9
/src\test\java\org\jabref\cli\JabRefCLITest.java ("
isFinaltrue"
typeString"∏
declarationString¢<mark class="modifier">private </mark><mark class="modifier">final </mark>String <mark class="class-field">bibtex</mark> = "@article{test, title=\"test title\"}";"
isStaticfalse"
accessprivate*bibtex2S
java.lang.StringTYPE9
/src\test\java\org\jabref\cli\JabRefCLITest.java (