
3src\main\java\org\jabref\cli\ArgumentProcessor.javaô3
 org.jabref.cli.ArgumentProcessorCLASS=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaA A("
packageorg.jabref.cli"
isFinalfalse"
inner classfalse"

isAbstractfalse"o
declarationStringZ<mark class="modifier">public </mark><mark class="modifier">class </mark>ArgumentProcessor"
accesspublic*ArgumentProcessor2Ω
Óorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaU U(2ë
Corg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javah# h(32d
importBibtexToOpenBaseDECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javap# p(92ã
=org.jabref.cli.ArgumentProcessor.importFile(java.lang.String)DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.java}# }(-2°
Qorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£# £(-2É
3org.jabref.cli.ArgumentProcessor.processArguments()DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaæ æ( 2Ë
óorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java§ §(#2¿
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ Ê(+2∞
ﬂorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É(,2≤
·org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó(.2∂
forg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø ø(!2¥
dorg.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˙ ˙(2Ö
5org.jabref.cli.ArgumentProcessor.importAndOpenFiles()DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(12»
xorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java   (2∂
forg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚ ‚(2«
worg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸ ¸(2Ñ
4org.jabref.cli.ArgumentProcessor.importPreferences()DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java© ©("2ì
Corg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤(!2¬
rorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …(*2ø
oorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’ ’('2à
8org.jabref.cli.ArgumentProcessor.fetch(java.lang.String)DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ# Í((2Å
1org.jabref.cli.ArgumentProcessor.shouldShutDown()DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï ï(!2Ä
0org.jabref.cli.ArgumentProcessor.getUiCommands()DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaô ô((2Å
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaB  B(&2~
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaF F(2Ü
8org.jabref.cli.ArgumentProcessor?startupMode@72.23:72.34DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaH H("2ç
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaJ% J(72å
>org.jabref.cli.ArgumentProcessor?fileUpdateMonitor@75.36:75.53DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaK$ K(52å
>org.jabref.cli.ArgumentProcessor?entryTypesManager@76.39:76.56DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaL' L(82Ñ
6org.jabref.cli.ArgumentProcessor?guiNeeded@78.20:78.29DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaN N(2Ö
7org.jabref.cli.ArgumentProcessor?uiCommands@79.34:79.44DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaO" O(,2s
%org.jabref.cli.ArgumentProcessor.ModeDECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaD D(é(
Óorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)CONSTRUCTOR=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaU U("÷
declarationString¿<mark class="modifier">public </mark><mark class="method">ArgumentProcessor</mark>(String[] args<mark class="modifier"><mark class="modifier">,</mark></mark> Mode startupMode<mark class="modifier"><mark class="modifier">,</mark></mark> PreferencesService preferencesService<mark class="modifier"><mark class="modifier">,</mark></mark> FileUpdateMonitor fileUpdateMonitor<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntryTypesManager entryTypesManager)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>org.apache.commons.cli.ParseException*ArgumentProcessor2}
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java[ [( 2ª
Ûorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!argsCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java[! [(%2¬
˙org.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!startupModeCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java\ \(&2…
Åorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!preferencesServiceCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java]" ](42»
Äorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!fileUpdateMonitorCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java^! ^(22»
Äorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!entryTypesManagerCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java_! _(22w
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java[ [(2
8org.jabref.cli.ArgumentProcessor?startupMode@72.23:72.34CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java\ \(2Ü
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java] ](2Ö
>org.jabref.cli.ArgumentProcessor?fileUpdateMonitor@75.36:75.53CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java^ ^(2Ö
>org.jabref.cli.ArgumentProcessor?entryTypesManager@76.39:76.56CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java_ _(2¿
Ûorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!args	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaU& U(*2«
˙org.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!startupMode	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaV" V(-2Œ
Åorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!preferencesService	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaW0 W(B2Õ
Äorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!fileUpdateMonitor	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaX/ X(@2Õ
Äorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!entryTypesManager	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaY2 Y(C2n
 org.jabref.cli.ArgumentProcessorRETURN_TYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaZ* Z(8È
Ûorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!args	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaU& U(*"
typeString[]"
isFinalfalse""
declarationStringString[] args*args2Y
java.lang.String[]TYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaU U(%â
˙org.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!startupMode	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaV" V(-"
typeMode"
isFinalfalse"%
declarationStringMode startupMode*startupMode2l
%org.jabref.cli.ArgumentProcessor.ModeTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaV V(!æ
Åorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!preferencesService	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaW0 W(B"
typePreferencesService"
isFinalfalse":
declarationString%PreferencesService preferencesService*preferencesService2p
)org.jabref.preferences.PreferencesServiceTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaW W(/∑
Äorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!fileUpdateMonitor	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaX/ X(@"
typeFileUpdateMonitor"
isFinalfalse"8
declarationString#FileUpdateMonitor fileUpdateMonitor*fileUpdateMonitor2n
'org.jabref.model.util.FileUpdateMonitorTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaX X(.¡
Äorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)!entryTypesManager	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaY2 Y(C"
typeBibEntryTypesManager"
isFinalfalse";
declarationString&BibEntryTypesManager entryTypesManager*entryTypesManager2r
+org.jabref.model.entry.BibEntryTypesManagerTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaY Y(1∂
Corg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)METHOD=
3src\main\java\org\jabref\cli\ArgumentProcessor.javah# h(3"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier">private </mark>Optional&lt;ParserResult&gt; <mark class="method">importToOpenBase</mark>(String argument)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeOptional<ParserResult>*importToOpenBase2Ñ
=org.jabref.cli.ArgumentProcessor.importFile(java.lang.String)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javai( i(22ã
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javak k(2ì
Lorg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)!argumentCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javai3 i(;2ü
Xorg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)?result@105.31:105.37CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javak k(2ü
Xorg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)?result@105.31:105.37CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javam m(2|
5org.jabref.logic.importer.ParserResult.setToOpenTab()CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javak k(32ò
Lorg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)!argument	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javah; h(C2¶
Xorg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)?result@105.31:105.37DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javai i(%2`
java.util.OptionalRETURN_TYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javah h(2}
&org.jabref.logic.importer.ParserResultRETURN_TYPE_ARGUMENT=
3src\main\java\org\jabref\cli\ArgumentProcessor.javah h(!Ÿ
Xorg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)?result@105.31:105.37VARIABLE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javai i(%"
typeOptional<ParserResult>"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>Optional<ParserResult> <mark class="class-field">result</mark> = importFile(argument)*result2Y
java.util.OptionalTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javai i(2v
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT=
3src\main\java\org\jabref\cli\ArgumentProcessor.javai i(2Ñ
=org.jabref.cli.ArgumentProcessor.importFile(java.lang.String)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javai( i(22ì
Lorg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)!argumentCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javai3 i(;√
Lorg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)!argument	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javah; h(C"
typeString"
isFinalfalse"$
declarationStringString argument*argument2W
java.lang.StringTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javah4 h(:–
importBibtexToOpenBaseMETHOD=
3src\main\java\org\jabref\cli\ArgumentProcessor.javap# p(9"
isFinalfalse"â
declarationStringÛ<mark class="modifier">private </mark>Optional&lt;ParserResult&gt; <mark class="method">importBibtexToOpenBase</mark>(String argument<mark class="modifier"><mark class="modifier">,</mark></mark> ImportFormatPreferences importFormatPreferences)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeOptional<ParserResult>*importBibtexToOpenBase2Ü
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javas, s(82|
5org.jabref.logic.importer.ParserResult.setToOpenTab()CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javau u(2_
java.util.Optional.of(T)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javav v(2t
-java.io.PrintStream.println(java.lang.String)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javax x(2ï
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javax, x(02p
)java.lang.Throwable.getLocalizedMessage()CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaxa x(t2a
java.util.Optional.empty()CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javay y(!2±
jorg.jabref.logic.importer.ParserResult.ParserResult(java.util.Collection<org.jabref.model.entry.BibEntry>)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javat& t(22`
java.util.OptionalRETURN_TYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javap p(2}
&org.jabref.logic.importer.ParserResultRETURN_TYPE_ARGUMENT=
3src\main\java\org\jabref\cli\ArgumentProcessor.javap p(!ˇ
argument	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javapA p(I"
typeString"
isFinalfalse"$
declarationStringString argument*argument2W
java.lang.StringTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javap: p(@’
importFormatPreferences	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.javapc p(z"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2^
ImportFormatPreferencesTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javapK p(bë
eVARIABLE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaw  w(!"
typeParseException"
isFinalfalse"%
declarationStringParseException e*e2o
(org.jabref.logic.importer.ParseExceptionTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaw w(ﬁ@
=org.jabref.cli.ArgumentProcessor.importFile(java.lang.String)METHOD=
3src\main\java\org\jabref\cli\ArgumentProcessor.java}# }(-"
isFinalfalse"è
declarationStringz<mark class="modifier">private </mark>Optional&lt;ParserResult&gt; <mark class="method">importFile</mark>(String argument)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeOptional<ParserResult>*
importFile2o
(java.lang.String.split(java.lang.String)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java! (&2v
-java.lang.String.startsWith(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É(2v
-java.lang.String.startsWith(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ5 É(?2v
-java.lang.String.startsWith(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉW É(a2{
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ0 Ü(?2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaà à("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaà0 à(42r
)java.lang.Throwable.getLocalizedMessage()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaàa à(t2c
java.util.Optional.empty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaâ  â(%2Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(2Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(2ë
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè' è(.2w
.java.lang.System.getProperty(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè; è(F2ö
Qorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö. ö(82ç
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ õ(2}
4org.jabref.logic.importer.ParserResult.hasWarnings()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú ú("2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaù ù("2Å
8org.jabref.logic.importer.ParserResult.getErrorMessage()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaù* ù(92á
>org.jabref.logic.net.URLDownload.URLDownload(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ Ü(&2z
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java~ ~(2ç
Forg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)!argumentCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java~* ~(22ç
Forg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)!argumentCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java ( 2ô
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?data@127.17:127.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ Å(2ú
Sorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?address@129.15:129.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É(2ú
Sorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?address@129.15:129.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ- É(42ú
Sorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?address@129.15:129.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉO É(V2ô
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?file@130.13:130.17CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ Ü(2ú
Sorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?address@129.15:129.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ' Ü(.2ú
Sorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?address@129.15:129.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaàT à([2ñ
Morg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?e@135.33:135.34CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaà_ à(`2ô
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?file@130.13:130.17CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(2ú
Sorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?address@129.15:129.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(&2ô
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?file@130.13:130.17CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(2ú
Sorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?address@129.15:129.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(&2ô
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?data@127.17:127.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaî î(2°
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importFormat@147.15:147.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï ï(2ô
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?data@127.17:127.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï ï(2°
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importFormat@147.15:147.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó(2ô
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?file@130.13:130.17CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö9 ö(=2°
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importFormat@147.15:147.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö? ö(K2°
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importResult@154.31:154.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ õ(2õ
Rorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?result@155.31:155.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú ú(2õ
Rorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?result@155.31:155.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaù# ù()2°
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importResult@154.31:154.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java† †(2í
Forg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)!argument	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.java}5 }(=2û
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?data@127.17:127.21DECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.java (2£
Sorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?address@129.15:129.22DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ Å(2†
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?file@130.13:130.17DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÇ Ç(2®
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importFormat@147.15:147.27DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì ì(2®
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importResult@154.31:154.43DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö ö(+2ù
Morg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?e@135.33:135.34DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaá! á("2¢
Rorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?result@155.31:155.37DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ õ(%2`
java.util.OptionalRETURN_TYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.java} }(2}
&org.jabref.logic.importer.ParserResultRETURN_TYPE_ARGUMENT=
3src\main\java\org\jabref\cli\ArgumentProcessor.java} }(!π
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?data@127.17:127.21VARIABLE=
3src\main\java\org\jabref\cli\ArgumentProcessor.java ("
typeString"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>String[] <mark class="class-field">data</mark> = argument.split("<mark class="modifier">,</mark>")*data2Y
java.lang.String[]TYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.java (2o
(java.lang.String.split(java.lang.String)CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java! (&2ç
Forg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)!argumentCALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.java ( ±
Sorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?address@129.15:129.22VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ Å("
typeString"
isFinalfalse"m
declarationStringX<mark class="modifier"> </mark>String <mark class="class-field">address</mark> = data[0]*address2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ Å(2ô
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?data@127.17:127.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ Å(Ä
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?file@130.13:130.17VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÇ Ç("
typePath"
isFinalfalse"^
declarationStringI<mark class="modifier"> </mark>Path <mark class="class-field">file</mark>*file2[
java.nio.file.PathTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÇ Ç(ö
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importFormat@147.15:147.27VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì ì("
typeString"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>String <mark class="class-field">importFormat</mark>*importFormat2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì ì(∂
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importResult@154.31:154.43VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö ö(+"
typeOptional<ParserResult>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Optional<ParserResult> <mark class="class-field">importResult</mark> = importFile(file, importFormat)*importResult2[
java.util.OptionalTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö ö(2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö ö(2ö
Qorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö. ö(82ô
Porg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?file@130.13:130.17CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö9 ö(=2°
Xorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?importFormat@147.15:147.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö? ö(KΩ
Forg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)!argument	PARAMETER=
3src\main\java\org\jabref\cli\ArgumentProcessor.java}5 }(="
typeString"
isFinalfalse"$
declarationStringString argument*argument2W
java.lang.StringTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.java}. }(4∆
Morg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?e@135.33:135.34VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaá! á(""
typeIOException"
isFinalfalse""
declarationStringIOException e*e2\
java.io.IOExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaá á( Á
Rorg.jabref.cli.ArgumentProcessor.importFile(java.lang.String)?result@155.31:155.37VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ õ(%"
type"
isFinalfalse"
declarationString result*result2TYPE§3
Qorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£# £(-"
isFinalfalse"€
declarationString≈<mark class="modifier">private </mark>Optional&lt;ParserResult&gt; <mark class="method">importFile</mark>(Path file<mark class="modifier"><mark class="modifier">,</mark></mark> String importFormat)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeOptional<ParserResult>*
importFile2ã
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¶' ¶(=2è
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß' ß(A2r
)java.lang.String.equals(java.lang.Object)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java™ ™(2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´ ´("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´0 ´(42™
aorg.jabref.logic.importer.ImportFormatReader.importFromFile(java.lang.String, java.nio.file.Path)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨9 ¨(G2a
java.util.Optional.of(T)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠  ≠("2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∞ ∞("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∞0 ∞(42∆
}org.jabref.logic.importer.ImportFormatReader.importUnknownFormat(java.nio.file.Path, org.jabref.model.util.FileUpdateMonitor)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥+ ≥(>2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ π(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ, π(02
6org.jabref.logic.JabRefException.getLocalizedMessage()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ^ π(q2c
java.util.Optional.empty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∫ ∫(!2é
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥I ≥(_2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¶ ¶(&2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß ß(&2á
>org.jabref.cli.ArgumentProcessor?fileUpdateMonitor@75.36:75.53CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java® ®(%2ß
^org.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!importFormatCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java™ ™((2ü
Vorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!fileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´E ´(I2ª
rorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importFormatReader@165.31:165.49CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨& ¨(82ß
^org.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!importFormatCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨H ¨(T2ü
Vorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!fileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨V ¨(Z2Ø
forg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?result@172.29:172.35CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠# ≠()2ü
Vorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!fileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∞\ ∞(`2ª
rorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importFormatReader@165.31:165.49CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥ ≥(*2ü
Vorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!fileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥? ≥(C2µ
lorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importResult@178.55:178.67CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµH µ(T2µ
lorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importResult@178.55:178.67CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂# ∂(/2ü
Vorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!fileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπL π(P2´
borg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?ex@184.33:184.35CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ[ π(]2§
Vorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!file	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£3 £(72¨
^org.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!importFormat	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£@ £(L2¬
rorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importFormatReader@165.31:165.49DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java• •(12∂
forg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?result@172.29:172.35DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨ ¨(#2º
lorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importResult@178.55:178.67DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤7 ≤(C2≤
borg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?ex@184.33:184.35DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏! ∏(#2b
java.util.OptionalRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£ £(2
&org.jabref.logic.importer.ParserResultRETURN_TYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£ £(!¸

rorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importFormatReader@165.31:165.49VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java• •(1"
typeImportFormatReader"
isFinalfalse"¡
declarationString´<mark class="modifier"> </mark>ImportFormatReader <mark class="class-field">importFormatReader</mark> = new ImportFormatReader(preferencesService.getImporterPreferences()<mark class="modifier">,</mark> preferencesService.getImportFormatPreferences()<mark class="modifier">,</mark> fileUpdateMonitor)*importFormatReader2u
,org.jabref.logic.importer.ImportFormatReaderTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java• •(2ã
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¶' ¶(=2è
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß' ß(A2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¶ ¶(&2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß ß(&2á
>org.jabref.cli.ArgumentProcessor?fileUpdateMonitor@75.36:75.53CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java® ®(%Ø	
forg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?result@172.29:172.35VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨ ¨(#"
typeParserResult"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = importFormatReader.importFromFile(importFormat, file)*result2o
&org.jabref.logic.importer.ParserResultTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨ ¨(2™
aorg.jabref.logic.importer.ImportFormatReader.importFromFile(java.lang.String, java.nio.file.Path)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨9 ¨(G2ª
rorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importFormatReader@165.31:165.49CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨& ¨(82ß
^org.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!importFormatCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨H ¨(T2ü
Vorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!fileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨V ¨(Zç

lorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importResult@178.55:178.67VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤7 ≤(C".
type&ImportFormatReader.UnknownFormatImport"
isFinalfalse"÷
declarationString¿<mark class="modifier"> </mark>ImportFormatReader.UnknownFormatImport <mark class="class-field">importResult</mark> = importFormatReader.importUnknownFormat(file, new DummyFileUpdateMonitor())*importResult2o
&ImportFormatReader.UnknownFormatImportTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤# ≤(62∆
}org.jabref.logic.importer.ImportFormatReader.importUnknownFormat(java.nio.file.Path, org.jabref.model.util.FileUpdateMonitor)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥+ ≥(>2é
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥I ≥(_2ª
rorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?importFormatReader@165.31:165.49CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥ ≥(*2ü
Vorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!fileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥? ≥(C«
Vorg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!file	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£3 £(7"
typePath"
isFinalfalse"
declarationString	Path file*file2[
java.nio.file.PathTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£. £(2·
^org.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)!importFormat	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£@ £(L"
typeString"
isFinalfalse"(
declarationStringString importFormat*importFormat2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£9 £(?˚
borg.jabref.cli.ArgumentProcessor.importFile(java.nio.file.Path, java.lang.String)?ex@184.33:184.35VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏! ∏(#"
typeImportException"
isFinalfalse"'
declarationStringImportException ex*ex2r
)org.jabref.logic.importer.ImportExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏ ∏( ©ç
3org.jabref.cli.ArgumentProcessor.processArguments()METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaæ æ( "
isFinalfalse"ã
declarationStringv<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">processArguments</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*processArguments2q
(org.jabref.cli.JabRefCLI.isShowVersion()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡7 ¡(D2r
)org.jabref.cli.JabRefCLI.displayVersion()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¬ ¬(2j
!org.jabref.cli.JabRefCLI.isHelp()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈7 ≈(=2ó
Norg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∆ ∆( 2v
-org.jabref.cli.JabRefCLI.isPreferencesReset()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ("2å
Corg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaœ œ(2w
.org.jabref.cli.JabRefCLI.getPreferencesReset()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaœ! œ(42w
.org.jabref.cli.JabRefCLI.isPreferencesImport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java” ”(#2}
4org.jabref.cli.ArgumentProcessor.importPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘ ‘(2~
5org.jabref.cli.ArgumentProcessor.importAndOpenFiles()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊$ ◊(62k
"org.jabref.cli.JabRefCLI.isBlank()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŸ Ÿ(2s
*org.jabref.cli.JabRefCLI.isFetcherEngine()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŸ" Ÿ(12ç
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java⁄* ⁄(32Å
8org.jabref.cli.ArgumentProcessor.fetch(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java⁄ ⁄(2t
+org.jabref.cli.JabRefCLI.getFetcherEngine()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java⁄ ⁄(&2s
*org.jabref.cli.JabRefCLI.isExportMatches()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java› ›(2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬁ ﬁ(2Ø
forg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬂ ﬂ("2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java„ „("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java„0 „(42z
1org.jabref.cli.JabRefCLI.isGenerateCitationKeys()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ Á(&2∏
oorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË Ë("2
6org.jabref.cli.JabRefCLI.isAutomaticallySetFileLinks()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎ Î(+2ª
rorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏ Ï(%2s
*org.jabref.cli.JabRefCLI.isWriteXMPtoPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ Ô( 2x
/org.jabref.cli.JabRefCLI.isEmbeddBibfileInPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ* Ô(>2x
/org.jabref.cli.JabRefCLI.isWriteMetadatatoPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔJ Ô(^2s
*org.jabref.cli.JabRefCLI.isWriteXMPtoPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔi Ô(x2z
/org.jabref.cli.JabRefCLI.isEmbeddBibfileInPdf()CALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔÇ Ô(ñ2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java (2x
/org.jabref.cli.JabRefCLI.isWriteMetadatatoPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ Û($2s
*org.jabref.cli.JabRefCLI.isWriteXMPtoPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ. Û(=2x
/org.jabref.cli.JabRefCLI.isEmbeddBibfileInPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛG Û([2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÙ Ù(2·
óorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaı ı("2y
0org.jabref.cli.JabRefCLI.getWriteMetadatatoPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˆ ˆ(12Ü
=org.jabref.preferences.PreferencesService.getXmpPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜+ ˜(<2á
>org.jabref.preferences.PreferencesService.getFilePreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯+ ¯(=2é
Eorg.jabref.preferences.LibraryPreferences.getDefaultBibDatabaseMode()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘C ˘(\2ä
Aorg.jabref.preferences.PreferencesService.getLibraryPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘+ ˘(@2à
?org.jabref.preferences.PreferencesService.getFieldPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˚+ ˚(>2s
*org.jabref.cli.JabRefCLI.isWriteXMPtoPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˝ ˝(+2x
/org.jabref.cli.JabRefCLI.isWriteMetadatatoPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˝5 ˝(I2x
/org.jabref.cli.JabRefCLI.isEmbeddBibfileInPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛ ˛(02x
/org.jabref.cli.JabRefCLI.isWriteMetadatatoPdf()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛: ˛(N2p
'org.jabref.cli.JabRefCLI.isFileExport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÇ Ç(2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É(2¿
worg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ Ñ(2q
(java.lang.String.split(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ7 Ñ(<2q
(org.jabref.cli.JabRefCLI.getFileExport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ' Ñ(42v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaá á("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaá0 á(42w
.org.jabref.cli.JabRefCLI.isPreferencesExport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã(#2ò
Oorg.jabref.preferences.PreferencesService.exportPreferences(java.nio.file.Path)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç# ç(42Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç: ç(<2x
/org.jabref.cli.JabRefCLI.getPreferencesExport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaçA ç(U2k
"org.jabref.cli.JabRefCLI.isBlank()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì ì(2o
&org.jabref.cli.JabRefCLI.isAuxImport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì" ì(-2≠
dorg.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaî î(2k
"org.jabref.cli.JabRefCLI.isBlank()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó(2k
"org.jabref.cli.JabRefCLI.isBlank()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ õ(2o
&org.jabref.cli.JabRefCLI.isJumpToKey()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ" õ(-2p
'org.jabref.cli.JabRefCLI.getJumpToKey()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú< ú(H2k
"org.jabref.cli.JabRefCLI.isBlank()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü ü(2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü& ü(-2Ä
7org.jabref.cli.ArgumentProcessor?uiCommands@79.34:79.44CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø ø(2Å
8org.jabref.cli.ArgumentProcessor?startupMode@72.23:72.34CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡ ¡(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡3 ¡(62y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¬ ¬(2Å
8org.jabref.cli.ArgumentProcessor?startupMode@72.23:72.34CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈ ≈(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈3 ≈(62à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∆! ∆(32
6org.jabref.cli.ArgumentProcessor?guiNeeded@78.20:78.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java« «(2
6org.jabref.cli.ArgumentProcessor?guiNeeded@78.20:78.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ À(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaœ œ( 2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java” ”(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŸ Ÿ(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŸ Ÿ(!2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java⁄ ⁄(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java› ›(2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬁ ﬁ(2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬂ# ﬂ()2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ Á(2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË# Ë()2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎ Î(2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏ& Ï(,2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ Ô(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ& Ô()2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔF Ô(I2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔe Ô(h2z
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ~ Ô(Å2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ Û(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ* Û(-2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛC Û(F2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÙ Ù(2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaı# ı()2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˆ ˆ(2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜ ˜(*2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯ ¯(*2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘ ˘(*2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˚ ˚(*2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˝ ˝(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˝1 ˝(42y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛ ˛(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛6 ˛(92y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÇ Ç(2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É(2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ Ñ(!2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ# Ñ(&2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÖ Ö(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã(2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç("2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç= ç(@2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(2ç
Dorg.jabref.cli.ArgumentProcessor.processArguments()?ex@270.37:270.39CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè: è(<2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì ì(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì ì(!2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaî î(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó(2Ä
7org.jabref.cli.ArgumentProcessor?uiCommands@79.34:79.44CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaò ò(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ õ(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ õ(!2Ä
7org.jabref.cli.ArgumentProcessor?uiCommands@79.34:79.44CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú ú(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú8 ú(;2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü ü(2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü ü(%2Ä
7org.jabref.cli.ArgumentProcessor?uiCommands@79.34:79.44CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java† †(2ë
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java†7 †(=2|
3org.jabref.cli.ArgumentProcessor.Mode?INITIAL_STARTCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡! ¡(.2|
3org.jabref.cli.ArgumentProcessor.Mode?INITIAL_STARTCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈! ≈(.2^
java.util.List.add(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java⁄4 ⁄(?2ò
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊ ◊(!2î
Dorg.jabref.cli.ArgumentProcessor.processArguments()?ex@270.37:270.39DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé% é('2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaæ æ(¶
Horg.jabref.cli.ArgumentProcessor.processArguments()?loaded@215.27:215.33VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊ ◊(!"
typeList<ParserResult>"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>List<ParserResult> <mark class="class-field">loaded</mark> = importAndOpenFiles()*loaded2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊ ◊(2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊ ◊(2~
5org.jabref.cli.ArgumentProcessor.importAndOpenFiles()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊$ ◊(6‘
Dorg.jabref.cli.ArgumentProcessor.processArguments()?ex@270.37:270.39VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé% é('"
typeJabRefException"
isFinalfalse"'
declarationStringJabRefException ex*ex2i
 org.jabref.logic.JabRefExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é($≥ç
óorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java§ §(#"
isFinalfalse"ß
declarationStringë<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">writeMetadataToPdf</mark>(List&lt;ParserResult&gt; loaded<mark class="modifier"><mark class="modifier">,</mark></mark> String filesAndCitekeys<mark class="modifier"><mark class="modifier">,</mark></mark> XmpPreferences xmpPreferences<mark class="modifier"><mark class="modifier">,</mark></mark> FilePreferences filePreferences<mark class="modifier"><mark class="modifier">,</mark></mark> BibDatabaseMode databaseMode<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntryTypesManager entryTypesManager<mark class="modifier"><mark class="modifier">,</mark></mark> FieldPreferences fieldPreferences<mark class="modifier"><mark class="modifier">,</mark></mark> JournalAbbreviationRepository abbreviationRepository<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> writeXMP<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> embeddBibfile)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*writeMetadataToPdf2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆ Æ(2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥0 ≥(B2r
)java.lang.String.equals(java.lang.Object)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏ ∏(2Ç
9org.jabref.model.database.BibDatabaseContext.getEntries()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ2 π(<2π
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∫ ∫(*2e
java.util.Optional.orElse(T)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaº/ º(52y
0org.jabref.model.entry.BibEntry.getCitationKey()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaº º(,2q
(java.lang.String.split(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java 5  (:2t
+java.lang.String.endsWith(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ7 À(?2w
.java.lang.String.toLowerCase(java.util.Locale)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ À()2^
java.util.List.add(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã(2^
java.util.List.add(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ(2©
ﬂorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java“ “(#2´
·org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java€ €(%2•
\org.jabref.logic.exporter.XmpPdfExporter.XmpPdfExporter(org.jabref.logic.xmp.XmpPreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ, µ(:2õ
—org.jabref.logic.exporter.EmbeddedBibFilePdfExporter.EmbeddedBibFilePdfExporter(org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂D ∂(^2h
java.util.ArrayList.ArrayList()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java»$ »(/2h
java.util.ArrayList.ArrayList()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…  …(+2Ë
ûorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆ Æ(2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaØ Ø(2Ë
ûorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤( 2Ú
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?pr@306.21:306.23CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥- ≥(/2
¶org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ; µ(I2Ó
§org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseModeCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂_ ∂(k2Û
©org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entryTypesManagerCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂m ∂(~2Ù
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!fieldPreferencesCALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂Ä ∂(ê2Ú
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filesAndCitekeysCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏ ∏()2ˇ
µorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?databaseContext@307.27:307.42CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ" π(12ˇ
µorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?databaseContext@307.27:307.42CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaª ª('2ı
´org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?entry@313.26:313.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaº º(2ı
´org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?entry@313.26:313.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaΩ Ω(2Ò
ßorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaæ æ('2˛
¥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?xmpPdfExporter@309.23:309.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø ø(&2ä
¿org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?embeddedBibFilePdfExporter@310.35:310.61CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿(22¯
Æorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepositoryCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡ ¡(.2Í
†org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMPCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¬ ¬( 2Ô
•org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √(%2Ú
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filesAndCitekeysCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java $  (42˝
≥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileOrCiteKey@330.20:330.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ À(2Ù
™org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?pdfs@329.21:329.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã(2˝
≥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileOrCiteKey@330.20:330.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã(&2¯
Æorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKeys@328.21:328.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ(2˝
≥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileOrCiteKey@330.20:330.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ(*2ˇ
µorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?databaseContext@307.27:307.42CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java” ”(2¯
Æorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKeys@328.21:328.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘ ‘(2Ò
ßorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’ ’(2˛
¥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?xmpPdfExporter@309.23:309.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java÷ ÷(2ä
¿org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?embeddedBibFilePdfExporter@310.35:310.61CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊ ◊(*2¯
Æorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepositoryCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÿ ÿ(&2Í
†org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMPCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŸ Ÿ(2Ô
•org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java⁄ ⁄(2ˇ
µorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?databaseContext@307.27:307.42CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‹ ‹(2Ù
™org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?pdfs@329.21:329.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java› ›(2Ò
ßorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬁ ﬁ(2˛
¥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?xmpPdfExporter@309.23:309.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬂ ﬂ(2ä
¿org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?embeddedBibFilePdfExporter@310.35:310.61CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‡ ‡(*2¯
Æorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepositoryCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java· ·(&2Í
†org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMPCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚ ‚(2Ô
•org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java„ „(2Ì
ûorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java§7 §(=2˜
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filesAndCitekeys	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java•+ •(;2ı
¶org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¶3 ¶(A2ˆ
ßorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß4 ß(C2Û
§org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseMode	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java®4 ®(@2¯
©org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entryTypesManager	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java©9 ©(J2˜
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!fieldPreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java™5 ™(E2˝
Æorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepository	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´B ´(X2Ô
†org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMP	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨, ¨(42Ù
•org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfile	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠, ≠(92˘
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?pr@306.21:306.23DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤(2Ü
µorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?databaseContext@307.27:307.42DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥ ≥(*2Ö
¥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?xmpPdfExporter@309.23:309.37DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ µ(%2ë
¿org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?embeddedBibFilePdfExporter@310.35:310.61DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂# ∂(=2¸
´org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?entry@313.26:313.31DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ π(2ˇ
Æorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKeys@328.21:328.29DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java» »(2˚
™org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?pdfs@329.21:329.25DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …(2Ñ
≥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileOrCiteKey@330.20:330.33DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java   (!2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java§ §(˜	
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?pr@306.21:306.23VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤("
typeParserResult"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>ParserResult <mark class="class-field">pr</mark> = loaded.getLast()*pr2o
&org.jabref.logic.importer.ParserResultTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤(2Ë
ûorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤( …
µorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?databaseContext@307.27:307.42VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥ ≥(*"
typeBibDatabaseContext"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">databaseContext</mark> = pr.getDatabaseContext()*databaseContext2u
,org.jabref.model.database.BibDatabaseContextTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥ ≥(2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥0 ≥(B2Ú
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?pr@306.21:306.23CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥- ≥(/Â
¥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?xmpPdfExporter@309.23:309.37VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ µ(%"
typeXmpPdfExporter"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>XmpPdfExporter <mark class="class-field">xmpPdfExporter</mark> = new XmpPdfExporter(xmpPreferences)*xmpPdfExporter2q
(org.jabref.logic.exporter.XmpPdfExporterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ µ(2•
\org.jabref.logic.exporter.XmpPdfExporter.XmpPdfExporter(org.jabref.logic.xmp.XmpPreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ, µ(:2
¶org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ; µ(IΩ
¿org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?embeddedBibFilePdfExporter@310.35:310.61VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂# ∂(=""
typeEmbeddedBibFilePdfExporter"
isFinalfalse"ﬂ
declarationString…<mark class="modifier"> </mark>EmbeddedBibFilePdfExporter <mark class="class-field">embeddedBibFilePdfExporter</mark> = new EmbeddedBibFilePdfExporter(databaseMode, entryTypesManager, fieldPreferences)*embeddedBibFilePdfExporter2}
4org.jabref.logic.exporter.EmbeddedBibFilePdfExporterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂ ∂("2õ
—org.jabref.logic.exporter.EmbeddedBibFilePdfExporter.EmbeddedBibFilePdfExporter(org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂D ∂(^2Ó
§org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseModeCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂_ ∂(k2Û
©org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entryTypesManagerCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂m ∂(~2Ù
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!fieldPreferencesCALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂Ä ∂(êÛ
´org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?entry@313.26:313.31VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ π("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2h
org.jabref.model.entry.BibEntryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ π(’
Æorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKeys@328.21:328.29VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java» »("
typeList<String>"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>List<String> <mark class="class-field">citeKeys</mark> = new ArrayList<>()*citeKeys2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java» »(2b
java.lang.StringTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java» »(2h
java.util.ArrayList.ArrayList()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java»$ »(/…
™org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?pdfs@329.21:329.25VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …("
typeList<String>"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>List<String> <mark class="class-field">pdfs</mark> = new ArrayList<>()*pdfs2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …(2b
java.lang.StringTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …(2h
java.util.ArrayList.ArrayList()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…  …(+¯
≥org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileOrCiteKey@330.20:330.33VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java   (!"
typeString"
isFinalfalse"i
declarationStringT<mark class="modifier"> </mark>String <mark class="class-field">fileOrCiteKey</mark>*fileOrCiteKey2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java   (¶
ûorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java§7 §(="
typeList<ParserResult>"
isFinalfalse".
declarationStringList<ParserResult> loaded*loaded2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java§$ §((2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java§) §(5¥
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filesAndCitekeys	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java•+ •(;"
typeString"
isFinalfalse",
declarationStringString filesAndCitekeys*filesAndCitekeys2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java•$ •(*—
¶org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¶3 ¶(A"
typeXmpPreferences"
isFinalfalse"2
declarationStringXmpPreferences xmpPreferences*xmpPreferences2l
#org.jabref.logic.xmp.XmpPreferencesTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¶$ ¶(2Ÿ
ßorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß4 ß(C"
typeFilePreferences"
isFinalfalse"4
declarationStringFilePreferences filePreferences*filePreferences2o
&org.jabref.preferences.FilePreferencesTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß$ ß(3”
§org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseMode	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java®4 ®(@"
typeBibDatabaseMode"
isFinalfalse"1
declarationStringBibDatabaseMode databaseMode*databaseMode2r
)org.jabref.model.database.BibDatabaseModeTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java®$ ®(3Ó
©org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entryTypesManager	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java©9 ©(J"
typeBibEntryTypesManager"
isFinalfalse";
declarationString&BibEntryTypesManager entryTypesManager*entryTypesManager2t
+org.jabref.model.entry.BibEntryTypesManagerTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java©$ ©(8‡
®org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!fieldPreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java™5 ™(E"
typeFieldPreferences"
isFinalfalse"6
declarationString!FieldPreferences fieldPreferences*fieldPreferences2q
(org.jabref.logic.bibtex.FieldPreferencesTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java™$ ™(4ú
Æorg.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepository	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´B ´(X"%
typeJournalAbbreviationRepository"
isFinalfalse"I
declarationString4JournalAbbreviationRepository abbreviationRepository*abbreviationRepository2Ä
7org.jabref.logic.journals.JournalAbbreviationRepositoryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´$ ´(A≥
†org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMP	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨, ¨(4"
typeboolean"
isFinalfalse"C
declarationString.<mark class="modifier">boolean</mark> writeXMP*writeXMP2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨$ ¨(+¬
•org.jabref.cli.ArgumentProcessor.writeMetadataToPdf(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String, org.jabref.logic.xmp.XmpPreferences, org.jabref.preferences.FilePreferences, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntryTypesManager, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfile	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠, ≠(9"
typeboolean"
isFinalfalse"H
declarationString3<mark class="modifier">boolean</mark> embeddBibfile*embeddBibfile2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠$ ≠(+¢Å
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ Ê(+"
isFinalfalse"À
declarationStringµ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">writeMetadataToPDFsOfEntry</mark>(BibDatabaseContext databaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> String citeKey<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> FilePreferences filePreferences<mark class="modifier"><mark class="modifier">,</mark></mark> XmpPdfExporter xmpPdfExporter<mark class="modifier"><mark class="modifier">,</mark></mark> EmbeddedBibFilePdfExporter embeddedBibFilePdfExporter<mark class="modifier"><mark class="modifier">,</mark></mark> JournalAbbreviationRepository abbreviationRepository<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> writeXMP<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> embeddBibfile)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*writeMetadataToPDFsOfEntry2Â
õorg.jabref.logic.exporter.Exporter.exportToAllFilesOfEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.model.entry.BibEntry, java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.logic.journals.JournalAbbreviationRepository)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ# Ò(:2]
java.util.List.of(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒi Ò(k2ä
Ajava.io.PrintStream.printf(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÚ Ú(%2ä
Ajava.io.PrintStream.printf(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÙ Ù(%2Â
õorg.jabref.logic.exporter.Exporter.exportToAllFilesOfEntry(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.model.entry.BibEntry, java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.logic.journals.JournalAbbreviationRepository)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯/ ¯(F2]
java.util.List.of(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯u ¯(w2ä
Ajava.io.PrintStream.printf(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘ ˘(%2ä
Ajava.io.PrintStream.printf(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˚ ˚(%2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMPCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java (2»
˛org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPdfExporterCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ Ò("2…
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContextCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ; Ò(J2…
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒL Ò([2ø
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entryCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ] Ò(b2ø
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entryCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒl Ò(q2—
Üorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepositoryCALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒt Ò(ä2¡
˜org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKeyCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÚo Ú(v2√
˜org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKeyCALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÙ• Ù(¨2«
˝org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜ ˜(2‘
äorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddedBibFilePdfExporterCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯ ¯(.2…
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContextCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯G ¯(V2…
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯X ¯(g2ø
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entryCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯i ¯(n2ø
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entryCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯x ¯(}2“
Üorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepositoryCALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯Ä ¯(ñ2¡
˜org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKeyCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘l ˘(s2√
˜org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKeyCALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java˚¢ ˚(©2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˇ ˇ(2¡
˜org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKeyCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˇL ˇ(S2Œ
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContext	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ? Ê(N2∆
˜org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKey	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ3 Á(:2ƒ
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entry	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË5 Ë(:2Œ
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ< È(K2Õ
˛org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ; Í(I2Ÿ
äorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddedBibFilePdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎG Î(a2’
Üorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepository	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏJ Ï(`2«
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMP	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ4 Ì(<2Ã
˝org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfile	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ4 Ó(A2–
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?e@382.27:382.28DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛ ˛(2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ Ê(Ω
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContext	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ? Ê(N"
typeBibDatabaseContext"
isFinalfalse"7
declarationString"BibDatabaseContext databaseContext*databaseContext2u
,org.jabref.model.database.BibDatabaseContextTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ, Ê(>Ò
˜org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKey	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ3 Á(:"
typeString"
isFinalfalse"#
declarationStringString citeKey*citeKey2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ, Á(2˛
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!entry	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË5 Ë(:"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2h
org.jabref.model.entry.BibEntryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË, Ë(4±
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ< È(K"
typeFilePreferences"
isFinalfalse"4
declarationStringFilePreferences filePreferences*filePreferences2o
&org.jabref.preferences.FilePreferencesTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ, È(;Æ
˛org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ; Í(I"
typeXmpPdfExporter"
isFinalfalse"2
declarationStringXmpPdfExporter xmpPdfExporter*xmpPdfExporter2q
(org.jabref.logic.exporter.XmpPdfExporterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ, Í(:ˆ
äorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddedBibFilePdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎG Î(a""
typeEmbeddedBibFilePdfExporter"
isFinalfalse"J
declarationString5EmbeddedBibFilePdfExporter embeddedBibFilePdfExporter*embeddedBibFilePdfExporter2}
4org.jabref.logic.exporter.EmbeddedBibFilePdfExporterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎ, Î(FÙ
Üorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepository	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏJ Ï(`"%
typeJournalAbbreviationRepository"
isFinalfalse"I
declarationString4JournalAbbreviationRepository abbreviationRepository*abbreviationRepository2Ä
7org.jabref.logic.journals.JournalAbbreviationRepositoryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏ, Ï(Iã
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMP	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ4 Ì(<"
typeboolean"
isFinalfalse"C
declarationString.<mark class="modifier">boolean</mark> writeXMP*writeXMP2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ, Ì(3ö
˝org.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfile	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ4 Ó(A"
typeboolean"
isFinalfalse"H
declarationString3<mark class="modifier">boolean</mark> embeddBibfile*embeddBibfile2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ, Ó(3ı
ˇorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?e@382.27:382.28VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛ ˛("
type	Exception"
isFinalfalse" 
declarationStringException e*e2\
java.lang.ExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛ ˛(ın
ﬂorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É(,"
isFinalfalse"ç
declarationString˜<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">writeMetadataToPdfByCitekey</mark>(BibDatabaseContext databaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; citeKeys<mark class="modifier"><mark class="modifier">,</mark></mark> FilePreferences filePreferences<mark class="modifier"><mark class="modifier">,</mark></mark> XmpPdfExporter xmpPdfExporter<mark class="modifier"><mark class="modifier">,</mark></mark> EmbeddedBibFilePdfExporter embeddedBibFilePdfExporter<mark class="modifier"><mark class="modifier">,</mark></mark> JournalAbbreviationRepository abbreviationRepository<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> writeXMP<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> embeddBibfile)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*writeMetadataToPdfByCitekey2ò
Oorg.jabref.model.database.BibDatabase.getEntriesByCitationKey(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaåH å(_2É
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå: å(E2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç($2ä
Ajava.io.PrintStream.printf(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é(!2π
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPDFsOfEntry(org.jabref.model.database.BibDatabaseContext, java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaí í(*2≤
Ëorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKeysCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã(&2π
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContextCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå* å(92ø
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKey@395.20:395.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå` å(g2ƒ
˙org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?bibEntryList@396.27:396.39CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(2ø
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKey@395.20:395.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaéL é(S2ƒ
˙org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?bibEntryList@396.27:396.39CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë" ë(.2π
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContextCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaí+ í(:2ø
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKey@395.20:395.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaí< í(C2Ω
Ûorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?entry@401.26:401.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaíE í(J2π
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaíL í([2∏
Óorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPdfExporterCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaí] í(k2≈
˙org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddedBibFilePdfExporterCALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.javaím í(á2¬
ˆorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepositoryCALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.javaíâ í(ü2¥
Ëorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMPCALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.javaí° í(©2π
Ìorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfileCALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.javaí´ í(∏2æ
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContext	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ@ É(O2∑
Ëorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKeys	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ: Ñ(B2æ
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÖ= Ö(L2Ω
Óorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ< Ü(J2…
˙org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddedBibFilePdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaáH á(b2≈
ˆorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepository	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaàK à(a2∑
Ëorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMP	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaâ5 â(=2º
Ìorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfile	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaä5 ä(B2∆
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKey@395.20:395.27DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã(2À
˙org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?bibEntryList@396.27:396.39DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå å('2ƒ
Ûorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?entry@401.26:401.31DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë ë(2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É(Æ
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKey@395.20:395.27VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã("
typeString"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>String <mark class="class-field">citeKey</mark>*citeKey2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã(†
˙org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?bibEntryList@396.27:396.39VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå å('"
typeList<BibEntry>"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntryList</mark> = databaseContext.getDatabase().getEntriesByCitationKey(citeKey)*bibEntryList2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå å(2q
org.jabref.model.entry.BibEntryTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå å(2ò
Oorg.jabref.model.database.BibDatabase.getEntriesByCitationKey(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaåH å(_2É
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå: å(E2π
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContextCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå* å(92ø
ıorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?citeKey@395.20:395.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå` å(gª
Ûorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?entry@401.26:401.31VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë ë("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2h
org.jabref.model.entry.BibEntryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë ë(≠
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContext	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ@ É(O"
typeBibDatabaseContext"
isFinalfalse"7
declarationString"BibDatabaseContext databaseContext*databaseContext2u
,org.jabref.model.database.BibDatabaseContextTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ- É(?“
Ëorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!citeKeys	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ: Ñ(B"
typeList<String>"
isFinalfalse"*
declarationStringList<String> citeKeys*citeKeys2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ- Ñ(12b
java.lang.StringTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ2 Ñ(8°
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÖ= Ö(L"
typeFilePreferences"
isFinalfalse"4
declarationStringFilePreferences filePreferences*filePreferences2o
&org.jabref.preferences.FilePreferencesTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÖ- Ö(<û
Óorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ< Ü(J"
typeXmpPdfExporter"
isFinalfalse"2
declarationStringXmpPdfExporter xmpPdfExporter*xmpPdfExporter2q
(org.jabref.logic.exporter.XmpPdfExporterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ- Ü(;Ê
˙org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddedBibFilePdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaáH á(b""
typeEmbeddedBibFilePdfExporter"
isFinalfalse"J
declarationString5EmbeddedBibFilePdfExporter embeddedBibFilePdfExporter*embeddedBibFilePdfExporter2}
4org.jabref.logic.exporter.EmbeddedBibFilePdfExporterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaá- á(G‰
ˆorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepository	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaàK à(a"%
typeJournalAbbreviationRepository"
isFinalfalse"I
declarationString4JournalAbbreviationRepository abbreviationRepository*abbreviationRepository2Ä
7org.jabref.logic.journals.JournalAbbreviationRepositoryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaà- à(J˚
Ëorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMP	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaâ5 â(="
typeboolean"
isFinalfalse"C
declarationString.<mark class="modifier">boolean</mark> writeXMP*writeXMP2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaâ- â(4ä
Ìorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByCitekey(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfile	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaä5 ä(B"
typeboolean"
isFinalfalse"H
declarationString3<mark class="modifier">boolean</mark> embeddBibfile*embeddBibfile2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaä- ä(4≥
·org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó(."
isFinalfalse"ã
declarationStringı<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">writeMetadataToPdfByFileNames</mark>(BibDatabaseContext databaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; pdfs<mark class="modifier"><mark class="modifier">,</mark></mark> FilePreferences filePreferences<mark class="modifier"><mark class="modifier">,</mark></mark> XmpPdfExporter xmpPdfExporter<mark class="modifier"><mark class="modifier">,</mark></mark> EmbeddedBibFilePdfExporter embeddedBibFilePdfExporter<mark class="modifier"><mark class="modifier">,</mark></mark> JournalAbbreviationRepository abbreviationRepository<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> writeXMP<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> embeddBibfile)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*writeMetadataToPdfByFileNames2Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java†! †(#2h
java.nio.file.Path.isAbsolute()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java° °($2e
java.util.Optional.orElse(T)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢h ¢(n2•
\org.jabref.logic.util.io.FileUtil.find(java.lang.String, java.util.List<java.nio.file.Path>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢$ ¢((2∞
gorg.jabref.model.database.BibDatabaseContext.getFileDirectories(org.jabref.preferences.FilePreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢C ¢(U2g
java.util.Optional.orElse(T)CALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢Æ ¢(¥2•
\org.jabref.logic.util.io.FileUtil.find(java.lang.String, java.util.List<java.nio.file.Path>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢x ¢(|2_
java.util.List.of(E)CALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢å ¢(é2n
#java.nio.file.Path.toAbsolutePath()CALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢õ ¢(©2á
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢î ¢(ñ2î
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java§ §(2¢
ÿorg.jabref.logic.exporter.Exporter.exportToFileByPath(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, java.nio.file.Path, org.jabref.logic.journals.JournalAbbreviationRepository)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß+ ß(=2ä
Ajava.io.PrintStream.printf(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java®' ®(-2ä
Ajava.io.PrintStream.printf(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java™' ™(-2¢
ÿorg.jabref.logic.exporter.Exporter.exportToFileByPath(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, java.nio.file.Path, org.jabref.logic.journals.JournalAbbreviationRepository)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆ7 Æ(I2ä
Ajava.io.PrintStream.printf(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaØ' Ø(-2ä
Ajava.io.PrintStream.printf(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java±' ±(-2∞
Êorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!pdfsCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü ü(#2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java†$ †(,2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?filePath@416.17:416.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java° °(2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?filePath@416.17:416.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢ ¢(2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢) ¢(12ª
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContextCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢3 ¢(B2ª
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢V ¢(e2√
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢} ¢(Ö2ƒ
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?filePath@416.17:416.25CALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢µ ¢(Ω2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?filePath@416.17:416.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java§ §(%2¥
Íorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMPCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¶ ¶( 2∫
org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPdfExporterCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß ß(*2ª
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContextCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß> ß(M2ª
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaßO ß(^2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?filePath@416.17:416.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaß` ß(h2√
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepositoryCALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.javaßj ß(Ä2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java®q ®(y2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java™c ™(k2π
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfileCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠ ≠(%2∆
¸org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddedBibFilePdfExporterCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆ Æ(62ª
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContextCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆJ Æ(Y2ª
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferencesCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆ[ Æ(j2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?filePath@416.17:416.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆl Æ(t2√
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepositoryCALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆv Æ(å2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaØr Ø(z2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java±c ±(k2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ µ(2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ? µ(G2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∑ ∑(2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∑? ∑(G2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∫ ∫(2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∫@ ∫(H2¿
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContext	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaóB ó(Q2µ
Êorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!pdfs	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaò< ò(@2¿
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaô? ô(N2ø
org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö> ö(L2À
¸org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddedBibFilePdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõJ õ(d2«
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepository	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaúM ú(c2π
Íorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMP	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaù7 ù(?2æ
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfile	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaû7 û(D2…
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü ü(2…
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?filePath@416.17:416.25DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java† †(2¬
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?e@436.37:436.38DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¥% ¥(&2¬
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?e@438.35:438.36DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂# ∂($2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó(≥
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü ü("
typeString"
isFinalfalse"d
declarationStringO<mark class="modifier"> </mark>String <mark class="class-field">fileName</mark>*fileName2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü ü(í

¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?filePath@416.17:416.25VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java† †("
typePath"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>Path <mark class="class-field">filePath</mark> = Path.of(fileName)*filePath2[
java.nio.file.PathTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java† †(2Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java†! †(#2¬
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?fileName@415.20:415.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java†$ †(,Ø
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!databaseContext	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaóB ó(Q"
typeBibDatabaseContext"
isFinalfalse"7
declarationString"BibDatabaseContext databaseContext*databaseContext2u
,org.jabref.model.database.BibDatabaseContextTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó/ ó(A»
Êorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!pdfs	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaò< ò(@"
typeList<String>"
isFinalfalse"&
declarationStringList<String> pdfs*pdfs2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaò/ ò(32b
java.lang.StringTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaò4 ò(:£
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!filePreferences	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaô? ô(N"
typeFilePreferences"
isFinalfalse"4
declarationStringFilePreferences filePreferences*filePreferences2o
&org.jabref.preferences.FilePreferencesTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaô/ ô(>†
org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!xmpPdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö> ö(L"
typeXmpPdfExporter"
isFinalfalse"2
declarationStringXmpPdfExporter xmpPdfExporter*xmpPdfExporter2q
(org.jabref.logic.exporter.XmpPdfExporterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö/ ö(=Ë
¸org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddedBibFilePdfExporter	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõJ õ(d""
typeEmbeddedBibFilePdfExporter"
isFinalfalse"J
declarationString5EmbeddedBibFilePdfExporter embeddedBibFilePdfExporter*embeddedBibFilePdfExporter2}
4org.jabref.logic.exporter.EmbeddedBibFilePdfExporterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ/ õ(IÊ
¯org.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!abbreviationRepository	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaúM ú(c"%
typeJournalAbbreviationRepository"
isFinalfalse"I
declarationString4JournalAbbreviationRepository abbreviationRepository*abbreviationRepository2Ä
7org.jabref.logic.journals.JournalAbbreviationRepositoryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú/ ú(L˝
Íorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!writeXMP	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaù7 ù(?"
typeboolean"
isFinalfalse"C
declarationString.<mark class="modifier">boolean</mark> writeXMP*writeXMP2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaù/ ù(6å
Ôorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)!embeddBibfile	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaû7 û(D"
typeboolean"
isFinalfalse"H
declarationString3<mark class="modifier">boolean</mark> embeddBibfile*embeddBibfile2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaû/ û(6Î
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?e@436.37:436.38VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¥% ¥(&"
typeIOException"
isFinalfalse""
declarationStringIOException e*e2\
java.io.IOExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¥ ¥($Á
Òorg.jabref.cli.ArgumentProcessor.writeMetadataToPdfByFileNames(org.jabref.model.database.BibDatabaseContext, java.util.List<java.lang.String>, org.jabref.preferences.FilePreferences, org.jabref.logic.exporter.XmpPdfExporter, org.jabref.logic.exporter.EmbeddedBibFilePdfExporter, org.jabref.logic.journals.JournalAbbreviationRepository, boolean, boolean)?e@438.35:438.36VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂# ∂($"
type	Exception"
isFinalfalse" 
declarationStringException e*e2\
java.lang.ExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂ ∂("˜n
forg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø ø(!"
isFinalfalse"¨
declarationStringñ<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">exportMatches</mark>(List&lt;ParserResult&gt; loaded)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*exportMatches2q
(java.lang.String.split(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿/ ¿(42t
+org.jabref.cli.JabRefCLI.getExportMatches()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿(,2ë
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡$ ¡(+2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ0 ƒ(B2}
4org.jabref.logic.importer.ParserResult.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈" ≈(-2â
@org.jabref.preferences.PreferencesService.getSearchPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java«A «(U2Ç
9org.jabref.preferences.SearchPreferences.getSearchFlags()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java»J »(X2~
5org.jabref.logic.search.DatabaseSearcher.getMatches()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…G …(Q2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã(2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java÷ ÷(&2r
)java.lang.String.concat(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊W ◊(]2r
)java.lang.String.concat(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊4 ◊(:2r
)java.lang.String.concat(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java÷P ÷(V2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java÷4 ÷(82ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊H ◊(L2{
1org.jabref.cli.JabRefCLI.getExportMatchesSyntax()CALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊p ◊(Ü2r
)java.lang.String.equals(java.lang.Object)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java› ›(2Ø
forg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‡ ‡(2“
àorg.jabref.logic.exporter.ExporterFactory.create(org.jabref.preferences.PreferencesService, org.jabref.model.entry.BibEntryTypesManager)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‰B ‰(H2ñ
Morg.jabref.logic.exporter.ExporterFactory.getExporterByName(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ> Á(O2e
java.util.Optional.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË Ë($2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ È(&2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ4 È(82v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ# Ì(*2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ8 Ì(<2√
˘org.jabref.logic.exporter.Exporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>, java.util.List<java.nio.file.Path>, org.jabref.logic.journals.JournalAbbreviationRepository)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ' Ó(-2a
java.util.Optional.get()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ! Ó($2Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓD Ó(F2j
!java.util.Collections.emptyList()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓf Ó(o2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaı ı(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaı, ı(02’
ãorg.jabref.logic.search.SearchQuery.SearchQuery(java.lang.String, java.util.EnumSet<org.jabref.model.search.rules.SearchRules.SearchFlags>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java»  »(+2œ
Öorg.jabref.logic.search.DatabaseSearcher.DatabaseSearcher(org.jabref.logic.search.SearchQuery, org.jabref.model.database.BibDatabase)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…% …(52´
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‡! ‡(,2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿(2¬
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡ ¡( 2∂
morg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √( 2¿
worg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?pr@451.21:451.23CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ- ƒ(/2¿
worg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?pr@451.21:451.23CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈ ≈(!2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java«. «(@2»
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?searchTerm@449.15:449.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java», »(62–
Üorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?searchPreferences@455.26:455.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java»8 »(I2√
zorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?query@456.20:456.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…6 …(;2∆
}org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?dataBase@453.20:453.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…= …(E2≈
|org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?matches@457.23:457.30CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã(2¬
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java– –(2»
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?formatName@461.19:461.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java— —($2¬
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java—' —(+2»
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?formatName@461.19:461.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘ ‘("2
6org.jabref.cli.ArgumentProcessor?guiNeeded@78.20:78.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÿ ÿ(2»
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?formatName@461.19:461.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java› ›('2≈
|org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?matches@457.23:457.30CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‡- ‡(42¬
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‡7 ‡(;2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java· ·(2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂ Â(*2Œ
Ñorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?exporterFactory@484.32:484.47CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ. Á(=2»
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?formatName@461.19:461.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁP Á(Z2∆
}org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?exporter@487.35:487.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË Ë(2»
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?formatName@461.19:461.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈU È(_2¬
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌM Ì(Q2∆
}org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?exporter@487.35:487.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ Ó( 2Œ
Ñorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?databaseContext@452.27:452.42CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ. Ó(=2¬
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓG Ó(K2≈
|org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?matches@457.23:457.30CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓQ Ó(X2¬
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javah (l2¬
worg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?ex@495.39:495.41CALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.javaí (î2ª
morg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø5 ø(;2…
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿(2œ
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?searchTerm@449.15:449.25DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡ ¡(2«
worg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?pr@451.21:451.23DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √(2’
Ñorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?databaseContext@452.27:452.42DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ ƒ(*2Õ
}org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?dataBase@453.20:453.28DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈ ≈(2◊
Üorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?searchPreferences@455.26:455.43DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java« «(+2 
zorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?query@456.20:456.25DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java» »(2Ã
|org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?matches@457.23:457.30DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …(2œ
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?formatName@461.19:461.29DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ Õ(2’
Ñorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?exporterFactory@484.32:484.47DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‰  ‰(/2Õ
}org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?exporter@487.35:487.43DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ# Á(+2«
worg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?ex@495.39:495.41DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ' Ô()2W
booleanRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø ø(◊
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿("
typeString"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>String[] <mark class="class-field">data</mark> = cli.getExportMatches().split("<mark class="modifier">,</mark>")*data2[
java.lang.String[]TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿(2q
(java.lang.String.split(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿/ ¿(42t
+org.jabref.cli.JabRefCLI.getExportMatches()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿(,2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿(‘
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?searchTerm@449.15:449.25VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡ ¡("
typeString"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>String <mark class="class-field">searchTerm</mark> = data[0].replace("\\$"<mark class="modifier">,</mark> " ")*
searchTerm2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡ ¡(2ë
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡$ ¡(+2¬
yorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?data@448.17:448.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡ ¡( ì
worg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?pr@451.21:451.23VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √("
typeParserResult"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>ParserResult <mark class="class-field">pr</mark> = loaded.getLast()*pr2o
&org.jabref.logic.importer.ParserResultTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √(2∂
morg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √( Ê
Ñorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?databaseContext@452.27:452.42VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ ƒ(*"
typeBibDatabaseContext"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">databaseContext</mark> = pr.getDatabaseContext()*databaseContext2u
,org.jabref.model.database.BibDatabaseContextTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ ƒ(2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ0 ƒ(B2¿
worg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?pr@451.21:451.23CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ- ƒ(/´
}org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?dataBase@453.20:453.28VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈ ≈("
typeBibDatabase"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>BibDatabase <mark class="class-field">dataBase</mark> = pr.getDatabase()*dataBase2n
%org.jabref.model.database.BibDatabaseTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈ ≈(2}
4org.jabref.logic.importer.ParserResult.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈" ≈(-2¿
worg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?pr@451.21:451.23CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≈ ≈(!∆
Üorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?searchPreferences@455.26:455.43VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java« «(+"
typeSearchPreferences"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>SearchPreferences <mark class="class-field">searchPreferences</mark> = preferencesService.getSearchPreferences()*searchPreferences2q
(org.jabref.preferences.SearchPreferencesTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java« «(2â
@org.jabref.preferences.PreferencesService.getSearchPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java«A «(U2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java«. «(@ä

zorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?query@456.20:456.25VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java» »("
typeSearchQuery"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>SearchQuery <mark class="class-field">query</mark> = new SearchQuery(searchTerm, searchPreferences.getSearchFlags())*query2l
#org.jabref.logic.search.SearchQueryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java» »(2Ç
9org.jabref.preferences.SearchPreferences.getSearchFlags()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java»J »(X2’
ãorg.jabref.logic.search.SearchQuery.SearchQuery(java.lang.String, java.util.EnumSet<org.jabref.model.search.rules.SearchRules.SearchFlags>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java»  »(+2»
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?searchTerm@449.15:449.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java», »(62–
Üorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?searchPreferences@455.26:455.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java»8 »(IÕ

|org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?matches@457.23:457.30VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …("
typeList<BibEntry>"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">matches</mark> = new DatabaseSearcher(query, dataBase).getMatches()*matches2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …(2q
org.jabref.model.entry.BibEntryTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …(2~
5org.jabref.logic.search.DatabaseSearcher.getMatches()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…G …(Q2œ
Öorg.jabref.logic.search.DatabaseSearcher.DatabaseSearcher(org.jabref.logic.search.SearchQuery, org.jabref.model.database.BibDatabase)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…% …(52√
zorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?query@456.20:456.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…6 …(;2∆
}org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?dataBase@453.20:453.28CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…= …(EΩ
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?formatName@461.19:461.29VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ Õ("
typeString"
isFinalfalse"f
declarationStringQ<mark class="modifier"> </mark>String <mark class="class-field">formatName</mark>*
formatName2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ Õ(¢
Ñorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?exporterFactory@484.32:484.47VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‰  ‰(/"
typeExporterFactory"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>ExporterFactory <mark class="class-field">exporterFactory</mark> = ExporterFactory.create(preferencesService, Globals.entryTypesManager)*exporterFactory2r
)org.jabref.logic.exporter.ExporterFactoryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‰ ‰(2“
àorg.jabref.logic.exporter.ExporterFactory.create(org.jabref.preferences.PreferencesService, org.jabref.model.entry.BibEntryTypesManager)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‰B ‰(H2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂ Â(*Æ	
}org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?exporter@487.35:487.43VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ# Á(+"
typeOptional<Exporter>"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>Optional<Exporter> <mark class="class-field">exporter</mark> = exporterFactory.getExporterByName(formatName)*exporter2[
java.util.OptionalTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ Á(2t
"org.jabref.logic.exporter.ExporterTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ Á(!2ñ
Morg.jabref.logic.exporter.ExporterFactory.getExporterByName(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ> Á(O2Œ
Ñorg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?exporterFactory@484.32:484.47CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ. Á(=2»
org.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?formatName@461.19:461.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁP Á(ZÙ
morg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø5 ø(;"
typeList<ParserResult>"
isFinalfalse".
declarationStringList<ParserResult> loaded*loaded2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø" ø(&2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø' ø(3Ó
worg.jabref.cli.ArgumentProcessor.exportMatches(java.util.List<org.jabref.logic.importer.ParserResult>)?ex@495.39:495.41VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ' Ô()"
type	Exception"
isFinalfalse"!
declarationStringException ex*ex2\
java.lang.ExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ Ô(&á
dorg.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˙ ˙("
isFinalfalse"ß
declarationStringë<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">doAuxImport</mark>(List&lt;ParserResult&gt; loaded)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*doAuxImport2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˝ ˝(2¡
xorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛ ˛("2q
(java.lang.String.split(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛> ˛(C2p
'org.jabref.cli.JabRefCLI.getAuxImport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛/ ˛(;2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ Ñ(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ, Ñ(02v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÖ Ö(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÖ, Ö(02v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ Ü(2¥
korg.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˝ ˝(2ƒ
{org.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)?usageMsg@507.16:507.24CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛ ˛(2¥
korg.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛# ˛()2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛+ ˛(.2ƒ
{org.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)?usageMsg@507.16:507.24CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÄ Ä(2ƒ
{org.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)?usageMsg@507.16:507.24CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É(2π
korg.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˙0 ˙(62À
{org.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)?usageMsg@507.16:507.24DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˚ ˚(2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˙ ˙(Õ
{org.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)?usageMsg@507.16:507.24VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˚ ˚("
typeboolean"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">usageMsg</mark>*usageMsg2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˚ ˚(Ú
korg.jabref.cli.ArgumentProcessor.doAuxImport(java.util.List<org.jabref.logic.importer.ParserResult>)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˙0 ˙(6"
typeList<ParserResult>"
isFinalfalse".
declarationStringList<ParserResult> loaded*loaded2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˙ ˙(!2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˙" ˙(.âX
5org.jabref.cli.ArgumentProcessor.importAndOpenFiles()METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(1"
isFinalfalse"Ñ
declarationStringo<mark class="modifier">private </mark>List&lt;ParserResult&gt; <mark class="method">importAndOpenFiles</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeList<ParserResult>*importAndOpenFiles2k
"org.jabref.cli.JabRefCLI.isBlank()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê ê(2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê2 ê(92o
&org.jabref.cli.JabRefCLI.getLeftOver()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê$ ê(/2o
&org.jabref.cli.JabRefCLI.getLeftOver()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë( ë(32t
+java.lang.String.endsWith(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaïM ï(U2w
.java.lang.String.toLowerCase(java.util.Locale)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï1 ï(<2Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ% õ('2è
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú3 ú(M2é
Eorg.jabref.logic.importer.ParserResult.fromError(java.lang.Exception)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java†* †(32y
0org.jabref.logic.importer.ParserResult.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java•) •(02^
java.util.List.add(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠! ≠($2^
java.util.List.add(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaØ Ø("2e
java.util.Optional.orElse(T)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaØ? Ø(E2å
Corg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaØ# Ø(32^
java.util.List.add(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤(2k
"org.jabref.cli.JabRefCLI.isBlank()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∑ ∑(2p
'org.jabref.cli.JabRefCLI.isFileImport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∑" ∑(.2^
java.util.List.add(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏ ∏(2q
(org.jabref.cli.JabRefCLI.getFileImport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏ ∏(*2ç
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaº' º(02Ü
=org.jabref.cli.ArgumentProcessor.importFile(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaº º(2k
"org.jabref.cli.JabRefCLI.isBlank()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø ø(2v
-org.jabref.cli.JabRefCLI.isImportToOpenBase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø" ø(42ç
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿8 ¿(A2å
Corg.jabref.cli.ArgumentProcessor.importToOpenBase(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿(2w
.org.jabref.cli.JabRefCLI.getImportToOpenBase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿! ¿(42k
"org.jabref.cli.JabRefCLI.isBlank()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √(2r
)org.jabref.cli.JabRefCLI.isBibtexImport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√" √(02s
*org.jabref.cli.JabRefCLI.getBibtexImport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ' ƒ(62è
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒM ƒ(g2h
java.util.ArrayList.ArrayList()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé( é(32h
java.util.ArrayList.ArrayList()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè$ è(/2~
5org.jabref.logic.importer.ParserResult.ParserResult()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó& ó(22~
5org.jabref.logic.importer.ParserResult.ParserResult()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaØJ Ø(V2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê ê(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê  ê(#2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë$ ë('2ñ
Morg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?aLeftOver@529.24:529.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï' ï(02ô
Porg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?bibExtension@533.24:533.36CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaò ò( 2è
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?pr@535.29:535.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö ö(2ñ
Morg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?aLeftOver@529.24:529.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaõ( õ(12à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú  ú(22á
>org.jabref.cli.ArgumentProcessor?fileUpdateMonitor@75.36:75.53CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaù  ù(12è
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?pr@535.29:535.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java† †(2è
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?ex@543.41:543.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java†4 †(62|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java° °(2ñ
Morg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?aLeftOver@529.24:529.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java°@ °(I2è
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?ex@543.41:543.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java°K °(M2ô
Porg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?bibExtension@533.24:533.36CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java• •(!2è
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?pr@535.29:535.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java•& •((2Å
8org.jabref.cli.ArgumentProcessor?startupMode@72.23:72.34CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨ ¨(#2ï
Lorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?toImport@527.21:527.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠ ≠( 2ñ
Morg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?aLeftOver@529.24:529.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠% ≠(.2ì
Jorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?loaded@526.27:526.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaØ Ø(2ñ
Morg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?aLeftOver@529.24:529.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaØ4 Ø(=2ì
Jorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?loaded@526.27:526.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤(2è
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?pr@535.29:535.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤(!2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∑ ∑(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∑ ∑(!2ï
Lorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?toImport@527.21:527.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏ ∏(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏ ∏(2ï
Lorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?toImport@527.21:527.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaª% ª(-2õ
Rorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?filenameString@571.20:571.34CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaº º(%2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø ø(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaø ø(!2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿( 2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √(!2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ# ƒ(&2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaƒ: ƒ(L2ì
Jorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?loaded@526.27:526.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java« «(2|
3org.jabref.cli.ArgumentProcessor.Mode?INITIAL_STARTCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨, ¨(92^
java.util.List.add(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaº1 º(<2^
java.util.List.add(E)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿B ¿(M2ö
Jorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?loaded@526.27:526.33DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é(!2ú
Lorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?toImport@527.21:527.29DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(2ù
Morg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?aLeftOver@529.24:529.33DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë ë(!2†
Porg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?bibExtension@533.24:533.36DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï ï($2ñ
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?pr@535.29:535.31DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó(2¢
Rorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?filenameString@571.20:571.34DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaª ª("2ñ
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?ex@543.41:543.43DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü) ü(+2^
java.util.ListRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(2
&org.jabref.logic.importer.ParserResultRETURN_TYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(è
Jorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?loaded@526.27:526.33VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é(!"
typeList<ParserResult>"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>List<ParserResult> <mark class="class-field">loaded</mark> = new ArrayList<>()*loaded2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é(2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é(2h
java.util.ArrayList.ArrayList()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé( é(3Ú
Lorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?toImport@527.21:527.29VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è("
typeList<String>"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>List<String> <mark class="class-field">toImport</mark> = new ArrayList<>()*toImport2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(2b
java.lang.StringTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(2h
java.util.ArrayList.ArrayList()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè$ è(/â
Morg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?aLeftOver@529.24:529.33VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë ë(!"
typeString"
isFinalfalse"e
declarationStringP<mark class="modifier"> </mark>String <mark class="class-field">aLeftOver</mark>*	aLeftOver2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë ë(Î
Porg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?bibExtension@533.24:533.36VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï ï($"
typeboolean"
isFinalfalse"¿
declarationString™<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">bibExtension</mark> = aLeftOver.toLowerCase(Locale.ENGLISH).endsWith("bib")*bibExtension2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï ï(2t
+java.lang.String.endsWith(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaïM ï(U2w
.java.lang.String.toLowerCase(java.util.Locale)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï1 ï(<2ñ
Morg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?aLeftOver@529.24:529.33CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï' ï(0´
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?pr@535.29:535.31VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó("
typeParserResult"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>ParserResult <mark class="class-field">pr</mark> = new ParserResult()*pr2o
&org.jabref.logic.importer.ParserResultTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó(2~
5org.jabref.logic.importer.ParserResult.ParserResult()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó& ó(2ò
Rorg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?filenameString@571.20:571.34VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaª ª(""
typeString"
isFinalfalse"j
declarationStringU<mark class="modifier"> </mark>String <mark class="class-field">filenameString</mark>*filenameString2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaª ª(¡
Forg.jabref.cli.ArgumentProcessor.importAndOpenFiles()?ex@543.41:543.43VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü) ü(+"
typeIOException"
isFinalfalse"#
declarationStringIOException ex*ex2\
java.io.IOExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü ü((à.
xorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java   ("
isFinalfalse"ı
declarationStringﬂ<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">generateAux</mark>(List&lt;ParserResult&gt; loaded<mark class="modifier"><mark class="modifier">,</mark></mark> String[] data)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*generateAux2}
4org.jabref.logic.importer.ParserResult.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ@ Õ(K2p
'org.jabref.cli.AuxCommandLine.perform()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ& Œ(-2{
2org.jabref.model.database.BibDatabase.hasEntries()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java”- ”(72£
Zorg.jabref.model.strings.StringUtil.getCorrectFileName(java.lang.String, java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘, ‘(>2Ø
forg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’ ’(2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java⁄ ⁄("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java⁄0 ⁄(42Æ
eorg.jabref.cli.AuxCommandLine.AuxCommandLine(java.lang.String, org.jabref.model.database.BibDatabase)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ% Õ(32∆
}org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ À(2»
org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã($2∆
}org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ4 Õ(82”
âorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?pr@588.25:588.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ= Õ(?2‘
äorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?acl@589.27:589.30CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ" Œ(%2ÿ
éorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?newBase@590.24:590.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java” ”(2ÿ
éorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?newBase@590.24:590.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java”% ”(,2∆
}org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘? ‘(C2ÿ
éorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?newBase@590.24:590.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’ ’($2ÿ
éorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?subName@596.23:596.30CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’& ’(-2‹
íorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?notSavedMsg@592.20:592.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java÷ ÷(2‹
íorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?notSavedMsg@592.20:592.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŸ Ÿ(2Õ
org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java 3  (92À
}org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!data	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java D  (H2⁄
âorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?pr@588.25:588.27DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã(2€
äorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?acl@589.27:589.30DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ Õ(2ﬂ
éorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?newBase@590.24:590.31DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ(2„
íorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?notSavedMsg@592.20:592.31DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java– –(2ﬂ
éorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?subName@596.23:596.30DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘ ‘(2W
booleanRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java   (π
âorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?pr@588.25:588.27VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã("
typeParserResult"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>ParserResult <mark class="class-field">pr</mark> = loaded.getFirst()*pr2o
&org.jabref.logic.importer.ParserResultTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã(2»
org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã($˜	
äorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?acl@589.27:589.30VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ Õ("
typeAuxCommandLine"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>AuxCommandLine <mark class="class-field">acl</mark> = new AuxCommandLine(data[0]<mark class="modifier">,</mark> pr.getDatabase())*acl2f
org.jabref.cli.AuxCommandLineTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ Õ(2}
4org.jabref.logic.importer.ParserResult.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ@ Õ(K2Æ
eorg.jabref.cli.AuxCommandLine.AuxCommandLine(java.lang.String, org.jabref.model.database.BibDatabase)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ% Õ(32∆
}org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ4 Õ(82”
âorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?pr@588.25:588.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ= Õ(?ø
éorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?newBase@590.24:590.31VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ("
typeBibDatabase"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>BibDatabase <mark class="class-field">newBase</mark> = acl.perform()*newBase2n
%org.jabref.model.database.BibDatabaseTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ(2p
'org.jabref.cli.AuxCommandLine.perform()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ& Œ(-2‘
äorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?acl@589.27:589.30CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ" Œ(%í
íorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?notSavedMsg@592.20:592.31VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java– –("
typeboolean"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">notSavedMsg</mark> = <mark class="modifier">false</mark>*notSavedMsg2P
booleanTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java– –(Ü
éorg.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?subName@596.23:596.30VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘ ‘("
typeString"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>String <mark class="class-field">subName</mark> = StringUtil.getCorrectFileName(data[1]<mark class="modifier">,</mark> "bib")*subName2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘ ‘(2£
Zorg.jabref.model.strings.StringUtil.getCorrectFileName(java.lang.String, java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘, ‘(>2∆
}org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‘? ‘(CÜ
org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java 3  (9"
typeList<ParserResult>"
isFinalfalse".
declarationStringList<ParserResult> loaded*loaded2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java    ($2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java %  (1ˆ
}org.jabref.cli.ArgumentProcessor.generateAux(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!data	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java D  (H"
typeString[]"
isFinalfalse""
declarationStringString[] data*data2[
java.lang.String[]TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java ;  (CÄ?
forg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚ ‚("
isFinalfalse"Ë
declarationString“<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">saveDatabase</mark>(BibDatabase newBase<mark class="modifier"><mark class="modifier">,</mark></mark> String subName)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*saveDatabase2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‰ ‰(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‰, ‰(02Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂI Â(K2ê
Gorg.jabref.logic.exporter.SaveConfiguration.withReformatOnSave(boolean)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË Ë(+2è
Forg.jabref.preferences.LibraryPreferences.shouldAlwaysReformatOnSave()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaËW Ë(q2ä
Aorg.jabref.preferences.PreferencesService.getLibraryPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË? Ë(T2à
?org.jabref.preferences.PreferencesService.getFieldPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏ+ Ï(>2ï
Lorg.jabref.preferences.PreferencesService.getCitationKeyPatternPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ+ Ì(K2Ø
forg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ Ô(+2â
@org.jabref.logic.exporter.AtomicFileWriter.hasEncodingProblems()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÚ Ú(22v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ Û(&2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ4 Û(82ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÙ6 Ù(:2ã
@org.jabref.logic.exporter.AtomicFileWriter.getEncodingProblems()CALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÙà Ù(õ2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯ ¯(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯, ¯(02r
)java.lang.Throwable.getLocalizedMessage()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯U ¯(h2≤
iorg.jabref.logic.exporter.AtomicFileWriter.AtomicFileWriter(java.nio.file.Path, java.nio.charset.Charset)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂ3 Â(C2ò
Oorg.jabref.logic.exporter.BibWriter.BibWriter(java.io.Writer, java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ* Ê(32£
Yorg.jabref.logic.exporter.SelfContainedSaveConfiguration.SelfContainedSaveConfiguration()CALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁh Á(Ü2Ü
ºorg.jabref.logic.exporter.BibtexDatabaseWriter.BibtexDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ7 È(K2Ø
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ0 Ô(B2∑
norg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)!subNameCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‰D ‰(K2∑
norg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)!subNameCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂL Â(S2»
org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?fileWriter@613.34:613.44CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ4 Ê(>2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË, Ë(>2«
~org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?bibWriter@614.26:614.35CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ Í(!2–
Üorg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?saveConfiguration@615.47:615.64CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎ Î()2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏ Ï(*2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ Ì(*2á
>org.jabref.cli.ArgumentProcessor?entryTypesManager@76.39:76.56CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ Ó()2Õ
Éorg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?databaseWriter@617.34:617.48CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔ Ô(2∑
norg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)!newBaseCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÔC Ô(J2»
org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?fileWriter@613.34:613.44CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÚ Ú(2…
org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?fileWriter@613.34:613.44CALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÙ} Ù(á2¿
worg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?ex@631.29:631.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯R ¯(T2º
norg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)!newBase	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚* ‚(12º
norg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)!subName	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚: ‚(A2œ
org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?fileWriter@613.34:613.44DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂ" Â(,2Œ
~org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?bibWriter@614.26:614.35DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ Ê(#2◊
Üorg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?saveConfiguration@615.47:615.64DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ/ Á(@2‘
Éorg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?databaseWriter@617.34:617.48DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ" È(02«
worg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?ex@631.29:631.31DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜ ˜(2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚ ‚(√
org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?fileWriter@613.34:613.44VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂ" Â(,"
typeAtomicFileWriter"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>AtomicFileWriter <mark class="class-field">fileWriter</mark> = new AtomicFileWriter(Path.of(subName)<mark class="modifier">,</mark> StandardCharsets.UTF_8)*
fileWriter2s
*org.jabref.logic.exporter.AtomicFileWriterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂ Â(!2Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂI Â(K2≤
iorg.jabref.logic.exporter.AtomicFileWriter.AtomicFileWriter(java.nio.file.Path, java.nio.charset.Charset)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂ3 Â(C2∑
norg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)!subNameCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÂL Â(S‚
~org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?bibWriter@614.26:614.35VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ Ê(#"
type	BibWriter"
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark>BibWriter <mark class="class-field">bibWriter</mark> = new BibWriter(fileWriter, OS.NEWLINE)*	bibWriter2l
#org.jabref.logic.exporter.BibWriterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ Ê(2ò
Oorg.jabref.logic.exporter.BibWriter.BibWriter(java.io.Writer, java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ* Ê(32»
org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?fileWriter@613.34:613.44CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÊ4 Ê(>µ
Üorg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?saveConfiguration@615.47:615.64VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ/ Á(@"&
typeSelfContainedSaveConfiguration"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>SelfContainedSaveConfiguration <mark class="class-field">saveConfiguration</mark> = (SelfContainedSaveConfiguration) new SelfContainedSaveConfiguration().withReformatOnSave(preferencesService.getLibraryPreferences().shouldAlwaysReformatOnSave())*saveConfiguration2Å
8org.jabref.logic.exporter.SelfContainedSaveConfigurationTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁ Á(.2ê
Gorg.jabref.logic.exporter.SaveConfiguration.withReformatOnSave(boolean)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË Ë(+2è
Forg.jabref.preferences.LibraryPreferences.shouldAlwaysReformatOnSave()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaËW Ë(q2ä
Aorg.jabref.preferences.PreferencesService.getLibraryPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË? Ë(T2£
Yorg.jabref.logic.exporter.SelfContainedSaveConfiguration.SelfContainedSaveConfiguration()CALL@
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÁh Á(Ü2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaË, Ë(>œ
Éorg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?databaseWriter@617.34:617.48VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ" È(0"
typeBibDatabaseWriter"
isFinalfalse"ﬂ
declarationString…<mark class="modifier"> </mark>BibDatabaseWriter <mark class="class-field">databaseWriter</mark> = new BibtexDatabaseWriter(bibWriter, saveConfiguration, preferencesService.getFieldPreferences()<mark class="modifier">,</mark> preferencesService.getCitationKeyPatternPreferences()<mark class="modifier">,</mark> entryTypesManager)*databaseWriter2t
+org.jabref.logic.exporter.BibDatabaseWriterTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ È(!2à
?org.jabref.preferences.PreferencesService.getFieldPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏ+ Ï(>2ï
Lorg.jabref.preferences.PreferencesService.getCitationKeyPatternPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ+ Ì(K2Ü
ºorg.jabref.logic.exporter.BibtexDatabaseWriter.BibtexDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.bibtex.FieldPreferences, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÈ7 È(K2«
~org.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?bibWriter@614.26:614.35CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ Í(!2–
Üorg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?saveConfiguration@615.47:615.64CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎ Î()2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏ Ï(*2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ Ì(*2á
>org.jabref.cli.ArgumentProcessor?entryTypesManager@76.39:76.56CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ Ó()Ü
norg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)!newBase	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚* ‚(1"
typeBibDatabase"
isFinalfalse"(
declarationStringBibDatabase newBase*newBase2n
%org.jabref.model.database.BibDatabaseTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚ ‚()Á
norg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)!subName	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚: ‚(A"
typeString"
isFinalfalse"#
declarationStringString subName*subName2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‚3 ‚(9Ú
worg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)?ex@631.29:631.31VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜ ˜("
typeIOException"
isFinalfalse"#
declarationStringIOException ex*ex2\
java.io.IOExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜ ˜(∏]
worg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸ ¸("
isFinalfalse"Ò
declarationString€<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">exportFile</mark>(List&lt;ParserResult&gt; loaded<mark class="modifier"><mark class="modifier">,</mark></mark> String[] data)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*
exportFile2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÄ Ä(2{
2org.jabref.logic.importer.ParserResult.isInvalid()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÇ Ç(!2Ø
forg.jabref.cli.ArgumentProcessor.saveDatabase(org.jabref.model.database.BibDatabase, java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É( 2}
4org.jabref.logic.importer.ParserResult.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ$ É(/2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ Ü("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ0 Ü(42l
#java.nio.file.Path.toAbsolutePath()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç5 ç(C2a
java.util.Optional.get()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç/ ç(22y
0org.jabref.logic.importer.ParserResult.getPath()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç% ç(,2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé> é(P2ô
Porg.jabref.model.database.BibDatabaseContext.setDatabasePath(java.nio.file.Path)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(+2∞
gorg.jabref.model.database.BibDatabaseContext.getFileDirectories(org.jabref.preferences.FilePreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë ë('2á
>org.jabref.preferences.PreferencesService.getFilePreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë; ë(M2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaí í(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaí, í(02“
àorg.jabref.logic.exporter.ExporterFactory.create(org.jabref.preferences.PreferencesService, org.jabref.model.entry.BibEntryTypesManager)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì> ì(D2ñ
Morg.jabref.logic.exporter.ExporterFactory.getExporterByName(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ: ñ(K2e
java.util.Optional.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó( 2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaò ò("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaò0 ò(42a
java.util.Optional.get()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú ú( 2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaù) ù(;2Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaû! û(#2{
2org.jabref.model.database.BibDatabase.getEntries()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaüL ü(V2É
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü> ü(I2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü) ü(;2≈
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˝ ˝(2«
~org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÄ Ä(2«
~org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ" Å((2“
àorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?pr@641.29:641.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÇ Ç(2“
àorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?pr@641.29:641.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ! É(#2≈
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ3 É(72≈
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaà à(2«
~org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã( ã(.2‹
íorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?parserResult@651.25:651.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç($2‹
íorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?parserResult@651.25:651.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé1 é(=2ﬂ
ïorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?databaseContext@654.31:654.46CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(2‘
äorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?path@653.17:653.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè, è(02ﬂ
ïorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?databaseContext@654.31:654.46CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê, ê(;2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë( ë(:2≈
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaíA í(E2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaî î(&2ﬂ
ïorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?exporterFactory@659.28:659.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ* ñ(92≈
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañL ñ(P2ÿ
éorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?exporter@662.31:662.39CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaó ó(2≈
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaòQ ò(U2ÿ
éorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?exporter@662.31:662.39CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaú ú(2‹
íorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?parserResult@651.25:651.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaù ù((2≈
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaû$ û((2‹
íorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?parserResult@651.25:651.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaü ü((2‚
òorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?fileDirForDatabase@656.23:656.41CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java† †(.2≈
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java£d £(h2‘
àorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?ex@674.35:674.37CALLA
3src\main\java\org\jabref\cli\ArgumentProcessor.java£é £(ê2Ã
~org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸/ ¸(52 
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!data	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸@ ¸(D2Ÿ
àorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?pr@641.29:641.31DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ Å(2„
íorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?parserResult@651.25:651.37DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã(%2€
äorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?path@653.17:653.21DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(2Ê
ïorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?databaseContext@654.31:654.46DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é(.2È
òorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?fileDirForDatabase@656.23:656.41DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê ê()2Ê
ïorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?exporterFactory@659.28:659.43DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì ì(+2ﬂ
éorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?exporter@662.31:662.39DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ ñ('2Ÿ
àorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?ex@674.35:674.37DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢# ¢(%2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸ ¸(∂
àorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?pr@641.29:641.31VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ Å("
typeParserResult"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>ParserResult <mark class="class-field">pr</mark> = loaded.getLast()*pr2o
&org.jabref.logic.importer.ParserResultTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ Å(2«
~org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ" Å((’
íorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?parserResult@651.25:651.37VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã(%"
typeParserResult"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = loaded.getLast()*parserResult2o
&org.jabref.logic.importer.ParserResultTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã(2«
~org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã( ã(.ó
äorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?path@653.17:653.21VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç("
typePath"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = parserResult.getPath().get().toAbsolutePath()*path2[
java.nio.file.PathTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç(2l
#java.nio.file.Path.toAbsolutePath()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç5 ç(C2a
java.util.Optional.get()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç/ ç(22y
0org.jabref.logic.importer.ParserResult.getPath()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç% ç(,2‹
íorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?parserResult@651.25:651.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaç ç($û
ïorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?databaseContext@654.31:654.46VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é(."
typeBibDatabaseContext"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">databaseContext</mark> = parserResult.getDatabaseContext()*databaseContext2u
,org.jabref.model.database.BibDatabaseContextTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é(2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé> é(P2‹
íorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?parserResult@651.25:651.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé1 é(=Õ

òorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?fileDirForDatabase@656.23:656.41VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê ê()"
type
List<Path>"
isFinalfalse"¡
declarationString´<mark class="modifier"> </mark>List<Path> <mark class="class-field">fileDirForDatabase</mark> = databaseContext.getFileDirectories(preferencesService.getFilePreferences())*fileDirForDatabase2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê ê(2d
java.nio.file.PathTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê ê(2∞
gorg.jabref.model.database.BibDatabaseContext.getFileDirectories(org.jabref.preferences.FilePreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë ë('2á
>org.jabref.preferences.PreferencesService.getFilePreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë; ë(M2ﬂ
ïorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?databaseContext@654.31:654.46CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê, ê(;2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaë( ë(:≥
ïorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?exporterFactory@659.28:659.43VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì ì(+"
typeExporterFactory"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>ExporterFactory <mark class="class-field">exporterFactory</mark> = ExporterFactory.create(preferencesService, Globals.entryTypesManager)*exporterFactory2r
)org.jabref.logic.exporter.ExporterFactoryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì ì(2“
àorg.jabref.logic.exporter.ExporterFactory.create(org.jabref.preferences.PreferencesService, org.jabref.model.entry.BibEntryTypesManager)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaì> ì(D2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaî î(&À	
éorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?exporter@662.31:662.39VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ ñ('"
typeOptional<Exporter>"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>Optional<Exporter> <mark class="class-field">exporter</mark> = exporterFactory.getExporterByName(data[1])*exporter2[
java.util.OptionalTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ ñ(2t
"org.jabref.logic.exporter.ExporterTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ ñ(2ñ
Morg.jabref.logic.exporter.ExporterFactory.getExporterByName(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ: ñ(K2ﬂ
ïorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?exporterFactory@659.28:659.43CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ* ñ(92≈
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!dataCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañL ñ(PÖ
~org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸/ ¸(5"
typeList<ParserResult>"
isFinalfalse".
declarationStringList<ParserResult> loaded*loaded2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸ ¸( 2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸! ¸(-ı
|org.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])!data	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸@ ¸(D"
typeString[]"
isFinalfalse""
declarationStringString[] data*data2[
java.lang.String[]TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸7 ¸(?Ä
àorg.jabref.cli.ArgumentProcessor.exportFile(java.util.List<org.jabref.logic.importer.ParserResult>, java.lang.String[])?ex@674.35:674.37VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢# ¢(%"
type	Exception"
isFinalfalse"!
declarationStringException ex*ex2\
java.lang.ExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¢ ¢("Ω
4org.jabref.cli.ArgumentProcessor.importPreferences()METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java© ©(""
isFinalfalse"ç
declarationStringx<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">importPreferences</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*importPreferences2ò
Oorg.jabref.preferences.PreferencesService.importPreferences(java.nio.file.Path)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´ ´(02Ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´6 ´(82x
/org.jabref.cli.JabRefCLI.getPreferencesImport()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´= ´(Q2í
Iorg.jabref.preferences.PreferencesService.getCustomEntryTypesRepository()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨; ¨(X2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´ ´(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java´9 ´(<2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¨( ¨(:2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆ Æ(2é
Eorg.jabref.cli.ArgumentProcessor.importPreferences()?ex@685.33:685.35CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÆ6 Æ(82ï
Eorg.jabref.cli.ArgumentProcessor.importPreferences()?ex@685.33:685.35DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠! ≠(#2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java© ©(’
Eorg.jabref.cli.ArgumentProcessor.importPreferences()?ex@685.33:685.35VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠! ≠(#"
typeJabRefException"
isFinalfalse"'
declarationStringJabRefException ex*ex2i
 org.jabref.logic.JabRefExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≠ ≠( ·&
Corg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤(!"
isFinalfalse"ô
declarationStringÉ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">resetPreferences</mark>(String value)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*resetPreferences2r
)java.lang.String.equals(java.lang.Object)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥ ≥(2`
java.lang.String.trim()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥ ≥(#2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ µ("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaµ0 µ(42z
1org.jabref.preferences.PreferencesService.clear()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂# ∂((2à
?org.jabref.logic.shared.prefs.SharedDatabasePreferences.clear()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∑0 ∑(52v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ π("2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaπ0 π(42q
(java.lang.String.split(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaΩ" Ω('2é
Eorg.jabref.preferences.PreferencesService.deleteKey(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿' ¿(02`
java.lang.String.trim()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿5 ¿(92v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡ ¡(&2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡4 ¡(82`
java.lang.String.trim()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡^ ¡(b2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√ √(&2i
 java.lang.Throwable.getMessage()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√) √(32ú
Sorg.jabref.logic.shared.prefs.SharedDatabasePreferences.SharedDatabasePreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∑ ∑(-2í
Iorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)!valueCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≥ ≥(2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∂ ∂("2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∫ ∫(2ú
Sorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?e@696.43:696.44CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∫< ∫(=2í
Iorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)!valueCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaΩ Ω(!2ü
Vorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?keys@701.21:701.25CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaæ æ("2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿ ¿(&2û
Uorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?key@702.24:702.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¿1 ¿(42û
Uorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?key@702.24:702.27CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¡Z ¡(]2ú
Sorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?e@706.50:706.51CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java√' √((2ó
Iorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)!value	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤) ≤(.2¶
Vorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?keys@701.21:701.25DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaΩ Ω(2•
Uorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?key@702.24:702.27DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaæ æ(2£
Sorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?e@696.43:696.44DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏+ ∏(,2£
Sorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?e@706.50:706.51DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¬2 ¬(32T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤ ≤(∆
Vorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?keys@701.21:701.25VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaΩ Ω("
typeString"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>String[] <mark class="class-field">keys</mark> = value.split("<mark class="modifier">,</mark>")*keys2[
java.lang.String[]TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaΩ Ω(2q
(java.lang.String.split(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaΩ" Ω('2í
Iorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)!valueCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaΩ Ω(!Ö
Uorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?key@702.24:702.27VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaæ æ("
typeString"
isFinalfalse"_
declarationStringJ<mark class="modifier"> </mark>String <mark class="class-field">key</mark>*key2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaæ æ(æ
Iorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)!value	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤) ≤(."
typeString"
isFinalfalse"!
declarationStringString value*value2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java≤" ≤((Ú
Sorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?e@696.43:696.44VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏+ ∏(,"
typeBackingStoreException"
isFinalfalse",
declarationStringBackingStoreException e*e2n
%java.util.prefs.BackingStoreExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java∏ ∏(*ı
Sorg.jabref.cli.ArgumentProcessor.resetPreferences(java.lang.String)?e@706.50:706.51VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¬2 ¬(3" 
typeIllegalArgumentException"
isFinalfalse"/
declarationStringIllegalArgumentException e*e2k
"java.lang.IllegalArgumentExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¬ ¬(1∞ 
rorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …(*"
isFinalfalse"µ
declarationStringü<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">automaticallySetFileLinks</mark>(List&lt;ParserResult&gt; loaded)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*automaticallySetFileLinks2}
4org.jabref.logic.importer.ParserResult.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ0 À(;2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ% Ã()2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ! Œ(32á
>org.jabref.preferences.PreferencesService.getFilePreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaœ' œ(92ã
Borg.jabref.preferences.PreferencesService.getAutoLinkPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java–' –(=2{
2org.jabref.model.database.BibDatabase.getEntries()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java—. —(82î
 org.jabref.gui.externalfiles.AutoSetFileLinksUtil.AutoSetFileLinksUtil(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.util.io.AutoLinkPreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ, Õ(@2ä
Aorg.jabref.gui.undo.NamedCompound.NamedCompound(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java—@ —(M2¬
yorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java )  (/2◊
çorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@714.26:714.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ# À(/2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÃ Ã(2◊
çorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@714.26:714.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ( 2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaœ œ(&2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java– –(&2œ
Öorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?util@717.33:717.37CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java— —(2”
âorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?database@715.24:715.32CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java—% —(-2«
yorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…> …(D2ﬁ
çorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@714.26:714.38DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java   (&2⁄
âorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?database@715.24:715.32DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ À( 2÷
Öorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?util@717.33:717.37DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ! Õ(%2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java… …(Ú
çorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@714.26:714.38VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java   (&"
typeParserResult"
isFinalfalse"n
declarationStringY<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark>*parserResult2o
&org.jabref.logic.importer.ParserResultTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java   (⁄
âorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?database@715.24:715.32VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ À( "
typeBibDatabase"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>BibDatabase <mark class="class-field">database</mark> = parserResult.getDatabase()*database2n
%org.jabref.model.database.BibDatabaseTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ À(2}
4org.jabref.logic.importer.ParserResult.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ0 À(;2◊
çorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@714.26:714.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÀ# À(/Ì
Öorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?util@717.33:717.37VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ! Õ(%"
typeAutoSetFileLinksUtil"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>AutoSetFileLinksUtil <mark class="class-field">util</mark> = new AutoSetFileLinksUtil(parserResult.getDatabaseContext()<mark class="modifier">,</mark> preferencesService.getFilePreferences()<mark class="modifier">,</mark> preferencesService.getAutoLinkPreferences())*util2z
1org.jabref.gui.externalfiles.AutoSetFileLinksUtilTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ Õ( 2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ! Œ(32á
>org.jabref.preferences.PreferencesService.getFilePreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaœ' œ(92ã
Borg.jabref.preferences.PreferencesService.getAutoLinkPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java–' –(=2î
 org.jabref.gui.externalfiles.AutoSetFileLinksUtil.AutoSetFileLinksUtil(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.util.io.AutoLinkPreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÕ, Õ(@2◊
çorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@714.26:714.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŒ Œ( 2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaœ œ(&2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java– –(&Ä
yorg.jabref.cli.ArgumentProcessor.automaticallySetFileLinks(java.util.List<org.jabref.logic.importer.ParserResult>)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…> …(D"
typeList<ParserResult>"
isFinalfalse".
declarationStringList<ParserResult> loaded*loaded2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…+ …(/2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java…0 …(<÷!
oorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’ ’('"
isFinalfalse"≤
declarationStringú<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">regenerateCitationKeys</mark>(List&lt;ParserResult&gt; loaded)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*regenerateCitationKeys2}
4org.jabref.logic.importer.ParserResult.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊0 ◊(;2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŸ% Ÿ()2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‹! ‹(32ï
Lorg.jabref.preferences.PreferencesService.getCitationKeyPatternPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java›' ›(G2{
2org.jabref.model.database.BibDatabase.getEntries()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬁ+ ﬁ(52¥
korg.jabref.logic.citationkeypattern.CitationKeyGenerator.generateAndSetKey(org.jabref.model.entry.BibEntry)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬂ ﬂ(.2à
æorg.jabref.logic.citationkeypattern.CitationKeyGenerator.CitationKeyGenerator(org.jabref.model.database.BibDatabaseContext, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java€4 €(H2ø
vorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)!loadedCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java÷) ÷(/2‘
äorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@726.26:726.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊# ◊(/2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaŸ Ÿ(2‘
äorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@726.26:726.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‹ ‹( 2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java› ›(&2–
Üorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?database@727.24:727.32CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬁ" ﬁ(*2‘
äorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?keyGenerator@731.33:731.45CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬂ ﬂ(2Õ
Éorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?entry@734.26:734.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬂ/ ﬂ(42ƒ
vorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’; ’(A2€
äorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@726.26:726.38DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java÷ ÷(&2◊
Üorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?database@727.24:727.32DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊ ◊( 2€
äorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?keyGenerator@731.33:731.45DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java€! €(-2‘
Éorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?entry@734.26:734.31DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬁ ﬁ(2T
voidRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’ ’(Ô
äorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@726.26:726.38VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java÷ ÷(&"
typeParserResult"
isFinalfalse"n
declarationStringY<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark>*parserResult2o
&org.jabref.logic.importer.ParserResultTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java÷ ÷(‘
Üorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?database@727.24:727.32VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊ ◊( "
typeBibDatabase"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>BibDatabase <mark class="class-field">database</mark> = parserResult.getDatabase()*database2n
%org.jabref.model.database.BibDatabaseTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊ ◊(2}
4org.jabref.logic.importer.ParserResult.getDatabase()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊0 ◊(;2‘
äorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@726.26:726.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java◊# ◊(/≥
äorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?keyGenerator@731.33:731.45VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java€! €(-"
typeCitationKeyGenerator"
isFinalfalse"ä
declarationStringÙ<mark class="modifier"> </mark>CitationKeyGenerator <mark class="class-field">keyGenerator</mark> = new CitationKeyGenerator(parserResult.getDatabaseContext()<mark class="modifier">,</mark> preferencesService.getCitationKeyPatternPreferences())*keyGenerator2Å
8org.jabref.logic.citationkeypattern.CitationKeyGeneratorTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java€ €( 2Ñ
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‹! ‹(32ï
Lorg.jabref.preferences.PreferencesService.getCitationKeyPatternPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java›' ›(G2à
æorg.jabref.logic.citationkeypattern.CitationKeyGenerator.CitationKeyGenerator(org.jabref.model.database.BibDatabaseContext, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java€4 €(H2‘
äorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?parserResult@726.26:726.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java‹ ‹( 2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java› ›(&À
Éorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)?entry@734.26:734.31VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬁ ﬁ("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2h
org.jabref.model.entry.BibEntryTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaﬁ ﬁ(˝
vorg.jabref.cli.ArgumentProcessor.regenerateCitationKeys(java.util.List<org.jabref.logic.importer.ParserResult>)!loaded	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’; ’(A"
typeList<ParserResult>"
isFinalfalse".
declarationStringList<ParserResult> loaded*loaded2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’( ’(,2x
&org.jabref.logic.importer.ParserResultTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java’- ’(9‚S
8org.jabref.cli.ArgumentProcessor.fetch(java.lang.String)METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ# Í(("
isFinalfalse"é
declarationStringy<mark class="modifier">private </mark>Optional&lt;ParserResult&gt; <mark class="method">fetch</mark>(String fetchCommand)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeOptional<ParserResult>*fetch2z
1java.lang.String.contains(java.lang.CharSequence)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎ4 Î(<2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏ Ï(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÏ, Ï(02v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ Ì(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÌ, Ì(02c
java.util.Optional.empty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÓ Ó(!2q
(java.lang.String.split(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ& Ò(+2è
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˆ# ˆ(=2ã
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜# ˜(92l
#java.util.stream.Stream.findFirst()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˙@ ˙(I2ê
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘@ ˘(F2f
java.util.Collection.stream()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯@ ¯(F2|
3java.lang.String.equalsIgnoreCase(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘d ˘(t2w
.org.jabref.logic.importer.WebFetcher.getName()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘Z ˘(a2e
java.util.Optional.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˚ ˚(#2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸ ¸(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸, ¸(02v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛ ˛(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˛, ˛(02ã
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˇ ˇ(2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˇ3 ˇ(:2w
.org.jabref.logic.importer.WebFetcher.getName()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˇJ ˇ(Q2c
java.util.Optional.empty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÅ Å(!2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ É(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉ, É(02t
+java.io.PrintStream.print(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ Ñ(2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÑ* Ñ(.2ï
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ? Ü(L2a
java.util.Optional.get()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ9 Ü(<2a
java.util.List.isEmpty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaá á(#2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaà à(&2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaà; à(?2c
java.util.Optional.empty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaâ$ â()2v
-java.io.PrintStream.println(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã ã(&2ó
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã; ã(?2f
java.lang.String.valueOf(int)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaã\ ã(c2^
java.util.List.size()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaãl ã(p2a
java.util.Optional.of(T)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå$ å(&2c
java.util.Optional.empty()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaê  ê(%2≥
jorg.jabref.logic.importer.ParserResult.ParserResult(java.util.Collection<org.jabref.model.entry.BibEntry>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå+ å(72é
Eorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)!fetchCommandCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎ Î(2é
Eorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)!fetchCommandCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÎ' Î(32é
Eorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)!fetchCommandCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ Ò(%2ï
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?split@753.17:753.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÚ Ú(2ï
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?split@753.17:753.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ Û(2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˆ ˆ("2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜ ˜("2ò
Oorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetchers@757.32:757.40CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯7 ¯(?2ó
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetcher@761.71:761.78CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘R ˘(Y2ñ
Morg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?engine@754.15:754.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘u ˘({2ü
Vorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?selectedFetcher@760.37:760.52CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˚ ˚(2ñ
Morg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?engine@754.15:754.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¸P ¸(V2ò
Oorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetchers@757.32:757.40CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˇ ˇ(2ó
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetcher@767.29:767.36CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˇB ˇ(I2ï
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?query@755.15:755.20CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉZ É(_2ñ
Morg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?engine@754.15:754.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÉa É(g2ü
Vorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?selectedFetcher@760.37:760.52CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ) Ü(82ï
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?query@755.15:755.20CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜM Ü(R2ó
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?matches@774.31:774.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaá á(2ó
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?matches@774.31:774.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaãd ã(k2ó
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?matches@774.31:774.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaå8 å(?2|
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè è(2ë
Horg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?e@782.38:782.39CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaè5 è(62ì
Eorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)!fetchCommand	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ0 Í(<2ú
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?split@753.17:753.22DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ Ò(2ù
Morg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?engine@754.15:754.21DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÚ Ú(2ú
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?query@755.15:755.20DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ Û(2ü
Oorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetchers@757.32:757.40DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaı  ı((2¶
Vorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?selectedFetcher@760.37:760.52DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯% ¯(42û
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?matches@774.31:774.38DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ Ü(&2û
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetcher@761.71:761.78DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘G ˘(N2û
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetcher@767.29:767.36DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˇ ˇ($2ò
Horg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?e@782.38:782.39DECLARATION?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé& é('2b
java.util.OptionalRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ Í(2
&org.jabref.logic.importer.ParserResultRETURN_TYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ Í(!¢
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?split@753.17:753.22VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ Ò("
typeString"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>String[] <mark class="class-field">split</mark> = fetchCommand.split(":")*split2[
java.lang.String[]TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ Ò(2q
(java.lang.String.split(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ& Ò(+2é
Eorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)!fetchCommandCALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÒ Ò(%¶
Morg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?engine@754.15:754.21VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÚ Ú("
typeString"
isFinalfalse"m
declarationStringX<mark class="modifier"> </mark>String <mark class="class-field">engine</mark> = split[0]*engine2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÚ Ú(2ï
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?split@753.17:753.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÚ Ú(£
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?query@755.15:755.20VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ Û("
typeString"
isFinalfalse"l
declarationStringW<mark class="modifier"> </mark>String <mark class="class-field">query</mark> = split[1]*query2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ Û(2ï
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?split@753.17:753.22CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÛ Û(Å

Oorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetchers@757.32:757.40VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaı  ı(("
typeSet<SearchBasedFetcher>"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>Set<SearchBasedFetcher> <mark class="class-field">fetchers</mark> = WebFetchers.getSearchBasedFetchers(preferencesService.getImportFormatPreferences()<mark class="modifier">,</mark> preferencesService.getImporterPreferences())*fetchers2V
java.util.SetTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaı ı(2~
,org.jabref.logic.importer.SearchBasedFetcherTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaı ı(2è
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˆ# ˆ(=2ã
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜# ˜(92à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˆ ˆ("2à
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˜ ˜("⁄
Vorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?selectedFetcher@760.37:760.52VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯% ¯(4"$
typeOptional<SearchBasedFetcher>"
isFinalfalse"‡
declarationString <mark class="modifier"> </mark>Optional<SearchBasedFetcher> <mark class="class-field">selectedFetcher</mark> = fetchers.stream().filter(fetcher -> fetcher.getName().equalsIgnoreCase(engine)).findFirst()*selectedFetcher2[
java.util.OptionalTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯ ¯(2~
,org.jabref.logic.importer.SearchBasedFetcherTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯ ¯(#2l
#java.util.stream.Stream.findFirst()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˙@ ˙(I2ê
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘@ ˘(F2f
java.util.Collection.stream()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯@ ¯(F2|
3java.lang.String.equalsIgnoreCase(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘d ˘(t2w
.org.jabref.logic.importer.WebFetcher.getName()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘Z ˘(a2ò
Oorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetchers@757.32:757.40CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java¯7 ¯(?2ó
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetcher@761.71:761.78CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘R ˘(Y2ñ
Morg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?engine@754.15:754.21CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘u ˘({Î
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?matches@774.31:774.38VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ Ü(&"
typeList<BibEntry>"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">matches</mark> = selectedFetcher.get().performSearch(query)*matches2W
java.util.ListTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ Ü(2q
org.jabref.model.entry.BibEntryTYPE_ARGUMENT?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ Ü(2ï
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ? Ü(L2a
java.util.Optional.get()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ9 Ü(<2ü
Vorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?selectedFetcher@760.37:760.52CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜ) Ü(82ï
Lorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?query@755.15:755.20CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÜM Ü(R»
Eorg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)!fetchCommand	PARAMETER?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ0 Í(<"
typeString"
isFinalfalse"(
declarationStringString fetchCommand*fetchCommand2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaÍ) Í(/Â
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetcher@761.71:761.78VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.java˘G ˘(N"
type"
isFinalfalse"
declarationString fetcher*fetcher2TYPEÂ
Norg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?fetcher@767.29:767.36VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaˇ ˇ($"
type"
isFinalfalse"
declarationString fetcher*fetcher2TYPE‚
Horg.jabref.cli.ArgumentProcessor.fetch(java.lang.String)?e@782.38:782.39VARIABLE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé& é('"
typeFetcherException"
isFinalfalse"'
declarationStringFetcherException e*e2s
*org.jabref.logic.importer.FetcherExceptionTYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaé é(%≠
1org.jabref.cli.ArgumentProcessor.shouldShutDown()METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï ï(!"
isFinalfalse"å
declarationStringw<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">shouldShutDown</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*shouldShutDown2p
'org.jabref.cli.JabRefCLI.isDisableGui()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ ñ(2q
(org.jabref.cli.JabRefCLI.isShowVersion()CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ) ñ(62y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ ñ(2y
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ% ñ((2
6org.jabref.cli.ArgumentProcessor?guiNeeded@78.20:78.29CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javañ= ñ(F2W
booleanRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaï ï(≈
0org.jabref.cli.ArgumentProcessor.getUiCommands()METHOD?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaô ô(("
isFinalfalse"{
declarationStringf<mark class="modifier">public </mark>List&lt;UiCommand&gt; <mark class="method">getUiCommands</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<UiCommand>*getUiCommands2Ä
7org.jabref.cli.ArgumentProcessor?uiCommands@79.34:79.44CALL?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaö ö(2T
ListRETURN_TYPE?
3src\main\java\org\jabref\cli\ArgumentProcessor.javaô ô(å
3org.jabref.cli.ArgumentProcessor?LOGGER@66.32:66.38VALUE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaB  B(&"
isFinaltrue"
typeLogger"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(ArgumentProcessor.class);"
isStatictrue"
accessprivate*LOGGER2W
org.slf4j.LoggerTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaB B(∏
0org.jabref.cli.ArgumentProcessor?cli@70.28:70.31VALUE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaF F("
isFinaltrue"
type	JabRefCLI"ç
declarationStringx<mark class="modifier">private </mark><mark class="modifier">final </mark>JabRefCLI <mark class="class-field">cli</mark>"
isStaticfalse"
accessprivate*cli2_
org.jabref.cli.JabRefCLITYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaF F(”
8org.jabref.cli.ArgumentProcessor?startupMode@72.23:72.34VALUE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaH H(""
isFinaltrue"
typeMode"ê
declarationString{<mark class="modifier">private </mark><mark class="modifier">final </mark>Mode <mark class="class-field">startupMode</mark>"
isStaticfalse"
accessprivate*startupMode2l
%org.jabref.cli.ArgumentProcessor.ModeTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaH H(â
?org.jabref.cli.ArgumentProcessor?preferencesService@74.37:74.55VALUE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaJ% J(7"
isFinaltrue"
typePreferencesService"¶
declarationStringê<mark class="modifier">private </mark><mark class="modifier">final </mark>PreferencesService <mark class="class-field">preferencesService</mark>"
isStaticfalse"
accessprivate*preferencesService2p
)org.jabref.preferences.PreferencesServiceTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaJ J($Ç
>org.jabref.cli.ArgumentProcessor?fileUpdateMonitor@75.36:75.53VALUE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaK$ K(5"
isFinaltrue"
typeFileUpdateMonitor"§
declarationStringé<mark class="modifier">private </mark><mark class="modifier">final </mark>FileUpdateMonitor <mark class="class-field">fileUpdateMonitor</mark>"
isStaticfalse"
accessprivate*fileUpdateMonitor2n
'org.jabref.model.util.FileUpdateMonitorTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaK K(#å
>org.jabref.cli.ArgumentProcessor?entryTypesManager@76.39:76.56VALUE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaL' L(8"
isFinaltrue"
typeBibEntryTypesManager"ß
declarationStringë<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntryTypesManager <mark class="class-field">entryTypesManager</mark>"
isStaticfalse"
accessprivate*entryTypesManager2r
+org.jabref.model.entry.BibEntryTypesManagerTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaL L(&≥
6org.jabref.cli.ArgumentProcessor?guiNeeded@78.20:78.29VARIABLE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaN N("
isFinalfalse"
typeboolean"ã
declarationStringv<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="class-field">guiNeeded</mark>"
isStaticfalse"
accessprivate*	guiNeeded2N
booleanTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaN N(√
7org.jabref.cli.ArgumentProcessor?uiCommands@79.34:79.44VALUE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaO" O(,"
isFinaltrue"
typeList<UiCommand>"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">final </mark>List<UiCommand> <mark class="class-field">uiCommands</mark> = new ArrayList<>();"
isStaticfalse"
accessprivate*
uiCommands2K
ListTYPE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaO O(2f
java.util.ArrayList.ArrayList()CALL=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaO3 O(>∑
%org.jabref.cli.ArgumentProcessor.ModeENUM=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaD D("<
declarationString'<mark class="modifier">enum </mark>Mode*Mode2Å
3org.jabref.cli.ArgumentProcessor.Mode?INITIAL_STARTDECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaD D($2Ä
2org.jabref.cli.ArgumentProcessor.Mode?REMOTE_STARTDECLARATION=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaD& D(2ò
3org.jabref.cli.ArgumentProcessor.Mode?INITIAL_STARTVALUE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaD D($"
enumtrue*INITIAL_STARTñ
2org.jabref.cli.ArgumentProcessor.Mode?REMOTE_STARTVALUE=
3src\main\java\org\jabref\cli\ArgumentProcessor.javaD& D(2"
enumtrue*REMOTE_START