
+src\main\java\org\jabref\cli\JabRefCLI.javaó.
org.jabref.cli.JabRefCLICLASS5
+src\main\java\org\jabref\cli\JabRefCLI.java ("
packageorg.jabref.cli"
isFinalfalse"
inner classfalse"

isAbstractfalse"g
declarationStringR<mark class="modifier">public </mark><mark class="modifier">class </mark>JabRefCLI"
accesspublic*	JabRefCLI2|
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java (2w
1org.jabref.cli.JabRefCLI.getExportMatchesSyntax()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java& &(/2g
!org.jabref.cli.JabRefCLI.isHelp()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java- -(2n
(org.jabref.cli.JabRefCLI.isShowVersion()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java1 1( 2h
"org.jabref.cli.JabRefCLI.isBlank()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java5 5(2m
'org.jabref.cli.JabRefCLI.isDisableGui()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java9 9(2t
.org.jabref.cli.JabRefCLI.isPreferencesExport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java= =(&2u
/org.jabref.cli.JabRefCLI.getPreferencesExport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javaA A(&2t
.org.jabref.cli.JabRefCLI.isPreferencesImport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javaE E(&2u
/org.jabref.cli.JabRefCLI.getPreferencesImport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javaI I(&2s
-org.jabref.cli.JabRefCLI.isPreferencesReset()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javaM M(%2t
.org.jabref.cli.JabRefCLI.getPreferencesReset()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javaQ Q(%2m
'org.jabref.cli.JabRefCLI.isFileExport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javaU U(2n
(org.jabref.cli.JabRefCLI.getFileExport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javaY Y(2o
)org.jabref.cli.JabRefCLI.isBibtexImport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java] ](!2p
*org.jabref.cli.JabRefCLI.getBibtexImport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javaa a(!2m
'org.jabref.cli.JabRefCLI.isFileImport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javae e(2n
(org.jabref.cli.JabRefCLI.getFileImport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javai i(2l
&org.jabref.cli.JabRefCLI.isAuxImport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javam m(2m
'org.jabref.cli.JabRefCLI.getAuxImport()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javaq q(2s
-org.jabref.cli.JabRefCLI.isImportToOpenBase()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javau u(%2t
.org.jabref.cli.JabRefCLI.getImportToOpenBase()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.javay y(%2o
)org.jabref.cli.JabRefCLI.isDebugLogging()DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java} }(!2r
*org.jabref.cli.JabRefCLI.isFetcherEngine()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaÅ Å("2s
+org.jabref.cli.JabRefCLI.getFetcherEngine()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaÖ Ö("2r
*org.jabref.cli.JabRefCLI.isExportMatches()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaâ â("2s
+org.jabref.cli.JabRefCLI.getExportMatches()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaç ç("2y
1org.jabref.cli.JabRefCLI.isGenerateCitationKeys()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaë ë()2~
6org.jabref.cli.JabRefCLI.isAutomaticallySetFileLinks()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaï ï(.2r
*org.jabref.cli.JabRefCLI.isWriteXMPtoPdf()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaô ô("2w
/org.jabref.cli.JabRefCLI.isEmbeddBibfileInPdf()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaù ù('2w
/org.jabref.cli.JabRefCLI.isWriteMetadatatoPdf()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java° °('2x
0org.jabref.cli.JabRefCLI.getWriteMetadatatoPdf()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java• •('2o
'org.jabref.cli.JabRefCLI.getJumpToKey()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java´ ´(2n
&org.jabref.cli.JabRefCLI.isJumpToKey()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaØ Ø(2m
%org.jabref.cli.JabRefCLI.getOptions()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java≥ ≥(%2q
)org.jabref.cli.JabRefCLI.displayVersion()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaµ µ(2ñ
Norg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaπ π(!2q
)org.jabref.cli.JabRefCLI.getVersionInfo()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java◊ ◊(!2n
&org.jabref.cli.JabRefCLI.getLeftOver()DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java€ €(#2∑
oorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaﬂ ﬂ(,2ñ
Norg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java¯ ¯(*2p
*org.jabref.cli.JabRefCLI?WIDTH@24.29:24.34DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java ("2~
8org.jabref.cli.JabRefCLI?WRAPPED_LINE_PREFIX@25.32:25.51DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java  (32Å
;org.jabref.cli.JabRefCLI?STRING_TABLE_DELIMITER@26.32:26.54DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java  (62m
'org.jabref.cli.JabRefCLI?cl@28.30:28.32DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java ( 2s
-org.jabref.cli.JabRefCLI?leftOver@29.31:29.39DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java ('Î

6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CONSTRUCTOR5
+src\main\java\org\jabref\cli\JabRefCLI.java ("¡
declarationString´<mark class="modifier">public </mark><mark class="method">JabRefCLI</mark>(String[] args)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException*	JabRefCLI2d
%org.jabref.cli.JabRefCLI.getOptions()CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java   ($2â
Jorg.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])?options@32.16:32.23CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java", "(32z
;org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])!argsCALL5
+src\main\java\org\jabref\cli\JabRefCLI.java"5 "(92f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java# #(2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java" "(2l
-org.jabref.cli.JabRefCLI?leftOver@29.31:29.39CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java# #(2
;org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])!args	PARAMETER5
+src\main\java\org\jabref\cli\JabRefCLI.java ("2ê
Jorg.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])?options@32.16:32.23DECLARATION5
+src\main\java\org\jabref\cli\JabRefCLI.java   (2^
org.jabref.cli.JabRefCLIRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java+ (9Û
Jorg.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])?options@32.16:32.23VARIABLE5
+src\main\java\org\jabref\cli\JabRefCLI.java   ("
typeOptions"
isFinalfalse"s
declarationString^<mark class="modifier"> </mark>Options <mark class="class-field">options</mark> = getOptions()*options2]
org.apache.commons.cli.OptionsTYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java   (2d
%org.jabref.cli.JabRefCLI.getOptions()CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java   ($†
;org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])!args	PARAMETER5
+src\main\java\org\jabref\cli\JabRefCLI.java (""
typeString[]"
isFinalfalse""
declarationStringString[] args*args2Q
java.lang.String[]TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java (˚
1org.jabref.cli.JabRefCLI.getExportMatchesSyntax()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.java& &(/"
isFinalfalse"õ
declarationStringÖ<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">getExportMatchesSyntax</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*getExportMatchesSyntax2n
/java.lang.String.formatted(java.lang.Object...)CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java'3 '(<2ç
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java( ((!2ç
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java) )(!2ç
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java* *(!2V
java.lang.StringRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java& &(Ö
!org.jabref.cli.JabRefCLI.isHelp()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.java- -("
isFinalfalse"Ñ
declarationStringo<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isHelp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isHelp2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java. .(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java- -(ö
(org.jabref.cli.JabRefCLI.isShowVersion()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.java1 1( "
isFinalfalse"ã
declarationStringv<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isShowVersion</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isShowVersion2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java2 2(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java1 1(à
"org.jabref.cli.JabRefCLI.isBlank()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.java5 5("
isFinalfalse"Ö
declarationStringp<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isBlank</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isBlank2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java6 6(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java5 5(ó
'org.jabref.cli.JabRefCLI.isDisableGui()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.java9 9("
isFinalfalse"ä
declarationStringu<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isDisableGui</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isDisableGui2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java: :(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java9 9(¨
.org.jabref.cli.JabRefCLI.isPreferencesExport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.java= =(&"
isFinalfalse"ë
declarationString|<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isPreferencesExport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isPreferencesExport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java> >(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java= =(ó
/org.jabref.cli.JabRefCLI.getPreferencesExport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javaA A(&"
isFinalfalse"s
declarationString^<mark class="modifier">public </mark>String <mark class="method">getPreferencesExport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getPreferencesExport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaB B(2V
java.lang.StringRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javaA A(¨
.org.jabref.cli.JabRefCLI.isPreferencesImport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javaE E(&"
isFinalfalse"ë
declarationString|<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isPreferencesImport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isPreferencesImport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaF F(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javaE E(ó
/org.jabref.cli.JabRefCLI.getPreferencesImport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javaI I(&"
isFinalfalse"s
declarationString^<mark class="modifier">public </mark>String <mark class="method">getPreferencesImport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getPreferencesImport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaJ J(2V
java.lang.StringRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javaI I(©
-org.jabref.cli.JabRefCLI.isPreferencesReset()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javaM M(%"
isFinalfalse"ê
declarationString{<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isPreferencesReset</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isPreferencesReset2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaN N(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javaM M(î
.org.jabref.cli.JabRefCLI.getPreferencesReset()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javaQ Q(%"
isFinalfalse"r
declarationString]<mark class="modifier">public </mark>String <mark class="method">getPreferencesReset</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getPreferencesReset2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaR R(2V
java.lang.StringRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javaQ Q(ó
'org.jabref.cli.JabRefCLI.isFileExport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javaU U("
isFinalfalse"ä
declarationStringu<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isFileExport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isFileExport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaV V(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javaU U(Ç
(org.jabref.cli.JabRefCLI.getFileExport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javaY Y("
isFinalfalse"l
declarationStringW<mark class="modifier">public </mark>String <mark class="method">getFileExport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getFileExport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaZ Z(2V
java.lang.StringRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javaY Y(ù
)org.jabref.cli.JabRefCLI.isBibtexImport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.java] ](!"
isFinalfalse"å
declarationStringw<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isBibtexImport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isBibtexImport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java^ ^(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java] ](à
*org.jabref.cli.JabRefCLI.getBibtexImport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javaa a(!"
isFinalfalse"n
declarationStringY<mark class="modifier">public </mark>String <mark class="method">getBibtexImport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getBibtexImport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javab b(2V
java.lang.StringRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javaa a(ó
'org.jabref.cli.JabRefCLI.isFileImport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javae e("
isFinalfalse"ä
declarationStringu<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isFileImport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isFileImport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaf f(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javae e(Ç
(org.jabref.cli.JabRefCLI.getFileImport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javai i("
isFinalfalse"l
declarationStringW<mark class="modifier">public </mark>String <mark class="method">getFileImport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getFileImport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaj j(2V
java.lang.StringRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javai i(î
&org.jabref.cli.JabRefCLI.isAuxImport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javam m("
isFinalfalse"â
declarationStringt<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isAuxImport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isAuxImport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javan n(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javam m(ˇ
'org.jabref.cli.JabRefCLI.getAuxImport()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javaq q("
isFinalfalse"k
declarationStringV<mark class="modifier">public </mark>String <mark class="method">getAuxImport</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAuxImport2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javar r(2V
java.lang.StringRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javaq q(©
-org.jabref.cli.JabRefCLI.isImportToOpenBase()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javau u(%"
isFinalfalse"ê
declarationString{<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isImportToOpenBase</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isImportToOpenBase2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javav v(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javau u(î
.org.jabref.cli.JabRefCLI.getImportToOpenBase()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.javay y(%"
isFinalfalse"r
declarationString]<mark class="modifier">public </mark>String <mark class="method">getImportToOpenBase</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getImportToOpenBase2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.javaz z(2V
java.lang.StringRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.javay y(ù
)org.jabref.cli.JabRefCLI.isDebugLogging()METHOD5
+src\main\java\org\jabref\cli\JabRefCLI.java} }(!"
isFinalfalse"å
declarationStringw<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isDebugLogging</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isDebugLogging2f
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL5
+src\main\java\org\jabref\cli\JabRefCLI.java~ ~(2M
booleanRETURN_TYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java} }(¶
*org.jabref.cli.JabRefCLI.isFetcherEngine()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaÅ Å(""
isFinalfalse"ç
declarationStringx<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isFetcherEngine</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isFetcherEngine2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÇ Ç(2O
booleanRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaÅ Å(ë
+org.jabref.cli.JabRefCLI.getFetcherEngine()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaÖ Ö(""
isFinalfalse"o
declarationStringZ<mark class="modifier">public </mark>String <mark class="method">getFetcherEngine</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getFetcherEngine2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÜ Ü(2X
java.lang.StringRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaÖ Ö(¶
*org.jabref.cli.JabRefCLI.isExportMatches()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaâ â(""
isFinalfalse"ç
declarationStringx<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isExportMatches</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isExportMatches2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaä ä(2O
booleanRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaâ â(ë
+org.jabref.cli.JabRefCLI.getExportMatches()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaç ç(""
isFinalfalse"o
declarationStringZ<mark class="modifier">public </mark>String <mark class="method">getExportMatches</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getExportMatches2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaé é(2X
java.lang.StringRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaç ç(ª
1org.jabref.cli.JabRefCLI.isGenerateCitationKeys()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaë ë()"
isFinalfalse"î
declarationString<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isGenerateCitationKeys</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isGenerateCitationKeys2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaí í(2O
booleanRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaë ë(À
6org.jabref.cli.JabRefCLI.isAutomaticallySetFileLinks()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaï ï(."
isFinalfalse"ö
declarationStringÑ<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isAutomaticallySetFileLinks</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isAutomaticallySetFileLinks2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javañ ñ(2O
booleanRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaï ï(¶
*org.jabref.cli.JabRefCLI.isWriteXMPtoPdf()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaô ô(""
isFinalfalse"ç
declarationStringx<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isWriteXMPtoPdf</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isWriteXMPtoPdf2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaö ö(2O
booleanRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaô ô(µ
/org.jabref.cli.JabRefCLI.isEmbeddBibfileInPdf()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaù ù('"
isFinalfalse"í
declarationString}<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isEmbeddBibfileInPdf</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isEmbeddBibfileInPdf2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaû û(2O
booleanRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaù ù(µ
/org.jabref.cli.JabRefCLI.isWriteMetadatatoPdf()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.java° °('"
isFinalfalse"í
declarationString}<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isWriteMetadatatoPdf</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isWriteMetadatatoPdf2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¢ ¢(2O
booleanRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java° °(≤
0org.jabref.cli.JabRefCLI.getWriteMetadatatoPdf()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.java• •('"
isFinalfalse"t
declarationString_<mark class="modifier">public </mark>String <mark class="method">getWriteMetadatatoPdf</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getWriteMetadatatoPdf2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¶ ¶(2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¶4 ¶(62h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaß ß(2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaß0 ß(22h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java® ®(2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java®= ®(?2X
java.lang.StringRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java• •(Ö
'org.jabref.cli.JabRefCLI.getJumpToKey()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.java´ ´("
isFinalfalse"k
declarationStringV<mark class="modifier">public </mark>String <mark class="method">getJumpToKey</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getJumpToKey2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¨ ¨(2X
java.lang.StringRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java´ ´(ö
&org.jabref.cli.JabRefCLI.isJumpToKey()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaØ Ø("
isFinalfalse"â
declarationStringt<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isJumpToKey</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isJumpToKey2h
'org.jabref.cli.JabRefCLI?cl@28.30:28.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java∞ ∞(2O
booleanRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaØ Ø(˙?
%org.jabref.cli.JabRefCLI.getOptions()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.java≥ ≥(%"
isFinalfalse"ê
declarationString{<mark class="modifier">private </mark><mark class="modifier">static </mark>Options <mark class="method">getOptions</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeOptions*
getOptions2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java∑; ∑(?2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java∏< ∏(@2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaπS π(W2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java∫K ∫(O2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaª< ª(@2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaº> º(B2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaΩ= Ω(A2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¿? ¿(C2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈! ≈(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈8 ≈(<2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÕ# Õ('2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java’! ’(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java’8 ’(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java›! ›(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java›8 ›(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÂ! Â(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÂ8 Â(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÌ! Ì(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÌ8 Ì(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaı! ı(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaı8 ı(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˝! ˝(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˝8 ˝(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÖ! Ö(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÖ8 Ö(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaç! ç(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaç8 ç(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaï! ï(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaï8 ï(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaù! ù(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaù8 ù(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java•! •(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java•8 •(<2p
/java.lang.String.formatted(java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≠! ≠(*2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≠8 ≠(<2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java∑ ∑(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java∏ ∏(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaπ π(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java∫ ∫(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaª ª(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaº º(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaΩ Ω(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¿ ¿(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬ ¬(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java   (2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java“ “(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java⁄ ⁄(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‚ ‚(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÍ Í(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÚ Ú(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˙ ˙(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÇ Ç(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaä ä(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaí í(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaö ö(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¢ ¢(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java™ ™(2|
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≤ ≤(2É
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java¥ ¥(2f
org.apache.commons.cli.OptionsRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java≥ ≥(É
;org.jabref.cli.JabRefCLI.getOptions()?options@180.16:180.23VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java¥ ¥("
typeOptions"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>Options <mark class="class-field">options</mark> = new Options()*options2_
org.apache.commons.cli.OptionsTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java¥ ¥(å
)org.jabref.cli.JabRefCLI.displayVersion()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaµ µ("
isFinalfalse"â
declarationStringt<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">displayVersion</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*displayVersion2n
-java.io.PrintStream.println(java.lang.String)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java∂ ∂(2j
)org.jabref.cli.JabRefCLI.getVersionInfo()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java∂ ∂()2L
voidRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaµ µ(ñH
Norg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaπ π(!"
isFinalfalse"–
declarationString∫<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">printUsage</mark>(PreferencesService preferencesService)"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*
printUsage2É
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaΩ# Ω(92á
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaæ# æ(=2a
 java.util.stream.Stream.toList()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java√ √(2ë
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬ ¬(2^
java.util.Collection.stream()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¡$ ¡(*2Ä
?org.jabref.logic.importer.ImportFormatReader.getImportFormats()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¡ ¡(!2m
,org.jabref.logic.importer.Importer.getName()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬1 ¬(82k
*org.jabref.logic.importer.Importer.getId()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬C ¬(H2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaƒ1 ƒ(52
>java.lang.String.format(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈* ≈(02∞
oorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈R ≈(b2 
àorg.jabref.logic.exporter.ExporterFactory.create(org.jabref.preferences.PreferencesService, org.jabref.model.entry.BibEntryTypesManager)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java«: «(@2a
 java.util.stream.Stream.toList()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÕ Õ(2ë
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ Ã(2^
java.util.Collection.stream()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÀ  À(&2y
8org.jabref.logic.exporter.ExporterFactory.getExporters()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÀ À(2m
,org.jabref.logic.exporter.Exporter.getName()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ1 Ã(82k
*org.jabref.logic.exporter.Exporter.getId()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃC Ã(H2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaŒ. Œ(22
>java.lang.String.format(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaœ' œ(-2∞
oorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaœL œ(\2f
%org.jabref.cli.JabRefCLI.getOptions()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‘Y ‘(c2Ü
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaø ø(*2¢
aorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)!preferencesServiceCALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaΩ Ω("2¢
aorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)!preferencesServiceCALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaæ æ("2∞
oorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatReader@316.27:316.45CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¿3 ¿(E2§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@322.21:322.27CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬* ¬(02§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@322.21:322.27CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬< ¬(B2∞
oorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatsIntro@324.15:324.33CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈> ≈(P2´
jorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormats@320.35:320.48CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈c ≈(p2¢
aorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)!preferencesServiceCALL7
+src\main\java\org\jabref\cli\JabRefCLI.java» »("2≠
lorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?exporterFactory@327.24:327.39CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java 3  (B2§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@332.21:332.27CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ* Ã(02§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@332.21:332.27CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ< Ã(B2≠
lorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?outFormatsIntro@334.15:334.30CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaœ; œ(J2´
jorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?exportFormats@330.35:330.48CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaœ] œ(j2Ø
norg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatsList@325.15:325.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java— —(02¨
korg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?outFormatsList@335.15:335.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java—3 —(A2ß
forg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?formatter@339.22:339.31CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‘ ‘(2k
*org.jabref.cli.JabRefCLI?WIDTH@24.29:24.34CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‘ ‘(!2§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?header@314.15:314.21CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‘Q ‘(W2§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?footer@337.15:337.21CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‘g ‘(m2ß
aorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)!preferencesService	PARAMETER7
+src\main\java\org\jabref\cli\JabRefCLI.javaπ5 π(G2´
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?header@314.15:314.21DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java∫ ∫(2∑
oorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatReader@316.27:316.45DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaº º(-2≤
jorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormats@320.35:320.48DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java¿# ¿(02∑
oorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatsIntro@324.15:324.33DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaƒ ƒ(!2∂
norg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatsList@325.15:325.32DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java≈ ≈( 2¥
lorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?exporterFactory@327.24:327.39DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java« «('2≤
jorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?exportFormats@330.35:330.48DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java #  (02¥
lorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?outFormatsIntro@334.15:334.30DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaŒ Œ(2≥
korg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?outFormatsList@335.15:335.29DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaœ œ(2´
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?footer@337.15:337.21DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java— —(2Æ
forg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?formatter@339.22:339.31DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java” ”(2´
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@322.21:322.27DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java¬ ¬(2´
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@332.21:332.27DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ Ã(2L
voidRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaπ π(é
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?header@314.15:314.21VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java∫ ∫("
typeString"
isFinalfalse"g
declarationStringR<mark class="modifier"> </mark>String <mark class="class-field">header</mark> = ""*header2Q
java.lang.StringTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java∫ ∫(ó
oorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatReader@316.27:316.45VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.javaº º(-"
typeImportFormatReader"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>ImportFormatReader <mark class="class-field">importFormatReader</mark> = new ImportFormatReader(preferencesService.getImporterPreferences()<mark class="modifier">,</mark> preferencesService.getImportFormatPreferences()<mark class="modifier">,</mark> new DummyFileUpdateMonitor())*importFormatReader2m
,org.jabref.logic.importer.ImportFormatReaderTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaº º(2É
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaΩ# Ω(92á
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaæ# æ(=2Ü
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaø ø(*2¢
aorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)!preferencesServiceCALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaΩ Ω("2¢
aorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)!preferencesServiceCALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaæ æ("•
jorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormats@320.35:320.48VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java¿# ¿(0""
typeList<Pair<String, String>>"
isFinalfalse"í
declarationString¸<mark class="modifier"> </mark>List<Pair<String, String>> <mark class="class-field">importFormats</mark> = importFormatReader.getImportFormats().stream().map(format -> new Pair<>(format.getName()<mark class="modifier">,</mark> format.getId())).toList()*importFormats2O
java.util.ListTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java¿ ¿(2Z
javafx.util.PairTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.java¿ ¿(2Z
java.lang.StringTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.java¿ ¿(2Z
java.lang.StringTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.java¿ ¿( 2a
 java.util.stream.Stream.toList()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java√ √(2ë
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬ ¬(2^
java.util.Collection.stream()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¡$ ¡(*2Ä
?org.jabref.logic.importer.ImportFormatReader.getImportFormats()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¡ ¡(!2m
,org.jabref.logic.importer.Importer.getName()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬1 ¬(82k
*org.jabref.logic.importer.Importer.getId()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬C ¬(H2∞
oorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatReader@316.27:316.45CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¿3 ¿(E2§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@322.21:322.27CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬* ¬(02§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@322.21:322.27CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¬< ¬(BÒ
oorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatsIntro@324.15:324.33VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.javaƒ ƒ(!"
typeString"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>String <mark class="class-field">importFormatsIntro</mark> = Localization.lang("Available import formats")*importFormatsIntro2Q
java.lang.StringTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaƒ ƒ(2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaƒ1 ƒ(5±	
norg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatsList@325.15:325.32VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java≈ ≈( "
typeString"
isFinalfalse"ﬁ
declarationString»<mark class="modifier"> </mark>String <mark class="class-field">importFormatsList</mark> = String.format("%s:%n%s%n"<mark class="modifier">,</mark> importFormatsIntro, alignStringTable(importFormats))*importFormatsList2Q
java.lang.StringTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java≈ ≈(2
>java.lang.String.format(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈* ≈(02∞
oorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈R ≈(b2∞
oorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatsIntro@324.15:324.33CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈> ≈(P2´
jorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormats@320.35:320.48CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java≈c ≈(pã
lorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?exporterFactory@327.24:327.39VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java« «('"
typeExporterFactory"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>ExporterFactory <mark class="class-field">exporterFactory</mark> = ExporterFactory.create(preferencesService, Globals.entryTypesManager)*exporterFactory2j
)org.jabref.logic.exporter.ExporterFactoryTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java« «(2 
àorg.jabref.logic.exporter.ExporterFactory.create(org.jabref.preferences.PreferencesService, org.jabref.model.entry.BibEntryTypesManager)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java«: «(@2¢
aorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)!preferencesServiceCALL7
+src\main\java\org\jabref\cli\JabRefCLI.java» »("ì
jorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?exportFormats@330.35:330.48VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java #  (0""
typeList<Pair<String, String>>"
isFinalfalse"ã
declarationStringı<mark class="modifier"> </mark>List<Pair<String, String>> <mark class="class-field">exportFormats</mark> = exporterFactory.getExporters().stream().map(format -> new Pair<>(format.getName()<mark class="modifier">,</mark> format.getId())).toList()*exportFormats2O
java.util.ListTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java   (2Z
javafx.util.PairTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.java   (2Z
java.lang.StringTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.java   (2Z
java.lang.StringTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.java   ( 2a
 java.util.stream.Stream.toList()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÕ Õ(2ë
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ Ã(2^
java.util.Collection.stream()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÀ  À(&2y
8org.jabref.logic.exporter.ExporterFactory.getExporters()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÀ À(2m
,org.jabref.logic.exporter.Exporter.getName()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ1 Ã(82k
*org.jabref.logic.exporter.Exporter.getId()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃC Ã(H2≠
lorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?exporterFactory@327.24:327.39CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java 3  (B2§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@332.21:332.27CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ* Ã(02§
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@332.21:332.27CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ< Ã(BË
lorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?outFormatsIntro@334.15:334.30VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.javaŒ Œ("
typeString"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>String <mark class="class-field">outFormatsIntro</mark> = Localization.lang("Available export formats")*outFormatsIntro2Q
java.lang.StringTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaŒ Œ(2è
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaŒ. Œ(2¢	
korg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?outFormatsList@335.15:335.29VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.javaœ œ("
typeString"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>String <mark class="class-field">outFormatsList</mark> = String.format("%s:%n%s%n"<mark class="modifier">,</mark> outFormatsIntro, alignStringTable(exportFormats))*outFormatsList2Q
java.lang.StringTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaœ œ(2
>java.lang.String.format(java.lang.String, java.lang.Object...)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaœ' œ(-2∞
oorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaœL œ(\2≠
lorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?outFormatsIntro@334.15:334.30CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaœ; œ(J2´
jorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?exportFormats@330.35:330.48CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaœ] œ(jﬂ
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?footer@337.15:337.21VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java— —("
typeString"
isFinalfalse"÷
declarationString¿<mark class="modifier"> </mark>String <mark class="class-field">footer</mark> = '\n' + importFormatsList + outFormatsList + "\nPlease report issues at https://github.com/JabRef/jabref/issues."*footer2Q
java.lang.StringTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java— —(2Ø
norg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?importFormatsList@325.15:325.32CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java— —(02¨
korg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?outFormatsList@335.15:335.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java—3 —(AÀ
forg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?formatter@339.22:339.31VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java” ”("
typeHelpFormatter"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>HelpFormatter <mark class="class-field">formatter</mark> = new HelpFormatter()*	formatter2e
$org.apache.commons.cli.HelpFormatterTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java” ”(ë
aorg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)!preferencesService	PARAMETER7
+src\main\java\org\jabref\cli\JabRefCLI.javaπ5 π(G"
typePreferencesService"
isFinalfalse":
declarationString%PreferencesService preferencesService*preferencesService2j
)org.jabref.preferences.PreferencesServiceTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaπ" π(4
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@322.21:322.27VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java¬ ¬("
type"
isFinalfalse"
declarationString format*format2TYPE
corg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)?format@332.21:332.27VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.javaÃ Ã("
type"
isFinalfalse"
declarationString format*format2TYPE£
)org.jabref.cli.JabRefCLI.getVersionInfo()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.java◊ ◊(!"
isFinalfalse"n
declarationStringY<mark class="modifier">private </mark>String <mark class="method">getVersionInfo</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*getVersionInfo2X
java.lang.StringRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java◊ ◊(˚
&org.jabref.cli.JabRefCLI.getLeftOver()METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.java€ €(#"
isFinalfalse"v
declarationStringa<mark class="modifier">public </mark>List&lt;String&gt; <mark class="method">getLeftOver</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<String>*getLeftOver2n
-org.jabref.cli.JabRefCLI?leftOver@29.31:29.39CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‹ ‹(2V
java.util.ListRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java€ €(2a
java.lang.StringRETURN_TYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.java€ €(∞0
oorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.javaﬂ ﬂ(,"
isFinalfalse"Ä
declarationStringÍ<mark class="modifier">protected </mark><mark class="modifier">static </mark>String <mark class="method">alignStringTable</mark>(List&lt;Pair&lt;String<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt;&gt; table)"
isStatictrue"
access	protected"

isAbstractfalse"
typeString*alignStringTable2a
 java.util.stream.IntStream.max()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‰ ‰(!2é
Mjava.util.stream.Stream.mapToInt(java.util.function.ToIntFunction<? super T>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java„ „(&2^
java.util.Collection.stream()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‚ ‚($2q
0java.lang.StringBuilder.append(java.lang.String)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaË Ë(2q
0java.lang.StringBuilder.append(java.lang.String)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÎ Î(2v
5org.jabref.model.strings.StringUtil.repeatSpaces(int)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÎ! Î(-2q
0java.lang.StringBuilder.append(java.lang.String)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÌ Ì(2q
0java.lang.StringBuilder.append(java.lang.String)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÔ Ô(2c
"java.lang.StringBuilder.toString()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÚ Ú(2h
'java.lang.StringBuilder.StringBuilder()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‡ ‡(,2∂
uorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)!tableCALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‚ ‚(2ƒ
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@355.39:355.43CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java„J „(N2∂
uorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)!tableCALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÊ) Ê(.2…
áorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?maxLength@354.12:354.21CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÁ& Á(/2ƒ
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@358.34:358.38CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÁ2 Á(62¬
Äorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?sb@352.22:352.24CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaË Ë(2y
8org.jabref.cli.JabRefCLI?WRAPPED_LINE_PREFIX@25.32:25.51CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaË Ë()2¬
Äorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?sb@352.22:352.24CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÈ È(2ƒ
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@358.34:358.38CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÈ È(2¬
Äorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?sb@352.22:352.24CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÎ Î(2«
Öorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?padding@359.16:359.23CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÎ. Î(52¬
Äorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?sb@352.22:352.24CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÌ Ì(2|
;org.jabref.cli.JabRefCLI?STRING_TABLE_DELIMITER@26.32:26.54CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÌ Ì(,2¬
Äorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?sb@352.22:352.24CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÓ Ó(2ƒ
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@358.34:358.38CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÓ Ó(2¬
Äorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?sb@352.22:352.24CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÔ Ô(2¬
Äorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?sb@352.22:352.24CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÚ Ú(2ª
uorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)!table	PARAMETER7
+src\main\java\org\jabref\cli\JabRefCLI.javaﬂH ﬂ(M2…
Äorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?sb@352.22:352.24DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java‡ ‡(2–
áorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?maxLength@354.12:354.21DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java‚ ‚(2À
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@358.34:358.38DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaÊ" Ê(&2Œ
Öorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?padding@359.16:359.23DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.javaÁ Á(2À
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@355.39:355.43DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java„' „(+2X
java.lang.StringRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaﬂ ﬂ(¥
Äorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?sb@352.22:352.24VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java‡ ‡("
typeStringBuilder"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>StringBuilder <mark class="class-field">sb</mark> = new StringBuilder()*sb2X
java.lang.StringBuilderTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java‡ ‡(2h
'java.lang.StringBuilder.StringBuilder()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‡ ‡(,Å
áorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?maxLength@354.12:354.21VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java‚ ‚("
typeint"
isFinalfalse"â
declarationStringÛ<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">maxLength</mark> = table.stream().mapToInt(pair -> Objects.requireNonNullElse(pair.getKey()<mark class="modifier">,</mark> "").length()).max().orElse(0)*	maxLength2D
intTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java‚ ‚(2b
!java.util.OptionalInt.orElse(int)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‰$ ‰(*2a
 java.util.stream.IntStream.max()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‰ ‰(!2é
Mjava.util.stream.Stream.mapToInt(java.util.function.ToIntFunction<? super T>)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java„ „(&2^
java.util.Collection.stream()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‚ ‚($2∂
uorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)!tableCALL7
+src\main\java\org\jabref\cli\JabRefCLI.java‚ ‚(2ƒ
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@355.39:355.43CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java„J „(N˘
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@358.34:358.38VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.javaÊ" Ê(&"
typePair<String, String>"
isFinalfalse"n
declarationStringY<mark class="modifier"> </mark>Pair<String, String> <mark class="class-field">pair</mark>*pair2Q
javafx.util.PairTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaÊ Ê(2Z
java.lang.StringTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.javaÊ Ê(2Z
java.lang.StringTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.javaÊ Ê( Ä
Öorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?padding@359.16:359.23VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.javaÁ Á("
typeint"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">padding</mark> = Math.max(0, maxLength - pair.getKey().length())*padding2D
intTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaÁ Á(2…
áorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?maxLength@354.12:354.21CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÁ& Á(/2ƒ
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@358.34:358.38CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÁ2 Á(6î
uorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)!table	PARAMETER7
+src\main\java\org\jabref\cli\JabRefCLI.javaﬂH ﬂ(M""
typeList<Pair<String, String>>"
isFinalfalse"5
declarationString List<Pair<String, String>> table*table2O
java.util.ListTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.javaﬂ- ﬂ(12Z
javafx.util.PairTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.javaﬂ2 ﬂ(62Z
java.lang.StringTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.javaﬂ7 ﬂ(=2Z
java.lang.StringTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.javaﬂ? ﬂ(Eå
Çorg.jabref.cli.JabRefCLI.alignStringTable(java.util.List<javafx.util.Pair<java.lang.String, java.lang.String>>)?pair@355.39:355.43VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java„' „(+"
type"
isFinalfalse"
declarationString pair*pair2TYPEç(
Norg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)METHOD7
+src\main\java\org\jabref\cli\JabRefCLI.java¯ ¯(*"
isFinalfalse"°
declarationStringã<mark class="modifier">protected </mark><mark class="modifier">static </mark>String <mark class="method">wrapStringList</mark>(List&lt;String&gt; list<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> firstLineIndentation)"
isStatictrue"
access	protected"

isAbstractfalse"
typeString*wrapStringList2i
(java.lang.AbstractStringBuilder.length()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˝ ˝( 2Z
java.lang.String.length()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˝. ˝(42q
0java.lang.StringBuilder.append(java.lang.String)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˛ ˛(2i
(java.lang.AbstractStringBuilder.length()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaˇ$ ˇ(*2q
0java.lang.StringBuilder.append(java.lang.String)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÄ Ä(2i
(java.lang.AbstractStringBuilder.length()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÅ Å(%2q
0java.lang.StringBuilder.append(java.lang.String)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÇ Ç(2q
0java.lang.StringBuilder.append(java.lang.String)CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÑ Ñ(2c
"java.lang.StringBuilder.toString()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaá á(2h
'java.lang.StringBuilder.StringBuilder()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˘$ ˘(12§
corg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)!firstLineIndentationCALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˙ ˙(-2î
Sorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)!listCALL7
+src\main\java\org\jabref\cli\JabRefCLI.java¸ ¸(2•
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˝ ˝(2¢
aorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?line@380.20:380.24CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˝) ˝(-2ß
forg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?lastBreak@378.12:378.21CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˝: ˝(C2k
*org.jabref.cli.JabRefCLI?WIDTH@24.29:24.34CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˝G ˝(L2•
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˛ ˛(2ß
forg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?lastBreak@378.12:378.21CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaˇ ˇ(2•
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaˇ ˇ(#2•
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÄ Ä(2y
8org.jabref.cli.JabRefCLI?WRAPPED_LINE_PREFIX@25.32:25.51CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÄ Ä(22•
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÅ Å(2•
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÇ Ç(2•
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÑ Ñ(2¢
aorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?line@380.20:380.24CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaÑ Ñ(2•
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29CALL7
+src\main\java\org\jabref\cli\JabRefCLI.javaá á(2ô
Sorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)!list	PARAMETER7
+src\main\java\org\jabref\cli\JabRefCLI.java¯8 ¯(<2©
corg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)!firstLineIndentation	PARAMETER7
+src\main\java\org\jabref\cli\JabRefCLI.java¯B ¯(V2¨
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java˘ ˘(2Æ
forg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?lastBreak@378.12:378.21DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java˙ ˙(2©
aorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?line@380.20:380.24DECLARATION7
+src\main\java\org\jabref\cli\JabRefCLI.java¸ ¸(2X
java.lang.StringRETURN_TYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java¯ ¯(¢
dorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?builder@377.22:377.29VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java˘ ˘("
typeStringBuilder"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>StringBuilder <mark class="class-field">builder</mark> = new StringBuilder()*builder2X
java.lang.StringBuilderTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java˘ ˘(2h
'java.lang.StringBuilder.StringBuilder()CALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˘$ ˘(1ﬁ
forg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?lastBreak@378.12:378.21VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java˙ ˙("
typeint"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">lastBreak</mark> = -firstLineIndentation*	lastBreak2D
intTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java˙ ˙(2§
corg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)!firstLineIndentationCALL7
+src\main\java\org\jabref\cli\JabRefCLI.java˙ ˙(-É
aorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)?line@380.20:380.24VARIABLE7
+src\main\java\org\jabref\cli\JabRefCLI.java¸ ¸("
typeString"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>String <mark class="class-field">line</mark>*line2Q
java.lang.StringTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java¸ ¸(ú
Sorg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)!list	PARAMETER7
+src\main\java\org\jabref\cli\JabRefCLI.java¯8 ¯(<"
typeList<String>"
isFinalfalse"&
declarationStringList<String> list*list2O
java.util.ListTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java¯+ ¯(/2Z
java.lang.StringTYPE_ARGUMENT7
+src\main\java\org\jabref\cli\JabRefCLI.java¯0 ¯(6Ò
corg.jabref.cli.JabRefCLI.wrapStringList(java.util.List<java.lang.String>, int)!firstLineIndentation	PARAMETER7
+src\main\java\org\jabref\cli\JabRefCLI.java¯B ¯(V"
typeint"
isFinalfalse"K
declarationString6<mark class="modifier">int</mark> firstLineIndentation*firstLineIndentation2D
intTYPE7
+src\main\java\org\jabref\cli\JabRefCLI.java¯> ¯(Aœ
*org.jabref.cli.JabRefCLI?WIDTH@24.29:24.34VALUE5
+src\main\java\org\jabref\cli\JabRefCLI.java (""
isFinaltrue"
typeint"‘
declarationStringæ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">WIDTH</mark> = 100;"
isStatictrue"
accessprivate*WIDTH2B
intTYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java (Ì
8org.jabref.cli.JabRefCLI?WRAPPED_LINE_PREFIX@25.32:25.51VALUE5
+src\main\java\org\jabref\cli\JabRefCLI.java  (3"
isFinaltrue"
typeString"∆
declarationString∞<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">WRAPPED_LINE_PREFIX</mark> = "";"
isStatictrue"
accessprivate*WRAPPED_LINE_PREFIX2O
java.lang.StringTYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java (˘
;org.jabref.cli.JabRefCLI?STRING_TABLE_DELIMITER@26.32:26.54VALUE5
+src\main\java\org\jabref\cli\JabRefCLI.java  (6"
isFinaltrue"
typeString"Ã
declarationString∂<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">STRING_TABLE_DELIMITER</mark> = " : ";"
isStatictrue"
accessprivate*STRING_TABLE_DELIMITER2O
java.lang.StringTYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java (´
'org.jabref.cli.JabRefCLI?cl@28.30:28.32VALUE5
+src\main\java\org\jabref\cli\JabRefCLI.java ( "
isFinaltrue"
typeCommandLine"é
declarationStringy<mark class="modifier">private </mark><mark class="modifier">final </mark>CommandLine <mark class="class-field">cl</mark>"
isStaticfalse"
accessprivate*cl2a
"org.apache.commons.cli.CommandLineTYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java (Ü
-org.jabref.cli.JabRefCLI?leftOver@29.31:29.39VALUE5
+src\main\java\org\jabref\cli\JabRefCLI.java ('"
isFinaltrue"
typeList<String>"ñ
declarationStringÄ<mark class="modifier">private </mark><mark class="modifier">final </mark>List<String> <mark class="class-field">leftOver</mark>"
isStaticfalse"
accessprivate*leftOver2M
java.util.ListTYPE5
+src\main\java\org\jabref\cli\JabRefCLI.java (2X
java.lang.StringTYPE_ARGUMENT5
+src\main\java\org\jabref\cli\JabRefCLI.java (