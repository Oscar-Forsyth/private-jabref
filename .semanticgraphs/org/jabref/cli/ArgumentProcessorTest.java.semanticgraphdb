
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java¨
$org.jabref.cli.ArgumentProcessorTestCLASSA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java% %("
packageorg.jabref.cli"
isFinalfalse"
inner classfalse"

isAbstractfalse"m
declarationStringX<mark class="modifier"> </mark><mark class="modifier">class </mark>ArgumentProcessorTest"
accesspackage_private*ArgumentProcessorTest2~
,org.jabref.cli.ArgumentProcessorTest.setup()DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java-	 -(2î
Borg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java8	 8(2ò
Forg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaM	 M(2©
Worg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javak	 k('2ï
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java'% '(72î
Borg.jabref.cli.ArgumentProcessorTest?entryTypesManager@40.39:40.56DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java(' ((82ñ
Dorg.jabref.cli.ArgumentProcessorTest?importerPreferences@41.38:41.57DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java)& )(92ö
Horg.jabref.cli.ArgumentProcessorTest?importFormatPreferences@42.42:42.65DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java** *(Aò
,org.jabref.cli.ArgumentProcessorTest.setup()METHODA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java-	 -("
isFinalfalse"≠
declarationStringó<mark class="annotation">@BeforeEach()</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setup</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setup2ç
Borg.jabref.logic.importer.ImporterPreferences.getCustomImporters()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java.! .(32ç
Borg.jabref.preferences.PreferencesService.getImporterPreferences()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java0  0(62ë
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java1  1(:2ã
@org.jabref.preferences.PreferencesService.getSearchPreferences()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java2  2(42w
,java.util.EnumSet.noneOf(java.lang.Class<E>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java34 3(:2Ç
∂org.jabref.preferences.SearchPreferences.SearchPreferences(org.jabref.gui.search.SearchDisplayMode, java.util.EnumSet<org.jabref.model.search.rules.SearchRules.SearchFlags>, boolean)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java3 3(%2è
Dorg.jabref.cli.ArgumentProcessorTest?importerPreferences@41.38:41.57CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java. .( 2é
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java0 0(2è
Dorg.jabref.cli.ArgumentProcessorTest?importerPreferences@41.38:41.57CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java0E 0(X2é
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java1 1(2ì
Horg.jabref.cli.ArgumentProcessorTest?importFormatPreferences@42.42:42.65CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java1I 1(`2é
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java2 2(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java- -(Ë*
Borg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)METHODA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java8	 8("
isFinalfalse"Ü
declarationString <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">auxImport</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*	auxImport2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9m 9(u2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9\ 9(j2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9 9( 2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9S 9(X2x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9: 9(E2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:p :(x2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:_ :(m2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:  :("2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:V :([2x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:< :(G2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java<8 <(F2w
,java.nio.file.Path.resolve(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java<! <((2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java=: =(B2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java=) =(72k
 java.util.List.of(E, E, E, E, E)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java?! ?(#2å
Ajava.util.Collection.toArray(java.util.function.IntFunction<T[]>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaB B(2~
3org.jabref.cli.ArgumentProcessor.processArguments()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaG G("2ñ
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaI I(2ï
Jorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)!tempDirCALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java< <( 2£
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?outputBib@60.13:60.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java= =((2°
Vorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?auxFile@57.15:57.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java?C ?(J2ß
\org.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?outputBibFile@61.15:61.28CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java?S ?(`2£
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?originBib@58.15:58.24CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java?b ?(k2û
Sorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?args@63.21:63.25CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaB B(2é
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaD D("2ç
Borg.jabref.cli.ArgumentProcessorTest?entryTypesManager@40.39:40.56CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaF F(!2£
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?processor@65.26:65.35CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaG G(2£
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?outputBib@60.13:60.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaI  I()2ö
Jorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)!tempDir	PARAMETERA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java8! 8((2®
Vorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?auxFile@57.15:57.22DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9 9(2™
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?originBib@58.15:58.24DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java: :(2™
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?outputBib@60.13:60.22DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java< <(2Æ
\org.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?outputBibFile@61.15:61.28DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java= =(2•
Sorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?args@63.21:63.25DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java? ?(2™
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?processor@65.26:65.35DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaA A(#2V
voidRETURN_TYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java8 8(ö
Vorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?auxFile@57.15:57.22VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9 9("
typeString"
isFinalfalse"≈
declarationStringØ<mark class="modifier"> </mark>String <mark class="class-field">auxFile</mark> = Path.of(AuxCommandLineTest.class.getResource("paper.aux").toURI()).toAbsolutePath().toString()*auxFile2[
java.lang.StringTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9 9(2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9m 9(u2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9\ 9(j2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9 9( 2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9S 9(X2x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java9: 9(E°
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?originBib@58.15:58.24VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java: :("
typeString"
isFinalfalse"»
declarationString≤<mark class="modifier"> </mark>String <mark class="class-field">originBib</mark> = Path.of(AuxCommandLineTest.class.getResource("origin.bib").toURI()).toAbsolutePath().toString()*	originBib2[
java.lang.StringTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java: :(2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:p :(x2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:_ :(m2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:  :("2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:V :([2x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java:< :(GÀ
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?outputBib@60.13:60.22VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java< <("
typePath"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Path <mark class="class-field">outputBib</mark> = tempDir.resolve("output.bisb").toAbsolutePath()*	outputBib2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java< <(2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java<8 <(F2w
,java.nio.file.Path.resolve(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java<! <((2ï
Jorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)!tempDirCALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java< <( Õ
\org.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?outputBibFile@61.15:61.28VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java= =("
typeString"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>String <mark class="class-field">outputBibFile</mark> = outputBib.toAbsolutePath().toString()*outputBibFile2[
java.lang.StringTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java= =(2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java=: =(B2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java=) =(72£
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?outputBib@60.13:60.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java= =((ß

Sorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?args@63.21:63.25VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java? ?("
typeList<String>"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>List<String> <mark class="class-field">args</mark> = List.of("--nogui"<mark class="modifier">,</mark> "--debug"<mark class="modifier">,</mark> "--aux"<mark class="modifier">,</mark> auxFile + "<mark class="modifier">,</mark>" + outputBibFile, originBib)*args2Y
java.util.ListTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java? ?(2d
java.lang.StringTYPE_ARGUMENTA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java? ?(2k
 java.util.List.of(E, E, E, E, E)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java?! ?(#2°
Vorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?auxFile@57.15:57.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java?C ?(J2ß
\org.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?outputBibFile@61.15:61.28CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java?S ?(`2£
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?originBib@58.15:58.24CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java?b ?(k‹	
Xorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?processor@65.26:65.35VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaA A(#"
typeArgumentProcessor"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>ArgumentProcessor <mark class="class-field">processor</mark> = new ArgumentProcessor(args.toArray(String[]::new)<mark class="modifier">,</mark> Mode.INITIAL_START, preferencesService, mock(FileUpdateMonitor.class)<mark class="modifier">,</mark> entryTypesManager)*	processor2k
 org.jabref.cli.ArgumentProcessorTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaA A(2å
Ajava.util.Collection.toArray(java.util.function.IntFunction<T[]>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaB B(2û
Sorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)?args@63.21:63.25CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaB B(2é
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaD D("2ç
Borg.jabref.cli.ArgumentProcessorTest?entryTypesManager@40.39:40.56CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaF F(!Ó
Jorg.jabref.cli.ArgumentProcessorTest.auxImport(java.nio.file.Path)!tempDir	PARAMETERA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java8! 8(("
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java8 8( ˛=
Forg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)METHODA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaM	 M("
isFinalfalse"ä
declarationStringÙ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">exportMatches</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*exportMatches2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaN N( 2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaNo N(t2n
#java.util.Objects.requireNonNull(T)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaN) N(72x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaNT N(_2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaO: O(B2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaO) O(72n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaQ  Q("2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaS S(2n
#java.util.Objects.requireNonNull(T)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaR R(&2x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaRC R(N2}
2org.jabref.model.database.BibDatabase.getEntries()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaWb W(l2
4org.jabref.logic.importer.ParserResult.getDatabase()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaWT W(_2°
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaW8 W(F2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaY7 Y(E2w
,java.nio.file.Path.resolve(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaY! Y((2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaZ: Z(B2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaZ) Z(72k
 java.util.List.of(E, E, E, E, E)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\! \(#2å
Ajava.util.Collection.toArray(java.util.function.IntFunction<T[]>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java_ _(2~
3org.jabref.cli.ArgumentProcessor.processArguments()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javad d("2ñ
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaf f(2Ë
úorg.jabref.logic.bibtex.BibEntryAssert.assertEquals(java.util.List<org.jabref.model.entry.BibEntry>, java.nio.file.Path, org.jabref.logic.importer.Importer)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javag g(#2ê
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaVX V(n2ß
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?originBib@78.13:78.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaO O((2ì
Horg.jabref.cli.ArgumentProcessorTest?importFormatPreferences@42.42:42.65CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaV; V(R2¨
aorg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?bibtexImporter@86.23:86.37CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaW) W(72©
^org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?expectedBib@81.13:81.24CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaWG W(R2ô
Norg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)!tempDirCALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaY Y( 2ß
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBib@89.13:89.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaZ Z((2´
`org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBibFile@90.15:90.28CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\] \(j2´
`org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?originBibFile@79.15:79.28CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\l \(y2¢
Worg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?args@92.21:92.25CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java_ _(2é
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaa a("2ç
Borg.jabref.cli.ArgumentProcessorTest?entryTypesManager@40.39:40.56CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javac c(!2ß
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?processor@94.26:94.35CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javad d(2ß
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBib@89.13:89.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaf  f()2≠
borg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?expectedEntries@87.23:87.38CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javag$ g(32ß
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBib@89.13:89.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javag5 g(>2¨
aorg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?bibtexImporter@86.23:86.37CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javag@ g(N2û
Norg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)!tempDir	PARAMETERA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaM% M(,2Æ
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?originBib@78.13:78.22DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaN N(2≤
`org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?originBibFile@79.15:79.28DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaO O(2∞
^org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?expectedBib@81.13:81.24DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaQ Q(2≥
aorg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?bibtexImporter@86.23:86.37DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaV V(%2¥
borg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?expectedEntries@87.23:87.38DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaW W(&2Æ
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBib@89.13:89.22DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaY Y(2≤
`org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBibFile@90.15:90.28DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaZ Z(2©
Worg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?args@92.21:92.25DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\ \(2Æ
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?processor@94.26:94.35DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java^ ^(#2V
voidRETURN_TYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaM M(∏
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?originBib@78.13:78.22VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaN N("
typePath"
isFinalfalse"≈
declarationStringØ<mark class="modifier"> </mark>Path <mark class="class-field">originBib</mark> = Path.of(Objects.requireNonNull(ArgumentProcessorTest.class.getResource("origin.bib")).toURI())*	originBib2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaN N(2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaN N( 2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaNo N(t2n
#java.util.Objects.requireNonNull(T)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaN) N(72x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaNT N(_’
`org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?originBibFile@79.15:79.28VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaO O("
typeString"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>String <mark class="class-field">originBibFile</mark> = originBib.toAbsolutePath().toString()*originBibFile2[
java.lang.StringTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaO O(2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaO: O(B2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaO) O(72ß
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?originBib@78.13:78.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaO O((⁄
^org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?expectedBib@81.13:81.24VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaQ Q("
typePath"
isFinalfalse"„
declarationStringÕ<mark class="modifier"> </mark>Path <mark class="class-field">expectedBib</mark> = Path.of(Objects.requireNonNull(ArgumentProcessorTest.class.getResource("ArgumentProcessorTestExportMatches.bib")).toURI())*expectedBib2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaQ Q(2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaQ  Q("2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaS S(2n
#java.util.Objects.requireNonNull(T)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaR R(&2x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaRC R(N’
aorg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?bibtexImporter@86.23:86.37VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaV V(%"
typeBibtexImporter"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>BibtexImporter <mark class="class-field">bibtexImporter</mark> = new BibtexImporter(importFormatPreferences, new DummyFileUpdateMonitor())*bibtexImporter2~
3org.jabref.logic.importer.fileformat.BibtexImporterTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaV V(2ê
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaVX V(n2ì
Horg.jabref.cli.ArgumentProcessorTest?importFormatPreferences@42.42:42.65CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaV; V(R˙

borg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?expectedEntries@87.23:87.38VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaW W(&"
typeList<BibEntry>"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">expectedEntries</mark> = bibtexImporter.importDatabase(expectedBib).getDatabase().getEntries()*expectedEntries2Y
java.util.ListTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaW W(2s
org.jabref.model.entry.BibEntryTYPE_ARGUMENTA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaW W(2}
2org.jabref.model.database.BibDatabase.getEntries()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaWb W(l2
4org.jabref.logic.importer.ParserResult.getDatabase()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaWT W(_2°
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaW8 W(F2¨
aorg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?bibtexImporter@86.23:86.37CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaW) W(72©
^org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?expectedBib@81.13:81.24CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaWG W(R—
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBib@89.13:89.22VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaY Y("
typePath"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Path <mark class="class-field">outputBib</mark> = tempDir.resolve("output.bib").toAbsolutePath()*	outputBib2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaY Y(2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaY7 Y(E2w
,java.nio.file.Path.resolve(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaY! Y((2ô
Norg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)!tempDirCALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaY Y( ’
`org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBibFile@90.15:90.28VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaZ Z("
typeString"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>String <mark class="class-field">outputBibFile</mark> = outputBib.toAbsolutePath().toString()*outputBibFile2[
java.lang.StringTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaZ Z(2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaZ: Z(B2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaZ) Z(72ß
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBib@89.13:89.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaZ Z((É	
Worg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?args@92.21:92.25VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\ \("
typeList<String>"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>List<String> <mark class="class-field">args</mark> = List.of("-n"<mark class="modifier">,</mark> "--debug"<mark class="modifier">,</mark> "--exportMatches"<mark class="modifier">,</mark> "Author=Einstein," + outputBibFile, originBibFile)*args2Y
java.util.ListTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\ \(2d
java.lang.StringTYPE_ARGUMENTA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\ \(2k
 java.util.List.of(E, E, E, E, E)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\! \(#2´
`org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?outputBibFile@90.15:90.28CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\] \(j2´
`org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?originBibFile@79.15:79.28CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java\l \(y‰	
\org.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?processor@94.26:94.35VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java^ ^(#"
typeArgumentProcessor"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>ArgumentProcessor <mark class="class-field">processor</mark> = new ArgumentProcessor(args.toArray(String[]::new)<mark class="modifier">,</mark> Mode.INITIAL_START, preferencesService, mock(FileUpdateMonitor.class)<mark class="modifier">,</mark> entryTypesManager)*	processor2k
 org.jabref.cli.ArgumentProcessorTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java^ ^(2å
Ajava.util.Collection.toArray(java.util.function.IntFunction<T[]>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java_ _(2¢
Worg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)?args@92.21:92.25CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java_ _(2é
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaa a("2ç
Borg.jabref.cli.ArgumentProcessorTest?entryTypesManager@40.39:40.56CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javac c(!Ú
Norg.jabref.cli.ArgumentProcessorTest.exportMatches(java.nio.file.Path)!tempDir	PARAMETERA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaM% M(,"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaM  M($∂J
Worg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)METHODA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javak	 k('"
isFinalfalse"õ
declarationStringÖ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">convertBibtexToTablerefsabsbib</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*convertBibtexToTablerefsabsbib2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javal l( 2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javalo l(t2n
#java.util.Objects.requireNonNull(T)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javal) l(72x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javalT l(_2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javam: m(B2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javam) m(72n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javao9 o(G2w
,java.nio.file.Path.resolve(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javao" o()2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javap< p(D2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javap+ p(92ç
Borg.jabref.logic.importer.ImporterPreferences.getCustomImporters()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javar! r(32^
java.util.List.of()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javatL t(N2^
java.util.List.of()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javauf u(h2ã
@org.jabref.preferences.PreferencesService.getExportPreferences()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javav  v(42^
java.util.List.of()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaxv x(x2ö
Oorg.jabref.preferences.PreferencesService.getSelfContainedExportConfiguration()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaz  z(C2k
 java.util.List.of(E, E, E, E, E)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java|! |(#2å
Ajava.util.Collection.toArray(java.util.function.IntFunction<T[]>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java (2Ä
3org.jabref.cli.ArgumentProcessor.processArguments()CALLC
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaÑ Ñ("2ò
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLC
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaÜ Ü(2Î
üorg.jabref.model.metadata.SaveOrder.SaveOrder(org.jabref.model.metadata.SaveOrder.OrderType, java.util.List<org.jabref.model.metadata.SaveOrder.SortCriterion>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javat" t(+2ç
¡org.jabref.preferences.ExportPreferences.ExportPreferences(java.lang.String, java.nio.file.Path, org.jabref.model.metadata.SaveOrder, java.util.List<org.jabref.logic.exporter.TemplateExporter>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javau2 u(C2Ö
πorg.jabref.model.metadata.SelfContainedSaveOrder.SelfContainedSaveOrder(org.jabref.model.metadata.SaveOrder.OrderType, java.util.List<org.jabref.model.metadata.SaveOrder.SortCriterion>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javax< x(R2±
Âorg.jabref.logic.exporter.SelfContainedSaveConfiguration.SelfContainedSaveConfiguration(org.jabref.model.metadata.SelfContainedSaveOrder, java.lang.Boolean, org.jabref.logic.exporter.BibDatabaseWriter.SaveType, java.lang.Boolean)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javayL y(j2∫
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?originBib@108.13:108.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javam m((2™
_org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)!tempDirCALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javao o(!2ª
porg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?outputHtml@111.13:111.23CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javap  p(*2è
Dorg.jabref.cli.ArgumentProcessorTest?importerPreferences@41.38:41.57CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javar r( 2™
_org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)!tempDirCALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javauM u(T2∫
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?saveOrder@116.18:116.27CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javauV u(_2é
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javav v(2¬
worg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?exportPreferences@117.26:117.43CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javavC v(T2»
|org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?selfContainedSaveOrder@120.31:120.53CALLB
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javayk y(Å2é
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaz z(2–
Ñorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?selfContainedSaveConfiguration@121.39:121.69CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javazR z(p2æ
sorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?originBibFile@109.15:109.28CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java|0 |(=2ø
torg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?outputHtmlFile@112.15:112.29CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java|Q |(_2µ
jorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?args@124.21:124.25CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java (2ê
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLC
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaÅ Å("2è
Borg.jabref.cli.ArgumentProcessorTest?entryTypesManager@40.39:40.56CALLC
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaÉ É(!2º
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?processor@126.26:126.35CALLC
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaÑ Ñ(2Ω
porg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?outputHtml@111.13:111.23CALLC
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaÜ  Ü(*2Ø
_org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)!tempDir	PARAMETERA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javak6 k(=2¡
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?originBib@108.13:108.22DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javal l(2≈
sorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?originBibFile@109.15:109.28DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javam m(2¬
porg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?outputHtml@111.13:111.23DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javao o(2∆
torg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?outputHtmlFile@112.15:112.29DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javap p(2¡
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?saveOrder@116.18:116.27DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javat t(2…
worg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?exportPreferences@117.26:117.43DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javau u(+2Œ
|org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?selfContainedSaveOrder@120.31:120.53DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javax x(52◊
Ñorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?selfContainedSaveConfiguration@121.39:121.69DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javay' y(E2º
jorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?args@124.21:124.25DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java| |(2¡
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?processor@126.26:126.35DECLARATIONA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java~ ~(#2V
voidRETURN_TYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javak k(À
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?originBib@108.13:108.22VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javal l("
typePath"
isFinalfalse"≈
declarationStringØ<mark class="modifier"> </mark>Path <mark class="class-field">originBib</mark> = Path.of(Objects.requireNonNull(ArgumentProcessorTest.class.getResource("origin.bib")).toURI())*	originBib2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javal l(2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javal l( 2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javalo l(t2n
#java.util.Objects.requireNonNull(T)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javal) l(72x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javalT l(_˚
sorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?originBibFile@109.15:109.28VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javam m("
typeString"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>String <mark class="class-field">originBibFile</mark> = originBib.toAbsolutePath().toString()*originBibFile2[
java.lang.StringTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javam m(2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javam: m(B2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javam) m(72∫
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?originBib@108.13:108.22CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javam m((˙
porg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?outputHtml@111.13:111.23VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javao o("
typePath"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>Path <mark class="class-field">outputHtml</mark> = tempDir.resolve("output.html").toAbsolutePath()*
outputHtml2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javao o(2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javao9 o(G2w
,java.nio.file.Path.resolve(java.lang.String)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javao" o()2™
_org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)!tempDirCALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javao o(!Ä
torg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?outputHtmlFile@112.15:112.29VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javap p("
typeString"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>String <mark class="class-field">outputHtmlFile</mark> = outputHtml.toAbsolutePath().toString()*outputHtmlFile2[
java.lang.StringTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javap p(2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javap< p(D2n
#java.nio.file.Path.toAbsolutePath()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javap+ p(92ª
porg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?outputHtml@111.13:111.23CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javap  p(*Œ
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?saveOrder@116.18:116.27VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javat t("
type	SaveOrder"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>SaveOrder <mark class="class-field">saveOrder</mark> = new SaveOrder(SaveOrder.OrderType.TABLE, List.of())*	saveOrder2n
#org.jabref.model.metadata.SaveOrderTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javat t(2^
java.util.List.of()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javatL t(N2Î
üorg.jabref.model.metadata.SaveOrder.SaveOrder(org.jabref.model.metadata.SaveOrder.OrderType, java.util.List<org.jabref.model.metadata.SaveOrder.SortCriterion>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javat" t(+Ø

worg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?exportPreferences@117.26:117.43VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javau u(+"
typeExportPreferences"
isFinalfalse"◊
declarationString¡<mark class="modifier"> </mark>ExportPreferences <mark class="class-field">exportPreferences</mark> = new ExportPreferences(".html"<mark class="modifier">,</mark> tempDir, saveOrder, List.of())*exportPreferences2s
(org.jabref.preferences.ExportPreferencesTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javau u(2^
java.util.List.of()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javauf u(h2ç
¡org.jabref.preferences.ExportPreferences.ExportPreferences(java.lang.String, java.nio.file.Path, org.jabref.model.metadata.SaveOrder, java.util.List<org.jabref.logic.exporter.TemplateExporter>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javau2 u(C2™
_org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)!tempDirCALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javauM u(T2∫
oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?saveOrder@116.18:116.27CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javauV u(_∆
|org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?selfContainedSaveOrder@120.31:120.53VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javax x(5"
typeSelfContainedSaveOrder"
isFinalfalse"…
declarationString≥<mark class="modifier"> </mark>SelfContainedSaveOrder <mark class="class-field">selfContainedSaveOrder</mark> = new SelfContainedSaveOrder(SaveOrder.OrderType.ORIGINAL, List.of())*selfContainedSaveOrder2{
0org.jabref.model.metadata.SelfContainedSaveOrderTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javax x(2^
java.util.List.of()CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaxv x(x2Ö
πorg.jabref.model.metadata.SelfContainedSaveOrder.SelfContainedSaveOrder(org.jabref.model.metadata.SaveOrder.OrderType, java.util.List<org.jabref.model.metadata.SaveOrder.SortCriterion>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javax< x(R†

Ñorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?selfContainedSaveConfiguration@121.39:121.69VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javay' y(E"&
typeSelfContainedSaveConfiguration"
isFinalfalse"Í
declarationString‘<mark class="modifier"> </mark>SelfContainedSaveConfiguration <mark class="class-field">selfContainedSaveConfiguration</mark> = new SelfContainedSaveConfiguration(selfContainedSaveOrder, <mark class="modifier">false</mark><mark class="modifier">,</mark> BibDatabaseWriter.SaveType.WITH_JABREF_META_DATA, <mark class="modifier">false</mark>)*selfContainedSaveConfiguration2É
8org.jabref.logic.exporter.SelfContainedSaveConfigurationTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javay y(&2±
Âorg.jabref.logic.exporter.SelfContainedSaveConfiguration.SelfContainedSaveConfiguration(org.jabref.model.metadata.SelfContainedSaveOrder, java.lang.Boolean, org.jabref.logic.exporter.BibDatabaseWriter.SaveType, java.lang.Boolean)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javayL y(j2»
|org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?selfContainedSaveOrder@120.31:120.53CALLB
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javayk y(Å÷	
jorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?args@124.21:124.25VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java| |("
typeList<String>"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>List<String> <mark class="class-field">args</mark> = List.of("-n"<mark class="modifier">,</mark> "-i"<mark class="modifier">,</mark> originBibFile + ",bibtex"<mark class="modifier">,</mark> "-o"<mark class="modifier">,</mark> outputHtmlFile + ",tablerefsabsbib")*args2Y
java.util.ListTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java| |(2d
java.lang.StringTYPE_ARGUMENTA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java| |(2k
 java.util.List.of(E, E, E, E, E)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java|! |(#2æ
sorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?originBibFile@109.15:109.28CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java|0 |(=2ø
torg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?outputHtmlFile@112.15:112.29CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java|Q |(_é

oorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?processor@126.26:126.35VARIABLEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java~ ~(#"
typeArgumentProcessor"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>ArgumentProcessor <mark class="class-field">processor</mark> = new ArgumentProcessor(args.toArray(String[]::new)<mark class="modifier">,</mark> Mode.INITIAL_START, preferencesService, mock(FileUpdateMonitor.class)<mark class="modifier">,</mark> entryTypesManager)*	processor2k
 org.jabref.cli.ArgumentProcessorTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java~ ~(2å
Ajava.util.Collection.toArray(java.util.function.IntFunction<T[]>)CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java (2µ
jorg.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)?args@124.21:124.25CALLA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java (2ê
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55CALLC
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaÅ Å("2è
Borg.jabref.cli.ArgumentProcessorTest?entryTypesManager@40.39:40.56CALLC
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javaÉ É(!É
_org.jabref.cli.ArgumentProcessorTest.convertBibtexToTablerefsabsbib(java.nio.file.Path)!tempDir	PARAMETERA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javak6 k(="
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.javak1 k(5”
Corg.jabref.cli.ArgumentProcessorTest?preferencesService@39.37:39.55VALUEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java'% '(7"
isFinaltrue"
typePreferencesService"‰
declarationStringŒ<mark class="modifier">private </mark><mark class="modifier">final </mark>PreferencesService <mark class="class-field">preferencesService</mark> = mock(PreferencesService.class, Answers.RETURNS_DEEP_STUBS);"
isStaticfalse"
accessprivate*preferencesService2t
)org.jabref.preferences.PreferencesServiceTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java' '($º
Borg.jabref.cli.ArgumentProcessorTest?entryTypesManager@40.39:40.56VALUEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java(' ((8"
isFinaltrue"
typeBibEntryTypesManager"À
declarationStringµ<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntryTypesManager <mark class="class-field">entryTypesManager</mark> = mock(BibEntryTypesManager.class);"
isStaticfalse"
accessprivate*entryTypesManager2v
+org.jabref.model.entry.BibEntryTypesManagerTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java( ((&›
Dorg.jabref.cli.ArgumentProcessorTest?importerPreferences@41.38:41.57VALUEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java)& )(9"
isFinaltrue"
typeImporterPreferences"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">final </mark>ImporterPreferences <mark class="class-field">importerPreferences</mark> = mock(ImporterPreferences.class, Answers.RETURNS_DEEP_STUBS);"
isStaticfalse"
accessprivate*importerPreferences2x
-org.jabref.logic.importer.ImporterPreferencesTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java) )(%ﬂ
Horg.jabref.cli.ArgumentProcessorTest?importFormatPreferences@42.42:42.65VALUEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java** *(A"
isFinaltrue"
typeImportFormatPreferences"Û
declarationString›<mark class="modifier">private </mark><mark class="modifier">final </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark> = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);"
isStaticfalse"
accessprivate*importFormatPreferences2b
ImportFormatPreferencesTYPEA
7src\test\java\org\jabref\cli\ArgumentProcessorTest.java* *()