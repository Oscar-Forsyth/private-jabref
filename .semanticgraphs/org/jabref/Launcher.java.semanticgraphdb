
&src\main\java\org\jabref\Launcher.javaﬁ
org.jabref.LauncherCLASS0
&src\main\java\org\jabref\Launcher.java3 3("
package
org.jabref"
isFinalfalse"
inner classfalse"

isAbstractfalse"≈
declarationStringØ<mark class="annotation">@AllowedToUseStandardStreams("Direct output to the user")</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>Launcher"
accesspublic*Launcher2m
,org.jabref.Launcher.main(java.lang.String[])DECLARATION0
&src\main\java\org\jabref\Launcher.java7 7(2j
)org.jabref.Launcher.routeLoggingToSlf4J()DECLARATION0
&src\main\java\org\jabref\Launcher.javax x(+2e
"org.jabref.Launcher.addLogToDisk()DECLARATION2
&src\main\java\org\jabref\Launcher.javaÇ Ç($2i
&org.jabref.Launcher.initializeLogger()DECLARATION2
&src\main\java\org\jabref\Launcher.javaò ò((2∞
morg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)DECLARATION2
&src\main\java\org\jabref\Launcher.javaü ü(52ç
Jorg.jabref.Launcher.initGlobals(org.jabref.preferences.PreferencesService)DECLARATION2
&src\main\java\org\jabref\Launcher.javaª ª(#2å
Iorg.jabref.Launcher.configureProxy(org.jabref.logic.net.ProxyPreferences)DECLARATION2
&src\main\java\org\jabref\Launcher.java∆ ∆(&2å
Iorg.jabref.Launcher.configureSSL(org.jabref.logic.net.ssl.SSLPreferences)DECLARATION2
&src\main\java\org\jabref\Launcher.javaÕ Õ($2n
+org.jabref.Launcher.clearOldSearchIndices()DECLARATION2
&src\main\java\org\jabref\Launcher.java— —(-2g
&org.jabref.Launcher?LOGGER@52.26:52.32DECLARATION0
&src\main\java\org\jabref\Launcher.java4 4( 2o
.org.jabref.Launcher?isDebugEnabled@53.27:53.41DECLARATION0
&src\main\java\org\jabref\Launcher.java5 5()ÌA
,org.jabref.Launcher.main(java.lang.String[])METHOD0
&src\main\java\org\jabref\Launcher.java7 7("
isFinalfalse"≤
declarationStringú<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">main</mark>(String[] args)"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*main2c
)org.jabref.Launcher.routeLoggingToSlf4J()CALL0
&src\main\java\org\jabref\Launcher.java8 8(2c
)org.jabref.cli.JabRefCLI.isDebugLogging()CALL0
&src\main\java\org\jabref\Launcher.java?' ?(52\
"org.jabref.Launcher.addLogToDisk()CALL0
&src\main\java\org\jabref\Launcher.javaD D(2p
6org.jabref.preferences.JabRefPreferences.getInstance()CALL0
&src\main\java\org\jabref\Launcher.javaJD J(O2ß
morg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)CALL0
&src\main\java\org\jabref\Launcher.javaM M(+2y
?org.jabref.preferences.JabRefPreferences.getRemotePreferences()CALL0
&src\main\java\org\jabref\Launcher.javaM> M(R2À
êorg.jabref.migrations.PreferencesMigrations.runMigrations(org.jabref.preferences.JabRefPreferences, org.jabref.model.entry.BibEntryTypesManager)CALL0
&src\main\java\org\jabref\Launcher.javaR" R(/2É
Iorg.jabref.Launcher.configureProxy(org.jabref.logic.net.ProxyPreferences)CALL0
&src\main\java\org\jabref\Launcher.javaU U(2x
>org.jabref.preferences.JabRefPreferences.getProxyPreferences()CALL0
&src\main\java\org\jabref\Launcher.javaU' U(:2É
Iorg.jabref.Launcher.configureSSL(org.jabref.logic.net.ssl.SSLPreferences)CALL0
&src\main\java\org\jabref\Launcher.javaV V(2v
<org.jabref.preferences.JabRefPreferences.getSSLPreferences()CALL0
&src\main\java\org\jabref\Launcher.javaV% V(62Ñ
Jorg.jabref.Launcher.initGlobals(org.jabref.preferences.PreferencesService)CALL0
&src\main\java\org\jabref\Launcher.javaW W(2e
+org.jabref.Launcher.clearOldSearchIndices()CALL0
&src\main\java\org\jabref\Launcher.javaX X(!2g
-org.jabref.gui.Globals.getFileUpdateMonitor()CALL0
&src\main\java\org\jabref\Launcher.java[> [(R2m
3org.jabref.cli.ArgumentProcessor.processArguments()CALL0
&src\main\java\org\jabref\Launcher.javad" d(22k
1org.jabref.cli.ArgumentProcessor.shouldShutDown()CALL0
&src\main\java\org\jabref\Launcher.javae& e(42T
java.lang.System.exit(int)CALL0
&src\main\java\org\jabref\Launcher.javai i(2j
0org.jabref.cli.ArgumentProcessor.getUiCommands()CALL0
&src\main\java\org\jabref\Launcher.javalO l(\2à
Norg.jabref.cli.JabRefCLI.printUsage(org.jabref.preferences.PreferencesService)CALL0
&src\main\java\org\jabref\Launcher.javaq q($2p
6org.jabref.cli.JabRefCLI.JabRefCLI(java.lang.String[])CALL0
&src\main\java\org\jabref\Launcher.java> >(%2|
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALL0
&src\main\java\org\jabref\Launcher.javaF9 F(M2©
Óorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)CALL0
&src\main\java\org\jabref\Launcher.java^: ^(K2|
Borg.jabref.Launcher.main(java.lang.String[])?jabRefCLI@60.18:60.27CALL0
&src\main\java\org\jabref\Launcher.java> >(2k
1org.jabref.Launcher.main(java.lang.String[])!argsCALL0
&src\main\java\org\jabref\Launcher.java>& >(*2h
.org.jabref.Launcher?isDebugEnabled@53.27:53.41CALL0
&src\main\java\org\jabref\Launcher.java? ?(2|
Borg.jabref.Launcher.main(java.lang.String[])?jabRefCLI@60.18:60.27CALL0
&src\main\java\org\jabref\Launcher.java? ?(&2h
.org.jabref.Launcher?isDebugEnabled@53.27:53.41CALL0
&src\main\java\org\jabref\Launcher.javaA A(2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?entryTypesManager@70.33:70.50CALL0
&src\main\java\org\jabref\Launcher.javaG( G(92k
1org.jabref.Launcher.main(java.lang.String[])!argsCALL0
&src\main\java\org\jabref\Launcher.javaM, M(02~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javaM2 M(=2~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javaQ Q('2~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javaR0 R(;2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?entryTypesManager@70.33:70.50CALL0
&src\main\java\org\jabref\Launcher.javaR= R(N2~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javaU U(&2~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javaV V($2~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javaW W(#2k
1org.jabref.Launcher.main(java.lang.String[])!argsCALL0
&src\main\java\org\jabref\Launcher.java_ _(2~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javaa a(#2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?fileUpdateMonitor@91.34:91.51CALL0
&src\main\java\org\jabref\Launcher.javab b()2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?entryTypesManager@70.33:70.50CALL0
&src\main\java\org\jabref\Launcher.javac c()2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?argumentProcessor@94.34:94.51CALL0
&src\main\java\org\jabref\Launcher.javad d(!2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?argumentProcessor@94.34:94.51CALL0
&src\main\java\org\jabref\Launcher.javae e(%2`
&org.jabref.Launcher?LOGGER@52.26:52.32CALL0
&src\main\java\org\jabref\Launcher.javaf f(2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?argumentProcessor@94.34:94.51CALL0
&src\main\java\org\jabref\Launcher.javal= l(N2
Eorg.jabref.Launcher.main(java.lang.String[])?uiCommands@108.32:108.42CALL0
&src\main\java\org\jabref\Launcher.javam  m(*2~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javam, m(72Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?fileUpdateMonitor@91.34:91.51CALL0
&src\main\java\org\jabref\Launcher.javam9 m(J2k
1org.jabref.Launcher.main(java.lang.String[])!argsCALL0
&src\main\java\org\jabref\Launcher.javan2 n(62`
&org.jabref.Launcher?LOGGER@52.26:52.32CALL0
&src\main\java\org\jabref\Launcher.javap p(2v
<org.jabref.Launcher.main(java.lang.String[])?e@111.36:111.37CALL0
&src\main\java\org\jabref\Launcher.javap: p(;2~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javaq% q(02`
&org.jabref.Launcher?LOGGER@52.26:52.32CALL0
&src\main\java\org\jabref\Launcher.javat t(2w
=org.jabref.Launcher.main(java.lang.String[])?ex@115.27:115.29CALL0
&src\main\java\org\jabref\Launcher.javat1 t(32p
1org.jabref.Launcher.main(java.lang.String[])!args	PARAMETER0
&src\main\java\org\jabref\Launcher.java7% 7()2É
Borg.jabref.Launcher.main(java.lang.String[])?jabRefCLI@60.18:60.27DECLARATION0
&src\main\java\org\jabref\Launcher.java< <(2ã
Jorg.jabref.Launcher.main(java.lang.String[])?entryTypesManager@70.33:70.50DECLARATION0
&src\main\java\org\jabref\Launcher.javaF! F(22Ö
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47DECLARATION0
&src\main\java\org\jabref\Launcher.javaJ$ J(/2ã
Jorg.jabref.Launcher.main(java.lang.String[])?fileUpdateMonitor@91.34:91.51DECLARATION0
&src\main\java\org\jabref\Launcher.java[" [(32ã
Jorg.jabref.Launcher.main(java.lang.String[])?argumentProcessor@94.34:94.51DECLARATION0
&src\main\java\org\jabref\Launcher.java^" ^(32Ü
Eorg.jabref.Launcher.main(java.lang.String[])?uiCommands@108.32:108.42DECLARATION0
&src\main\java\org\jabref\Launcher.javal  l(*2{
:org.jabref.Launcher.main(java.lang.String[])?e@64.32:64.33DECLARATION0
&src\main\java\org\jabref\Launcher.java@  @(!2}
<org.jabref.Launcher.main(java.lang.String[])?e@111.36:111.37DECLARATION0
&src\main\java\org\jabref\Launcher.javao$ o(%2~
=org.jabref.Launcher.main(java.lang.String[])?ex@115.27:115.29DECLARATION0
&src\main\java\org\jabref\Launcher.javas s(2E
voidRETURN_TYPE0
&src\main\java\org\jabref\Launcher.java7 7(Ó
Borg.jabref.Launcher.main(java.lang.String[])?jabRefCLI@60.18:60.27VARIABLE0
&src\main\java\org\jabref\Launcher.java< <("
type	JabRefCLI"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>JabRefCLI <mark class="class-field">jabRefCLI</mark>*	jabRefCLI2R
org.jabref.cli.JabRefCLITYPE0
&src\main\java\org\jabref\Launcher.java< <(Ã
Jorg.jabref.Launcher.main(java.lang.String[])?entryTypesManager@70.33:70.50VARIABLE0
&src\main\java\org\jabref\Launcher.javaF! F(2"
typeBibEntryTypesManager"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>BibEntryTypesManager <mark class="class-field">entryTypesManager</mark> = new BibEntryTypesManager()*entryTypesManager2e
+org.jabref.model.entry.BibEntryTypesManagerTYPE0
&src\main\java\org\jabref\Launcher.javaF F( 2|
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALL0
&src\main\java\org\jabref\Launcher.javaF9 F(M 
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47VALUE0
&src\main\java\org\jabref\Launcher.javaJ$ J(/"
typeJabRefPreferences"
isFinaltrue"π
declarationString£<mark class="modifier"> </mark><mark class="modifier">final </mark>JabRefPreferences <mark class="class-field">preferences</mark> = JabRefPreferences.getInstance()*preferences2b
(org.jabref.preferences.JabRefPreferencesTYPE0
&src\main\java\org\jabref\Launcher.javaJ J(#2p
6org.jabref.preferences.JabRefPreferences.getInstance()CALL0
&src\main\java\org\jabref\Launcher.javaJD J(O±
Jorg.jabref.Launcher.main(java.lang.String[])?fileUpdateMonitor@91.34:91.51VARIABLE0
&src\main\java\org\jabref\Launcher.java[" [(3"
typeFileUpdateMonitor"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>FileUpdateMonitor <mark class="class-field">fileUpdateMonitor</mark> = Globals.getFileUpdateMonitor()*fileUpdateMonitor2a
'org.jabref.model.util.FileUpdateMonitorTYPE0
&src\main\java\org\jabref\Launcher.java[ [(!2g
-org.jabref.gui.Globals.getFileUpdateMonitor()CALL0
&src\main\java\org\jabref\Launcher.java[> [(Ræ

Jorg.jabref.Launcher.main(java.lang.String[])?argumentProcessor@94.34:94.51VARIABLE0
&src\main\java\org\jabref\Launcher.java^" ^(3"
typeArgumentProcessor"
isFinalfalse"
declarationString⁄<mark class="modifier"> </mark>ArgumentProcessor <mark class="class-field">argumentProcessor</mark> = new ArgumentProcessor(args, ArgumentProcessor.Mode.INITIAL_START, preferences, fileUpdateMonitor, entryTypesManager)*argumentProcessor2Z
 org.jabref.cli.ArgumentProcessorTYPE0
&src\main\java\org\jabref\Launcher.java^ ^(!2©
Óorg.jabref.cli.ArgumentProcessor.ArgumentProcessor(java.lang.String[], org.jabref.cli.ArgumentProcessor.Mode, org.jabref.preferences.PreferencesService, org.jabref.model.util.FileUpdateMonitor, org.jabref.model.entry.BibEntryTypesManager)CALL0
&src\main\java\org\jabref\Launcher.java^: ^(K2k
1org.jabref.Launcher.main(java.lang.String[])!argsCALL0
&src\main\java\org\jabref\Launcher.java_ _(2~
Dorg.jabref.Launcher.main(java.lang.String[])?preferences@74.36:74.47CALL0
&src\main\java\org\jabref\Launcher.javaa a(#2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?fileUpdateMonitor@91.34:91.51CALL0
&src\main\java\org\jabref\Launcher.javab b()2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?entryTypesManager@70.33:70.50CALL0
&src\main\java\org\jabref\Launcher.javac c()ï
Eorg.jabref.Launcher.main(java.lang.String[])?uiCommands@108.32:108.42VARIABLE0
&src\main\java\org\jabref\Launcher.javal  l(*"
typeList<UiCommand>"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>List<UiCommand> <mark class="class-field">uiCommands</mark> = new ArrayList<>(argumentProcessor.getUiCommands())*
uiCommands2>
ListTYPE0
&src\main\java\org\jabref\Launcher.javal l(2j
0org.jabref.cli.ArgumentProcessor.getUiCommands()CALL0
&src\main\java\org\jabref\Launcher.javalO l(\2Ñ
Jorg.jabref.Launcher.main(java.lang.String[])?argumentProcessor@94.34:94.51CALL0
&src\main\java\org\jabref\Launcher.javal= l(Nå
1org.jabref.Launcher.main(java.lang.String[])!args	PARAMETER0
&src\main\java\org\jabref\Launcher.java7% 7()"
typeString[]"
isFinalfalse""
declarationStringString[] args*args2L
java.lang.String[]TYPE0
&src\main\java\org\jabref\Launcher.java7 7($≠
:org.jabref.Launcher.main(java.lang.String[])?e@64.32:64.33VARIABLE0
&src\main\java\org\jabref\Launcher.java@  @(!"
typeParseException"
isFinalfalse"%
declarationStringParseException e*e2_
%org.apache.commons.cli.ParseExceptionTYPE0
&src\main\java\org\jabref\Launcher.java@ @(Ø
<org.jabref.Launcher.main(java.lang.String[])?e@111.36:111.37VARIABLE0
&src\main\java\org\jabref\Launcher.javao$ o(%"
typeParseException"
isFinalfalse"%
declarationStringParseException e*e2_
%org.apache.commons.cli.ParseExceptionTYPE0
&src\main\java\org\jabref\Launcher.javao o(#ñ
=org.jabref.Launcher.main(java.lang.String[])?ex@115.27:115.29VARIABLE0
&src\main\java\org\jabref\Launcher.javas s("
type	Exception"
isFinalfalse"!
declarationStringException ex*ex2M
java.lang.ExceptionTYPE0
&src\main\java\org\jabref\Launcher.javas s(”
)org.jabref.Launcher.routeLoggingToSlf4J()METHOD0
&src\main\java\org\jabref\Launcher.javax x(+"
isFinalfalse"µ
declarationStringü<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">routeLoggingToSlf4J</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*routeLoggingToSlf4J2E
voidRETURN_TYPE0
&src\main\java\org\jabref\Launcher.javax x(Ï
"org.jabref.Launcher.addLogToDisk()METHOD2
&src\main\java\org\jabref\Launcher.javaÇ Ç($"
isFinalfalse"Æ
declarationStringò<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">addLogToDisk</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*addLogToDisk2u
9org.jabref.gui.desktop.os.NativeDesktop.getLogDirectory()CALL2
&src\main\java\org\jabref\Launcher.javaÉ/ É(>2g
+org.jabref.logic.util.OS.getNativeDesktop()CALL2
&src\main\java\org\jabref\Launcher.javaÉ É(,2ª
java.nio.file.Files.createDirectories(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALL2
&src\main\java\org\jabref\Launcher.javaÖ Ö(#2b
&org.jabref.Launcher.initializeLogger()CALL2
&src\main\java\org\jabref\Launcher.javaá á(2j
.java.util.Map.of(K, V, K, V, K, V, K, V, K, V)CALL2
&src\main\java\org\jabref\Launcher.javaç0 ç(22Y
java.nio.file.Path.toString()CALL2
&src\main\java\org\jabref\Launcher.javaë@ ë(H2h
,java.nio.file.Path.resolve(java.lang.String)CALL2
&src\main\java\org\jabref\Launcher.javaë- ë(42Ü
Jjava.util.Map.forEach(java.util.function.BiConsumer<? super K, ? super V>)CALL2
&src\main\java\org\jabref\Launcher.javaî î(2b
&org.jabref.Launcher.initializeLogger()CALL2
&src\main\java\org\jabref\Launcher.javaï ï(2v
:org.jabref.Launcher.addLogToDisk()?directory@131.13:131.22CALL2
&src\main\java\org\jabref\Launcher.javaÖ$ Ö(-2b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.javaà à(2v
:org.jabref.Launcher.addLogToDisk()?directory@131.13:131.22CALL2
&src\main\java\org\jabref\Launcher.javaà> à(G2n
2org.jabref.Launcher.addLogToDisk()?e@134.29:134.30CALL2
&src\main\java\org\jabref\Launcher.javaàI à(J2j
.org.jabref.Launcher?isDebugEnabled@53.27:53.41CALL2
&src\main\java\org\jabref\Launcher.javaè$ è(22j
.org.jabref.Launcher?isDebugEnabled@53.27:53.41CALL2
&src\main\java\org\jabref\Launcher.javaê ê('2v
:org.jabref.Launcher.addLogToDisk()?directory@131.13:131.22CALL2
&src\main\java\org\jabref\Launcher.javaë# ë(,2z
>org.jabref.Launcher.addLogToDisk()?configuration@141.28:141.41CALL2
&src\main\java\org\jabref\Launcher.javaî î(2}
:org.jabref.Launcher.addLogToDisk()?directory@131.13:131.22DECLARATION2
&src\main\java\org\jabref\Launcher.javaÉ É(2Å
>org.jabref.Launcher.addLogToDisk()?configuration@141.28:141.41DECLARATION2
&src\main\java\org\jabref\Launcher.javaç ç()2u
2org.jabref.Launcher.addLogToDisk()?e@134.29:134.30DECLARATION2
&src\main\java\org\jabref\Launcher.javaÜ Ü(2G
voidRETURN_TYPE2
&src\main\java\org\jabref\Launcher.javaÇ Ç(Â
:org.jabref.Launcher.addLogToDisk()?directory@131.13:131.22VARIABLE2
&src\main\java\org\jabref\Launcher.javaÉ É("
typePath"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>Path <mark class="class-field">directory</mark> = OS.getNativeDesktop().getLogDirectory()*	directory2N
java.nio.file.PathTYPE2
&src\main\java\org\jabref\Launcher.javaÉ É(2u
9org.jabref.gui.desktop.os.NativeDesktop.getLogDirectory()CALL2
&src\main\java\org\jabref\Launcher.javaÉ/ É(>2g
+org.jabref.logic.util.OS.getNativeDesktop()CALL2
&src\main\java\org\jabref\Launcher.javaÉ É(,¢
>org.jabref.Launcher.addLogToDisk()?configuration@141.28:141.41VARIABLE2
&src\main\java\org\jabref\Launcher.javaç ç()"
typeMap<String, String>"
isFinalfalse"È
declarationString”<mark class="modifier"> </mark>Map<String, String> <mark class="class-field">configuration</mark> = Map.of("writerFile"<mark class="modifier">,</mark> "shared file"<mark class="modifier">,</mark> "writerFile.level"<mark class="modifier">,</mark> isDebugEnabled ? "debug" : "info"<mark class="modifier">,</mark> "level"<mark class="modifier">,</mark> isDebugEnabled ? "debug" : "info"<mark class="modifier">,</mark> "writerFile.file"<mark class="modifier">,</mark> directory.resolve("log.txt").toString()<mark class="modifier">,</mark> "writerFile.charset"<mark class="modifier">,</mark> "UTF-8")*configuration2I
java.util.MapTYPE2
&src\main\java\org\jabref\Launcher.javaç ç(2U
java.lang.StringTYPE_ARGUMENT2
&src\main\java\org\jabref\Launcher.javaç ç(2U
java.lang.StringTYPE_ARGUMENT2
&src\main\java\org\jabref\Launcher.javaç ç(2j
.java.util.Map.of(K, V, K, V, K, V, K, V, K, V)CALL2
&src\main\java\org\jabref\Launcher.javaç0 ç(22Y
java.nio.file.Path.toString()CALL2
&src\main\java\org\jabref\Launcher.javaë@ ë(H2h
,java.nio.file.Path.resolve(java.lang.String)CALL2
&src\main\java\org\jabref\Launcher.javaë- ë(42j
.org.jabref.Launcher?isDebugEnabled@53.27:53.41CALL2
&src\main\java\org\jabref\Launcher.javaè$ è(22j
.org.jabref.Launcher?isDebugEnabled@53.27:53.41CALL2
&src\main\java\org\jabref\Launcher.javaê ê('2v
:org.jabref.Launcher.addLogToDisk()?directory@131.13:131.22CALL2
&src\main\java\org\jabref\Launcher.javaë# ë(,ë
2org.jabref.Launcher.addLogToDisk()?e@134.29:134.30VARIABLE2
&src\main\java\org\jabref\Launcher.javaÜ Ü("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2O
java.io.IOExceptionTYPE2
&src\main\java\org\jabref\Launcher.javaÜ Ü(≤
&org.jabref.Launcher.initializeLogger()METHOD2
&src\main\java\org\jabref\Launcher.javaò ò(("
isFinalfalse"≤
declarationStringú<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">initializeLogger</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*initializeLogger2b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.javaô ô(2G
voidRETURN_TYPE2
&src\main\java\org\jabref\Launcher.javaò ò(·
morg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)METHOD2
&src\main\java\org\jabref\Launcher.javaü ü(5"
isFinalfalse"≠
declarationStringó<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">handleMultipleAppInstances</mark>(String[] args<mark class="modifier"><mark class="modifier">,</mark></mark> RemotePreferences remotePreferences)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*handleMultipleAppInstances2w
;org.jabref.logic.remote.RemotePreferences.useRemoteServer()CALL2
&src\main\java\org\jabref\Launcher.java° °(-2o
3org.jabref.logic.remote.RemotePreferences.getPort()CALL2
&src\main\java\org\jabref\Launcher.java£K £(R2n
2org.jabref.logic.remote.client.RemoteClient.ping()CALL2
&src\main\java\org\jabref\Launcher.java§ §(!2î
Xorg.jabref.logic.remote.client.RemoteClient.sendCommandLineArguments(java.lang.String[])CALL2
&src\main\java\org\jabref\Launcher.java©! ©(92i
-java.io.PrintStream.println(java.lang.String)CALL2
&src\main\java\org\jabref\Launcher.java≠ ≠(&2ä
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALL2
&src\main\java\org\jabref\Launcher.java≠4 ≠(82y
=org.jabref.logic.remote.client.RemoteClient.RemoteClient(int)CALL2
&src\main\java\org\jabref\Launcher.java£, £(82b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.java† †(2ª
org.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)!remotePreferencesCALL2
&src\main\java\org\jabref\Launcher.java° °(2ª
org.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)!remotePreferencesCALL2
&src\main\java\org\jabref\Launcher.java£9 £(J2≈
àorg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)?remoteClient@163.25:163.37CALL2
&src\main\java\org\jabref\Launcher.java§ §(2b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.java• •(2b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.java® ®(2≈
àorg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)?remoteClient@163.25:163.37CALL2
&src\main\java\org\jabref\Launcher.java© ©( 2Æ
rorg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)!argsCALL2
&src\main\java\org\jabref\Launcher.java©: ©(>2b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.java´ ´(2b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.java∞ ∞(2b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.javaµ µ(2≥
rorg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)!args	PARAMETER2
&src\main\java\org\jabref\Launcher.javaü? ü(C2¿
org.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)!remotePreferences	PARAMETER2
&src\main\java\org\jabref\Launcher.javaüW ü(h2Ã
àorg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)?remoteClient@163.25:163.37DECLARATION2
&src\main\java\org\jabref\Launcher.java£ £(%2J
booleanRETURN_TYPE2
&src\main\java\org\jabref\Launcher.javaü ü(¥
àorg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)?remoteClient@163.25:163.37VARIABLE2
&src\main\java\org\jabref\Launcher.java£ £(%"
typeRemoteClient"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>RemoteClient <mark class="class-field">remoteClient</mark> = new RemoteClient(remotePreferences.getPort())*remoteClient2g
+org.jabref.logic.remote.client.RemoteClientTYPE2
&src\main\java\org\jabref\Launcher.java£ £(2o
3org.jabref.logic.remote.RemotePreferences.getPort()CALL2
&src\main\java\org\jabref\Launcher.java£K £(R2y
=org.jabref.logic.remote.client.RemoteClient.RemoteClient(int)CALL2
&src\main\java\org\jabref\Launcher.java£, £(82ª
org.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)!remotePreferencesCALL2
&src\main\java\org\jabref\Launcher.java£9 £(J—
rorg.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)!args	PARAMETER2
&src\main\java\org\jabref\Launcher.javaü? ü(C"
typeString[]"
isFinalfalse""
declarationStringString[] args*args2N
java.lang.String[]TYPE2
&src\main\java\org\jabref\Launcher.javaü6 ü(>°
org.jabref.Launcher.handleMultipleAppInstances(java.lang.String[], org.jabref.logic.remote.RemotePreferences)!remotePreferences	PARAMETER2
&src\main\java\org\jabref\Launcher.javaüW ü(h"
typeRemotePreferences"
isFinalfalse"8
declarationString#RemotePreferences remotePreferences*remotePreferences2e
)org.jabref.logic.remote.RemotePreferencesTYPE2
&src\main\java\org\jabref\Launcher.javaüE ü(Vá
Jorg.jabref.Launcher.initGlobals(org.jabref.preferences.PreferencesService)METHOD2
&src\main\java\org\jabref\Launcher.javaª ª(#"
isFinalfalse"À
declarationStringµ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">initGlobals</mark>(PreferencesService preferences)"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*initGlobals2∏
|org.jabref.logic.journals.JournalAbbreviationLoader.loadRepository(org.jabref.logic.journals.JournalAbbreviationPreferences)CALL2
&src\main\java\org\jabref\Launcher.javaæ æ(2â
Morg.jabref.preferences.PreferencesService.getJournalAbbreviationPreferences()CALL2
&src\main\java\org\jabref\Launcher.javaæ, æ(M2ã
Oorg.jabref.logic.journals.predatory.PredatoryJournalListLoader.loadRepository()CALL2
&src\main\java\org\jabref\Launcher.java¿ ¿(2Ö
Iorg.jabref.preferences.PreferencesService.getCustomEntryTypesRepository()CALL2
&src\main\java\org\jabref\Launcher.java¬0 ¬(M2Ñ
Horg.jabref.preferences.PreferencesService.getProtectedTermsPreferences()CALL2
&src\main\java\org\jabref\Launcher.java√L √(h2¡
Ñorg.jabref.logic.protectedterms.ProtectedTermsLoader.ProtectedTermsLoader(org.jabref.logic.protectedterms.ProtectedTermsPreferences)CALL2
&src\main\java\org\jabref\Launcher.java√+ √(?2í
Vorg.jabref.Launcher.initGlobals(org.jabref.preferences.PreferencesService)!preferencesCALL2
&src\main\java\org\jabref\Launcher.javaæ  æ(+2í
Vorg.jabref.Launcher.initGlobals(org.jabref.preferences.PreferencesService)!preferencesCALL2
&src\main\java\org\jabref\Launcher.java¬$ ¬(/2í
Vorg.jabref.Launcher.initGlobals(org.jabref.preferences.PreferencesService)!preferencesCALL2
&src\main\java\org\jabref\Launcher.java√@ √(K2ó
Vorg.jabref.Launcher.initGlobals(org.jabref.preferences.PreferencesService)!preferences	PARAMETER2
&src\main\java\org\jabref\Launcher.javaª7 ª(B2G
voidRETURN_TYPE2
&src\main\java\org\jabref\Launcher.javaª ª(Ó
Vorg.jabref.Launcher.initGlobals(org.jabref.preferences.PreferencesService)!preferences	PARAMETER2
&src\main\java\org\jabref\Launcher.javaª7 ª(B"
typePreferencesService"
isFinalfalse"3
declarationStringPreferencesService preferences*preferences2e
)org.jabref.preferences.PreferencesServiceTYPE2
&src\main\java\org\jabref\Launcher.javaª$ ª(6Ï
Iorg.jabref.Launcher.configureProxy(org.jabref.logic.net.ProxyPreferences)METHOD2
&src\main\java\org\jabref\Launcher.java∆ ∆(&"
isFinalfalse"—
declarationStringª<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">configureProxy</mark>(ProxyPreferences proxyPreferences)"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*configureProxy2ê
Torg.jabref.logic.net.ProxyRegisterer.register(org.jabref.logic.net.ProxyPreferences)CALL2
&src\main\java\org\jabref\Launcher.java« «( 2r
6org.jabref.logic.net.ProxyPreferences.shouldUseProxy()CALL2
&src\main\java\org\jabref\Launcher.java» »(+2{
?org.jabref.logic.net.ProxyPreferences.shouldUseAuthentication()CALL2
&src\main\java\org\jabref\Launcher.java»B »(Y2u
9java.net.Authenticator.setDefault(java.net.Authenticator)CALL2
&src\main\java\org\jabref\Launcher.java… …($2x
<org.jabref.logic.net.ProxyAuthenticator.ProxyAuthenticator()CALL2
&src\main\java\org\jabref\Launcher.java…) …(;2ñ
Zorg.jabref.Launcher.configureProxy(org.jabref.logic.net.ProxyPreferences)!proxyPreferencesCALL2
&src\main\java\org\jabref\Launcher.java«! «(12ñ
Zorg.jabref.Launcher.configureProxy(org.jabref.logic.net.ProxyPreferences)!proxyPreferencesCALL2
&src\main\java\org\jabref\Launcher.java» »(2ñ
Zorg.jabref.Launcher.configureProxy(org.jabref.logic.net.ProxyPreferences)!proxyPreferencesCALL2
&src\main\java\org\jabref\Launcher.java»1 »(A2õ
Zorg.jabref.Launcher.configureProxy(org.jabref.logic.net.ProxyPreferences)!proxyPreferences	PARAMETER2
&src\main\java\org\jabref\Launcher.java∆8 ∆(H2G
voidRETURN_TYPE2
&src\main\java\org\jabref\Launcher.java∆ ∆(Ù
Zorg.jabref.Launcher.configureProxy(org.jabref.logic.net.ProxyPreferences)!proxyPreferences	PARAMETER2
&src\main\java\org\jabref\Launcher.java∆8 ∆(H"
typeProxyPreferences"
isFinalfalse"6
declarationString!ProxyPreferences proxyPreferences*proxyPreferences2a
%org.jabref.logic.net.ProxyPreferencesTYPE2
&src\main\java\org\jabref\Launcher.java∆' ∆(7»	
Iorg.jabref.Launcher.configureSSL(org.jabref.logic.net.ssl.SSLPreferences)METHOD2
&src\main\java\org\jabref\Launcher.javaÕ Õ($"
isFinalfalse"À
declarationStringµ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">configureSSL</mark>(SSLPreferences sslPreferences)"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*configureSSL2ô
]org.jabref.logic.net.ssl.TrustStoreManager.createTruststoreFileIfNotExist(java.nio.file.Path)CALL2
&src\main\java\org\jabref\Launcher.javaŒ Œ(82x
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL2
&src\main\java\org\jabref\Launcher.javaŒ> Œ(@2w
;org.jabref.logic.net.ssl.SSLPreferences.getTruststorePath()CALL2
&src\main\java\org\jabref\Launcher.javaŒP Œ(a2î
Xorg.jabref.Launcher.configureSSL(org.jabref.logic.net.ssl.SSLPreferences)!sslPreferencesCALL2
&src\main\java\org\jabref\Launcher.javaŒA Œ(O2ô
Xorg.jabref.Launcher.configureSSL(org.jabref.logic.net.ssl.SSLPreferences)!sslPreferences	PARAMETER2
&src\main\java\org\jabref\Launcher.javaÕ4 Õ(B2G
voidRETURN_TYPE2
&src\main\java\org\jabref\Launcher.javaÕ Õ(Ï
Xorg.jabref.Launcher.configureSSL(org.jabref.logic.net.ssl.SSLPreferences)!sslPreferences	PARAMETER2
&src\main\java\org\jabref\Launcher.javaÕ4 Õ(B"
typeSSLPreferences"
isFinalfalse"2
declarationStringSSLPreferences sslPreferences*sslPreferences2c
'org.jabref.logic.net.ssl.SSLPreferencesTYPE2
&src\main\java\org\jabref\Launcher.javaÕ% Õ(3Õ+
+org.jabref.Launcher.clearOldSearchIndices()METHOD2
&src\main\java\org\jabref\Launcher.java— —(-"
isFinalfalse"∑
declarationString°<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">clearOldSearchIndices</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*clearOldSearchIndices2É
Gorg.jabref.gui.desktop.os.NativeDesktop.getFulltextIndexBaseDirectory()CALL2
&src\main\java\org\jabref\Launcher.java“6 “(S2g
+org.jabref.logic.util.OS.getNativeDesktop()CALL2
&src\main\java\org\jabref\Launcher.java“# “(32Z
java.nio.file.Path.getParent()CALL2
&src\main\java\org\jabref\Launcher.java”( ”(12ª
java.nio.file.Files.createDirectories(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALL2
&src\main\java\org\jabref\Launcher.java÷ ÷(#2v
:java.nio.file.Files.newDirectoryStream(java.nio.file.Path)CALL2
&src\main\java\org\jabref\Launcher.java€2 €(D2å
Pjava.nio.file.Files.isDirectory(java.nio.file.Path, java.nio.file.LinkOption...)CALL2
&src\main\java\org\jabref\Launcher.java› ›(%2g
+java.lang.String.endsWith(java.lang.String)CALL2
&src\main\java\org\jabref\Launcher.java›@ ›(H2Y
java.nio.file.Path.toString()CALL2
&src\main\java\org\jabref\Launcher.java›5 ›(=2m
1java.lang.String.contains(java.lang.CharSequence)CALL2
&src\main\java\org\jabref\Launcher.java›c ›(k2Y
java.nio.file.Path.toString()CALL2
&src\main\java\org\jabref\Launcher.java›X ›(`2g
+java.nio.file.Path.equals(java.lang.Object)CALL2
&src\main\java\org\jabref\Launcher.javaﬁ! ﬁ('2É
Gjava.util.stream.Stream.forEach(java.util.function.Consumer<? super T>)CALL2
&src\main\java\org\jabref\Launcher.java„ „($2å
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL2
&src\main\java\org\jabref\Launcher.java‚ ‚( 2{
?java.util.stream.Stream.sorted(java.util.Comparator<? super T>)CALL2
&src\main\java\org\jabref\Launcher.java· ·(#2ä
Njava.nio.file.Files.walk(java.nio.file.Path, java.nio.file.FileVisitOption...)CALL2
&src\main\java\org\jabref\Launcher.java‡ ‡(2_
#java.util.Comparator.reverseOrder()CALL2
&src\main\java\org\jabref\Launcher.java·/ ·(;2Ü
Jorg.jabref.Launcher.clearOldSearchIndices()?currentIndexPath@210.13:210.29CALL2
&src\main\java\org\jabref\Launcher.java” ”('2Ü
Jorg.jabref.Launcher.clearOldSearchIndices()?currentIndexPath@210.13:210.29CALL2
&src\main\java\org\jabref\Launcher.java÷$ ÷(42b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.javaÿ ÿ(2}
Aorg.jabref.Launcher.clearOldSearchIndices()?appData@211.13:211.20CALL2
&src\main\java\org\jabref\Launcher.javaÿ@ ÿ(G2w
;org.jabref.Launcher.clearOldSearchIndices()?e@215.29:215.30CALL2
&src\main\java\org\jabref\Launcher.javaÿI ÿ(J2}
Aorg.jabref.Launcher.clearOldSearchIndices()?appData@211.13:211.20CALL2
&src\main\java\org\jabref\Launcher.java€E €(L2|
@org.jabref.Launcher.clearOldSearchIndices()?stream@219.35:219.41CALL2
&src\main\java\org\jabref\Launcher.java‹ ‹(#2z
>org.jabref.Launcher.clearOldSearchIndices()?path@220.22:220.26CALL2
&src\main\java\org\jabref\Launcher.java›& ›(*2z
>org.jabref.Launcher.clearOldSearchIndices()?path@220.22:220.26CALL2
&src\main\java\org\jabref\Launcher.java›0 ›(42z
>org.jabref.Launcher.clearOldSearchIndices()?path@220.22:220.26CALL2
&src\main\java\org\jabref\Launcher.java›S ›(W2z
>org.jabref.Launcher.clearOldSearchIndices()?path@220.22:220.26CALL2
&src\main\java\org\jabref\Launcher.javaﬁ ﬁ( 2Ü
Jorg.jabref.Launcher.clearOldSearchIndices()?currentIndexPath@210.13:210.29CALL2
&src\main\java\org\jabref\Launcher.javaﬁ( ﬁ(82b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.javaﬂ ﬂ(2z
>org.jabref.Launcher.clearOldSearchIndices()?path@220.22:220.26CALL2
&src\main\java\org\jabref\Launcher.javaﬂU ﬂ(Y2z
>org.jabref.Launcher.clearOldSearchIndices()?path@220.22:220.26CALL2
&src\main\java\org\jabref\Launcher.java‡ ‡(#2b
&org.jabref.Launcher?LOGGER@52.26:52.32CALL2
&src\main\java\org\jabref\Launcher.javaÁ Á(2}
Aorg.jabref.Launcher.clearOldSearchIndices()?appData@211.13:211.20CALL2
&src\main\java\org\jabref\Launcher.javaÁA Á(H2w
;org.jabref.Launcher.clearOldSearchIndices()?e@230.29:230.30CALL2
&src\main\java\org\jabref\Launcher.javaÁJ Á(K2W
java.nio.file.Path.toFile()CALL2
&src\main\java\org\jabref\Launcher.java‚! ‚(-2Q
java.io.File.delete()CALL2
&src\main\java\org\jabref\Launcher.java„% „(12ç
Jorg.jabref.Launcher.clearOldSearchIndices()?currentIndexPath@210.13:210.29DECLARATION2
&src\main\java\org\jabref\Launcher.java“ “(2Ñ
Aorg.jabref.Launcher.clearOldSearchIndices()?appData@211.13:211.20DECLARATION2
&src\main\java\org\jabref\Launcher.java” ”(2É
@org.jabref.Launcher.clearOldSearchIndices()?stream@219.35:219.41DECLARATION2
&src\main\java\org\jabref\Launcher.java€# €()2Å
>org.jabref.Launcher.clearOldSearchIndices()?path@220.22:220.26DECLARATION2
&src\main\java\org\jabref\Launcher.java‹ ‹(2~
;org.jabref.Launcher.clearOldSearchIndices()?e@215.29:215.30DECLARATION2
&src\main\java\org\jabref\Launcher.java◊ ◊(2~
;org.jabref.Launcher.clearOldSearchIndices()?e@230.29:230.30DECLARATION2
&src\main\java\org\jabref\Launcher.javaÊ Ê(2G
voidRETURN_TYPE2
&src\main\java\org\jabref\Launcher.java— —(°
Jorg.jabref.Launcher.clearOldSearchIndices()?currentIndexPath@210.13:210.29VARIABLE2
&src\main\java\org\jabref\Launcher.java“ “("
typePath"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>Path <mark class="class-field">currentIndexPath</mark> = OS.getNativeDesktop().getFulltextIndexBaseDirectory()*currentIndexPath2N
java.nio.file.PathTYPE2
&src\main\java\org\jabref\Launcher.java“ “(2É
Gorg.jabref.gui.desktop.os.NativeDesktop.getFulltextIndexBaseDirectory()CALL2
&src\main\java\org\jabref\Launcher.java“6 “(S2g
+org.jabref.logic.util.OS.getNativeDesktop()CALL2
&src\main\java\org\jabref\Launcher.java“# “(3‚
Aorg.jabref.Launcher.clearOldSearchIndices()?appData@211.13:211.20VARIABLE2
&src\main\java\org\jabref\Launcher.java” ”("
typePath"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>Path <mark class="class-field">appData</mark> = currentIndexPath.getParent()*appData2N
java.nio.file.PathTYPE2
&src\main\java\org\jabref\Launcher.java” ”(2Z
java.nio.file.Path.getParent()CALL2
&src\main\java\org\jabref\Launcher.java”( ”(12Ü
Jorg.jabref.Launcher.clearOldSearchIndices()?currentIndexPath@210.13:210.29CALL2
&src\main\java\org\jabref\Launcher.java” ”('˝
@org.jabref.Launcher.clearOldSearchIndices()?stream@219.35:219.41VARIABLE2
&src\main\java\org\jabref\Launcher.java€# €()"
typeDirectoryStream<Path>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>DirectoryStream<Path> <mark class="class-field">stream</mark> = Files.newDirectoryStream(appData)*stream2Y
java.nio.file.DirectoryStreamTYPE2
&src\main\java\org\jabref\Launcher.java€ €(2W
java.nio.file.PathTYPE_ARGUMENT2
&src\main\java\org\jabref\Launcher.java€ €(!2v
:java.nio.file.Files.newDirectoryStream(java.nio.file.Path)CALL2
&src\main\java\org\jabref\Launcher.java€2 €(D2}
Aorg.jabref.Launcher.clearOldSearchIndices()?appData@211.13:211.20CALL2
&src\main\java\org\jabref\Launcher.java€E €(L‘
>org.jabref.Launcher.clearOldSearchIndices()?path@220.22:220.26VARIABLE2
&src\main\java\org\jabref\Launcher.java‹ ‹("
typePath"
isFinalfalse"^
declarationStringI<mark class="modifier"> </mark>Path <mark class="class-field">path</mark>*path2N
java.nio.file.PathTYPE2
&src\main\java\org\jabref\Launcher.java‹ ‹(ö
;org.jabref.Launcher.clearOldSearchIndices()?e@215.29:215.30VARIABLE2
&src\main\java\org\jabref\Launcher.java◊ ◊("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2O
java.io.IOExceptionTYPE2
&src\main\java\org\jabref\Launcher.java◊ ◊(ö
;org.jabref.Launcher.clearOldSearchIndices()?e@230.29:230.30VARIABLE2
&src\main\java\org\jabref\Launcher.javaÊ Ê("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2O
java.io.IOExceptionTYPE2
&src\main\java\org\jabref\Launcher.javaÊ Ê(ê
&org.jabref.Launcher?LOGGER@52.26:52.32VARIABLE0
&src\main\java\org\jabref\Launcher.java4 4( "
isFinalfalse"
typeLogger"é
declarationStringy<mark class="modifier">private </mark><mark class="modifier">static </mark>Logger <mark class="class-field">LOGGER</mark>"
isStatictrue"
accessprivate*LOGGER2J
org.slf4j.LoggerTYPE0
&src\main\java\org\jabref\Launcher.java4 4(¿
.org.jabref.Launcher?isDebugEnabled@53.27:53.41VARIABLE0
&src\main\java\org\jabref\Launcher.java5 5()"
isFinalfalse"
typeboolean"∂
declarationString†<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="class-field">isDebugEnabled</mark>"
isStatictrue"
accessprivate*isDebugEnabled2A
booleanTYPE0
&src\main\java\org\jabref\Launcher.java5 5(