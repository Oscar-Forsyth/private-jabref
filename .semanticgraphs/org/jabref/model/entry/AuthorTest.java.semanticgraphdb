
4src\test\java\org\jabref\model\entry\AuthorTest.java›
!org.jabref.model.entry.AuthorTestCLASS>
4src\test\java\org\jabref\model\entry\AuthorTest.java	 	("!
packageorg.jabref.model.entry"
isFinalfalse"
inner classfalse"

isAbstractfalse"b
declarationStringM<mark class="modifier"> </mark><mark class="modifier">class </mark>AuthorTest"
accesspackage_private*
AuthorTest2ç
>org.jabref.model.entry.AuthorTest.addDotIfAbbreviationAddDot()DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.java	 (#2ü
Porg.jabref.model.entry.AuthorTest.addDotIfAbbreviationDoesNotAddMultipleSpaces()DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.java	 (52¢
Sorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationDoNotAddDot(java.lang.String)DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.java	 ((2™
[org.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfNameIsNullOrEmpty(java.lang.String)DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.java%	 %(02ß
Xorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationLowerCaseLetters(java.lang.String)DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.java+	 +(-2¢
Sorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationStartWithUpperCaseAndHyphen()DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.java0	 0(82û
Oorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationEndsWithUpperCaseLetter()DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.java5	 5(42§
Uorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationEndsWithUpperCaseLetterSpaced()DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.java:	 :(:2ö
Korg.jabref.model.entry.AuthorTest.addDotIfAbbreviationEndsWithWhiteSpaced()DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.java?	 ?(02°
Rorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationEndsWithDoubleAbbreviation()DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.javaD	 D(72©
Zorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfStartsWithNumber(java.lang.String)DECLARATION>
4src\test\java\org\jabref\model\entry\AuthorTest.javaJ	 J(/‰	
>org.jabref.model.entry.AuthorTest.addDotIfAbbreviationAddDot()METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.java	 (#"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationAddDot</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*addDotIfAbbreviationAddDot2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java" (62å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java% (92å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java% (92å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java% (92å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java% (92S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java (ﬁ
Porg.jabref.model.entry.AuthorTest.addDotIfAbbreviationDoesNotAddMultipleSpaces()METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.java	 (5"
isFinalfalse"Ã
declarationString∂<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationDoesNotAddMultipleSpaces</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*,addDotIfAbbreviationDoesNotAddMultipleSpaces2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java% (92S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java (¡
Sorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationDoNotAddDot(java.lang.String)METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.java	 (("
isFinalfalse"»
declarationString≤ <br><mark class="annotation">@ValueSource(strings</mark> = { "O."<mark class="modifier"><mark class="modifier">,</mark></mark> "A. O."<mark class="modifier"><mark class="modifier">,</mark></mark> "A.-O."<mark class="modifier"><mark class="modifier">,</mark></mark> "O. Moore"<mark class="modifier"><mark class="modifier">,</mark></mark> "A. O. Moore"<mark class="modifier"><mark class="modifier">,</mark></mark> "O. von Moore"<mark class="modifier"><mark class="modifier">,</mark></mark> "A.-O. Moore"<mark class="modifier"><mark class="modifier">,</mark></mark> "Moore<mark class="modifier"><mark class="modifier">,</mark></mark> O."<mark class="modifier"><mark class="modifier">,</mark></mark> "Moore<mark class="modifier"><mark class="modifier">,</mark></mark> O.<mark class="modifier"><mark class="modifier">,</mark></mark> Jr."<mark class="modifier"><mark class="modifier">,</mark></mark> "Moore<mark class="modifier"><mark class="modifier">,</mark></mark> A. O."<mark class="modifier"><mark class="modifier">,</mark></mark> "Moore<mark class="modifier"><mark class="modifier">,</mark></mark> A.-O."<mark class="modifier"><mark class="modifier">,</mark></mark> "MEmre"<mark class="modifier"><mark class="modifier">,</mark></mark> "{\\'{E}}douard"<mark class="modifier"><mark class="modifier">,</mark></mark> "J{\\\"o}rg"<mark class="modifier"><mark class="modifier">,</mark></mark> "Moore<mark class="modifier"><mark class="modifier">,</mark></mark> O. and O. Moore"<mark class="modifier"><mark class="modifier">,</mark></mark> "Moore<mark class="modifier"><mark class="modifier">,</mark></mark> O. and O. Moore and Moore<mark class="modifier"><mark class="modifier">,</mark></mark> O. O." }) <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationDoNotAddDot</mark>(String input)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*addDotIfAbbreviationDoNotAddDot2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java #  (72°
Yorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationDoNotAddDot(java.lang.String)!inputCALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java   (2°
Yorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationDoNotAddDot(java.lang.String)!inputCALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java 8  (=2¶
Yorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationDoNotAddDot(java.lang.String)!input	PARAMETER>
4src\test\java\org\jabref\model\entry\AuthorTest.java0 (52S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java (Ã
Yorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationDoNotAddDot(java.lang.String)!input	PARAMETER>
4src\test\java\org\jabref\model\entry\AuthorTest.java0 (5"
typeString"
isFinalfalse"!
declarationStringString input*input2X
java.lang.StringTYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java) (/á

[org.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfNameIsNullOrEmpty(java.lang.String)METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.java%	 %(0"
isFinalfalse"Ê
declarationString– <br><mark class="annotation">@NullAndEmptySource</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationIfNameIsNullOrEmpty</mark>(String input)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'addDotIfAbbreviationIfNameIsNullOrEmpty2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java&# &(72©
aorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfNameIsNullOrEmpty(java.lang.String)!inputCALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java& &(2©
aorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfNameIsNullOrEmpty(java.lang.String)!inputCALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java&8 &(=2Æ
aorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfNameIsNullOrEmpty(java.lang.String)!input	PARAMETER>
4src\test\java\org\jabref\model\entry\AuthorTest.java%8 %(=2S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java% %(‘
aorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfNameIsNullOrEmpty(java.lang.String)!input	PARAMETER>
4src\test\java\org\jabref\model\entry\AuthorTest.java%8 %(="
typeString"
isFinalfalse"!
declarationStringString input*input2X
java.lang.StringTYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java%1 %(7≈

Xorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationLowerCaseLetters(java.lang.String)METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.java+	 +(-"
isFinalfalse"≥
declarationStringù <br><mark class="annotation">@ValueSource(strings</mark> = { "asdf"<mark class="modifier"><mark class="modifier">,</mark></mark> "a" }) <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationLowerCaseLetters</mark>(String input)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$addDotIfAbbreviationLowerCaseLetters2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java,# ,(72¶
^org.jabref.model.entry.AuthorTest.addDotIfAbbreviationLowerCaseLetters(java.lang.String)!inputCALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java, ,(2¶
^org.jabref.model.entry.AuthorTest.addDotIfAbbreviationLowerCaseLetters(java.lang.String)!inputCALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java,8 ,(=2´
^org.jabref.model.entry.AuthorTest.addDotIfAbbreviationLowerCaseLetters(java.lang.String)!input	PARAMETER>
4src\test\java\org\jabref\model\entry\AuthorTest.java+5 +(:2S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java+ +(—
^org.jabref.model.entry.AuthorTest.addDotIfAbbreviationLowerCaseLetters(java.lang.String)!input	PARAMETER>
4src\test\java\org\jabref\model\entry\AuthorTest.java+5 +(:"
typeString"
isFinalfalse"!
declarationStringString input*input2X
java.lang.StringTYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java+. +(4Á
Sorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationStartWithUpperCaseAndHyphen()METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.java0	 0(8"
isFinalfalse"œ
declarationStringπ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationStartWithUpperCaseAndHyphen</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*/addDotIfAbbreviationStartWithUpperCaseAndHyphen2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java1( 1(<2S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java0 0(€
Oorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationEndsWithUpperCaseLetter()METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.java5	 5(4"
isFinalfalse"À
declarationStringµ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationEndsWithUpperCaseLetter</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*+addDotIfAbbreviationEndsWithUpperCaseLetter2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java6& 6(:2S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java5 5(Ì
Uorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationEndsWithUpperCaseLetterSpaced()METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.java:	 :(:"
isFinalfalse"—
declarationStringª<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationEndsWithUpperCaseLetterSpaced</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*1addDotIfAbbreviationEndsWithUpperCaseLetterSpaced2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java;( ;(<2S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java: :(œ
Korg.jabref.model.entry.AuthorTest.addDotIfAbbreviationEndsWithWhiteSpaced()METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.java?	 ?(0"
isFinalfalse"«
declarationString±<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationEndsWithWhiteSpaced</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'addDotIfAbbreviationEndsWithWhiteSpaced2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.java@% @(92S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.java? ?(‰
Rorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationEndsWithDoubleAbbreviation()METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.javaD	 D(7"
isFinalfalse"Œ
declarationString∏<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationEndsWithDoubleAbbreviation</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*.addDotIfAbbreviationEndsWithDoubleAbbreviation2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.javaE+ E(?2S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.javaD D(—

Zorg.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfStartsWithNumber(java.lang.String)METHOD>
4src\test\java\org\jabref\model\entry\AuthorTest.javaJ	 J(/"
isFinalfalse"µ
declarationStringü <br><mark class="annotation">@ValueSource(strings</mark> = { "1"<mark class="modifier"><mark class="modifier">,</mark></mark> "1 23" }) <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addDotIfAbbreviationIfStartsWithNumber</mark>(String input)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*&addDotIfAbbreviationIfStartsWithNumber2å
Dorg.jabref.model.entry.Author.addDotIfAbbreviation(java.lang.String)CALL>
4src\test\java\org\jabref\model\entry\AuthorTest.javaK# K(72®
`org.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfStartsWithNumber(java.lang.String)!inputCALL>
4src\test\java\org\jabref\model\entry\AuthorTest.javaK K(2®
`org.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfStartsWithNumber(java.lang.String)!inputCALL>
4src\test\java\org\jabref\model\entry\AuthorTest.javaK8 K(=2≠
`org.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfStartsWithNumber(java.lang.String)!input	PARAMETER>
4src\test\java\org\jabref\model\entry\AuthorTest.javaJ7 J(<2S
voidRETURN_TYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.javaJ J(”
`org.jabref.model.entry.AuthorTest.addDotIfAbbreviationIfStartsWithNumber(java.lang.String)!input	PARAMETER>
4src\test\java\org\jabref\model\entry\AuthorTest.javaJ7 J(<"
typeString"
isFinalfalse"!
declarationStringString input*input2X
java.lang.StringTYPE>
4src\test\java\org\jabref\model\entry\AuthorTest.javaJ0 J(6