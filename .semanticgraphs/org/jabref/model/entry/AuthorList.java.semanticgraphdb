
4src\main\java\org\jabref\model\entry\AuthorList.javaü,
!org.jabref.model.entry.AuthorListCLASS>
4src\main\java\org\jabref\model\entry\AuthorList.javau u("!
packageorg.jabref.model.entry"
isFinalfalse"
inner classfalse"

isAbstractfalse"–
declarationString∫<mark class="annotation">@AllowedToUseLogic("because it needs access to AuthorList parser")</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>AuthorList"
accesspublic*
AuthorList2¨
[org.jabref.model.entry.AuthorList.AuthorList(java.util.List<org.jabref.model.entry.Author>)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÉ É(2§
Sorg.jabref.model.entry.AuthorList.of(java.util.List<org.jabref.model.entry.Author>)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaá á(2ó
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaã ã(2|
+org.jabref.model.entry.AuthorList.collect()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaè3 è(:2ì
¡org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaì ì(32∑
forg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaò ò(32ä
9org.jabref.model.entry.AuthorList.parse(java.lang.String)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java´ ´("2¥
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaº º(62ú
Korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java≈ ≈(02≥
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒ Œ(52õ
Jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java◊ ◊(/2§
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java‡ ‡(/2©
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÈ È(42†
Oorg.jabref.model.entry.AuthorList.fixAuthorForAlphabetization(java.lang.String)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÚ Ú(42î
Corg.jabref.model.entry.AuthorList.fixAuthorNatbib(java.lang.String)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java˚ ˚((2á
6org.jabref.model.entry.AuthorList.getNumberOfAuthors()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ Ñ(!2|
+org.jabref.model.entry.AuthorList.isEmpty()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaç ç(2Å
0org.jabref.model.entry.AuthorList.getAuthor(int)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaó ó(2
.org.jabref.model.entry.AuthorList.getAuthors()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java† †("2~
-org.jabref.model.entry.AuthorList.latexFree()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaß ß(2Ä
/org.jabref.model.entry.AuthorList.getAsNatbib()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaΩ Ω(2ä
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java÷ ÷( 2ò
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÏ Ï(%2}
,org.jabref.model.entry.AuthorList.toString()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÒ Ò(2ñ
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÇ Ç(,2ü
Norg.jabref.model.entry.AuthorList.getAsLastFirstFirstLastNamesWithAnd(boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaç ç(52ò
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java≠ ≠(%2ã
:org.jabref.model.entry.AuthorList.equals(java.lang.Object)DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java∑ ∑(2}
,org.jabref.model.entry.AuthorList.hashCode()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaƒ ƒ(2è
>org.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java’ ’(,2ä
9org.jabref.model.entry.AuthorList.getForAlphabetization()DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java‰ ‰('2ã
<org.jabref.model.entry.AuthorList?AUTHOR_CACHE@119.49:119.61DECLARATION>
4src\main\java\org\jabref\model\entry\AuthorList.javaw1 w(=2Ü
7org.jabref.model.entry.AuthorList?authors@120.31:120.38DECLARATION>
4src\main\java\org\jabref\model\entry\AuthorList.javax x(&2è
@org.jabref.model.entry.AuthorList?latexFreeAuthors@121.23:121.39DECLARATION>
4src\main\java\org\jabref\model\entry\AuthorList.javay y('É
[org.jabref.model.entry.AuthorList.AuthorList(java.util.List<org.jabref.model.entry.Author>)CONSTRUCTOR@
4src\main\java\org\jabref\model\entry\AuthorList.javaÉ É("}
declarationStringh<mark class="modifier">private </mark><mark class="method">AuthorList</mark>(List&lt;Author&gt; authors)*
AuthorList2m
#java.util.Objects.requireNonNull(T)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ Ñ(-2≠
corg.jabref.model.entry.AuthorList.AuthorList(java.util.List<org.jabref.model.entry.Author>)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ. Ñ(52Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ Ñ(2≤
corg.jabref.model.entry.AuthorList.AuthorList(java.util.List<org.jabref.model.entry.Author>)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÉ$ É(+2r
!org.jabref.model.entry.AuthorListRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÉ É(⁄
corg.jabref.model.entry.AuthorList.AuthorList(java.util.List<org.jabref.model.entry.Author>)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÉ$ É(+"
typeList<Author>"
isFinalfalse")
declarationStringList<Author> authors*authors2X
java.util.ListTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÉ É(2p
org.jabref.model.entry.AuthorTYPE_ARGUMENT@
4src\main\java\org\jabref\model\entry\AuthorList.javaÉ É("†	
Sorg.jabref.model.entry.AuthorList.of(java.util.List<org.jabref.model.entry.Author>)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaá á("
isFinalfalse"•
declarationStringè<mark class="modifier">public </mark><mark class="modifier">static </mark>AuthorList <mark class="method">of</mark>(List&lt;Author&gt; authors)"
isStatictrue"
accesspublic"

isAbstractfalse"
type
AuthorList*of2Ç
8java.util.List.copyOf(java.util.Collection<? extends E>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaà# à()2•
[org.jabref.model.entry.AuthorList.AuthorList(java.util.List<org.jabref.model.entry.Author>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaà à(2•
[org.jabref.model.entry.AuthorList.of(java.util.List<org.jabref.model.entry.Author>)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaà* à(12™
[org.jabref.model.entry.AuthorList.of(java.util.List<org.jabref.model.entry.Author>)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaá- á(42r
!org.jabref.model.entry.AuthorListRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaá á(“
[org.jabref.model.entry.AuthorList.of(java.util.List<org.jabref.model.entry.Author>)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaá- á(4"
typeList<Author>"
isFinalfalse")
declarationStringList<Author> authors*authors2X
java.util.ListTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaá  á($2p
org.jabref.model.entry.AuthorTYPE_ARGUMENT@
4src\main\java\org\jabref\model\entry\AuthorList.javaá% á(+Œ
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaã ã("
isFinalfalse"ú
declarationStringÜ<mark class="modifier">public </mark><mark class="modifier">static </mark>AuthorList <mark class="method">of</mark>(Author... authors)"
isStatictrue"
accesspublic"

isAbstractfalse"
type
AuthorList*of2a
java.util.List.of(E...)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaå# å(%2•
[org.jabref.model.entry.AuthorList.AuthorList(java.util.List<org.jabref.model.entry.Author>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaå å(2ò
Norg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaå& å(-2ù
Norg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaã* ã(12r
!org.jabref.model.entry.AuthorListRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaã ã(ÿ
Norg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaã* ã(1"
typeAuthor"
isFinalfalse"#
declarationStringAuthor authors*authors2i
org.jabref.model.entry.Author[]TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaã  ã(&º	
+org.jabref.model.entry.AuthorList.collect()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaè3 è(:"
isFinalfalse"¢
declarationStringå<mark class="modifier">public </mark><mark class="modifier">static </mark>Collector&lt;Author<mark class="modifier"><mark class="modifier">,</mark></mark>?<mark class="modifier"><mark class="modifier">,</mark></mark>AuthorList&gt; <mark class="method">collect</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"(
type Collector<Author, ?, AuthorList>*collect2¿
vjava.util.stream.Collectors.collectingAndThen(java.util.stream.Collector<T, A, R>, java.util.function.Function<R, RR>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaê ê(+2z
0java.util.stream.Collectors.toUnmodifiableList()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaê7 ê(I2k
java.util.stream.CollectorRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaè è(2w
org.jabref.model.entry.AuthorRETURN_TYPE_ARGUMENT@
4src\main\java\org\jabref\model\entry\AuthorList.javaè è("2{
!org.jabref.model.entry.AuthorListRETURN_TYPE_ARGUMENT@
4src\main\java\org\jabref\model\entry\AuthorList.javaè' è(1ˇ
¡org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaì ì(3"
isFinalfalse"∆
declarationString∞<mark class="modifier">private </mark><mark class="modifier">static </mark>String <mark class="method">andCoordinatedConjunction</mark>(List&lt;Author&gt; authors<mark class="modifier"><mark class="modifier">,</mark></mark> Function&lt;Author<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; style<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> oxfordComma)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeString*andCoordinatedConjunction2ñ
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî; î(B2ö
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî0 î(32g
java.util.Collection.stream()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî' î(-2z
0java.util.stream.Collectors.toUnmodifiableList()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaîN î(`2∞
forg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaï ï((2î
…org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî î(&2í
«org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!styleCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî4 î(92´
‡org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)?formattedAuthors@148.12:148.28CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaï) ï(92ò
Õorg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!oxfordCommaCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaï; ï(F2ô
…org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaìA ì(H2ó
«org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!style	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaìc ì(h2ù
Õorg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaìr ì(}2≤
‡org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)?formattedAuthors@148.12:148.28DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaî î(2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaì ì(µ
‡org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)?formattedAuthors@148.12:148.28VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaî î("
typevar"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>var <mark class="class-field">formattedAuthors</mark> = authors.stream().map(style).collect(Collectors.toUnmodifiableList())*formattedAuthors2X
java.util.ListTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaî î(2ñ
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî; î(B2ö
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî0 î(32g
java.util.Collection.stream()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî' î(-2z
0java.util.stream.Collectors.toUnmodifiableList()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaîN î(`2î
…org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî î(&2í
«org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!styleCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaî4 î(9¡
…org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaìA ì(H"
typeList<Author>"
isFinalfalse")
declarationStringList<Author> authors*authors2X
java.util.ListTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaì4 ì(82p
org.jabref.model.entry.AuthorTYPE_ARGUMENT@
4src\main\java\org\jabref\model\entry\AuthorList.javaì9 ì(?≈
«org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!style	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaìc ì(h" 
typeFunction<Author, String>"
isFinalfalse"3
declarationStringFunction<Author, String> style*style2e
java.util.function.FunctionTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaìJ ì(R2c
java.lang.StringTYPE_ARGUMENT@
4src\main\java\org\jabref\model\entry\AuthorList.javaìS ì(Y2p
org.jabref.model.entry.AuthorTYPE_ARGUMENT@
4src\main\java\org\jabref\model\entry\AuthorList.javaì[ ì(aË
Õorg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaìr ì(}"
typeboolean"
isFinalfalse"F
declarationString1<mark class="modifier">boolean</mark> oxfordComma*oxfordComma2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaìj ì(q€
forg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaò ò(3"
isFinalfalse"®
declarationStringí<mark class="modifier">private </mark><mark class="modifier">static </mark>String <mark class="method">andCoordinatedConjunction</mark>(List&lt;String&gt; authors<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> oxfordComma)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeString*andCoordinatedConjunction2_
java.util.List.size()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaö  ö($2_
java.util.List.size()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaõ õ(#2º
rorg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)!oxfordCommaCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaô ô(*2∏
norg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaö ö(2∏
norg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaõ õ(2Ω
norg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaòA ò(H2¡
rorg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaòR ò(]2‘
Çorg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)?lastDelimiter@153.15:153.28DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaô ô(2œ
~org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)?lastIndex@154.12:154.21DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaö ö(2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaò ò(À
Çorg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)?lastDelimiter@153.15:153.28VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaô ô("
typeString"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>String <mark class="class-field">lastDelimiter</mark> = oxfordComma ? "<mark class="modifier">,</mark> and " : " and "*lastDelimiter2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaô ô(2º
rorg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)!oxfordCommaCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaô ô(*˙
~org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)?lastIndex@154.12:154.21VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaö ö("
typeint"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">lastIndex</mark> = authors.size() - 1*	lastIndex2M
intTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaö ö(2_
java.util.List.size()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaö  ö($2∏
norg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaö ö(ÿ
norg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaòA ò(H"
typeList<String>"
isFinalfalse")
declarationStringList<String> authors*authors2X
java.util.ListTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaò4 ò(82c
java.lang.StringTYPE_ARGUMENT@
4src\main\java\org\jabref\model\entry\AuthorList.javaò9 ò(?å
rorg.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<java.lang.String>, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaòR ò(]"
typeboolean"
isFinalfalse"F
declarationString1<mark class="modifier">boolean</mark> oxfordComma*oxfordComma2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaòJ ò(Qö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java´ ´(""
isFinalfalse"¢
declarationStringå<mark class="modifier">public </mark><mark class="modifier">static </mark>AuthorList <mark class="method">parse</mark>(final String authors)"
isStatictrue"
accesspublic"

isAbstractfalse"
type
AuthorList*parse2m
#java.util.Objects.requireNonNull(T)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¨ ¨(2m
#java.util.Map.get(java.lang.Object)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ- Æ(02å
Borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java±  ±(%2a
java.util.Map.put(K, V)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java≤ ≤(2á
=org.jabref.logic.importer.AuthorListParser.AuthorListParser()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java∞* ∞(:2ã
Aorg.jabref.model.entry.AuthorList.parse(java.lang.String)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¨ ¨(&2Ü
<org.jabref.model.entry.AuthorList?AUTHOR_CACHE@119.49:119.61CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ  Æ(,2ã
Aorg.jabref.model.entry.AuthorList.parse(java.lang.String)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ1 Æ(82ú
Rorg.jabref.model.entry.AuthorList.parse(java.lang.String)?authorList@174.19:174.29CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaØ Ø(2ú
Rorg.jabref.model.entry.AuthorList.parse(java.lang.String)?authorList@174.19:174.29CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java± ±(2ò
Norg.jabref.model.entry.AuthorList.parse(java.lang.String)?parser@176.29:176.35CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java± ±(2ã
Aorg.jabref.model.entry.AuthorList.parse(java.lang.String)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.java±& ±(-2Ü
<org.jabref.model.entry.AuthorList?AUTHOR_CACHE@119.49:119.61CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java≤ ≤(2ã
Aorg.jabref.model.entry.AuthorList.parse(java.lang.String)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.java≤ ≤($2ú
Rorg.jabref.model.entry.AuthorList.parse(java.lang.String)?authorList@174.19:174.29CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java≤& ≤(02ú
Rorg.jabref.model.entry.AuthorList.parse(java.lang.String)?authorList@174.19:174.29CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¥ ¥(2ê
Aorg.jabref.model.entry.AuthorList.parse(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java´0 ´(72£
Rorg.jabref.model.entry.AuthorList.parse(java.lang.String)?authorList@174.19:174.29DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ Æ(2ü
Norg.jabref.model.entry.AuthorList.parse(java.lang.String)?parser@176.29:176.35DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java∞ ∞(#2r
!org.jabref.model.entry.AuthorListRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java´ ´(Œ
Rorg.jabref.model.entry.AuthorList.parse(java.lang.String)?authorList@174.19:174.29VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ Æ("
type
AuthorList"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>AuthorList <mark class="class-field">authorList</mark> = AUTHOR_CACHE.get(authors)*
authorList2k
!org.jabref.model.entry.AuthorListTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ Æ(2m
#java.util.Map.get(java.lang.Object)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ- Æ(02Ü
<org.jabref.model.entry.AuthorList?AUTHOR_CACHE@119.49:119.61CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ  Æ(,2ã
Aorg.jabref.model.entry.AuthorList.parse(java.lang.String)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ1 Æ(8ÿ
Norg.jabref.model.entry.AuthorList.parse(java.lang.String)?parser@176.29:176.35VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.java∞ ∞(#"
typeAuthorListParser"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>AuthorListParser <mark class="class-field">parser</mark> = new AuthorListParser()*parser2t
*org.jabref.logic.importer.AuthorListParserTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java∞ ∞(2á
=org.jabref.logic.importer.AuthorListParser.AuthorListParser()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java∞* ∞(:ª
Aorg.jabref.model.entry.AuthorList.parse(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java´0 ´(7"
typeString"
isFinaltrue"#
declarationStringString authors*authors2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java´) ´(/£
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaº º(6"
isFinalfalse"ç
declarationString˜<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">fixAuthorFirstNameFirstCommas</mark>(String authors<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> abbreviate<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> oxfordComma)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*fixAuthorFirstNameFirstCommas2ë
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaΩ) Ω(<2É
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaΩ Ω(2µ
korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaΩ  Ω('2∏
norg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)!abbreviateCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaΩ= Ω(G2π
oorg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)!oxfordCommaCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaΩI Ω(T2∫
korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaº> º(E2Ω
norg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaºO º(Y2æ
oorg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaºc º(n2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaº º(Ê
korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaº> º(E"
typeString"
isFinalfalse"#
declarationStringString authors*authors2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaº7 º(=Ü
norg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaºO º(Y"
typeboolean"
isFinalfalse"E
declarationString0<mark class="modifier">boolean</mark> abbreviate*
abbreviate2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaºG º(Nâ
oorg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaºc º(n"
typeboolean"
isFinalfalse"F
declarationString1<mark class="modifier">boolean</mark> oxfordComma*oxfordComma2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaº[ º(bÒ
Korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java≈ ≈(0"
isFinalfalse"™
declarationStringî<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">fixAuthorFirstNameFirst</mark>(String authors)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*fixAuthorFirstNameFirst2à
>org.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java∆) ∆(C2É
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java∆ ∆(2ù
Sorg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.java∆  ∆('2¢
Sorg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java≈8 ≈(?2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java≈ ≈(Œ
Sorg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java≈8 ≈(?"
typeString"
isFinalfalse"#
declarationStringString authors*authors2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java≈1 ≈(7ö
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒ Œ(5"
isFinalfalse"å
declarationStringˆ<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">fixAuthorLastNameFirstCommas</mark>(String authors<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> abbreviate<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> oxfordComma)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*fixAuthorLastNameFirstCommas2ë
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaœ) œ(<2É
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaœ œ(2¥
jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaœ  œ('2∑
morg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)!abbreviateCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaœ= œ(G2∏
norg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)!oxfordCommaCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaœI œ(T2π
jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒ= Œ(D2º
morg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒN Œ(X2Ω
norg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒb Œ(m2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒ Œ(Â
jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒ= Œ(D"
typeString"
isFinalfalse"#
declarationStringString authors*authors2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒ6 Œ(<Ö
morg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒN Œ(X"
typeboolean"
isFinalfalse"E
declarationString0<mark class="modifier">boolean</mark> abbreviate*
abbreviate2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒF Œ(Mà
norg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒb Œ(m"
typeboolean"
isFinalfalse"F
declarationString1<mark class="modifier">boolean</mark> oxfordComma*oxfordComma2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaŒZ Œ(aÛ
Jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java◊ ◊(/"
isFinalfalse"©
declarationStringì<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">fixAuthorLastNameFirst</mark>(String authors)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*fixAuthorLastNameFirst2è
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÿ) ÿ(C2É
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÿ ÿ(2ú
Rorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÿ  ÿ('2°
Rorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java◊7 ◊(>2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java◊ ◊(Õ
Rorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java◊7 ◊(>"
typeString"
isFinalfalse"#
declarationStringString authors*authors2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java◊0 ◊(6◊
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java‡ ‡(/"
isFinalfalse"ó
declarationStringÅ<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">fixAuthorLastNameFirst</mark>(String authors<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> abbreviate)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*fixAuthorLastNameFirst2è
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java·) ·(C2É
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java· ·(2•
[org.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.java·  ·('2®
^org.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)!abbreviateCALL@
4src\main\java\org\jabref\model\entry\AuthorList.java·D ·(N2™
[org.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java‡7 ‡(>2≠
^org.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java‡H ‡(R2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java‡ ‡(÷
[org.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java‡7 ‡(>"
typeString"
isFinalfalse"#
declarationStringString authors*authors2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java‡0 ‡(6ˆ
^org.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java‡H ‡(R"
typeboolean"
isFinalfalse"E
declarationString0<mark class="modifier">boolean</mark> abbreviate*
abbreviate2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java‡@ ‡(GÒ
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaÈ È(4"
isFinalfalse"ù
declarationStringá<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">fixAuthorLastNameOnlyCommas</mark>(String authors<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> oxfordComma)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*fixAuthorLastNameOnlyCommas2É
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÍ) Í(72É
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÍ Í(2™
`org.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÍ  Í('2Æ
dorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)!oxfordCommaCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÍ8 Í(C2Ø
`org.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÈ< È(C2≥
dorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÈM È(X2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÈ È(€
`org.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÈ< È(C"
typeString"
isFinalfalse"#
declarationStringString authors*authors2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÈ5 È(;˛
dorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÈM È(X"
typeboolean"
isFinalfalse"F
declarationString1<mark class="modifier">boolean</mark> oxfordComma*oxfordComma2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÈE È(LÄ	
Oorg.jabref.model.entry.AuthorList.fixAuthorForAlphabetization(java.lang.String)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaÚ Ú(4"
isFinalfalse"Æ
declarationStringò<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">fixAuthorForAlphabetization</mark>(String authors)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*fixAuthorForAlphabetization2É
9org.jabref.model.entry.AuthorList.getForAlphabetization()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÛ) Û(>2É
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÛ Û(2°
Worg.jabref.model.entry.AuthorList.fixAuthorForAlphabetization(java.lang.String)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÛ  Û('2¶
Worg.jabref.model.entry.AuthorList.fixAuthorForAlphabetization(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÚ< Ú(C2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÚ Ú(“
Worg.jabref.model.entry.AuthorList.fixAuthorForAlphabetization(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÚ< Ú(C"
typeString"
isFinalfalse"#
declarationStringString authors*authors2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÚ5 Ú(;π
Corg.jabref.model.entry.AuthorList.fixAuthorNatbib(java.lang.String)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java˚ ˚(("
isFinalfalse"¢
declarationStringå<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">fixAuthorNatbib</mark>(String authors)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*fixAuthorNatbib2y
/org.jabref.model.entry.AuthorList.getAsNatbib()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¸) ¸(42É
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¸ ¸(2ï
Korg.jabref.model.entry.AuthorList.fixAuthorNatbib(java.lang.String)!authorsCALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¸  ¸('2ö
Korg.jabref.model.entry.AuthorList.fixAuthorNatbib(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java˚0 ˚(72a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java˚ ˚(∆
Korg.jabref.model.entry.AuthorList.fixAuthorNatbib(java.lang.String)!authors	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java˚0 ˚(7"
typeString"
isFinalfalse"#
declarationStringString authors*authors2Z
java.lang.StringTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java˚) ˚(/π
6org.jabref.model.entry.AuthorList.getNumberOfAuthors()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ Ñ(!"
isFinalfalse"å
declarationStringw<mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">getNumberOfAuthors</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*getNumberOfAuthors2_
java.util.List.size()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÖ Ö(2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÖ Ö(2T
intRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ Ñ(ß
+org.jabref.model.entry.AuthorList.isEmpty()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaç ç("
isFinalfalse"Ö
declarationStringp<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isEmpty2b
java.util.List.isEmpty()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaé é(2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaé é(2X
booleanRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaç ç( 
0org.jabref.model.entry.AuthorList.getAuthor(int)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaó ó("
isFinalfalse"ã
declarationStringv<mark class="modifier">public </mark>Author <mark class="method">getAuthor</mark>(<mark class="modifier">int</mark> i)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeAuthor*	getAuthor2a
java.util.List.get(int)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaò ò(2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaò ò(2|
2org.jabref.model.entry.AuthorList.getAuthor(int)!iCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaò ò(2Å
2org.jabref.model.entry.AuthorList.getAuthor(int)!i	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaó  ó(!2n
org.jabref.model.entry.AuthorRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaó ó(¨
2org.jabref.model.entry.AuthorList.getAuthor(int)!i	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaó  ó(!"
typeint"
isFinalfalse"8
declarationString#<mark class="modifier">int</mark> i*i2M
intTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaó ó(Ω
.org.jabref.model.entry.AuthorList.getAuthors()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java† †(""
isFinalfalse"u
declarationString`<mark class="modifier">public </mark>List&lt;Author&gt; <mark class="method">getAuthors</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<Author>*
getAuthors2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java° °(2_
java.util.ListRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java† †(2w
org.jabref.model.entry.AuthorRETURN_TYPE_ARGUMENT@
4src\main\java\org\jabref\model\entry\AuthorList.java† †(–
-org.jabref.model.entry.AuthorList.latexFree()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaß ß("
isFinalfalse"l
declarationStringW<mark class="modifier">public </mark>AuthorList <mark class="method">latexFree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
AuthorList*	latexFree2ñ
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java´6 ´(=2ö
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java™6 ™(92g
java.util.Collection.stream()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java©6 ©(<2z
0java.util.stream.Collectors.toUnmodifiableList()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java´I ´([2•
[org.jabref.model.entry.AuthorList.AuthorList(java.util.List<org.jabref.model.entry.Author>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java©# ©(-2ä
@org.jabref.model.entry.AuthorList?latexFreeAuthors@121.23:121.39CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java® ®(2ä
@org.jabref.model.entry.AuthorList?latexFreeAuthors@121.23:121.39CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java© ©(2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java©. ©(52ä
@org.jabref.model.entry.AuthorList?latexFreeAuthors@121.23:121.39CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¨ ¨(2ä
@org.jabref.model.entry.AuthorList?latexFreeAuthors@121.23:121.39CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¨0 ¨(@2ä
@org.jabref.model.entry.AuthorList?latexFreeAuthors@121.23:121.39CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ Æ(2ä
@org.jabref.model.entry.AuthorList?latexFreeAuthors@121.23:121.39CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¨ ¨(-2s
)org.jabref.model.entry.Author.latexFree()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java™: ™(K2r
!org.jabref.model.entry.AuthorListRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaß ß(π
/org.jabref.model.entry.AuthorList.getAsNatbib()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaΩ Ω("
isFinalfalse"j
declarationStringU<mark class="modifier">public </mark>String <mark class="method">getAsNatbib</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAsNatbib2x
.org.jabref.model.entry.AuthorList.getAuthors()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ æ( 2_
java.util.List.size()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaø ø(#2è
Eorg.jabref.model.entry.AuthorList.getAsNatbib()?authors@318.12:318.19CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaø ø(2ñ
Eorg.jabref.model.entry.AuthorList.getAsNatbib()?authors@318.12:318.19DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ æ(2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaΩ Ω(Ä
Eorg.jabref.model.entry.AuthorList.getAsNatbib()?authors@318.12:318.19VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ æ("
typevar"
isFinalfalse"o
declarationStringZ<mark class="modifier"> </mark>var <mark class="class-field">authors</mark> = getAuthors()*authors2X
java.util.ListTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ æ(2x
.org.jabref.model.entry.AuthorList.getAuthors()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ æ( ü

9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java÷ ÷( "
isFinalfalse"ü
declarationStringâ<mark class="modifier">public </mark>String <mark class="method">getAsLastNames</mark>(<mark class="modifier">boolean</mark> oxfordComma)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAsLastNames2å
¡org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java◊ ◊((2x
.org.jabref.model.entry.AuthorList.getAuthors()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java◊) ◊(32è
Eorg.jabref.model.entry.AuthorList.getAsLastNames(boolean)!oxfordCommaCALL@
4src\main\java\org\jabref\model\entry\AuthorList.java◊L ◊(W2u
+org.jabref.model.entry.Author.getLastOnly()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java◊7 ◊(J2î
Eorg.jabref.model.entry.AuthorList.getAsLastNames(boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java÷) ÷(42a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java÷ ÷(ﬂ
Eorg.jabref.model.entry.AuthorList.getAsLastNames(boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java÷) ÷(4"
typeboolean"
isFinalfalse"F
declarationString1<mark class="modifier">boolean</mark> oxfordComma*oxfordComma2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java÷! ÷((·
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaÏ Ï(%"
isFinalfalse"í
declarationString¸<mark class="modifier">public </mark>String <mark class="method">getAsLastFirstNames</mark>(<mark class="modifier">boolean</mark> abbreviate<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> oxfordComma)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAsLastFirstNames2å
¡org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÌ Ì((2x
.org.jabref.model.entry.AuthorList.getAuthors()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÌ) Ì(32}
3org.jabref.model.entry.Author.getLastFirst(boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÌD Ì(P2§
Zorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)?auth@365.55:365.59CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÌ? Ì(C2ú
Rorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)!abbreviateCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÌQ Ì([2ù
Sorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)!oxfordCommaCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÌ^ Ì(i2°
Rorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÏ. Ï(82¢
Sorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÏB Ï(M2´
Zorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)?auth@365.55:365.59DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÌ7 Ì(;2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÏ Ï(Í
Rorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÏ. Ï(8"
typeboolean"
isFinalfalse"E
declarationString0<mark class="modifier">boolean</mark> abbreviate*
abbreviate2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÏ& Ï(-Ì
Sorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÏB Ï(M"
typeboolean"
isFinalfalse"F
declarationString1<mark class="modifier">boolean</mark> oxfordComma*oxfordComma2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÏ: Ï(AÏ
Zorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)?auth@365.55:365.59VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÌ7 Ì(;"
type"
isFinalfalse"
declarationString auth*auth2TYPE≈
,org.jabref.model.entry.AuthorList.toString()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaÒ Ò("
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">toString</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*toString2e
java.lang.Object.toString()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÚ Ú(2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÚ Ú(2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÒ Ò(Õ
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaÇ Ç(,"
isFinalfalse"™
declarationStringî<mark class="modifier">public </mark>String <mark class="method">getAsLastFirstNamesWithAnd</mark>(<mark class="modifier">boolean</mark> abbreviate)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAsLastFirstNamesWithAnd2ñ
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÖ Ö(#2ö
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ Ñ(2g
java.util.Collection.stream()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÉ É("2x
.org.jabref.model.entry.AuthorList.getAuthors()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÉ É(2}
3org.jabref.model.entry.Author.getLastFirst(boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ1 Ñ(=2Ö
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÖ/ Ö(62§
Zorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)?author@388.32:388.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ* Ñ(02ö
Porg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)!abbreviateCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ> Ñ(H2ü
Porg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÇ5 Ç(?2´
Zorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)?author@388.32:388.38DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ  Ñ(&2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÇ Ç(Ë
Porg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaÇ5 Ç(?"
typeboolean"
isFinalfalse"E
declarationString0<mark class="modifier">boolean</mark> abbreviate*
abbreviate2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÇ- Ç(4
Zorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)?author@388.32:388.38VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÑ  Ñ(&"
type"
isFinalfalse"
declarationString author*author2TYPE´

Norg.jabref.model.entry.AuthorList.getAsLastFirstFirstLastNamesWithAnd(boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaç ç(5"
isFinalfalse"≥
declarationStringù<mark class="modifier">public </mark>String <mark class="method">getAsLastFirstFirstLastNamesWithAnd</mark>(<mark class="modifier">boolean</mark> abbreviate)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*#getAsLastFirstFirstLastNamesWithAnd2_
java.util.List.size()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaé é(#2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaé é(2≠
corg.jabref.model.entry.AuthorList.getAsLastFirstFirstLastNamesWithAnd(boolean)?author@403.35:403.41CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaì- ì(32®
Yorg.jabref.model.entry.AuthorList.getAsLastFirstFirstLastNamesWithAnd(boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaç> ç(H2¥
corg.jabref.model.entry.AuthorList.getAsLastFirstFirstLastNamesWithAnd(boolean)?author@403.35:403.41DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaì# ì()2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaç ç(Ò
Yorg.jabref.model.entry.AuthorList.getAsLastFirstFirstLastNamesWithAnd(boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.javaç> ç(H"
typeboolean"
isFinalfalse"E
declarationString0<mark class="modifier">boolean</mark> abbreviate*
abbreviate2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaç6 ç(=˘
corg.jabref.model.entry.AuthorList.getAsLastFirstFirstLastNamesWithAnd(boolean)?author@403.35:403.41VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaì# ì()"
type"
isFinalfalse"
declarationString author*author2TYPEÂ
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java≠ ≠(%"
isFinalfalse"í
declarationString¸<mark class="modifier">public </mark>String <mark class="method">getAsFirstLastNames</mark>(<mark class="modifier">boolean</mark> abbreviate<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> oxfordComma)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAsFirstLastNames2å
¡org.jabref.model.entry.AuthorList.andCoordinatedConjunction(java.util.List<org.jabref.model.entry.Author>, java.util.function.Function<org.jabref.model.entry.Author, java.lang.String>, boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ Æ((2x
.org.jabref.model.entry.AuthorList.getAuthors()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ) Æ(32}
3org.jabref.model.entry.Author.getFirstLast(boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆH Æ(T2¶
\org.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)?author@430.55:430.61CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆA Æ(G2ú
Rorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)!abbreviateCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆU Æ(_2ù
Sorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)!oxfordCommaCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆb Æ(m2°
Rorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java≠. ≠(82¢
Sorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java≠B ≠(M2≠
\org.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)?author@430.55:430.61DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ7 Æ(=2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java≠ ≠(Í
Rorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)!abbreviate	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java≠. ≠(8"
typeboolean"
isFinalfalse"E
declarationString0<mark class="modifier">boolean</mark> abbreviate*
abbreviate2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java≠& ≠(-Ì
Sorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)!oxfordComma	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java≠B ≠(M"
typeboolean"
isFinalfalse"F
declarationString1<mark class="modifier">boolean</mark> oxfordComma*oxfordComma2Q
booleanTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java≠: ≠(AÚ
\org.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)?author@430.55:430.61VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaÆ7 Æ(="
type"
isFinalfalse"
declarationString author*author2TYPE‹
:org.jabref.model.entry.AuthorList.equals(java.lang.Object)METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java∑ ∑("
isFinalfalse"ª
declarationString•<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">equals</mark>(Object o)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*equals2q
'java.util.List.equals(java.lang.Object)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¿ ¿("2Ü
<org.jabref.model.entry.AuthorList.equals(java.lang.Object)!oCALL@
4src\main\java\org\jabref\model\entry\AuthorList.java∏ ∏(2Ü
<org.jabref.model.entry.AuthorList.equals(java.lang.Object)!oCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaª ª(2Ü
<org.jabref.model.entry.AuthorList.equals(java.lang.Object)!oCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ$ æ(%2î
Jorg.jabref.model.entry.AuthorList.equals(java.lang.Object)?a@446.19:446.20CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¿# ¿($2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¿ ¿(2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java¿% ¿(,2ã
<org.jabref.model.entry.AuthorList.equals(java.lang.Object)!o	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java∑! ∑("2õ
Jorg.jabref.model.entry.AuthorList.equals(java.lang.Object)?a@446.19:446.20DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ æ(2X
booleanRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java∑ ∑(´
Jorg.jabref.model.entry.AuthorList.equals(java.lang.Object)?a@446.19:446.20VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ æ("
type
AuthorList"
isFinalfalse"r
declarationString]<mark class="modifier"> </mark>AuthorList <mark class="class-field">a</mark> = (AuthorList) o*a2k
!org.jabref.model.entry.AuthorListTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ æ(2Ü
<org.jabref.model.entry.AuthorList.equals(java.lang.Object)!oCALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaæ$ æ(%´
<org.jabref.model.entry.AuthorList.equals(java.lang.Object)!o	PARAMETER@
4src\main\java\org\jabref\model\entry\AuthorList.java∑! ∑(""
typeObject"
isFinalfalse"
declarationStringObject o*o2Z
java.lang.ObjectTYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java∑ ∑( ‡
,org.jabref.model.entry.AuthorList.hashCode()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.javaƒ ƒ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">hashCode</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*hashCode2u
+java.util.Objects.hash(java.lang.Object...)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java≈ ≈(2Å
7org.jabref.model.entry.AuthorList?authors@120.31:120.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java≈ ≈(#2T
intRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.javaƒ ƒ(«
>org.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java’ ’(,"
isFinalfalse"y
declarationStringd<mark class="modifier">public </mark>String <mark class="method">getAsFirstLastNamesWithAnd</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAsFirstLastNamesWithAnd2ñ
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÿ ÿ(#2ö
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java◊ ◊(2g
java.util.Collection.stream()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java÷ ÷("2x
.org.jabref.model.entry.AuthorList.getAuthors()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java÷ ÷(2}
3org.jabref.model.entry.Author.getFirstLast(boolean)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java◊1 ◊(=2Ö
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÿ/ ÿ(62ù
Sorg.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()?author@471.32:471.38CALL@
4src\main\java\org\jabref\model\entry\AuthorList.java◊* ◊(02§
Sorg.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()?author@471.32:471.38DECLARATION@
4src\main\java\org\jabref\model\entry\AuthorList.java◊  ◊(&2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java’ ’(È
Sorg.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()?author@471.32:471.38VARIABLE@
4src\main\java\org\jabref\model\entry\AuthorList.java◊  ◊(&"
type"
isFinalfalse"
declarationString author*author2TYPE¯	
9org.jabref.model.entry.AuthorList.getForAlphabetization()METHOD@
4src\main\java\org\jabref\model\entry\AuthorList.java‰ ‰('"
isFinalfalse"t
declarationString_<mark class="modifier">public </mark>String <mark class="method">getForAlphabetization</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getForAlphabetization2ñ
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÁ Á(#2ö
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÊ Ê(2g
java.util.Collection.stream()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÂ Â("2x
.org.jabref.model.entry.AuthorList.getAuthors()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÂ Â(2Ö
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÁ/ Á(62É
9org.jabref.model.entry.Author.getNameForAlphabetization()CALL@
4src\main\java\org\jabref\model\entry\AuthorList.javaÊ  Ê(A2a
java.lang.StringRETURN_TYPE@
4src\main\java\org\jabref\model\entry\AuthorList.java‰ ‰(ã
<org.jabref.model.entry.AuthorList?AUTHOR_CACHE@119.49:119.61VALUE>
4src\main\java\org\jabref\model\entry\AuthorList.javaw1 w(="
isFinaltrue"
typeMap<String, AuthorList>"˛
declarationStringË<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Map<String, AuthorList> <mark class="class-field">AUTHOR_CACHE</mark> = Collections.synchronizedMap(new WeakHashMap<>());"
isStatictrue"
accessprivate*AUTHOR_CACHE2U
java.util.MapTYPE>
4src\main\java\org\jabref\model\entry\AuthorList.javaw w(2a
java.lang.StringTYPE_ARGUMENT>
4src\main\java\org\jabref\model\entry\AuthorList.javaw w(#2r
!org.jabref.model.entry.AuthorListTYPE_ARGUMENT>
4src\main\java\org\jabref\model\entry\AuthorList.javaw% w(/2Ç
:java.util.Collections.synchronizedMap(java.util.Map<K, V>)CALL>
4src\main\java\org\jabref\model\entry\AuthorList.javawL w([2k
#java.util.WeakHashMap.WeakHashMap()CALL>
4src\main\java\org\jabref\model\entry\AuthorList.javaw` w(mµ
7org.jabref.model.entry.AuthorList?authors@120.31:120.38VALUE>
4src\main\java\org\jabref\model\entry\AuthorList.javax x(&"
isFinaltrue"
typeList<Author>"î
declarationString<mark class="modifier">private </mark><mark class="modifier">final </mark>List<Author> <mark class="class-field">authors</mark>"
isStaticfalse"
accessprivate*authors2V
java.util.ListTYPE>
4src\main\java\org\jabref\model\entry\AuthorList.javax x(2n
org.jabref.model.entry.AuthorTYPE_ARGUMENT>
4src\main\java\org\jabref\model\entry\AuthorList.javax x(Œ
@org.jabref.model.entry.AuthorList?latexFreeAuthors@121.23:121.39VARIABLE>
4src\main\java\org\jabref\model\entry\AuthorList.javay y('"
isFinalfalse"
type
AuthorList"w
declarationStringb<mark class="modifier">private </mark>AuthorList <mark class="class-field">latexFreeAuthors</mark>"
isStaticfalse"
accessprivate*latexFreeAuthors2i
!org.jabref.model.entry.AuthorListTYPE>
4src\main\java\org\jabref\model\entry\AuthorList.javay y(