
.src\main\java\org\jabref\model\entry\Date.javaì'
org.jabref.model.entry.DateCLASS8
.src\main\java\org\jabref\model\entry\Date.java ("!
packageorg.jabref.model.entry"
isFinalfalse"
inner classfalse"

isAbstractfalse"b
declarationStringM<mark class="modifier">public </mark><mark class="modifier">class </mark>Date"
accesspublic*Date2x
/org.jabref.model.entry.Date.Date(int, int, int)DECLARATION8
.src\main\java\org\jabref\model\entry\Date.javaS S(2s
*org.jabref.model.entry.Date.Date(int, int)DECLARATION8
.src\main\java\org\jabref\model\entry\Date.javaW W(2n
%org.jabref.model.entry.Date.Date(int)DECLARATION8
.src\main\java\org\jabref\model\entry\Date.java[ [(2é
Eorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor)DECLARATION8
.src\main\java\org\jabref\model\entry\Date.java_ _(2≥
jorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)DECLARATION8
.src\main\java\org\jabref\model\entry\Date.javaj j(2|
3org.jabref.model.entry.Date.parse(java.lang.String)DECLARATION8
.src\main\java\org\jabref\model\entry\Date.javau! u(&2ﬂ
ìorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaÒ! Ò(&2Ö
:org.jabref.model.entry.Date.convertToInt(java.lang.String)DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaä% ä(12í
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaò$ ò(=2v
+org.jabref.model.entry.Date.getNormalized()DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java® ®(2p
%org.jabref.model.entry.Date.getYear()DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java¨ ¨($2ä
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java∞ ∞( 2q
&org.jabref.model.entry.Date.getMonth()DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java∏ ∏(#2o
$org.jabref.model.entry.Date.getDay()DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaº º(#2{
0org.jabref.model.entry.Date.toTemporalAccessor()DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java¿ ¿(.2
4org.jabref.model.entry.Date.equals(java.lang.Object)DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java≈ ≈(2q
&org.jabref.model.entry.Date.toString()DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaÿ ÿ(2q
&org.jabref.model.entry.Date.hashCode()DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaÁ Á(2{
2org.jabref.model.entry.Date?DATE_REGEX@21.31:21.41DECLARATION8
.src\main\java\org\jabref\model\entry\Date.java ()2ä
Aorg.jabref.model.entry.Date?NORMALIZED_DATE_FORMATTER@22.43:22.68DECLARATION8
.src\main\java\org\jabref\model\entry\Date.java+ (D2Ñ
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62DECLARATION8
.src\main\java\org\jabref\model\entry\Date.java+ (>2w
.org.jabref.model.entry.Date?LOGGER@24.32:24.38DECLARATION8
.src\main\java\org\jabref\model\entry\Date.java  (&2u
,org.jabref.model.entry.Date?date@80.35:80.39DECLARATION8
.src\main\java\org\jabref\model\entry\Date.javaP# P('2x
/org.jabref.model.entry.Date?endDate@81.35:81.42DECLARATION8
.src\main\java\org\jabref\model\entry\Date.javaQ# Q(*2~
5org.jabref.model.entry.Date?formatStrings@27.21:27.34DECLARATION8
.src\main\java\org\jabref\model\entry\Date.java ("2_
java.util.Arrays.asList(T...)CALL8
.src\main\java\org\jabref\model\entry\Date.java, (22π
wjava.util.stream.Stream.reduce(U, java.util.function.BiFunction<U, ? super T, U>, java.util.function.BinaryOperator<U>)CALL8
.src\main\java\org\jabref\model\entry\Date.java>, >(22í
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL8
.src\main\java\org\jabref\model\entry\Date.java=, =(/2_
java.util.Collection.stream()CALL8
.src\main\java\org\jabref\model\entry\Date.java<, <(22Ü
Djava.time.format.DateTimeFormatterBuilder.DateTimeFormatterBuilder()CALL8
.src\main\java\org\jabref\model\entry\Date.java>7 >(O2}
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL8
.src\main\java\org\jabref\model\entry\Date.java< <(2w
5org.jabref.model.entry.Date?formatStrings@27.21:27.34CALL8
.src\main\java\org\jabref\model\entry\Date.java< <(+2q
/org.jabref.model.entry.Date?builder@64.52:64.59CALL8
.src\main\java\org\jabref\model\entry\Date.java@R @(Y2z
8org.jabref.model.entry.Date?formatterBuilder@64.61:64.77CALL8
.src\main\java\org\jabref\model\entry\Date.java@a @(q2t
2org.jabref.model.entry.Date?DATE_REGEX@21.31:21.41CALL8
.src\main\java\org\jabref\model\entry\Date.javaJ J(2Ä
>java.time.format.DateTimeFormatter.ofPattern(java.lang.String)CALL8
.src\main\java\org\jabref\model\entry\Date.java=0 =(Lê
/org.jabref.model.entry.Date.Date(int, int, int)CONSTRUCTOR8
.src\main\java\org\jabref\model\entry\Date.javaS S("“
declarationStringº<mark class="modifier">public </mark><mark class="method">Date</mark>(<mark class="modifier">int</mark> year<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> month<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> dayOfMonth)*Date2g
%java.time.LocalDate.of(int, int, int)CALL8
.src\main\java\org\jabref\model\entry\Date.javaT T(2v
4org.jabref.model.entry.Date.Date(int, int, int)!yearCALL8
.src\main\java\org\jabref\model\entry\Date.javaT T(2w
5org.jabref.model.entry.Date.Date(int, int, int)!monthCALL8
.src\main\java\org\jabref\model\entry\Date.javaT  T(%2|
:org.jabref.model.entry.Date.Date(int, int, int)!dayOfMonthCALL8
.src\main\java\org\jabref\model\entry\Date.javaT' T(12{
4org.jabref.model.entry.Date.Date(int, int, int)!year	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaS S(2|
5org.jabref.model.entry.Date.Date(int, int, int)!month	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaS S(#2Å
:org.jabref.model.entry.Date.Date(int, int, int)!dayOfMonth	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaS) S(32d
org.jabref.model.entry.DateRETURN_TYPE8
.src\main\java\org\jabref\model\entry\Date.javaS S(§
4org.jabref.model.entry.Date.Date(int, int, int)!year	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaS S("
typeint"
isFinalfalse";
declarationString&<mark class="modifier">int</mark> year*year2E
intTYPE8
.src\main\java\org\jabref\model\entry\Date.javaS S(ß
5org.jabref.model.entry.Date.Date(int, int, int)!month	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaS S(#"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> month*month2E
intTYPE8
.src\main\java\org\jabref\model\entry\Date.javaS S(∂
:org.jabref.model.entry.Date.Date(int, int, int)!dayOfMonth	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaS) S(3"
typeint"
isFinalfalse"A
declarationString,<mark class="modifier">int</mark> dayOfMonth*
dayOfMonth2E
intTYPE8
.src\main\java\org\jabref\model\entry\Date.javaS% S((Ü
*org.jabref.model.entry.Date.Date(int, int)CONSTRUCTOR8
.src\main\java\org\jabref\model\entry\Date.javaW W("Ë
declarationString“<mark class="modifier">public </mark><mark class="method">Date</mark>(<mark class="modifier">int</mark> year<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> month)*Date2b
 java.time.YearMonth.of(int, int)CALL8
.src\main\java\org\jabref\model\entry\Date.javaX X(2q
/org.jabref.model.entry.Date.Date(int, int)!yearCALL8
.src\main\java\org\jabref\model\entry\Date.javaX X(2r
0org.jabref.model.entry.Date.Date(int, int)!monthCALL8
.src\main\java\org\jabref\model\entry\Date.javaX  X(%2v
/org.jabref.model.entry.Date.Date(int, int)!year	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaW W(2w
0org.jabref.model.entry.Date.Date(int, int)!month	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaW W(#2d
org.jabref.model.entry.DateRETURN_TYPE8
.src\main\java\org\jabref\model\entry\Date.javaW W(ü
/org.jabref.model.entry.Date.Date(int, int)!year	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaW W("
typeint"
isFinalfalse";
declarationString&<mark class="modifier">int</mark> year*year2E
intTYPE8
.src\main\java\org\jabref\model\entry\Date.javaW W(¢
0org.jabref.model.entry.Date.Date(int, int)!month	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaW W(#"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> month*month2E
intTYPE8
.src\main\java\org\jabref\model\entry\Date.javaW W(ö
%org.jabref.model.entry.Date.Date(int)CONSTRUCTOR8
.src\main\java\org\jabref\model\entry\Date.java[ [("Ç
declarationStringm<mark class="modifier">public </mark><mark class="method">Date</mark>(<mark class="modifier">int</mark> year)*Date2X
java.time.Year.of(int)CALL8
.src\main\java\org\jabref\model\entry\Date.java\ \(2l
*org.jabref.model.entry.Date.Date(int)!yearCALL8
.src\main\java\org\jabref\model\entry\Date.java\ \(2q
*org.jabref.model.entry.Date.Date(int)!year	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.java[ [(2d
org.jabref.model.entry.DateRETURN_TYPE8
.src\main\java\org\jabref\model\entry\Date.java[ [(ö
*org.jabref.model.entry.Date.Date(int)!year	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.java[ [("
typeint"
isFinalfalse";
declarationString&<mark class="modifier">int</mark> year*year2E
intTYPE8
.src\main\java\org\jabref\model\entry\Date.java[ [(Û
Eorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor)CONSTRUCTOR8
.src\main\java\org\jabref\model\entry\Date.java_ _("q
declarationString\<mark class="modifier">public </mark><mark class="method">Date</mark>(TemporalAccessor date)*Date2å
Jorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor)!dateCALL8
.src\main\java\org\jabref\model\entry\Date.java` `(2q
/org.jabref.model.entry.Date?endDate@81.35:81.42CALL8
.src\main\java\org\jabref\model\entry\Date.javaa a(2n
,org.jabref.model.entry.Date?date@80.35:80.39CALL8
.src\main\java\org\jabref\model\entry\Date.java` `(2ë
Jorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor)!date	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.java_! _(%2d
org.jabref.model.entry.DateRETURN_TYPE8
.src\main\java\org\jabref\model\entry\Date.java_ _(÷
Jorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor)!date	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.java_! _(%"
typeTemporalAccessor"
isFinalfalse"*
declarationStringTemporalAccessor date*date2e
#java.time.temporal.TemporalAccessorTYPE8
.src\main\java\org\jabref\model\entry\Date.java_ _( ≠
jorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)CONSTRUCTOR8
.src\main\java\org\jabref\model\entry\Date.javaj j("»
declarationString≤<mark class="modifier">public </mark><mark class="method">Date</mark>(TemporalAccessor date<mark class="modifier"><mark class="modifier">,</mark></mark> TemporalAccessor endDate)*Date2±
oorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)!dateCALL8
.src\main\java\org\jabref\model\entry\Date.javak k(2¥
rorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)!endDateCALL8
.src\main\java\org\jabref\model\entry\Date.javal l(2n
,org.jabref.model.entry.Date?date@80.35:80.39CALL8
.src\main\java\org\jabref\model\entry\Date.javak k(2q
/org.jabref.model.entry.Date?endDate@81.35:81.42CALL8
.src\main\java\org\jabref\model\entry\Date.javal l(2∂
oorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)!date	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaj! j(%2π
rorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)!endDate	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaj8 j(?2d
org.jabref.model.entry.DateRETURN_TYPE8
.src\main\java\org\jabref\model\entry\Date.javaj j(˚
oorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)!date	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaj! j(%"
typeTemporalAccessor"
isFinalfalse"*
declarationStringTemporalAccessor date*date2e
#java.time.temporal.TemporalAccessorTYPE8
.src\main\java\org\jabref\model\entry\Date.javaj j( Ñ
rorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)!endDate	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javaj8 j(?"
typeTemporalAccessor"
isFinalfalse"-
declarationStringTemporalAccessor endDate*endDate2e
#java.time.temporal.TemporalAccessorTYPE8
.src\main\java\org\jabref\model\entry\Date.javaj' j(7‚ä
3org.jabref.model.entry.Date.parse(java.lang.String)METHOD8
.src\main\java\org\jabref\model\entry\Date.javau! u(&"
isFinalfalse"©
declarationStringì<mark class="modifier">public </mark><mark class="modifier">static </mark>Optional&lt;Date&gt; <mark class="method">parse</mark>(String dateString)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOptional<Date>*parse2e
#java.util.Objects.requireNonNull(T)CALL8
.src\main\java\org\jabref\model\entry\Date.javav v(2\
java.lang.String.isEmpty()CALL8
.src\main\java\org\jabref\model\entry\Date.javax x(2\
java.util.Optional.empty()CALL8
.src\main\java\org\jabref\model\entry\Date.javay y(!2l
*java.lang.String.matches(java.lang.String)CALL8
.src\main\java\org\jabref\model\entry\Date.java} }(2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaä/ ä(42Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.javaãB ã(G2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.javaãT ã(Y2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.javaåE å(J2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.javaåW å(\2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.javaç  ç("2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.javaê  ê(%2n
*java.lang.String.matches(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaí í(%2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaü/ ü(42Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.java†B †(G2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.java†T †(Y2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.java°E °(J2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.java°W °(\2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.java¢  ¢("2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.java•  •(%2n
*java.lang.String.matches(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaß ß(%2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java∞/ ∞(42ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java±. ±(G2ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java≤1 ≤(J2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.java≥  ≥("2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.java∂  ∂(%2n
*java.lang.String.matches(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java∏ ∏(%2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java¡/ ¡(42ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java¬. ¬(G2ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java√1 √(J2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.javaƒ  ƒ("2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.java«  «(%2n
*java.lang.String.matches(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÃ Ã(2h
$java.lang.String.substring(int, int)CALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ) Œ(22]
java.lang.String.length()CALL:
.src\main\java\org\jabref\model\entry\Date.javaŒA Œ(G2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.javaœB œ(G2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.java–  –("2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.java”  ”(%2n
*java.lang.String.matches(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÿ ÿ(2ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java‡( ‡(A2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.java·  ·("2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.java‰  ‰(%2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÈ> È(C2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÍ Í(2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.javaÌ Ì(!2Æ
jorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.javaç' ç(+2Æ
jorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.java¢' ¢(+2Æ
jorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.java≥' ≥(+2Æ
jorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.javaƒ' ƒ(+2â
Eorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.java–' –(+2â
Eorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.java·' ·(+2â
Eorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÍ# Í('2Ä
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL8
.src\main\java\org\jabref\model\entry\Date.javav v()2Ä
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL8
.src\main\java\org\jabref\model\entry\Date.javax x(2Ä
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL8
.src\main\java\org\jabref\model\entry\Date.java} }(2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaä$ ä(.2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.javaã. ã(A2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@138.25:138.33CALL:
.src\main\java\org\jabref\model\entry\Date.javaãH ã(P2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.javaå1 å(D2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@138.25:138.33CALL:
.src\main\java\org\jabref\model\entry\Date.javaåK å(S2ê
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@139.33:139.43CALL:
.src\main\java\org\jabref\model\entry\Date.javaç, ç(62ì
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@140.33:140.46CALL:
.src\main\java\org\jabref\model\entry\Date.javaç8 ç(E2r
.org.jabref.model.entry.Date?LOGGER@24.32:24.38CALL:
.src\main\java\org\jabref\model\entry\Date.javaè è(2á
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@142.44:142.45CALL:
.src\main\java\org\jabref\model\entry\Date.javaè> è(?2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaí í(2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaü$ ü(.2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.java†. †(A2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@159.25:159.33CALL:
.src\main\java\org\jabref\model\entry\Date.java†H †(P2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.java°1 °(D2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@159.25:159.33CALL:
.src\main\java\org\jabref\model\entry\Date.java°K °(S2ê
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@160.33:160.43CALL:
.src\main\java\org\jabref\model\entry\Date.java¢, ¢(62ì
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@161.33:161.46CALL:
.src\main\java\org\jabref\model\entry\Date.java¢8 ¢(E2r
.org.jabref.model.entry.Date?LOGGER@24.32:24.38CALL:
.src\main\java\org\jabref\model\entry\Date.java§ §(2á
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@163.44:163.45CALL:
.src\main\java\org\jabref\model\entry\Date.java§: §(;2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaß ß(2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.java∞$ ∞(.2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@176.25:176.33CALL:
.src\main\java\org\jabref\model\entry\Date.java±H ±(P2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@176.25:176.33CALL:
.src\main\java\org\jabref\model\entry\Date.java≤K ≤(S2ê
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@177.33:177.43CALL:
.src\main\java\org\jabref\model\entry\Date.java≥, ≥(62ì
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@178.33:178.46CALL:
.src\main\java\org\jabref\model\entry\Date.java≥8 ≥(E2r
.org.jabref.model.entry.Date?LOGGER@24.32:24.38CALL:
.src\main\java\org\jabref\model\entry\Date.javaµ µ(2á
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@180.44:180.45CALL:
.src\main\java\org\jabref\model\entry\Date.javaµ: µ(;2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.java∏ ∏(2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.java¡$ ¡(.2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@193.25:193.33CALL:
.src\main\java\org\jabref\model\entry\Date.java¬H ¬(P2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@193.25:193.33CALL:
.src\main\java\org\jabref\model\entry\Date.java√K √(S2ê
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@194.33:194.43CALL:
.src\main\java\org\jabref\model\entry\Date.javaƒ, ƒ(62ì
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@195.33:195.46CALL:
.src\main\java\org\jabref\model\entry\Date.javaƒ8 ƒ(E2r
.org.jabref.model.entry.Date?LOGGER@24.32:24.38CALL:
.src\main\java\org\jabref\model\entry\Date.java∆ ∆(2á
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@197.44:197.45CALL:
.src\main\java\org\jabref\model\entry\Date.java∆: ∆(;2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaÃ Ã(2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ Œ((2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ6 Œ(@2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.javaœ. œ(A2ä
Forg.jabref.model.entry.Date.parse(java.lang.String)?year@206.23:206.27CALL:
.src\main\java\org\jabref\model\entry\Date.javaœH œ(L2ê
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@207.33:207.43CALL:
.src\main\java\org\jabref\model\entry\Date.java–, –(62r
.org.jabref.model.entry.Date?LOGGER@24.32:24.38CALL:
.src\main\java\org\jabref\model\entry\Date.java“ “(2á
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@209.44:209.45CALL:
.src\main\java\org\jabref\model\entry\Date.java“4 “(52Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaÿ ÿ(2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.java‡B ‡(L2ä
Forg.jabref.model.entry.Date.parse(java.lang.String)?date@224.33:224.37CALL:
.src\main\java\org\jabref\model\entry\Date.java·, ·(02r
.org.jabref.model.entry.Date?LOGGER@24.32:24.38CALL:
.src\main\java\org\jabref\model\entry\Date.java„ „(2á
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@226.44:226.45CALL:
.src\main\java\org\jabref\model\entry\Date.java„G „(H2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.javaÈ* È(=2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaÈD È(N2ê
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@233.29:233.39CALL:
.src\main\java\org\jabref\model\entry\Date.javaÍ( Í(22r
.org.jabref.model.entry.Date?LOGGER@24.32:24.38CALL:
.src\main\java\org\jabref\model\entry\Date.javaÏ Ï(2á
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@235.40:235.41CALL:
.src\main\java\org\jabref\model\entry\Date.javaÏ0 Ï(12Ö
>org.jabref.model.entry.Date.parse(java.lang.String)!dateString	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javau. u(82ï
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@138.25:138.33DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaä ä(!2ó
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@139.33:139.43DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaã! ã(+2ö
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@140.33:140.46DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaå! å(.2ï
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@159.25:159.33DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaü ü(!2ó
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@160.33:160.43DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java†! †(+2ö
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@161.33:161.46DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java°! °(.2ï
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@176.25:176.33DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java∞ ∞(!2ó
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@177.33:177.43DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java±! ±(+2ö
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@178.33:178.46DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java≤! ≤(.2ï
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@193.25:193.33DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java¡ ¡(!2ó
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@194.33:194.43DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java¬! ¬(+2ö
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@195.33:195.46DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java√! √(.2ë
Forg.jabref.model.entry.Date.parse(java.lang.String)?year@206.23:206.27DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaŒ Œ(2ó
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@207.33:207.43DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaœ! œ(+2ë
Forg.jabref.model.entry.Date.parse(java.lang.String)?date@224.33:224.37DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java‡! ‡(%2ó
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@233.29:233.39DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaÈ È('2é
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@142.44:142.45DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaé, é(-2é
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@163.44:163.45DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java£, £(-2é
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@180.44:180.45DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java¥, ¥(-2é
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@197.44:197.45DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java≈, ≈(-2é
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@209.44:209.45DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java—, —(-2é
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@226.44:226.45DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java‚, ‚(-2é
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@235.40:235.41DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaÎ( Î()2[
java.util.OptionalRETURN_TYPE8
.src\main\java\org\jabref\model\entry\Date.javau u(2m
org.jabref.model.entry.DateRETURN_TYPE_ARGUMENT8
.src\main\java\org\jabref\model\entry\Date.javau u(â
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@138.25:138.33VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaä ä(!"
typeString"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>String[] <mark class="class-field">strDates</mark> = dateString.split("/")*strDates2V
java.lang.String[]TYPE:
.src\main\java\org\jabref\model\entry\Date.javaä ä(2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaä/ ä(42Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaä$ ä(.—
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@139.33:139.43VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaã! ã(+"
typeTemporalAccessor"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedDate</mark> = SIMPLE_DATE_FORMATS.parse(strDates[0].strip())*
parsedDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.javaã ã( 2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.javaãB ã(G2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.javaãT ã(Y2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.javaã. ã(A2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@138.25:138.33CALL:
.src\main\java\org\jabref\model\entry\Date.javaãH ã(P⁄
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@140.33:140.46VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaå! å(."
typeTemporalAccessor"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedEndDate</mark> = SIMPLE_DATE_FORMATS.parse(strDates[1].strip())*parsedEndDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.javaå å( 2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.javaåE å(J2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.javaåW å(\2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.javaå1 å(D2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@138.25:138.33CALL:
.src\main\java\org\jabref\model\entry\Date.javaåK å(Så
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@159.25:159.33VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaü ü(!"
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String[] <mark class="class-field">strDates</mark> = dateString.split(" / ")*strDates2V
java.lang.String[]TYPE:
.src\main\java\org\jabref\model\entry\Date.javaü ü(2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaü/ ü(42Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaü$ ü(.—
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@160.33:160.43VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java†! †(+"
typeTemporalAccessor"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedDate</mark> = SIMPLE_DATE_FORMATS.parse(strDates[0].strip())*
parsedDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.java† †( 2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.java†B †(G2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.java†T †(Y2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.java†. †(A2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@159.25:159.33CALL:
.src\main\java\org\jabref\model\entry\Date.java†H †(P⁄
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@161.33:161.46VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java°! °(."
typeTemporalAccessor"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedEndDate</mark> = SIMPLE_DATE_FORMATS.parse(strDates[1].strip())*parsedEndDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.java° °( 2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.java°E °(J2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.java°W °(\2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.java°1 °(D2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@159.25:159.33CALL:
.src\main\java\org\jabref\model\entry\Date.java°K °(Sâ
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@176.25:176.33VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java∞ ∞(!"
typeString"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>String[] <mark class="class-field">strDates</mark> = dateString.split("/")*strDates2V
java.lang.String[]TYPE:
.src\main\java\org\jabref\model\entry\Date.java∞ ∞(2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java∞/ ∞(42Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.java∞$ ∞(.Ò
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@177.33:177.43VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java±! ±(+"
typeTemporalAccessor"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedDate</mark> = parseDateWithEraIndicator(strDates[0])*
parsedDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.java± ±( 2ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java±. ±(G2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@176.25:176.33CALL:
.src\main\java\org\jabref\model\entry\Date.java±H ±(P˙
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@178.33:178.46VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java≤! ≤(."
typeTemporalAccessor"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedEndDate</mark> = parseDateWithEraIndicator(strDates[1])*parsedEndDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.java≤ ≤( 2ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java≤1 ≤(J2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@176.25:176.33CALL:
.src\main\java\org\jabref\model\entry\Date.java≤K ≤(Så
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@193.25:193.33VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java¡ ¡(!"
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String[] <mark class="class-field">strDates</mark> = dateString.split(" / ")*strDates2V
java.lang.String[]TYPE:
.src\main\java\org\jabref\model\entry\Date.java¡ ¡(2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java¡/ ¡(42Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.java¡$ ¡(.Ò
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@194.33:194.43VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java¬! ¬(+"
typeTemporalAccessor"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedDate</mark> = parseDateWithEraIndicator(strDates[0])*
parsedDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.java¬ ¬( 2ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java¬. ¬(G2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@193.25:193.33CALL:
.src\main\java\org\jabref\model\entry\Date.java¬H ¬(P˙
Oorg.jabref.model.entry.Date.parse(java.lang.String)?parsedEndDate@195.33:195.46VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java√! √(."
typeTemporalAccessor"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedEndDate</mark> = parseDateWithEraIndicator(strDates[1])*parsedEndDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.java√ √( 2ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java√1 √(J2é
Jorg.jabref.model.entry.Date.parse(java.lang.String)?strDates@193.25:193.33CALL:
.src\main\java\org\jabref\model\entry\Date.java√K √(Sı
Forg.jabref.model.entry.Date.parse(java.lang.String)?year@206.23:206.27VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaŒ Œ("
typeString"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>String <mark class="class-field">year</mark> = dateString.substring(0, dateString.length() - 1)*year2T
java.lang.StringTYPE:
.src\main\java\org\jabref\model\entry\Date.javaŒ Œ(2h
$java.lang.String.substring(int, int)CALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ) Œ(22]
java.lang.String.length()CALL:
.src\main\java\org\jabref\model\entry\Date.javaŒA Œ(G2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ Œ((2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ6 Œ(@ﬂ
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@207.33:207.43VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaœ! œ(+"
typeTemporalAccessor"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedDate</mark> = SIMPLE_DATE_FORMATS.parse(year)*
parsedDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.javaœ œ( 2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.javaœB œ(G2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.javaœ. œ(A2ä
Forg.jabref.model.entry.Date.parse(java.lang.String)?year@206.23:206.27CALL:
.src\main\java\org\jabref\model\entry\Date.javaœH œ(L—
Forg.jabref.model.entry.Date.parse(java.lang.String)?date@224.33:224.37VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java‡! ‡(%"
typeTemporalAccessor"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">date</mark> = parseDateWithEraIndicator(dateString)*date2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.java‡ ‡( 2ã
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java‡( ‡(A2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.java‡B ‡(Lﬁ
Lorg.jabref.model.entry.Date.parse(java.lang.String)?parsedDate@233.29:233.39VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaÈ È('"
typeTemporalAccessor"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">parsedDate</mark> = SIMPLE_DATE_FORMATS.parse(dateString)*
parsedDate2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.javaÈ È(2Ñ
@java.time.format.DateTimeFormatter.parse(java.lang.CharSequence)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÈ> È(C2
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62CALL:
.src\main\java\org\jabref\model\entry\Date.javaÈ* È(=2Ç
>org.jabref.model.entry.Date.parse(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaÈD È(NØ
>org.jabref.model.entry.Date.parse(java.lang.String)!dateString	PARAMETER8
.src\main\java\org\jabref\model\entry\Date.javau. u(8"
typeString"
isFinalfalse"&
declarationStringString dateString*
dateString2R
java.lang.StringTYPE8
.src\main\java\org\jabref\model\entry\Date.javau' u(-‹
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@142.44:142.45VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaé, é(-"
typeDateTimeParseException"
isFinalfalse"-
declarationStringDateTimeParseException e*e2k
'java.time.format.DateTimeParseExceptionTYPE:
.src\main\java\org\jabref\model\entry\Date.javaé é(+‹
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@163.44:163.45VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java£, £(-"
typeDateTimeParseException"
isFinalfalse"-
declarationStringDateTimeParseException e*e2k
'java.time.format.DateTimeParseExceptionTYPE:
.src\main\java\org\jabref\model\entry\Date.java£ £(+‹
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@180.44:180.45VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java¥, ¥(-"
typeDateTimeParseException"
isFinalfalse"-
declarationStringDateTimeParseException e*e2k
'java.time.format.DateTimeParseExceptionTYPE:
.src\main\java\org\jabref\model\entry\Date.java¥ ¥(+‹
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@197.44:197.45VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java≈, ≈(-"
typeDateTimeParseException"
isFinalfalse"-
declarationStringDateTimeParseException e*e2k
'java.time.format.DateTimeParseExceptionTYPE:
.src\main\java\org\jabref\model\entry\Date.java≈ ≈(+‹
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@209.44:209.45VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java—, —(-"
typeDateTimeParseException"
isFinalfalse"-
declarationStringDateTimeParseException e*e2k
'java.time.format.DateTimeParseExceptionTYPE:
.src\main\java\org\jabref\model\entry\Date.java— —(+‹
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@226.44:226.45VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java‚, ‚(-"
typeDateTimeParseException"
isFinalfalse"-
declarationStringDateTimeParseException e*e2k
'java.time.format.DateTimeParseExceptionTYPE:
.src\main\java\org\jabref\model\entry\Date.java‚ ‚(+‹
Corg.jabref.model.entry.Date.parse(java.lang.String)?e@235.40:235.41VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaÎ( Î()"
typeDateTimeParseException"
isFinalfalse"-
declarationStringDateTimeParseException e*e2k
'java.time.format.DateTimeParseExceptionTYPE:
.src\main\java\org\jabref\model\entry\Date.javaÎ Î('¸H
ìorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)METHOD:
.src\main\java\org\jabref\model\entry\Date.javaÒ! Ò(&"
isFinalfalse"Ù
declarationStringﬁ<mark class="modifier">public </mark><mark class="modifier">static </mark>Optional&lt;Date&gt; <mark class="method">parse</mark>(Optional&lt;String&gt; yearValue<mark class="modifier"><mark class="modifier">,</mark></mark> Optional&lt;String&gt; monthValue<mark class="modifier"><mark class="modifier">,</mark></mark> Optional&lt;String&gt; dayValue)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOptional<Date>*parse2è
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÙD Ù(G2±
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÙ( Ù(/2±
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALL:
.src\main\java\org\jabref\model\entry\Date.javaı+ ı(22±
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALL:
.src\main\java\org\jabref\model\entry\Date.javaˆ) ˆ(02b
java.util.Optional.isPresent()CALL:
.src\main\java\org\jabref\model\entry\Date.java¯ ¯(2b
java.util.Optional.isPresent()CALL:
.src\main\java\org\jabref\model\entry\Date.java˙ ˙(2b
java.util.Optional.isPresent()CALL:
.src\main\java\org\jabref\model\entry\Date.java˚ ˚(!2i
%java.time.LocalDate.of(int, int, int)CALL:
.src\main\java\org\jabref\model\entry\Date.java¸% ¸('2]
java.time.Year.getValue()CALL:
.src\main\java\org\jabref\model\entry\Date.java¸3 ¸(;2\
java.util.Optional.get()CALL:
.src\main\java\org\jabref\model\entry\Date.java¸- ¸(02l
(org.jabref.model.entry.Month.getNumber()CALL:
.src\main\java\org\jabref\model\entry\Date.java¸K ¸(T2\
java.util.Optional.get()CALL:
.src\main\java\org\jabref\model\entry\Date.java¸E ¸(H2\
java.util.Optional.get()CALL:
.src\main\java\org\jabref\model\entry\Date.java¸\ ¸(_2d
 java.time.YearMonth.of(int, int)CALL:
.src\main\java\org\jabref\model\entry\Date.java˛% ˛('2]
java.time.Year.getValue()CALL:
.src\main\java\org\jabref\model\entry\Date.java˛3 ˛(;2\
java.util.Optional.get()CALL:
.src\main\java\org\jabref\model\entry\Date.java˛- ˛(02l
(org.jabref.model.entry.Month.getNumber()CALL:
.src\main\java\org\jabref\model\entry\Date.java˛K ˛(T2\
java.util.Optional.get()CALL:
.src\main\java\org\jabref\model\entry\Date.java˛E ˛(H2\
java.util.Optional.get()CALL:
.src\main\java\org\jabref\model\entry\Date.javaÅ Å(2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÑ Ñ(2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.javaá á(2â
Eorg.jabref.model.entry.Date.Date(java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÑ# Ñ('2‚
ùorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!yearValueCALL:
.src\main\java\org\jabref\model\entry\Date.javaÙ Ù('2„
ûorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!monthValueCALL:
.src\main\java\org\jabref\model\entry\Date.javaı  ı(*2·
úorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!dayValueCALL:
.src\main\java\org\jabref\model\entry\Date.javaˆ  ˆ((2Î
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?year@244.23:244.27CALL:
.src\main\java\org\jabref\model\entry\Date.java¯ ¯(2Ï
ßorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?month@245.24:245.29CALL:
.src\main\java\org\jabref\model\entry\Date.java˙ ˙(2Í
•org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?day@246.26:246.29CALL:
.src\main\java\org\jabref\model\entry\Date.java˚ ˚(2Î
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?date@249.29:249.33CALL:
.src\main\java\org\jabref\model\entry\Date.java¸ ¸(2Î
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?year@244.23:244.27CALL:
.src\main\java\org\jabref\model\entry\Date.java¸( ¸(,2Ï
ßorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?month@245.24:245.29CALL:
.src\main\java\org\jabref\model\entry\Date.java¸? ¸(D2Í
•org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?day@246.26:246.29CALL:
.src\main\java\org\jabref\model\entry\Date.java¸X ¸([2Î
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?date@249.29:249.33CALL:
.src\main\java\org\jabref\model\entry\Date.java˛ ˛(2Î
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?year@244.23:244.27CALL:
.src\main\java\org\jabref\model\entry\Date.java˛( ˛(,2Ï
ßorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?month@245.24:245.29CALL:
.src\main\java\org\jabref\model\entry\Date.java˛? ˛(D2Î
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?date@249.29:249.33CALL:
.src\main\java\org\jabref\model\entry\Date.javaÅ Å(2Î
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?year@244.23:244.27CALL:
.src\main\java\org\jabref\model\entry\Date.javaÅ Å(2Î
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?date@249.29:249.33CALL:
.src\main\java\org\jabref\model\entry\Date.javaÑ( Ñ(,2~
:org.jabref.model.entry.Date.convertToInt(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÙ0 Ù(B2Z
java.time.Year.of(int)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÙH Ù(P2x
4org.jabref.model.entry.Month.parse(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaı3 ı(?2~
:org.jabref.model.entry.Date.convertToInt(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaˆ1 ˆ(C2Á
ùorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!yearValue	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaÒ8 Ò(A2Ë
ûorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!monthValue	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaÚ8 Ú(B2Ê
úorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!dayValue	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaÛ8 Û(@2Ú
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?year@244.23:244.27DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaÙ Ù(2Û
ßorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?month@245.24:245.29DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaı ı(2Ò
•org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?day@246.26:246.29DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaˆ ˆ(2Ú
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?date@249.29:249.33DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java˘ ˘(!2]
java.util.OptionalRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.javaÒ Ò(2o
org.jabref.model.entry.DateRETURN_TYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.javaÒ Ò(˝

¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?year@244.23:244.27VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaÙ Ù("
typeOptional<Year>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<Year> <mark class="class-field">year</mark> = yearValue.flatMap(Date::convertToInt).map(Year::of)*year2V
java.util.OptionalTYPE:
.src\main\java\org\jabref\model\entry\Date.javaÙ Ù(2[
java.time.YearTYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.javaÙ Ù(2è
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÙD Ù(G2±
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÙ( Ù(/2‚
ùorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!yearValueCALL:
.src\main\java\org\jabref\model\entry\Date.javaÙ Ù('2~
:org.jabref.model.entry.Date.convertToInt(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÙ0 Ù(B2Z
java.time.Year.of(int)CALL:
.src\main\java\org\jabref\model\entry\Date.javaÙH Ù(Pâ	
ßorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?month@245.24:245.29VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaı ı("
typeOptional<Month>"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>Optional<Month> <mark class="class-field">month</mark> = monthValue.flatMap(Month::parse)*month2V
java.util.OptionalTYPE:
.src\main\java\org\jabref\model\entry\Date.javaı ı(2i
org.jabref.model.entry.MonthTYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.javaı ı(2±
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALL:
.src\main\java\org\jabref\model\entry\Date.javaı+ ı(22„
ûorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!monthValueCALL:
.src\main\java\org\jabref\model\entry\Date.javaı  ı(*2x
4org.jabref.model.entry.Month.parse(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaı3 ı(?Ñ	
•org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?day@246.26:246.29VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaˆ ˆ("
typeOptional<Integer>"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>Optional<Integer> <mark class="class-field">day</mark> = dayValue.flatMap(Date::convertToInt)*day2V
java.util.OptionalTYPE:
.src\main\java\org\jabref\model\entry\Date.javaˆ ˆ(2^
java.lang.IntegerTYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.javaˆ ˆ(2±
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALL:
.src\main\java\org\jabref\model\entry\Date.javaˆ) ˆ(02·
úorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!dayValueCALL:
.src\main\java\org\jabref\model\entry\Date.javaˆ  ˆ((2~
:org.jabref.model.entry.Date.convertToInt(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaˆ1 ˆ(Cˆ
¶org.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)?date@249.29:249.33VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java˘ ˘(!"
typeTemporalAccessor"
isFinalfalse"j
declarationStringU<mark class="modifier"> </mark>TemporalAccessor <mark class="class-field">date</mark>*date2g
#java.time.temporal.TemporalAccessorTYPE:
.src\main\java\org\jabref\model\entry\Date.java˘ ˘(Ü
ùorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!yearValue	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaÒ8 Ò(A"
typeOptional<String>"
isFinalfalse"/
declarationStringOptional<String> yearValue*	yearValue2V
java.util.OptionalTYPE:
.src\main\java\org\jabref\model\entry\Date.javaÒ' Ò(/2]
java.lang.StringTYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.javaÒ0 Ò(6â
ûorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!monthValue	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaÚ8 Ú(B"
typeOptional<String>"
isFinalfalse"0
declarationStringOptional<String> monthValue*
monthValue2V
java.util.OptionalTYPE:
.src\main\java\org\jabref\model\entry\Date.javaÚ' Ú(/2]
java.lang.StringTYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.javaÚ0 Ú(6É
úorg.jabref.model.entry.Date.parse(java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>, java.util.Optional<java.lang.String>)!dayValue	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaÛ8 Û(@"
typeOptional<String>"
isFinalfalse".
declarationStringOptional<String> dayValue*dayValue2V
java.util.OptionalTYPE:
.src\main\java\org\jabref\model\entry\Date.javaÛ' Û(/2]
java.lang.StringTYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.javaÛ0 Û(6»

:org.jabref.model.entry.Date.convertToInt(java.lang.String)METHOD:
.src\main\java\org\jabref\model\entry\Date.javaä% ä(1"
isFinalfalse"Ø
declarationStringô<mark class="modifier">private </mark><mark class="modifier">static </mark>Optional&lt;Integer&gt; <mark class="method">convertToInt</mark>(String value)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeOptional<Integer>*convertToInt2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.javaå å(2o
+java.lang.Integer.valueOf(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaå' å(.2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.javaé é(!2Ñ
@org.jabref.model.entry.Date.convertToInt(java.lang.String)!valueCALL:
.src\main\java\org\jabref\model\entry\Date.javaå/ å(42â
@org.jabref.model.entry.Date.convertToInt(java.lang.String)!value	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaä9 ä(>2ñ
Korg.jabref.model.entry.Date.convertToInt(java.lang.String)?ex@269.39:269.41DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaç' ç()2]
java.util.OptionalRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.javaä ä(2e
java.lang.IntegerRETURN_TYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.javaä ä(#´
@org.jabref.model.entry.Date.convertToInt(java.lang.String)!value	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaä9 ä(>"
typeString"
isFinalfalse"!
declarationStringString value*value2T
java.lang.StringTYPE:
.src\main\java\org\jabref\model\entry\Date.javaä2 ä(8‹
Korg.jabref.model.entry.Date.convertToInt(java.lang.String)?ex@269.39:269.41VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaç' ç()"
typeNumberFormatException"
isFinalfalse"-
declarationStringNumberFormatException ex*ex2c
java.lang.NumberFormatExceptionTYPE:
.src\main\java\org\jabref\model\entry\Date.javaç ç(&Á"
Gorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)METHOD:
.src\main\java\org\jabref\model\entry\Date.javaò$ ò(="
isFinalfalse"∫
declarationString§<mark class="modifier">private </mark><mark class="modifier">static </mark>TemporalAccessor <mark class="method">parseDateWithEraIndicator</mark>(String dateString)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeTemporalAccessor*parseDateWithEraIndicator2h
$java.lang.String.substring(int, int)CALL:
.src\main\java\org\jabref\model\entry\Date.javaô/ ô(82\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.javaô' ô(,2]
java.lang.String.length()CALL:
.src\main\java\org\jabref\model\entry\Date.javaôG ô(M2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaõ$ õ()2p
,java.lang.Integer.parseInt(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaú ú(#2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.javaú- ú(22o
+java.lang.String.endsWith(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaû û(2p
,java.lang.Integer.parseInt(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java¢  ¢((2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.java¢2 ¢(72d
 java.time.YearMonth.of(int, int)CALL:
.src\main\java\org\jabref\model\entry\Date.java£ £(2Z
java.time.Year.of(int)CALL:
.src\main\java\org\jabref\model\entry\Date.java• •(2ñ
Rorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaô ô(&2ñ
Rorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaô< ô(F2§
`org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?yearString@281.15:281.25CALL:
.src\main\java\org\jabref\model\entry\Date.javaõ õ(#2ü
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?parts@283.17:283.22CALL:
.src\main\java\org\jabref\model\entry\Date.javaú$ ú()2ñ
Rorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaû û(2û
Zorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?year@284.12:284.16CALL:
.src\main\java\org\jabref\model\entry\Date.javaü ü(2û
Zorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?year@284.12:284.16CALL:
.src\main\java\org\jabref\model\entry\Date.javaü ü(2ü
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?parts@283.17:283.22CALL:
.src\main\java\org\jabref\model\entry\Date.java° °(2ü
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?parts@283.17:283.22CALL:
.src\main\java\org\jabref\model\entry\Date.java¢) ¢(.2û
Zorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?year@284.12:284.16CALL:
.src\main\java\org\jabref\model\entry\Date.java£  £($2ü
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?month@290.16:290.21CALL:
.src\main\java\org\jabref\model\entry\Date.java£& £(+2û
Zorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?year@284.12:284.16CALL:
.src\main\java\org\jabref\model\entry\Date.java• •(2õ
Rorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)!dateString	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaòE ò(O2´
`org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?yearString@281.15:281.25DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaô ô(2¶
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?parts@283.17:283.22DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaõ õ(2•
Zorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?year@284.12:284.16DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaú ú(2¶
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?month@290.16:290.21DECLARATION:
.src\main\java\org\jabref\model\entry\Date.java¢ ¢(2n
#java.time.temporal.TemporalAccessorRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.javaò ò(#™
`org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?yearString@281.15:281.25VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaô ô("
typeString"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>String <mark class="class-field">yearString</mark> = dateString.strip().substring(0, dateString.length() - 2)*
yearString2T
java.lang.StringTYPE:
.src\main\java\org\jabref\model\entry\Date.javaô ô(2h
$java.lang.String.substring(int, int)CALL:
.src\main\java\org\jabref\model\entry\Date.javaô/ ô(82\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.javaô' ô(,2]
java.lang.String.length()CALL:
.src\main\java\org\jabref\model\entry\Date.javaôG ô(M2ñ
Rorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaô ô(&2ñ
Rorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)!dateStringCALL:
.src\main\java\org\jabref\model\entry\Date.javaô< ô(F∂
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?parts@283.17:283.22VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaõ õ("
typeString"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>String[] <mark class="class-field">parts</mark> = yearString.split("-")*parts2V
java.lang.String[]TYPE:
.src\main\java\org\jabref\model\entry\Date.javaõ õ(2l
(java.lang.String.split(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaõ$ õ()2§
`org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?yearString@281.15:281.25CALL:
.src\main\java\org\jabref\model\entry\Date.javaõ õ(#¶
Zorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?year@284.12:284.16VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaú ú("
typeint"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">year</mark> = Integer.parseInt(parts[0].strip())*year2G
intTYPE:
.src\main\java\org\jabref\model\entry\Date.javaú ú(2p
,java.lang.Integer.parseInt(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.javaú ú(#2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.javaú- ú(22ü
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?parts@283.17:283.22CALL:
.src\main\java\org\jabref\model\entry\Date.javaú$ ú()©
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?month@290.16:290.21VARIABLE:
.src\main\java\org\jabref\model\entry\Date.java¢ ¢("
typeint"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">month</mark> = Integer.parseInt(parts[1].strip())*month2G
intTYPE:
.src\main\java\org\jabref\model\entry\Date.java¢ ¢(2p
,java.lang.Integer.parseInt(java.lang.String)CALL:
.src\main\java\org\jabref\model\entry\Date.java¢  ¢((2\
java.lang.String.strip()CALL:
.src\main\java\org\jabref\model\entry\Date.java¢2 ¢(72ü
[org.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)?parts@283.17:283.22CALL:
.src\main\java\org\jabref\model\entry\Date.java¢) ¢(.«
Rorg.jabref.model.entry.Date.parseDateWithEraIndicator(java.lang.String)!dateString	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.javaòE ò(O"
typeString"
isFinalfalse"&
declarationStringString dateString*
dateString2T
java.lang.StringTYPE:
.src\main\java\org\jabref\model\entry\Date.javaò> ò(D∂
+org.jabref.model.entry.Date.getNormalized()METHOD:
.src\main\java\org\jabref\model\entry\Date.java® ®("
isFinalfalse"l
declarationStringW<mark class="modifier">public </mark>String <mark class="method">getNormalized</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getNormalized2í
Njava.time.format.DateTimeFormatter.format(java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.java©) ©(/2Ö
Aorg.jabref.model.entry.Date?NORMALIZED_DATE_FORMATTER@22.43:22.68CALL:
.src\main\java\org\jabref\model\entry\Date.java© ©((2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.java©0 ©(42[
java.lang.StringRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.java® ®(†
%org.jabref.model.entry.Date.getYear()METHOD:
.src\main\java\org\jabref\model\entry\Date.java¨ ¨($"
isFinalfalse"w
declarationStringb<mark class="modifier">public </mark>Optional&lt;Integer&gt; <mark class="method">getYear</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<Integer>*getYear2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.java≠ ≠(2]
java.util.OptionalRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.java¨ ¨(2e
java.lang.IntegerRETURN_TYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.java¨ ¨(±
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)METHOD:
.src\main\java\org\jabref\model\entry\Date.java∞ ∞( "
isFinalfalse"Ñ
declarationStringo<mark class="modifier">public </mark>Optional&lt;Integer&gt; <mark class="method">get</mark>(ChronoField field)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<Integer>*get2ï
Qjava.time.temporal.TemporalAccessor.isSupported(java.time.temporal.TemporalField)CALL:
.src\main\java\org\jabref\model\entry\Date.java± ±(2\
java.util.Optional.of(T)CALL:
.src\main\java\org\jabref\model\entry\Date.java≤ ≤(2ç
Ijava.time.temporal.TemporalAccessor.get(java.time.temporal.TemporalField)CALL:
.src\main\java\org\jabref\model\entry\Date.java≤$ ≤('2^
java.util.Optional.empty()CALL:
.src\main\java\org\jabref\model\entry\Date.java¥ ¥(!2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.java± ±(2â
Eorg.jabref.model.entry.Date.get(java.time.temporal.ChronoField)!fieldCALL:
.src\main\java\org\jabref\model\entry\Date.java± ±("2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.java≤ ≤(#2â
Eorg.jabref.model.entry.Date.get(java.time.temporal.ChronoField)!fieldCALL:
.src\main\java\org\jabref\model\entry\Date.java≤( ≤(-2é
Eorg.jabref.model.entry.Date.get(java.time.temporal.ChronoField)!field	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.java∞- ∞(22]
java.util.OptionalRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.java∞ ∞(2e
java.lang.IntegerRETURN_TYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.java∞ ∞(»
Eorg.jabref.model.entry.Date.get(java.time.temporal.ChronoField)!field	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.java∞- ∞(2"
typeChronoField"
isFinalfalse"&
declarationStringChronoField field*field2b
java.time.temporal.ChronoFieldTYPE:
.src\main\java\org\jabref\model\entry\Date.java∞! ∞(,÷
&org.jabref.model.entry.Date.getMonth()METHOD:
.src\main\java\org\jabref\model\entry\Date.java∏ ∏(#"
isFinalfalse"v
declarationStringa<mark class="modifier">public </mark>Optional&lt;Month&gt; <mark class="method">getMonth</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<Month>*getMonth2±
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALL:
.src\main\java\org\jabref\model\entry\Date.javaπ. π(52É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.javaπ π(2v
2org.jabref.model.entry.Month.getMonthByNumber(int)CALL:
.src\main\java\org\jabref\model\entry\Date.javaπ6 π(M2]
java.util.OptionalRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.java∏ ∏(2p
org.jabref.model.entry.MonthRETURN_TYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.java∏ ∏(ù
$org.jabref.model.entry.Date.getDay()METHOD:
.src\main\java\org\jabref\model\entry\Date.javaº º(#"
isFinalfalse"v
declarationStringa<mark class="modifier">public </mark>Optional&lt;Integer&gt; <mark class="method">getDay</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<Integer>*getDay2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.javaΩ Ω(2]
java.util.OptionalRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.javaº º(2e
java.lang.IntegerRETURN_TYPE_ARGUMENT:
.src\main\java\org\jabref\model\entry\Date.javaº º(œ
0org.jabref.model.entry.Date.toTemporalAccessor()METHOD:
.src\main\java\org\jabref\model\entry\Date.java¿ ¿(."
isFinalfalse"{
declarationStringf<mark class="modifier">public </mark>TemporalAccessor <mark class="method">toTemporalAccessor</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeTemporalAccessor*toTemporalAccessor2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.java¡ ¡(2n
#java.time.temporal.TemporalAccessorRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.java¿ ¿(Í'
4org.jabref.model.entry.Date.equals(java.lang.Object)METHOD:
.src\main\java\org\jabref\model\entry\Date.java≈ ≈("
isFinalfalse"ª
declarationString•<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">equals</mark>(Object o)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*equals2_
java.lang.Object.getClass()CALL:
.src\main\java\org\jabref\model\entry\Date.java… …($2_
java.lang.Object.getClass()CALL:
.src\main\java\org\jabref\model\entry\Date.java…, …(42Ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ Œ(2i
%org.jabref.model.entry.Date.getYear()CALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ Œ(%2i
%org.jabref.model.entry.Date.getYear()CALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ/ Œ(62Ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALL:
.src\main\java\org\jabref\model\entry\Date.javaœ œ(2j
&org.jabref.model.entry.Date.getMonth()CALL:
.src\main\java\org\jabref\model\entry\Date.javaœ œ('2j
&org.jabref.model.entry.Date.getMonth()CALL:
.src\main\java\org\jabref\model\entry\Date.javaœ1 œ(92Ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALL:
.src\main\java\org\jabref\model\entry\Date.java– –(2h
$org.jabref.model.entry.Date.getDay()CALL:
.src\main\java\org\jabref\model\entry\Date.java– –(%2h
$org.jabref.model.entry.Date.getDay()CALL:
.src\main\java\org\jabref\model\entry\Date.java–/ –(52Ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALL:
.src\main\java\org\jabref\model\entry\Date.java— —(2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.java— —("2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.java—C —(F2Ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALL:
.src\main\java\org\jabref\model\entry\Date.java“ “(2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.java“ “("2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.java“F “(I2Ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALL:
.src\main\java\org\jabref\model\entry\Date.java” ”(2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.java” ”("2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.java”E ”(H2Ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALL:
.src\main\java\org\jabref\model\entry\Date.java‘ ‘(2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.java‘ ‘("2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.java‘F ‘(I2z
6org.jabref.model.entry.Date.equals(java.lang.Object)!oCALL:
.src\main\java\org\jabref\model\entry\Date.java∆ ∆(2z
6org.jabref.model.entry.Date.equals(java.lang.Object)!oCALL:
.src\main\java\org\jabref\model\entry\Date.java… …(2z
6org.jabref.model.entry.Date.equals(java.lang.Object)!oCALL:
.src\main\java\org\jabref\model\entry\Date.java…* …(+2z
6org.jabref.model.entry.Date.equals(java.lang.Object)!oCALL:
.src\main\java\org\jabref\model\entry\Date.javaÃ Ã(2å
Horg.jabref.model.entry.Date.equals(java.lang.Object)?date1@332.13:332.18CALL:
.src\main\java\org\jabref\model\entry\Date.javaŒ) Œ(.2å
Horg.jabref.model.entry.Date.equals(java.lang.Object)?date1@332.13:332.18CALL:
.src\main\java\org\jabref\model\entry\Date.javaœ+ œ(02å
Horg.jabref.model.entry.Date.equals(java.lang.Object)?date1@332.13:332.18CALL:
.src\main\java\org\jabref\model\entry\Date.java–) –(.2å
Horg.jabref.model.entry.Date.equals(java.lang.Object)?date1@332.13:332.18CALL:
.src\main\java\org\jabref\model\entry\Date.java—= —(B2å
Horg.jabref.model.entry.Date.equals(java.lang.Object)?date1@332.13:332.18CALL:
.src\main\java\org\jabref\model\entry\Date.java“@ “(E2å
Horg.jabref.model.entry.Date.equals(java.lang.Object)?date1@332.13:332.18CALL:
.src\main\java\org\jabref\model\entry\Date.java”? ”(D2å
Horg.jabref.model.entry.Date.equals(java.lang.Object)?date1@332.13:332.18CALL:
.src\main\java\org\jabref\model\entry\Date.java‘@ ‘(E2
6org.jabref.model.entry.Date.equals(java.lang.Object)!o	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.java≈! ≈("2ì
Horg.jabref.model.entry.Date.equals(java.lang.Object)?date1@332.13:332.18DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaÃ Ã(2R
booleanRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.java≈ ≈(Ä
Horg.jabref.model.entry.Date.equals(java.lang.Object)?date1@332.13:332.18VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaÃ Ã("
typeDate"
isFinalfalse"j
declarationStringU<mark class="modifier"> </mark>Date <mark class="class-field">date1</mark> = (Date) o*date12_
org.jabref.model.entry.DateTYPE:
.src\main\java\org\jabref\model\entry\Date.javaÃ Ã(2z
6org.jabref.model.entry.Date.equals(java.lang.Object)!oCALL:
.src\main\java\org\jabref\model\entry\Date.javaÃ Ã(ô
6org.jabref.model.entry.Date.equals(java.lang.Object)!o	PARAMETER:
.src\main\java\org\jabref\model\entry\Date.java≈! ≈(""
typeObject"
isFinalfalse"
declarationStringObject o*o2T
java.lang.ObjectTYPE:
.src\main\java\org\jabref\model\entry\Date.java≈ ≈( å
&org.jabref.model.entry.Date.toString()METHOD:
.src\main\java\org\jabref\model\entry\Date.javaÿ ÿ("
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">toString</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*toString2_
java.lang.Object.toString()CALL:
.src\main\java\org\jabref\model\entry\Date.javaŸ$ Ÿ(,2ï
Qjava.time.temporal.TemporalAccessor.isSupported(java.time.temporal.TemporalField)CALL:
.src\main\java\org\jabref\model\entry\Date.java⁄ ⁄(2í
Njava.time.format.DateTimeFormatter.format(java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.java€C €(I2ï
Qjava.time.temporal.TemporalAccessor.isSupported(java.time.temporal.TemporalField)CALL:
.src\main\java\org\jabref\model\entry\Date.java‹ ‹(#2í
Njava.time.format.DateTimeFormatter.format(java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.java›< ›(B2ï
Qjava.time.temporal.TemporalAccessor.isSupported(java.time.temporal.TemporalField)CALL:
.src\main\java\org\jabref\model\entry\Date.javaﬁ ﬁ(#2ï
Qjava.time.temporal.TemporalAccessor.isSupported(java.time.temporal.TemporalField)CALL:
.src\main\java\org\jabref\model\entry\Date.javaﬁG ﬁ(R2í
Njava.time.format.DateTimeFormatter.format(java.time.temporal.TemporalAccessor)CALL:
.src\main\java\org\jabref\model\entry\Date.javaﬂ7 ﬂ(=2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.javaŸ Ÿ(#2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.java⁄ ⁄(2Ü
Borg.jabref.model.entry.Date.toString()?formattedDate@345.15:345.28CALL:
.src\main\java\org\jabref\model\entry\Date.java€ €(2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.java€J €(N2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.java‹ ‹(2Ü
Borg.jabref.model.entry.Date.toString()?formattedDate@345.15:345.28CALL:
.src\main\java\org\jabref\model\entry\Date.java› ›(2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.java›C ›(G2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.javaﬁ ﬁ(2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.javaﬁB ﬁ(F2Ü
Borg.jabref.model.entry.Date.toString()?formattedDate@345.15:345.28CALL:
.src\main\java\org\jabref\model\entry\Date.javaﬂ ﬂ(2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.javaﬂ> ﬂ(B2Ü
Borg.jabref.model.entry.Date.toString()?formattedDate@345.15:345.28CALL:
.src\main\java\org\jabref\model\entry\Date.java‚ ‚(&2ç
Borg.jabref.model.entry.Date.toString()?formattedDate@345.15:345.28DECLARATION:
.src\main\java\org\jabref\model\entry\Date.javaŸ Ÿ(2[
java.lang.StringRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.javaÿ ÿ(·
Borg.jabref.model.entry.Date.toString()?formattedDate@345.15:345.28VARIABLE:
.src\main\java\org\jabref\model\entry\Date.javaŸ Ÿ("
typeString"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>String <mark class="class-field">formattedDate</mark> = date.toString()*formattedDate2T
java.lang.StringTYPE:
.src\main\java\org\jabref\model\entry\Date.javaŸ Ÿ(2_
java.lang.Object.toString()CALL:
.src\main\java\org\jabref\model\entry\Date.javaŸ$ Ÿ(,2p
,org.jabref.model.entry.Date?date@80.35:80.39CALL:
.src\main\java\org\jabref\model\entry\Date.javaŸ Ÿ(#ó

&org.jabref.model.entry.Date.hashCode()METHOD:
.src\main\java\org\jabref\model\entry\Date.javaÁ Á("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">hashCode</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*hashCode2o
+java.util.Objects.hash(java.lang.Object...)CALL:
.src\main\java\org\jabref\model\entry\Date.javaË Ë(2i
%org.jabref.model.entry.Date.getYear()CALL:
.src\main\java\org\jabref\model\entry\Date.javaË Ë(#2j
&org.jabref.model.entry.Date.getMonth()CALL:
.src\main\java\org\jabref\model\entry\Date.javaË' Ë(/2h
$org.jabref.model.entry.Date.getDay()CALL:
.src\main\java\org\jabref\model\entry\Date.javaË3 Ë(92É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.javaË= Ë(@2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.javaË[ Ë(^2É
?org.jabref.model.entry.Date.get(java.time.temporal.ChronoField)CALL:
.src\main\java\org\jabref\model\entry\Date.javaË| Ë(2N
intRETURN_TYPE:
.src\main\java\org\jabref\model\entry\Date.javaÁ Á(”
2org.jabref.model.entry.Date?DATE_REGEX@21.31:21.41VALUE8
.src\main\java\org\jabref\model\entry\Date.java ()"
isFinaltrue"
typeString"∂
declarationString†<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">DATE_REGEX</mark>"
isStatictrue"
accesspublic*
DATE_REGEX2R
java.lang.StringTYPE8
.src\main\java\org\jabref\model\entry\Date.java (ﬁ
Aorg.jabref.model.entry.Date?NORMALIZED_DATE_FORMATTER@22.43:22.68VALUE8
.src\main\java\org\jabref\model\entry\Date.java+ (D"
isFinaltrue"
typeDateTimeFormatter"Ç
declarationStringÏ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>DateTimeFormatter <mark class="class-field">NORMALIZED_DATE_FORMATTER</mark> = DateTimeFormatter.ofPattern("uuuu[-MM][-dd]");"
isStatictrue"
accessprivate*NORMALIZED_DATE_FORMATTER2d
"java.time.format.DateTimeFormatterTYPE8
.src\main\java\org\jabref\model\entry\Date.java (*2Ä
>java.time.format.DateTimeFormatter.ofPattern(java.lang.String)CALL8
.src\main\java\org\jabref\model\entry\Date.javaY (bò
;org.jabref.model.entry.Date?SIMPLE_DATE_FORMATS@23.43:23.62VALUE8
.src\main\java\org\jabref\model\entry\Date.java+ (>"
isFinaltrue"
typeDateTimeFormatter"À
declarationStringµ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>DateTimeFormatter <mark class="class-field">SIMPLE_DATE_FORMATS</mark>"
isStatictrue"
accessprivate*SIMPLE_DATE_FORMATS2d
"java.time.format.DateTimeFormatterTYPE8
.src\main\java\org\jabref\model\entry\Date.java (*
.org.jabref.model.entry.Date?LOGGER@24.32:24.38VALUE8
.src\main\java\org\jabref\model\entry\Date.java  (&"
isFinaltrue"
typeLogger"⁄
declarationStringƒ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(Date.class);"
isStatictrue"
accessprivate*LOGGER2R
org.slf4j.LoggerTYPE8
.src\main\java\org\jabref\model\entry\Date.java (∆
,org.jabref.model.entry.Date?date@80.35:80.39VALUE8
.src\main\java\org\jabref\model\entry\Date.javaP# P('"
isFinaltrue"
typeTemporalAccessor"ñ
declarationStringÄ<mark class="modifier">private </mark><mark class="modifier">final </mark>TemporalAccessor <mark class="class-field">date</mark>"
isStaticfalse"
accessprivate*date2e
#java.time.temporal.TemporalAccessorTYPE8
.src\main\java\org\jabref\model\entry\Date.javaP P("œ
/org.jabref.model.entry.Date?endDate@81.35:81.42VALUE8
.src\main\java\org\jabref\model\entry\Date.javaQ# Q(*"
isFinaltrue"
typeTemporalAccessor"ô
declarationStringÉ<mark class="modifier">private </mark><mark class="modifier">final </mark>TemporalAccessor <mark class="class-field">endDate</mark>"
isStaticfalse"
accessprivate*endDate2e
#java.time.temporal.TemporalAccessorTYPE8
.src\main\java\org\jabref\model\entry\Date.javaQ Q("¸
5org.jabref.model.entry.Date?formatStrings@27.21:27.34VARIABLE8
.src\main\java\org\jabref\model\entry\Date.java (""
typeList<String>"
isFinalfalse"∑
declarationString°<mark class="modifier"> </mark>List<String> <mark class="class-field">formatStrings</mark> = Arrays.asList(// covers 2018-10-03T07:24:14+03:00
"uuuu-MM-dd'T'HH:mm[:ss][xxx][xx][X]"<mark class="modifier">,</mark> // covers 2018-10-03T17:2
"uuuu-MM-dd'T'HH:m[:ss][xxx][xx][X]"<mark class="modifier">,</mark> // covers 2018-10-03T7:24
"uuuu-MM-dd'T'H:mm[:ss][xxx][xx][X]"<mark class="modifier">,</mark> // covers 2018-10-03T7:7
"uuuu-MM-dd'T'H:m[:ss][xxx][xx][X]"<mark class="modifier">,</mark> // covers 2018-10-03T07
"uuuu-MM-dd'T'HH[:ss][xxx][xx][X]"<mark class="modifier">,</mark> // covers 2018-10-03T7
"uuuu-MM-dd'T'H[:ss][xxx][xx][X]"<mark class="modifier">,</mark> // covers 2009-1-15
"uuuu-M-d"<mark class="modifier">,</mark> // covers 2009-11
"uuuu-M"<mark class="modifier">,</mark> // covers 2020/10
"uuuu/M"<mark class="modifier">,</mark> // covers 15-1-2012
"d-M-uuuu"<mark class="modifier">,</mark> // covers 1-2012
"M-uuuu"<mark class="modifier">,</mark> // covers 9/2015 and 09/2015
"M/uuuu"<mark class="modifier">,</mark> // covers 9/15
"M/uu"<mark class="modifier">,</mark> // covers September 1, 2015
"MMMM d, uuuu"<mark class="modifier">,</mark> // covers September, 2015
"MMMM, uuuu"<mark class="modifier">,</mark> // covers 15.1.2015
"d.M.uuuu"<mark class="modifier">,</mark> // covers 2015.1.15
"uuuu.M.d"<mark class="modifier">,</mark> // covers 2015
"uuuu"<mark class="modifier">,</mark> // covers Jan, 2020
"MMM, uuuu"<mark class="modifier">,</mark> // covers 2015.10.15
"uuuu.MM.d"<mark class="modifier">,</mark> // covers 20 January 2015/20 February 2015
"d MMMM u/d MMMM u"<mark class="modifier">,</mark> // covers 20 January 2015
"d MMMM u"<mark class="modifier">,</mark> "d MMMM u / d MMMM u"<mark class="modifier">,</mark> // covers 2015-
"u'-'"<mark class="modifier">,</mark> // covers 2023?
"u'?'"<mark class="modifier">,</mark> // covers 1 BC and 1 AD
"u G"<mark class="modifier">,</mark> // covers 0030 BC and 0005 AD
"uuuu G"<mark class="modifier">,</mark> // covers 30 BC/5 AD
"u G/u G"<mark class="modifier">,</mark> // covers 0030 BC/0005 AD
"uuuu G/uuuu G"<mark class="modifier">,</mark> // covers 0030-01 BC/0005-02 AD
"uuuu-MM G/uuuu-MM G")*formatStrings2P
java.util.ListTYPE8
.src\main\java\org\jabref\model\entry\Date.java (2[
java.lang.StringTYPE_ARGUMENT8
.src\main\java\org\jabref\model\entry\Date.java (2_
java.util.Arrays.asList(T...)CALL8
.src\main\java\org\jabref\model\entry\Date.java, (2