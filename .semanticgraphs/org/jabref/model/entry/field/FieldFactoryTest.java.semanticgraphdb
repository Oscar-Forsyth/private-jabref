
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java§
-org.jabref.model.entry.field.FieldFactoryTestCLASSJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java ("'
packageorg.jabref.model.entry.field"
isFinalfalse"
inner classfalse"

isAbstractfalse"h
declarationStringS<mark class="modifier"> </mark><mark class="modifier">class </mark>FieldFactoryTest"
accesspackage_private*FieldFactoryTest2õ
@org.jabref.model.entry.field.FieldFactoryTest.orFieldsTwoTerms()DECLARATIONJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java	 (2ù
Borg.jabref.model.entry.field.FieldFactoryTest.orFieldsThreeTerms()DECLARATIONJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java	 (2ß
Lorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties()DECLARATIONJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java% (A2‹
Äorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties(org.jabref.model.entry.field.Field, java.lang.String)DECLARATIONJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java%	 %(%2Ø
Torg.jabref.model.entry.field.FieldFactoryTest.doesNotParseApaFieldWithoutEntryType()DECLARATIONJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java*	 *(-2©
Norg.jabref.model.entry.field.FieldFactoryTest.doesParseApaFieldWithEntryType()DECLARATIONJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java/	 /('ñ
@org.jabref.model.entry.field.FieldFactoryTest.orFieldsTwoTerms()METHODJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java	 ("
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">orFieldsTwoTerms</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*orFieldsTwoTerms2∂
borg.jabref.model.entry.field.FieldFactory.serializeOrFields(org.jabref.model.entry.field.Field...)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java- (>2ú
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.javaC (O2ú
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java\ (h2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java (º	
Borg.jabref.model.entry.field.FieldFactoryTest.orFieldsThreeTerms()METHODJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java	 ("
isFinalfalse"≤
declarationStringú<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">orFieldsThreeTerms</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*orFieldsThreeTerms2∂
borg.jabref.model.entry.field.FieldFactory.serializeOrFields(org.jabref.model.entry.field.Field...)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java1 (B2ú
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.javaG (S2ú
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java` (l2ù
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLK
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.javay (Ö2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java (Ç

Lorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties()METHODJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java% (A"
isFinalfalse"≥
declarationStringù<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">fieldsWithoutFieldProperties</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*fieldsWithoutFieldProperties2¥
`org.jabref.model.entry.field.UserSpecificCommentField.UserSpecificCommentField(java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java! (92¥
`org.jabref.model.entry.field.UserSpecificCommentField.UserSpecificCommentField(java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java! (92Æ
Zorg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String, java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java! (-2r
java.util.stream.StreamRETURN_TYPEJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java (2è
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java (#ˇ
Äorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties(org.jabref.model.entry.field.Field, java.lang.String)METHODJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java%	 %(%"
isFinalfalse"†
declarationStringä <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fieldsWithoutFieldProperties</mark>(Field expected<mark class="modifier"><mark class="modifier">,</mark></mark> String name)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*fieldsWithoutFieldProperties2ö
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java&, &(62ﬁ
âorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties(org.jabref.model.entry.field.Field, java.lang.String)!expectedCALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java& &(2⁄
Öorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties(org.jabref.model.entry.field.Field, java.lang.String)!nameCALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java&7 &(;2„
âorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties(org.jabref.model.entry.field.Field, java.lang.String)!expected	PARAMETERJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java%, %(42ﬂ
Öorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties(org.jabref.model.entry.field.Field, java.lang.String)!name	PARAMETERJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java%= %(A2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java% %(´
âorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties(org.jabref.model.entry.field.Field, java.lang.String)!expected	PARAMETERJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java%, %(4"
typeField"
isFinalfalse"#
declarationStringField expected*expected2v
"org.jabref.model.entry.field.FieldTYPEJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java%& %(+è
Öorg.jabref.model.entry.field.FieldFactoryTest.fieldsWithoutFieldProperties(org.jabref.model.entry.field.Field, java.lang.String)!name	PARAMETERJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java%= %(A"
typeString"
isFinalfalse" 
declarationStringString name*name2d
java.lang.StringTYPEJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java%6 %(<¯
Torg.jabref.model.entry.field.FieldFactoryTest.doesNotParseApaFieldWithoutEntryType()METHODJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java*	 *(-"
isFinalfalse"ƒ
declarationStringÆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">doesNotParseApaFieldWithoutEntryType</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$doesNotParseApaFieldWithoutEntryType2ö
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java+? +(I2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java* *(È
Norg.jabref.model.entry.field.FieldFactoryTest.doesParseApaFieldWithEntryType()METHODJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java/	 /('"
isFinalfalse"æ
declarationString®<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">doesParseApaFieldWithEntryType</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*doesParseApaFieldWithEntryType2ù
Iorg.jabref.model.entry.field.FieldFactory.parseField(T, java.lang.String)CALLJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java0< 0(F2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\model\entry\field\FieldFactoryTest.java/ /(