
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅæ
%org.jabref.model.entry.AuthorListTestCLASSB
8src\test\java\org\jabref\model\entry\AuthorListTest.java ("!
packageorg.jabref.model.entry"
isFinalfalse"
inner classfalse"

isAbstractfalse"l
declarationStringW<mark class="modifier">public </mark><mark class="modifier">class </mark>AuthorListTest"
accesspublic*AuthorListTest2è
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java( ((2ä
7org.jabref.model.entry.AuthorListTest.fixAuthorNatbib()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java- -(2≠
Zorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeEmptyAuthorStringForEmptyInput()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java7 7(B2¨
Yorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeOneAuthorNameFromLatex()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java< <(A2≠
Zorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeTwoAuthorNamesFromLatex()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaB B(B2©
Vorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeAuthorEtAlFromLatex()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaH H(>2∞
]org.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeOneInsitutionNameFromLatex()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaN N(E2∞
]org.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeTwoInsitutionNameFromLatex()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaT T(E2´
Xorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeMixedAuthorsFromLatex()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaZ Z(@2≥
`org.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeOneInstitutionWithParanthesisAtStart()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java` `(H2è
<org.jabref.model.entry.AuthorListTest.parseCachesOneAuthor()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaf f($2ò
Eorg.jabref.model.entry.AuthorListTest.parseCachesOneLatexFreeAuthor()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javan n(-2ò
Eorg.jabref.model.entry.AuthorListTest.fixAuthorFirstNameFirstCommas()DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javav v(-2¡
lorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeEmptyAuthorStringForEmptyInputAbbreviate()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂ ∂(T2¿
korg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbreviate()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª ª(S2¡
lorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbreviate()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡ ¡(T2œ
zorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbreviateAndOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java« «(b2ø
jorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbreviate()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ Õ(R2Õ
xorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbreviateAndOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”(`2ƒ
oorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbreviate()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ(W2ƒ
oorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbreviate()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ ﬁ(W2ø
jorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbreviate()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java‰ ‰(R2«
rorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbreviate()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÍ Í(Z2∑
borg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeEmptyAuthorStringForEmptyInput()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java (J2∂
aorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeOneAuthorNameFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı ı(I2∑
borg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚ ˚(J2µ
`org.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ Å(H2∫
eorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeOneInsitutionNameFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá á(M2∫
eorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç ç(M2µ
`org.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeMixedAuthorsFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì ì(H2Ω
horg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeOneInstitutionWithParanthesisAtStart()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô(P2î
?org.jabref.model.entry.AuthorListTest.fixAuthorFirstNameFirst()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü ü('2†
Korg.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasNoComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java≤ ≤(32§
Oorg.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java— —(72ª
forg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputAbbr()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ Ù(N2∫
eorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbr()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java˘ ˘(M2ª
forg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbr()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˇ ˇ(N2π
dorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbr()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÖ Ö(L2æ
iorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbr()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaã ã(Q2æ
iorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbr()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë ë(Q2π
dorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbr()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó ó(L2¡
lorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbr()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù ù(T2∑
borg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInput()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java£ £(J2∂
aorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java® ®(I2∑
borg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ Æ(J2µ
`org.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥ ¥(H2∫
eorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫ ∫(M2∫
eorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿ ¿(M2µ
`org.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java∆ ∆(H2Ω
horg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStart()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã(P2∆
qorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputAbbrOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java“ “(Y2≈
porg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbrOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java◊ ◊(X2∆
qorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbrOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java› ›(Y2ƒ
oorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbrOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java„ „(W2…
torg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbrOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È(\2…
torg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbrOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÔ Ô(\2ƒ
oorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbrOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı ı(W2Ã
worg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbrOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚ ˚(_2¬
morg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ Å(U2¡
lorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÜ Ü(T2¬
morg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å(U2¿
korg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaí í(S2≈
porg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò ò(X2≈
porg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû û(X2¿
korg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java§ §(S2»
sorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java™ ™([2ì
>org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirst()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞ ∞(&2ò
Corg.jabref.model.entry.AuthorListTest.fixAuthorLastNameOnlyCommas()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ Ê(+2±
\org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeOneAuthorNameFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç(D2≤
]org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá á(E2¬
morg.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexUsingOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å(U2∞
[org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeThreeAuthorsFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë ë(C2¿
korg.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeThreeAuthorsFromLatexUsingOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ ñ(S2µ
`org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeOneInsitutionNameFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(H2µ
`org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java† †(H2∞
[org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeMixedAuthorsFromLatex()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶ ¶(C2∏
corg.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeOneInstitutionWithParanthesisAtStart()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¨ ¨(K2ò
Corg.jabref.model.entry.AuthorListTest.fixAuthorForAlphabetization()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java≤ ≤(+2Å
,org.jabref.model.entry.AuthorListTest.size()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ Ω(2Ñ
/org.jabref.model.entry.AuthorListTest.isEmpty()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”(2ã
6org.jabref.model.entry.AuthorListTest.getEmptyAuthor()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ(2Ü
1org.jabref.model.entry.AuthorListTest.getAuthor()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ ﬁ(2ä
5org.jabref.model.entry.AuthorListTest.companyAuthor()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É(2ì
>org.jabref.model.entry.AuthorListTest.companyAuthorAndPerson()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaä ä(&2õ
Forg.jabref.model.entry.AuthorListTest.companyAuthorWithLowerCaseWord()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë ë(.2í
=org.jabref.model.entry.AuthorListTest.abbreviationWithRelax()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò ò(%2ç
8org.jabref.model.entry.AuthorListTest.getAuthorsNatbib()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü ü( 2è
:org.jabref.model.entry.AuthorListTest.getAuthorsLastOnly()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥ ¥("2ó
Borg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÀ À(*2õ
Forg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ Á(.2î
?org.jabref.model.entry.AuthorListTest.getAuthorsLastFirstAnds()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç('2ë
<org.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò ò($2ï
@org.jabref.model.entry.AuthorListTest.getAuthorsFirstFirstAnds()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø ø((2ô
Dorg.jabref.model.entry.AuthorListTest.getAuthorsForAlphabetization()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã(,2î
?org.jabref.model.entry.AuthorListTest.removeStartAndEndBraces()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ('2í
=org.jabref.model.entry.AuthorListTest.createCorrectInitials()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java„ „(%2ü
Jorg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundFirstName()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È(22û
Iorg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundLastName()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java (12õ
Forg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInFirstName()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˆ ˆ(.2ö
Eorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastName()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¸ ¸(-2¶
Qorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithInitials()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç(92•
Porg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithEscaped()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà à(82∞
[org.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWhenLastNameGivenFirst()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaé é(C2ê
;org.jabref.model.entry.AuthorListTest.parseNameWithBraces()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï ï(#2∑
borg.jabref.model.entry.AuthorListTest.parseFirstNameFromFirstAuthorMultipleAuthorsWithLatexNames()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(J2∏
corg.jabref.model.entry.AuthorListTest.parseFirstNameFromSecondAuthorMultipleAuthorsWithLatexNames()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢ ¢(K2∂
aorg.jabref.model.entry.AuthorListTest.parseLastNameFromFirstAuthorMultipleAuthorsWithLatexNames()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java© ©(I2∑
borg.jabref.model.entry.AuthorListTest.parseLastNameFromSecondAuthorMultipleAuthorsWithLatexNames()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞ ∞(J2°
Lorg.jabref.model.entry.AuthorListTest.parseInstitutionAuthorWithLatexNames()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑ ∑(42∞
[org.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ Ω(C2´
Vorg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java≈ ≈(>2¶
Qorg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŒ Œ(92∑
borg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄ ⁄(J2∫
eorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ Â(M2ï
@org.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java ((2ñ
Aorg.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˇ ˇ()2ô
Dorg.jabref.model.entry.AuthorListTest.equalsFalseWhenNotAuthorList()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà	 à	(,2ê
;org.jabref.model.entry.AuthorListTest.equalsTrueReflexive()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaé	 é	(#2ê
;org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaî	 î	(#2ë
<org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaú	 ú	($2ë
<org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶	 ¶	($2è
:org.jabref.model.entry.AuthorListTest.equalsFalseForNull()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaØ	 Ø	("2è
:org.jabref.model.entry.AuthorListTest.hashCodeConsistent()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥	 ¥	("2ê
;org.jabref.model.entry.AuthorListTest.hashCodeNotConstant()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫	 ∫	(#2´
Vorg.jabref.model.entry.AuthorListTest.getAsLastFirstFirstLastNamesWithAndEmptyAuthor()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡	 ¡	(>2Ø
Zorg.jabref.model.entry.AuthorListTest.getAsLastFirstFirstLastNamesWithAndMultipleAuthors()DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java«	 «	(B2ô
Forg.jabref.model.entry.AuthorListTest?MUHAMMAD_ALKHWARIZMI@22.32:22.52DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java  (42ë
>org.jabref.model.entry.AuthorListTest?CORRADO_BOHM@24.32:24.44DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java  (,2è
<org.jabref.model.entry.AuthorListTest?KURT_GODEL@26.32:26.42DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java  (*2é
;org.jabref.model.entry.AuthorListTest?BANU_MOSA@28.32:28.41DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java  ()2ë
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java$ (02ö
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java$ (92õ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java $  (:2ù
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java!$ !(<2ü
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java"$ "(>2Æ
[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java#$ #(M2†
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java%$ %(?2¨
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.java&$ &(K™
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.java( (("
isFinalfalse"±
declarationStringõ<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">int</mark> <mark class="method">size</mark>(String bibtex)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeint*size2Ç
6org.jabref.model.entry.AuthorList.getNumberOfAuthors()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java)( )(:2Ö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java) )(2è
Corg.jabref.model.entry.AuthorListTest.size(java.lang.String)!bibtexCALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java)  )(&2î
Corg.jabref.model.entry.AuthorListTest.size(java.lang.String)!bibtex	PARAMETERB
8src\test\java\org\jabref\model\entry\AuthorListTest.java(" (((2V
intRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java( ((¿
Corg.jabref.model.entry.AuthorListTest.size(java.lang.String)!bibtex	PARAMETERB
8src\test\java\org\jabref\model\entry\AuthorListTest.java(" ((("
typeString"
isFinalfalse""
declarationStringString bibtex*bibtex2\
java.lang.StringTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java( ((!…
7org.jabref.model.entry.AuthorListTest.fixAuthorNatbib()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.java- -("
isFinalfalse"µ
declarationStringü<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fixAuthorNatbib</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*fixAuthorNatbib2è
Corg.jabref.model.entry.AuthorList.fixAuthorNatbib(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java.$ .(32è
Corg.jabref.model.entry.AuthorList.fixAuthorNatbib(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java/) /(82è
Corg.jabref.model.entry.AuthorList.fixAuthorNatbib(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java1 1( 2è
Corg.jabref.model.entry.AuthorList.fixAuthorNatbib(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java3 3( 2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java- -(Ô
Zorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeEmptyAuthorStringForEmptyInput()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.java7 7(B"
isFinalfalse"ÿ
declarationString¬<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsNatbibLatexFreeEmptyAuthorStringForEmptyInput</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*2getAsNatbibLatexFreeEmptyAuthorStringForEmptyInput2{
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java82 8(=2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java8& 8(/2ä
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java8 8(%2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java7 7(ı
Yorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeOneAuthorNameFromLatex()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.java< <(A"
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsNatbibLatexFreeUnicodeOneAuthorNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*1getAsNatbibLatexFreeUnicodeOneAuthorNameFromLatex2{
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java>2 >(=2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java>& >(/2ì
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java> >(%2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java< <(˘
Zorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeTwoAuthorNamesFromLatex()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaB B(B"
isFinalfalse"ÿ
declarationString¬<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsNatbibLatexFreeUnicodeTwoAuthorNamesFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*2getAsNatbibLatexFreeUnicodeTwoAuthorNamesFromLatex2{
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaD3 D(>2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaD' D(02î
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaD D(&2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaB B(Ô
Vorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeAuthorEtAlFromLatex()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaH H(>"
isFinalfalse"‘
declarationStringæ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsNatbibLatexFreeUnicodeAuthorEtAlFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*.getAsNatbibLatexFreeUnicodeAuthorEtAlFromLatex2{
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaJ5 J(@2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaJ) J(22ñ
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaJ J((2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaH H(Ü
]org.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeOneInsitutionNameFromLatex()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaN N(E"
isFinalfalse"€
declarationString≈<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsNatbibLatexFreeUnicodeOneInsitutionNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*5getAsNatbibLatexFreeUnicodeOneInsitutionNameFromLatex2{
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaP7 P(B2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaP+ P(42ò
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaP P(*2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaN N(á
]org.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeTwoInsitutionNameFromLatex()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaT T(E"
isFinalfalse"€
declarationString≈<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsNatbibLatexFreeUnicodeTwoInsitutionNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*5getAsNatbibLatexFreeUnicodeTwoInsitutionNameFromLatex2{
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaV8 V(C2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaV, V(52ô
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaV V(+2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaT T(Ñ
Xorg.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeUnicodeMixedAuthorsFromLatex()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaZ Z(@"
isFinalfalse"÷
declarationString¿<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsNatbibLatexFreeUnicodeMixedAuthorsFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*0getAsNatbibLatexFreeUnicodeMixedAuthorsFromLatex2{
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java\D \(O2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java\8 \(A2•
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java\ \(72W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaZ Z(û
`org.jabref.model.entry.AuthorListTest.getAsNatbibLatexFreeOneInstitutionWithParanthesisAtStart()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.java` `(H"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsNatbibLatexFreeOneInstitutionWithParanthesisAtStart</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*8getAsNatbibLatexFreeOneInstitutionWithParanthesisAtStart2{
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javabF b(Q2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javab: b(C2ß
[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javab b(92W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java` `(õ
<org.jabref.model.entry.AuthorListTest.parseCachesOneAuthor()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaf f($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseCachesOneAuthor</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*parseCachesOneAuthor2Ö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javah+ h(02Ö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javai* i(/2Ö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaj- j(22°
Uorg.jabref.model.entry.AuthorListTest.parseCachesOneAuthor()?authorList@104.19:104.29CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javai i(2°
Uorg.jabref.model.entry.AuthorListTest.parseCachesOneAuthor()?authorList@104.19:104.29CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaj j( 2®
Uorg.jabref.model.entry.AuthorListTest.parseCachesOneAuthor()?authorList@104.19:104.29DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javah h(2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaf f(‹
Uorg.jabref.model.entry.AuthorListTest.parseCachesOneAuthor()?authorList@104.19:104.29VARIABLEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javah h("
type
AuthorList"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>AuthorList <mark class="class-field">authorList</mark> = AuthorList.parse("John Smith")*
authorList2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javah h(2Ö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javah+ h(0¬
Eorg.jabref.model.entry.AuthorListTest.parseCachesOneLatexFreeAuthor()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.javan n(-"
isFinalfalse"√
declarationString≠<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseCachesOneLatexFreeAuthor</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*parseCachesOneLatexFreeAuthor2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javap? p(H2Ö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javap+ p(02y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaq> q(G2Ö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaq* q(/2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javar< r(E2Ö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javar- r(22™
^org.jabref.model.entry.AuthorListTest.parseCachesOneLatexFreeAuthor()?authorList@112.19:112.29CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaq q(2™
^org.jabref.model.entry.AuthorListTest.parseCachesOneLatexFreeAuthor()?authorList@112.19:112.29CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javar r( 2±
^org.jabref.model.entry.AuthorListTest.parseCachesOneLatexFreeAuthor()?authorList@112.19:112.29DECLARATIONB
8src\test\java\org\jabref\model\entry\AuthorListTest.javap p(2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javan n(Ì
^org.jabref.model.entry.AuthorListTest.parseCachesOneLatexFreeAuthor()?authorList@112.19:112.29VARIABLEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javap p("
type
AuthorList"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>AuthorList <mark class="class-field">authorList</mark> = AuthorList.parse("John Smith").latexFree()*
authorList2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javap p(2y
-org.jabref.model.entry.AuthorList.latexFree()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javap? p(H2Ö
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javap+ p(0õ#
Eorg.jabref.model.entry.AuthorListTest.fixAuthorFirstNameFirstCommas()METHODB
8src\test\java\org\jabref\model\entry\AuthorListTest.javav v(-"
isFinalfalse"√
declarationString≠<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fixAuthorFirstNameFirstCommas</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*fixAuthorFirstNameFirstCommas2Ø
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javax$ x(A2Ø
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javay$ y(A2Ø
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java{. {(K2Ø
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java}, }(I2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ  Å(=2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É(.2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÜ Ü(.2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá? á(\2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç ç(.2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaê ê(.2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì5 ì(R2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ$ ñ(A2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó$ ó(A2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô. ô(K2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ, õ(I2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü  ü(=2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java° °(.2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java§ §(.2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java•? •(\2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java´ ´(.2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ Æ(.2±
corg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java±5 ±(R2W
voidRETURN_TYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.javav v(»
lorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeEmptyAuthorStringForEmptyInputAbbreviate()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂ ∂(T"
isFinalfalse"Í
declarationString‘<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeEmptyAuthorStringForEmptyInputAbbreviate</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*DgetAsFirstLastNamesLatexFreeEmptyAuthorStringForEmptyInputAbbreviate2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑2 ∑(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑& ∑(/2å
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑ ∑(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂ ∂(Œ
korg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbreviate()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª ª(S"
isFinalfalse"È
declarationString”<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbreviate</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*CgetAsFirstLastNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbreviate2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ2 Ω(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ& Ω(/2ï
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ Ω(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª ª(“
lorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbreviate()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡ ¡(T"
isFinalfalse"Í
declarationString‘<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbreviate</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*DgetAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbreviate2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√3 √(F2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√' √(02ñ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√ √(&2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡ ¡(¸
zorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbreviateAndOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java« «(b"
isFinalfalse"¯
declarationString‚<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbreviateAndOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*RgetAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbreviateAndOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java…3 …(F2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java…' …(02ñ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java… …(&2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java« «(Œ
jorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbreviate()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ Õ(R"
isFinalfalse"Ë
declarationString“<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbreviate</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*BgetAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbreviate2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ5 œ(H2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ) œ(22ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ œ((2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ Õ(¯
xorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbreviateAndOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”(`"
isFinalfalse"ˆ
declarationString‡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbreviateAndOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*PgetAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbreviateAndOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java’5 ’(H2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java’) ’(22ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java’ ’((2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”(ﬂ
oorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbreviate()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ(W"
isFinalfalse"Ì
declarationString◊<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbreviate</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*GgetAsFirstLastNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbreviate2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄V ⁄(i2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄J ⁄(S2ö
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄/ ⁄(I2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ(‡
oorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbreviate()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ ﬁ(W"
isFinalfalse"Ì
declarationString◊<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbreviate</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*GgetAsFirstLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbreviate2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡8 ‡(K2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡, ‡(52õ
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡ ‡(+2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ ﬁ(›
jorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbreviate()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‰ ‰(R"
isFinalfalse"Ë
declarationString“<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbreviate</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*BgetAsFirstLastNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbreviate2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊD Ê(W2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ8 Ê(A2ß
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ Ê(72Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java‰ ‰(˜
rorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbreviate()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÍ Í(Z"
isFinalfalse"
declarationString⁄<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbreviate</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*JgetAsFirstLastNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbreviate2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏF Ï(Y2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ: Ï(C2©
[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ Ï(92Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÍ Í(™
borg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeEmptyAuthorStringForEmptyInput()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java (J"
isFinalfalse"‡
declarationString <mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeEmptyAuthorStringForEmptyInput</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*:getAsFirstLastNamesLatexFreeEmptyAuthorStringForEmptyInput2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ2 Ò(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ& Ò(/2å
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java (∞
aorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeOneAuthorNameFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı ı(I"
isFinalfalse"ﬂ
declarationString…<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeOneAuthorNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*9getAsFirstLastNamesLatexFreeUnicodeOneAuthorNameFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜2 ˜(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜& ˜(/2ï
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı ı(¥
borg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚ ˚(J"
isFinalfalse"‡
declarationString <mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*:getAsFirstLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝3 ˝(F2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝' ˝(02ñ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝(&2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚ ˚(∞
`org.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ Å(H"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*8getAsFirstLastNamesLatexFreeThreeUnicodeAuthorsFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ5 É(H2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ) É(22ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É((2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ Å(¡
eorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeOneInsitutionNameFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá á(M"
isFinalfalse"„
declarationStringÕ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeOneInsitutionNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*=getAsFirstLastNamesLatexFreeUnicodeOneInsitutionNameFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ7 â(J2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ+ â(42ö
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ â(*2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá á(¬
eorg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç ç(M"
isFinalfalse"„
declarationStringÕ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*=getAsFirstLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè8 è(K2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè, è(52õ
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè è(+2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç ç(ø
`org.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeUnicodeMixedAuthorsFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì ì(H"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeUnicodeMixedAuthorsFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*8getAsFirstLastNamesLatexFreeUnicodeMixedAuthorsFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaïD ï(W2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï8 ï(A2ß
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï ï(72Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì ì(Ÿ
horg.jabref.model.entry.AuthorListTest.getAsFirstLastNamesLatexFreeOneInstitutionWithParanthesisAtStart()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô(P"
isFinalfalse"Ê
declarationString–<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsFirstLastNamesLatexFreeOneInstitutionWithParanthesisAtStart</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*@getAsFirstLastNamesLatexFreeOneInstitutionWithParanthesisAtStart2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõF õ(Y2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ: õ(C2©
[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(92Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô(≈
?org.jabref.model.entry.AuthorListTest.fixAuthorFirstNameFirst()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü ü('"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fixAuthorFirstNameFirst</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*fixAuthorFirstNameFirst2ô
Korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java†. †(E2ô
Korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java£ £((2ô
Korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶ ¶((2ô
Korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java© ©((2ô
Korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≠ ≠((2ô
Korg.jabref.model.entry.AuthorList.fixAuthorFirstNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ Æ((2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü ü(∞
Korg.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasNoComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≤ ≤(3"
isFinalfalse"…
declarationString≥<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fixAuthorLastNameFirstCommasNoComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*#fixAuthorLastNameFirstCommasNoComma2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥$ ¥(@2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaµ$ µ(@2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑/ ∑(K2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∏- ∏(I2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫ ∫(:2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº º(:2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√ √(72∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≈ ≈(72∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java» »(-2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java   (-2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ Õ(72©
[org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasNoComma()?a@314.15:314.16CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿ ¿(2©
[org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasNoComma()?b@316.15:316.16CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿ ¿(2∞
[org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasNoComma()?a@314.15:314.16DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫ ∫(2∞
[org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasNoComma()?b@316.15:316.16DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº º(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java≤ ≤(Û
[org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasNoComma()?a@314.15:314.16VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫ ∫("
typeString"
isFinalfalse"ã
declarationStringı<mark class="modifier"> </mark>String <mark class="class-field">a</mark> = AuthorList.fixAuthorLastNameFirstCommas("John von Neumann and John Smith and Black Brown, Peter"<mark class="modifier">,</mark> true, <mark class="modifier">false</mark>)*a2^
java.lang.StringTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫ ∫(2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫ ∫(:Û
[org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasNoComma()?b@316.15:316.16VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº º("
typeString"
isFinalfalse"ã
declarationStringı<mark class="modifier"> </mark>String <mark class="class-field">b</mark> = AuthorList.fixAuthorLastNameFirstCommas("John von Neumann and John Smith and Black Brown, Peter"<mark class="modifier">,</mark> true, <mark class="modifier">false</mark>)*b2^
java.lang.StringTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº º(2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº º(:Ã
Oorg.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java— —(7"
isFinalfalse"Õ
declarationString∑<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fixAuthorLastNameFirstCommasOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*'fixAuthorLastNameFirstCommasOxfordComma2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java”$ ”(@2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‘$ ‘(@2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java÷/ ÷(K2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÿ- ÿ(I2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €(:2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java› ›(:2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‰ ‰(-2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂA Â(]2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È(-2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ Ï(-2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÔ6 Ô(R2≠
_org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasOxfordComma()?a@347.15:347.16CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡ ‡(2≠
_org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasOxfordComma()?b@349.15:349.16CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡ ‡(2¥
_org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasOxfordComma()?a@347.15:347.16DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €(2¥
_org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasOxfordComma()?b@349.15:349.16DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java› ›(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java— —(ÿ
_org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasOxfordComma()?a@347.15:347.16VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €("
typeString"
isFinalfalse"Ï
declarationString÷<mark class="modifier"> </mark>String <mark class="class-field">a</mark> = AuthorList.fixAuthorLastNameFirstCommas("John von Neumann and John Smith and Black Brown, Peter"<mark class="modifier">,</mark> true, true)*a2^
java.lang.StringTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €(2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €(:ÿ
_org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirstCommasOxfordComma()?b@349.15:349.16VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.java› ›("
typeString"
isFinalfalse"Ï
declarationString÷<mark class="modifier"> </mark>String <mark class="class-field">b</mark> = AuthorList.fixAuthorLastNameFirstCommas("John von Neumann and John Smith and Black Brown, Peter"<mark class="modifier">,</mark> true, true)*b2^
java.lang.StringTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java› ›(2∞
borg.jabref.model.entry.AuthorList.fixAuthorLastNameFirstCommas(java.lang.String, boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java› ›(:∂
forg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputAbbr()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ Ù(N"
isFinalfalse"‰
declarationStringŒ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputAbbr</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*>getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputAbbr2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı2 ı(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı& ı(/2å
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı ı(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ Ù(º
eorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbr()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˘ ˘(M"
isFinalfalse"„
declarationStringÕ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbr</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*=getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbr2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚2 ˚(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚& ˚(/2ï
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚ ˚(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java˘ ˘(¿
forg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbr()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˇ ˇ(N"
isFinalfalse"‰
declarationStringŒ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbr</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*>getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbr2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ3 Å(F2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ' Å(02ñ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ Å(&2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˇ ˇ(º
dorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbr()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÖ Ö(L"
isFinalfalse"‚
declarationStringÃ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbr</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*<getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbr2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá5 á(H2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá) á(22ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá á((2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÖ Ö(Õ
iorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbr()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaã ã(Q"
isFinalfalse"Á
declarationString—<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbr</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*AgetAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbr2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç7 ç(J2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç+ ç(42ö
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç ç(*2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaã ã(Œ
iorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbr()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë ë(Q"
isFinalfalse"Á
declarationString—<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbr</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*AgetAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbr2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì8 ì(K2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì, ì(52õ
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì ì(+2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë ë(À
dorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbr()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó ó(L"
isFinalfalse"‚
declarationStringÃ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbr</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*<getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbr2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaôD ô(W2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô8 ô(A2ß
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô(72Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó ó(Â
lorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbr()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù ù(T"
isFinalfalse"Í
declarationString‘<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbr</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*DgetAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbr2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaüF ü(Y2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü: ü(C2©
[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü ü(92Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù ù(™
borg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInput()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java£ £(J"
isFinalfalse"‡
declarationString <mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInput</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*:getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInput2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java§2 §(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java§& §(/2å
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java§ §(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java£ £(∞
aorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java® ®(I"
isFinalfalse"ﬂ
declarationString…<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*9getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java™2 ™(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java™& ™(/2ï
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java™ ™(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java® ®(¥
borg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ Æ(J"
isFinalfalse"‡
declarationString <mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*:getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞3 ∞(F2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞' ∞(02ñ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞ ∞(&2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ Æ(∞
`org.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥ ¥(H"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*8getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂5 ∂(H2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂) ∂(22ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂ ∂((2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥ ¥(¡
eorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫ ∫(M"
isFinalfalse"„
declarationStringÕ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*=getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº7 º(J2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº+ º(42ö
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº º(*2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫ ∫(¬
eorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿ ¿(M"
isFinalfalse"„
declarationStringÕ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*=getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¬8 ¬(K2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¬, ¬(52õ
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¬ ¬(+2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿ ¿(ø
`org.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∆ ∆(H"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*8getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatex2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java»D »(W2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java»8 »(A2ß
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java» »(72Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∆ ∆(Ÿ
horg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStart()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã(P"
isFinalfalse"Ê
declarationString–<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStart</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*@getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStart2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŒF Œ(Y2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŒ: Œ(C2©
[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŒ Œ(92Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã(◊
qorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputAbbrOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java“ “(Y"
isFinalfalse"Ô
declarationStringŸ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputAbbrOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*IgetAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputAbbrOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java”2 ”(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java”& ”(/2å
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java“ “(›
porg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbrOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java◊ ◊(X"
isFinalfalse"Ó
declarationStringÿ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbrOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*HgetAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexAbbrOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ2 Ÿ(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ& Ÿ(/2ï
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java◊ ◊(·
qorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbrOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java› ›(Y"
isFinalfalse"Ô
declarationStringŸ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbrOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*IgetAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexAbbrOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ3 ﬂ(F2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ' ﬂ(02ñ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ ﬂ(&2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java› ›(›
oorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbrOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java„ „(W"
isFinalfalse"Ì
declarationString◊<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbrOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*GgetAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexAbbrOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ5 Â(H2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ) Â(22ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ Â((2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java„ „(Ó
torg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbrOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È(\"
isFinalfalse"Ú
declarationString‹<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbrOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*LgetAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexAbbrOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ7 Î(J2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ+ Î(42ö
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ Î(*2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È(Ô
torg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbrOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÔ Ô(\"
isFinalfalse"Ú
declarationString‹<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbrOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*LgetAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexAbbrOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ8 Ò(K2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ, Ò(52õ
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò(+2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÔ Ô(Ï
oorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbrOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı ı(W"
isFinalfalse"Ì
declarationString◊<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbrOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*GgetAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexAbbrOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜D ˜(W2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜8 ˜(A2ß
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜(72Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı ı(Ü	
worg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbrOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚ ˚(_"
isFinalfalse"ı
declarationStringﬂ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbrOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*OgetAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartAbbrOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝F ˝(Y2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝: ˝(C2©
[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝(92Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚ ˚(À
morg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ Å(U"
isFinalfalse"Î
declarationString’<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*EgetAsLastFirstNamesLatexFreeEmptyAuthorStringForEmptyInputOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ2 Ç(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ& Ç(/2å
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ Å(—
lorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÜ Ü(T"
isFinalfalse"Í
declarationString‘<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*DgetAsLastFirstNamesLatexFreeUnicodeOneAuthorNameFromLatexOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà2 à(E2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà& à(/2ï
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà à(%2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÜ Ü(’
morg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å(U"
isFinalfalse"Î
declarationString’<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*EgetAsLastFirstNamesLatexFreeUnicodeTwoAuthorNamesFromLatexOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaé3 é(F2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaé' é(02ñ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaé é(&2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å(—
korg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaí í(S"
isFinalfalse"È
declarationString”<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*CgetAsLastFirstNamesLatexFreeThreeUnicodeAuthorsFromLatexOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaî5 î(H2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaî) î(22ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaî î((2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaí í(‚
porg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò ò(X"
isFinalfalse"Ó
declarationStringÿ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*HgetAsLastFirstNamesLatexFreeUnicodeOneInsitutionNameFromLatexOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaö7 ö(J2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaö+ ö(42ö
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaö ö(*2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò ò(„
porg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû û(X"
isFinalfalse"Ó
declarationStringÿ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*HgetAsLastFirstNamesLatexFreeUnicodeTwoInsitutionNameFromLatexOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java†8 †(K2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java†, †(52õ
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java† †(+2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû û(‡
korg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java§ §(S"
isFinalfalse"È
declarationString”<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*CgetAsLastFirstNamesLatexFreeUnicodeMixedAuthorsFromLatexOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶D ¶(W2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶8 ¶(A2ß
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶ ¶(72Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java§ §(˙
sorg.jabref.model.entry.AuthorListTest.getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java™ ™(["
isFinalfalse"Ò
declarationString€<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*KgetAsLastFirstNamesLatexFreeOneInstitutionWithParanthesisAtStartOxfordComma2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¨F ¨(Y2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¨: ¨(C2©
[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¨ ¨(92Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java™ ™(Ï
>org.jabref.model.entry.AuthorListTest.fixAuthorLastNameFirst()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞ ∞(&"
isFinalfalse"º
declarationString¶<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fixAuthorLastNameFirst</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*fixAuthorLastNameFirst2ò
Jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≥/ ≥(E2ò
Jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂ ∂('2ò
Jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaπ π('2ò
Jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº º('2ò
Jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø ø('2ò
Jorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿ ¿('2°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√/ √(E2°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≈F ≈(\2°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java… …('2°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ7 Ã(M2°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ  œ(62°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java— —('2°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‘- ‘(C2°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java÷A ÷(W2°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄ ⁄(12°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java›4 ›(J2°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡  ‡(62°
Sorg.jabref.model.entry.AuthorList.fixAuthorLastNameFirst(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‚ ‚('2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞ ∞(ï
Corg.jabref.model.entry.AuthorListTest.fixAuthorLastNameOnlyCommas()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ Ê(+"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fixAuthorLastNameOnlyCommas</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*fixAuthorLastNameOnlyCommas2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaË$ Ë(?2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ) È(D2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÍ) Í(D2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ  Ï(;2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÓ Ó(,2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò(,2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ$ Ù(?2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı) ı(D2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˆ) ˆ(D2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯  ¯(;2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˙ ˙(,2¶
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝(,2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ Ê(ì
\org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeOneAuthorNameFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç(D"
isFinalfalse"⁄
declarationStringƒ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastNamesLatexFreeUnicodeOneAuthorNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*4getAsLastNamesLatexFreeUnicodeOneAuthorNameFromLatex2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉG É(U2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ; É(D2ï
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ% É(:2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç(ó
]org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá á(E"
isFinalfalse"€
declarationString≈<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*5getAsLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatex2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaàQ à(_2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaàE à(N2ñ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà. à(D2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaá á(«
morg.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexUsingOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å(U"
isFinalfalse"Î
declarationString’<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexUsingOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*EgetAsLastNamesLatexFreeUnicodeTwoAuthorNamesFromLatexUsingOxfordComma2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaçQ ç(_2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaçE ç(N2ñ
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç. ç(D2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å(ì
[org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeThreeAuthorsFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë ë(C"
isFinalfalse"Ÿ
declarationString√<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastNamesLatexFreeUnicodeThreeAuthorsFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*3getAsLastNamesLatexFreeUnicodeThreeAuthorsFromLatex2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaíZ í(h2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaíN í(W2ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaí5 í(M2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë ë(√
korg.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeThreeAuthorsFromLatexUsingOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ ñ(S"
isFinalfalse"È
declarationString”<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastNamesLatexFreeUnicodeThreeAuthorsFromLatexUsingOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*CgetAsLastNamesLatexFreeUnicodeThreeAuthorsFromLatexUsingOxfordComma2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó[ ó(i2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaóO ó(X2ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó6 ó(N2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ ñ(§
`org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeOneInsitutionNameFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(H"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastNamesLatexFreeUnicodeOneInsitutionNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*8getAsLastNamesLatexFreeUnicodeOneInsitutionNameFromLatex2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaúV ú(d2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaúJ ú(S2ö
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaú/ ú(I2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(•
`org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java† †(H"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*8getAsLastNamesLatexFreeUnicodeTwoInsitutionNameFromLatex2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢8 ¢(F2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢, ¢(52õ
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢ ¢(+2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java† †(¢
[org.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeUnicodeMixedAuthorsFromLatex()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶ ¶(C"
isFinalfalse"Ÿ
declarationString√<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastNamesLatexFreeUnicodeMixedAuthorsFromLatex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*3getAsLastNamesLatexFreeUnicodeMixedAuthorsFromLatex2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java®D ®(R2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java®8 ®(A2ß
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java® ®(72Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶ ¶(º
corg.jabref.model.entry.AuthorListTest.getAsLastNamesLatexFreeOneInstitutionWithParanthesisAtStart()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¨ ¨(K"
isFinalfalse"·
declarationStringÀ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastNamesLatexFreeOneInstitutionWithParanthesisAtStart</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*;getAsLastNamesLatexFreeOneInstitutionWithParanthesisAtStart2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆF Æ(T2{
-org.jabref.model.entry.AuthorList.latexFree()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ: Æ(C2©
[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ Æ(92Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¨ ¨(©	
Corg.jabref.model.entry.AuthorListTest.fixAuthorForAlphabetization()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≤ ≤(+"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fixAuthorForAlphabetization</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*fixAuthorForAlphabetization2ù
Oorg.jabref.model.entry.AuthorList.fixAuthorForAlphabetization(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≥- ≥(H2ù
Oorg.jabref.model.entry.AuthorList.fixAuthorForAlphabetization(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥/ ¥(J2ù
Oorg.jabref.model.entry.AuthorList.fixAuthorForAlphabetization(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaµ/ µ(J2ù
Oorg.jabref.model.entry.AuthorList.fixAuthorForAlphabetization(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaπ π(42Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java≤ ≤(„
,org.jabref.model.entry.AuthorListTest.size()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ Ω("
isFinalfalse"™
declarationStringî<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">size</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*size2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaæ' æ(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø' ø(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿' ¿(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡' ¡(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¬' ¬(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√' √(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaƒ' ƒ(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≈' ≈(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∆' ∆(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java«' «(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java…' …(+2ä
<org.jabref.model.entry.AuthorListTest.size(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ/ Õ(32p
"java.lang.StringBuilder.toString()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ6 Õ(>2~
0java.lang.StringBuilder.append(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŒ Œ(2Ö
7java.lang.StringBuilder.StringBuilder(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÀ À(+2ä
<org.jabref.model.entry.AuthorListTest.size()?i@716.17:716.18CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã(2ä
<org.jabref.model.entry.AuthorListTest.size()?i@716.17:716.18CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ  Ã(!2ä
<org.jabref.model.entry.AuthorListTest.size()?i@716.17:716.18CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ Õ(2ä
<org.jabref.model.entry.AuthorListTest.size()?s@715.22:715.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ4 Õ(52ä
<org.jabref.model.entry.AuthorListTest.size()?s@715.22:715.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŒ Œ(2ë
<org.jabref.model.entry.AuthorListTest.size()?s@715.22:715.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÀ À(2ë
<org.jabref.model.entry.AuthorListTest.size()?i@716.17:716.18DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ Ω(∏
<org.jabref.model.entry.AuthorListTest.size()?s@715.22:715.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÀ À("
typeStringBuilder"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>StringBuilder <mark class="class-field">s</mark> = new StringBuilder("John von Neumann")*s2e
java.lang.StringBuilderTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÀ À(2Ö
7java.lang.StringBuilder.StringBuilder(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÀ À(+Å
<org.jabref.model.entry.AuthorListTest.size()?i@716.17:716.18VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2Q
intTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã(˜
/org.jabref.model.entry.AuthorListTest.isEmpty()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isEmpty2y
+org.jabref.model.entry.AuthorList.isEmpty()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‘( ‘(/2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‘ ‘(#2y
+org.jabref.model.entry.AuthorList.isEmpty()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java’, ’(32á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java’ ’($2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”(å
6org.jabref.model.entry.AuthorListTest.getEmptyAuthor()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getEmptyAuthor</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getEmptyAuthor2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄A ⁄(J2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄7 ⁄(<2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ(÷U
1org.jabref.model.entry.AuthorListTest.getAuthor()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ ﬁ("
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAuthor</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*	getAuthor2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂQ ﬂ(Z2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ# ﬂ((2f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡ ‡( 2v
(org.jabref.model.entry.Author.getFirst()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡1 ‡(92f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java· ·( 2z
,org.jabref.model.entry.Author.getFirstAbbr()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java·/ ·(;2Å
3org.jabref.model.entry.Author.getFirstLast(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‚* ‚(62Å
3org.jabref.model.entry.Author.getFirstLast(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java„( „(42h
java.util.Optional.empty()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‰ ‰(#2s
%org.jabref.model.entry.Author.getJr()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‰. ‰(32f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ Â( 2u
'org.jabref.model.entry.Author.getLast()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ2 Â(92Å
3org.jabref.model.entry.Author.getLastFirst(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ+ Ê(72Å
3org.jabref.model.entry.Author.getLastFirst(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ) Á(52y
+org.jabref.model.entry.Author.getLastOnly()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaË% Ë(02á
9org.jabref.model.entry.Author.getNameForAlphabetization()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ) È(B2h
java.util.Optional.empty()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÍ Í(#2t
&org.jabref.model.entry.Author.getVon()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÍ. Í(42~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ7 Ï(@2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ Ï(!2f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÌ Ì( 2v
(org.jabref.model.entry.Author.getFirst()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÌ8 Ì(@2f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÓ Ó( 2z
,org.jabref.model.entry.Author.getFirstAbbr()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÓ2 Ó(>2Å
3org.jabref.model.entry.Author.getFirstLast(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÔ1 Ô(=2Å
3org.jabref.model.entry.Author.getFirstLast(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java+ (72h
java.util.Optional.empty()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò(#2s
%org.jabref.model.entry.Author.getJr()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ. Ò(32h
java.util.Optional.empty()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÚ Ú(#2t
&org.jabref.model.entry.Author.getVon()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÚ. Ú(42~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙJ Ù(S2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ Ù(!2f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı ı( 2v
(org.jabref.model.entry.Author.getFirst()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı1 ı(92f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˆ ˆ( 2z
,org.jabref.model.entry.Author.getFirstAbbr()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˆ/ ˆ(;2Å
3org.jabref.model.entry.Author.getFirstLast(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜4 ˜(@2Å
3org.jabref.model.entry.Author.getFirstLast(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯2 ¯(>2f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˘ ˘( 2s
%org.jabref.model.entry.Author.getJr()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˘/ ˘(42f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˙ ˙( 2u
'org.jabref.model.entry.Author.getLast()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˙4 ˙(;2Å
3org.jabref.model.entry.Author.getLastFirst(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚5 ˚(A2Å
3org.jabref.model.entry.Author.getLastFirst(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¸3 ¸(?2y
+org.jabref.model.entry.Author.getLastOnly()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝+ ˝(62á
9org.jabref.model.entry.Author.getNameForAlphabetization()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˛/ ˛(H2f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˇ ˇ( 2t
&org.jabref.model.entry.Author.getVon()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˇ0 ˇ(62î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡* ‡(02î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java·( ·(.2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‚# ‚()2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java„! „('2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‰' ‰(-2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ+ Â(12î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ$ Ê(*2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ" Á((2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaË Ë($2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ" È((2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÍ' Í(-2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ Ï(2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÌ1 Ì(72î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÓ+ Ó(12î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÔ* Ô(02î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java$ (*2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ' Ò(-2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÚ' Ú(-2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ Ù(2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı* ı(02î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˆ( ˆ(.2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜- ˜(32î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯+ ¯(12î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˘( ˘(.2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˙- ˙(32î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚. ˚(42î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¸, ¸(22î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝$ ˝(*2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˛( ˛(.2î
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˇ) ˇ(/2õ
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ ﬂ(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ ﬁ(Á
Forg.jabref.model.entry.AuthorListTest.getAuthor()?author@735.15:735.21VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ ﬂ("
typeAuthor"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>Author <mark class="class-field">author</mark> = AuthorList.parse("John Smith and von Neumann, Jr, John").getAuthor(0)*author2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ ﬂ(2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂQ ﬂ(Z2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ# ﬂ((÷
5org.jabref.model.entry.AuthorListTest.companyAuthor()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">companyAuthor</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*companyAuthor2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ@ Ñ(I2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ# Ñ((2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÖ Ö($2ö
Lorg.jabref.model.entry.AuthorListTest.companyAuthor()?expected@773.15:773.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÜ Ü(2ò
Jorg.jabref.model.entry.AuthorListTest.companyAuthor()?author@772.15:772.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÜ Ü(%2ü
Jorg.jabref.model.entry.AuthorListTest.companyAuthor()?author@772.15:772.21DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ Ñ(2°
Lorg.jabref.model.entry.AuthorListTest.companyAuthor()?expected@773.15:773.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÖ Ö(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É(⁄
Jorg.jabref.model.entry.AuthorListTest.companyAuthor()?author@772.15:772.21VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ Ñ("
typeAuthor"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Author <mark class="class-field">author</mark> = AuthorList.parse("{JabRef Developers}").getAuthor(0)*author2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ Ñ(2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ@ Ñ(I2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ# Ñ((ò
Lorg.jabref.model.entry.AuthorListTest.companyAuthor()?expected@773.15:773.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÖ Ö("
typeAuthor"
isFinalfalse"è
declarationString˘<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author(<mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "JabRef Developers"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÖ Ö(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÖ Ö($Õ
>org.jabref.model.entry.AuthorListTest.companyAuthorAndPerson()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaä ä(&"
isFinalfalse"º
declarationString¶<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">companyAuthorAndPerson</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*companyAuthorAndPerson2k
java.util.Arrays.asList(T...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç ç("2|
.org.jabref.model.entry.AuthorList.getAuthors()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaçm ç(w2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç@ ç(E2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaã ã(#2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å("2¢
Torg.jabref.model.entry.AuthorListTest.companyAuthorAndPerson()?company@779.15:779.22CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç# ç(*2°
Sorg.jabref.model.entry.AuthorListTest.companyAuthorAndPerson()?person@780.15:780.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç, ç(22©
Torg.jabref.model.entry.AuthorListTest.companyAuthorAndPerson()?company@779.15:779.22DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaã ã(2®
Sorg.jabref.model.entry.AuthorListTest.companyAuthorAndPerson()?person@780.15:780.21DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaä ä(û
Torg.jabref.model.entry.AuthorListTest.companyAuthorAndPerson()?company@779.15:779.22VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaã ã("
typeAuthor"
isFinalfalse"é
declarationString¯<mark class="modifier"> </mark>Author <mark class="class-field">company</mark> = new Author(<mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "JabRef Developers"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*company2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaã ã(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaã ã(#÷
Sorg.jabref.model.entry.AuthorListTest.companyAuthorAndPerson()?person@780.15:780.21VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å("
typeAuthor"
isFinalfalse"»
declarationString≤<mark class="modifier"> </mark>Author <mark class="class-field">person</mark> = new Author("Stefan"<mark class="modifier">,</mark> "S."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "Kolb"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*person2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaå å("Õ
Forg.jabref.model.entry.AuthorListTest.companyAuthorWithLowerCaseWord()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë ë(."
isFinalfalse"ƒ
declarationStringÆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">companyAuthorWithLowerCaseWord</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*companyAuthorWithLowerCaseWord2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaíH í(Q2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaí# í((2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì ì($2´
]org.jabref.model.entry.AuthorListTest.companyAuthorWithLowerCaseWord()?expected@787.15:787.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaî î(2©
[org.jabref.model.entry.AuthorListTest.companyAuthorWithLowerCaseWord()?author@786.15:786.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaî î(%2∞
[org.jabref.model.entry.AuthorListTest.companyAuthorWithLowerCaseWord()?author@786.15:786.21DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaí í(2≤
]org.jabref.model.entry.AuthorListTest.companyAuthorWithLowerCaseWord()?expected@787.15:787.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì ì(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë ë(Û
[org.jabref.model.entry.AuthorListTest.companyAuthorWithLowerCaseWord()?author@786.15:786.21VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaí í("
typeAuthor"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>Author <mark class="class-field">author</mark> = AuthorList.parse("{JabRef Developers on Fire}").getAuthor(0)*author2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaí í(2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaíH í(Q2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaí# í((±
]org.jabref.model.entry.AuthorListTest.companyAuthorWithLowerCaseWord()?expected@787.15:787.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì ì("
typeAuthor"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author(<mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "JabRef Developers on Fire"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì ì(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì ì($é
=org.jabref.model.entry.AuthorListTest.abbreviationWithRelax()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò ò(%"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">abbreviationWithRelax</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*abbreviationWithRelax2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaôH ô(Q2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô# ô((2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaö ö($2¢
Torg.jabref.model.entry.AuthorListTest.abbreviationWithRelax()?expected@794.15:794.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(2†
Rorg.jabref.model.entry.AuthorListTest.abbreviationWithRelax()?author@793.15:793.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(%2ß
Rorg.jabref.model.entry.AuthorListTest.abbreviationWithRelax()?author@793.15:793.21DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô(2©
Torg.jabref.model.entry.AuthorListTest.abbreviationWithRelax()?expected@794.15:794.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaö ö(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò ò(Í
Rorg.jabref.model.entry.AuthorListTest.abbreviationWithRelax()?author@793.15:793.21VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô("
typeAuthor"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>Author <mark class="class-field">author</mark> = AuthorList.parse("{\\relax Ch}ristoph Cholera").getAuthor(0)*author2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô(2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaôH ô(Q2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô# ô((ˆ
Torg.jabref.model.entry.AuthorListTest.abbreviationWithRelax()?expected@794.15:794.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaö ö("
typeAuthor"
isFinalfalse"Â
declarationStringœ<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author("{\\relax Ch}ristoph"<mark class="modifier">,</mark> "{\\relax Ch}."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "Cholera"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaö ö(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaö ö($í
8org.jabref.model.entry.AuthorListTest.getAuthorsNatbib()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü ü( "
isFinalfalse"∂
declarationString†<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAuthorsNatbib</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getAuthorsNatbib2}
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java†. †(92á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java†$ †()2}
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java°= °(H2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java°) °(.2}
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java£5 £(@2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢9 ¢(>2}
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java•J •(U2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java§6 §(;2}
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java´U ´(`2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java™4 ™(92á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaØ Ø(2}
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞ ∞(#2}
/org.jabref.model.entry.AuthorList.getAsNatbib()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞* ∞(52ó
Iorg.jabref.model.entry.AuthorListTest.getAuthorsNatbib()?al@814.19:814.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞ ∞(2ó
Iorg.jabref.model.entry.AuthorListTest.getAuthorsNatbib()?al@814.19:814.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞' ∞()2û
Iorg.jabref.model.entry.AuthorListTest.getAuthorsNatbib()?al@814.19:814.21DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ Æ(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü ü(Û
Iorg.jabref.model.entry.AuthorListTest.getAuthorsNatbib()?al@814.19:814.21VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ Æ("
type
AuthorList"
isFinalfalse"∞
declarationStringö<mark class="modifier"> </mark>AuthorList <mark class="class-field">al</mark> = AuthorList.parse("John von Neumann and John Smith and Black Brown, Peter")*al2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆ Æ(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaØ Ø(¬
:org.jabref.model.entry.AuthorListTest.getAuthorsLastOnly()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥ ¥(""
isFinalfalse"∏
declarationString¢<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAuthorsLastOnly</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getAuthorsLastOnly2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂. ∂(<2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂$ ∂()2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑= ∑(K2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑) ∑(.2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∏B ∏(P2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∏) ∏(.2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaºJ º(X2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaªF ª(K2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaæ. æ(<2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaæ$ æ()2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø= ø(K2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø) ø(.2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿B ¿(P2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿) ¿(.2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaƒJ ƒ(X2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√G √(L2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java«D «(R2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java« «( 2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥ ¥(”'
Borg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÀ À(*"
isFinalfalse"¿
declarationString™<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAuthorsLastFirstNoComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getAuthorsLastFirstNoComma2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ œ(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java– –(/2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java— —(/2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‘' ‘(:2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java’% ’(82á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java◊ ◊(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÿ> ÿ(Q2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ9 Ÿ(L2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ ﬂ(&2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡J ‡(]2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‚ ‚(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java„. „(A2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ œ(
2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java– –(2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java— —(2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”(
2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‘$ ‘(&2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java’" ’($2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java◊ ◊(
2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÿ; ÿ(=2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ6 Ÿ(82°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €(
2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ ﬂ(2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‡G ‡(I2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‚ ‚(
2°
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java„+ „(-2®
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ Õ(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÀ À(§
Sorg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstNoComma()?al@845.19:845.21VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ Õ("
type
AuthorList"
isFinalfalse"b
declarationStringM<mark class="modifier"> </mark>AuthorList <mark class="class-field">al</mark>*al2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ Õ(õ(
Forg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ Á(."
isFinalfalse"ƒ
declarationStringÆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAuthorsLastFirstOxfordComma</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getAuthorsLastFirstOxfordComma2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ Î(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ Ï(/2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÌ Ì(/2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÔ Ô(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java' (:2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ% Ò(82á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÛ Û(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ> Ù(Q2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı9 ı(L2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˘ ˘($2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˙K ˙(^2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝(2ï
Gorg.jabref.model.entry.AuthorList.getAsLastFirstNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˛. ˛(A2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ Î(
2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ Ï(2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÌ Ì(2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÔ Ô(
2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java$ (&2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ" Ò($2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÛ Û(
2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ; Ù(=2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı6 ı(82•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜(
2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯O ¯(Q2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˙H ˙(J2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝(
2•
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˛+ ˛(-2¨
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ Á(®
Worg.jabref.model.entry.AuthorListTest.getAuthorsLastFirstOxfordComma()?al@873.19:873.21VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È("
type
AuthorList"
isFinalfalse"b
declarationStringM<mark class="modifier"> </mark>AuthorList <mark class="class-field">al</mark>*al2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È(ù
?org.jabref.model.entry.AuthorListTest.getAuthorsLastFirstAnds()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç('"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAuthorsLastFirstAnds</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getAuthorsLastFirstAnds2ì
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉC É(]2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ/ É(42ì
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÜ5 Ü(O2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÖF Ö(K2ì
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ â(+2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà à(2ì
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaã7 ã(Q2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaä7 ä(<2ì
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaçA ç([2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaç- ç(22ì
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaê5 ê(O2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaèA è(F2ì
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaíJ í(d2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaëU ë(Z2ì
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaî4 î(N2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaì4 ì(92Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç(πA
<org.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò ò($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAuthorsFirstFirst</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getAuthorsFirstFirst2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaú ú(/2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù ù(/2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû û(/2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü ü(/2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java° °(2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢& ¢(92ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java£$ £(72ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java§& §(92ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java•$ •(72á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaß ß(2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java®< ®(O2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java©7 ©(J2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java™< ™(O2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java´7 ´(J2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≠ ≠(2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆN Æ(a2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞G ∞(Z2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≥ ≥($2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥H ¥([2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑ ∑(2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∏2 ∏(E2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaπ2 π(E2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫- ∫(@2ï
Gorg.jabref.model.entry.AuthorList.getAsFirstLastNames(boolean, boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª- ª(@2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(
2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaú ú(2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù ù(2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû û(2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü ü(2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java° °(
2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢# ¢(%2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java£! £(#2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java§# §(%2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java•! •(#2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaß ß(
2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java®9 ®(;2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java©4 ©(62õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java™9 ™(;2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java´4 ´(62õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≠ ≠(
2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÆK Æ(M2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞D ∞(F2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≤L ≤(N2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥E ¥(G2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑ ∑(
2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∏/ ∏(12õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaπ/ π(12õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫* ∫(,2õ
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª* ª(,2¢
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò ò(û
Morg.jabref.model.entry.AuthorListTest.getAuthorsFirstFirst()?al@921.19:921.21VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô("
type
AuthorList"
isFinalfalse"b
declarationStringM<mark class="modifier"> </mark>AuthorList <mark class="class-field">al</mark>*al2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaô ô(Ñ
@org.jabref.model.entry.AuthorListTest.getAuthorsFirstFirstAnds()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø ø(("
isFinalfalse"æ
declarationString®<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAuthorsFirstFirstAnds</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getAuthorsFirstFirstAnds2å
>org.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡. ¡(H2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿. ¿(32å
>org.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√5 √(O2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¬D ¬(I2å
>org.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∆ ∆(+2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≈ ≈(2å
>org.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java»3 »(M2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java» »(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø ø(¸
Dorg.jabref.model.entry.AuthorListTest.getAuthorsForAlphabetization()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAuthorsForAlphabetization</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getAuthorsForAlphabetization2á
9org.jabref.model.entry.AuthorList.getForAlphabetization()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŒ- Œ(B2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÕ- Õ(22á
9org.jabref.model.entry.AuthorList.getForAlphabetization()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java–/ –(D2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ/ œ(42á
9org.jabref.model.entry.AuthorList.getForAlphabetization()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java“/ “(D2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java—/ —(42á
9org.jabref.model.entry.AuthorList.getForAlphabetization()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java’ ’(&2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‘ ‘(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÃ Ã(ï
?org.jabref.model.entry.AuthorListTest.removeStartAndEndBraces()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ('"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeStartAndEndBraces</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*removeStartAndEndBraces2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄@ ⁄(N2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄- ⁄(22á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java€V €(d2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java€7 €(<2á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‹L ‹(Z2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‹+ ‹(02á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java›H ›(V2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java›+ ›(02á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁJ ﬁ(X2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ, ﬁ(12á
9org.jabref.model.entry.AuthorList.getAsLastNames(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂT ﬂ(b2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬂ6 ﬂ(;2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŸ Ÿ(Ö
=org.jabref.model.entry.AuthorListTest.createCorrectInitials()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java„ „(%"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">createCorrectInitials</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*createCorrectInitials2f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‰ ‰( 2z
,org.jabref.model.entry.Author.getFirstAbbr()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂL Â(X2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ? Â(H2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ Â( 2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java„ „(Í
Jorg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundFirstName()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È(2"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseNameWithBracesAroundFirstName</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*"parseNameWithBracesAroundFirstName2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ  Ï("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ9 Ï(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ Î($2±
corg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundFirstName()?expected@1003.15:1003.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÏ# Ï(+2∏
corg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundFirstName()?expected@1003.15:1003.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ Î(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È(Ù
corg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundFirstName()?expected@1003.15:1003.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ Î("
typeAuthor"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author("Tse-tung"<mark class="modifier">,</mark> "{Tse-tung}."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "Mao"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ Î(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÎ Î($Â
Iorg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundLastName()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java (1"
isFinalfalse"î
declarationString˛<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseNameWithBracesAroundLastName</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!parseNameWithBracesAroundLastName2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÚ  Ú("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÚ9 Ú(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò($2∞
borg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundLastName()?expected@1009.15:1009.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÚ# Ú(+2∑
borg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundLastName()?expected@1009.15:1009.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java (Ò
borg.jabref.model.entry.AuthorListTest.parseNameWithBracesAroundLastName()?expected@1009.15:1009.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò("
typeAuthor"
isFinalfalse"“
declarationStringº<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author("Hans"<mark class="modifier">,</mark> "H."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "van den Bergen"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò($÷
Forg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInFirstName()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˆ ˆ(."
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseNameWithHyphenInFirstName</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*parseNameWithHyphenInFirstName2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯  ¯("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯9 ¯(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜($2≠
_org.jabref.model.entry.AuthorListTest.parseNameWithHyphenInFirstName()?expected@1015.15:1015.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯# ¯(+2¥
_org.jabref.model.entry.AuthorListTest.parseNameWithHyphenInFirstName()?expected@1015.15:1015.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˆ ˆ(Í
_org.jabref.model.entry.AuthorListTest.parseNameWithHyphenInFirstName()?expected@1015.15:1015.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜("
typeAuthor"
isFinalfalse"Œ
declarationString∏<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author("Tse-tung"<mark class="modifier">,</mark> "T.-t."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "Mao"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜($—
Eorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastName()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¸ ¸(-"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseNameWithHyphenInLastName</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*parseNameWithHyphenInLastName2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˛  ˛("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˛9 ˛(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝($2¨
^org.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastName()?expected@1021.15:1021.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˛# ˛(+2≥
^org.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastName()?expected@1021.15:1021.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¸ ¸(
^org.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastName()?expected@1021.15:1021.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝("
typeAuthor"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author("Firstname"<mark class="modifier">,</mark> "F."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "Bailey-Jones"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˝ ˝($ç
Qorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithInitials()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç(9"
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseNameWithHyphenInLastNameWithInitials</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*)parseNameWithHyphenInLastNameWithInitials2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ  Ñ("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ9 Ñ(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É($2∏
jorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithInitials()?expected@1027.15:1027.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ# Ñ(+2ø
jorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithInitials()?expected@1027.15:1027.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ Ç(˙
jorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithInitials()?expected@1027.15:1027.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É("
typeAuthor"
isFinalfalse"”
declarationStringΩ<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author("E. S."<mark class="modifier">,</mark> "E. S."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "El-{M}allah"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ É($à
Porg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithEscaped()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà à(8"
isFinalfalse"õ
declarationStringÖ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseNameWithHyphenInLastNameWithEscaped</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*(parseNameWithHyphenInLastNameWithEscaped2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaä  ä("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaä9 ä(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ â($2∑
iorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithEscaped()?expected@1033.15:1033.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaä# ä(+2æ
iorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithEscaped()?expected@1033.15:1033.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ â(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà à(˛
iorg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWithEscaped()?expected@1033.15:1033.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ â("
typeAuthor"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author("E. S."<mark class="modifier">,</mark> "E. S."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "{K}ent-{B}oswell"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ â(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ â($ø
[org.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWhenLastNameGivenFirst()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaé é(C"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseNameWithHyphenInLastNameWhenLastNameGivenFirst</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*3parseNameWithHyphenInLastNameWhenLastNameGivenFirst2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë  ë("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë9 ë(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaê ê($2¬
torg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWhenLastNameGivenFirst()?expected@1040.15:1040.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaë# ë(+2…
torg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWhenLastNameGivenFirst()?expected@1040.15:1040.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaê ê(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaé é(ä
torg.jabref.model.entry.AuthorListTest.parseNameWithHyphenInLastNameWhenLastNameGivenFirst()?expected@1040.15:1040.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaê ê("
typeAuthor"
isFinalfalse"Ÿ
declarationString√<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author(" øAbdallƒÅh"<mark class="modifier">,</mark> " ø."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "al-·π¢ƒÅli·∏•"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaê ê(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaê ê($ü
;org.jabref.model.entry.AuthorListTest.parseNameWithBraces()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï ï(#"
isFinalfalse"Ü
declarationString<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseNameWithBraces</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*parseNameWithBraces2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó  ó("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó9 ó(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ ñ($2¢
Torg.jabref.model.entry.AuthorListTest.parseNameWithBraces()?expected@1046.15:1046.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó# ó(+2©
Torg.jabref.model.entry.AuthorListTest.parseNameWithBraces()?expected@1046.15:1046.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ ñ(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï ï(ﬁ
Torg.jabref.model.entry.AuthorListTest.parseNameWithBraces()?expected@1046.15:1046.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ ñ("
typeAuthor"
isFinalfalse"Õ
declarationString∑<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author("H{e}lene"<mark class="modifier">,</mark> "H."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "Fiaux"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ ñ(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ ñ($¡	
borg.jabref.model.entry.AuthorListTest.parseFirstNameFromFirstAuthorMultipleAuthorsWithLatexNames()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(J"
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseFirstNameFromFirstAuthorMultipleAuthorsWithLatexNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*:parseFirstNameFromFirstAuthorMultipleAuthorsWithLatexNames2j
java.util.Optional.orElse(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû3 û(92v
(org.jabref.model.entry.Author.getFirst()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû( û(02~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû û($2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù ù( 2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaõ õ(ƒ	
corg.jabref.model.entry.AuthorListTest.parseFirstNameFromSecondAuthorMultipleAuthorsWithLatexNames()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢ ¢(K"
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseFirstNameFromSecondAuthorMultipleAuthorsWithLatexNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*;parseFirstNameFromSecondAuthorMultipleAuthorsWithLatexNames2j
java.util.Optional.orElse(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java•3 •(92v
(org.jabref.model.entry.Author.getFirst()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java•( •(02~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java• •($2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java§ §( 2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢ ¢(Ω	
aorg.jabref.model.entry.AuthorListTest.parseLastNameFromFirstAuthorMultipleAuthorsWithLatexNames()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java© ©(I"
isFinalfalse"¨
declarationStringñ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseLastNameFromFirstAuthorMultipleAuthorsWithLatexNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*9parseLastNameFromFirstAuthorMultipleAuthorsWithLatexNames2j
java.util.Optional.orElse(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¨2 ¨(82u
'org.jabref.model.entry.Author.getLast()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¨( ¨(/2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¨ ¨($2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java´ ´( 2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java© ©(¿	
borg.jabref.model.entry.AuthorListTest.parseLastNameFromSecondAuthorMultipleAuthorsWithLatexNames()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞ ∞(J"
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseLastNameFromSecondAuthorMultipleAuthorsWithLatexNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*:parseLastNameFromSecondAuthorMultipleAuthorsWithLatexNames2j
java.util.Optional.orElse(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≥2 ≥(82u
'org.jabref.model.entry.Author.getLast()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≥( ≥(/2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≥ ≥($2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≤ ≤( 2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞ ∞(˛
Lorg.jabref.model.entry.AuthorListTest.parseInstitutionAuthorWithLatexNames()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑ ∑(4"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseInstitutionAuthorWithLatexNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*$parseInstitutionAuthorWithLatexNames2j
java.util.Optional.orElse(T)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaπc π(i2u
'org.jabref.model.entry.Author.getLast()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaπY π(`2~
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaπL π(U2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaπ π( 2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∑ ∑(≤
[org.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ Ω(C"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseRetrieveCachedAuthorListAfterGarbageCollection</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*3parseRetrieveCachedAuthorListAfterGarbageCollection2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø' ø(,2c
java.lang.System.gc()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¿ ¿(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡& ¡(+2 
|org.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()?uniqueAuthorName@1086.21:1086.37CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø- ø(=2¿
rorg.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()?author@1087.19:1087.25CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡ ¡(2 
|org.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()?uniqueAuthorName@1086.21:1086.37CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡, ¡(<2—
|org.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()?uniqueAuthorName@1086.21:1086.37DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaæ æ(%2«
rorg.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()?author@1087.19:1087.25DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø ø(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ Ω(Ñ
|org.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()?uniqueAuthorName@1086.21:1086.37VALUED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaæ æ(%"
typeString"
isFinaltrue"£
declarationStringç<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">uniqueAuthorName</mark> = "Osvaldo Iongi"*uniqueAuthorName2^
java.lang.StringTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaæ æ(»
rorg.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()?author@1087.19:1087.25VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø ø("
type
AuthorList"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>AuthorList <mark class="class-field">author</mark> = AuthorList.parse(uniqueAuthorName)*author2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø ø(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø' ø(,2 
|org.jabref.model.entry.AuthorListTest.parseRetrieveCachedAuthorListAfterGarbageCollection()?uniqueAuthorName@1086.21:1086.37CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaø- ø(=è
Vorg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java≈ ≈(>"
isFinalfalse"°
declarationStringã<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseGarbageCollectAuthorListForUnreachableKey</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*.parseGarbageCollectAuthorListForUnreachableKey2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java»- »(22c
java.lang.System.gc()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java… …(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java /  (42w
)java.lang.String.String(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java»7 »(=2≈
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()?uniqueAuthorName@1094.21:1094.37CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java»> »(N2¡
sorg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()?uniqueAuthor@1096.19:1096.31CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java   ("2≈
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()?uniqueAuthorName@1094.21:1094.37CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java 5  (E2Ã
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()?uniqueAuthorName@1094.21:1094.37DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java∆ ∆(%2»
sorg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()?uniqueAuthor@1096.19:1096.31DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java» »(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java≈ ≈(Ä
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()?uniqueAuthorName@1094.21:1094.37VALUED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∆ ∆(%"
typeString"
isFinaltrue"§
declarationStringé<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">uniqueAuthorName</mark> = "Fleur Hornbach"*uniqueAuthorName2^
java.lang.StringTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∆ ∆(÷
sorg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()?uniqueAuthor@1096.19:1096.31VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.java» »("
type
AuthorList"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>AuthorList <mark class="class-field">uniqueAuthor</mark> = AuthorList.parse(new String(uniqueAuthorName))*uniqueAuthor2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java» »(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java»- »(22w
)java.lang.String.String(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java»7 »(=2≈
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectAuthorListForUnreachableKey()?uniqueAuthorName@1094.21:1094.37CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java»> »(NÄ
Qorg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŒ Œ(9"
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseGarbageCollectUnreachableInstitution</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*)parseGarbageCollectUnreachableInstitution2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java—2 —(72c
java.lang.System.gc()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java“ “(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java”4 ”(92w
)java.lang.String.String(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java—< —(B2≈
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()?uniqueInstitutionName@1103.21:1103.42CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java—C —(X2¡
sorg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()?uniqueInstitution@1105.19:1105.36CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java” ”('2≈
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()?uniqueInstitutionName@1103.21:1103.42CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java”: ”(O2Ã
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()?uniqueInstitutionName@1103.21:1103.42DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ œ(*2»
sorg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()?uniqueInstitution@1105.19:1105.36DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java— —($2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaŒ Œ(à
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()?uniqueInstitutionName@1103.21:1103.42VALUED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ œ(*"
typeString"
isFinaltrue"ß
declarationStringë<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">uniqueInstitutionName</mark> = "{Unique LLC}"*uniqueInstitutionName2^
java.lang.StringTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaœ œ(Â
sorg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()?uniqueInstitution@1105.19:1105.36VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.java— —($"
type
AuthorList"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>AuthorList <mark class="class-field">uniqueInstitution</mark> = AuthorList.parse(new String(uniqueInstitutionName))*uniqueInstitution2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java— —(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java—2 —(72w
)java.lang.String.String(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java—< —(B2≈
worg.jabref.model.entry.AuthorListTest.parseGarbageCollectUnreachableInstitution()?uniqueInstitutionName@1103.21:1103.42CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java—C —(XÉ
borg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄ ⁄(J"
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*:parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‹. ‹(32c
java.lang.System.gc()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java› ›(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ- ﬁ(22‘
Öorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()?uniqueAuthorsNames@1115.21:1115.39CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‹4 ‹(F2œ
Äorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()?uniqueAuthors@1116.19:1116.32CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ ﬁ( 2‘
Öorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()?uniqueAuthorsNames@1115.21:1115.39CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaﬁ3 ﬁ(E2€
Öorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()?uniqueAuthorsNames@1115.21:1115.39DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €('2÷
Äorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()?uniqueAuthors@1116.19:1116.32DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java‹ ‹( 2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java⁄ ⁄(∫
Öorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()?uniqueAuthorsNames@1115.21:1115.39VALUED
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €('"
typeString"
isFinaltrue"Õ
declarationString∑<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">uniqueAuthorsNames</mark> = "Basil Dankworth, Gianna Birdwhistle, Cosmo Berrycloth"*uniqueAuthorsNames2^
java.lang.StringTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java€ €(Ò
Äorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()?uniqueAuthors@1116.19:1116.32VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.java‹ ‹( "
type
AuthorList"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>AuthorList <mark class="class-field">uniqueAuthors</mark> = AuthorList.parse(uniqueAuthorsNames)*uniqueAuthors2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java‹ ‹(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‹. ‹(32‘
Öorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithSpaceInAllParts()?uniqueAuthorsNames@1115.21:1115.39CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java‹4 ‹(Fõ
eorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ Â(M"
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*=parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ. Á(32c
java.lang.System.gc()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaË Ë(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ- È(22◊
àorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()?uniqueAuthorsNames@1126.21:1126.39CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ4 Á(F2“
Éorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()?uniqueAuthors@1127.19:1127.32CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ È( 2◊
àorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()?uniqueAuthorsNames@1126.21:1126.39CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÈ3 È(E2ﬁ
àorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()?uniqueAuthorsNames@1126.21:1126.39DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ Ê('2Ÿ
Éorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()?uniqueAuthors@1127.19:1127.32DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ Á( 2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÂ Â(æ
àorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()?uniqueAuthorsNames@1126.21:1126.39VALUED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ Ê('"
typeString"
isFinaltrue"Œ
declarationString∏<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">uniqueAuthorsNames</mark> = "Dankworth, Jr.<mark class="modifier">,</mark> Braelynn"*uniqueAuthorsNames2^
java.lang.StringTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÊ Ê(˜
Éorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()?uniqueAuthors@1127.19:1127.32VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ Á( "
type
AuthorList"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>AuthorList <mark class="class-field">uniqueAuthors</mark> = AuthorList.parse(uniqueAuthorsNames)*uniqueAuthors2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ Á(2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ. Á(32◊
àorg.jabref.model.entry.AuthorListTest.parseCacheAuthorsWithTwoOrMoreCommasAndWithoutSpaceInAllParts()?uniqueAuthorsNames@1126.21:1126.39CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÁ4 Á(FÑ
@org.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java (("
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">correctNamesWithOneComma</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*correctNamesWithOneComma2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÚ  Ú("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÚ9 Ú(>2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı  ı("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı9 ı(>2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯  ¯("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯9 ¯(>2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚  ˚("2á
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚9 ˚(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò($2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ Ù(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˙ ˙(2ß
Yorg.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()?expected@1137.15:1137.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÚ# Ú(+2ß
Yorg.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()?expected@1137.15:1137.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÙ Ù(2ß
Yorg.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()?expected@1137.15:1137.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaı# ı(+2ß
Yorg.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()?expected@1137.15:1137.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˜ ˜(2ß
Yorg.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()?expected@1137.15:1137.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¯# ¯(+2ß
Yorg.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()?expected@1137.15:1137.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˙ ˙(2ß
Yorg.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()?expected@1137.15:1137.23CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java˚# ˚(+2Æ
Yorg.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()?expected@1137.15:1137.23DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java (Ä
Yorg.jabref.model.entry.AuthorListTest.correctNamesWithOneComma()?expected@1137.15:1137.23VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò("
typeAuthor"
isFinalfalse"Í
declarationString‘<mark class="modifier"> </mark>Author <mark class="class-field">expected</mark> = new Author("Alexander der Gro√üe"<mark class="modifier">,</mark> "A. d. G."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "Canon der Barbar"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)*expected2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÒ Ò($Ï
Aorg.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˇ ˇ()"
isFinalfalse"ø
declarationString©<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">equalsFalseDifferentOrder</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*equalsFalseDifferentOrder2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ	0 Ç	(22î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ	1 É	(32Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÄ	! Ä	('2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ	" Å	((2´
]org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?firstAuthor@1152.15:1152.26CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ	3 Ç	(>2¨
^org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?secondAuthor@1153.15:1153.27CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ	@ Ç	(L2¨
^org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?secondAuthor@1153.15:1153.27CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ	4 É	(@2´
]org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?firstAuthor@1152.15:1152.26CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ	B É	(M2Ø
aorg.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?firstAuthorList@1154.19:1154.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ	 Ñ	('2∞
borg.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?secondAuthorList@1155.19:1155.35CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÑ	) Ñ	(92≤
]org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?firstAuthor@1152.15:1152.26DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÄ	 Ä	(2≥
^org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?secondAuthor@1153.15:1153.27DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ	 Å	(2∂
aorg.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?firstAuthorList@1154.19:1154.34DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ	 Ç	("2∑
borg.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?secondAuthorList@1155.19:1155.35DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ	 É	(#2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaˇ ˇ(ü
]org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?firstAuthor@1152.15:1152.26VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÄ	 Ä	("
typeAuthor"
isFinalfalse"Ç
declarationStringÏ<mark class="modifier"> </mark>Author <mark class="class-field">firstAuthor</mark> = new Author("A"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>)*firstAuthor2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÄ	 Ä	(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÄ	! Ä	('¢
^org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?secondAuthor@1153.15:1153.27VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ	 Å	("
typeAuthor"
isFinalfalse"É
declarationStringÌ<mark class="modifier"> </mark>Author <mark class="class-field">secondAuthor</mark> = new Author("B"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>)*secondAuthor2k
org.jabref.model.entry.AuthorTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ	 Å	(2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÅ	" Å	((Ì
aorg.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?firstAuthorList@1154.19:1154.34VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ	 Ç	(""
type
AuthorList"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>AuthorList <mark class="class-field">firstAuthorList</mark> = AuthorList.of(firstAuthor, secondAuthor)*firstAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ	 Ç	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ	0 Ç	(22´
]org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?firstAuthor@1152.15:1152.26CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ	3 Ç	(>2¨
^org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?secondAuthor@1153.15:1153.27CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÇ	@ Ç	(L
borg.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?secondAuthorList@1155.19:1155.35VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ	 É	(#"
type
AuthorList"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>AuthorList <mark class="class-field">secondAuthorList</mark> = AuthorList.of(secondAuthor, firstAuthor)*secondAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ	 É	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ	1 É	(32¨
^org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?secondAuthor@1153.15:1153.27CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ	4 É	(@2´
]org.jabref.model.entry.AuthorListTest.equalsFalseDifferentOrder()?firstAuthor@1152.15:1152.26CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaÉ	B É	(M·
Dorg.jabref.model.entry.AuthorListTest.equalsFalseWhenNotAuthorList()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà	 à	(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">equalsFalseWhenNotAuthorList</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*equalsFalseWhenNotAuthorList2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ	# â	(%2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaâ	* â	(02Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaä	 ä	(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaà	 à	(Û

;org.jabref.model.entry.AuthorListTest.equalsTrueReflexive()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaé	 é	(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">equalsTrueReflexive</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*equalsTrueReflexive2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè	+ è	(-2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè	2 è	(82§
Vorg.jabref.model.entry.AuthorListTest.equalsTrueReflexive()?authorList@1167.19:1167.29CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaê	 ê	(2§
Vorg.jabref.model.entry.AuthorListTest.equalsTrueReflexive()?authorList@1167.19:1167.29CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaê	! ê	(+2´
Vorg.jabref.model.entry.AuthorListTest.equalsTrueReflexive()?authorList@1167.19:1167.29DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè	 è	(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaé	 é	(Á
Vorg.jabref.model.entry.AuthorListTest.equalsTrueReflexive()?authorList@1167.19:1167.29VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè	 è	("
type
AuthorList"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>AuthorList <mark class="class-field">authorList</mark> = AuthorList.of(new Author(<mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*
authorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè	 è	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè	+ è	(-2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaè	2 è	(8ˆ
;org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaî	 î	(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">equalsTrueSymmetric</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*equalsTrueSymmetric2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï	0 ï	(22î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ	1 ñ	(32Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï	7 ï	(=2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ	8 ñ	(>2©
[org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()?firstAuthorList@1173.19:1173.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó	 ó	($2™
\org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()?secondAuthorList@1174.19:1174.35CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaó	& ó	(62™
\org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()?secondAuthorList@1174.19:1174.35CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò	 ò	(%2©
[org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()?firstAuthorList@1173.19:1173.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaò	' ò	(62∞
[org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()?firstAuthorList@1173.19:1173.34DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï	 ï	("2±
\org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()?secondAuthorList@1174.19:1174.35DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ	 ñ	(#2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaî	 î	(◊
[org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()?firstAuthorList@1173.19:1173.34VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï	 ï	(""
type
AuthorList"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>AuthorList <mark class="class-field">firstAuthorList</mark> = AuthorList.of(new Author("A"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*firstAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï	 ï	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï	0 ï	(22Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaï	7 ï	(=⁄
\org.jabref.model.entry.AuthorListTest.equalsTrueSymmetric()?secondAuthorList@1174.19:1174.35VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ	 ñ	(#"
type
AuthorList"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>AuthorList <mark class="class-field">secondAuthorList</mark> = AuthorList.of(new Author("A"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*secondAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ	 ñ	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ	1 ñ	(32Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javañ	8 ñ	(>Û
<org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaú	 ú	($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">equalsTrueTransitive</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*equalsTrueTransitive2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù	0 ù	(22î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû	1 û	(32î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü	0 ü	(22Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù	7 ù	(=2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû	8 û	(>2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü	7 ü	(=2™
\org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?firstAuthorList@1181.19:1181.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java†	 †	($2´
]org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?secondAuthorList@1182.19:1182.35CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java†	& †	(62´
]org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?secondAuthorList@1182.19:1182.35CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java°	 °	(%2™
\org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?thirdAuthorList@1183.19:1183.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java°	' °	(62™
\org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?firstAuthorList@1181.19:1181.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢	 ¢	($2™
\org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?thirdAuthorList@1183.19:1183.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¢	& ¢	(52±
\org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?firstAuthorList@1181.19:1181.34DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù	 ù	("2≤
]org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?secondAuthorList@1182.19:1182.35DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû	 û	(#2±
\org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?thirdAuthorList@1183.19:1183.34DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü	 ü	("2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaú	 ú	(ÿ
\org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?firstAuthorList@1181.19:1181.34VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù	 ù	(""
type
AuthorList"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>AuthorList <mark class="class-field">firstAuthorList</mark> = AuthorList.of(new Author("A"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*firstAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù	 ù	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù	0 ù	(22Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaù	7 ù	(=€
]org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?secondAuthorList@1182.19:1182.35VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû	 û	(#"
type
AuthorList"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>AuthorList <mark class="class-field">secondAuthorList</mark> = AuthorList.of(new Author("A"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*secondAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû	 û	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû	1 û	(32Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaû	8 û	(>ÿ
\org.jabref.model.entry.AuthorListTest.equalsTrueTransitive()?thirdAuthorList@1183.19:1183.34VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü	 ü	(""
type
AuthorList"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>AuthorList <mark class="class-field">thirdAuthorList</mark> = AuthorList.of(new Author("A"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*thirdAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü	 ü	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü	0 ü	(22Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaü	7 ü	(=⁄
<org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶	 ¶	($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">equalsTrueConsistent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*equalsTrueConsistent2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaß	0 ß	(22î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java®	1 ®	(32Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaß	7 ß	(=2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java®	8 ®	(>2™
\org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?firstAuthorList@1191.19:1191.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java©	 ©	($2´
]org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?secondAuthorList@1192.19:1192.35CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java©	& ©	(62™
\org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?firstAuthorList@1191.19:1191.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java™	 ™	($2´
]org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?secondAuthorList@1192.19:1192.35CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java™	& ™	(62™
\org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?firstAuthorList@1191.19:1191.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java´	 ´	($2´
]org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?secondAuthorList@1192.19:1192.35CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java´	& ´	(62±
\org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?firstAuthorList@1191.19:1191.34DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaß	 ß	("2≤
]org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?secondAuthorList@1192.19:1192.35DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.java®	 ®	(#2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¶	 ¶	(ÿ
\org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?firstAuthorList@1191.19:1191.34VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaß	 ß	(""
type
AuthorList"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>AuthorList <mark class="class-field">firstAuthorList</mark> = AuthorList.of(new Author("A"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*firstAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaß	 ß	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaß	0 ß	(22Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaß	7 ß	(=€
]org.jabref.model.entry.AuthorListTest.equalsTrueConsistent()?secondAuthorList@1192.19:1192.35VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.java®	 ®	(#"
type
AuthorList"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>AuthorList <mark class="class-field">secondAuthorList</mark> = AuthorList.of(new Author("A"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*secondAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java®	 ®	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java®	1 ®	(32Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java®	8 ®	(>Ù
:org.jabref.model.entry.AuthorListTest.equalsFalseForNull()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaØ	 Ø	(""
isFinalfalse"∏
declarationString¢<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">equalsFalseForNull</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*equalsFalseForNull2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞	) ∞	(+2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∞	0 ∞	(62Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaØ	 Ø	(Â
:org.jabref.model.entry.AuthorListTest.hashCodeConsistent()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥	 ¥	(""
isFinalfalse"∏
declarationString¢<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">hashCodeConsistent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*hashCodeConsistent2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaµ	+ µ	(-2z
,org.jabref.model.entry.AuthorList.hashCode()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂	  ∂	((2z
,org.jabref.model.entry.AuthorList.hashCode()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂	7 ∂	(?2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaµ	2 µ	(82£
Uorg.jabref.model.entry.AuthorListTest.hashCodeConsistent()?authorList@1205.19:1205.29CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂	 ∂	(2£
Uorg.jabref.model.entry.AuthorListTest.hashCodeConsistent()?authorList@1205.19:1205.29CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∂	, ∂	(62™
Uorg.jabref.model.entry.AuthorListTest.hashCodeConsistent()?authorList@1205.19:1205.29DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaµ	 µ	(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¥	 ¥	(Ê
Uorg.jabref.model.entry.AuthorListTest.hashCodeConsistent()?authorList@1205.19:1205.29VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaµ	 µ	("
type
AuthorList"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>AuthorList <mark class="class-field">authorList</mark> = AuthorList.of(new Author(<mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*
authorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaµ	 µ	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaµ	+ µ	(-2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaµ	2 µ	(8ï
;org.jabref.model.entry.AuthorListTest.hashCodeNotConstant()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫	 ∫	(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">hashCodeNotConstant</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*hashCodeNotConstant2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª	0 ª	(22î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº	1 º	(32z
,org.jabref.model.entry.AuthorList.hashCode()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ	( Ω	(02z
,org.jabref.model.entry.AuthorList.hashCode()CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ	E Ω	(M2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª	7 ª	(=2Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº	8 º	(>2©
[org.jabref.model.entry.AuthorListTest.hashCodeNotConstant()?firstAuthorList@1211.19:1211.34CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ	 Ω	('2™
\org.jabref.model.entry.AuthorListTest.hashCodeNotConstant()?secondAuthorList@1212.19:1212.35CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaΩ	4 Ω	(D2∞
[org.jabref.model.entry.AuthorListTest.hashCodeNotConstant()?firstAuthorList@1211.19:1211.34DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª	 ª	("2±
\org.jabref.model.entry.AuthorListTest.hashCodeNotConstant()?secondAuthorList@1212.19:1212.35DECLARATIOND
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº	 º	(#2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java∫	 ∫	(◊
[org.jabref.model.entry.AuthorListTest.hashCodeNotConstant()?firstAuthorList@1211.19:1211.34VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª	 ª	(""
type
AuthorList"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>AuthorList <mark class="class-field">firstAuthorList</mark> = AuthorList.of(new Author("A"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*firstAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª	 ª	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª	0 ª	(22Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaª	7 ª	(=⁄
\org.jabref.model.entry.AuthorListTest.hashCodeNotConstant()?secondAuthorList@1212.19:1212.35VARIABLED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº	 º	(#"
type
AuthorList"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>AuthorList <mark class="class-field">secondAuthorList</mark> = AuthorList.of(new Author("B"<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark>))*secondAuthorList2o
!org.jabref.model.entry.AuthorListTYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº	 º	(2î
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº	1 º	(32Ã
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.javaº	8 º	(>ê
Vorg.jabref.model.entry.AuthorListTest.getAsLastFirstFirstLastNamesWithAndEmptyAuthor()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡	 ¡	(>"
isFinalfalse"‘
declarationStringæ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstFirstLastNamesWithAndEmptyAuthor</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*.getAsLastFirstFirstLastNamesWithAndEmptyAuthor2ú
Norg.jabref.model.entry.AuthorList.getAsLastFirstFirstLastNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√	 √	(@2å
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java√	 √	(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java¡	 ¡	(®
Zorg.jabref.model.entry.AuthorListTest.getAsLastFirstFirstLastNamesWithAndMultipleAuthors()METHODD
8src\test\java\org\jabref\model\entry\AuthorListTest.java«	 «	(B"
isFinalfalse"ÿ
declarationString¬<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getAsLastFirstFirstLastNamesWithAndMultipleAuthors</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*2getAsLastFirstFirstLastNamesWithAndMultipleAuthors2ú
Norg.jabref.model.entry.AuthorList.getAsLastFirstFirstLastNamesWithAnd(boolean)CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java…	) …	(L2ò
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60CALLD
8src\test\java\org\jabref\model\entry\AuthorListTest.java…	 …	((2Y
voidRETURN_TYPED
8src\test\java\org\jabref\model\entry\AuthorListTest.java«	 «	(
Forg.jabref.model.entry.AuthorListTest?MUHAMMAD_ALKHWARIZMI@22.32:22.52VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java  (4"
isFinaltrue"
typeAuthor"∆
declarationString∞<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Author <mark class="class-field">MUHAMMAD_ALKHWARIZMI</mark> = new Author("Mu{\\d{h}}ammad"<mark class="modifier">,</mark> "M."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "al-Khw{\\={a}}rizm{\\={i}}"<mark class="modifier">,</mark> <mark class="modifier">null</mark>);"
isStatictrue"
accessprivate*MUHAMMAD_ALKHWARIZMI2i
org.jabref.model.entry.AuthorTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (2 
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (¿
>org.jabref.model.entry.AuthorListTest?CORRADO_BOHM@24.32:24.44VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java  (,"
isFinaltrue"
typeAuthor"¶
declarationStringê<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Author <mark class="class-field">CORRADO_BOHM</mark> = new Author("Corrado"<mark class="modifier">,</mark> "C."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "B{\\\"o}hm"<mark class="modifier">,</mark> <mark class="modifier">null</mark>);"
isStatictrue"
accessprivate*CORRADO_BOHM2i
org.jabref.model.entry.AuthorTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (2 
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (∫
<org.jabref.model.entry.AuthorListTest?KURT_GODEL@26.32:26.42VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java  (*"
isFinaltrue"
typeAuthor"§
declarationStringé<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Author <mark class="class-field">KURT_GODEL</mark> = new Author("Kurt"<mark class="modifier">,</mark> "K."<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "G{\\\"{o}}del"<mark class="modifier">,</mark> <mark class="modifier">null</mark>);"
isStatictrue"
accessprivate*
KURT_GODEL2i
org.jabref.model.entry.AuthorTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (2 
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (ã
;org.jabref.model.entry.AuthorListTest?BANU_MOSA@28.32:28.41VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java  ()"
isFinaltrue"
typeAuthor"˜
declarationString·<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Author <mark class="class-field">BANU_MOSA</mark> = new Author(<mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "{The Ban\\={u} M\\={u}s\\={a} brothers}"<mark class="modifier">,</mark> <mark class="modifier">null</mark>);"
isStatictrue"
accessprivate*	BANU_MOSA2i
org.jabref.model.entry.AuthorTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (2 
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (Õ
>org.jabref.model.entry.AuthorListTest?EMPTY_AUTHOR@30.36:30.48VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java$ (0"
isFinaltrue"
type
AuthorList"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>AuthorList <mark class="class-field">EMPTY_AUTHOR</mark> = AuthorList.of(Collections.emptyList());"
isStatictrue"
accessprivate*EMPTY_AUTHOR2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (#2ü
Sorg.jabref.model.entry.AuthorList.of(java.util.List<org.jabref.model.entry.Author>)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java> (@2m
!java.util.Collections.emptyList()CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaM (V˛
Gorg.jabref.model.entry.AuthorListTest?ONE_AUTHOR_WITH_LATEX@31.36:31.57VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java$ (9"
isFinaltrue"
type
AuthorList"Ì
declarationString◊<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>AuthorList <mark class="class-field">ONE_AUTHOR_WITH_LATEX</mark> = AuthorList.of(MUHAMMAD_ALKHWARIZMI);"
isStatictrue"
accessprivate*ONE_AUTHOR_WITH_LATEX2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java (#2í
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaG (I2í
Forg.jabref.model.entry.AuthorListTest?MUHAMMAD_ALKHWARIZMI@22.32:22.52CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.javaJ (^ú
Horg.jabref.model.entry.AuthorListTest?TWO_AUTHORS_WITH_LATEX@32.36:32.58VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java $  (:"
isFinaltrue"
type
AuthorList"¸
declarationStringÊ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>AuthorList <mark class="class-field">TWO_AUTHORS_WITH_LATEX</mark> = AuthorList.of(MUHAMMAD_ALKHWARIZMI, CORRADO_BOHM);"
isStatictrue"
accessprivate*TWO_AUTHORS_WITH_LATEX2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java   (#2í
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java H  (J2í
Forg.jabref.model.entry.AuthorListTest?MUHAMMAD_ALKHWARIZMI@22.32:22.52CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java K  (_2ä
>org.jabref.model.entry.AuthorListTest?CORRADO_BOHM@24.32:24.44CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java a  (mπ	
Jorg.jabref.model.entry.AuthorListTest?THREE_AUTHORS_WITH_LATEX@33.36:33.60VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java!$ !(<"
isFinaltrue"
type
AuthorList"ä
declarationStringÙ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>AuthorList <mark class="class-field">THREE_AUTHORS_WITH_LATEX</mark> = AuthorList.of(MUHAMMAD_ALKHWARIZMI, CORRADO_BOHM, KURT_GODEL);"
isStatictrue"
accessprivate*THREE_AUTHORS_WITH_LATEX2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java! !(#2í
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java!J !(L2í
Forg.jabref.model.entry.AuthorListTest?MUHAMMAD_ALKHWARIZMI@22.32:22.52CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java!M !(a2ä
>org.jabref.model.entry.AuthorListTest?CORRADO_BOHM@24.32:24.44CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java!c !(o2à
<org.jabref.model.entry.AuthorListTest?KURT_GODEL@26.32:26.42CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java!q !({˜
Lorg.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_LATEX@34.36:34.62VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java"$ "(>"
isFinaltrue"
type
AuthorList"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>AuthorList <mark class="class-field">ONE_INSTITUTION_WITH_LATEX</mark> = AuthorList.of(BANU_MOSA);"
isStatictrue"
accessprivate*ONE_INSTITUTION_WITH_LATEX2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java" "(#2í
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java"L "(N2á
;org.jabref.model.entry.AuthorListTest?BANU_MOSA@28.32:28.41CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java"O "(Xç

[org.jabref.model.entry.AuthorListTest?ONE_INSTITUTION_WITH_STARTING_PARANTHESIS@35.36:35.77VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java#$ #(M"
isFinaltrue"
type
AuthorList"ú
declarationStringÜ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>AuthorList <mark class="class-field">ONE_INSTITUTION_WITH_STARTING_PARANTHESIS</mark> = AuthorList.of(new Author(<mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> "{{\\L{}}ukasz Micha\\l{}}"<mark class="modifier">,</mark> <mark class="modifier">null</mark>));"
isStatictrue"
accessprivate*)ONE_INSTITUTION_WITH_STARTING_PARANTHESIS2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java# #(#2í
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java#[ #(]2 
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java#b #(hè
Morg.jabref.model.entry.AuthorListTest?TWO_INSTITUTIONS_WITH_LATEX@37.36:37.63VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java%$ %(?"
isFinaltrue"
type
AuthorList"Û
declarationString›<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>AuthorList <mark class="class-field">TWO_INSTITUTIONS_WITH_LATEX</mark> = AuthorList.of(BANU_MOSA, BANU_MOSA);"
isStatictrue"
accessprivate*TWO_INSTITUTIONS_WITH_LATEX2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java% %(#2í
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java%M %(O2á
;org.jabref.model.entry.AuthorListTest?BANU_MOSA@28.32:28.41CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java%P %(Y2á
;org.jabref.model.entry.AuthorListTest?BANU_MOSA@28.32:28.41CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java%[ %(dπ
Yorg.jabref.model.entry.AuthorListTest?MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX@38.36:38.75VALUEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java&$ &(K"
isFinaltrue"
type
AuthorList"Ç
declarationStringÏ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>AuthorList <mark class="class-field">MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX</mark> = AuthorList.of(BANU_MOSA, CORRADO_BOHM);"
isStatictrue"
accessprivate*'MIXED_AUTHOR_AND_INSTITUTION_WITH_LATEX2m
!org.jabref.model.entry.AuthorListTYPEB
8src\test\java\org\jabref\model\entry\AuthorListTest.java& &(#2í
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java&Y &([2á
;org.jabref.model.entry.AuthorListTest?BANU_MOSA@28.32:28.41CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java&\ &(e2ä
>org.jabref.model.entry.AuthorListTest?CORRADO_BOHM@24.32:24.44CALLB
8src\test\java\org\jabref\model\entry\AuthorListTest.java&g &(s