
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaÍ
-org.jabref.model.entry.types.EntryTypeFactoryCLASSJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java
 
("'
packageorg.jabref.model.entry.types"
isFinalfalse"
inner classfalse"

isAbstractfalse"n
declarationStringY<mark class="modifier">public </mark><mark class="modifier">class </mark>EntryTypeFactory"
accesspublic*EntryTypeFactory2õ
@org.jabref.model.entry.types.EntryTypeFactory.EntryTypeFactory()DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (2È
çorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (/2ƒ
iorg.jabref.model.entry.types.EntryTypeFactory.isExclusiveBiblatex(org.jabref.model.entry.types.EntryType)DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java" "(-2π
^org.jabref.model.entry.types.EntryTypeFactory.isBibtex(org.jabref.model.entry.types.EntryType)DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java& &(#2ª
`org.jabref.model.entry.types.EntryTypeFactory.isBiblatex(org.jabref.model.entry.types.EntryType)DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java* *(%2†
Eorg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java. .(!£
@org.jabref.model.entry.types.EntryTypeFactory.EntryTypeFactory()CONSTRUCTORJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java ("i
declarationStringT<mark class="modifier">private </mark><mark class="method">EntryTypeFactory</mark>()*EntryTypeFactory2à
-org.jabref.model.entry.types.EntryTypeFactoryRETURN_TYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (‰+
çorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)METHODJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (/"
isFinalfalse"õ
declarationStringÖ<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">nameAndFieldsAreEqual</mark>(BibEntryType type1<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntryType type2)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeboolean*nameAndFieldsAreEqual2ê
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (!2Å
-org.jabref.model.entry.BibEntryType.getType()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java( (/2Å
-org.jabref.model.entry.BibEntryType.getType()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java9 (@2ê
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (%2ã
7org.jabref.model.entry.BibEntryType.getRequiredFields()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java, (=2ã
7org.jabref.model.entry.BibEntryType.getRequiredFields()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaG (X2ã
7org.jabref.model.entry.BibEntryType.getOptionalFields()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java, (=2ã
7org.jabref.model.entry.BibEntryType.getOptionalFields()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaG (X2ê
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (%2î
@org.jabref.model.entry.BibEntryType.getSecondaryOptionalFields()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java, (F2î
@org.jabref.model.entry.BibEntryType.getSecondaryOptionalFields()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaP (j2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type1CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type2CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java  (%2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type1CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type2CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java' (,2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type1CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java" ('2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type2CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java3 (82Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type1CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java& (+2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type2CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaA (F2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type1CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java& (+2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type2CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaA (F2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type1CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java& (+2Ë
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type2CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaJ (O2Ì
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type1	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java= (B2Ì
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type2	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaQ (V2b
booleanRETURN_TYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java (æ
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type1	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java= (B"
typeBibEntryType"
isFinalfalse"'
declarationStringBibEntryType type1*type12w
#org.jabref.model.entry.BibEntryTypeTYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java0 (<æ
ìorg.jabref.model.entry.types.EntryTypeFactory.nameAndFieldsAreEqual(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntryType)!type2	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaQ (V"
typeBibEntryType"
isFinalfalse"'
declarationStringBibEntryType type2*type22w
#org.jabref.model.entry.BibEntryTypeTYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.javaD (Pú
iorg.jabref.model.entry.types.EntryTypeFactory.isExclusiveBiblatex(org.jabref.model.entry.types.EntryType)METHODJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java" "(-"
isFinalfalse"≈
declarationStringØ<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">isExclusiveBiblatex</mark>(EntryType type)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeboolean*isExclusiveBiblatex2¥
`org.jabref.model.entry.types.EntryTypeFactory.isBiblatex(org.jabref.model.entry.types.EntryType)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java# #(2≤
^org.jabref.model.entry.types.EntryTypeFactory.isBibtex(org.jabref.model.entry.types.EntryType)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java#$ #(,2¬
norg.jabref.model.entry.types.EntryTypeFactory.isExclusiveBiblatex(org.jabref.model.entry.types.EntryType)!typeCALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java# #(2¬
norg.jabref.model.entry.types.EntryTypeFactory.isExclusiveBiblatex(org.jabref.model.entry.types.EntryType)!typeCALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java#- #(12«
norg.jabref.model.entry.types.EntryTypeFactory.isExclusiveBiblatex(org.jabref.model.entry.types.EntryType)!type	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java"8 "(<2b
booleanRETURN_TYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java" "(ì
norg.jabref.model.entry.types.EntryTypeFactory.isExclusiveBiblatex(org.jabref.model.entry.types.EntryType)!type	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java"8 "(<"
type	EntryType"
isFinalfalse"#
declarationStringEntryType type*type2z
&org.jabref.model.entry.types.EntryTypeTYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java". "(7Ô
^org.jabref.model.entry.types.EntryTypeFactory.isBibtex(org.jabref.model.entry.types.EntryType)METHODJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java& &(#"
isFinalfalse"ª
declarationString•<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">isBibtex</mark>(EntryType type)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*isBibtex2ù
Ijava.util.stream.Stream.anyMatch(java.util.function.Predicate<? super T>)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java'7 '(?2q
java.util.Collection.stream()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java'. '(42}
)java.lang.Object.equals(java.lang.Object)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java'g '(m2Å
-org.jabref.model.entry.BibEntryType.getType()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java'] '(d2À
worg.jabref.model.entry.types.EntryTypeFactory.isBibtex(org.jabref.model.entry.types.EntryType)?bibEntryType@39.64:39.76CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java'P '(\2∑
corg.jabref.model.entry.types.EntryTypeFactory.isBibtex(org.jabref.model.entry.types.EntryType)!typeCALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java'n '(r2º
corg.jabref.model.entry.types.EntryTypeFactory.isBibtex(org.jabref.model.entry.types.EntryType)!type	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java&. &(22“
worg.jabref.model.entry.types.EntryTypeFactory.isBibtex(org.jabref.model.entry.types.EntryType)?bibEntryType@39.64:39.76DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java'@ '(L2b
booleanRETURN_TYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java& &(à
corg.jabref.model.entry.types.EntryTypeFactory.isBibtex(org.jabref.model.entry.types.EntryType)!type	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java&. &(2"
type	EntryType"
isFinalfalse"#
declarationStringEntryType type*type2z
&org.jabref.model.entry.types.EntryTypeTYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java&$ &(-£
worg.jabref.model.entry.types.EntryTypeFactory.isBibtex(org.jabref.model.entry.types.EntryType)?bibEntryType@39.64:39.76VARIABLEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java'@ '(L"
type"
isFinalfalse""
declarationString bibEntryType*bibEntryType2TYPE˝
`org.jabref.model.entry.types.EntryTypeFactory.isBiblatex(org.jabref.model.entry.types.EntryType)METHODJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java* *(%"
isFinalfalse"Ω
declarationStringß<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">isBiblatex</mark>(EntryType type)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*
isBiblatex2ù
Ijava.util.stream.Stream.anyMatch(java.util.function.Predicate<? super T>)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java+9 +(A2q
java.util.Collection.stream()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java+0 +(62}
)java.lang.Object.equals(java.lang.Object)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java+i +(o2Å
-org.jabref.model.entry.BibEntryType.getType()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java+_ +(f2Õ
yorg.jabref.model.entry.types.EntryTypeFactory.isBiblatex(org.jabref.model.entry.types.EntryType)?bibEntryType@43.66:43.78CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java+R +(^2π
eorg.jabref.model.entry.types.EntryTypeFactory.isBiblatex(org.jabref.model.entry.types.EntryType)!typeCALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java+p +(t2æ
eorg.jabref.model.entry.types.EntryTypeFactory.isBiblatex(org.jabref.model.entry.types.EntryType)!type	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java*0 *(42‘
yorg.jabref.model.entry.types.EntryTypeFactory.isBiblatex(org.jabref.model.entry.types.EntryType)?bibEntryType@43.66:43.78DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java+B +(N2b
booleanRETURN_TYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java* *(ä
eorg.jabref.model.entry.types.EntryTypeFactory.isBiblatex(org.jabref.model.entry.types.EntryType)!type	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java*0 *(4"
type	EntryType"
isFinalfalse"#
declarationStringEntryType type*type2z
&org.jabref.model.entry.types.EntryTypeTYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java*& *(/•
yorg.jabref.model.entry.types.EntryTypeFactory.isBiblatex(org.jabref.model.entry.types.EntryType)?bibEntryType@43.66:43.78VARIABLEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java+B +(N"
type"
isFinalfalse""
declarationString bibEntryType*bibEntryType2TYPEø+
Eorg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)METHODJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java. .(!"
isFinalfalse"ú
declarationStringÜ<mark class="modifier">public </mark><mark class="modifier">static </mark>EntryType <mark class="method">parse</mark>(String typeName)"
isStatictrue"
accesspublic"

isAbstractfalse"
type	EntryType*parse2q
java.util.Arrays.asList(T...)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/B /(H2ã
7org.jabref.model.entry.types.StandardEntryType.values()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/[ /(a2å
8java.util.List.addAll(java.util.Collection<? extends E>)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java0 0(2q
java.util.Arrays.asList(T...)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java0' 0(-2ã
7org.jabref.model.entry.types.IEEETranEntryType.values()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java0@ 0(F2å
8java.util.List.addAll(java.util.Collection<? extends E>)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java1 1(2q
java.util.Arrays.asList(T...)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java1' 1(-2ì
?org.jabref.model.entry.types.BiblatexSoftwareEntryType.values()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java1H 1(N2å
8java.util.List.addAll(java.util.Collection<? extends E>)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java2 2(2q
java.util.Arrays.asList(T...)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java2' 2(-2é
:org.jabref.model.entry.types.BiblatexApaEntryType.values()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java2C 2(I2å
8java.util.List.addAll(java.util.Collection<? extends E>)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java3 3(2q
java.util.Arrays.asList(T...)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java3' 3(-2¢
Norg.jabref.model.entry.types.SystematicLiteratureReviewStudyEntryType.values()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java3W 3(]2p
java.util.Optional.orElse(T)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5v 5(|2w
#java.util.stream.Stream.findFirst()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5j 5(s2õ
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5 5($2q
java.util.Collection.stream()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5 5(2}
)java.lang.String.equals(java.lang.Object)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5< 5(B2Ñ
0org.jabref.model.entry.types.EntryType.getName()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java52 5(92Ç
.java.lang.String.toLowerCase(java.util.Locale)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5L 5(W2î
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/$ /(/2¶
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLL
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5Å 5(ë2´
Worg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?types@47.24:47.29CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java0 0(2´
Worg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?types@47.24:47.29CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java1 1(2´
Worg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?types@47.24:47.29CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java2 2(2´
Worg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?types@47.24:47.29CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java3 3(2´
Worg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?types@47.24:47.29CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5 5(2™
Vorg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?type@53.37:53.41CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5- 5(12¢
Norg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)!typeNameCALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5C 5(K2§
Norg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)!typeNameCALLL
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5í 5(ö2ß
Norg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)!typeName	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java.) .(12≤
Worg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?types@47.24:47.29DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/ /(2±
Vorg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?type@53.37:53.41DECLARATIONJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5% 5()2Å
&org.jabref.model.entry.types.EntryTypeRETURN_TYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java. .(ô
Worg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?types@47.24:47.29VARIABLEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/ /("
typeList<EntryType>"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>List<EntryType> <mark class="class-field">types</mark> = new ArrayList<>(Arrays.<EntryType>asList(StandardEntryType.values()))*types2b
java.util.ListTYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/ /(2É
&org.jabref.model.entry.types.EntryTypeTYPE_ARGUMENTJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/ /(2q
java.util.Arrays.asList(T...)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/B /(H2ã
7org.jabref.model.entry.types.StandardEntryType.values()CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/[ /(a2î
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java/$ /(/ﬂ
Norg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)!typeName	PARAMETERJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java.) .(1"
typeString"
isFinalfalse"$
declarationStringString typeName*typeName2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java." .((Ú
Vorg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)?type@53.37:53.41VARIABLEJ
@src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java5% 5()"
type"
isFinalfalse"
declarationString type*type2TYPE