
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java¡
9org.jabref.model.entry.types.IEEETranEntryTypeDefinitionsCLASSV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java ()"'
packageorg.jabref.model.entry.types"
isFinalfalse"
inner classfalse"

isAbstractfalse"z
declarationStringe<mark class="modifier">public </mark><mark class="modifier">class </mark>IEEETranEntryTypeDefinitions"
accesspublic*IEEETranEntryTypeDefinitions2ø
Xorg.jabref.model.entry.types.IEEETranEntryTypeDefinitions.IEEETranEntryTypeDefinitions()DECLARATIONV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaT T((2∑
Porg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?ELECTRONIC@25.38:25.48DECLARATIONV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java& (02ª
Torg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?IEEETRANBSTCTL@34.38:34.52DECLARATIONV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java"& "(42∑
Porg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?PERIODICAL@48.38:48.48DECLARATIONV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java0& 0(02≥
Lorg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?PATENT@60.38:60.44DECLARATIONV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java<& <(,2µ
Norg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?STANDARD@74.38:74.46DECLARATIONV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaJ& J(.2∞
Iorg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?ALL@82.43:82.46DECLARATIONV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaR+ R(.˜
Xorg.jabref.model.entry.types.IEEETranEntryTypeDefinitions.IEEETranEntryTypeDefinitions()CONSTRUCTORV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaT T(("u
declarationString`<mark class="modifier">private </mark><mark class="method">IEEETranEntryTypeDefinitions</mark>()*IEEETranEntryTypeDefinitions2†
9org.jabref.model.entry.types.IEEETranEntryTypeDefinitionsRETURN_TYPEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaT T((Ú	
Porg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?ELECTRONIC@25.38:25.48VALUEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java& (0"
isFinaltrue"
typeBibEntryType"ˇ
declarationStringÈ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>BibEntryType <mark class="class-field">ELECTRONIC</mark> = new BibEntryTypeBuilder().withType(IEEETranEntryType.Electronic).withImportantFields(StandardField.AUTHOR, StandardField.MONTH, StandardField.YEAR, StandardField.TITLE, StandardField.LANGUAGE, StandardField.HOWPUBLISHED, StandardField.ORGANIZATION, StandardField.ADDRESS, StandardField.NOTE, StandardField.URL).build();"
isStatictrue"
accessprivate*
ELECTRONIC2É
#org.jabref.model.entry.BibEntryTypeTYPEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java (%2ª
[org.jabref.model.entry.BibEntryTypeBuilder.withType(org.jabref.model.entry.types.EntryType)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java (2†
@org.jabref.model.entry.BibEntryTypeBuilder.BibEntryTypeBuilder()CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java7 (Jå
Torg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?IEEETRANBSTCTL@34.38:34.52VALUEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java"& "(4"
isFinaltrue"
typeBibEntryType"ë
declarationString˚<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>BibEntryType <mark class="class-field">IEEETRANBSTCTL</mark> = new BibEntryTypeBuilder().withType(IEEETranEntryType.IEEEtranBSTCTL).withImportantFields(IEEEField.CTLUSE_ARTICLE_NUMBER, IEEEField.CTLUSE_PAPER, IEEEField.CTLUSE_FORCED_ETAL, IEEEField.CTLUSE_URL, IEEEField.CTLMAX_NAMES_FORCED_ETAL, IEEEField.CTLNAMES_SHOW_ETAL, IEEEField.CTLUSE_ALT_SPACING, IEEEField.CTLALT_STRETCH_FACTOR, IEEEField.CTLDASH_REPEATED_NAMES, IEEEField.CTLNAME_FORMAT_STRING, IEEEField.CTLNAME_LATEX_CMD, IEEEField.CTLNAME_URL_PREFIX).build();"
isStatictrue"
accessprivate*IEEETRANBSTCTL2É
#org.jabref.model.entry.BibEntryTypeTYPEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java" "(%2ª
[org.jabref.model.entry.BibEntryTypeBuilder.withType(org.jabref.model.entry.types.EntryType)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java# #(2†
@org.jabref.model.entry.BibEntryTypeBuilder.BibEntryTypeBuilder()CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java"; "(N€
Porg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?PERIODICAL@48.38:48.48VALUEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java0& 0(0"
isFinaltrue"
typeBibEntryType"°
declarationStringã<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>BibEntryType <mark class="class-field">PERIODICAL</mark> = new BibEntryTypeBuilder().withType(IEEETranEntryType.Periodical).withRequiredFields(StandardField.TITLE, StandardField.YEAR).withImportantFields(StandardField.EDITOR, StandardField.LANGUAGE, StandardField.SERIES, StandardField.VOLUME, StandardField.NUMBER, StandardField.ORGANIZATION, StandardField.MONTH, StandardField.NOTE, StandardField.URL).build();"
isStatictrue"
accessprivate*
PERIODICAL2É
#org.jabref.model.entry.BibEntryTypeTYPEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java0 0(%2ƒ
dorg.jabref.model.entry.BibEntryTypeBuilder.withRequiredFields(org.jabref.model.entry.field.Field...)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java2 2(2ª
[org.jabref.model.entry.BibEntryTypeBuilder.withType(org.jabref.model.entry.types.EntryType)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java1 1(2†
@org.jabref.model.entry.BibEntryTypeBuilder.BibEntryTypeBuilder()CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java07 0(J·
Lorg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?PATENT@60.38:60.44VALUEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java<& <(,"
isFinaltrue"
typeBibEntryType"œ
declarationStringπ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>BibEntryType <mark class="class-field">PATENT</mark> = new BibEntryTypeBuilder().withType(IEEETranEntryType.Patent).withRequiredFields(new OrFields(StandardField.YEAR, StandardField.YEARFILED)<mark class="modifier">,</mark> StandardField.NATIONALITY, StandardField.NUMBER).withImportantFields(StandardField.AUTHOR, StandardField.TITLE, StandardField.LANGUAGE, StandardField.ASSIGNEE, StandardField.ADDRESS, StandardField.TYPE, StandardField.NUMBER, StandardField.DAY, StandardField.DAYFILED, StandardField.MONTH, StandardField.MONTHFILED, StandardField.NOTE, StandardField.URL).build();"
isStatictrue"
accessprivate*PATENT2É
#org.jabref.model.entry.BibEntryTypeTYPEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java< <(%2Ï
ãorg.jabref.model.entry.BibEntryTypeBuilder.withRequiredFields(org.jabref.model.entry.field.OrFields, org.jabref.model.entry.field.Field...)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java> >(2ª
[org.jabref.model.entry.BibEntryTypeBuilder.withType(org.jabref.model.entry.types.EntryType)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java= =(2†
@org.jabref.model.entry.BibEntryTypeBuilder.BibEntryTypeBuilder()CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java<3 <(F2µ
Uorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field...)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java>$ >(,≠
Norg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?STANDARD@74.38:74.46VALUEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaJ& J(."
isFinaltrue"
typeBibEntryType"ó
declarationStringÅ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>BibEntryType <mark class="class-field">STANDARD</mark> = new BibEntryTypeBuilder().withType(IEEETranEntryType.Standard).withRequiredFields(new OrFields(StandardField.ORGANIZATION, StandardField.INSTITUTION)<mark class="modifier">,</mark> StandardField.TITLE).withImportantFields(StandardField.AUTHOR, StandardField.LANGUAGE, StandardField.HOWPUBLISHED, StandardField.TYPE, StandardField.NUMBER, StandardField.REVISION, StandardField.ADDRESS, StandardField.MONTH, StandardField.YEAR, StandardField.NOTE, StandardField.URL).build();"
isStatictrue"
accessprivate*STANDARD2É
#org.jabref.model.entry.BibEntryTypeTYPEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaJ J(%2Ï
ãorg.jabref.model.entry.BibEntryTypeBuilder.withRequiredFields(org.jabref.model.entry.field.OrFields, org.jabref.model.entry.field.Field...)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaL L(2ª
[org.jabref.model.entry.BibEntryTypeBuilder.withType(org.jabref.model.entry.types.EntryType)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaK K(2†
@org.jabref.model.entry.BibEntryTypeBuilder.BibEntryTypeBuilder()CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaJ5 J(H2µ
Uorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field...)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaL$ L(,Ñ
Iorg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?ALL@82.43:82.46VALUEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaR+ R(."
isFinaltrue"
typeList<BibEntryType>"Ü
declarationString<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>List<BibEntryType> <mark class="class-field">ALL</mark> = Arrays.asList(ELECTRONIC, IEEETRANBSTCTL, PERIODICAL, PATENT, STANDARD);"
isStatictrue"
accesspublic*ALL2n
java.util.ListTYPEV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaR R(2å
#org.jabref.model.entry.BibEntryTypeTYPE_ARGUMENTV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaR R()2}
java.util.Arrays.asList(T...)CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaR8 R(>2∞
Porg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?ELECTRONIC@25.38:25.48CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaR? R(I2¥
Torg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?IEEETRANBSTCTL@34.38:34.52CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaRK R(Y2∞
Porg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?PERIODICAL@48.38:48.48CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaR[ R(e2¨
Lorg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?PATENT@60.38:60.44CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaRg R(m2Æ
Norg.jabref.model.entry.types.IEEETranEntryTypeDefinitions?STANDARD@74.38:74.46CALLV
Lsrc\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.javaRo R(w