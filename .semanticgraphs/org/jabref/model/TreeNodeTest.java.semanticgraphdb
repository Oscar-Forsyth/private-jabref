
0src\test\java\org\jabref\model\TreeNodeTest.javaÇS
org.jabref.model.TreeNodeTestCLASS:
0src\test\java\org\jabref\model\TreeNodeTest.java ("
packageorg.jabref.model"
isFinalfalse"
inner classfalse"

isAbstractfalse"j
declarationStringU<mark class="modifier">public </mark><mark class="modifier">class </mark>TreeNodeTest"
accesspublic*TreeNodeTest2p
%org.jabref.model.TreeNodeTest.setUp()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java (2ü
Torg.jabref.model.TreeNodeTest.constructorChecksThatClassImplementsCorrectInterface()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java (D2í
Gorg.jabref.model.TreeNodeTest.constructorExceptsCorrectImplementation()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java" "(72ã
@org.jabref.model.TreeNodeTest.newTreeNodeHasNoParentOrChildren()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java( ((02ò
Morg.jabref.model.TreeNodeTest.getIndexedPathFromRootReturnsEmptyListForRoot()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java0 0(=2ã
@org.jabref.model.TreeNodeTest.getIndexedPathFromRootSimplePath()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java6 6(02å
Aorg.jabref.model.TreeNodeTest.getIndexedPathFromRootComplexPath()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java; ;(12Ç
7org.jabref.model.TreeNodeTest.getDescendantSimplePath()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java@ @('2É
8org.jabref.model.TreeNodeTest.getDescendantComplexPath()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaG G((2è
Dorg.jabref.model.TreeNodeTest.getDescendantNonExistentReturnsEmpty()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaN N(42î
Iorg.jabref.model.TreeNodeTest.getPositionInParentForRootThrowsException()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaU U(92à
=org.jabref.model.TreeNodeTest.getPositionInParentSimpleTree()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java[ [(-2ë
Forg.jabref.model.TreeNodeTest.getIndexOfNonExistentChildReturnsEmpty()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javab b(62z
/org.jabref.model.TreeNodeTest.getIndexOfChild()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javah h(2y
.org.jabref.model.TreeNodeTest.getLevelOfRoot()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javao o(2
4org.jabref.model.TreeNodeTest.getLevelInSimpleTree()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javau u($2Ä
5org.jabref.model.TreeNodeTest.getLevelInComplexTree()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaz z(%2Ñ
9org.jabref.model.TreeNodeTest.getChildCountInSimpleTree()DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java ()2á
:org.jabref.model.TreeNodeTest.getChildCountInComplexTree()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ Ü(*2é
Aorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaç ç(12è
Borg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaï ï(22Ä
3org.jabref.model.TreeNodeTest.moveToChangesParent()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaù ù(#2á
:org.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java• •(*2ö
Morg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java≤ ≤(=2ô
Lorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¡ ¡(<2à
;org.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java– –(+2â
<org.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java€ €(,2ç
@org.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ Ê(02í
Eorg.jabref.model.TreeNodeTest.getPreviousSiblingForRootReturnsEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÛ Û(52ô
Lorg.jabref.model.TreeNodeTest.getPreviousSiblingForNonexistentReturnsEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˘ ˘(<2â
<org.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÅ Å(,2é
Aorg.jabref.model.TreeNodeTest.getNextSiblingForRootReturnsEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaé é(12ï
Horg.jabref.model.TreeNodeTest.getNextSiblingForNonexistentReturnsEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaî î(82Ñ
7org.jabref.model.TreeNodeTest.getParentReturnsCorrect()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaú ú('2â
<org.jabref.model.TreeNodeTest.getParentForRootReturnsEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java§ §(,2Ö
8org.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java™ ™((2è
Borg.jabref.model.TreeNodeTest.getChildAtInvalidIndexReturnsEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java≤ ≤(22Ü
9org.jabref.model.TreeNodeTest.getRootReturnsTrueForRoot()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∫ ∫()2à
;org.jabref.model.TreeNodeTest.getRootReturnsFalseForChild()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¿ ¿(+2É
6org.jabref.model.TreeNodeTest.nodeIsAncestorOfItself()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java≈ ≈(&2Ö
8org.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ À((2Ü
9org.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java“ “()2Ä
3org.jabref.model.TreeNodeTest.getRootOfSingleNode()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaŸ Ÿ(#2Ä
3org.jabref.model.TreeNodeTest.getRootInSimpleTree()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(#2Å
4org.jabref.model.TreeNodeTest.getRootInComplexTree()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ Ê($2í
Eorg.jabref.model.TreeNodeTest.isLeafIsCorrectForRootWithoutChildren()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ Ì(52é
Aorg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÛ Û(12û
Qorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¸ ¸(A2ñ
Iorg.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÖ Ö(92£
Vorg.jabref.model.TreeNodeTest.removeAllChildrenRemovesAllNodesFromChildrenCollection()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaé é(F2ä
=org.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(-2å
?org.jabref.model.TreeNodeTest.getFirstChildAtLeafReturnsEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java† †(/2â
<org.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaß ß(,2Ü
9org.jabref.model.TreeNodeTest.isNodeDescendantInComplex()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ Æ()2ä
=org.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ µ(-2â
<org.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¿ ¿(,2ô
Lorg.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java… …(<2é
Aorg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java“ “(12û
Qorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java€ €(A2é
Aorg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java‰ ‰(12ï
Horg.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ Î(82ã
>org.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˘ ˘(.2ó
Jorg.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaà à(:2ä
=org.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaê ê(-2î
Gorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaû û(72Ü
9org.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java≠ ≠()2ñ
Iorg.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∏ ∏(92ñ
Iorg.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java√ √(92ô
Lorg.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java– –(<2û
Qorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java‹ ‹(A2Ö
8org.jabref.model.TreeNodeTest.findChildrenWithSameName()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaË Ë((2
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java, (6À
%org.jabref.model.TreeNodeTest.setUp()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2x
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java (2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java (ÿ
Torg.jabref.model.TreeNodeTest.constructorChecksThatClassImplementsCorrectInterface()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java (D"
isFinalfalse"⁄
declarationStringƒ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">constructorChecksThatClassImplementsCorrectInterface</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*4constructorChecksThatClassImplementsCorrectInterface2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java (Ç
Gorg.jabref.model.TreeNodeTest.constructorExceptsCorrectImplementation()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java" "(7"
isFinalfalse"Õ
declarationString∑<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">constructorExceptsCorrectImplementation</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*'constructorExceptsCorrectImplementation2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java#5 #(R2†
\org.jabref.model.TreeNodeTest.constructorExceptsCorrectImplementation()?treeNode@35.38:35.46CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java$ $(2ß
\org.jabref.model.TreeNodeTest.constructorExceptsCorrectImplementation()?treeNode@35.38:35.46DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java#& #(.2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java" "(Ñ
\org.jabref.model.TreeNodeTest.constructorExceptsCorrectImplementation()?treeNode@35.38:35.46VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.java#& #(."%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">treeNode</mark> = new TreeNodeTestData.TreeNodeMock()*treeNode2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java# #(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java#5 #(R∂
@org.jabref.model.TreeNodeTest.newTreeNodeHasNoParentOrChildren()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java( ((0"
isFinalfalse"∆
declarationString∞<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">newTreeNodeHasNoParentOrChildren</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* newTreeNodeHasNoParentOrChildren2^
java.util.Optional.empty()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java* *(#2i
%org.jabref.model.TreeNode.getParent()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java*0 *(92e
!java.util.Collections.emptyList()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java+! +(*2k
'org.jabref.model.TreeNode.getChildren()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java+7 +(B2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java)5 )(R2ô
Uorg.jabref.model.TreeNodeTest.newTreeNodeHasNoParentOrChildren()?treeNode@41.38:41.46CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java*' *(/2ô
Uorg.jabref.model.TreeNodeTest.newTreeNodeHasNoParentOrChildren()?treeNode@41.38:41.46CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java+. +(62ô
Uorg.jabref.model.TreeNodeTest.newTreeNodeHasNoParentOrChildren()?treeNode@41.38:41.46CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java, ,(2†
Uorg.jabref.model.TreeNodeTest.newTreeNodeHasNoParentOrChildren()?treeNode@41.38:41.46DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java)& )(.2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java( ((˝
Uorg.jabref.model.TreeNodeTest.newTreeNodeHasNoParentOrChildren()?treeNode@41.38:41.46VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.java)& )(."%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">treeNode</mark> = new TreeNodeTestData.TreeNodeMock()*treeNode2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java) )(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java)5 )(R˜	
Morg.jabref.model.TreeNodeTest.getIndexedPathFromRootReturnsEmptyListForRoot()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java0 0(="
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getIndexedPathFromRootReturnsEmptyListForRoot</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*-getIndexedPathFromRootReturnsEmptyListForRoot2e
!java.util.Collections.emptyList()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java2! 2(*2v
2org.jabref.model.TreeNode.getIndexedPathFromRoot()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java23 2(I2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java11 1(N2¢
^org.jabref.model.TreeNodeTest.getIndexedPathFromRootReturnsEmptyListForRoot()?root@49.38:49.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java2. 2(22©
^org.jabref.model.TreeNodeTest.getIndexedPathFromRootReturnsEmptyListForRoot()?root@49.38:49.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java1& 1(*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java0 0(˛
^org.jabref.model.TreeNodeTest.getIndexedPathFromRootReturnsEmptyListForRoot()?root@49.38:49.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.java1& 1(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java1 1(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java11 1(NÙ
@org.jabref.model.TreeNodeTest.getIndexedPathFromRootSimplePath()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java6 6(0"
isFinalfalse"∆
declarationString∞<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getIndexedPathFromRootSimplePath</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* getIndexedPathFromRootSimplePath2a
java.util.Arrays.asList(T...)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java7 7("2v
2org.jabref.model.TreeNode.getIndexedPathFromRoot()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java7Q 7(g2{
7org.jabref.model.TreeNodeTestData.getNodeInSimpleTree()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java7; 7(N2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java6 6(¯
Aorg.jabref.model.TreeNodeTest.getIndexedPathFromRootComplexPath()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java; ;(1"
isFinalfalse"«
declarationString±<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getIndexedPathFromRootComplexPath</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!getIndexedPathFromRootComplexPath2a
java.util.Arrays.asList(T...)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java< <("2v
2org.jabref.model.TreeNode.getIndexedPathFromRoot()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java<U <(k2|
8org.jabref.model.TreeNodeTestData.getNodeInComplexTree()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java<> <(R2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java; ;(‹
7org.jabref.model.TreeNodeTest.getDescendantSimplePath()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java@ @('"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getDescendantSimplePath</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getDescendantSimplePath2©
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaB> B(Q2\
java.util.Optional.get()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaCC C(F2é
Jorg.jabref.model.TreeNode.getDescendant(java.util.List<java.lang.Integer>)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaC  C(-2a
java.util.Arrays.asList(T...)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaC5 C(;2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaA1 A(N2å
Horg.jabref.model.TreeNodeTest.getDescendantSimplePath()?root@65.38:65.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaBR B(V2å
Horg.jabref.model.TreeNodeTest.getDescendantSimplePath()?node@66.38:66.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaC C(2å
Horg.jabref.model.TreeNodeTest.getDescendantSimplePath()?root@65.38:65.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaC C(2ì
Horg.jabref.model.TreeNodeTest.getDescendantSimplePath()?root@65.38:65.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaA& A(*2ì
Horg.jabref.model.TreeNodeTest.getDescendantSimplePath()?node@66.38:66.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaB& B(*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java@ @(Ë
Horg.jabref.model.TreeNodeTest.getDescendantSimplePath()?root@65.38:65.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javaA& A(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaA A(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaA1 A(N¶
Horg.jabref.model.TreeNodeTest.getDescendantSimplePath()?node@66.38:66.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javaB& B(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInSimpleTree(root)*node2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaB B(%2©
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaB> B(Q2å
Horg.jabref.model.TreeNodeTest.getDescendantSimplePath()?root@65.38:65.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaBR B(VÂ
8org.jabref.model.TreeNodeTest.getDescendantComplexPath()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.javaG G(("
isFinalfalse"æ
declarationString®<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getDescendantComplexPath</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getDescendantComplexPath2™
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaI> I(R2\
java.util.Optional.get()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaJF J(I2é
Jorg.jabref.model.TreeNode.getDescendant(java.util.List<java.lang.Integer>)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaJ  J(-2a
java.util.Arrays.asList(T...)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaJ5 J(;2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaH1 H(N2ç
Iorg.jabref.model.TreeNodeTest.getDescendantComplexPath()?root@72.38:72.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaIS I(W2ç
Iorg.jabref.model.TreeNodeTest.getDescendantComplexPath()?node@73.38:73.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaJ J(2ç
Iorg.jabref.model.TreeNodeTest.getDescendantComplexPath()?root@72.38:72.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaJ J(2î
Iorg.jabref.model.TreeNodeTest.getDescendantComplexPath()?root@72.38:72.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaH& H(*2î
Iorg.jabref.model.TreeNodeTest.getDescendantComplexPath()?node@73.38:73.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaI& I(*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaG G(È
Iorg.jabref.model.TreeNodeTest.getDescendantComplexPath()?root@72.38:72.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javaH& H(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaH H(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaH1 H(N™
Iorg.jabref.model.TreeNodeTest.getDescendantComplexPath()?node@73.38:73.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javaI& I(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInComplexTree(root)*node2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaI I(%2™
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaI> I(R2ç
Iorg.jabref.model.TreeNodeTest.getDescendantComplexPath()?root@72.38:72.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaIS I(Wà
Dorg.jabref.model.TreeNodeTest.getDescendantNonExistentReturnsEmpty()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.javaN N(4"
isFinalfalse" 
declarationString¥<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getDescendantNonExistentReturnsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*$getDescendantNonExistentReturnsEmpty2™
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaP P(-2^
java.util.Optional.empty()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaQ Q(#2é
Jorg.jabref.model.TreeNode.getDescendant(java.util.List<java.lang.Integer>)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaQ, Q(92a
java.util.Arrays.asList(T...)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaQA Q(G2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaO1 O(N2ô
Uorg.jabref.model.TreeNodeTest.getDescendantNonExistentReturnsEmpty()?root@79.38:79.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaP. P(22ô
Uorg.jabref.model.TreeNodeTest.getDescendantNonExistentReturnsEmpty()?root@79.38:79.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaQ' Q(+2†
Uorg.jabref.model.TreeNodeTest.getDescendantNonExistentReturnsEmpty()?root@79.38:79.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaO& O(*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaN N(ı
Uorg.jabref.model.TreeNodeTest.getDescendantNonExistentReturnsEmpty()?root@79.38:79.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javaO& O(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaO O(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaO1 O(N„
Iorg.jabref.model.TreeNodeTest.getPositionInParentForRootThrowsException()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.javaU U(9"
isFinalfalse"œ
declarationStringπ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getPositionInParentForRootThrowsException</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*)getPositionInParentForRootThrowsException2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaV1 V(N2•
Zorg.jabref.model.TreeNodeTest.getPositionInParentForRootThrowsException()?root@86.38:86.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaV& V(*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaU U(˙
Zorg.jabref.model.TreeNodeTest.getPositionInParentForRootThrowsException()?root@86.38:86.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javaV& V(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaV V(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaV1 V(Nï
=org.jabref.model.TreeNodeTest.getPositionInParentSimpleTree()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java[ [(-"
isFinalfalse"√
declarationString≠<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getPositionInParentSimpleTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getPositionInParentSimpleTree2§
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java]> ](L2s
/org.jabref.model.TreeNode.getPositionInParent()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java^ ^(02Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java\1 \(N2í
Norg.jabref.model.TreeNodeTest.getPositionInParentSimpleTree()?root@92.38:92.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java]M ](Q2í
Norg.jabref.model.TreeNodeTest.getPositionInParentSimpleTree()?node@93.38:93.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java^ ^(2ô
Norg.jabref.model.TreeNodeTest.getPositionInParentSimpleTree()?root@92.38:92.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java\& \(*2ô
Norg.jabref.model.TreeNodeTest.getPositionInParentSimpleTree()?node@93.38:93.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.java]& ](*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java[ [(Ó
Norg.jabref.model.TreeNodeTest.getPositionInParentSimpleTree()?root@92.38:92.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.java\& \(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java\ \(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java\1 \(N®
Norg.jabref.model.TreeNodeTest.getPositionInParentSimpleTree()?node@93.38:93.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.java]& ](*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java] ](%2§
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java]> ](L2í
Norg.jabref.model.TreeNodeTest.getPositionInParentSimpleTree()?root@92.38:92.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java]M ](QÀ

Forg.jabref.model.TreeNodeTest.getIndexOfNonExistentChildReturnsEmpty()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.javab b(6"
isFinalfalse"Ã
declarationString∂<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getIndexOfNonExistentChildReturnsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*&getIndexOfNonExistentChildReturnsEmpty2^
java.util.Optional.empty()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javad d(#2p
,org.jabref.model.TreeNode.getIndexOfChild(T)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javad, d(;2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javac1 c(N2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javad@ d(]2õ
Worg.jabref.model.TreeNodeTest.getIndexOfNonExistentChildReturnsEmpty()?root@99.38:99.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javad' d(+2¢
Worg.jabref.model.TreeNodeTest.getIndexOfNonExistentChildReturnsEmpty()?root@99.38:99.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javac& c(*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javab b(˜
Worg.jabref.model.TreeNodeTest.getIndexOfNonExistentChildReturnsEmpty()?root@99.38:99.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javac& c(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javac c(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javac1 c(Nü
/org.jabref.model.TreeNodeTest.getIndexOfChild()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.javah h("
isFinalfalse"µ
declarationStringü<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getIndexOfChild</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getIndexOfChild2§
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaj> j(L2\
java.util.Optional.get()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javak= k(@2p
,org.jabref.model.TreeNode.getIndexOfChild(T)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javak' k(62Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javai1 i(N2Ü
Borg.jabref.model.TreeNodeTest.getIndexOfChild()?root@105.38:105.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javajM j(Q2Ü
Borg.jabref.model.TreeNodeTest.getIndexOfChild()?root@105.38:105.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javak" k(&2Ü
Borg.jabref.model.TreeNodeTest.getIndexOfChild()?node@106.38:106.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javak7 k(;2ç
Borg.jabref.model.TreeNodeTest.getIndexOfChild()?root@105.38:105.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javai& i(*2ç
Borg.jabref.model.TreeNodeTest.getIndexOfChild()?node@106.38:106.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javaj& j(*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javah h(‚
Borg.jabref.model.TreeNodeTest.getIndexOfChild()?root@105.38:105.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javai& i(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javai i(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javai1 i(Nê
Borg.jabref.model.TreeNodeTest.getIndexOfChild()?node@106.38:106.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javaj& j(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaj j(%2§
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaj> j(L2Ü
Borg.jabref.model.TreeNodeTest.getIndexOfChild()?root@105.38:105.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javajM j(QÎ
.org.jabref.model.TreeNodeTest.getLevelOfRoot()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.javao o("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getLevelOfRoot</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getLevelOfRoot2h
$org.jabref.model.TreeNode.getLevel()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaq q(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javap1 p(N2Ö
Aorg.jabref.model.TreeNodeTest.getLevelOfRoot()?root@112.38:112.42CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javaq q(2å
Aorg.jabref.model.TreeNodeTest.getLevelOfRoot()?root@112.38:112.42DECLARATION:
0src\test\java\org\jabref\model\TreeNodeTest.javap& p(*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javao o(·
Aorg.jabref.model.TreeNodeTest.getLevelOfRoot()?root@112.38:112.42VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.javap& p(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2r
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javap p(%2Å
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javap1 p(Nﬂ
4org.jabref.model.TreeNodeTest.getLevelInSimpleTree()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.javau u($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getLevelInSimpleTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getLevelInSimpleTree2h
$org.jabref.model.TreeNode.getLevel()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javav? v(G2{
7org.jabref.model.TreeNodeTestData.getNodeInSimpleTree()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.javav) v(<2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javau u(„
5org.jabref.model.TreeNodeTest.getLevelInComplexTree()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.javaz z(%"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getLevelInComplexTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getLevelInComplexTree2h
$org.jabref.model.TreeNode.getLevel()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java{@ {(H2|
8org.jabref.model.TreeNodeTestData.getNodeInComplexTree()CALL:
0src\test\java\org\jabref\model\TreeNodeTest.java{) {(=2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.javaz z(¯

9org.jabref.model.TreeNodeTest.getChildCountInSimpleTree()METHOD:
0src\test\java\org\jabref\model\TreeNodeTest.java ()"
isFinalfalse"ø
declarationString©<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getChildCountInSimpleTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getChildCountInSimpleTree2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÅ Å(,2u
/org.jabref.model.TreeNode.getNumberOfChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ Ç(02É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ1 Ä(N2í
Lorg.jabref.model.TreeNodeTest.getChildCountInSimpleTree()?root@128.38:128.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÅ- Å(12í
Lorg.jabref.model.TreeNodeTest.getChildCountInSimpleTree()?root@128.38:128.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ Ç(2ô
Lorg.jabref.model.TreeNodeTest.getChildCountInSimpleTree()?root@128.38:128.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ& Ä(*2O
voidRETURN_TYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java (Ú
Lorg.jabref.model.TreeNodeTest.getChildCountInSimpleTree()?root@128.38:128.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ& Ä(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ Ä(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ1 Ä(NÉ
:org.jabref.model.TreeNodeTest.getChildCountInComplexTree()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ Ü(*"
isFinalfalse"¿
declarationString™<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getChildCountInComplexTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getChildCountInComplexTree2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaà à(-2u
/org.jabref.model.TreeNode.getNumberOfChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaâ â(02É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaá1 á(N2ì
Morg.jabref.model.TreeNodeTest.getChildCountInComplexTree()?root@135.38:135.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaà. à(22ì
Morg.jabref.model.TreeNodeTest.getChildCountInComplexTree()?root@135.38:135.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaâ â(2ö
Morg.jabref.model.TreeNodeTest.getChildCountInComplexTree()?root@135.38:135.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaá& á(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ Ü(Û
Morg.jabref.model.TreeNodeTest.getChildCountInComplexTree()?root@135.38:135.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaá& á(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaá á(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaá1 á(NÔ
Aorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaç ç(1"
isFinalfalse"«
declarationString±<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveToAddsAsLastChildInSimpleTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!moveToAddsAsLastChildInSimpleTree2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaè> è(Q2i
#org.jabref.model.TreeNode.moveTo(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaê ê(2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaë= ë(@2r
,org.jabref.model.TreeNode.getIndexOfChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaë' ë(62É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaé1 é(N2ö
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?root@142.38:142.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaèR è(V2ö
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?node@143.38:143.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaê ê(2ö
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?root@142.38:142.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaê ê(2ö
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?root@142.38:142.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaë" ë(&2ö
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?node@143.38:143.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaë7 ë(;2°
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?root@142.38:142.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaé& é(*2°
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?node@143.38:143.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaè& è(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaç ç(˙
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?root@142.38:142.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaé& é(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaé é(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaé1 é(N∆
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?node@143.38:143.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaè& è(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInSimpleTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaè è(%2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaè> è(Q2ö
Torg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInSimpleTree()?root@142.38:142.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaèR è(V˙
Borg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaï ï(2"
isFinalfalse"»
declarationString≤<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveToAddsAsLastChildInComplexTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*"moveToAddsAsLastChildInComplexTree2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaó> ó(R2i
#org.jabref.model.TreeNode.moveTo(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaò ò(2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô= ô(@2r
,org.jabref.model.TreeNode.getIndexOfChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô' ô(62É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javañ1 ñ(N2õ
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?root@150.38:150.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaóS ó(W2õ
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?node@151.38:151.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaò ò(2õ
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?root@150.38:150.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaò ò(2õ
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?root@150.38:150.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô" ô(&2õ
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?node@151.38:151.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô7 ô(;2¢
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?root@150.38:150.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javañ& ñ(*2¢
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?node@151.38:151.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaó& ó(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaï ï(˚
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?root@150.38:150.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javañ& ñ(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javañ ñ(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javañ1 ñ(N 
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?node@151.38:151.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaó& ó(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInComplexTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(%2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaó> ó(R2õ
Uorg.jabref.model.TreeNodeTest.moveToAddsAsLastChildInComplexTree()?root@150.38:150.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaóS ó(W‹
3org.jabref.model.TreeNodeTest.moveToChangesParent()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaù ù(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveToChangesParent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*moveToChangesParent2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaü> ü(Q2i
#org.jabref.model.TreeNode.moveTo(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java† †(2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java°, °(/2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java°  °()2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaû1 û(N2å
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?root@158.38:158.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaüR ü(V2å
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?node@159.38:159.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java† †(2å
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?root@158.38:158.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java† †(2å
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?root@158.38:158.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java° °(2å
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?node@159.38:159.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java° °(2ì
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?root@158.38:158.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaû& û(*2ì
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?node@159.38:159.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaü& ü(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaù ù(Ï
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?root@158.38:158.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaû& û(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaû û(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaû1 û(N™
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?node@159.38:159.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaü& ü(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInSimpleTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaü ü(%2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaü> ü(Q2å
Forg.jabref.model.TreeNodeTest.moveToChangesParent()?root@158.38:158.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaüR ü(V‰
:org.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java• •(*"
isFinalfalse"¿
declarationString™<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveToInSameLevelAddsAtEnd</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*moveToInSameLevelAddsAtEnd2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java© ©(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java™ ™(2i
#org.jabref.model.TreeNode.moveTo(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¨ ¨(2c
java.util.Arrays.asList(T...)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ Æ("2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ9 Æ(D2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¶1 ¶(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaß3 ß(P2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java®3 ®(P2ì
Morg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?root@166.38:166.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java© ©(2ï
Oorg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?child1@167.38:167.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java© ©(2ì
Morg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?root@166.38:166.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java™ ™(2ï
Oorg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?child2@168.38:168.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java™ ™(2ï
Oorg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?child1@167.38:167.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¨ ¨(2ì
Morg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?root@166.38:166.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¨ ¨(2ï
Oorg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?child2@168.38:168.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ# Æ()2ï
Oorg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?child1@167.38:167.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ+ Æ(12ì
Morg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?root@166.38:166.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ4 Æ(82ö
Morg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?root@166.38:166.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¶& ¶(*2ú
Oorg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?child1@167.38:167.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaß& ß(,2ú
Oorg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?child2@168.38:168.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java®& ®(,2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java• •(Û
Morg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?root@166.38:166.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java¶& ¶(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¶ ¶(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¶1 ¶(N˘
Oorg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?child1@167.38:167.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaß& ß(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child1</mark> = new TreeNodeTestData.TreeNodeMock()*child12t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaß ß(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaß3 ß(P˘
Oorg.jabref.model.TreeNodeTest.moveToInSameLevelAddsAtEnd()?child2@168.38:168.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java®& ®(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child2</mark> = new TreeNodeTestData.TreeNodeMock()*child22t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java® ®(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java®3 ®(P™#
Morg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java≤ ≤(="
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveToInSameLevelWhenNodeWasBeforeTargetIndex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*-moveToInSameLevelWhenNodeWasBeforeTargetIndex2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∑ ∑(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∏ ∏(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ π(2n
(org.jabref.model.TreeNode.moveTo(T, int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaª ª(2c
java.util.Arrays.asList(T...)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaΩ Ω("2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaΩA Ω(L2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≥1 ≥(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¥3 ¥(P2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ3 µ(P2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∂3 ∂(P2¶
`org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?root@179.38:179.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∑ ∑(2®
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child1@180.38:180.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∑ ∑(2¶
`org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?root@179.38:179.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∏ ∏(2®
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child2@181.38:181.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∏ ∏(2¶
`org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?root@179.38:179.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ π(2®
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child3@182.38:182.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ π(2®
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child1@180.38:180.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaª ª(2¶
`org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?root@179.38:179.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaª ª(2®
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child2@181.38:181.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaΩ# Ω()2®
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child1@180.38:180.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaΩ+ Ω(12®
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child3@182.38:182.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaΩ3 Ω(92¶
`org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?root@179.38:179.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaΩ< Ω(@2≠
`org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?root@179.38:179.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java≥& ≥(*2Ø
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child1@180.38:180.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¥& ¥(,2Ø
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child2@181.38:181.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ& µ(,2Ø
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child3@182.38:182.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∂& ∂(,2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java≤ ≤(Ü
`org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?root@179.38:179.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java≥& ≥(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java≥ ≥(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≥1 ≥(Nå
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child1@180.38:180.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java¥& ¥(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child1</mark> = new TreeNodeTestData.TreeNodeMock()*child12t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¥ ¥(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¥3 ¥(På
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child2@181.38:181.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ& µ(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child2</mark> = new TreeNodeTestData.TreeNodeMock()*child22t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ µ(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ3 µ(På
borg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasBeforeTargetIndex()?child3@182.38:182.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java∂& ∂(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child3</mark> = new TreeNodeTestData.TreeNodeMock()*child32t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∂ ∂(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∂3 ∂(Pó#
Lorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java¡ ¡(<"
isFinalfalse"“
declarationStringº<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveToInSameLevelWhenNodeWasAfterTargetIndex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*,moveToInSameLevelWhenNodeWasAfterTargetIndex2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆ ∆(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java« «(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java» »(2n
(org.jabref.model.TreeNode.moveTo(T, int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java   (2c
java.util.Arrays.asList(T...)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ Ã("2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃA Ã(L2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¬1 ¬(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java√3 √(P2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ3 ƒ(P2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≈3 ≈(P2•
_org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?root@194.38:194.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆ ∆(2ß
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child1@195.38:195.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆ ∆(2•
_org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?root@194.38:194.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java« «(2ß
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child2@196.38:196.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java« «(2•
_org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?root@194.38:194.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java» »(2ß
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child3@197.38:197.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java» »(2ß
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child3@197.38:197.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java   (2•
_org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?root@194.38:194.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java   (2ß
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child1@195.38:195.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ# Ã()2ß
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child3@197.38:197.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ+ Ã(12ß
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child2@196.38:196.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ3 Ã(92•
_org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?root@194.38:194.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ< Ã(@2¨
_org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?root@194.38:194.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¬& ¬(*2Æ
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child1@195.38:195.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java√& √(,2Æ
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child2@196.38:196.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ& ƒ(,2Æ
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child3@197.38:197.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java≈& ≈(,2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¡ ¡(Ö
_org.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?root@194.38:194.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java¬& ¬(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¬ ¬(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¬1 ¬(Nã
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child1@195.38:195.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java√& √(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child1</mark> = new TreeNodeTestData.TreeNodeMock()*child12t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java√ √(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java√3 √(Pã
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child2@196.38:196.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ& ƒ(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child2</mark> = new TreeNodeTestData.TreeNodeMock()*child22t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ ƒ(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ3 ƒ(Pã
aorg.jabref.model.TreeNodeTest.moveToInSameLevelWhenNodeWasAfterTargetIndex()?child3@197.38:197.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java≈& ≈(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child3</mark> = new TreeNodeTestData.TreeNodeMock()*child32t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java≈ ≈(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≈3 ≈(PÔ
;org.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java– –(+"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getPathFromRootInSimpleTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getPathFromRootInSimpleTree2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java“> “(Q2q
+org.jabref.model.TreeNode.getPathFromRoot()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘8 ‘(G2[
java.util.List.size()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java’ ’(!2]
java.util.List.get(int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java◊  ◊(#2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java—1 —(N2î
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?root@209.38:209.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java“R “(V2î
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?node@210.38:210.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘3 ‘(72î
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?path@212.44:212.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java’ ’(2î
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?root@209.38:209.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java÷ ÷(2î
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?path@212.44:212.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java÷ ÷(2î
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?node@210.38:210.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java◊ ◊(2î
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?path@212.44:212.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java◊ ◊(2õ
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?root@209.38:209.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java—& —(*2õ
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?node@210.38:210.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java“& “(*2õ
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?path@212.44:212.48DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java‘, ‘(02Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java– –(Ù
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?root@209.38:209.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java—& —(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java— —(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java—1 —(N∫
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?node@210.38:210.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java“& “(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInSimpleTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java“ “(%2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java“> “(Q2î
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?root@209.38:209.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java“R “(V÷
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?path@212.44:212.48VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java‘, ‘(0"+
type#List<TreeNodeTestData.TreeNodeMock>"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>List<TreeNodeTestData.TreeNodeMock> <mark class="class-field">path</mark> = node.getPathFromRoot()*path2T
java.util.ListTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java‘ ‘(2}
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE_ARGUMENT<
0src\test\java\org\jabref\model\TreeNodeTest.java‘ ‘(*2q
+org.jabref.model.TreeNode.getPathFromRoot()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘8 ‘(G2î
Norg.jabref.model.TreeNodeTest.getPathFromRootInSimpleTree()?node@210.38:210.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘3 ‘(7˝
<org.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java€ €(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getPathFromRootInComplexTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getPathFromRootInComplexTree2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›> ›(R2q
+org.jabref.model.TreeNode.getPathFromRoot()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ8 ﬂ(G2[
java.util.List.size()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‡ ‡(!2]
java.util.List.get(int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‚  ‚(#2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‹1 ‹(N2ï
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?root@220.38:220.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›S ›(W2ï
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?node@221.38:221.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ3 ﬂ(72ï
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?path@223.44:223.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‡ ‡(2ï
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?root@220.38:220.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java· ·(2ï
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?path@223.44:223.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java· ·(2ï
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?node@221.38:221.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‚ ‚(2ï
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?path@223.44:223.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‚ ‚(2ú
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?root@220.38:220.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java‹& ‹(*2ú
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?node@221.38:221.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java›& ›(*2ú
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?path@223.44:223.48DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ, ﬂ(02Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java€ €(ı
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?root@220.38:220.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java‹& ‹(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java‹ ‹(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‹1 ‹(Næ
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?node@221.38:221.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java›& ›(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInComplexTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java› ›(%2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›> ›(R2ï
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?root@220.38:220.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›S ›(Wÿ
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?path@223.44:223.48VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ, ﬂ(0"+
type#List<TreeNodeTestData.TreeNodeMock>"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>List<TreeNodeTestData.TreeNodeMock> <mark class="class-field">path</mark> = node.getPathFromRoot()*path2T
java.util.ListTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(2}
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE_ARGUMENT<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(*2q
+org.jabref.model.TreeNode.getPathFromRoot()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ8 ﬂ(G2ï
Oorg.jabref.model.TreeNodeTest.getPathFromRootInComplexTree()?node@221.38:221.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ3 ﬂ(7ù
@org.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ Ê(0"
isFinalfalse"∆
declarationString∞<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getPreviousSiblingReturnsCorrect</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* getPreviousSiblingReturnsCorrect2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaË Ë(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ Í(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ Ï(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ Ì(2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ9 Ô(<2t
.org.jabref.model.TreeNode.getPreviousSibling()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ$ Ô(62É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ1 Á(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaË Ë(72É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ5 È(R2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ1 Î(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ Ì(72ô
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?root@231.38:231.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaË Ë(2ô
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?root@231.38:231.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ Í(2ù
Worg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?previous@233.38:233.46CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ Í(2ô
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?root@231.38:231.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ Ï(2ô
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?node@235.38:235.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ Ï(2ô
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?root@231.38:231.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ Ì(2ù
Worg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?previous@233.38:233.46CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ Ô(2ô
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?node@235.38:235.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ Ô(#2†
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?root@231.38:231.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ& Á(*2§
Worg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?previous@233.38:233.46DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ& È(.2†
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?node@235.38:235.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ& Î(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ Ê(˘
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?root@231.38:231.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ& Á(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ Á(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ1 Á(NÖ
Worg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?previous@233.38:233.46VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ& È(."%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">previous</mark> = new TreeNodeTestData.TreeNodeMock()*previous2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ È(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ5 È(R˘
Sorg.jabref.model.TreeNodeTest.getPreviousSiblingReturnsCorrect()?node@235.38:235.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ& Î(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = new TreeNodeTestData.TreeNodeMock()*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ Î(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ1 Î(N÷	
Eorg.jabref.model.TreeNodeTest.getPreviousSiblingForRootReturnsEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÛ Û(5"
isFinalfalse"À
declarationStringµ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getPreviousSiblingForRootReturnsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*%getPreviousSiblingForRootReturnsEmpty2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı ı(#2t
.org.jabref.model.TreeNode.getPreviousSibling()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı, ı(>2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ1 Ù(N2û
Xorg.jabref.model.TreeNodeTest.getPreviousSiblingForRootReturnsEmpty()?root@244.38:244.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı' ı(+2•
Xorg.jabref.model.TreeNodeTest.getPreviousSiblingForRootReturnsEmpty()?root@244.38:244.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ& Ù(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÛ Û(˛
Xorg.jabref.model.TreeNodeTest.getPreviousSiblingForRootReturnsEmpty()?root@244.38:244.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ& Ù(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ Ù(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ1 Ù(NÎ
Lorg.jabref.model.TreeNodeTest.getPreviousSiblingForNonexistentReturnsEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java˘ ˘(<"
isFinalfalse"“
declarationStringº<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getPreviousSiblingForNonexistentReturnsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*,getPreviousSiblingForNonexistentReturnsEmpty2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¸ ¸(2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˝ ˝(#2t
.org.jabref.model.TreeNode.getPreviousSibling()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˝, ˝(>2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˙1 ˙(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˚1 ˚(N2•
_org.jabref.model.TreeNodeTest.getPreviousSiblingForNonexistentReturnsEmpty()?root@250.38:250.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¸ ¸(2•
_org.jabref.model.TreeNodeTest.getPreviousSiblingForNonexistentReturnsEmpty()?node@251.38:251.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¸ ¸(2•
_org.jabref.model.TreeNodeTest.getPreviousSiblingForNonexistentReturnsEmpty()?node@251.38:251.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˝' ˝(+2¨
_org.jabref.model.TreeNodeTest.getPreviousSiblingForNonexistentReturnsEmpty()?root@250.38:250.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˙& ˙(*2¨
_org.jabref.model.TreeNodeTest.getPreviousSiblingForNonexistentReturnsEmpty()?node@251.38:251.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˚& ˚(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˘ ˘(Ö
_org.jabref.model.TreeNodeTest.getPreviousSiblingForNonexistentReturnsEmpty()?root@250.38:250.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java˙& ˙(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˙ ˙(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˙1 ˙(NÖ
_org.jabref.model.TreeNodeTest.getPreviousSiblingForNonexistentReturnsEmpty()?node@251.38:251.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java˚& ˚(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = new TreeNodeTestData.TreeNodeMock()*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˚ ˚(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˚1 ˚(N’
<org.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÅ Å(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getNextSiblingReturnsCorrect</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getNextSiblingReturnsCorrect2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÉ É(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÖ Ö(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaá á(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaà à(2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaä1 ä(42p
*org.jabref.model.TreeNode.getNextSibling()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaä  ä(.2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ1 Ç(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÉ É(72É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÑ1 Ñ(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ1 Ü(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaà à(72ï
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?root@258.38:258.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÉ É(2ï
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?root@258.38:258.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÖ Ö(2ï
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?node@260.38:260.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÖ Ö(2ï
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?root@258.38:258.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaá á(2ï
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?next@262.38:262.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaá á(2ï
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?root@258.38:258.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaà à(2ï
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?next@262.38:262.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaä ä(2ï
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?node@260.38:260.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaä ä(2ú
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?root@258.38:258.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ& Ç(*2ú
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?node@260.38:260.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÑ& Ñ(*2ú
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?next@262.38:262.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ& Ü(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÅ Å(ı
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?root@258.38:258.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ& Ç(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ Ç(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ1 Ç(Nı
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?node@260.38:260.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÑ& Ñ(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = new TreeNodeTestData.TreeNodeMock()*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÑ Ñ(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÑ1 Ñ(Nı
Oorg.jabref.model.TreeNodeTest.getNextSiblingReturnsCorrect()?next@262.38:262.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ& Ü(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">next</mark> = new TreeNodeTestData.TreeNodeMock()*next2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ Ü(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ1 Ü(Næ	
Aorg.jabref.model.TreeNodeTest.getNextSiblingForRootReturnsEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaé é(1"
isFinalfalse"«
declarationString±<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getNextSiblingForRootReturnsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!getNextSiblingForRootReturnsEmpty2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaê ê(#2p
*org.jabref.model.TreeNode.getNextSibling()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaê, ê(:2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaè1 è(N2ö
Torg.jabref.model.TreeNodeTest.getNextSiblingForRootReturnsEmpty()?root@271.38:271.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaê' ê(+2°
Torg.jabref.model.TreeNodeTest.getNextSiblingForRootReturnsEmpty()?root@271.38:271.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaè& è(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaé é(˙
Torg.jabref.model.TreeNodeTest.getNextSiblingForRootReturnsEmpty()?root@271.38:271.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaè& è(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaè è(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaè1 è(NÀ
Horg.jabref.model.TreeNodeTest.getNextSiblingForNonexistentReturnsEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaî î(8"
isFinalfalse"Œ
declarationString∏<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getNextSiblingForNonexistentReturnsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*(getNextSiblingForNonexistentReturnsEmpty2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaò ò(#2t
.org.jabref.model.TreeNode.getPreviousSibling()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaò, ò(>2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaï1 ï(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javañ1 ñ(N2°
[org.jabref.model.TreeNodeTest.getNextSiblingForNonexistentReturnsEmpty()?root@277.38:277.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(2°
[org.jabref.model.TreeNodeTest.getNextSiblingForNonexistentReturnsEmpty()?node@278.38:278.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(2°
[org.jabref.model.TreeNodeTest.getNextSiblingForNonexistentReturnsEmpty()?node@278.38:278.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaò' ò(+2®
[org.jabref.model.TreeNodeTest.getNextSiblingForNonexistentReturnsEmpty()?root@277.38:277.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaï& ï(*2®
[org.jabref.model.TreeNodeTest.getNextSiblingForNonexistentReturnsEmpty()?node@278.38:278.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javañ& ñ(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaî î(Å
[org.jabref.model.TreeNodeTest.getNextSiblingForNonexistentReturnsEmpty()?root@277.38:277.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaï& ï(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaï ï(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaï1 ï(NÅ
[org.jabref.model.TreeNodeTest.getNextSiblingForNonexistentReturnsEmpty()?node@278.38:278.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javañ& ñ(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = new TreeNodeTestData.TreeNodeMock()*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javañ ñ(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javañ1 ñ(NÓ
7org.jabref.model.TreeNodeTest.getParentReturnsCorrect()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaú ú('"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getParentReturnsCorrect</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getParentReturnsCorrect2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaû> û(L2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java†, †(/2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java†  †()2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaù1 ù(N2ê
Jorg.jabref.model.TreeNodeTest.getParentReturnsCorrect()?root@285.38:285.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaûM û(Q2ê
Jorg.jabref.model.TreeNodeTest.getParentReturnsCorrect()?root@285.38:285.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java† †(2ê
Jorg.jabref.model.TreeNodeTest.getParentReturnsCorrect()?node@286.38:286.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java† †(2ó
Jorg.jabref.model.TreeNodeTest.getParentReturnsCorrect()?root@285.38:285.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaù& ù(*2ó
Jorg.jabref.model.TreeNodeTest.getParentReturnsCorrect()?node@286.38:286.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaû& û(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaú ú(
Jorg.jabref.model.TreeNodeTest.getParentReturnsCorrect()?root@285.38:285.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaù& ù(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaù ù(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaù1 ù(N®
Jorg.jabref.model.TreeNodeTest.getParentReturnsCorrect()?node@286.38:286.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaû& û(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaû û(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaû> û(L2ê
Jorg.jabref.model.TreeNodeTest.getParentReturnsCorrect()?root@285.38:285.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaûM û(Q†	
<org.jabref.model.TreeNodeTest.getParentForRootReturnsEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java§ §(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getParentForRootReturnsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getParentForRootReturnsEmpty2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¶ ¶(#2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¶, ¶(52É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java•1 •(N2ï
Oorg.jabref.model.TreeNodeTest.getParentForRootReturnsEmpty()?root@293.38:293.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¶' ¶(+2ú
Oorg.jabref.model.TreeNodeTest.getParentForRootReturnsEmpty()?root@293.38:293.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java•& •(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java§ §(ı
Oorg.jabref.model.TreeNodeTest.getParentForRootReturnsEmpty()?root@293.38:293.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java•& •(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java• •(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java•1 •(N˙
8org.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java™ ™(("
isFinalfalse"æ
declarationString®<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getChildAtReturnsCorrect</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getChildAtReturnsCorrect2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¨> ¨(L2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ. Æ(12o
)org.jabref.model.TreeNode.getChildAt(int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ  Æ(*2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java´1 ´(N2ë
Korg.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()?root@299.38:299.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¨M ¨(Q2ë
Korg.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()?node@300.38:300.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ Æ(2ë
Korg.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()?root@299.38:299.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ Æ(2ò
Korg.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()?root@299.38:299.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java´& ´(*2ò
Korg.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()?node@300.38:300.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¨& ¨(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java™ ™(Ò
Korg.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()?root@299.38:299.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java´& ´(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java´ ´(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java´1 ´(N™
Korg.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()?node@300.38:300.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java¨& ¨(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¨ ¨(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¨> ¨(L2ë
Korg.jabref.model.TreeNodeTest.getChildAtReturnsCorrect()?root@299.38:299.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¨M ¨(Q‰
Borg.jabref.model.TreeNodeTest.getChildAtInvalidIndexReturnsEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java≤ ≤(2"
isFinalfalse"»
declarationString≤<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getChildAtInvalidIndexReturnsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*"getChildAtInvalidIndexReturnsEmpty2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¥ ¥(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ µ(2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∂ ∂(#2o
)org.jabref.model.TreeNode.getChildAt(int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∂, ∂(62É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≥1 ≥(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¥ ¥(72É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ µ(72õ
Uorg.jabref.model.TreeNodeTest.getChildAtInvalidIndexReturnsEmpty()?root@307.38:307.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¥ ¥(2õ
Uorg.jabref.model.TreeNodeTest.getChildAtInvalidIndexReturnsEmpty()?root@307.38:307.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ µ(2õ
Uorg.jabref.model.TreeNodeTest.getChildAtInvalidIndexReturnsEmpty()?root@307.38:307.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∂' ∂(+2¢
Uorg.jabref.model.TreeNodeTest.getChildAtInvalidIndexReturnsEmpty()?root@307.38:307.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java≥& ≥(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java≤ ≤(˚
Uorg.jabref.model.TreeNodeTest.getChildAtInvalidIndexReturnsEmpty()?root@307.38:307.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java≥& ≥(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java≥ ≥(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≥1 ≥(N¨
9org.jabref.model.TreeNodeTest.getRootReturnsTrueForRoot()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java∫ ∫()"
isFinalfalse"ø
declarationString©<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getRootReturnsTrueForRoot</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getRootReturnsTrueForRoot2h
"org.jabref.model.TreeNode.isRoot()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº º(2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaª1 ª(N2í
Lorg.jabref.model.TreeNodeTest.getRootReturnsTrueForRoot()?root@315.38:315.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº º(2ô
Lorg.jabref.model.TreeNodeTest.getRootReturnsTrueForRoot()?root@315.38:315.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaª& ª(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∫ ∫(Ú
Lorg.jabref.model.TreeNodeTest.getRootReturnsTrueForRoot()?root@315.38:315.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaª& ª(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaª ª(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaª1 ª(N˙
;org.jabref.model.TreeNodeTest.getRootReturnsFalseForChild()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java¿ ¿(+"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getRootReturnsFalseForChild</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getRootReturnsFalseForChild2h
"org.jabref.model.TreeNode.isRoot()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¡; ¡(A2}
7org.jabref.model.TreeNodeTestData.getNodeInSimpleTree()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¡% ¡(82Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¿ ¿(∂	
6org.jabref.model.TreeNodeTest.nodeIsAncestorOfItself()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java≈ ≈(&"
isFinalfalse"º
declarationString¶<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">nodeIsAncestorOfItself</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*nodeIsAncestorOfItself2o
)org.jabref.model.TreeNode.isAncestorOf(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java« «($2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆1 ∆(N2è
Iorg.jabref.model.TreeNodeTest.nodeIsAncestorOfItself()?root@326.38:326.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java« «(2è
Iorg.jabref.model.TreeNodeTest.nodeIsAncestorOfItself()?root@326.38:326.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java«% «()2ñ
Iorg.jabref.model.TreeNodeTest.nodeIsAncestorOfItself()?root@326.38:326.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∆& ∆(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java≈ ≈(Ô
Iorg.jabref.model.TreeNodeTest.nodeIsAncestorOfItself()?root@326.38:326.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java∆& ∆(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∆ ∆(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆1 ∆(Nü
8org.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ À(("
isFinalfalse"æ
declarationString®<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isAncestorOfInSimpleTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isAncestorOfInSimpleTree2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕ> Õ(Q2o
)org.jabref.model.TreeNode.isAncestorOf(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaŒ Œ($2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ1 Ã(N2ë
Korg.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()?root@332.38:332.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕR Õ(V2ë
Korg.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()?root@332.38:332.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaŒ Œ(2ë
Korg.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()?node@333.38:333.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaŒ% Œ()2ò
Korg.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()?root@332.38:332.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ& Ã(*2ò
Korg.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()?node@333.38:333.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕ& Õ(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ À(Ò
Korg.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()?root@332.38:332.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ& Ã(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ Ã(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ1 Ã(N¥
Korg.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()?node@333.38:333.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕ& Õ(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInSimpleTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕ Õ(%2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕ> Õ(Q2ë
Korg.jabref.model.TreeNodeTest.isAncestorOfInSimpleTree()?root@332.38:332.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕR Õ(V®
9org.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java“ “()"
isFinalfalse"ø
declarationString©<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isAncestorOfInComplexTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isAncestorOfInComplexTree2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘> ‘(R2o
)org.jabref.model.TreeNode.isAncestorOf(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java’ ’($2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”1 ”(N2í
Lorg.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()?root@339.38:339.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘S ‘(W2í
Lorg.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()?root@339.38:339.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java’ ’(2í
Lorg.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()?node@340.38:340.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java’% ’()2ô
Lorg.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()?root@339.38:339.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java”& ”(*2ô
Lorg.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()?node@340.38:340.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java‘& ‘(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java“ “(Ú
Lorg.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()?root@339.38:339.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java”& ”(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java” ”(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”1 ”(N∏
Lorg.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()?node@340.38:340.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java‘& ‘(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInComplexTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java‘ ‘(%2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘> ‘(R2í
Lorg.jabref.model.TreeNodeTest.isAncestorOfInComplexTree()?root@339.38:339.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘S ‘(Wû	
3org.jabref.model.TreeNodeTest.getRootOfSingleNode()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaŸ Ÿ(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getRootOfSingleNode</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getRootOfSingleNode2i
#org.jabref.model.TreeNode.getRoot()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java€  €('2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java⁄1 ⁄(N2å
Forg.jabref.model.TreeNodeTest.getRootOfSingleNode()?root@346.38:346.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java€ €(2å
Forg.jabref.model.TreeNodeTest.getRootOfSingleNode()?root@346.38:346.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java€ €(2ì
Forg.jabref.model.TreeNodeTest.getRootOfSingleNode()?root@346.38:346.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java⁄& ⁄(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaŸ Ÿ(Ï
Forg.jabref.model.TreeNodeTest.getRootOfSingleNode()?root@346.38:346.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java⁄& ⁄(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java⁄ ⁄(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java⁄1 ⁄(NÒ
3org.jabref.model.TreeNodeTest.getRootInSimpleTree()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getRootInSimpleTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getRootInSimpleTree2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java·> ·(Q2i
#org.jabref.model.TreeNode.getRoot()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‚  ‚('2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‡1 ‡(N2å
Forg.jabref.model.TreeNodeTest.getRootInSimpleTree()?root@352.38:352.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java·R ·(V2å
Forg.jabref.model.TreeNodeTest.getRootInSimpleTree()?root@352.38:352.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‚ ‚(2å
Forg.jabref.model.TreeNodeTest.getRootInSimpleTree()?node@353.38:353.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‚ ‚(2ì
Forg.jabref.model.TreeNodeTest.getRootInSimpleTree()?root@352.38:352.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java‡& ‡(*2ì
Forg.jabref.model.TreeNodeTest.getRootInSimpleTree()?node@353.38:353.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java·& ·(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(Ï
Forg.jabref.model.TreeNodeTest.getRootInSimpleTree()?root@352.38:352.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java‡& ‡(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java‡ ‡(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‡1 ‡(N™
Forg.jabref.model.TreeNodeTest.getRootInSimpleTree()?node@353.38:353.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java·& ·(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInSimpleTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java· ·(%2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java·> ·(Q2å
Forg.jabref.model.TreeNodeTest.getRootInSimpleTree()?root@352.38:352.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java·R ·(V˙
4org.jabref.model.TreeNodeTest.getRootInComplexTree()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ Ê($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getRootInComplexTree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getRootInComplexTree2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaË> Ë(R2i
#org.jabref.model.TreeNode.getRoot()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ  È('2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ1 Á(N2ç
Gorg.jabref.model.TreeNodeTest.getRootInComplexTree()?root@359.38:359.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaËS Ë(W2ç
Gorg.jabref.model.TreeNodeTest.getRootInComplexTree()?root@359.38:359.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ È(2ç
Gorg.jabref.model.TreeNodeTest.getRootInComplexTree()?node@360.38:360.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ È(2î
Gorg.jabref.model.TreeNodeTest.getRootInComplexTree()?root@359.38:359.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ& Á(*2î
Gorg.jabref.model.TreeNodeTest.getRootInComplexTree()?node@360.38:360.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaË& Ë(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ Ê(Ì
Gorg.jabref.model.TreeNodeTest.getRootInComplexTree()?root@359.38:359.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ& Á(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ Á(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ1 Á(NÆ
Gorg.jabref.model.TreeNodeTest.getRootInComplexTree()?node@360.38:360.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaË& Ë(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInComplexTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaË Ë(%2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaË> Ë(R2ç
Gorg.jabref.model.TreeNodeTest.getRootInComplexTree()?root@359.38:359.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaËS Ë(WË
Eorg.jabref.model.TreeNodeTest.isLeafIsCorrectForRootWithoutChildren()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ Ì(5"
isFinalfalse"À
declarationStringµ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isLeafIsCorrectForRootWithoutChildren</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*%isLeafIsCorrectForRootWithoutChildren2h
"org.jabref.model.TreeNode.isLeaf()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ Ô(2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ1 Ó(N2û
Xorg.jabref.model.TreeNodeTest.isLeafIsCorrectForRootWithoutChildren()?root@366.38:366.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ Ô(2•
Xorg.jabref.model.TreeNodeTest.isLeafIsCorrectForRootWithoutChildren()?root@366.38:366.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ& Ó(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ Ì(˛
Xorg.jabref.model.TreeNodeTest.isLeafIsCorrectForRootWithoutChildren()?root@366.38:366.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ& Ó(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ Ó(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ1 Ó(N¥
Aorg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÛ Û(1"
isFinalfalse"«
declarationString±<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeFromParentSetsParentToEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!removeFromParentSetsParentToEmpty2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı> ı(L2r
,org.jabref.model.TreeNode.removeFromParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˜ ˜(2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¯ ¯(#2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¯, ¯(52É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ1 Ù(N2ö
Torg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()?root@372.38:372.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaıM ı(Q2ö
Torg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()?node@373.38:373.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˜ ˜(2ö
Torg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()?node@373.38:373.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¯' ¯(+2°
Torg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()?root@372.38:372.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ& Ù(*2°
Torg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()?node@373.38:373.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaı& ı(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÛ Û(˙
Torg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()?root@372.38:372.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ& Ù(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ Ù(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ1 Ù(Nº
Torg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()?node@373.38:373.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaı& ı(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaı ı(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı> ı(L2ö
Torg.jabref.model.TreeNodeTest.removeFromParentSetsParentToEmpty()?root@372.38:372.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaıM ı(QÅ
Qorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java¸ ¸(A"
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeFromParentRemovesNodeFromChildrenCollection</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*1removeFromParentRemovesNodeFromChildrenCollection2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˛> ˛(L2r
,org.jabref.model.TreeNode.removeFromParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ Ä(2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÅ Å($2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˝1 ˝(N2™
dorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()?root@381.38:381.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˛M ˛(Q2™
dorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()?node@382.38:382.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ Ä(2™
dorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()?root@381.38:381.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÅ Å(2™
dorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()?node@382.38:382.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÅ0 Å(42±
dorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()?root@381.38:381.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˝& ˝(*2±
dorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()?node@382.38:382.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˛& ˛(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¸ ¸(ä
dorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()?root@381.38:381.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java˝& ˝(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˝ ˝(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˝1 ˝(N‹
dorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()?node@382.38:382.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java˛& ˛(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˛ ˛(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˛> ˛(L2™
dorg.jabref.model.TreeNodeTest.removeFromParentRemovesNodeFromChildrenCollection()?root@381.38:381.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˛M ˛(Qı
Iorg.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÖ Ö(9"
isFinalfalse"œ
declarationStringπ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeAllChildrenSetsParentOfChildToEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*)removeAllChildrenSetsParentOfChildToEmpty2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaá> á(L2s
-org.jabref.model.TreeNode.removeAllChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaâ â(2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaä ä(#2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaä, ä(52É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ1 Ü(N2¢
\org.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()?root@390.38:390.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaáM á(Q2¢
\org.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()?root@390.38:390.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaâ â(2¢
\org.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()?node@391.38:391.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaä' ä(+2©
\org.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()?root@390.38:390.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ& Ü(*2©
\org.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()?node@391.38:391.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaá& á(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÖ Ö(Ç
\org.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()?root@390.38:390.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ& Ü(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ Ü(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÜ1 Ü(NÃ
\org.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()?node@391.38:391.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaá& á(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaá á(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaá> á(L2¢
\org.jabref.model.TreeNodeTest.removeAllChildrenSetsParentOfChildToEmpty()?root@390.38:390.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaáM á(Q≠
Vorg.jabref.model.TreeNodeTest.removeAllChildrenRemovesAllNodesFromChildrenCollection()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaé é(F"
isFinalfalse"‹
declarationString∆<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeAllChildrenRemovesAllNodesFromChildrenCollection</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*6removeAllChildrenRemovesAllNodesFromChildrenCollection2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaê ê('2s
-org.jabref.model.TreeNode.removeAllChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaí í(2g
!java.util.Collections.emptyList()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaì! ì(*2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaì3 ì(>2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaè1 è(N2Ø
iorg.jabref.model.TreeNodeTest.removeAllChildrenRemovesAllNodesFromChildrenCollection()?root@399.38:399.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaê( ê(,2Ø
iorg.jabref.model.TreeNodeTest.removeAllChildrenRemovesAllNodesFromChildrenCollection()?root@399.38:399.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaí í(2Ø
iorg.jabref.model.TreeNodeTest.removeAllChildrenRemovesAllNodesFromChildrenCollection()?root@399.38:399.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaì. ì(22∂
iorg.jabref.model.TreeNodeTest.removeAllChildrenRemovesAllNodesFromChildrenCollection()?root@399.38:399.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaè& è(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaé é(è
iorg.jabref.model.TreeNodeTest.removeAllChildrenRemovesAllNodesFromChildrenCollection()?root@399.38:399.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaè& è(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaè è(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaè1 è(NÖ
=org.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(-"
isFinalfalse"√
declarationString≠<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFirstChildAtReturnsCorrect</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFirstChildAtReturnsCorrect2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaö ö(2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaú0 ú(32o
)org.jabref.model.TreeNode.getFirstChild()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaú  ú(-2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaò1 ò(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô1 ô(N2ñ
Porg.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()?root@408.38:408.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaö ö(2ñ
Porg.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()?node@409.38:409.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaö ö(2ñ
Porg.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()?node@409.38:409.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaú ú(2ñ
Porg.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()?root@408.38:408.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaú ú(2ù
Porg.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()?root@408.38:408.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaò& ò(*2ù
Porg.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()?node@409.38:409.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaô& ô(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(ˆ
Porg.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()?root@408.38:408.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaò& ò(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaò ò(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaò1 ò(Nˆ
Porg.jabref.model.TreeNodeTest.getFirstChildAtReturnsCorrect()?node@409.38:409.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaô& ô(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = new TreeNodeTestData.TreeNodeMock()*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaô ô(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô1 ô(Nô
?org.jabref.model.TreeNodeTest.getFirstChildAtLeafReturnsEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java† †(/"
isFinalfalse"≈
declarationStringØ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFirstChildAtLeafReturnsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFirstChildAtLeafReturnsEmpty2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¢> ¢(L2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java£ £(#2o
)org.jabref.model.TreeNode.getFirstChild()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java£, £(92É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java°1 °(N2ò
Rorg.jabref.model.TreeNodeTest.getFirstChildAtLeafReturnsEmpty()?root@417.38:417.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¢M ¢(Q2ò
Rorg.jabref.model.TreeNodeTest.getFirstChildAtLeafReturnsEmpty()?leaf@418.38:418.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java£' £(+2ü
Rorg.jabref.model.TreeNodeTest.getFirstChildAtLeafReturnsEmpty()?root@417.38:417.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java°& °(*2ü
Rorg.jabref.model.TreeNodeTest.getFirstChildAtLeafReturnsEmpty()?leaf@418.38:418.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¢& ¢(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java† †(¯
Rorg.jabref.model.TreeNodeTest.getFirstChildAtLeafReturnsEmpty()?root@417.38:417.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java°& °(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java° °(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java°1 °(N∏
Rorg.jabref.model.TreeNodeTest.getFirstChildAtLeafReturnsEmpty()?leaf@418.38:418.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java¢& ¢(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">leaf</mark> = TreeNodeTestData.getNodeAsChild(root)*leaf2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¢ ¢(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¢> ¢(L2ò
Rorg.jabref.model.TreeNodeTest.getFirstChildAtLeafReturnsEmpty()?root@417.38:417.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¢M ¢(Q¿
<org.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaß ß(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isNodeDescendantInFirstLevel</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isNodeDescendantInFirstLevel2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java©? ©(M2s
-org.jabref.model.TreeNode.isNodeDescendant(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java™ ™((2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java®1 ®(N2ï
Oorg.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()?root@424.38:424.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java©N ©(R2ï
Oorg.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()?root@424.38:424.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java™ ™(2ñ
Porg.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()?child@425.38:425.43CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java™) ™(.2ú
Oorg.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()?root@424.38:424.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java®& ®(*2ù
Porg.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()?child@425.38:425.43DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java©& ©(+2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaß ß(ı
Oorg.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()?root@424.38:424.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java®& ®(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java® ®(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java®1 ®(Nµ
Porg.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()?child@425.38:425.43VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java©& ©(+"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child</mark> = TreeNodeTestData.getNodeAsChild(root)*child2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java© ©(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java©? ©(M2ï
Oorg.jabref.model.TreeNodeTest.isNodeDescendantInFirstLevel()?root@424.38:424.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java©N ©(R∏
9org.jabref.model.TreeNodeTest.isNodeDescendantInComplex()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ Æ()"
isFinalfalse"ø
declarationString©<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isNodeDescendantInComplex</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isNodeDescendantInComplex2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∞D ∞(X2s
-org.jabref.model.TreeNode.isNodeDescendant(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java± ±((2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ1 Ø(N2í
Lorg.jabref.model.TreeNodeTest.isNodeDescendantInComplex()?root@431.38:431.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∞Y ∞(]2í
Lorg.jabref.model.TreeNodeTest.isNodeDescendantInComplex()?root@431.38:431.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java± ±(2ò
Rorg.jabref.model.TreeNodeTest.isNodeDescendantInComplex()?descendant@432.38:432.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java±) ±(32ô
Lorg.jabref.model.TreeNodeTest.isNodeDescendantInComplex()?root@431.38:431.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ& Ø(*2ü
Rorg.jabref.model.TreeNodeTest.isNodeDescendantInComplex()?descendant@432.38:432.48DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∞& ∞(02Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ Æ(Ú
Lorg.jabref.model.TreeNodeTest.isNodeDescendantInComplex()?root@431.38:431.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ& Ø(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ Ø(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ1 Ø(N 
Rorg.jabref.model.TreeNodeTest.isNodeDescendantInComplex()?descendant@432.38:432.48VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java∞& ∞(0"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">descendant</mark> = TreeNodeTestData.getNodeInComplexTree(root)*
descendant2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∞ ∞(%2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∞D ∞(X2í
Lorg.jabref.model.TreeNodeTest.isNodeDescendantInComplex()?root@431.38:431.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∞Y ∞(]Ú
=org.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ µ(-"
isFinalfalse"√
declarationString≠<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getChildrenReturnsAllChildren</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getChildrenReturnsAllChildren2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ π(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∫ ∫(2c
java.util.Arrays.asList(T...)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº º("2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº9 º(D2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∂1 ∂(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∑3 ∑(P2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∏3 ∏(P2ñ
Porg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?root@438.38:438.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ π(2ò
Rorg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?child1@439.38:439.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ π(2ñ
Porg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?root@438.38:438.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∫ ∫(2ò
Rorg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?child2@440.38:440.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∫ ∫(2ò
Rorg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?child1@439.38:439.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº# º()2ò
Rorg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?child2@440.38:440.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº+ º(12ñ
Porg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?root@438.38:438.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº4 º(82ù
Porg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?root@438.38:438.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∂& ∂(*2ü
Rorg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?child1@439.38:439.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∑& ∑(,2ü
Rorg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?child2@440.38:440.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∏& ∏(,2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaµ µ(ˆ
Porg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?root@438.38:438.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java∂& ∂(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∂ ∂(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∂1 ∂(N¸
Rorg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?child1@439.38:439.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java∑& ∑(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child1</mark> = new TreeNodeTestData.TreeNodeMock()*child12t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∑ ∑(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∑3 ∑(P¸
Rorg.jabref.model.TreeNodeTest.getChildrenReturnsAllChildren()?child2@440.38:440.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java∏& ∏(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child2</mark> = new TreeNodeTestData.TreeNodeMock()*child22t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∏ ∏(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∏3 ∏(P†
<org.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java¿ ¿(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeChildSetsParentToEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*removeChildSetsParentToEmpty2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¬> ¬(L2n
(org.jabref.model.TreeNode.removeChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ ƒ(2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≈ ≈(#2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≈, ≈(52É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¡1 ¡(N2ï
Oorg.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()?root@449.38:449.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¬M ¬(Q2ï
Oorg.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()?root@449.38:449.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ ƒ(2ï
Oorg.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()?node@450.38:450.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ ƒ(2ï
Oorg.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()?node@450.38:450.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≈' ≈(+2ú
Oorg.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()?root@449.38:449.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¡& ¡(*2ú
Oorg.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()?node@450.38:450.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¬& ¬(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¿ ¿(ı
Oorg.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()?root@449.38:449.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java¡& ¡(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¡ ¡(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¡1 ¡(N≤
Oorg.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()?node@450.38:450.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java¬& ¬(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¬ ¬(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¬> ¬(L2ï
Oorg.jabref.model.TreeNodeTest.removeChildSetsParentToEmpty()?root@449.38:449.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¬M ¬(Q¯
Lorg.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java… …(<"
isFinalfalse"“
declarationStringº<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeChildRemovesNodeFromChildrenCollection</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*,removeChildRemovesNodeFromChildrenCollection2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ> À(L2n
(org.jabref.model.TreeNode.removeChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕ Õ(2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaŒ Œ($2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java 1  (N2•
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?root@458.38:458.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀM À(Q2•
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?root@458.38:458.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕ Õ(2•
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?node@459.38:459.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÕ Õ(2•
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?root@458.38:458.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaŒ Œ(2•
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?node@459.38:459.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaŒ0 Œ(42¨
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?root@458.38:458.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java &  (*2¨
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?node@459.38:459.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ& À(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java… …(Ö
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?root@458.38:458.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java &  (*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java   (%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java 1  (N“
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?node@459.38:459.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ& À(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ À(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ> À(L2•
_org.jabref.model.TreeNodeTest.removeChildRemovesNodeFromChildrenCollection()?root@458.38:458.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀM À(Q≤
Aorg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java“ “(1"
isFinalfalse"«
declarationString±<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeChildIndexSetsParentToEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!removeChildIndexSetsParentToEmpty2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘> ‘(L2p
*org.jabref.model.TreeNode.removeChild(int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java÷ ÷(2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java◊ ◊(#2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java◊, ◊(52É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”1 ”(N2ö
Torg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()?root@467.38:467.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘M ‘(Q2ö
Torg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()?root@467.38:467.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java÷ ÷(2ö
Torg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()?node@468.38:468.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java◊' ◊(+2°
Torg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()?root@467.38:467.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java”& ”(*2°
Torg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()?node@468.38:468.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java‘& ‘(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java“ “(˙
Torg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()?root@467.38:467.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java”& ”(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java” ”(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”1 ”(Nº
Torg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()?node@468.38:468.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java‘& ‘(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java‘ ‘(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘> ‘(L2ö
Torg.jabref.model.TreeNodeTest.removeChildIndexSetsParentToEmpty()?root@467.38:467.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‘M ‘(Qˇ
Qorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java€ €(A"
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeChildIndexRemovesNodeFromChildrenCollection</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*1removeChildIndexRemovesNodeFromChildrenCollection2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›> ›(L2p
*org.jabref.model.TreeNode.removeChild(int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‡ ‡($2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‹1 ‹(N2™
dorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()?root@476.38:476.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›M ›(Q2™
dorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()?root@476.38:476.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(2™
dorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()?root@476.38:476.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‡ ‡(2™
dorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()?node@477.38:477.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‡0 ‡(42±
dorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()?root@476.38:476.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java‹& ‹(*2±
dorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()?node@477.38:477.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java›& ›(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java€ €(ä
dorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()?root@476.38:476.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java‹& ‹(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java‹ ‹(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‹1 ‹(N‹
dorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()?node@477.38:477.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java›& ›(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java› ›(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›> ›(L2™
dorg.jabref.model.TreeNodeTest.removeChildIndexRemovesNodeFromChildrenCollection()?root@476.38:476.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›M ›(Qﬁ
Aorg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java‰ ‰(1"
isFinalfalse"«
declarationString±<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">addThrowsExceptionIfNodeHasParent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!addThrowsExceptionIfNodeHasParent2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ> Ê(L2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁE Á(M2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÂ1 Â(N2ö
Torg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()?root@485.38:485.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊM Ê(Q2ö
Torg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()?root@485.38:485.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁ@ Á(D2ö
Torg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()?node@486.38:486.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÁN Á(R2°
Torg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()?root@485.38:485.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÂ& Â(*2°
Torg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()?node@486.38:486.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ& Ê(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java‰ ‰(˙
Torg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()?root@485.38:485.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÂ& Â(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÂ Â(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÂ1 Â(Nº
Torg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()?node@486.38:486.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ& Ê(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ Ê(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊ> Ê(L2ö
Torg.jabref.model.TreeNodeTest.addThrowsExceptionIfNodeHasParent()?root@485.38:485.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÊM Ê(QŒ"
Horg.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ Î(8"
isFinalfalse"Œ
declarationString∏<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveAllChildrenToAddsAtSpecifiedPosition</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*(moveAllChildrenToAddsAtSpecifiedPosition2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ Ó(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÒ Ò(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÚ Ú(2y
3org.jabref.model.TreeNode.moveAllChildrenTo(T, int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ Ù(2c
java.util.Arrays.asList(T...)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı ı("2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı? ı(J2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ1 Ï(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ1 Ì(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ3 Ô(P2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java3 (P2°
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?root@492.38:492.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ Ó(2°
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?node@493.38:493.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ Ó(2°
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?node@493.38:493.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÒ Ò(2£
]org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?child1@495.38:495.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÒ Ò(2°
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?node@493.38:493.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÚ Ú(2£
]org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?child2@496.38:496.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÚ Ú(2°
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?node@493.38:493.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ Ù(2°
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?root@492.38:492.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÙ Ù(#2£
]org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?child1@495.38:495.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı# ı()2£
]org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?child2@496.38:496.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı+ ı(12°
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?node@493.38:493.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı3 ı(72°
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?root@492.38:492.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaı: ı(>2®
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?root@492.38:492.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ& Ï(*2®
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?node@493.38:493.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ& Ì(*2™
]org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?child1@495.38:495.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ& Ô(,2™
]org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?child2@496.38:496.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java& (,2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ Î(Å
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?root@492.38:492.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ& Ï(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ Ï(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ1 Ï(NÅ
[org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?node@493.38:493.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ& Ì(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = new TreeNodeTestData.TreeNodeMock()*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ Ì(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÌ1 Ì(Ná
]org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?child1@495.38:495.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ& Ô(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child1</mark> = new TreeNodeTestData.TreeNodeMock()*child12t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ Ô(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÔ3 Ô(Pá
]org.jabref.model.TreeNodeTest.moveAllChildrenToAddsAtSpecifiedPosition()?child2@496.38:496.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java& (,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child2</mark> = new TreeNodeTestData.TreeNodeMock()*child22t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java (%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java3 (P÷"
>org.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java˘ ˘(."
isFinalfalse"ƒ
declarationStringÆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveAllChildrenToChangesParent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*moveAllChildrenToChangesParent2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¸ ¸(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaˇ ˇ(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ Ä(2y
3org.jabref.model.TreeNode.moveAllChildrenTo(T, int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ Ç(2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÉ. É(12k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÉ" É(+2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÑ. Ñ(12k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÑ" Ñ(+2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˙1 ˙(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˚1 ˚(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˝3 ˝(P2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˛3 ˛(P2ó
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?root@506.38:506.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¸ ¸(2ó
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?node@507.38:507.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¸ ¸(2ó
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?node@507.38:507.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaˇ ˇ(2ô
Sorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?child1@509.38:509.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaˇ ˇ(2ó
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?node@507.38:507.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ Ä(2ô
Sorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?child2@510.38:510.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÄ Ä(2ó
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?node@507.38:507.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ Ç(2ó
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?root@506.38:506.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÇ Ç(#2ó
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?root@506.38:506.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÉ É(2ô
Sorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?child1@509.38:509.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÉ É(!2ó
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?root@506.38:506.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÑ Ñ(2ô
Sorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?child2@510.38:510.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÑ Ñ(!2û
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?root@506.38:506.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˙& ˙(*2û
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?node@507.38:507.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˚& ˚(*2†
Sorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?child1@509.38:509.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˝& ˝(,2†
Sorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?child2@510.38:510.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˛& ˛(,2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˘ ˘(˜
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?root@506.38:506.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java˙& ˙(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˙ ˙(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˙1 ˙(N˜
Qorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?node@507.38:507.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java˚& ˚(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = new TreeNodeTestData.TreeNodeMock()*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˚ ˚(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˚1 ˚(N˝
Sorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?child1@509.38:509.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java˝& ˝(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child1</mark> = new TreeNodeTestData.TreeNodeMock()*child12t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˝ ˝(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˝3 ˝(P˝
Sorg.jabref.model.TreeNodeTest.moveAllChildrenToChangesParent()?child2@510.38:510.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java˛& ˛(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child2</mark> = new TreeNodeTestData.TreeNodeMock()*child22t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˛ ˛(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˛3 ˛(P¥
Jorg.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaà à(:"
isFinalfalse"–
declarationString∫<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveAllChildrenToDescendantThrowsException</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid**moveAllChildrenToDescendantThrowsException2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaä> ä(L2y
3org.jabref.model.TreeNode.moveAllChildrenTo(T, int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaåE å(V2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaâ1 â(N2£
]org.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()?root@521.38:521.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaäM ä(Q2£
]org.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()?root@521.38:521.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaå@ å(D2£
]org.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()?node@522.38:522.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaåW å([2™
]org.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()?root@521.38:521.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaâ& â(*2™
]org.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()?node@522.38:522.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaä& ä(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaà à(É
]org.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()?root@521.38:521.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaâ& â(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaâ â(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaâ1 â(NŒ
]org.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()?node@522.38:522.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaä& ä(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaä ä(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaä> ä(L2£
]org.jabref.model.TreeNodeTest.moveAllChildrenToDescendantThrowsException()?root@521.38:521.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaäM ä(Q†(
=org.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaê ê(-"
isFinalfalse"√
declarationString≠<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sortChildrenSortsInFirstLevel</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*sortChildrenSortsInFirstLevel2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaï ï(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javañ ñ(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(2ñ
Porg.jabref.model.TreeNode.sortChildren(java.util.Comparator<? super T>, boolean)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô ô(2|
6java.lang.String.compareToIgnoreCase(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô3 ô(F2~
8org.jabref.model.TreeNodeTestData.TreeNodeMock.getName()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô) ô(02~
8org.jabref.model.TreeNodeTestData.TreeNodeMock.getName()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaôJ ô(Q2c
java.util.Arrays.asList(T...)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaö ö("2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaöA ö(L2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaë1 ë(N2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaí3 í(P2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaì3 ì(P2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaî3 î(P2ñ
Porg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?root@529.38:529.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaï ï(2ò
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child2@531.38:531.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaï ï(2ñ
Porg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?root@529.38:529.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javañ ñ(2ò
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child3@532.38:532.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javañ ñ(2ñ
Porg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?root@529.38:529.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(2ò
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child1@530.38:530.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaó ó(2ñ
Porg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?root@529.38:529.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô ô(2î
Norg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?o1@537.27:537.29CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaô& ô((2î
Norg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?o2@537.31:537.33CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaôG ô(I2ò
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child1@530.38:530.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaö# ö()2ò
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child2@531.38:531.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaö+ ö(12ò
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child3@532.38:532.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaö3 ö(92ñ
Porg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?root@529.38:529.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaö< ö(@2ù
Porg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?root@529.38:529.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaë& ë(*2ü
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child1@530.38:530.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaí& í(,2ü
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child2@531.38:531.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaì& ì(,2ü
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child3@532.38:532.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaî& î(,2õ
Norg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?o1@537.27:537.29DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaô ô(2õ
Norg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?o2@537.31:537.33DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaô ô(!2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaê ê(ˆ
Porg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?root@529.38:529.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaë& ë(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaë ë(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaë1 ë(Nè
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child1@530.38:530.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaí& í(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child1</mark> = new TreeNodeTestData.TreeNodeMock("a")*child12t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaí í(%2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaí3 í(Pè
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child2@531.38:531.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaì& ì(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child2</mark> = new TreeNodeTestData.TreeNodeMock("b")*child22t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaì ì(%2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaì3 ì(Pè
Rorg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?child3@532.38:532.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaî& î(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child3</mark> = new TreeNodeTestData.TreeNodeMock("c")*child32t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaî î(%2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaî3 î(Pÿ
Norg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?o1@537.27:537.29VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaô ô("
type"
isFinalfalse"
declarationString o1*o12TYPEÿ
Norg.jabref.model.TreeNodeTest.sortChildrenSortsInFirstLevel()?o2@537.31:537.33VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaô ô(!"
type"
isFinalfalse"
declarationString o2*o22TYPE˜-
Gorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaû û(7"
isFinalfalse"Õ
declarationString∑<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sortChildrenRecursiveSortsInDeeperLevel</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*'sortChildrenRecursiveSortsInDeeperLevel2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java†> †(Q2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java§ §(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java• •(2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¶ ¶(2ñ
Porg.jabref.model.TreeNode.sortChildren(java.util.Comparator<? super T>, boolean)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java® ®(2|
6java.lang.String.compareToIgnoreCase(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java®3 ®(F2~
8org.jabref.model.TreeNodeTestData.TreeNodeMock.getName()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java®) ®(02~
8org.jabref.model.TreeNodeTestData.TreeNodeMock.getName()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java®J ®(Q2c
java.util.Arrays.asList(T...)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java© ©("2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java©A ©(L2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaü1 ü(N2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java°3 °(P2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¢3 ¢(P2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java£3 £(P2†
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?root@543.38:543.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java†R †(V2†
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?node@544.38:544.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java§ §(2¢
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child2@546.38:546.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java§ §(2†
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?node@544.38:544.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java• •(2¢
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child3@547.38:547.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java• •(2†
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?node@544.38:544.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¶ ¶(2¢
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child1@545.38:545.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¶ ¶(2†
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?root@543.38:543.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java® ®(2û
Xorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?o1@552.27:552.29CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java®& ®((2û
Xorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?o2@552.31:552.33CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java®G ®(I2¢
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child1@545.38:545.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java©# ©()2¢
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child2@546.38:546.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java©+ ©(12¢
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child3@547.38:547.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java©3 ©(92†
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?node@544.38:544.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java©< ©(@2ß
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?root@543.38:543.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaü& ü(*2ß
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?node@544.38:544.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java†& †(*2©
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child1@545.38:545.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java°& °(,2©
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child2@546.38:546.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java¢& ¢(,2©
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child3@547.38:547.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java£& £(,2•
Xorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?o1@552.27:552.29DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java® ®(2•
Xorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?o2@552.31:552.33DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java® ®(!2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaû û(Ä
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?root@543.38:543.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaü& ü(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaü ü(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaü1 ü(N“
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?node@544.38:544.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java†& †(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInSimpleTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java† †(%2´
eorg.jabref.model.TreeNodeTestData.getNodeInSimpleTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java†> †(Q2†
Zorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?root@543.38:543.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java†R †(Vô
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child1@545.38:545.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java°& °(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child1</mark> = new TreeNodeTestData.TreeNodeMock("a")*child12t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java° °(%2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java°3 °(Pô
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child2@546.38:546.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java¢& ¢(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child2</mark> = new TreeNodeTestData.TreeNodeMock("b")*child22t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java¢ ¢(%2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¢3 ¢(Pô
\org.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?child3@547.38:547.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java£& £(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child3</mark> = new TreeNodeTestData.TreeNodeMock("c")*child32t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java£ £(%2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java£3 £(P‚
Xorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?o1@552.27:552.29VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java® ®("
type"
isFinalfalse"
declarationString o1*o12TYPE‚
Xorg.jabref.model.TreeNodeTest.sortChildrenRecursiveSortsInDeeperLevel()?o2@552.31:552.33VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java® ®(!"
type"
isFinalfalse"
declarationString o2*o22TYPE‘
9org.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java≠ ≠()"
isFinalfalse"ø
declarationString©<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">copySubtreeCopiesChildren</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*copySubtreeCopiesChildren2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ> Ø(L2m
'org.jabref.model.TreeNode.copySubtree()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java±8 ±(C2`
java.util.Optional.empty()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≤ ≤(#2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≤2 ≤(;2m
'org.jabref.model.TreeNode.getChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≥ ≥(*2u
/org.jabref.model.TreeNode.getNumberOfChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¥ ¥(-2u
/org.jabref.model.TreeNode.getNumberOfChildren()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¥< ¥(O2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ1 Æ(N2í
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?root@558.38:558.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaØM Ø(Q2í
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?root@558.38:558.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java±3 ±(72ò
Rorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?copiedRoot@561.38:561.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≤' ≤(12ò
Rorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?copiedRoot@561.38:561.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≥ ≥(2í
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?node@559.38:559.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≥6 ≥(:2í
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?root@558.38:558.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¥ ¥(2ò
Rorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?copiedRoot@561.38:561.48CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java¥1 ¥(;2ô
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?root@558.38:558.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ& Æ(*2ô
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?node@559.38:559.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ& Ø(*2ü
Rorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?copiedRoot@561.38:561.48DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java±& ±(02Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java≠ ≠(Ú
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?root@558.38:558.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ& Æ(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ Æ(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÆ1 Æ(N¨
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?node@559.38:559.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ& Ø(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeAsChild(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ Ø(%2¶
`org.jabref.model.TreeNodeTestData.getNodeAsChild(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaØ> Ø(L2í
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?root@558.38:558.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaØM Ø(Q
Rorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?copiedRoot@561.38:561.48VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java±& ±(0"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">copiedRoot</mark> = root.copySubtree()*
copiedRoot2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java± ±(%2m
'org.jabref.model.TreeNode.copySubtree()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java±8 ±(C2í
Lorg.jabref.model.TreeNodeTest.copySubtreeCopiesChildren()?root@558.38:558.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java±3 ±(7Ê
Iorg.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java∏ ∏(9"
isFinalfalse"œ
declarationStringπ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">addChildSomewhereInTreeInvokesChangeEvent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*)addChildSomewhereInTreeInvokesChangeEvent2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∫> ∫(R2ú
Vorg.jabref.model.TreeNode.subscribeToDescendantChanged(java.util.function.Consumer<T>)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº º()2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaæ æ(2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ1 π(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaæ æ(72¢
\org.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()?root@569.38:569.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∫S ∫(W2¢
\org.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()?root@569.38:569.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº º(2z
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaº* º(42¢
\org.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()?node@570.38:570.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaæ æ(2z
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaø ø(2¢
\org.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()?node@570.38:570.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaø" ø(&2©
\org.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()?root@569.38:569.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ& π(*2©
\org.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()?node@570.38:570.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∫& ∫(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∏ ∏(Ç
\org.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()?root@569.38:569.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ& π(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ π(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaπ1 π(Nÿ
\org.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()?node@570.38:570.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java∫& ∫(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInComplexTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∫ ∫(%2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∫> ∫(R2¢
\org.jabref.model.TreeNodeTest.addChildSomewhereInTreeInvokesChangeEvent()?root@569.38:569.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∫S ∫(WÃ
Iorg.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java√ √(9"
isFinalfalse"œ
declarationStringπ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">moveNodeSomewhereInTreeInvokesChangeEvent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*)moveNodeSomewhereInTreeInvokesChangeEvent2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≈> ≈(R2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆C ∆(F2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆7 ∆(@2ú
Vorg.jabref.model.TreeNode.subscribeToDescendantChanged(java.util.function.Consumer<T>)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java» »()2i
#org.jabref.model.TreeNode.moveTo(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java   (2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ1 ƒ(N2¢
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?root@580.38:580.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≈S ≈(W2¢
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?node@581.38:581.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆2 ∆(62¢
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?root@580.38:580.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java» »(2z
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java»* »(42¢
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?node@581.38:581.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java   (2¢
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?root@580.38:580.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java   (2z
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ À(2¢
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?root@580.38:580.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÀ" À(&2z
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ Ã(2ß
aorg.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?oldParent@582.38:582.47CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÃ" Ã(+2©
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?root@580.38:580.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ& ƒ(*2©
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?node@581.38:581.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java≈& ≈(*2Æ
aorg.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?oldParent@582.38:582.47DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java∆& ∆(/2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java√ √(Ç
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?root@580.38:580.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ& ƒ(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ ƒ(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaƒ1 ƒ(Nÿ
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?node@581.38:581.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java≈& ≈(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInComplexTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java≈ ≈(%2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≈> ≈(R2¢
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?root@580.38:580.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java≈S ≈(W
aorg.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?oldParent@582.38:582.47VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java∆& ∆(/"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">oldParent</mark> = node.getParent().get()*	oldParent2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java∆ ∆(%2^
java.util.Optional.get()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆C ∆(F2k
%org.jabref.model.TreeNode.getParent()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆7 ∆(@2¢
\org.jabref.model.TreeNodeTest.moveNodeSomewhereInTreeInvokesChangeEvent()?node@581.38:581.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java∆2 ∆(6Ú
Lorg.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java– –(<"
isFinalfalse"“
declarationStringº<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeChildSomewhereInTreeInvokesChangeEvent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*,removeChildSomewhereInTreeInvokesChangeEvent2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java“> “(R2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”3 ”(;2ú
Vorg.jabref.model.TreeNode.subscribeToDescendantChanged(java.util.function.Consumer<T>)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java’ ’()2n
(org.jabref.model.TreeNode.removeChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java◊ ◊(2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java—1 —(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”@ ”(]2•
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?root@593.38:593.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java“S “(W2•
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?node@594.38:594.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”. ”(22•
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?root@593.38:593.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java’ ’(2z
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java’* ’(42•
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?node@594.38:594.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java◊ ◊(2¶
`org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?child@595.38:595.43CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java◊ ◊(2z
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÿ ÿ(2•
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?node@594.38:594.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÿ" ÿ(&2¨
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?root@593.38:593.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java—& —(*2¨
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?node@594.38:594.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java“& “(*2≠
`org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?child@595.38:595.43DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java”& ”(+2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java– –(Ö
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?root@593.38:593.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java—& —(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java— —(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java—1 —(Nﬁ
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?node@594.38:594.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java“& “(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInComplexTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java“ “(%2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java“> “(R2•
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?root@593.38:593.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java“S “(W¨
`org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?child@595.38:595.43VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java”& ”(+"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">child</mark> = node.addChild(new TreeNodeTestData.TreeNodeMock())*child2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java” ”(%2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”3 ”(;2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”@ ”(]2•
_org.jabref.model.TreeNodeTest.removeChildSomewhereInTreeInvokesChangeEvent()?node@594.38:594.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java”. ”(2Õ
Qorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java‹ ‹(A"
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeChildIndexSomewhereInTreeInvokesChangeEvent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*1removeChildIndexSomewhereInTreeInvokesChangeEvent2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬁ> ﬁ(R2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(2ú
Vorg.jabref.model.TreeNode.subscribeToDescendantChanged(java.util.function.Consumer<T>)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java· ·()2p
*org.jabref.model.TreeNode.removeChild(int)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java„ „(2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›1 ›(N2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(72™
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?root@605.38:605.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬁS ﬁ(W2™
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?node@606.38:606.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬂ ﬂ(2™
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?root@605.38:605.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java· ·(2z
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java·* ·(42™
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?node@606.38:606.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java„ „(2z
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‰ ‰(2™
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?node@606.38:606.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java‰" ‰(&2±
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?root@605.38:605.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java›& ›(*2±
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?node@606.38:606.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬁ& ﬁ(*2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java‹ ‹(ä
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?root@605.38:605.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.java›& ›(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock()*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java› ›(%2É
=org.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java›1 ›(NË
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?node@606.38:606.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬁ& ﬁ(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = TreeNodeTestData.getNodeInComplexTree(root)*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬁ ﬁ(%2¨
forg.jabref.model.TreeNodeTestData.getNodeInComplexTree(org.jabref.model.TreeNodeTestData.TreeNodeMock)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬁ> ﬁ(R2™
dorg.jabref.model.TreeNodeTest.removeChildIndexSomewhereInTreeInvokesChangeEvent()?root@605.38:605.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaﬁS ﬁ(Wõ
8org.jabref.model.TreeNodeTest.findChildrenWithSameName()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.javaË Ë(("
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">findChildrenWithSameName</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*findChildrenWithSameName2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ4 Í(<2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ4 Î(<2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ4 Ï(<2c
java.util.Arrays.asList(T...)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ Ó("2ó
Qorg.jabref.model.TreeNode.findChildrenSatisfying(java.util.function.Predicate<T>)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ= Ó(S2o
)java.lang.String.equals(java.lang.Object)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓd Ó(j2~
8org.jabref.model.TreeNodeTestData.TreeNodeMock.getName()CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓt Ó({2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ1 È(N2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍA Í(^2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎA Î(^2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏA Ï(^2ë
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?root@617.38:617.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ/ Í(32ì
Morg.jabref.model.TreeNodeTest.findChildrenWithSameName()?childB@618.38:618.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ- Î(32ë
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?root@617.38:617.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ/ Ï(32ë
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?root@617.38:617.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ# Ó('2ë
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?node@619.38:619.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ) Ó(-2ì
Morg.jabref.model.TreeNodeTest.findChildrenWithSameName()?childA@620.38:620.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ/ Ó(52ë
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?root@617.38:617.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓ8 Ó(<2ï
Oorg.jabref.model.TreeNodeTest.findChildrenWithSameName()?treeNode@622.84:622.92CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓk Ó(s2ò
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?root@617.38:617.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ& È(*2ö
Morg.jabref.model.TreeNodeTest.findChildrenWithSameName()?childB@618.38:618.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ& Í(,2ò
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?node@619.38:619.42DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ& Î(*2ö
Morg.jabref.model.TreeNodeTest.findChildrenWithSameName()?childA@620.38:620.44DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ& Ï(,2ú
Oorg.jabref.model.TreeNodeTest.findChildrenWithSameName()?treeNode@622.84:622.92DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓT Ó(\2Q
voidRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaË Ë(Ñ
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?root@617.38:617.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ& È(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">root</mark> = new TreeNodeTestData.TreeNodeMock("A")*root2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ È(%2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÈ1 È(Nö
Morg.jabref.model.TreeNodeTest.findChildrenWithSameName()?childB@618.38:618.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ& Í(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">childB</mark> = root.addChild(new TreeNodeTestData.TreeNodeMock("B"))*childB2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ Í(%2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ4 Í(<2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍA Í(^2ë
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?root@617.38:617.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÍ/ Í(3ò
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?node@619.38:619.42VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ& Î(*"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">node</mark> = childB.addChild(new TreeNodeTestData.TreeNodeMock("A"))*node2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ Î(%2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ4 Î(<2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎA Î(^2ì
Morg.jabref.model.TreeNodeTest.findChildrenWithSameName()?childB@618.38:618.44CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÎ- Î(3ö
Morg.jabref.model.TreeNodeTest.findChildrenWithSameName()?childA@620.38:620.44VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ& Ï(,"%
typeTreeNodeTestData.TreeNodeMock"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>TreeNodeTestData.TreeNodeMock <mark class="class-field">childA</mark> = root.addChild(new TreeNodeTestData.TreeNodeMock("A"))*childA2t
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ Ï(%2k
%org.jabref.model.TreeNode.addChild(T)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ4 Ï(<2ì
Morg.jabref.model.TreeNodeTestData.TreeNodeMock.TreeNodeMock(java.lang.String)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏA Ï(^2ë
Korg.jabref.model.TreeNodeTest.findChildrenWithSameName()?root@617.38:617.42CALL<
0src\test\java\org\jabref\model\TreeNodeTest.javaÏ/ Ï(3Â
Oorg.jabref.model.TreeNodeTest.findChildrenWithSameName()?treeNode@622.84:622.92VARIABLE<
0src\test\java\org\jabref\model\TreeNodeTest.javaÓT Ó(\"
type"
isFinalfalse"
declarationString	 treeNode*treeNode2TYPE·
4org.jabref.model.TreeNodeTest?subscriber@21.44:21.54VARIABLE:
0src\test\java\org\jabref\model\TreeNodeTest.java, (6"
isFinalfalse"/
type'Consumer<TreeNodeTestData.TreeNodeMock>"á
declarationStringr<mark class="modifier"> </mark>Consumer<TreeNodeTestData.TreeNodeMock> <mark class="class-field">subscriber</mark>"
isStaticfalse"
accesspackage_private*
subscriber2_
java.util.function.ConsumerTYPE:
0src\test\java\org\jabref\model\TreeNodeTest.java (2{
.org.jabref.model.TreeNodeTestData.TreeNodeMockTYPE_ARGUMENT:
0src\test\java\org\jabref\model\TreeNodeTest.java (*à
9org.jabref.model.TreeNodeTest.WrongTreeNodeImplementationCLASS<
0src\test\java\org\jabref\model\TreeNodeTest.javaÒ Ò(4"(
packageorg.jabref.model.TreeNodeTest"
isFinalfalse"
inner classfalse"

isAbstractfalse"…
declarationString≥<mark class="modifier">private </mark><mark class="modifier">class </mark>WrongTreeNodeImplementation<mark class="modifier"> extends </mark>TreeNode<TreeNodeTestData.TreeNodeMock>"
accessprivate*WrongTreeNodeImplementation2§
Worg.jabref.model.TreeNodeTest.WrongTreeNodeImplementation.WrongTreeNodeImplementation()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.javaˆ ˆ(*2ë
Dorg.jabref.model.TreeNodeTest.WrongTreeNodeImplementation.copyNode()DECLARATION<
0src\test\java\org\jabref\model\TreeNodeTest.java˚- ˚(52a
org.jabref.model.TreeNodeEXTEND<
0src\test\java\org\jabref\model\TreeNodeTest.javaÒ= Ò(E2Ñ
.org.jabref.model.TreeNodeTestData.TreeNodeMockEXTEND_TYPE_ARGUMENT<
0src\test\java\org\jabref\model\TreeNodeTest.javaÒF Ò(cΩ
Worg.jabref.model.TreeNodeTest.WrongTreeNodeImplementation.WrongTreeNodeImplementation()CONSTRUCTOR<
0src\test\java\org\jabref\model\TreeNodeTest.javaˆ ˆ(*"s
declarationString^<mark class="modifier">public </mark><mark class="method">WrongTreeNodeImplementation</mark>()*WrongTreeNodeImplementation2|
6org.jabref.model.TreeNode.TreeNode(java.lang.Class<T>)CALL<
0src\test\java\org\jabref\model\TreeNodeTest.java˜ ˜(2Ü
9org.jabref.model.TreeNodeTest.WrongTreeNodeImplementationRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.javaˆ ˆ(*∂
Dorg.jabref.model.TreeNodeTest.WrongTreeNodeImplementation.copyNode()METHOD<
0src\test\java\org\jabref\model\TreeNodeTest.java˚- ˚(5"
isFinalfalse"≠
declarationStringó<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>TreeNodeTestData.TreeNodeMock <mark class="method">copyNode</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"%
typeTreeNodeTestData.TreeNodeMock*copyNode2{
.org.jabref.model.TreeNodeTestData.TreeNodeMockRETURN_TYPE<
0src\test\java\org\jabref\model\TreeNodeTest.java˚  ˚(,