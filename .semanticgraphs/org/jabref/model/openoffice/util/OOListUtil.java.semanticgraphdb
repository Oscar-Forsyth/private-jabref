
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.javaÇ
+org.jabref.model.openoffice.util.OOListUtilCLASSH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java ("+
package org.jabref.model.openoffice.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"h
declarationStringS<mark class="modifier">public </mark><mark class="modifier">class </mark>OOListUtil"
accesspublic*
OOListUtil2æ
eorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)DECLARATIONH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
! 
($2ï
<org.jabref.model.openoffice.util.OOListUtil.makeIndices(int)DECLARATIONH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java  (+2∂
]org.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)DECLARATIONH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java1 (6ƒ
eorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)METHODH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
! 
($"
isFinalfalse"≥
declarationStringù<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;U&gt; <mark class="method">map</mark>(List&lt;T&gt; list<mark class="modifier"><mark class="modifier">,</mark></mark> Function&lt;T<mark class="modifier"><mark class="modifier">,</mark></mark> U&gt; fun)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<U>*map2û
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java& (-2¢
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java ( 2o
java.util.Collection.stream()CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2v
$java.util.stream.Collectors.toList()CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java9 (?2º
jorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)!listCALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2ª
iorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)!funCALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java! ($2¡
jorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)!list	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
- 
(12¿
iorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)!fun	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
B 
(E2g
java.util.ListRETURN_TYPEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
 
(2…
gorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>).URETURN_TYPE_ARGUMENTH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
 
(2√
gorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>).TTYPE_PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
 
(2√
gorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>).UTYPE_PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
 
(ÿ
jorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)!list	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
- 
(1"
typeList<T>"
isFinalfalse"E
declarationString0List<<mark class="type-parameter">T</mark>> list*list2`
java.util.ListTYPEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
% 
()2¬
gorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>).TTYPE_ARGUMENTH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
* 
(+¯
iorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)!fun	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
B 
(E"
typeFunction<T, U>"
isFinalfalse"ç
declarationStringxFunction<<mark class="type-parameter">T</mark><mark class="modifier">,</mark> <mark class="type-parameter">U</mark>> fun*fun2m
java.util.function.FunctionTYPEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
3 
(;2¬
gorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>).UTYPE_ARGUMENTH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
< 
(=2¬
gorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>).TTYPE_ARGUMENTH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
? 
(@∆
gorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>).TTYPE_PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
 
(*T∆
gorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>).UTYPE_PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java
 
(*U¬
<org.jabref.model.openoffice.util.OOListUtil.makeIndices(int)METHODH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java  (+"
isFinalfalse"¬
declarationString¨<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;Integer&gt; <mark class="method">makeIndices</mark>(<mark class="modifier">int</mark> len)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<Integer>*makeIndices2û
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java8 (?2u
#java.util.stream.Stream.limit(long)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java- (22ô
Gjava.util.stream.Stream.iterate(T, java.util.function.UnaryOperator<T>)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2v
$java.util.stream.Collectors.toList()CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.javaK (Q2ú
Jorg.jabref.model.openoffice.util.OOListUtil.makeIndices(int)?i@18.33:18.34CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java& ('2í
@org.jabref.model.openoffice.util.OOListUtil.makeIndices(int)!lenCALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java3 (62ó
@org.jabref.model.openoffice.util.OOListUtil.makeIndices(int)!len	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java0 (32£
Jorg.jabref.model.openoffice.util.OOListUtil.makeIndices(int)?i@18.33:18.34DECLARATIONH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java! ("2g
java.util.ListRETURN_TYPEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2s
java.lang.IntegerRETURN_TYPE_ARGUMENTH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (Œ
@org.jabref.model.openoffice.util.OOListUtil.makeIndices(int)!len	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java0 (3"
typeint"
isFinalfalse":
declarationString%<mark class="modifier">int</mark> len*len2U
intTYPEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java, (/ﬁ
Jorg.jabref.model.openoffice.util.OOListUtil.makeIndices(int)?i@18.33:18.34VARIABLEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java! (""
type"
isFinalfalse"
declarationString i*i2TYPEí"
]org.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)METHODH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java1 (6"
isFinalfalse"Ö
declarationStringÔ<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;Integer&gt; <mark class="method">order</mark>(List&lt;T&gt; list<mark class="modifier"><mark class="modifier">,</mark></mark> Comparator&lt;U&gt; comparator)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<Integer>*order2é
<org.jabref.model.openoffice.util.OOListUtil.makeIndices(int)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java  (+2g
java.util.List.size()CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java1 (52Ü
4java.util.List.sort(java.util.Comparator<? super E>)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2t
"java.util.Comparator.compare(T, T)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java* (12i
java.util.List.get(int)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java7 (:2i
java.util.List.get(int)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.javaD (G2¥
borg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)!listCALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java, (02√
qorg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?indices@25.22:25.29CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2∫
horg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)!comparatorCALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java ()2¥
borg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)!listCALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java2 (62Ω
korg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?a@26.22:26.23CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java; (<2¥
borg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)!listCALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java? (C2Ω
korg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?b@26.25:26.26CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.javaH (I2√
qorg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?indices@25.22:25.29CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2π
borg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)!list	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java? (C2ø
horg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)!comparator	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.javaS (]2 
qorg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?indices@25.22:25.29DECLARATIONH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2ƒ
korg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?a@26.22:26.23DECLARATIONH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2ƒ
korg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?b@26.25:26.26DECLARATIONH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2g
java.util.ListRETURN_TYPEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java# ('2s
java.lang.IntegerRETURN_TYPE_ARGUMENTH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java( (/2ª
_org.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>).TTYPE_PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2ª
_org.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>).UTYPE_PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java  (!Ç
qorg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?indices@25.22:25.29VARIABLEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java ("
typeList<Integer>"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>List<Integer> <mark class="class-field">indices</mark> = makeIndices(list.size())*indices2`
java.util.ListTYPEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2l
java.lang.IntegerTYPE_ARGUMENTH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (2é
<org.jabref.model.openoffice.util.OOListUtil.makeIndices(int)CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java  (+2g
java.util.List.size()CALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java1 (52¥
borg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)!listCALLH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java, (0§
borg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)!list	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java? (C"
typeList<T>"
isFinalfalse"!
declarationStringList<T> list*list2`
java.util.ListTYPEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java7 (;2∫
_org.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>).TTYPE_ARGUMENTH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java< (=Ï
horg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)!comparator	PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.javaS (]"
typeComparator<U>"
isFinalfalse"Q
declarationString<Comparator<<mark class="type-parameter">U</mark>> comparator*
comparator2f
java.util.ComparatorTYPEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.javaE (O2∫
_org.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>).UTYPE_ARGUMENTH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.javaP (Qˇ
korg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?a@26.22:26.23VARIABLEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java ("
type"
isFinalfalse"
declarationString a*a2TYPEˇ
korg.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>)?b@26.25:26.26VARIABLEH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java ("
type"
isFinalfalse"
declarationString b*b2TYPEÙ
_org.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>).TTYPE_PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (*T2≥
_org.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>).UEXTENDH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java (æ
_org.jabref.model.openoffice.util.OOListUtil.order(java.util.List<T>, java.util.Comparator<U>).UTYPE_PARAMETERH
>src\main\java\org\jabref\model\openoffice\util\OOListUtil.java  (!*U