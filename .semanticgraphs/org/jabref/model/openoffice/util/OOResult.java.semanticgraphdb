
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaê
)org.jabref.model.openoffice.util.OOResultCLASSF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java ("+
package org.jabref.model.openoffice.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"f
declarationStringQ<mark class="modifier">public </mark><mark class="modifier">class </mark>OOResult"
accesspublic*OOResult2∑
`org.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2Ü
/org.jabref.model.openoffice.util.OOResult.ok(R)DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java( (*2â
2org.jabref.model.openoffice.util.OOResult.error(E)DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (  (-2å
5org.jabref.model.openoffice.util.OOResult.isPresent()DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java$ $(2ä
3org.jabref.model.openoffice.util.OOResult.isEmpty()DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java( ((2ä
3org.jabref.model.openoffice.util.OOResult.isError()DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java, ,(2á
0org.jabref.model.openoffice.util.OOResult.isOK()DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java0 0(2Ü
/org.jabref.model.openoffice.util.OOResult.get()DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java4 4(2ã
4org.jabref.model.openoffice.util.OOResult.getError()DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java; ;(2™
Sorg.jabref.model.openoffice.util.OOResult.ifPresent(java.util.function.Consumer<R>)DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java? ?(#2®
Qorg.jabref.model.openoffice.util.OOResult.ifError(java.util.function.Consumer<E>)DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaF F(!2ß
Porg.jabref.model.openoffice.util.OOResult.map(java.util.function.Function<R, S>)DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM M(!2¨
Uorg.jabref.model.openoffice.util.OOResult.mapError(java.util.function.Function<E, F>)DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU U(&2é
7org.jabref.model.openoffice.util.OOResult.getOptional()DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java` `("2è
8org.jabref.model.openoffice.util.OOResult.asVoidResult()DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javag g('2ì
<org.jabref.model.openoffice.util.OOResult?result@17.30:17.36DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java ($2í
;org.jabref.model.openoffice.util.OOResult?error@18.30:18.35DECLARATIONF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (#2Ö
+org.jabref.model.openoffice.util.OOResult.RTYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2Ö
+org.jabref.model.openoffice.util.OOResult.ETYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (Î
`org.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)CONSTRUCTORF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java ("ó
declarationStringÅ<mark class="modifier">private </mark><mark class="method">OOResult</mark>(Optional&lt;<mark class="type-parameter">R</mark>&gt; result<mark class="modifier"><mark class="modifier">,</mark></mark> Optional&lt;<mark class="type-parameter">E</mark>&gt; error)*OOResult2∑
gorg.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)!resultCALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2∂
forg.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)!errorCALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2å
<org.jabref.model.openoffice.util.OOResult?result@17.30:17.36CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2ã
;org.jabref.model.openoffice.util.OOResult?error@18.30:18.35CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2º
gorg.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)!result	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java! ('2ª
forg.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)!error	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java5 (:2Ä
)org.jabref.model.openoffice.util.OOResultRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (£
gorg.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)!result	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java! ('"
typeOptional<R>"
isFinalfalse"K
declarationString6Optional<<mark class="type-parameter">R</mark>> result*result2b
java.util.OptionalTYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2Ñ
+org.jabref.model.openoffice.util.OOResult.RTYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (†
forg.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)!error	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java5 (:"
typeOptional<E>"
isFinalfalse"J
declarationString5Optional<<mark class="type-parameter">E</mark>> error*error2b
java.util.OptionalTYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java) (12Ñ
+org.jabref.model.openoffice.util.OOResult.ETYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java2 (3¬
/org.jabref.model.openoffice.util.OOResult.ok(R)METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java( (*"
isFinalfalse"
declarationString⁄<mark class="modifier">public </mark><mark class="modifier">static </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; esult&lt;<mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark><mark class="type-parameter">E</mark>&gt; <mark class="method">ok</mark>(<mark class="type-parameter">R</mark> result)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOOResult<R, E>*ok2h
java.util.Optional.of(T)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java' ()2j
java.util.Optional.empty()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java< (A2∞
`org.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2Ü
6org.jabref.model.openoffice.util.OOResult.ok(R)!resultCALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java* (02ã
6org.jabref.model.openoffice.util.OOResult.ok(R)!result	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java- (32Ä
)org.jabref.model.openoffice.util.OOResultRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (!2ë
1org.jabref.model.openoffice.util.OOResult.ok(R).RRETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java" (#2ë
1org.jabref.model.openoffice.util.OOResult.ok(R).ERETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java% (&2ã
1org.jabref.model.openoffice.util.OOResult.ok(R).RTYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2ã
1org.jabref.model.openoffice.util.OOResult.ok(R).ETYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (˜
6org.jabref.model.openoffice.util.OOResult.ok(R)!result	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java- (3"	
typeR"
isFinalfalse"A
declarationString,<mark class="type-parameter">R</mark> result*result2Å
1org.jabref.model.openoffice.util.OOResult.ok(R).RTYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java+ (,é
1org.jabref.model.openoffice.util.OOResult.ok(R).RTYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (*Ré
1org.jabref.model.openoffice.util.OOResult.ok(R).ETYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (*E⁄
2org.jabref.model.openoffice.util.OOResult.error(E)METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (  (-"
isFinalfalse"Ú
declarationString‹<mark class="modifier">public </mark><mark class="modifier">static </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; esult&lt;<mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark><mark class="type-parameter">E</mark>&gt; <mark class="method">error</mark>(<mark class="type-parameter">E</mark> error)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOOResult<R, E>*error2j
java.util.Optional.empty()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java!' !(,2h
java.util.Optional.of(T)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java!9 !(;2∞
`org.jabref.model.openoffice.util.OOResult.OOResult(java.util.Optional<R>, java.util.Optional<E>)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java! !(2à
8org.jabref.model.openoffice.util.OOResult.error(E)!errorCALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java!< !(A2ç
8org.jabref.model.openoffice.util.OOResult.error(E)!error	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java 0  (52Ä
)org.jabref.model.openoffice.util.OOResultRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java   (!2î
4org.jabref.model.openoffice.util.OOResult.error(E).RRETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java "  (#2î
4org.jabref.model.openoffice.util.OOResult.error(E).ERETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java %  (&2é
4org.jabref.model.openoffice.util.OOResult.error(E).RTYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java   (2é
4org.jabref.model.openoffice.util.OOResult.error(E).ETYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java   (˙
8org.jabref.model.openoffice.util.OOResult.error(E)!error	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java 0  (5"	
typeE"
isFinalfalse"@
declarationString+<mark class="type-parameter">E</mark> error*error2Ñ
4org.jabref.model.openoffice.util.OOResult.error(E).ETYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java .  (/ë
4org.jabref.model.openoffice.util.OOResult.error(E).RTYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java   (*Rë
4org.jabref.model.openoffice.util.OOResult.error(E).ETYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java   (*Eà
5org.jabref.model.openoffice.util.OOResult.isPresent()METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java$ $("
isFinalfalse"∑
declarationString°<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; <mark class="modifier">boolean</mark> <mark class="method">isPresent</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*	isPresent2n
java.util.Optional.isPresent()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java% %(2å
<org.jabref.model.openoffice.util.OOResult?result@17.30:17.36CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java% %(2^
booleanRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java$ $(ã
3org.jabref.model.openoffice.util.OOResult.isEmpty()METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java( (("
isFinalfalse"µ
declarationStringü<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; <mark class="modifier">boolean</mark> <mark class="method">isEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isEmpty2Ö
5org.jabref.model.openoffice.util.OOResult.isPresent()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java) )(2^
booleanRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java( ((Å
3org.jabref.model.openoffice.util.OOResult.isError()METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java, ,("
isFinalfalse"µ
declarationStringü<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; <mark class="modifier">boolean</mark> <mark class="method">isError</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isError2n
java.util.Optional.isPresent()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java- -(2ã
;org.jabref.model.openoffice.util.OOResult?error@18.30:18.35CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java- -(2^
booleanRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java, ,(Ä
0org.jabref.model.openoffice.util.OOResult.isOK()METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java0 0("
isFinalfalse"≤
declarationStringú<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; <mark class="modifier">boolean</mark> <mark class="method">isOK</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isOK2É
3org.jabref.model.openoffice.util.OOResult.isError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java1 1(2^
booleanRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java0 0(‚
/org.jabref.model.openoffice.util.OOResult.get()METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java4 4("
isFinalfalse"ç
declarationString˜<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; R <mark class="method">get</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"	
typeR*get2É
3org.jabref.model.openoffice.util.OOResult.isError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java5 5(2h
java.util.Optional.get()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java8 8(2ô
Ijava.util.NoSuchElementException.NoSuchElementException(java.lang.String)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java6 6(,2å
<org.jabref.model.openoffice.util.OOResult?result@17.30:17.36CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java8 8(2X
RRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java4 4(Œ
4org.jabref.model.openoffice.util.OOResult.getError()METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java; ;("
isFinalfalse"í
declarationString¸<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; E <mark class="method">getError</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"	
typeE*getError2h
java.util.Optional.get()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java< <(2ã
;org.jabref.model.openoffice.util.OOResult?error@18.30:18.35CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java< <(2X
ERETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java; ;(Ó
Sorg.jabref.model.openoffice.util.OOResult.ifPresent(java.util.function.Consumer<R>)METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java? ?(#"
isFinalfalse"ﬂ
declarationString…<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; esult&lt;<mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark><mark class="type-parameter">E</mark>&gt; <mark class="method">ifPresent</mark>(Consumer&lt;<mark class="type-parameter">R</mark>&gt; fun)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOOResult<R, E>*	ifPresent2Ö
5org.jabref.model.openoffice.util.OOResult.isPresent()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java@ @(2u
%java.util.function.Consumer.accept(T)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaA A(2
/org.jabref.model.openoffice.util.OOResult.get()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaA A(2ß
Worg.jabref.model.openoffice.util.OOResult.ifPresent(java.util.function.Consumer<R>)!funCALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaA A(2¨
Worg.jabref.model.openoffice.util.OOResult.ifPresent(java.util.function.Consumer<R>)!fun	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java?0 ?(32Ä
)org.jabref.model.openoffice.util.OOResultRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java? ?(2ã
+org.jabref.model.openoffice.util.OOResult.RRETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java? ?(2ã
+org.jabref.model.openoffice.util.OOResult.ERETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java? ?(ñ
Worg.jabref.model.openoffice.util.OOResult.ifPresent(java.util.function.Consumer<R>)!fun	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java?0 ?(3"
typeConsumer<R>"
isFinalfalse"H
declarationString3Consumer<<mark class="type-parameter">R</mark>> fun*fun2k
java.util.function.ConsumerTYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java?$ ?(,2Ñ
+org.jabref.model.openoffice.util.OOResult.RTYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java?- ?(.Ë
Qorg.jabref.model.openoffice.util.OOResult.ifError(java.util.function.Consumer<E>)METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaF F(!"
isFinalfalse"›
declarationString«<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; esult&lt;<mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark><mark class="type-parameter">E</mark>&gt; <mark class="method">ifError</mark>(Consumer&lt;<mark class="type-parameter">E</mark>&gt; fun)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOOResult<R, E>*ifError2É
3org.jabref.model.openoffice.util.OOResult.isError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaG G(2u
%java.util.function.Consumer.accept(T)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaH H(2Ñ
4org.jabref.model.openoffice.util.OOResult.getError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaH H(2•
Uorg.jabref.model.openoffice.util.OOResult.ifError(java.util.function.Consumer<E>)!funCALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaH H(2™
Uorg.jabref.model.openoffice.util.OOResult.ifError(java.util.function.Consumer<E>)!fun	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaF. F(12Ä
)org.jabref.model.openoffice.util.OOResultRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaF F(2ã
+org.jabref.model.openoffice.util.OOResult.RRETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaF F(2ã
+org.jabref.model.openoffice.util.OOResult.ERETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaF F(î
Uorg.jabref.model.openoffice.util.OOResult.ifError(java.util.function.Consumer<E>)!fun	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaF. F(1"
typeConsumer<E>"
isFinalfalse"H
declarationString3Consumer<<mark class="type-parameter">E</mark>> fun*fun2k
java.util.function.ConsumerTYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaF" F(*2Ñ
+org.jabref.model.openoffice.util.OOResult.ETYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaF+ F(,◊
Porg.jabref.model.openoffice.util.OOResult.map(java.util.function.Function<R, S>)METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM M(!"
isFinalfalse"˜
declarationString·<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; OOResult&lt;S<mark class="modifier"><mark class="modifier">,</mark></mark><mark class="type-parameter">E</mark>&gt; <mark class="method">map</mark>(Function&lt;<mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> S&gt; fun)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOOResult<S, E>*map2É
3org.jabref.model.openoffice.util.OOResult.isError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaN N(2Ç
2org.jabref.model.openoffice.util.OOResult.error(E)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaO O(2Ñ
4org.jabref.model.openoffice.util.OOResult.getError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaO O(!2
/org.jabref.model.openoffice.util.OOResult.ok(R)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaQ Q(2t
$java.util.function.Function.apply(T)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaQ Q(2
/org.jabref.model.openoffice.util.OOResult.get()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaQ  Q(#2§
Torg.jabref.model.openoffice.util.OOResult.map(java.util.function.Function<R, S>)!funCALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaQ Q(2©
Torg.jabref.model.openoffice.util.OOResult.map(java.util.function.Function<R, S>)!fun	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM1 M(42Ä
)org.jabref.model.openoffice.util.OOResultRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM M(2≤
Rorg.jabref.model.openoffice.util.OOResult.map(java.util.function.Function<R, S>).SRETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM M(2ã
+org.jabref.model.openoffice.util.OOResult.ERETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM M(2¨
Rorg.jabref.model.openoffice.util.OOResult.map(java.util.function.Function<R, S>).STYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM M(ä
Torg.jabref.model.openoffice.util.OOResult.map(java.util.function.Function<R, S>)!fun	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM1 M(4"
typeFunction<R, S>"
isFinalfalse"ç
declarationStringxFunction<<mark class="type-parameter">R</mark><mark class="modifier">,</mark> <mark class="type-parameter">S</mark>> fun*fun2k
java.util.function.FunctionTYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM" M(*2´
Rorg.jabref.model.openoffice.util.OOResult.map(java.util.function.Function<R, S>).STYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM+ M(,2Ñ
+org.jabref.model.openoffice.util.OOResult.RTYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM. M(/Ø
Rorg.jabref.model.openoffice.util.OOResult.map(java.util.function.Function<R, S>).STYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaM M(*S˜
Uorg.jabref.model.openoffice.util.OOResult.mapError(java.util.function.Function<E, F>)METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU U(&"
isFinalfalse"˘
declarationString„<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; esult&lt;<mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark>F&gt; <mark class="method">mapError</mark>(Function&lt;<mark class="type-parameter">E</mark><mark class="modifier"><mark class="modifier">,</mark></mark> F&gt; fun)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOOResult<R, F>*mapError2É
3org.jabref.model.openoffice.util.OOResult.isError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaV V(2Ç
2org.jabref.model.openoffice.util.OOResult.error(E)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaW W(2t
$java.util.function.Function.apply(T)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaW W("2Ñ
4org.jabref.model.openoffice.util.OOResult.getError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaW# W(+2
/org.jabref.model.openoffice.util.OOResult.ok(R)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaY Y(2
/org.jabref.model.openoffice.util.OOResult.get()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaY Y(2©
Yorg.jabref.model.openoffice.util.OOResult.mapError(java.util.function.Function<E, F>)!funCALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaW W(2Æ
Yorg.jabref.model.openoffice.util.OOResult.mapError(java.util.function.Function<E, F>)!fun	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU6 U(92Ä
)org.jabref.model.openoffice.util.OOResultRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU U(2ã
+org.jabref.model.openoffice.util.OOResult.RRETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU U(2∑
Worg.jabref.model.openoffice.util.OOResult.mapError(java.util.function.Function<E, F>).FRETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU U(2±
Worg.jabref.model.openoffice.util.OOResult.mapError(java.util.function.Function<E, F>).FTYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU U(ì
Yorg.jabref.model.openoffice.util.OOResult.mapError(java.util.function.Function<E, F>)!fun	PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU6 U(9"
typeFunction<E, F>"
isFinalfalse"å
declarationStringwunction<<mark class="type-parameter">E</mark><mark class="modifier">,</mark> <mark class="type-parameter">F</mark>> fun*fun2k
java.util.function.FunctionTYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU' U(/2∞
Worg.jabref.model.openoffice.util.OOResult.mapError(java.util.function.Function<E, F>).FTYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU0 U(12Ñ
+org.jabref.model.openoffice.util.OOResult.ETYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU3 U(4¥
Worg.jabref.model.openoffice.util.OOResult.mapError(java.util.function.Function<E, F>).FTYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaU U(*FÀ
7org.jabref.model.openoffice.util.OOResult.getOptional()METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java` `(""
isFinalfalse"…
declarationString≥<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; Optional&lt;<mark class="type-parameter">R</mark>&gt; <mark class="method">getOptional</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<R>*getOptional2å
<org.jabref.model.openoffice.util.OOResult?result@17.30:17.36CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javaa a(2i
java.util.OptionalRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java` `(2ã
+org.jabref.model.openoffice.util.OOResult.RRETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java` `(˛

8org.jabref.model.openoffice.util.OOResult.asVoidResult()METHODF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javag g('"
isFinalfalse"Œ
declarationString∏<mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">R</mark><mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="type-parameter">E</mark></mark>&gt; OOVoidResult&lt;<mark class="type-parameter">E</mark>&gt; <mark class="method">asVoidResult</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOOVoidResult<E>*asVoidResult2É
3org.jabref.model.openoffice.util.OOResult.isError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javah h(2Ü
6org.jabref.model.openoffice.util.OOVoidResult.error(E)CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javai  i(%2Ñ
4org.jabref.model.openoffice.util.OOResult.getError()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javai& i(.2Ç
2org.jabref.model.openoffice.util.OOVoidResult.ok()CALLF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javak  k("2Ñ
-org.jabref.model.openoffice.util.OOVoidResultRETURN_TYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javag g(2ã
+org.jabref.model.openoffice.util.OOResult.ERETURN_TYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.javag g(·
<org.jabref.model.openoffice.util.OOResult?result@17.30:17.36VALUEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java ($"
isFinaltrue"
typeOptional<R>"í
declarationString}<mark class="modifier">private </mark><mark class="modifier">final </mark>Optional<R> <mark class="class-field">result</mark>"
isStaticfalse"
accessprivate*result2b
java.util.OptionalTYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2Ñ
+org.jabref.model.openoffice.util.OOResult.RTYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (ﬁ
;org.jabref.model.openoffice.util.OOResult?error@18.30:18.35VALUEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (#"
isFinaltrue"
typeOptional<E>"ë
declarationString|<mark class="modifier">private </mark><mark class="modifier">final </mark>Optional<E> <mark class="class-field">error</mark>"
isStaticfalse"
accessprivate*error2b
java.util.OptionalTYPEF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (2Ñ
+org.jabref.model.openoffice.util.OOResult.ETYPE_ARGUMENTF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (à
+org.jabref.model.openoffice.util.OOResult.RTYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (*Rà
+org.jabref.model.openoffice.util.OOResult.ETYPE_PARAMETERF
<src\main\java\org\jabref\model\openoffice\util\OOResult.java (*E