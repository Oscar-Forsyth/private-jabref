
:src\test\java\org\jabref\model\texparser\CitationTest.java‘
'org.jabref.model.texparser.CitationTestCLASSD
:src\test\java\org\jabref\model\texparser\CitationTest.java ("%
packageorg.jabref.model.texparser"
isFinalfalse"
inner classfalse"

isAbstractfalse"j
declarationStringU<mark class="modifier">public </mark><mark class="modifier">class </mark>CitationTest"
accesspublic*CitationTest2É
.org.jabref.model.texparser.CitationTest.init()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java (2ò
Corg.jabref.model.texparser.CitationTest.colStartColEndNotInBounds()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java% (>2ï
@org.jabref.model.texparser.CitationTest.colStartColEndInBounds()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java#% #(;2•
Porg.jabref.model.texparser.CitationTest.constructorLineSmallerEqualZeroTest(int)DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java, ,(32ü
Jorg.jabref.model.texparser.CitationTest.constructorLineLargerZeroTest(int)DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java3 3(-2Ø
Zorg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java9 9(82¨
Worg.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java@ @(52ä
5org.jabref.model.texparser.CitationTest.getPathTest()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.javaE E(2ä
5org.jabref.model.texparser.CitationTest.getLineTest()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.javaJ J(2é
9org.jabref.model.texparser.CitationTest.getColStartTest()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.javaO O(2å
7org.jabref.model.texparser.CitationTest.getColEndTest()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.javaT T(2é
9org.jabref.model.texparser.CitationTest.getLineTextTest()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.javaY Y(2ç
8org.jabref.model.texparser.CitationTest.getContextTest()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java^ ^(2â
4org.jabref.model.texparser.CitationTest.equalsTest()DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.javac c(2å
7org.jabref.model.texparser.CitationTest?path@19.9:19.13DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java	 (2ë
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java (»	
.org.jabref.model.texparser.CitationTest.init()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.java ("
isFinalfalse"∞
declarationStringö<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">init</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*init2ä
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java (2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java (2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java (2ä
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java (2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java  ($2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java (¬
Corg.jabref.model.texparser.CitationTest.colStartColEndNotInBounds()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.java% (>"
isFinalfalse"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">colStartColEndNotInBounds</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*colStartColEndNotInBounds2l
java.util.stream.StreamRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java (2â
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTD
:src\test\java\org\jabref\model\texparser\CitationTest.java (#π
@org.jabref.model.texparser.CitationTest.colStartColEndInBounds()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.java#% #(;"
isFinalfalse"≠
declarationStringó<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">colStartColEndInBounds</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*colStartColEndInBounds2l
java.util.stream.StreamRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java# #(2â
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTD
:src\test\java\org\jabref\model\texparser\CitationTest.java# #(#¶
Porg.jabref.model.texparser.CitationTest.constructorLineSmallerEqualZeroTest(int)METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.java, ,(3"
isFinalfalse"…
declarationString≥ <br><mark class="annotation">@ValueSource(ints</mark> = { -1<mark class="modifier"><mark class="modifier">,</mark></mark> 0 }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">constructorLineSmallerEqualZeroTest</mark>(<mark class="modifier">int</mark> line)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*#constructorLineSmallerEqualZeroTest2n
 java.lang.Throwable.getMessage()CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java.9 .(C2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java-M -(U2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java-V -(Z2£
Uorg.jabref.model.texparser.CitationTest.constructorLineSmallerEqualZeroTest(int)!lineCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java-\ -(`2¨
^org.jabref.model.texparser.CitationTest.constructorLineSmallerEqualZeroTest(int)?e@45.18:45.19CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java.7 .(82®
Uorg.jabref.model.texparser.CitationTest.constructorLineSmallerEqualZeroTest(int)!line	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java,8 ,(<2≥
^org.jabref.model.texparser.CitationTest.constructorLineSmallerEqualZeroTest(int)?e@45.18:45.19DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java- -(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java, ,(‡
^org.jabref.model.texparser.CitationTest.constructorLineSmallerEqualZeroTest(int)?e@45.18:45.19VARIABLED
:src\test\java\org\jabref\model\texparser\CitationTest.java- -("
type	Exception"
isFinalfalse"¬
declarationString¨<mark class="modifier"> </mark>Exception <mark class="class-field">e</mark> = assertThrows(IllegalArgumentException.class, () -> new Citation(path, line, 1, 5, "lineText"))*e2a
java.lang.ExceptionTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java- -(2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java-M -(U2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java-V -(Z2£
Uorg.jabref.model.texparser.CitationTest.constructorLineSmallerEqualZeroTest(int)!lineCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java-\ -(`›
Uorg.jabref.model.texparser.CitationTest.constructorLineSmallerEqualZeroTest(int)!line	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java,8 ,(<"
typeint"
isFinalfalse";
declarationString&<mark class="modifier">int</mark> line*line2Q
intTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java,4 ,(7È
Jorg.jabref.model.texparser.CitationTest.constructorLineLargerZeroTest(int)METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.java3 3(-"
isFinalfalse"¬
declarationString¨ <br><mark class="annotation">@ValueSource(ints</mark> = { 1<mark class="modifier"><mark class="modifier">,</mark></mark> 2 }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">constructorLineLargerZeroTest</mark>(<mark class="modifier">int</mark> line)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*constructorLineLargerZeroTest2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java4  4((2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java4) 4(-2ù
Oorg.jabref.model.texparser.CitationTest.constructorLineLargerZeroTest(int)!lineCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java4/ 4(32¢
Oorg.jabref.model.texparser.CitationTest.constructorLineLargerZeroTest(int)!line	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java32 3(62¥
_org.jabref.model.texparser.CitationTest.constructorLineLargerZeroTest(int)?citation@52.17:52.25DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java4 4(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java3 3(¬
_org.jabref.model.texparser.CitationTest.constructorLineLargerZeroTest(int)?citation@52.17:52.25VARIABLED
:src\test\java\org\jabref\model\texparser\CitationTest.java4 4("
typeCitation"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>Citation <mark class="class-field">citation</mark> = new Citation(path, line, 1, 5, "lineText")*citation2q
#org.jabref.model.texparser.CitationTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java4 4(2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java4  4((2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java4) 4(-2ù
Oorg.jabref.model.texparser.CitationTest.constructorLineLargerZeroTest(int)!lineCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java4/ 4(3◊
Oorg.jabref.model.texparser.CitationTest.constructorLineLargerZeroTest(int)!line	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java32 3(6"
typeint"
isFinalfalse";
declarationString&<mark class="modifier">int</mark> line*line2Q
intTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java3. 3(1ç
Zorg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.java9 9(8"
isFinalfalse"à
declarationStringÚ <br><mark class="annotation">@MethodSource("colStartColEndNotInBounds")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">constructorColStartColEndNotInBoundsTest</mark>(<mark class="modifier">int</mark> colStart<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> colEnd)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*(constructorColStartColEndNotInBoundsTest2n
 java.lang.Throwable.getMessage()CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java;H ;(R2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java:M :(U2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java:V :(Z2±
corg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)!colStartCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java:` :(h2Ø
aorg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)!colEndCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java:j :(p2∂
horg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)?e@58.18:58.19CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java;F ;(G2∂
corg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)!colStart	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java9= 9(E2¥
aorg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)!colEnd	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java9K 9(Q2Ω
horg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)?e@58.18:58.19DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.java: :(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java9 9(¥	
horg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)?e@58.18:58.19VARIABLED
:src\test\java\org\jabref\model\texparser\CitationTest.java: :("
type	Exception"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>Exception <mark class="class-field">e</mark> = assertThrows(IllegalArgumentException.class, () -> new Citation(path, 10, colStart, colEnd, "lineText"))*e2a
java.lang.ExceptionTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java: :(2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java:M :(U2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java:V :(Z2±
corg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)!colStartCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java:` :(h2Ø
aorg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)!colEndCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java:j :(pÛ
corg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)!colStart	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java9= 9(E"
typeint"
isFinalfalse"?
declarationString*<mark class="modifier">int</mark> colStart*colStart2Q
intTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java99 9(<Ì
aorg.jabref.model.texparser.CitationTest.constructorColStartColEndNotInBoundsTest(int, int)!colEnd	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java9K 9(Q"
typeint"
isFinalfalse"=
declarationString(<mark class="modifier">int</mark> colEnd*colEnd2Q
intTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java9G 9(J–
Worg.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.java@ @(5"
isFinalfalse"Ç
declarationStringÏ <br><mark class="annotation">@MethodSource("colStartColEndInBounds")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">constructorColStartColEndInBoundsTest</mark>(<mark class="modifier">int</mark> colStart<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> colEnd)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*%constructorColStartColEndInBoundsTest2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaA  A((2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaA) A(-2Æ
`org.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)!colStartCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaA3 A(;2¨
^org.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)!colEndCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaA= A(C2≥
`org.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)!colStart	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java@: @(B2±
^org.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)!colEnd	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java@H @(N2¡
lorg.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)?citation@65.17:65.25DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.javaA A(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java@ @(ö	
lorg.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)?citation@65.17:65.25VARIABLED
:src\test\java\org\jabref\model\texparser\CitationTest.javaA A("
typeCitation"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>Citation <mark class="class-field">citation</mark> = new Citation(path, 10, colStart, colEnd, "lineText")*citation2q
#org.jabref.model.texparser.CitationTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.javaA A(2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaA  A((2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaA) A(-2Æ
`org.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)!colStartCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaA3 A(;2¨
^org.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)!colEndCALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaA= A(C
`org.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)!colStart	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java@: @(B"
typeint"
isFinalfalse"?
declarationString*<mark class="modifier">int</mark> colStart*colStart2Q
intTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java@6 @(9Í
^org.jabref.model.texparser.CitationTest.constructorColStartColEndInBoundsTest(int, int)!colEnd	PARAMETERD
:src\test\java\org\jabref\model\texparser\CitationTest.java@H @(N"
typeint"
isFinalfalse"=
declarationString(<mark class="modifier">int</mark> colEnd*colEnd2Q
intTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java@D @(Gç
5org.jabref.model.texparser.CitationTest.getPathTest()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.javaE E("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getPathTest</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getPathTest2{
-org.jabref.model.texparser.Citation.getPath()CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaF$ F(+2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaF F(2ä
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaF F(#2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.javaE E(Ö
5org.jabref.model.texparser.CitationTest.getLineTest()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.javaJ J("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getLineTest</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getLineTest2{
-org.jabref.model.texparser.Citation.getLine()CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaK" K()2ä
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaK K(!2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.javaJ J(ï
9org.jabref.model.texparser.CitationTest.getColStartTest()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.javaO O("
isFinalfalse"µ
declarationStringü<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getColStartTest</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getColStartTest2
1org.jabref.model.texparser.Citation.getColStart()CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaP! P(,2ä
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaP P( 2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.javaO O(ç
7org.jabref.model.texparser.CitationTest.getColEndTest()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.javaT T("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getColEndTest</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getColEndTest2}
/org.jabref.model.texparser.Citation.getColEnd()CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaU! U(*2ä
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaU U( 2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.javaT T(ï
9org.jabref.model.texparser.CitationTest.getLineTextTest()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.javaY Y("
isFinalfalse"µ
declarationStringü<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getLineTextTest</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getLineTextTest2
1org.jabref.model.texparser.Citation.getLineText()CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaZ* Z(52ä
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaZ! Z()2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.javaY Y(ë
8org.jabref.model.texparser.CitationTest.getContextTest()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.java^ ^("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getContextTest</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getContextTest2~
0org.jabref.model.texparser.Citation.getContext()CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java_* _(42ä
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.java_! _()2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java^ ^(Œ
4org.jabref.model.texparser.CitationTest.equalsTest()METHODD
:src\test\java\org\jabref\model\texparser\CitationTest.javac c("
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">equalsTest</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*
equalsTest2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javad! d()2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javad* d(.2ä
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaf f(2ö
Lorg.jabref.model.texparser.CitationTest.equalsTest()?citation1@100.17:100.26CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javaf f((2ä
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javag g( 2ö
Lorg.jabref.model.texparser.CitationTest.equalsTest()?citation2@101.17:101.26CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javag" g(+2°
Lorg.jabref.model.texparser.CitationTest.equalsTest()?citation1@100.17:100.26DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.javad d(2°
Lorg.jabref.model.texparser.CitationTest.equalsTest()?citation2@101.17:101.26DECLARATIOND
:src\test\java\org\jabref\model\texparser\CitationTest.javae e(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\model\texparser\CitationTest.javac c(è
Lorg.jabref.model.texparser.CitationTest.equalsTest()?citation1@100.17:100.26VARIABLED
:src\test\java\org\jabref\model\texparser\CitationTest.javad d("
typeCitation"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>Citation <mark class="class-field">citation1</mark> = new Citation(path, 10, 1, 4, "lineText")*	citation12q
#org.jabref.model.texparser.CitationTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.javad d(2Ø
aorg.jabref.model.texparser.Citation.Citation(java.nio.file.Path, int, int, int, java.lang.String)CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javad! d()2Ö
7org.jabref.model.texparser.CitationTest?path@19.9:19.13CALLD
:src\test\java\org\jabref\model\texparser\CitationTest.javad* d(.œ
Lorg.jabref.model.texparser.CitationTest.equalsTest()?citation2@101.17:101.26VARIABLED
:src\test\java\org\jabref\model\texparser\CitationTest.javae e("
typeCitation"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>Citation <mark class="class-field">citation2</mark> = <mark class="modifier">null</mark>*	citation22q
#org.jabref.model.texparser.CitationTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.javae e(ü
7org.jabref.model.texparser.CitationTest?path@19.9:19.13VARIABLED
:src\test\java\org\jabref\model\texparser\CitationTest.java	 ("
isFinalfalse"
typePath"^
declarationStringI<mark class="modifier"> </mark>Path <mark class="class-field">path</mark>"
isStaticfalse"
accesspackage_private*path2`
java.nio.file.PathTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java (≈
<org.jabref.model.texparser.CitationTest?citation@20.13:20.21VARIABLED
:src\test\java\org\jabref\model\texparser\CitationTest.java ("
isFinalfalse"
typeCitation"f
declarationStringQ<mark class="modifier"> </mark>Citation <mark class="class-field">citation</mark>"
isStaticfalse"
accesspackage_private*citation2q
#org.jabref.model.texparser.CitationTYPED
:src\test\java\org\jabref\model\texparser\CitationTest.java (