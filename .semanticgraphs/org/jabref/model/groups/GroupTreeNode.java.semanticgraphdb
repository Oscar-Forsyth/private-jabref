
8src\main\java\org\jabref\model\groups\GroupTreeNode.java√(
%org.jabref.model.groups.GroupTreeNodeCLASSB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (""
packageorg.jabref.model.groups"
isFinalfalse"
inner classfalse"

isAbstractfalse"™
declarationStringî<mark class="modifier">public </mark><mark class="modifier">class </mark>GroupTreeNode<mark class="modifier"> extends </mark>TreeNode<GroupTreeNode>"
accesspublic*GroupTreeNode2≠
Zorg.jabref.model.groups.GroupTreeNode.GroupTreeNode(org.jabref.model.groups.AbstractGroup)DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (2©
Vorg.jabref.model.groups.GroupTreeNode.fromGroup(org.jabref.model.groups.AbstractGroup)DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java$  $()2É
0org.jabref.model.groups.GroupTreeNode.getGroup()DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java- -(!2®
Uorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup)DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java8 8(2Ï
òorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaD D(%2ã
8org.jabref.model.groups.GroupTreeNode.getSearchMatcher()DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java_ _()2µ
borg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javac c(*2ë
>org.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javax x(2Ö
0org.jabref.model.groups.GroupTreeNode.hashCode()DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÖ Ö(2»
sorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâ â(22≠
Xorg.jabref.model.groups.GroupTreeNode.getMatchingGroups(org.jabref.model.entry.BibEntry)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¢ ¢(02Ω
horg.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java© ©(02Ω
horg.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaΩ Ω(+2Ñ
/org.jabref.model.groups.GroupTreeNode.getName()DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java« «(2≠
Xorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÀ À($2Ö
0org.jabref.model.groups.GroupTreeNode.copyNode()DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java“ “(!2∑
borg.jabref.model.groups.GroupTreeNode.findMatches(java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java‹ ‹(%2≠
Xorg.jabref.model.groups.GroupTreeNode.findMatches(org.jabref.model.database.BibDatabase)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÈ È(%2£
Norg.jabref.model.groups.GroupTreeNode.matches(org.jabref.model.entry.BibEntry)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (2Ñ
/org.jabref.model.groups.GroupTreeNode.getPath()DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java˘ ˘(2Ö
0org.jabref.model.groups.GroupTreeNode.toString()DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÅ Å(2õ
Forg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaå# å(12√
norg.jabref.model.groups.GroupTreeNode.addEntriesToGroup(java.util.Collection<org.jabref.model.entry.BibEntry>)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java° °(.2¬
morg.jabref.model.groups.GroupTreeNode.removeEntriesFromGroup(java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¨ ¨(32Ø
Zorg.jabref.model.groups.GroupTreeNode.isSameGroupAs(org.jabref.model.groups.GroupTreeNode)DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑ ∑( 2ì
@org.jabref.model.groups.GroupTreeNode?PATH_DELIMITER@23.32:23.46DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java  (.2ä
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (2g
org.jabref.model.TreeNodeEXTENDB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java# (+2Å
%org.jabref.model.groups.GroupTreeNodeEXTEND_TYPE_ARGUMENTB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java, (9Ä	
Zorg.jabref.model.groups.GroupTreeNode.GroupTreeNode(org.jabref.model.groups.AbstractGroup)CONSTRUCTORB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java ("x
declarationStringc<mark class="modifier">public </mark><mark class="method">GroupTreeNode</mark>(AbstractGroup group)*GroupTreeNode2Â
òorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java! !(2Ç
6org.jabref.model.TreeNode.TreeNode(java.lang.Class<T>)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java   (2¨
`org.jabref.model.groups.GroupTreeNode.GroupTreeNode(org.jabref.model.groups.AbstractGroup)!groupCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java! !(2±
`org.jabref.model.groups.GroupTreeNode.GroupTreeNode(org.jabref.model.groups.AbstractGroup)!group	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java' (,2x
%org.jabref.model.groups.GroupTreeNodeRETURN_TYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (˛
`org.jabref.model.groups.GroupTreeNode.GroupTreeNode(org.jabref.model.groups.AbstractGroup)!group	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java' (,"
typeAbstractGroup"
isFinalfalse"(
declarationStringAbstractGroup group*group2q
%org.jabref.model.groups.AbstractGroupTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (&∫
Vorg.jabref.model.groups.GroupTreeNode.fromGroup(org.jabref.model.groups.AbstractGroup)METHODB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java$  $()"
isFinalfalse"®
declarationStringí<mark class="modifier">public </mark><mark class="modifier">static </mark>GroupTreeNode <mark class="method">fromGroup</mark>(AbstractGroup group)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeGroupTreeNode*	fromGroup2¶
Zorg.jabref.model.groups.GroupTreeNode.GroupTreeNode(org.jabref.model.groups.AbstractGroup)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java% %( 2®
\org.jabref.model.groups.GroupTreeNode.fromGroup(org.jabref.model.groups.AbstractGroup)!groupCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java%! %(&2≠
\org.jabref.model.groups.GroupTreeNode.fromGroup(org.jabref.model.groups.AbstractGroup)!group	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java$8 $(=2x
%org.jabref.model.groups.GroupTreeNodeRETURN_TYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java$ $(˙
\org.jabref.model.groups.GroupTreeNode.fromGroup(org.jabref.model.groups.AbstractGroup)!group	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java$8 $(="
typeAbstractGroup"
isFinalfalse"(
declarationStringAbstractGroup group*group2q
%org.jabref.model.groups.AbstractGroupTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java$* $(7€
0org.jabref.model.groups.GroupTreeNode.getGroup()METHODB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java- -(!"
isFinalfalse"n
declarationStringY<mark class="modifier">public </mark>AbstractGroup <mark class="method">getGroup</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeAbstractGroup*getGroup2É
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java. .(2x
%org.jabref.model.groups.AbstractGroupRETURN_TYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java- -(É	
Uorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup)METHODB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java8 8("
isFinalfalse" 
declarationString¥<mark class="annotation">@Deprecated</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setGroup</mark>(AbstractGroup newGroup)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setGroup2o
#java.util.Objects.requireNonNull(T)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java9 9(+2™
^org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup)!newGroupCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java9, 9(42É
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java9 9(2Ø
^org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup)!newGroup	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java8' 8(/2W
voidRETURN_TYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java8 8(Ç
^org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup)!newGroup	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java8' 8(/"
typeAbstractGroup"
isFinalfalse"+
declarationStringAbstractGroup newGroup*newGroup2q
%org.jabref.model.groups.AbstractGroupTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java8 8(&¸Q
òorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)METHODB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaD D(%"
isFinalfalse"˜
declarationString·<mark class="modifier">public </mark>List&lt;FieldChange&gt; <mark class="method">setGroup</mark>(AbstractGroup newGroup<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> shouldKeepPreviousAssignments<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> shouldRemovePreviousAssignments<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;BibEntry&gt; entriesInDatabase)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<FieldChange>*setGroup2|
0org.jabref.model.groups.GroupTreeNode.getGroup()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaF! F()2o
#java.util.Objects.requireNonNull(T)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaG G(&2ì
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaMQ M(W2i
java.util.Collection.stream()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaMH M(N2p
$java.util.stream.Collectors.toList()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaN[ N(a2Ñ
8java.util.List.addAll(java.util.Collection<? extends E>)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaQ Q(2≠
aorg.jabref.model.groups.GroupEntryChanger.remove(java.util.List<org.jabref.model.entry.BibEntry>)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaQ, Q(22Ñ
8java.util.List.addAll(java.util.Collection<? extends E>)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaV V(2∞
dorg.jabref.model.groups.GroupEntryChanger.add(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaV, V(/2k
java.util.ArrayList.ArrayList()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaI( I(32É
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaG G(2Ó
°org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!newGroupCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaG' G(/2Ö
∏org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!shouldRemovePreviousAssignmentsCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaJ+ J(J2˙
≠org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?oldGroup@70.22:70.30CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaJO J(W2É
∂org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!shouldKeepPreviousAssignmentsCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaK& K(C2Ó
°org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!newGroupCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaKH K(P2Ö
∏org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?shouldAddToNewGroup@75.16:75.35CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaL L(2ä
Ωorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?shouldRemoveFromOldGroup@74.16:74.40CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaL# L(;2˜
™org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!entriesInDatabaseCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaM6 M(G2ä
Ωorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?shouldRemoveFromOldGroup@74.16:74.40CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaO O((2˙
≠org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?oldGroup@70.22:70.30CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaPE P(M2˘
¨org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?changes@73.26:73.33CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaQ Q(2˛
±org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entryChanger@80.34:80.46CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaQ Q(+2ä
Ωorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entriesMatchedByOldGroup@77.27:77.51CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaQ3 Q(K2Ö
∏org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?shouldAddToNewGroup@75.16:75.35CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaT T(#2Ó
°org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!newGroupCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaUE U(M2˘
¨org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?changes@73.26:73.33CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaV V(2˛
±org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entryChanger@85.34:85.46CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaV V(+2ä
Ωorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entriesMatchedByOldGroup@77.27:77.51CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaV0 V(H2˘
¨org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?changes@73.26:73.33CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaY Y(2ö
Norg.jabref.model.groups.AbstractGroup.isMatch(org.jabref.model.entry.BibEntry)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaMX M(i2Û
°org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!newGroup	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaD4 D(<2à
∂org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!shouldKeepPreviousAssignments	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaDF D(c2ä
∏org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!shouldRemovePreviousAssignments	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaE. E(M2¸
™org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!entriesInDatabase	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaE^ E(o2Å
≠org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?oldGroup@70.22:70.30DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaF F(2Ä
¨org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?changes@73.26:73.33DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaI I(!2ë
Ωorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?shouldRemoveFromOldGroup@74.16:74.40DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaJ J((2å
∏org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?shouldAddToNewGroup@75.16:75.35DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaK K(#2ë
Ωorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entriesMatchedByOldGroup@77.27:77.51DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaM M(32Ö
±org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entryChanger@80.34:80.46DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaP" P(.2Ö
±org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entryChanger@85.34:85.46DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaU" U(.2a
java.util.ListRETURN_TYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaD D(2x
org.jabref.model.FieldChangeRETURN_TYPE_ARGUMENTB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaD D(ú
≠org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?oldGroup@70.22:70.30VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaF F("
typeAbstractGroup"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>AbstractGroup <mark class="class-field">oldGroup</mark> = getGroup()*oldGroup2q
%org.jabref.model.groups.AbstractGroupTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaF F(2|
0org.jabref.model.groups.GroupTreeNode.getGroup()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaF! F()Ù
¨org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?changes@73.26:73.33VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaI I(!"
typeList<FieldChange>"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>List<FieldChange> <mark class="class-field">changes</mark> = new ArrayList<>()*changes2Z
java.util.ListTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaI I(2q
org.jabref.model.FieldChangeTYPE_ARGUMENTB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaI I(2k
java.util.ArrayList.ArrayList()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaI( I(3â	
Ωorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?shouldRemoveFromOldGroup@74.16:74.40VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaJ J(("
typeboolean"
isFinalfalse"·
declarationStringÀ<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">shouldRemoveFromOldGroup</mark> = shouldRemovePreviousAssignments && (oldGroup instanceof GroupEntryChanger)*shouldRemoveFromOldGroup2S
booleanTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaJ J(2Ö
∏org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!shouldRemovePreviousAssignmentsCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaJ+ J(J2˙
≠org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?oldGroup@70.22:70.30CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaJO J(WÍ
∏org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?shouldAddToNewGroup@75.16:75.35VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaK K(#"
typeboolean"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">shouldAddToNewGroup</mark> = shouldKeepPreviousAssignments && (newGroup instanceof GroupEntryChanger)*shouldAddToNewGroup2S
booleanTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaK K(2É
∂org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!shouldKeepPreviousAssignmentsCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaK& K(C2Ó
°org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!newGroupCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaKH K(Pù
Ωorg.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entriesMatchedByOldGroup@77.27:77.51VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaM M(3"
typeList<BibEntry>"
isFinalfalse"—
declarationStringª<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entriesMatchedByOldGroup</mark> = entriesInDatabase.stream().filter(oldGroup::isMatch).collect(Collectors.toList())*entriesMatchedByOldGroup2Z
java.util.ListTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaM M(2t
org.jabref.model.entry.BibEntryTYPE_ARGUMENTB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaM M(2ò
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaNH N(O2ì
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaMQ M(W2i
java.util.Collection.stream()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaMH M(N2p
$java.util.stream.Collectors.toList()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaN[ N(a2˜
™org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!entriesInDatabaseCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaM6 M(G2ö
Norg.jabref.model.groups.AbstractGroup.isMatch(org.jabref.model.entry.BibEntry)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaMX M(i∆
±org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entryChanger@80.34:80.46VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaP" P(."
typeGroupEntryChanger"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>GroupEntryChanger <mark class="class-field">entryChanger</mark> = (GroupEntryChanger) oldGroup*entryChanger2u
)org.jabref.model.groups.GroupEntryChangerTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaP P(!2˙
≠org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?oldGroup@70.22:70.30CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaPE P(M∫
±org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)?entryChanger@85.34:85.46VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaU" U(."
typeGroupEntryChanger"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>GroupEntryChanger <mark class="class-field">entryChanger</mark> = (GroupEntryChanger) newGroup*entryChanger2u
)org.jabref.model.groups.GroupEntryChangerTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaU U(!2Ó
°org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!newGroupCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaUE U(M∆
°org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!newGroup	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaD4 D(<"
typeAbstractGroup"
isFinalfalse"+
declarationStringAbstractGroup newGroup*newGroup2q
%org.jabref.model.groups.AbstractGroupTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaD& D(3˘
∂org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!shouldKeepPreviousAssignments	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaDF D(c"
typeboolean"
isFinalfalse"X
declarationStringC<mark class="modifier">boolean</mark> shouldKeepPreviousAssignments*shouldKeepPreviousAssignments2S
booleanTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaD> D(Eˇ
∏org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!shouldRemovePreviousAssignments	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaE. E(M"
typeboolean"
isFinalfalse"Z
declarationStringE<mark class="modifier">boolean</mark> shouldRemovePreviousAssignments*shouldRemovePreviousAssignments2S
booleanTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaE& E(-¬
™org.jabref.model.groups.GroupTreeNode.setGroup(org.jabref.model.groups.AbstractGroup, boolean, boolean, java.util.List<org.jabref.model.entry.BibEntry>)!entriesInDatabase	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaE^ E(o"
typeList<BibEntry>"
isFinalfalse"5
declarationString List<BibEntry> entriesInDatabase*entriesInDatabase2Z
java.util.ListTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaEO E(S2t
org.jabref.model.entry.BibEntryTYPE_ARGUMENTB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaET E(\±
8org.jabref.model.groups.GroupTreeNode.getSearchMatcher()METHODB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java_ _()"
isFinalfalse"v
declarationStringa<mark class="modifier">public </mark>SearchMatcher <mark class="method">getSearchMatcher</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeSearchMatcher*getSearchMatcher2Æ
borg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java` `(2ä
>org.jabref.model.groups.AbstractGroup.getHierarchicalContext()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java`& `(<2É
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java`  `(%2x
%org.jabref.model.search.SearchMatcherRETURN_TYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java_ _(.
borg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)METHODB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javac c(*"
isFinalfalse"ö
declarationStringÑ<mark class="modifier">private </mark>SearchMatcher <mark class="method">getSearchMatcher</mark>(GroupHierarchyType originalContext)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeSearchMatcher*getSearchMatcher2ä
>org.jabref.model.groups.AbstractGroup.getHierarchicalContext()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javad1 d(G2∏
lorg.jabref.model.search.matchers.MatcherSets.build(org.jabref.model.search.matchers.MatcherSets.MatcherType)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javah, h(12¶
Zorg.jabref.model.search.matchers.MatcherSet.addRule(org.jabref.model.search.SearchMatcher)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaj j(2s
'org.jabref.model.TreeNode.getChildren()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javal' l(22¶
Zorg.jabref.model.search.matchers.MatcherSet.addRule(org.jabref.model.search.SearchMatcher)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javam m("2Æ
borg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javam) m(92n
"org.jabref.model.TreeNode.isRoot()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javao@ o(F2¶
Zorg.jabref.model.search.matchers.MatcherSet.addRule(org.jabref.model.search.SearchMatcher)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javar r(2Æ
borg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javar1 r(A2d
java.util.Optional.get()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javar+ r(.2q
%org.jabref.model.TreeNode.getParent()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javar r((2É
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javad+ d(02ƒ
xorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?context@100.33:100.40CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javae e(2É
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaf f(2ƒ
xorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?context@100.33:100.40CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javai i(2«
{org.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?searchRule@104.19:104.29CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaj j(2É
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaj j( 2ƒ
xorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?context@100.33:100.40CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javak k(2æ
rorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)!originalContextCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javak: k(I2«
{org.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?searchRule@104.19:104.29CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javam m(2¬
vorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?child@108.31:108.36CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javam# m((2æ
rorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)!originalContextCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javam: m(I2ƒ
xorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?context@100.33:100.40CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javao o(2æ
rorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)!originalContextCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaoM o(\2«
{org.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?searchRule@104.19:104.29CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javar r(2æ
rorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)!originalContextCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javarB r(Q2«
{org.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?searchRule@104.19:104.29CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javat t(2√
rorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)!originalContext	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javac> c(M2À
xorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?context@100.33:100.40DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javad! d((2Œ
{org.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?searchRule@104.19:104.29DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javah h(2…
vorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?child@108.31:108.36DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javal l($2x
%org.jabref.model.search.SearchMatcherRETURN_TYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javac c(æ
xorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?context@100.33:100.40VALUEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javad! d(("
typeGroupHierarchyType"
isFinaltrue"µ
declarationStringü<mark class="modifier"> </mark><mark class="modifier">final </mark>GroupHierarchyType <mark class="class-field">context</mark> = group.getHierarchicalContext()*context2v
*org.jabref.model.groups.GroupHierarchyTypeTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javad d( 2ä
>org.jabref.model.groups.AbstractGroup.getHierarchicalContext()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javad1 d(G2É
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javad+ d(0›
{org.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?searchRule@104.19:104.29VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javah h("
type
MatcherSet"
isFinalfalse"‚
declarationStringÃ<mark class="modifier"> </mark>MatcherSet <mark class="class-field">searchRule</mark> = MatcherSets.build(context == GroupHierarchyType.REFINING ? MatcherSets.MatcherType.AND : MatcherSets.MatcherType.OR)*
searchRule2w
+org.jabref.model.search.matchers.MatcherSetTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javah h(2∏
lorg.jabref.model.search.matchers.MatcherSets.build(org.jabref.model.search.matchers.MatcherSets.MatcherType)CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javah, h(12ƒ
xorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?context@100.33:100.40CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javai i(”
vorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)?child@108.31:108.36VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javal l($"
typeGroupTreeNode"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>GroupTreeNode <mark class="class-field">child</mark>*child2q
%org.jabref.model.groups.GroupTreeNodeTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javal l(≥
rorg.jabref.model.groups.GroupTreeNode.getSearchMatcher(org.jabref.model.groups.GroupHierarchyType)!originalContext	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javac> c(M"
typeGroupHierarchyType"
isFinalfalse"7
declarationString"GroupHierarchyType originalContext*originalContext2v
*org.jabref.model.groups.GroupHierarchyTypeTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javac+ c(=∞
>org.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)METHODB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javax x("
isFinalfalse"ª
declarationString•<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">equals</mark>(Object o)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*equals2g
java.lang.Object.getClass()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java| |($2g
java.lang.Object.getClass()CALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java|, |(42ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÄ Ä(2ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÅ Å(2u
'org.jabref.model.TreeNode.getChildren()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÅ Å(*2u
'org.jabref.model.TreeNode.getChildren()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÅ3 Å(>2å
@org.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)!oCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javay y(2å
@org.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)!oCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java| |(2å
@org.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)!oCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java|* |(+2å
@org.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)!oCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java- (.2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÄ Ä(#2ü
Qorg.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)?that@127.22:127.26CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÄ% Ä()2ü
Qorg.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)?that@127.22:127.26CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÅ. Å(22Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÄ* Ä(/2ë
@org.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)!o	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javax! x("2§
Qorg.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)?that@127.22:127.26DECLARATIONB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (2Z
booleanRETURN_TYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javax x(œ
Qorg.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)?that@127.22:127.26VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java ("
typeGroupTreeNode"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>GroupTreeNode <mark class="class-field">that</mark> = (GroupTreeNode) o*that2q
%org.jabref.model.groups.GroupTreeNodeTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (2å
@org.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)!oCALLB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java- (.≥
@org.jabref.model.groups.GroupTreeNode.equals(java.lang.Object)!o	PARAMETERB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javax! x(""
typeObject"
isFinalfalse"
declarationStringObject o*o2\
java.lang.ObjectTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.javax x( Ù
0org.jabref.model.groups.GroupTreeNode.hashCode()METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÖ Ö("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">hashCode</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*hashCode2y
+java.util.Objects.hash(java.lang.Object...)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÜ Ü(2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÜ Ü(!2X
intRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÖ Ö(€(
sorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâ â(2"
isFinalfalse"ê
declarationString˙<mark class="modifier">public </mark>List&lt;GroupTreeNode&gt; <mark class="method">getContainingGroups</mark>(List&lt;BibEntry&gt; entries<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> requireAll)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<GroupTreeNode>*getContainingGroups2∞
borg.jabref.model.groups.AbstractGroup.containsAll(java.util.List<org.jabref.model.entry.BibEntry>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaé é(&2c
java.util.List.add(E)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaè è(2∞
borg.jabref.model.groups.AbstractGroup.containsAny(java.util.List<org.jabref.model.entry.BibEntry>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaí í(&2c
java.util.List.add(E)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaì ì(2u
'org.jabref.model.TreeNode.getChildren()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaò# ò(.2Ü
8java.util.List.addAll(java.util.Collection<? extends E>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaô ô(2¡
sorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaô  ô(32m
java.util.ArrayList.ArrayList()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaä) ä(42Ã
~org.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)!requireAllCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaç ç(2…
{org.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)!entriesCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaé' é(.2◊
àorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)?groups@138.28:138.34CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaè è(2…
{org.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)!entriesCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaí' í(.2◊
àorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)?groups@138.28:138.34CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaì ì(2◊
àorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)?groups@138.28:138.34CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaô ô(2÷
áorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)?child@152.27:152.32CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaô ô(2…
{org.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)!entriesCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaô4 ô(;2Ã
~org.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)!requireAllCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaô= ô(G2◊
àorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)?groups@138.28:138.34CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaú ú(2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaé é(2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaí í(2Œ
{org.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâB â(I2—
~org.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)!requireAll	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâS â(]2ﬁ
àorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)?groups@138.28:138.34DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaä ä("2›
áorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)?child@152.27:152.32DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaò ò( 2c
java.util.ListRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâ â(2É
%org.jabref.model.groups.GroupTreeNodeRETURN_TYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâ â(„
àorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)?groups@138.28:138.34VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaä ä(""
typeList<GroupTreeNode>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>List<GroupTreeNode> <mark class="class-field">groups</mark> = new ArrayList<>()*groups2\
java.util.ListTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaä ä(2|
%org.jabref.model.groups.GroupTreeNodeTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaä ä(2m
java.util.ArrayList.ArrayList()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaä) ä(4È
áorg.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)?child@152.27:152.32VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaò ò( "
typeGroupTreeNode"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>GroupTreeNode <mark class="class-field">child</mark>*child2s
%org.jabref.model.groups.GroupTreeNodeTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaò ò(Ñ
{org.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâB â(I"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2\
java.util.ListTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâ3 â(72v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâ8 â(@û
~org.jabref.model.groups.GroupTreeNode.getContainingGroups(java.util.List<org.jabref.model.entry.BibEntry>, boolean)!requireAll	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâS â(]"
typeboolean"
isFinalfalse"E
declarationString0<mark class="modifier">boolean</mark> requireAll*
requireAll2U
booleanTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaâK â(Rµ

Xorg.jabref.model.groups.GroupTreeNode.getMatchingGroups(org.jabref.model.entry.BibEntry)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¢ ¢(0"
isFinalfalse"ë
declarationString|<mark class="modifier">public </mark>List&lt;GroupTreeNode&gt; <mark class="method">getMatchingGroups</mark>(BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<GroupTreeNode>*getMatchingGroups2∂
horg.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java£ £( 2t
&java.util.Collections.singletonList(T)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java£- £(:2¨
^org.jabref.model.groups.GroupTreeNode.getMatchingGroups(org.jabref.model.entry.BibEntry)!entryCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java£; £(@2±
^org.jabref.model.groups.GroupTreeNode.getMatchingGroups(org.jabref.model.entry.BibEntry)!entry	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¢: ¢(?2c
java.util.ListRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¢ ¢(2É
%org.jabref.model.groups.GroupTreeNodeRETURN_TYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¢ ¢(
^org.jabref.model.groups.GroupTreeNode.getMatchingGroups(org.jabref.model.entry.BibEntry)!entry	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¢: ¢(?"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2m
org.jabref.model.entry.BibEntryTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¢1 ¢(9Â!
horg.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java© ©(0"
isFinalfalse"†
declarationStringä<mark class="modifier">public </mark>List&lt;GroupTreeNode&gt; <mark class="method">getMatchingGroups</mark>(List&lt;BibEntry&gt; entries)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<GroupTreeNode>*getMatchingGroups2Ü
8org.jabref.model.groups.GroupTreeNode.getSearchMatcher()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java≠  ≠(02ú
Norg.jabref.model.search.SearchMatcher.isMatch(org.jabref.model.entry.BibEntry)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaØ Ø(2c
java.util.List.add(E)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∞ ∞(2u
'org.jabref.model.TreeNode.getChildren()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∂# ∂(.2Ü
8java.util.List.addAll(java.util.Collection<? extends E>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑ ∑(2∂
horg.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑  ∑(12m
java.util.ArrayList.ArrayList()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java™) ™(42æ
porg.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÆ Æ(%2Ã
~org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?matcher@173.22:173.29CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaØ Ø(2 
|org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?entry@174.22:174.27CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaØ  Ø(%2À
}org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?groups@170.28:170.34CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∞ ∞(2À
}org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?groups@170.28:170.34CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑ ∑(2 
|org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?child@182.27:182.32CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑ ∑(2æ
porg.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑2 ∑(92À
}org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?groups@170.28:170.34CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∫ ∫(2√
porg.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java©@ ©(G2“
}org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?groups@170.28:170.34DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java™ ™("2”
~org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?matcher@173.22:173.29DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java≠ ≠(2—
|org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?entry@174.22:174.27DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÆ Æ(2—
|org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?child@182.27:182.32DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∂ ∂( 2c
java.util.ListRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java© ©(2É
%org.jabref.model.groups.GroupTreeNodeRETURN_TYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java© ©(◊
}org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?groups@170.28:170.34VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java™ ™(""
typeList<GroupTreeNode>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>List<GroupTreeNode> <mark class="class-field">groups</mark> = new ArrayList<>()*groups2\
java.util.ListTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java™ ™(2|
%org.jabref.model.groups.GroupTreeNodeTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java™ ™(2m
java.util.ArrayList.ArrayList()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java™) ™(4Å
~org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?matcher@173.22:173.29VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java≠ ≠("
typeSearchMatcher"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>SearchMatcher <mark class="class-field">matcher</mark> = getSearchMatcher()*matcher2s
%org.jabref.model.search.SearchMatcherTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java≠ ≠(2Ü
8org.jabref.model.groups.GroupTreeNode.getSearchMatcher()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java≠  ≠(0Õ
|org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?entry@174.22:174.27VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÆ Æ("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2m
org.jabref.model.entry.BibEntryTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÆ Æ(›
|org.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)?child@182.27:182.32VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∂ ∂( "
typeGroupTreeNode"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>GroupTreeNode <mark class="class-field">child</mark>*child2s
%org.jabref.model.groups.GroupTreeNodeTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∂ ∂(˘
porg.jabref.model.groups.GroupTreeNode.getMatchingGroups(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java©@ ©(G"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2\
java.util.ListTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java©1 ©(52v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java©6 ©(>ì
horg.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaΩ Ω(+"
isFinalfalse"õ
declarationStringÖ<mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">getEntriesInGroup</mark>(List&lt;BibEntry&gt; entries)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*getEntriesInGroup2ù
Oorg.jabref.model.groups.AbstractGroup.contains(org.jabref.model.entry.BibEntry)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¿ ¿(#2c
java.util.List.add(E)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¡ ¡(2m
java.util.ArrayList.ArrayList()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaæ$ æ(/2æ
porg.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaø ø(%2 
|org.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)?entry@191.22:191.27CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¿$ ¿()2À
}org.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)?result@190.23:190.29CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¡ ¡(2 
|org.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)?entry@191.22:191.27CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¡ ¡( 2À
}org.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)?result@190.23:190.29CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaƒ ƒ(2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¿ ¿(2√
porg.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaΩ; Ω(B2“
}org.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)?result@190.23:190.29DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaæ æ(2—
|org.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)?entry@191.22:191.27DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaø ø(2c
java.util.ListRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaΩ Ω(2}
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaΩ Ω(∆
}org.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)?result@190.23:190.29VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaæ æ("
typeList<BibEntry>"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = new ArrayList<>()*result2\
java.util.ListTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaæ æ(2v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaæ æ(2m
java.util.ArrayList.ArrayList()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaæ$ æ(/Õ
|org.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)?entry@191.22:191.27VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaø ø("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2m
org.jabref.model.entry.BibEntryTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaø ø(˘
porg.jabref.model.groups.GroupTreeNode.getEntriesInGroup(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaΩ; Ω(B"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2\
java.util.ListTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaΩ, Ω(02v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaΩ1 Ω(9∫
/org.jabref.model.groups.GroupTreeNode.getName()METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java« «("
isFinalfalse"f
declarationStringQ<mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2}
/org.jabref.model.groups.AbstractGroup.getName()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java» »(2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java» »(2e
java.lang.StringRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java« «(·
Xorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÀ À($"
isFinalfalse"á
declarationStringr<mark class="modifier">public </mark>GroupTreeNode <mark class="method">addSubgroup</mark>(AbstractGroup subgroup)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeGroupTreeNode*addSubgroup2§
Vorg.jabref.model.groups.GroupTreeNode.fromGroup(org.jabref.model.groups.AbstractGroup)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÃ, Ã(52s
%org.jabref.model.TreeNode.addChild(T)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÕ Õ(2Ø
aorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)!subgroupCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÃ6 Ã(>2∫
lorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)?child@204.22:204.27CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÕ Õ(2∫
lorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)?child@204.22:204.27CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaŒ Œ(2¥
aorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)!subgroup	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÀ3 À(;2¡
lorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)?child@204.22:204.27DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÃ Ã(2z
%org.jabref.model.groups.GroupTreeNodeRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÀ À(À
lorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)?child@204.22:204.27VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÃ Ã("
typeGroupTreeNode"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>GroupTreeNode <mark class="class-field">child</mark> = GroupTreeNode.fromGroup(subgroup)*child2s
%org.jabref.model.groups.GroupTreeNodeTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÃ Ã(2§
Vorg.jabref.model.groups.GroupTreeNode.fromGroup(org.jabref.model.groups.AbstractGroup)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÃ, Ã(52Ø
aorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)!subgroupCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÃ6 Ã(>â
aorg.jabref.model.groups.GroupTreeNode.addSubgroup(org.jabref.model.groups.AbstractGroup)!subgroup	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÀ3 À(;"
typeAbstractGroup"
isFinalfalse"+
declarationStringAbstractGroup subgroup*subgroup2s
%org.jabref.model.groups.AbstractGroupTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÀ% À(2∏
0org.jabref.model.groups.GroupTreeNode.copyNode()METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java“ “(!"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>GroupTreeNode <mark class="method">copyNode</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeGroupTreeNode*copyNode2§
Vorg.jabref.model.groups.GroupTreeNode.fromGroup(org.jabref.model.groups.AbstractGroup)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java” ”(&2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java”' ”(,2z
%org.jabref.model.groups.GroupTreeNodeRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java“ “(ä
borg.jabref.model.groups.GroupTreeNode.findMatches(java.util.List<org.jabref.model.entry.BibEntry>)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java‹ ‹(%"
isFinalfalse"î
declarationString<mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">findMatches</mark>(List&lt;BibEntry&gt; entries)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*findMatches2Ü
8org.jabref.model.groups.GroupTreeNode.getSearchMatcher()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java›  ›(02ï
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaﬂ ﬂ(2k
java.util.Collection.stream()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaﬁ ﬁ(2r
$java.util.stream.Collectors.toList()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java‡* ‡(02∏
jorg.jabref.model.groups.GroupTreeNode.findMatches(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaﬁ ﬁ(2ú
Norg.jabref.model.search.SearchMatcher.isMatch(org.jabref.model.entry.BibEntry)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaﬂ ﬂ(.2Ω
jorg.jabref.model.groups.GroupTreeNode.findMatches(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java‹5 ‹(<2Õ
xorg.jabref.model.groups.GroupTreeNode.findMatches(java.util.List<org.jabref.model.entry.BibEntry>)?matcher@221.22:221.29DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.java› ›(2c
java.util.ListRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java‹ ‹(2}
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java‹ ‹(˚
xorg.jabref.model.groups.GroupTreeNode.findMatches(java.util.List<org.jabref.model.entry.BibEntry>)?matcher@221.22:221.29VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java› ›("
typeSearchMatcher"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>SearchMatcher <mark class="class-field">matcher</mark> = getSearchMatcher()*matcher2s
%org.jabref.model.search.SearchMatcherTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java› ›(2Ü
8org.jabref.model.groups.GroupTreeNode.getSearchMatcher()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java›  ›(0Û
jorg.jabref.model.groups.GroupTreeNode.findMatches(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java‹5 ‹(<"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2\
java.util.ListTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java‹& ‹(*2v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java‹+ ‹(3¯
Xorg.jabref.model.groups.GroupTreeNode.findMatches(org.jabref.model.database.BibDatabase)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÈ È(%"
isFinalfalse"å
declarationStringw<mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">findMatches</mark>(BibDatabase database)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*findMatches2Ä
2org.jabref.model.database.BibDatabase.getEntries()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÍ$ Í(.2Ø
aorg.jabref.model.groups.GroupTreeNode.findMatches(org.jabref.model.database.BibDatabase)!databaseCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÍ Í(#2¥
aorg.jabref.model.groups.GroupTreeNode.findMatches(org.jabref.model.database.BibDatabase)!database	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÈ2 È(:2c
java.util.ListRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÈ È(2}
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÈ È(Ö
aorg.jabref.model.groups.GroupTreeNode.findMatches(org.jabref.model.database.BibDatabase)!database	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÈ2 È(:"
typeBibDatabase"
isFinalfalse")
declarationStringBibDatabase database*database2s
%org.jabref.model.database.BibDatabaseTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÈ& È(1Ô
Norg.jabref.model.groups.GroupTreeNode.matches(org.jabref.model.entry.BibEntry)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java ("
isFinalfalse"ì
declarationString~<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">matches</mark>(BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*matches2ú
Norg.jabref.model.search.SearchMatcher.isMatch(org.jabref.model.entry.BibEntry)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÒ" Ò()2Ü
8org.jabref.model.groups.GroupTreeNode.getSearchMatcher()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÒ Ò(2¢
Torg.jabref.model.groups.GroupTreeNode.matches(org.jabref.model.entry.BibEntry)!entryCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÒ* Ò(/2ß
Torg.jabref.model.groups.GroupTreeNode.matches(org.jabref.model.entry.BibEntry)!entry	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java$ ()2\
booleanRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (Ê
Torg.jabref.model.groups.GroupTreeNode.matches(org.jabref.model.entry.BibEntry)!entry	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java$ ()"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2m
org.jabref.model.entry.BibEntryTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (#Á
/org.jabref.model.groups.GroupTreeNode.getPath()METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java˘ ˘("
isFinalfalse"f
declarationStringQ<mark class="modifier">public </mark>String <mark class="method">getPath</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getPath2ö
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java˝! ˝((2û
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¸! ¸($2p
"java.util.stream.Stream.skip(long)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java˚! ˚(%2k
java.util.Collection.stream()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java˙! ˙('2y
+org.jabref.model.TreeNode.getPathFromRoot()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java˙ ˙(2â
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java˝4 ˝(;2é
@org.jabref.model.groups.GroupTreeNode?PATH_DELIMITER@23.32:23.46CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java˝< ˝(J2}
/org.jabref.model.groups.GroupTreeNode.getName()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¸% ¸(;2e
java.lang.StringRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java˘ ˘(Ó
0org.jabref.model.groups.GroupTreeNode.toString()METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÅ Å("
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">toString</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*toString2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÉ É( 2e
java.lang.StringRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÅ Å(Ø
Forg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaå# å(1"
isFinalfalse"ò
declarationStringÇ<mark class="modifier">public </mark>Optional&lt;GroupTreeNode&gt; <mark class="method">getChildByPath</mark>(String pathToSource)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<GroupTreeNode>*getChildByPath2v
(java.lang.String.split(java.lang.String)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaé- é(22u
'org.jabref.model.TreeNode.getChildren()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaê ê( 2l
java.util.Optional.isPresent()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaì ì('2f
java.util.Optional.get()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaî( î(+2h
java.util.Optional.empty()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaó  ó(%2f
java.util.Optional.of(T)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaõ õ(2°
Sorg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)!pathToSourceCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaé  é(,2é
@org.jabref.model.groups.GroupTreeNode?PATH_DELIMITER@23.32:23.46CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaé3 é(A2™
\org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?present@269.22:269.29CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaè4 è(;2®
Zorg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?group@273.28:273.33CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaë4 ë(92¨
^org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?groupName@270.20:270.29CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaëE ë(N2∞
borg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?childWithName@271.36:271.49CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaì ì(2™
\org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?present@269.22:269.29CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaî î(2∞
borg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?childWithName@271.36:271.49CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaî î('2™
\org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?present@269.22:269.29CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaõ õ("2¶
Sorg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)!pathToSource	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaå9 å(E2±
\org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?present@269.22:269.29DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaç ç(2≥
^org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?groupName@270.20:270.29DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaé é(2∑
borg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?childWithName@271.36:271.49DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaè$ è(12Ø
Zorg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?group@273.28:273.33DECLARATIOND
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaë ë(!2g
java.util.OptionalRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaå å(2É
%org.jabref.model.groups.GroupTreeNodeRETURN_TYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaå å(!Á
\org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?present@269.22:269.29VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaç ç("
typeGroupTreeNode"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>GroupTreeNode <mark class="class-field">present</mark> = <mark class="modifier">this</mark>*present2s
%org.jabref.model.groups.GroupTreeNodeTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaç ç(§
^org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?groupName@270.20:270.29VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaé é("
typeString"
isFinalfalse"e
declarationStringP<mark class="modifier"> </mark>String <mark class="class-field">groupName</mark>*	groupName2^
java.lang.StringTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaé é(Ÿ

borg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?childWithName@271.36:271.49VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaè$ è(1"
typeOptional<GroupTreeNode>"
isFinalfalse"Ç
declarationStringÏ<mark class="modifier"> </mark>Optional<GroupTreeNode> <mark class="class-field">childWithName</mark> = present.getChildren().stream().filter(group -> Objects.equals(group.getName()<mark class="modifier">,</mark> groupName)).findFirst()*childWithName2`
java.util.OptionalTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaè è(2|
%org.jabref.model.groups.GroupTreeNodeTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaè è("2u
'org.jabref.model.TreeNode.getChildren()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaê ê( 2™
\org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?present@269.22:269.29CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaè4 è(;2®
Zorg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?group@273.28:273.33CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaë4 ë(92¨
^org.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?groupName@270.20:270.29CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaëE ë(N‡
Sorg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)!pathToSource	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaå9 å(E"
typeString"
isFinalfalse"(
declarationStringString pathToSource*pathToSource2^
java.lang.StringTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaå2 å(8Ú
Zorg.jabref.model.groups.GroupTreeNode.getChildByPath(java.lang.String)?group@273.28:273.33VARIABLED
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaë ë(!"
type"
isFinalfalse"
declarationString group*group2TYPE˘
norg.jabref.model.groups.GroupTreeNode.addEntriesToGroup(java.util.Collection<org.jabref.model.entry.BibEntry>)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java° °(."
isFinalfalse"§
declarationStringé<mark class="modifier">public </mark>List&lt;FieldChange&gt; <mark class="method">addEntriesToGroup</mark>(Collection&lt;BibEntry&gt; entries)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<FieldChange>*addEntriesToGroup2~
0org.jabref.model.groups.GroupTreeNode.getGroup()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¢ ¢(2≤
dorg.jabref.model.groups.GroupEntryChanger.add(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java£4 £(72~
0org.jabref.model.groups.GroupTreeNode.getGroup()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java£( £(02o
!java.util.Collections.emptyList()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java• •((2ƒ
vorg.jabref.model.groups.GroupTreeNode.addEntriesToGroup(java.util.Collection<org.jabref.model.entry.BibEntry>)!entriesCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java£8 £(?2…
vorg.jabref.model.groups.GroupTreeNode.addEntriesToGroup(java.util.Collection<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java°D °(K2c
java.util.ListRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java° °(2z
org.jabref.model.FieldChangeRETURN_TYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java° °(ë
vorg.jabref.model.groups.GroupTreeNode.addEntriesToGroup(java.util.Collection<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java°D °(K"
typeCollection<BibEntry>"
isFinalfalse"1
declarationStringCollection<BibEntry> entries*entries2b
java.util.CollectionTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java°/ °(92v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java°: °(B˜
morg.jabref.model.groups.GroupTreeNode.removeEntriesFromGroup(java.util.List<org.jabref.model.entry.BibEntry>)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¨ ¨(3"
isFinalfalse"£
declarationStringç<mark class="modifier">public </mark>List&lt;FieldChange&gt; <mark class="method">removeEntriesFromGroup</mark>(List&lt;BibEntry&gt; entries)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<FieldChange>*removeEntriesFromGroup2~
0org.jabref.model.groups.GroupTreeNode.getGroup()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java≠ ≠(2Ø
aorg.jabref.model.groups.GroupEntryChanger.remove(java.util.List<org.jabref.model.entry.BibEntry>)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÆ4 Æ(:2~
0org.jabref.model.groups.GroupTreeNode.getGroup()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÆ( Æ(02o
!java.util.Collections.emptyList()CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∞ ∞((2√
uorg.jabref.model.groups.GroupTreeNode.removeEntriesFromGroup(java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.javaÆ; Æ(B2»
uorg.jabref.model.groups.GroupTreeNode.removeEntriesFromGroup(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¨C ¨(J2c
java.util.ListRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¨ ¨(2z
org.jabref.model.FieldChangeRETURN_TYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¨ ¨(˛
uorg.jabref.model.groups.GroupTreeNode.removeEntriesFromGroup(java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¨C ¨(J"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2\
java.util.ListTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¨4 ¨(82v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java¨9 ¨(Aö

Zorg.jabref.model.groups.GroupTreeNode.isSameGroupAs(org.jabref.model.groups.GroupTreeNode)METHODD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑ ∑( "
isFinalfalse"ü
declarationStringâ<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isSameGroupAs</mark>(GroupTreeNode other)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isSameGroupAs2ä
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∏ ∏(2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∏ ∏(#2Æ
`org.jabref.model.groups.GroupTreeNode.isSameGroupAs(org.jabref.model.groups.GroupTreeNode)!otherCALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∏% ∏(*2Ö
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31CALLD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∏+ ∏(02≥
`org.jabref.model.groups.GroupTreeNode.isSameGroupAs(org.jabref.model.groups.GroupTreeNode)!other	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑/ ∑(42\
booleanRETURN_TYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑ ∑(Ç
`org.jabref.model.groups.GroupTreeNode.isSameGroupAs(org.jabref.model.groups.GroupTreeNode)!other	PARAMETERD
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑/ ∑(4"
typeGroupTreeNode"
isFinalfalse"(
declarationStringGroupTreeNode other*other2s
%org.jabref.model.groups.GroupTreeNodeTYPED
8src\main\java\org\jabref\model\groups\GroupTreeNode.java∑! ∑(.à
@org.jabref.model.groups.GroupTreeNode?PATH_DELIMITER@23.32:23.46VALUEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java  (."
isFinaltrue"
typeString"ƒ
declarationStringÆ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">PATH_DELIMITER</mark> = " > ";"
isStatictrue"
accessprivate*PATH_DELIMITER2\
java.lang.StringTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (¡
7org.jabref.model.groups.GroupTreeNode?group@24.26:24.31VARIABLEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java ("
isFinalfalse"
typeAbstractGroup"o
declarationStringZ<mark class="modifier">private </mark>AbstractGroup <mark class="class-field">group</mark>"
isStaticfalse"
accessprivate*group2q
%org.jabref.model.groups.AbstractGroupTYPEB
8src\main\java\org\jabref\model\groups\GroupTreeNode.java (