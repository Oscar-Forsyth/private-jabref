
:src\main\java\org\jabref\model\groups\AllEntriesGroup.javaó
'org.jabref.model.groups.AllEntriesGroupCLASSD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java	 	(""
packageorg.jabref.model.groups"
isFinalfalse"
inner classfalse"

isAbstractfalse"¢
declarationStringå<mark class="modifier">public </mark><mark class="modifier">class </mark>AllEntriesGroup<mark class="modifier"> extends </mark>AbstractGroup"
accesspublic*AllEntriesGroup2û
Iorg.jabref.model.groups.AllEntriesGroup.AllEntriesGroup(java.lang.String)DECLARATIOND
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2á
2org.jabref.model.groups.AllEntriesGroup.deepCopy()DECLARATIOND
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (!2ï
@org.jabref.model.groups.AllEntriesGroup.equals(java.lang.Object)DECLARATIOND
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2¶
Qorg.jabref.model.groups.AllEntriesGroup.contains(org.jabref.model.entry.BibEntry)DECLARATIOND
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2à
3org.jabref.model.groups.AllEntriesGroup.isDynamic()DECLARATIOND
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2á
2org.jabref.model.groups.AllEntriesGroup.hashCode()DECLARATIOND
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java% %(2u
%org.jabref.model.groups.AbstractGroupEXTENDD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java	% 	(2¶
Iorg.jabref.model.groups.AllEntriesGroup.AllEntriesGroup(java.lang.String)CONSTRUCTORD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java ("r
declarationString]<mark class="modifier">public </mark><mark class="method">AllEntriesGroup</mark>(String name)*AllEntriesGroup2ø
qorg.jabref.model.groups.AbstractGroup.AbstractGroup(java.lang.String, org.jabref.model.groups.GroupHierarchyType)CALLD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2ú
Norg.jabref.model.groups.AllEntriesGroup.AllEntriesGroup(java.lang.String)!nameCALLD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2°
Norg.jabref.model.groups.AllEntriesGroup.AllEntriesGroup(java.lang.String)!name	PARAMETERD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java" (&2|
'org.jabref.model.groups.AllEntriesGroupRETURN_TYPED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (À
Norg.jabref.model.groups.AllEntriesGroup.AllEntriesGroup(java.lang.String)!name	PARAMETERD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java" (&"
typeString"
isFinalfalse" 
declarationStringString name*name2^
java.lang.StringTYPED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (!©
2org.jabref.model.groups.AllEntriesGroup.deepCopy()METHODD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (!"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>AbstractGroup <mark class="method">deepCopy</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeAbstractGroup*deepCopy2}
/org.jabref.model.groups.AbstractGroup.getName()CALLD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java# (*2ó
Iorg.jabref.model.groups.AllEntriesGroup.AllEntriesGroup(java.lang.String)CALLD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java ("2Ç
0org.jabref.model.groups.AbstractGroup.deepCopy()OVERRIDED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (!2z
%org.jabref.model.groups.AbstractGroupRETURN_TYPED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (Œ
@org.jabref.model.groups.AllEntriesGroup.equals(java.lang.Object)METHODD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java ("
isFinalfalse"ª
declarationString•<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">equals</mark>(Object o)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*equals2}
/org.jabref.model.groups.AbstractGroup.getName()CALLD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.javaQ (X2ê
Borg.jabref.model.groups.AllEntriesGroup.equals(java.lang.Object)!oCALLD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2ê
>org.jabref.model.groups.AbstractGroup.equals(java.lang.Object)OVERRIDED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2ï
Borg.jabref.model.groups.AllEntriesGroup.equals(java.lang.Object)!o	PARAMETERD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java! ("2\
booleanRETURN_TYPED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (π
Borg.jabref.model.groups.AllEntriesGroup.equals(java.lang.Object)!o	PARAMETERD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java! (""
typeObject"
isFinalfalse"
declarationStringObject o*o2^
java.lang.ObjectTYPED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java ( ˝
Qorg.jabref.model.groups.AllEntriesGroup.contains(org.jabref.model.entry.BibEntry)METHODD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java ("
isFinalfalse"√
declarationString≠<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">contains</mark>(BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*contains2°
Oorg.jabref.model.groups.AbstractGroup.contains(org.jabref.model.entry.BibEntry)OVERRIDED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2™
Worg.jabref.model.groups.AllEntriesGroup.contains(org.jabref.model.entry.BibEntry)!entry	PARAMETERD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java% (*2\
booleanRETURN_TYPED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (È
Worg.jabref.model.groups.AllEntriesGroup.contains(org.jabref.model.entry.BibEntry)!entry	PARAMETERD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java% (*"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2m
org.jabref.model.entry.BibEntryTYPED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java ($à
3org.jabref.model.groups.AllEntriesGroup.isDynamic()METHODD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java ("
isFinalfalse"∂
declarationString†<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isDynamic</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*	isDynamic2É
1org.jabref.model.groups.AbstractGroup.isDynamic()OVERRIDED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (2\
booleanRETURN_TYPED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java (‚
2org.jabref.model.groups.AllEntriesGroup.hashCode()METHODD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java% %("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">hashCode</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*hashCode2i
java.lang.String.hashCode()CALLD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java& &(!2}
/org.jabref.model.groups.AbstractGroup.getName()CALLD
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java& &(2Ç
0org.jabref.model.groups.AbstractGroup.hashCode()OVERRIDED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java% %(2X
intRETURN_TYPED
:src\main\java\org\jabref\model\groups\AllEntriesGroup.java% %(