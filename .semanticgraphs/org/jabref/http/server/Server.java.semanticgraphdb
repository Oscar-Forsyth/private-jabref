
0src\main\java\org\jabref\http\server\Server.javaÔ	
org.jabref.http.server.ServerCLASS:
0src\main\java\org\jabref\http\server\Server.java ("!
packageorg.jabref.http.server"
isFinalfalse"
inner classfalse"

isAbstractfalse"†
declarationStringä<mark class="annotation">@AllowedToUseStandardStreams("This is a CLI application. It resides in the package http.server to be close to the other http server related classes.")</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>Server"
accesspublic*Server2Å
6org.jabref.http.server.Server.main(java.lang.String[])DECLARATION:
0src\main\java\org\jabref\http\server\Server.java" "(2v
+org.jabref.http.server.Server.startServer()DECLARATION:
0src\main\java\org\jabref\http\server\Server.javaL L(#2x
-org.jabref.http.server.Server.getSslContext()DECLARATION:
0src\main\java\org\jabref\http\server\Server.javab b(+2u
*org.jabref.http.server.Server.stopServer()DECLARATION:
0src\main\java\org\jabref\http\server\Server.javat t(2{
0org.jabref.http.server.Server?LOGGER@26.32:26.38DECLARATION:
0src\main\java\org\jabref\http\server\Server.java  (&2É
8org.jabref.http.server.Server?serverInstance@28.40:28.54DECLARATION:
0src\main\java\org\jabref\http\server\Server.java( (6ı-
6org.jabref.http.server.Server.main(java.lang.String[])METHOD:
0src\main\java\org\jabref\http\server\Server.java" "("
isFinalfalse"‡
declarationString <mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">main</mark>(final String[] args)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>InterruptedException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*main2~
:org.jabref.preferences.GuiPreferences.getLastFilesOpened()CALL:
0src\main\java\org\jabref\http\server\Server.java&i &({2Ä
<org.jabref.preferences.JabRefPreferences.getGuiPreferences()CALL:
0src\main\java\org\jabref\http\server\Server.java&U &(f2z
6org.jabref.preferences.JabRefPreferences.getInstance()CALL:
0src\main\java\org\jabref\http\server\Server.java&G &(R2d
 java.util.stream.Stream.toList()CALL:
0src\main\java\org\jabref\http\server\Server.java1+ 1(12ã
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALL:
0src\main\java\org\jabref\http\server\Server.java0+ 0(12ã
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALL:
0src\main\java\org\jabref\http\server\Server.java/+ /(12î
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL:
0src\main\java\org\jabref\http\server\Server.java.+ .(.2`
java.util.Arrays.stream(T[])CALL:
0src\main\java\org\jabref\http\server\Server.java-+ -(12g
#java.nio.file.Path.toAbsolutePath()CALL:
0src\main\java\org\jabref\http\server\Server.java?e ?(s2Ä
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL:
0src\main\java\org\jabref\http\server\Server.java?  ?("2o
+org.jabref.http.server.Server.startServer()CALL:
0src\main\java\org\jabref\http\server\Server.javaF F(2[
java.lang.Thread.join()CALL:
0src\main\java\org\jabref\http\server\Server.javaI I(#2d
 java.lang.Thread.currentThread()CALL:
0src\main\java\org\jabref\http\server\Server.javaI I(2
;org.jabref.http.server.Server.main(java.lang.String[])!argsCALL:
0src\main\java\org\jabref\http\server\Server.java+ +(2t
0org.jabref.http.server.Server?LOGGER@26.32:26.38CALL:
0src\main\java\org\jabref\http\server\Server.java, ,(2
;org.jabref.http.server.Server.main(java.lang.String[])!argsCALL:
0src\main\java\org\jabref\http\server\Server.java-2 -(62ñ
Rorg.jabref.http.server.Server.main(java.lang.String[])?lastFilesOpened@38.35:38.50CALL:
0src\main\java\org\jabref\http\server\Server.java0; 0(J2ã
Gorg.jabref.http.server.Server.main(java.lang.String[])?path@48.50:48.54CALL:
0src\main\java\org\jabref\http\server\Server.java0T 0(X2t
0org.jabref.http.server.Server?LOGGER@26.32:26.38CALL:
0src\main\java\org\jabref\http\server\Server.java3 3(2ë
Morg.jabref.http.server.Server.main(java.lang.String[])?filesToAdd@45.23:45.33CALL:
0src\main\java\org\jabref\http\server\Server.java3W 3(a2ë
Morg.jabref.http.server.Server.main(java.lang.String[])?filesToAdd@45.23:45.33CALL:
0src\main\java\org\jabref\http\server\Server.java6 6('2ñ
Rorg.jabref.http.server.Server.main(java.lang.String[])?lastFilesOpened@38.35:38.50CALL:
0src\main\java\org\jabref\http\server\Server.java7 7(2ã
Gorg.jabref.http.server.Server.main(java.lang.String[])?path@54.22:54.26CALL:
0src\main\java\org\jabref\http\server\Server.java7) 7(-2ñ
Rorg.jabref.http.server.Server.main(java.lang.String[])?lastFilesOpened@38.35:38.50CALL:
0src\main\java\org\jabref\http\server\Server.java; ;(2t
0org.jabref.http.server.Server?LOGGER@26.32:26.38CALL:
0src\main\java\org\jabref\http\server\Server.java< <(2t
0org.jabref.http.server.Server?LOGGER@26.32:26.38CALL:
0src\main\java\org\jabref\http\server\Server.java@ @(2é
Jorg.jabref.http.server.Server.main(java.lang.String[])?bibPath@63.17:63.24CALL:
0src\main\java\org\jabref\http\server\Server.java@9 @(@2ñ
Rorg.jabref.http.server.Server.main(java.lang.String[])?lastFilesOpened@38.35:38.50CALL:
0src\main\java\org\jabref\http\server\Server.javaA A(2é
Jorg.jabref.http.server.Server.main(java.lang.String[])?bibPath@63.17:63.24CALL:
0src\main\java\org\jabref\http\server\Server.javaA  A('2t
0org.jabref.http.server.Server?LOGGER@26.32:26.38CALL:
0src\main\java\org\jabref\http\server\Server.javaD D(2ñ
Rorg.jabref.http.server.Server.main(java.lang.String[])?lastFilesOpened@38.35:38.50CALL:
0src\main\java\org\jabref\http\server\Server.javaD- D(<2Ä
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL:
0src\main\java\org\jabref\http\server\Server.java./ .(72è
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALL:
0src\main\java\org\jabref\http\server\Server.java/2 /(?2Ñ
;org.jabref.http.server.Server.main(java.lang.String[])!args	PARAMETER:
0src\main\java\org\jabref\http\server\Server.java"+ "(/2ù
Rorg.jabref.http.server.Server.main(java.lang.String[])?lastFilesOpened@38.35:38.50DECLARATION:
0src\main\java\org\jabref\http\server\Server.java&# &(22ò
Morg.jabref.http.server.Server.main(java.lang.String[])?filesToAdd@45.23:45.33DECLARATION:
0src\main\java\org\jabref\http\server\Server.java- -(!2í
Gorg.jabref.http.server.Server.main(java.lang.String[])?path@54.22:54.26DECLARATION:
0src\main\java\org\jabref\http\server\Server.java6 6(2ï
Jorg.jabref.http.server.Server.main(java.lang.String[])?bibPath@63.17:63.24DECLARATION:
0src\main\java\org\jabref\http\server\Server.java? ?(2í
Gorg.jabref.http.server.Server.main(java.lang.String[])?path@48.50:48.54DECLARATION:
0src\main\java\org\jabref\http\server\Server.java02 0(62O
voidRETURN_TYPE:
0src\main\java\org\jabref\http\server\Server.java" "(ä
Rorg.jabref.http.server.Server.main(java.lang.String[])?lastFilesOpened@38.35:38.50VALUE:
0src\main\java\org\jabref\http\server\Server.java&# &(2"
typeObservableList<Path>"
isFinaltrue"È
declarationString”<mark class="modifier"> </mark><mark class="modifier">final </mark>ObservableList<Path> <mark class="class-field">lastFilesOpened</mark> = JabRefPreferences.getInstance().getGuiPreferences().getLastFilesOpened()*lastFilesOpened2e
!javafx.collections.ObservableListTYPE:
0src\main\java\org\jabref\http\server\Server.java& &(2_
java.nio.file.PathTYPE_ARGUMENT:
0src\main\java\org\jabref\http\server\Server.java& &(!2~
:org.jabref.preferences.GuiPreferences.getLastFilesOpened()CALL:
0src\main\java\org\jabref\http\server\Server.java&i &({2Ä
<org.jabref.preferences.JabRefPreferences.getGuiPreferences()CALL:
0src\main\java\org\jabref\http\server\Server.java&U &(f2z
6org.jabref.preferences.JabRefPreferences.getInstance()CALL:
0src\main\java\org\jabref\http\server\Server.java&G &(Rï
Morg.jabref.http.server.Server.main(java.lang.String[])?filesToAdd@45.23:45.33VARIABLE:
0src\main\java\org\jabref\http\server\Server.java- -(!"
type
List<Path>"
isFinalfalse"ﬁ
declarationString»<mark class="modifier"> </mark>List<Path> <mark class="class-field">filesToAdd</mark> = Arrays.stream(args).map(Path::of).filter(Files::exists).filter(path -> !lastFilesOpened.contains(path)).toList()*
filesToAdd2R
java.util.ListTYPE:
0src\main\java\org\jabref\http\server\Server.java- -(2_
java.nio.file.PathTYPE_ARGUMENT:
0src\main\java\org\jabref\http\server\Server.java- -(2d
 java.util.stream.Stream.toList()CALL:
0src\main\java\org\jabref\http\server\Server.java1+ 1(12ã
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALL:
0src\main\java\org\jabref\http\server\Server.java0+ 0(12ã
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALL:
0src\main\java\org\jabref\http\server\Server.java/+ /(12î
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL:
0src\main\java\org\jabref\http\server\Server.java.+ .(.2`
java.util.Arrays.stream(T[])CALL:
0src\main\java\org\jabref\http\server\Server.java-+ -(12
;org.jabref.http.server.Server.main(java.lang.String[])!argsCALL:
0src\main\java\org\jabref\http\server\Server.java-2 -(62ñ
Rorg.jabref.http.server.Server.main(java.lang.String[])?lastFilesOpened@38.35:38.50CALL:
0src\main\java\org\jabref\http\server\Server.java0; 0(J2ã
Gorg.jabref.http.server.Server.main(java.lang.String[])?path@48.50:48.54CALL:
0src\main\java\org\jabref\http\server\Server.java0T 0(X2Ä
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL:
0src\main\java\org\jabref\http\server\Server.java./ .(72è
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALL:
0src\main\java\org\jabref\http\server\Server.java/2 /(?Ì
Gorg.jabref.http.server.Server.main(java.lang.String[])?path@54.22:54.26VARIABLE:
0src\main\java\org\jabref\http\server\Server.java6 6("
typePath"
isFinalfalse"^
declarationStringI<mark class="modifier"> </mark>Path <mark class="class-field">path</mark>*path2V
java.nio.file.PathTYPE:
0src\main\java\org\jabref\http\server\Server.java6 6(¡
Jorg.jabref.http.server.Server.main(java.lang.String[])?bibPath@63.17:63.24VARIABLE:
0src\main\java\org\jabref\http\server\Server.java? ?("
typePath"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>Path <mark class="class-field">bibPath</mark> = Path.of("src/main/resources/org/jabref/http/server/http-server-demo.bib").toAbsolutePath()*bibPath2V
java.nio.file.PathTYPE:
0src\main\java\org\jabref\http\server\Server.java? ?(2g
#java.nio.file.Path.toAbsolutePath()CALL:
0src\main\java\org\jabref\http\server\Server.java?e ?(s2Ä
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALL:
0src\main\java\org\jabref\http\server\Server.java?  ?("©
;org.jabref.http.server.Server.main(java.lang.String[])!args	PARAMETER:
0src\main\java\org\jabref\http\server\Server.java"+ "(/"
typeString[]"
isFinaltrue""
declarationStringString[] args*args2V
java.lang.String[]TYPE:
0src\main\java\org\jabref\http\server\Server.java"" "(*”
Gorg.jabref.http.server.Server.main(java.lang.String[])?path@48.50:48.54VARIABLE:
0src\main\java\org\jabref\http\server\Server.java02 0(6"
type"
isFinalfalse"
declarationString path*path2TYPEæ
+org.jabref.http.server.Server.startServer()METHOD:
0src\main\java\org\jabref\http\server\Server.javaL L(#"
isFinalfalse"≠
declarationStringó<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">startServer</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*startServer2q
-org.jabref.http.server.Server.getSslContext()CALL:
0src\main\java\org\jabref\http\server\Server.javaM  M(-2q
-java.io.PrintStream.println(java.lang.String)CALL:
0src\main\java\org\jabref\http\server\Server.java] ](2Ü
Borg.jabref.http.server.Server.startServer()?sslContext@77.19:77.29CALL:
0src\main\java\org\jabref\http\server\Server.javaP P(&2t
0org.jabref.http.server.Server?LOGGER@26.32:26.38CALL:
0src\main\java\org\jabref\http\server\Server.javaT T(2â
Eorg.jabref.http.server.Server.startServer()?configuration@78.34:78.47CALL:
0src\main\java\org\jabref\http\server\Server.javaU- U(:2t
0org.jabref.http.server.Server?LOGGER@26.32:26.38CALL:
0src\main\java\org\jabref\http\server\Server.javaV V(2Ñ
@org.jabref.http.server.Server.startServer()?instance@85.71:85.79CALL:
0src\main\java\org\jabref\http\server\Server.javaW W(2Ü
Borg.jabref.http.server.Server.startServer()?stopResult@87.36:87.46CALL:
0src\main\java\org\jabref\http\server\Server.javaXU X(_2Ü
Borg.jabref.http.server.Server.startServer()?stopResult@87.36:87.46CALL:
0src\main\java\org\jabref\http\server\Server.javaY Y(&2Ñ
@org.jabref.http.server.Server.startServer()?instance@85.71:85.79CALL:
0src\main\java\org\jabref\http\server\Server.javaZ Z($2Ñ
@org.jabref.http.server.Server.startServer()?instance@85.71:85.79CALL:
0src\main\java\org\jabref\http\server\Server.java[R [(Z2
;org.jabref.http.server.Server.startServer()?uri@90.22:90.25CALL:
0src\main\java\org\jabref\http\server\Server.java[\ [(_2Ñ
@org.jabref.http.server.Server.startServer()?instance@85.71:85.79CALL:
0src\main\java\org\jabref\http\server\Server.java\ \(2|
8org.jabref.http.server.Server?serverInstance@28.40:28.54CALL:
0src\main\java\org\jabref\http\server\Server.java^ ^(2Ñ
@org.jabref.http.server.Server.startServer()?instance@85.71:85.79CALL:
0src\main\java\org\jabref\http\server\Server.java^ ^(%2ç
Borg.jabref.http.server.Server.startServer()?sslContext@77.19:77.29DECLARATION:
0src\main\java\org\jabref\http\server\Server.javaM M(2ê
Eorg.jabref.http.server.Server.startServer()?configuration@78.34:78.47DECLARATION:
0src\main\java\org\jabref\http\server\Server.javaN" N(/2Ü
;org.jabref.http.server.Server.startServer()?uri@90.22:90.25DECLARATION:
0src\main\java\org\jabref\http\server\Server.javaZ Z(2ã
@org.jabref.http.server.Server.startServer()?instance@85.71:85.79DECLARATION:
0src\main\java\org\jabref\http\server\Server.javaUG U(O2ç
Borg.jabref.http.server.Server.startServer()?stopResult@87.36:87.46DECLARATION:
0src\main\java\org\jabref\http\server\Server.javaW$ W(.2O
voidRETURN_TYPE:
0src\main\java\org\jabref\http\server\Server.javaL L(ã
Borg.jabref.http.server.Server.startServer()?sslContext@77.19:77.29VARIABLE:
0src\main\java\org\jabref\http\server\Server.javaM M("
type
SSLContext"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>SSLContext <mark class="class-field">sslContext</mark> = getSslContext()*
sslContext2\
javax.net.ssl.SSLContextTYPE:
0src\main\java\org\jabref\http\server\Server.javaM M(2q
-org.jabref.http.server.Server.getSslContext()CALL:
0src\main\java\org\jabref\http\server\Server.javaM  M(-©
Eorg.jabref.http.server.Server.startServer()?configuration@78.34:78.47VARIABLE:
0src\main\java\org\jabref\http\server\Server.javaN" N(/"!
typeSeBootstrap.Configuration"
isFinalfalse"ﬂ
declarationString…<mark class="modifier"> </mark>SeBootstrap.Configuration <mark class="class-field">configuration</mark> = SeBootstrap.Configuration.builder().sslContext(sslContext).protocol("HTTPS").port(6051).build()*configuration2k
'jakarta.ws.rs.SeBootstrap.ConfigurationTYPE:
0src\main\java\org\jabref\http\server\Server.javaN N(!2Ü
Borg.jabref.http.server.Server.startServer()?sslContext@77.19:77.29CALL:
0src\main\java\org\jabref\http\server\Server.javaP P(&•
;org.jabref.http.server.Server.startServer()?uri@90.22:90.25VALUE:
0src\main\java\org\jabref\http\server\Server.javaZ Z("
typeURI"
isFinaltrue"¶
declarationStringê<mark class="modifier"> </mark><mark class="modifier">final </mark>URI <mark class="class-field">uri</mark> = instance.configuration().baseUri()*uri2P
java.net.URITYPE:
0src\main\java\org\jabref\http\server\Server.javaZ Z(2Ñ
@org.jabref.http.server.Server.startServer()?instance@85.71:85.79CALL:
0src\main\java\org\jabref\http\server\Server.javaZ Z($‘
@org.jabref.http.server.Server.startServer()?instance@85.71:85.79VARIABLE:
0src\main\java\org\jabref\http\server\Server.javaUG U(O"
type"
isFinalfalse"
declarationString	 instance*instance2TYPE⁄
Borg.jabref.http.server.Server.startServer()?stopResult@87.36:87.46VARIABLE:
0src\main\java\org\jabref\http\server\Server.javaW$ W(."
type"
isFinalfalse" 
declarationString stopResult*
stopResult2TYPEÿ
-org.jabref.http.server.Server.getSslContext()METHOD:
0src\main\java\org\jabref\http\server\Server.javab b(+"
isFinalfalse"ó
declarationStringÅ<mark class="modifier">private </mark><mark class="modifier">static </mark>SSLContext <mark class="method">getSslContext</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
type
SSLContext*getSslContext2è
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALL:
0src\main\java\org\jabref\http\server\Server.javaj j(2a
java.nio.file.Path.toString()CALL:
0src\main\java\org\jabref\http\server\Server.javak< k(D2é
Jorg.jabref.http.server.Server.getSslContext()?serverKeyStore@100.13:100.27CALL:
0src\main\java\org\jabref\http\server\Server.javaj j('2é
Jorg.jabref.http.server.Server.getSslContext()?sslContextConfig@99.31:99.47CALL:
0src\main\java\org\jabref\http\server\Server.javak k(2é
Jorg.jabref.http.server.Server.getSslContext()?serverKeyStore@100.13:100.27CALL:
0src\main\java\org\jabref\http\server\Server.javak- k(;2é
Jorg.jabref.http.server.Server.getSslContext()?sslContextConfig@99.31:99.47CALL:
0src\main\java\org\jabref\http\server\Server.javal l(2t
0org.jabref.http.server.Server?LOGGER@26.32:26.38CALL:
0src\main\java\org\jabref\http\server\Server.javan n(2é
Jorg.jabref.http.server.Server.getSslContext()?serverKeyStore@100.13:100.27CALL:
0src\main\java\org\jabref\http\server\Server.javan@ n(N2t
0org.jabref.http.server.Server?LOGGER@26.32:26.38CALL:
0src\main\java\org\jabref\http\server\Server.javao o(2é
Jorg.jabref.http.server.Server.getSslContext()?sslContextConfig@99.31:99.47CALL:
0src\main\java\org\jabref\http\server\Server.javaq q(2ï
Jorg.jabref.http.server.Server.getSslContext()?sslContextConfig@99.31:99.47DECLARATION:
0src\main\java\org\jabref\http\server\Server.javac c(/2ï
Jorg.jabref.http.server.Server.getSslContext()?serverKeyStore@100.13:100.27DECLARATION:
0src\main\java\org\jabref\http\server\Server.javad d(2c
javax.net.ssl.SSLContextRETURN_TYPE:
0src\main\java\org\jabref\http\server\Server.javab b(Î
Jorg.jabref.http.server.Server.getSslContext()?sslContextConfig@99.31:99.47VARIABLE:
0src\main\java\org\jabref\http\server\Server.javac c(/"
typeSSLContextConfigurator"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>SSLContextConfigurator <mark class="class-field">sslContextConfig</mark> = new SSLContextConfigurator()*sslContextConfig2t
0org.glassfish.grizzly.ssl.SSLContextConfiguratorTYPE:
0src\main\java\org\jabref\http\server\Server.javac c(§
Jorg.jabref.http.server.Server.getSslContext()?serverKeyStore@100.13:100.27VARIABLE:
0src\main\java\org\jabref\http\server\Server.javad d("
typePath"
isFinalfalse"á
declarationStringÒ<mark class="modifier"> </mark>Path <mark class="class-field">serverKeyStore</mark> = Path.of(AppDirsFactory.getInstance().getUserDataDir(OS.APP_DIR_APP_NAME, "ssl"<mark class="modifier">,</mark> OS.APP_DIR_APP_AUTHOR)).resolve("server.p12")*serverKeyStore2V
java.nio.file.PathTYPE:
0src\main\java\org\jabref\http\server\Server.javad d(’
*org.jabref.http.server.Server.stopServer()METHOD:
0src\main\java\org\jabref\http\server\Server.javat t("
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">stopServer</mark>()"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typevoid*
stopServer2|
8org.jabref.http.server.Server?serverInstance@28.40:28.54CALL:
0src\main\java\org\jabref\http\server\Server.javau u(2O
voidRETURN_TYPE:
0src\main\java\org\jabref\http\server\Server.javat t(¯
0org.jabref.http.server.Server?LOGGER@26.32:26.38VALUE:
0src\main\java\org\jabref\http\server\Server.java  (&"
isFinaltrue"
typeLogger"‹
declarationString∆<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(Server.class);"
isStatictrue"
accessprivate*LOGGER2T
org.slf4j.LoggerTYPE:
0src\main\java\org\jabref\http\server\Server.java (ı
8org.jabref.http.server.Server?serverInstance@28.40:28.54VARIABLE:
0src\main\java\org\jabref\http\server\Server.java( (6"
isFinalfalse"
typeSeBootstrap.Instance"•
declarationStringè<mark class="modifier">private </mark><mark class="modifier">static </mark>SeBootstrap.Instance <mark class="class-field">serverInstance</mark>"
isStatictrue"
accessprivate*serverInstance2f
"jakarta.ws.rs.SeBootstrap.InstanceTYPE:
0src\main\java\org\jabref\http\server\Server.java ('