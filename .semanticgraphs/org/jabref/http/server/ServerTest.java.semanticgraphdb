
4src\test\java\org\jabref\http\server\ServerTest.javaè
!org.jabref.http.server.ServerTestCLASS>
4src\test\java\org\jabref\http\server\ServerTest.java! !("!
packageorg.jabref.http.server"
isFinalfalse"
inner classfalse"

isAbstracttrue"ª
declarationString•<mark class="modifier"> </mark><mark class="modifier">abstract </mark><mark class="modifier">class </mark>ServerTest<mark class="modifier"> extends </mark>JerseyTest"
accesspackage_private*
ServerTest2á
8org.jabref.http.server.ServerTest.installLoggingBridge()DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.java' '($2¥
eorg.jabref.http.server.ServerTest.addGsonToResourceConfig(org.glassfish.jersey.server.ResourceConfig)DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.java/ /(*2ª
lorg.jabref.http.server.ServerTest.addPreferencesToResourceConfig(org.glassfish.jersey.server.ResourceConfig)DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.java8 8(12Ω
norg.jabref.http.server.ServerTest.setAvailableLibraries(java.util.EnumSet<org.jabref.http.server.TestBibFile>)DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.javaA A((2è
@org.jabref.http.server.ServerTest.initializePreferencesService()DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.javaI I(42è
@org.jabref.http.server.ServerTest?preferencesService@35.38:35.56DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.java#& #(82ã
<org.jabref.http.server.ServerTest?guiPreferences@36.34:36.48DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.java$" $(02n
$org.glassfish.jersey.test.JerseyTestEXTEND>
4src\test\java\org\jabref\http\server\ServerTest.java!" !(,ª
8org.jabref.http.server.ServerTest.installLoggingBridge()METHOD>
4src\test\java\org\jabref\http\server\ServerTest.java' '($"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@BeforeAll</mark> <br><mark class="modifier"> </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">installLoggingBridge</mark>()"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typevoid*installLoggingBridge2à
@org.jabref.http.server.ServerTest.initializePreferencesService()CALL>
4src\test\java\org\jabref\http\server\ServerTest.java, ,($2S
voidRETURN_TYPE>
4src\test\java\org\jabref\http\server\ServerTest.java' '(ù	
eorg.jabref.http.server.ServerTest.addGsonToResourceConfig(org.glassfish.jersey.server.ResourceConfig)METHOD>
4src\test\java\org\jabref\http\server\ServerTest.java/ /(*"
isFinalfalse"≥
declarationStringù<mark class="modifier">protected </mark><mark class="modifier">void</mark> <mark class="method">addGsonToResourceConfig</mark>(ResourceConfig resourceConfig)"
isStaticfalse"
access	protected"

isAbstractfalse"
typevoid*addGsonToResourceConfig2q
)org.jabref.http.dto.GsonFactory.provide()CALL>
4src\test\java\org\jabref\http\server\ServerTest.java3' 3(.2u
-org.jabref.http.dto.GsonFactory.GsonFactory()CALL>
4src\test\java\org\jabref\http\server\ServerTest.java3 3($2º
torg.jabref.http.server.ServerTest.addGsonToResourceConfig(org.glassfish.jersey.server.ResourceConfig)!resourceConfigCALL>
4src\test\java\org\jabref\http\server\ServerTest.java0 0(2¡
torg.jabref.http.server.ServerTest.addGsonToResourceConfig(org.glassfish.jersey.server.ResourceConfig)!resourceConfig	PARAMETER>
4src\test\java\org\jabref\http\server\ServerTest.java/: /(H2S
voidRETURN_TYPE>
4src\test\java\org\jabref\http\server\ServerTest.java/ /(£
torg.jabref.http.server.ServerTest.addGsonToResourceConfig(org.glassfish.jersey.server.ResourceConfig)!resourceConfig	PARAMETER>
4src\test\java\org\jabref\http\server\ServerTest.java/: /(H"
typeResourceConfig"
isFinalfalse"2
declarationStringResourceConfig resourceConfig*resourceConfig2r
*org.glassfish.jersey.server.ResourceConfigTYPE>
4src\test\java\org\jabref\http\server\ServerTest.java/+ /(9·
lorg.jabref.http.server.ServerTest.addPreferencesToResourceConfig(org.glassfish.jersey.server.ResourceConfig)METHOD>
4src\test\java\org\jabref\http\server\ServerTest.java8 8(1"
isFinalfalse"∫
declarationString§<mark class="modifier">protected </mark><mark class="modifier">void</mark> <mark class="method">addPreferencesToResourceConfig</mark>(ResourceConfig resourceConfig)"
isStaticfalse"
access	protected"

isAbstractfalse"
typevoid*addPreferencesToResourceConfig2√
{org.jabref.http.server.ServerTest.addPreferencesToResourceConfig(org.glassfish.jersey.server.ResourceConfig)!resourceConfigCALL>
4src\test\java\org\jabref\http\server\ServerTest.java9 9(2à
@org.jabref.http.server.ServerTest?preferencesService@35.38:35.56CALL>
4src\test\java\org\jabref\http\server\ServerTest.java< <('2»
{org.jabref.http.server.ServerTest.addPreferencesToResourceConfig(org.glassfish.jersey.server.ResourceConfig)!resourceConfig	PARAMETER>
4src\test\java\org\jabref\http\server\ServerTest.java8A 8(O2S
voidRETURN_TYPE>
4src\test\java\org\jabref\http\server\ServerTest.java8 8(™
{org.jabref.http.server.ServerTest.addPreferencesToResourceConfig(org.glassfish.jersey.server.ResourceConfig)!resourceConfig	PARAMETER>
4src\test\java\org\jabref\http\server\ServerTest.java8A 8(O"
typeResourceConfig"
isFinalfalse"2
declarationStringResourceConfig resourceConfig*resourceConfig2r
*org.glassfish.jersey.server.ResourceConfigTYPE>
4src\test\java\org\jabref\http\server\ServerTest.java82 8(@È
norg.jabref.http.server.ServerTest.setAvailableLibraries(java.util.EnumSet<org.jabref.http.server.TestBibFile>)METHOD>
4src\test\java\org\jabref\http\server\ServerTest.javaA A(("
isFinalfalse"¥
declarationStringû<mark class="modifier">protected </mark><mark class="modifier">void</mark> <mark class="method">setAvailableLibraries</mark>(EnumSet&lt;TestBibFile&gt; files)"
isStaticfalse"
access	protected"

isAbstractfalse"
typevoid*setAvailableLibraries2Ç
:org.jabref.preferences.GuiPreferences.getLastFilesOpened()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaB B(.2î
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaF F(%2ò
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaE E(!2e
java.util.Collection.stream()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaD D($2l
$java.util.stream.Collectors.toList()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaF1 F(72Ñ
<org.jabref.http.server.ServerTest?guiPreferences@36.34:36.48CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaB B(2º
torg.jabref.http.server.ServerTest.setAvailableLibraries(java.util.EnumSet<org.jabref.http.server.TestBibFile>)!filesCALL>
4src\test\java\org\jabref\http\server\ServerTest.javaD D(2«
org.jabref.http.server.ServerTest.setAvailableLibraries(java.util.EnumSet<org.jabref.http.server.TestBibFile>)?file@69.34:69.38CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaE* E(.2¡
torg.jabref.http.server.ServerTest.setAvailableLibraries(java.util.EnumSet<org.jabref.http.server.TestBibFile>)!files	PARAMETER>
4src\test\java\org\jabref\http\server\ServerTest.javaA> A(C2Œ
org.jabref.http.server.ServerTest.setAvailableLibraries(java.util.EnumSet<org.jabref.http.server.TestBibFile>)?file@69.34:69.38DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.javaE" E(&2S
voidRETURN_TYPE>
4src\test\java\org\jabref\http\server\ServerTest.javaA A(˘
torg.jabref.http.server.ServerTest.setAvailableLibraries(java.util.EnumSet<org.jabref.http.server.TestBibFile>)!files	PARAMETER>
4src\test\java\org\jabref\http\server\ServerTest.javaA> A(C"
typeEnumSet<TestBibFile>"
isFinalfalse"/
declarationStringEnumSet<TestBibFile> files*files2Y
java.util.EnumSetTYPE>
4src\test\java\org\jabref\http\server\ServerTest.javaA) A(02s
"org.jabref.http.server.TestBibFileTYPE_ARGUMENT>
4src\test\java\org\jabref\http\server\ServerTest.javaA1 A(<è
org.jabref.http.server.ServerTest.setAvailableLibraries(java.util.EnumSet<org.jabref.http.server.TestBibFile>)?file@69.34:69.38VARIABLE>
4src\test\java\org\jabref\http\server\ServerTest.javaE" E(&"
type"
isFinalfalse"
declarationString file*file2TYPEô&
@org.jabref.http.server.ServerTest.initializePreferencesService()METHOD>
4src\test\java\org\jabref\http\server\ServerTest.javaI I(4"
isFinalfalse"æ
declarationString®<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">initializePreferencesService</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*initializePreferencesService2é
Forg.jabref.preferences.PreferencesService.getImportFormatPreferences()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaM  M(:2à
@org.jabref.preferences.BibEntryPreferences.getKeywordSeparator()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaQ! Q(42á
?org.jabref.preferences.PreferencesService.getFieldPreferences()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaT  T(32á
?org.jabref.logic.bibtex.FieldPreferences.shouldResolveStrings()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaU$ U(82[
java.util.List.of()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaX] X(_2[
java.util.List.of()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaXh X(j2Ö
=org.jabref.preferences.PreferencesService.getGuiPreferences()CALL>
4src\test\java\org\jabref\http\server\ServerTest.java]  ](12Ç
:org.jabref.preferences.GuiPreferences.getLastFilesOpened()CALL>
4src\test\java\org\jabref\http\server\ServerTest.java_ _(.2Û
™org.jabref.logic.bibtex.FieldPreferences.FieldPreferences(boolean, java.util.List<org.jabref.model.entry.field.Field>, java.util.List<org.jabref.model.entry.field.Field>)CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaX@ X(P2à
@org.jabref.http.server.ServerTest?preferencesService@35.38:35.56CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaJ J(2à
@org.jabref.http.server.ServerTest?preferencesService@35.38:35.56CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaM M(2¨
dorg.jabref.http.server.ServerTest.initializePreferencesService()?importFormatPreferences@76.32:76.55CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaMI M(`2¨
dorg.jabref.http.server.ServerTest.initializePreferencesService()?importFormatPreferences@76.32:76.55CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaP P($2®
`org.jabref.http.server.ServerTest.initializePreferencesService()?bibEntryPreferences@79.28:79.47CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaPG P(Z2®
`org.jabref.http.server.ServerTest.initializePreferencesService()?bibEntryPreferences@79.28:79.47CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaQ Q( 2à
@org.jabref.http.server.ServerTest?preferencesService@35.38:35.56CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaT T(2´
corg.jabref.http.server.ServerTest.initializePreferencesService()?fieldWriterPreferences@83.25:83.47CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaTB T(X2´
corg.jabref.http.server.ServerTest.initializePreferencesService()?fieldWriterPreferences@83.25:83.47CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaU U(#2¨
dorg.jabref.http.server.ServerTest.initializePreferencesService()?importFormatPreferences@76.32:76.55CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaZ Z($2µ
morg.jabref.http.server.ServerTest.initializePreferencesService()?fieldContentFormatterPreferences@88.25:88.57CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaZD Z(d2Ñ
<org.jabref.http.server.ServerTest?guiPreferences@36.34:36.48CALL>
4src\test\java\org\jabref\http\server\ServerTest.java\ \(2à
@org.jabref.http.server.ServerTest?preferencesService@35.38:35.56CALL>
4src\test\java\org\jabref\http\server\ServerTest.java] ](2Ñ
<org.jabref.http.server.ServerTest?guiPreferences@36.34:36.48CALL>
4src\test\java\org\jabref\http\server\ServerTest.java]@ ](N2Ñ
<org.jabref.http.server.ServerTest?guiPreferences@36.34:36.48CALL>
4src\test\java\org\jabref\http\server\ServerTest.java_ _(2≥
dorg.jabref.http.server.ServerTest.initializePreferencesService()?importFormatPreferences@76.32:76.55DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.javaL  L(72Ø
`org.jabref.http.server.ServerTest.initializePreferencesService()?bibEntryPreferences@79.28:79.47DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.javaO O(/2≤
corg.jabref.http.server.ServerTest.initializePreferencesService()?fieldWriterPreferences@83.25:83.47DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.javaS S(/2º
morg.jabref.http.server.ServerTest.initializePreferencesService()?fieldContentFormatterPreferences@88.25:88.57DECLARATION>
4src\test\java\org\jabref\http\server\ServerTest.javaX X(92S
voidRETURN_TYPE>
4src\test\java\org\jabref\http\server\ServerTest.javaI I(ã
dorg.jabref.http.server.ServerTest.initializePreferencesService()?importFormatPreferences@76.32:76.55VARIABLE>
4src\test\java\org\jabref\http\server\ServerTest.javaL  L(7"
typeImportFormatPreferences"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark> = mock(ImportFormatPreferences.class)*importFormatPreferences2_
ImportFormatPreferencesTYPE>
4src\test\java\org\jabref\http\server\ServerTest.javaL L(Ü
`org.jabref.http.server.ServerTest.initializePreferencesService()?bibEntryPreferences@79.28:79.47VARIABLE>
4src\test\java\org\jabref\http\server\ServerTest.javaO O(/"
typeBibEntryPreferences"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>BibEntryPreferences <mark class="class-field">bibEntryPreferences</mark> = mock(BibEntryPreferences.class)*bibEntryPreferences2r
*org.jabref.preferences.BibEntryPreferencesTYPE>
4src\test\java\org\jabref\http\server\ServerTest.javaO O(Ñ
corg.jabref.http.server.ServerTest.initializePreferencesService()?fieldWriterPreferences@83.25:83.47VARIABLE>
4src\test\java\org\jabref\http\server\ServerTest.javaS S(/"
typeFieldPreferences"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>FieldPreferences <mark class="class-field">fieldWriterPreferences</mark> = mock(FieldPreferences.class)*fieldWriterPreferences2p
(org.jabref.logic.bibtex.FieldPreferencesTYPE>
4src\test\java\org\jabref\http\server\ServerTest.javaS S(¡
morg.jabref.http.server.ServerTest.initializePreferencesService()?fieldContentFormatterPreferences@88.25:88.57VARIABLE>
4src\test\java\org\jabref\http\server\ServerTest.javaX X(9"
typeFieldPreferences"
isFinalfalse"ï
declarationStringˇ<mark class="modifier"> </mark>FieldPreferences <mark class="class-field">fieldContentFormatterPreferences</mark> = new FieldPreferences(<mark class="modifier">false</mark><mark class="modifier">,</mark> List.of()<mark class="modifier">,</mark> List.of())* fieldContentFormatterPreferences2p
(org.jabref.logic.bibtex.FieldPreferencesTYPE>
4src\test\java\org\jabref\http\server\ServerTest.javaX X(2[
java.util.List.of()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaX] X(_2[
java.util.List.of()CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaXh X(j2Û
™org.jabref.logic.bibtex.FieldPreferences.FieldPreferences(boolean, java.util.List<org.jabref.model.entry.field.Field>, java.util.List<org.jabref.model.entry.field.Field>)CALL>
4src\test\java\org\jabref\http\server\ServerTest.javaX@ X(Pê
@org.jabref.http.server.ServerTest?preferencesService@35.38:35.56VARIABLE>
4src\test\java\org\jabref\http\server\ServerTest.java#& #(8"
isFinalfalse"
typePreferencesService"ß
declarationStringë<mark class="modifier">private </mark><mark class="modifier">static </mark>PreferencesService <mark class="class-field">preferencesService</mark>"
isStatictrue"
accessprivate*preferencesService2q
)org.jabref.preferences.PreferencesServiceTYPE>
4src\test\java\org\jabref\http\server\ServerTest.java# #(%¯
<org.jabref.http.server.ServerTest?guiPreferences@36.34:36.48VARIABLE>
4src\test\java\org\jabref\http\server\ServerTest.java$" $(0"
isFinalfalse"
typeGuiPreferences"ü
declarationStringâ<mark class="modifier">private </mark><mark class="modifier">static </mark>GuiPreferences <mark class="class-field">guiPreferences</mark>"
isStatictrue"
accessprivate*guiPreferences2m
%org.jabref.preferences.GuiPreferencesTYPE>
4src\test\java\org\jabref\http\server\ServerTest.java$ $(!