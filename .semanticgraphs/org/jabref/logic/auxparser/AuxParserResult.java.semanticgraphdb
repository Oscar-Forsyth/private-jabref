
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java≤
*org.jabref.logic.auxparser.AuxParserResultCLASSG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ("%
packageorg.jabref.logic.auxparser"
isFinalfalse"
inner classfalse"

isAbstractfalse"m
declarationStringX<mark class="modifier">public </mark><mark class="modifier">class </mark>AuxParserResult"
accesspublic*AuxParserResult2π
aorg.jabref.logic.auxparser.AuxParserResult.AuxParserResult(org.jabref.model.database.BibDatabase)DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2ú
Dorg.jabref.logic.auxparser.AuxParserResult.getGeneratedBibDatabase()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (.2ñ
>org.jabref.logic.auxparser.AuxParserResult.getUnresolvedKeys()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ()2ñ
>org.jabref.logic.auxparser.AuxParserResult.getFoundKeysInAux()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java" "( 2ô
Aorg.jabref.logic.auxparser.AuxParserResult.getResolvedKeysCount()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java& &(#2õ
Corg.jabref.logic.auxparser.AuxParserResult.getUnresolvedKeysCount()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java* *(%2ú
Dorg.jabref.logic.auxparser.AuxParserResult.getCrossRefEntriesCount()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java3 3(&2£
Korg.jabref.logic.auxparser.AuxParserResult.increaseCrossRefEntriesCounter()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java7 7(.2¢
Jorg.jabref.logic.auxparser.AuxParserResult.increaseNestedAuxFilesCounter()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java; ;(-2À
sorg.jabref.logic.auxparser.AuxParserResult.insertStrings(java.util.Collection<org.jabref.model.entry.BibtexString>)DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java? ?(2ñ
>org.jabref.logic.auxparser.AuxParserResult.getMasterDatabase()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaF F((2ñ
>org.jabref.logic.auxparser.AuxParserResult.getNestedAuxCount()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaJ J( 2ó
?org.jabref.logic.auxparser.AuxParserResult.getInsertedStrings()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaN N(!2í
:org.jabref.logic.auxparser.AuxParserResult.getUniqueKeys()DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaR R($2ù
Eorg.jabref.logic.auxparser.AuxParserResult?masterDatabase@13.30:13.44DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (,2ô
Aorg.jabref.logic.auxparser.AuxParserResult?uniqueKeys@14.30:14.40DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ((2ù
Eorg.jabref.logic.auxparser.AuxParserResult?unresolvedKeys@15.31:15.45DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (-2ö
Borg.jabref.logic.auxparser.AuxParserResult?auxDatabase@17.30:17.41DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ()2ù
Eorg.jabref.logic.auxparser.AuxParserResult?nestedAuxCount@18.16:18.30DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2£
Korg.jabref.logic.auxparser.AuxParserResult?crossRefEntriesCount@19.16:19.36DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ($2û
Forg.jabref.logic.auxparser.AuxParserResult?insertedStrings@20.16:20.31DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (˘
aorg.jabref.logic.auxparser.AuxParserResult.AuxParserResult(org.jabref.model.database.BibDatabase)CONSTRUCTORG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ("Å
declarationStringl<mark class="modifier">public </mark><mark class="method">AuxParserResult</mark>(BibDatabase masterDatabase)*AuxParserResult2¡
porg.jabref.logic.auxparser.AuxParserResult.AuxParserResult(org.jabref.model.database.BibDatabase)!masterDatabaseCALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (,2ñ
Eorg.jabref.logic.auxparser.AuxParserResult?masterDatabase@13.30:13.44CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2∆
porg.jabref.logic.auxparser.AuxParserResult.AuxParserResult(org.jabref.model.database.BibDatabase)!masterDatabase	PARAMETERG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java' (52Ç
*org.jabref.logic.auxparser.AuxParserResultRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (¶
porg.jabref.logic.auxparser.AuxParserResult.AuxParserResult(org.jabref.model.database.BibDatabase)!masterDatabase	PARAMETERG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java' (5"
typeBibDatabase"
isFinalfalse"/
declarationStringBibDatabase masterDatabase*masterDatabase2v
%org.jabref.model.database.BibDatabaseTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (&£
Dorg.jabref.logic.auxparser.AuxParserResult.getGeneratedBibDatabase()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (."
isFinalfalse"{
declarationStringf<mark class="modifier">public </mark>BibDatabase <mark class="method">getGeneratedBibDatabase</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeBibDatabase*getGeneratedBibDatabase2ì
Borg.jabref.logic.auxparser.AuxParserResult?auxDatabase@17.30:17.41CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2}
%org.jabref.model.database.BibDatabaseRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (¯
>org.jabref.logic.auxparser.AuxParserResult.getUnresolvedKeys()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ()"
isFinalfalse"|
declarationStringg<mark class="modifier">public </mark>List&lt;String&gt; <mark class="method">getUnresolvedKeys</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<String>*getUnresolvedKeys2ñ
Eorg.jabref.logic.auxparser.AuxParserResult?unresolvedKeys@15.31:15.45CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2f
java.util.ListRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2q
java.lang.StringRETURN_TYPE_ARGUMENTG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (‰
>org.jabref.logic.auxparser.AuxParserResult.getFoundKeysInAux()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java" "( "
isFinalfalse"ã
declarationStringv<mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">getFoundKeysInAux</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*getFoundKeysInAux2e
java.util.Set.size()CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java# #(2í
Aorg.jabref.logic.auxparser.AuxParserResult?uniqueKeys@14.30:14.40CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java# #(2[
intRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java" "(Ø
Aorg.jabref.logic.auxparser.AuxParserResult.getResolvedKeysCount()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java& &(#"
isFinalfalse"é
declarationStringy<mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">getResolvedKeysCount</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*getResolvedKeysCount2Ü
5org.jabref.model.database.BibDatabase.getEntryCount()CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java' '((2ì
Borg.jabref.logic.auxparser.AuxParserResult?auxDatabase@17.30:17.41CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java' '(2ú
Korg.jabref.logic.auxparser.AuxParserResult?crossRefEntriesCount@19.16:19.36CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java'- '(A2[
intRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java& &(¯
Corg.jabref.logic.auxparser.AuxParserResult.getUnresolvedKeysCount()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java* *(%"
isFinalfalse"ê
declarationString{<mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">getUnresolvedKeysCount</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*getUnresolvedKeysCount2f
java.util.List.size()CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java+ +("2ñ
Eorg.jabref.logic.auxparser.AuxParserResult?unresolvedKeys@15.31:15.45CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java+ +(2[
intRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java* *(ô
Dorg.jabref.logic.auxparser.AuxParserResult.getCrossRefEntriesCount()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java3 3(&"
isFinalfalse"ë
declarationString|<mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">getCrossRefEntriesCount</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*getCrossRefEntriesCount2ú
Korg.jabref.logic.auxparser.AuxParserResult?crossRefEntriesCount@19.16:19.36CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java4 4(#2[
intRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java3 3(≤
Korg.jabref.logic.auxparser.AuxParserResult.increaseCrossRefEntriesCounter()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java7 7(."
isFinalfalse"ö
declarationStringÑ<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">increaseCrossRefEntriesCounter</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*increaseCrossRefEntriesCounter2ú
Korg.jabref.logic.auxparser.AuxParserResult?crossRefEntriesCount@19.16:19.36CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java8 8(2\
voidRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java7 7(©
Jorg.jabref.logic.auxparser.AuxParserResult.increaseNestedAuxFilesCounter()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java; ;(-"
isFinalfalse"ô
declarationStringÉ<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">increaseNestedAuxFilesCounter</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*increaseNestedAuxFilesCounter2ñ
Eorg.jabref.logic.auxparser.AuxParserResult?nestedAuxCount@18.16:18.30CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java< <(2\
voidRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java; ;(É
sorg.jabref.logic.auxparser.AuxParserResult.insertStrings(java.util.Collection<org.jabref.model.entry.BibtexString>)METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java? ?("
isFinalfalse"≥
declarationStringù<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">insertStrings</mark>(Collection&lt;BibtexString&gt; usedStrings)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*insertStrings2•
Torg.jabref.model.database.BibDatabase.addString(org.jabref.model.entry.BibtexString)CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaA A(!2–
org.jabref.logic.auxparser.AuxParserResult.insertStrings(java.util.Collection<org.jabref.model.entry.BibtexString>)!usedStringsCALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java@# @(.2ì
Borg.jabref.logic.auxparser.AuxParserResult?auxDatabase@17.30:17.41CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaA A(2ÿ
Üorg.jabref.logic.auxparser.AuxParserResult.insertStrings(java.util.Collection<org.jabref.model.entry.BibtexString>)?string@64.26:64.32CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaA" A((2ó
Forg.jabref.logic.auxparser.AuxParserResult?insertedStrings@20.16:20.31CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaB B(2’
org.jabref.logic.auxparser.AuxParserResult.insertStrings(java.util.Collection<org.jabref.model.entry.BibtexString>)!usedStrings	PARAMETERG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java?7 ?(B2ﬂ
Üorg.jabref.logic.auxparser.AuxParserResult.insertStrings(java.util.Collection<org.jabref.model.entry.BibtexString>)?string@64.26:64.32DECLARATIONG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java@ @( 2\
voidRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java? ?(ã
Üorg.jabref.logic.auxparser.AuxParserResult.insertStrings(java.util.Collection<org.jabref.model.entry.BibtexString>)?string@64.26:64.32VARIABLEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java@ @( "
typeBibtexString"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>BibtexString <mark class="class-field"><mark class="modifier">string</mark></mark>*string2t
#org.jabref.model.entry.BibtexStringTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java@ @(∑
org.jabref.logic.auxparser.AuxParserResult.insertStrings(java.util.Collection<org.jabref.model.entry.BibtexString>)!usedStrings	PARAMETERG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java?7 ?(B" 
typeCollection<BibtexString>"
isFinalfalse"9
declarationString$Collection<BibtexString> usedStrings*usedStrings2e
java.util.CollectionTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java? ?((2}
#org.jabref.model.entry.BibtexStringTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java?) ?(5î
>org.jabref.logic.auxparser.AuxParserResult.getMasterDatabase()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaF F(("
isFinalfalse"u
declarationString`<mark class="modifier">public </mark>BibDatabase <mark class="method">getMasterDatabase</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeBibDatabase*getMasterDatabase2ñ
Eorg.jabref.logic.auxparser.AuxParserResult?masterDatabase@13.30:13.44CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaG G(2}
%org.jabref.model.database.BibDatabaseRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaF F(Å
>org.jabref.logic.auxparser.AuxParserResult.getNestedAuxCount()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaJ J( "
isFinalfalse"ã
declarationStringv<mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">getNestedAuxCount</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*getNestedAuxCount2ñ
Eorg.jabref.logic.auxparser.AuxParserResult?nestedAuxCount@18.16:18.30CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaK K(2[
intRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaJ J(Ö
?org.jabref.logic.auxparser.AuxParserResult.getInsertedStrings()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaN N(!"
isFinalfalse"å
declarationStringw<mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">getInsertedStrings</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*getInsertedStrings2ó
Forg.jabref.logic.auxparser.AuxParserResult?insertedStrings@20.16:20.31CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaO O(2[
intRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaN N(Â
:org.jabref.logic.auxparser.AuxParserResult.getUniqueKeys()METHODG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaR R($"
isFinalfalse"w
declarationStringb<mark class="modifier">public </mark>Set&lt;String&gt; <mark class="method">getUniqueKeys</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeSet<String>*getUniqueKeys2í
Aorg.jabref.logic.auxparser.AuxParserResult?uniqueKeys@14.30:14.40CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaS S(2e
java.util.SetRETURN_TYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaR R(2q
java.lang.StringRETURN_TYPE_ARGUMENTG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.javaR R(â
Eorg.jabref.logic.auxparser.AuxParserResult?masterDatabase@13.30:13.44VALUEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (,"
isFinaltrue"
typeBibDatabase"õ
declarationStringÖ<mark class="modifier">private </mark><mark class="modifier">final </mark>BibDatabase <mark class="class-field">masterDatabase</mark>"
isStaticfalse"
accessprivate*masterDatabase2v
%org.jabref.model.database.BibDatabaseTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (“
Aorg.jabref.logic.auxparser.AuxParserResult?uniqueKeys@14.30:14.40VALUEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (("
isFinaltrue"
typeSet<String>"™
declarationStringî<mark class="modifier">private </mark><mark class="modifier">final </mark>Set<String> <mark class="class-field">uniqueKeys</mark> = new HashSet<>();"
isStaticfalse"
accessprivate*
uniqueKeys2^
java.util.SetTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2j
java.lang.StringTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2l
java.util.HashSet.HashSet()CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java/ (8Á
Eorg.jabref.logic.auxparser.AuxParserResult?unresolvedKeys@15.31:15.45VALUEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (-"
isFinaltrue"
typeList<String>"±
declarationStringõ<mark class="modifier">private </mark><mark class="modifier">final </mark>List<String> <mark class="class-field">unresolvedKeys</mark> = new ArrayList<>();"
isStaticfalse"
accessprivate*unresolvedKeys2_
java.util.ListTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2j
java.lang.StringTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2p
java.util.ArrayList.ArrayList()CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java4 (?ú
Borg.jabref.logic.auxparser.AuxParserResult?auxDatabase@17.30:17.41VALUEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ()"
isFinaltrue"
typeBibDatabase"≠
declarationStringó<mark class="modifier">private </mark><mark class="modifier">final </mark>BibDatabase <mark class="class-field">auxDatabase</mark> = new BibDatabase();"
isStaticfalse"
accessprivate*auxDatabase2v
%org.jabref.model.database.BibDatabaseTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (2Ñ
3org.jabref.model.database.BibDatabase.BibDatabase()CALLG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java0 (;‘
Eorg.jabref.logic.auxparser.AuxParserResult?nestedAuxCount@18.16:18.30VARIABLEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ("
isFinalfalse"
typeint"å
declarationStringw<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="class-field">nestedAuxCount</mark>"
isStaticfalse"
accessprivate*nestedAuxCount2T
intTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (Ê
Korg.jabref.logic.auxparser.AuxParserResult?crossRefEntriesCount@19.16:19.36VARIABLEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ($"
isFinalfalse"
typeint"í
declarationString}<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="class-field">crossRefEntriesCount</mark>"
isStaticfalse"
accessprivate*crossRefEntriesCount2T
intTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (◊
Forg.jabref.logic.auxparser.AuxParserResult?insertedStrings@20.16:20.31VARIABLEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java ("
isFinalfalse"
typeint"ç
declarationStringx<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="class-field">insertedStrings</mark>"
isStaticfalse"
accessprivate*insertedStrings2T
intTYPEG
=src\main\java\org\jabref\logic\auxparser\AuxParserResult.java (