
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java›
9org.jabref.logic.citationstyle.CitationStyleGeneratorTestCLASSV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java ( ")
packageorg.jabref.logic.citationstyle"
isFinalfalse"
inner classfalse"

isAbstractfalse"r
declarationString]<mark class="modifier"> </mark><mark class="modifier">class </mark>CitationStyleGeneratorTest"
accesspackage_private*CitationStyleGeneratorTest2Æ
Gorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java	 (2Æ
Gorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java,	 ,(2∞
Iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java=	 =(2æ
Worg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaJ	 J($2∑
Porg.jabref.logic.citationstyle.CitationStyleGeneratorTest.missingCitationStyle()DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaW	 W(2≠
Forg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java^	 ^(2≠
Forg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javal	 l(2≥
Lorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javax	 x(2¥
Korg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÜ	 Ü(2π
Porg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaí	 í(2Ø
Forg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping()DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java™ ™('2û
¥org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿	 ¿(2¡
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java' (;ì-
Gorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()METHODV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java	 ("
isFinalfalse"´
declarationStringï<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">aCMCitation</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*aCMCitation2t
java.util.List.of(E)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaQ (S2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java^ (j2ø
_org.jabref.model.database.BibDatabaseContext.setMode(org.jabref.model.database.BibDatabaseMode)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (2•
Eorg.jabref.logic.citationstyle.CitationStyle.discoverCitationStyles()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java6 (L2|
java.util.Optional.orElse(T)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javal (r2Å
!java.util.stream.Stream.findAny()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javab (i2ß
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1 (72}
java.util.Collection.stream()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java( (.2â
)java.lang.String.equals(java.lang.Object)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaL (R2ó
7org.jabref.logic.citationstyle.CitationStyle.getTitle()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaU (]2Ô
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java 1  (A2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java L  (X2ò
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java b  (k2∆
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java) (;2¬
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java@ (K2§
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java ú  (∞2ª
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?context@28.27:28.34CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (2Ω
]org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?styleList@30.28:30.37CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java ('2µ
Uorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?e@31.56:31.57CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaS (T2π
Yorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?style@31.22:31.27CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java \  (a2Ω
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?context@28.27:28.34CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java è  (ñ2º
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?expected@35.15:35.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java( ((2º
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?citation@32.15:32.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java( (('2¬
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?context@28.27:28.34DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java ("2ƒ
]org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?styleList@30.28:30.37DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (%2¿
Yorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?style@31.22:31.27DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (2√
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?citation@32.15:32.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java   (2√
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?expected@35.15:35.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java# #(2º
Uorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?e@31.56:31.57DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java8 (92k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (⁄	
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?context@28.27:28.34VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (""
typeBibDatabaseContext"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">context</mark> = new BibDatabaseContext(new BibDatabase(List.of(TestEntry.getTestEntry())))*context2å
,org.jabref.model.database.BibDatabaseContextTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (2t
java.util.List.of(E)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaQ (S2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java^ (j2∆
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java) (;2¬
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java@ (K 
]org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?styleList@30.28:30.37VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (%"
typeList<CitationStyle>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>List<CitationStyle> <mark class="class-field">styleList</mark> = CitationStyle.discoverCitationStyles()*	styleList2n
java.util.ListTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (2ï
,org.jabref.logic.citationstyle.CitationStyleTYPE_ARGUMENTV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (2•
Eorg.jabref.logic.citationstyle.CitationStyle.discoverCitationStyles()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java6 (L¨
Yorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?style@31.22:31.27VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java ("
typeCitationStyle"
isFinalfalse"‰
declarationStringŒ<mark class="modifier"> </mark>CitationStyle <mark class="class-field">style</mark> = styleList.stream().filter(e -> "ACM SIGGRAPH".equals(e.getTitle())).findAny().orElse(<mark class="modifier">null</mark>)*style2å
,org.jabref.logic.citationstyle.CitationStyleTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (2|
java.util.Optional.orElse(T)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javal (r2Å
!java.util.stream.Stream.findAny()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javab (i2ß
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1 (72}
java.util.Collection.stream()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java( (.2â
)java.lang.String.equals(java.lang.Object)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaL (R2ó
7org.jabref.logic.citationstyle.CitationStyle.getTitle()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaU (]2Ω
]org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?styleList@30.28:30.37CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java ('2µ
Uorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?e@31.56:31.57CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaS (Tﬂ
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?citation@32.15:32.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java   ("
typeString"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>String <mark class="class-field">citation</mark> = CitationStyleGenerator.generateCitation(TestEntry.getTestEntry()<mark class="modifier">,</mark> style.getSource()<mark class="modifier">,</mark> CitationStyleOutputFormat.HTML, context, new BibEntryTypesManager())*citation2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java   (2Ô
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java 1  (A2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java L  (X2ò
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java b  (k2§
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java ú  (∞2π
Yorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?style@31.22:31.27CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java \  (a2Ω
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?context@28.27:28.34CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java è  (ñ√
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?expected@35.15:35.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java# #("
typeString"
isFinalfalse"‚
declarationStringÃ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "  <div class=\"csl-entry\">" + "<span style=\"font-variant: small-caps\">Smith, B.<mark class="modifier">,</mark> Jones, B.<mark class="modifier">,</mark> and Williams, J.</span> 2016. Title of the test entry. <span style=\"font-style: italic\">BibTeX Journal</span> <span style=\"font-style: italic\">34</span><mark class="modifier">,</mark> 3, 45&ndash;67." + "</div>\n" + ""*expected2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java# #(˜
Uorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aCMCitation()?e@31.56:31.57VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java8 (9"
type"
isFinalfalse"
declarationString e*e2TYPEó-
Gorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()METHODV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java,	 ,("
isFinalfalse"´
declarationStringï<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">aPACitation</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*aPACitation2t
java.util.List.of(E)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java-Q -(S2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java-^ -(j2ø
_org.jabref.model.database.BibDatabaseContext.setMode(org.jabref.model.database.BibDatabaseMode)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java. .(2•
Eorg.jabref.logic.citationstyle.CitationStyle.discoverCitationStyles()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java/6 /(L2~
java.util.Optional.orElse(T)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0é 0(î2É
!java.util.stream.Stream.findAny()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0Ñ 0(ã2ß
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java01 0(72}
java.util.Collection.stream()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0( 0(.2â
)java.lang.String.equals(java.lang.Object)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0n 0(t2ó
7org.jabref.logic.citationstyle.CitationStyle.getTitle()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0w 0(2Ô
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java11 1(A2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1L 1(X2ò
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1b 1(k2∆
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java-) -(;2¬
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java-@ -(K2§
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1ú 1(∞2ª
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?context@45.27:45.34CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java. .(2Ω
]org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?styleList@47.28:47.37CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0 0('2µ
Uorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?e@48.56:48.57CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0u 0(v2π
Yorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?style@48.22:48.27CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1\ 1(a2Ω
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?context@45.27:45.34CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1è 1(ñ2º
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?expected@52.15:52.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java9 9(2º
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?citation@49.15:49.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java9 9('2¬
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?context@45.27:45.34DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java- -("2ƒ
]org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?styleList@47.28:47.37DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java/ /(%2¿
Yorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?style@48.22:48.27DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0 0(2√
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?citation@49.15:49.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1 1(2√
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?expected@52.15:52.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java4 4(2º
Uorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?e@48.56:48.57DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java08 0(92k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java, ,(⁄	
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?context@45.27:45.34VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java- -(""
typeBibDatabaseContext"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">context</mark> = new BibDatabaseContext(new BibDatabase(List.of(TestEntry.getTestEntry())))*context2å
,org.jabref.model.database.BibDatabaseContextTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java- -(2t
java.util.List.of(E)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java-Q -(S2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java-^ -(j2∆
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java-) -(;2¬
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java-@ -(K 
]org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?styleList@47.28:47.37VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java/ /(%"
typeList<CitationStyle>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>List<CitationStyle> <mark class="class-field">styleList</mark> = CitationStyle.discoverCitationStyles()*	styleList2n
java.util.ListTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java/ /(2ï
,org.jabref.logic.citationstyle.CitationStyleTYPE_ARGUMENTV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java/ /(2•
Eorg.jabref.logic.citationstyle.CitationStyle.discoverCitationStyles()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java/6 /(L“
Yorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?style@48.22:48.27VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0 0("
typeCitationStyle"
isFinalfalse"Ü
declarationString<mark class="modifier"> </mark>CitationStyle <mark class="class-field">style</mark> = styleList.stream().filter(e -> "American Psychological Association 7th edition".equals(e.getTitle())).findAny().orElse(<mark class="modifier">null</mark>)*style2å
,org.jabref.logic.citationstyle.CitationStyleTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0 0(2~
java.util.Optional.orElse(T)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0é 0(î2É
!java.util.stream.Stream.findAny()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0Ñ 0(ã2ß
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java01 0(72}
java.util.Collection.stream()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0( 0(.2â
)java.lang.String.equals(java.lang.Object)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0n 0(t2ó
7org.jabref.logic.citationstyle.CitationStyle.getTitle()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0w 0(2Ω
]org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?styleList@47.28:47.37CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0 0('2µ
Uorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?e@48.56:48.57CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java0u 0(vﬂ
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?citation@49.15:49.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1 1("
typeString"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>String <mark class="class-field">citation</mark> = CitationStyleGenerator.generateCitation(TestEntry.getTestEntry()<mark class="modifier">,</mark> style.getSource()<mark class="modifier">,</mark> CitationStyleOutputFormat.HTML, context, new BibEntryTypesManager())*citation2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1 1(2Ô
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java11 1(A2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1L 1(X2ò
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1b 1(k2§
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1ú 1(∞2π
Yorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?style@48.22:48.27CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1\ 1(a2Ω
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?context@45.27:45.34CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java1è 1(ñÿ
\org.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?expected@52.15:52.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java4 4("
typeString"
isFinalfalse"˜
declarationString·<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "  <div class=\"csl-entry\">" + "Smith, B.<mark class="modifier">,</mark> Jones, B.<mark class="modifier">,</mark> &amp; Williams, J. (2016). Title of the test entry. <span style=\"font-style: italic\">BibTeX Journal</span><mark class="modifier">,</mark> <span style=\"font-style: italic\">34</span>(3)<mark class="modifier">,</mark> 45&ndash;67. https://doi.org/10.1001/bla.blubb" + "</div>\n" + ""*expected2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java4 4(˜
Uorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.aPACitation()?e@48.56:48.57VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java08 0(9"
type"
isFinalfalse"
declarationString e*e2TYPE⁄
Iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()METHODV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java=	 =("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">ignoreNewLine</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*ignoreNewLine2æ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java? ?(2£
¬org.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, org.jabref.logic.citationstyle.CitationStyle, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaE1 E(A2ô
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaEW E(a2ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java> >(%2ª
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?entry@62.17:62.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java? ?(2ª
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?entry@62.17:62.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaEB E(G2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaEe E(y2æ
^org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?expected@66.15:66.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaF F(2æ
^org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?citation@69.15:69.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaF F('2¬
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?entry@62.17:62.22DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java> >(2≈
^org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?expected@66.15:66.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaB B(2≈
^org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?citation@69.15:69.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaE E(2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java= =(Ó
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?entry@62.17:62.22VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java> >("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2
org.jabref.model.entry.BibEntryTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java> >(2ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java> >(%Ê
^org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?expected@66.15:66.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaB B("
typeString"
isFinalfalse"É
declarationStringÌ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "  <div class=\"csl-entry\">\n" + "    <div class=\"csl-left-margin\">[1]</div><div class=\"csl-right-inline\">F. Last and J. Doe, </div>\n" + "  </div>\n"*expected2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaB B(Ü
^org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?citation@69.15:69.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaE E("
typeString"
isFinalfalse"Ê
declarationString–<mark class="modifier"> </mark>String <mark class="class-field">citation</mark> = CitationStyleGenerator.generateCitation(entry, CitationStyle.getDefault()<mark class="modifier">,</mark> bibEntryTypesManager)*citation2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaE E(2£
¬org.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, org.jabref.logic.citationstyle.CitationStyle, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaE1 E(A2ô
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaEW E(a2ª
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreNewLine()?entry@62.17:62.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaEB E(G2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaEe E(yÊ
Worg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()METHODV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaJ	 J($"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">ignoreCarriageReturnNewLine</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*ignoreCarriageReturnNewLine2æ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaL L(2£
¬org.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, org.jabref.logic.citationstyle.CitationStyle, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaR1 R(A2ô
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaRW R(a2ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaK K(%2…
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?entry@75.17:75.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaL L(2…
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?entry@75.17:75.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaRB R(G2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaRe R(y2Ã
lorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?expected@79.15:79.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaS S(2Ã
lorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?citation@82.15:82.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaS S('2–
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?entry@75.17:75.22DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaK K(2”
lorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?expected@79.15:79.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaO O(2”
lorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?citation@82.15:82.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaR R(2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaJ J(¸
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?entry@75.17:75.22VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaK K("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2
org.jabref.model.entry.BibEntryTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaK K(2ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaK K(%Ù
lorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?expected@79.15:79.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaO O("
typeString"
isFinalfalse"É
declarationStringÌ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "  <div class=\"csl-entry\">\n" + "    <div class=\"csl-left-margin\">[1]</div><div class=\"csl-right-inline\">F. Last and J. Doe, </div>\n" + "  </div>\n"*expected2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaO O(¢
lorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?citation@82.15:82.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaR R("
typeString"
isFinalfalse"Ê
declarationString–<mark class="modifier"> </mark>String <mark class="class-field">citation</mark> = CitationStyleGenerator.generateCitation(entry, CitationStyle.getDefault()<mark class="modifier">,</mark> bibEntryTypesManager)*citation2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaR R(2£
¬org.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, org.jabref.logic.citationstyle.CitationStyle, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaR1 R(A2ô
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaRW R(a2…
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.ignoreCarriageReturnNewLine()?entry@75.17:75.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaRB R(G2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaRe R(yÇ
Porg.jabref.logic.citationstyle.CitationStyleGeneratorTest.missingCitationStyle()METHODV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaW	 W("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">missingCitationStyle</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*missingCitationStyle2Æ
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaX' X(+2á
¶org.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaY1 Y(A2ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaYF Y(N2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaYk Y(2≈
eorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.missingCitationStyle()?expected@88.15:88.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaZ Z(2≈
eorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.missingCitationStyle()?citation@89.15:89.23CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaZ Z('2Ã
eorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.missingCitationStyle()?expected@88.15:88.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaX X(2Ã
eorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.missingCitationStyle()?citation@89.15:89.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaY Y(2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaW W(—
eorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.missingCitationStyle()?expected@88.15:88.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaX X("
typeString"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = Localization.lang("Cannot generate preview based on selected citation style.")*expected2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaX X(2Æ
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaX' X(+»	
eorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.missingCitationStyle()?citation@89.15:89.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaY Y("
typeString"
isFinalfalse"ä
declarationStringÙ<mark class="modifier"> </mark>String <mark class="class-field">citation</mark> = CitationStyleGenerator.generateCitation(new BibEntry()<mark class="modifier">,</mark> "faulty citation style"<mark class="modifier">,</mark> bibEntryTypesManager)*citation2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaY Y(2á
¶org.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaY1 Y(A2ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaYF Y(N2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaYk Y(Ù
Forg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()METHODV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java^	 ^("
isFinalfalse"™
declarationStringî<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">htmlFormat</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*
htmlFormat2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javac# c(/2ò
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javad2 d(;2ô
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javad% d(/2Ô
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javag7 g(G2°
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagb g(t2∏
Xorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?entry@99.17:99.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagH g(M2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?style@100.15:100.20CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagO g(T2ª
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?format@101.34:101.40CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagV g(\2ª
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLW
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagx g(å2√
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?expectedCitation@95.15:95.31CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javah h(%2√
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?actualCitation@103.15:103.29CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javah' h(52 
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?expectedCitation@95.15:95.31DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java_ _(2ø
Xorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?entry@99.17:99.22DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javac c(2¡
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?style@100.15:100.20DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javad d(2¬
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?format@101.34:101.40DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javae" e((2 
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?actualCitation@103.15:103.29DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javag g(2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java^ ^(Œ
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?expectedCitation@95.15:95.31VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java_ _("
typeString"
isFinalfalse"ﬁ
declarationString»<mark class="modifier"> </mark>String <mark class="class-field">expectedCitation</mark> = "  <div class=\"csl-entry\">\n" + "    <div class=\"csl-left-margin\">[1]</div><div class=\"csl-right-inline\">B. Smith, B. Jones, and J. Williams, &ldquo;Title of the test entry,&rdquo; <span style=\"font-style: italic\">BibTeX Journal</span><mark class="modifier">,</mark> vol. 34, no. 3, pp. 45&ndash;67, Jul. 2016, doi: 10.1001/bla.blubb.</div>\n" + "  </div>\n"*expectedCitation2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java_ _(˘
Xorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?entry@99.17:99.22VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javac c("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = TestEntry.getTestEntry()*entry2
org.jabref.model.entry.BibEntryTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javac c(2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javac# c(/ù
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?style@100.15:100.20VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javad d("
typeString"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>String <mark class="class-field">style</mark> = CitationStyle.getDefault().getSource()*style2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javad d(2ò
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javad2 d(;2ô
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javad% d(/±
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?format@101.34:101.40VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javae" e(("!
typeCitationStyleOutputFormat"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>CitationStyleOutputFormat <mark class="class-field">format</mark> = CitationStyleOutputFormat.HTML*format2ò
8org.jabref.logic.citationstyle.CitationStyleOutputFormatTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javae e(!Ò
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?actualCitation@103.15:103.29VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javag g("
typeString"
isFinalfalse"˘
declarationString„<mark class="modifier"> </mark>String <mark class="class-field">actualCitation</mark> = CitationStyleGenerator.generateCitation(entry, style, format, new BibDatabaseContext()<mark class="modifier">,</mark> bibEntryTypesManager)*actualCitation2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javag g(2Ô
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javag7 g(G2°
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagb g(t2∏
Xorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?entry@99.17:99.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagH g(M2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?style@100.15:100.20CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagO g(T2ª
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.htmlFormat()?format@101.34:101.40CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagV g(\2ª
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLW
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javagx g(åü!
Forg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()METHODV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javal	 l("
isFinalfalse"™
declarationStringî<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">textFormat</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*
textFormat2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javao# o(/2ò
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javap2 p(;2ô
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javap% p(/2Ô
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javas7 s(G2v
java.util.List.of(E)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasä s(å2∆
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasb s(t2√
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLW
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasy s(Ñ2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?entry@111.17:111.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasH s(M2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?style@112.15:112.20CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasO s(T2ª
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?format@113.34:113.40CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasV s(\2º
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?entry@111.17:111.22CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasç s(í2º
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasó s(´2≈
eorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?expectedCitation@109.15:109.31CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javat t(%2√
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?actualCitation@115.15:115.29CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javat' t(52Ã
eorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?expectedCitation@109.15:109.31DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javam m(2¡
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?entry@111.17:111.22DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javao o(2¡
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?style@112.15:112.20DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javap p(2¬
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?format@113.34:113.40DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaq" q((2 
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?actualCitation@115.15:115.29DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javas s(2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javal l(¸
eorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?expectedCitation@109.15:109.31VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javam m("
typeString"
isFinalfalse"ä
declarationStringÙ<mark class="modifier"> </mark>String <mark class="class-field">expectedCitation</mark> = "[1]B. Smith, B. Jones, and J. Williams, ‚ÄúTitle of the test entry,‚Äù BibTeX Journal, vol. 34, no. 3, pp. 45‚Äì67, Jul. 2016, doi: 10.1001/bla.blubb.\n"*expectedCitation2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javam m(˚
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?entry@111.17:111.22VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javao o("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = TestEntry.getTestEntry()*entry2
org.jabref.model.entry.BibEntryTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javao o(2é
.org.jabref.logic.util.TestEntry.getTestEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javao# o(/ù
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?style@112.15:112.20VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javap p("
typeString"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>String <mark class="class-field">style</mark> = CitationStyle.getDefault().getSource()*style2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javap p(2ò
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javap2 p(;2ô
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javap% p(/±
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?format@113.34:113.40VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaq" q(("!
typeCitationStyleOutputFormat"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>CitationStyleOutputFormat <mark class="class-field">format</mark> = CitationStyleOutputFormat.TEXT*format2ò
8org.jabref.logic.citationstyle.CitationStyleOutputFormatTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaq q(!µ
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?actualCitation@115.15:115.29VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javas s("
typeString"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>String <mark class="class-field">actualCitation</mark> = CitationStyleGenerator.generateCitation(entry, style, format, new BibDatabaseContext(new BibDatabase(List.of(entry)))<mark class="modifier">,</mark> bibEntryTypesManager)*actualCitation2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javas s(2Ô
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javas7 s(G2v
java.util.List.of(E)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasä s(å2∆
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasb s(t2√
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLW
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasy s(Ñ2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?entry@111.17:111.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasH s(M2∫
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?style@112.15:112.20CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasO s(T2ª
[org.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?format@113.34:113.40CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasV s(\2º
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.textFormat()?entry@111.17:111.22CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasç s(í2º
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javasó s(´î
Lorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()METHODV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javax	 x("
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">handleDiacritics</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*handleDiacritics2æ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java{ {(2•
¬org.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, org.jabref.logic.citationstyle.CitationStyle, org.jabref.model.entry.BibEntryTypesManager)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅ1 Å(A2õ
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅW Å(a2ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javay y(%2¿
`org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?entry@121.17:121.22CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java{ {(2¬
`org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?entry@121.17:121.22CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅB Å(G2º
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅe Å(y2≈
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?expected@126.15:126.23CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÇ Ç(2≈
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?citation@129.15:129.23CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÇ Ç('2«
`org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?entry@121.17:121.22DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javay y(2 
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?expected@126.15:126.23DECLARATIONV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java~ ~(2Ã
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?citation@129.15:129.23DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅ Å(2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javax x(Û
`org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?entry@121.17:121.22VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javay y("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2
org.jabref.model.entry.BibEntryTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javay y(2ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javay y(%
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?expected@126.15:126.23VARIABLEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java~ ~("
typeString"
isFinalfalse"à
declarationStringÚ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "  <div class=\"csl-entry\">\n" + "    <div class=\"csl-left-margin\">[1]</div><div class=\"csl-right-inline\">F. L&auml;st and J. Doe, </div>\n" + "  </div>\n"*expected2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java~ ~(ú
corg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?citation@129.15:129.23VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅ Å("
typeString"
isFinalfalse"Ê
declarationString–<mark class="modifier"> </mark>String <mark class="class-field">citation</mark> = CitationStyleGenerator.generateCitation(entry, CitationStyle.getDefault()<mark class="modifier">,</mark> bibEntryTypesManager)*citation2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅ Å(2•
¬org.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, org.jabref.logic.citationstyle.CitationStyle, org.jabref.model.entry.BibEntryTypesManager)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅ1 Å(A2õ
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅW Å(a2¬
`org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleDiacritics()?entry@121.17:121.22CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅB Å(G2º
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÅe Å(yË 
Korg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()METHODX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÜ	 Ü("
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">handleAmpersand</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*handleAmpersand2ê
.org.jabref.logic.util.TestEntry.getTestEntry()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaà# à(/2¿
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaâ â(2ö
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaä2 ä(;2õ
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaä% ä(/2Ò
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaç7 ç(G2£
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçb ç(t2¡
_org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?entry@136.17:136.22CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaâ â(2¡
_org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?entry@136.17:136.22CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçH ç(M2¡
_org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?style@138.15:138.20CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçO ç(T2¬
`org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?format@139.34:139.40CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçV ç(\2Ω
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLY
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçx ç(å2Ã
jorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?expectedCitation@135.15:135.31CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaé é(%2 
horg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?actualCitation@141.15:141.29CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaé' é(52”
jorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?expectedCitation@135.15:135.31DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaá á(2»
_org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?entry@136.17:136.22DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaà à(2»
_org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?style@138.15:138.20DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaä ä(2…
`org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?format@139.34:139.40DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaã" ã((2—
horg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?actualCitation@141.15:141.29DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaç ç(2m
voidRETURN_TYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÜ Ü(ö
jorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?expectedCitation@135.15:135.31VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaá á("
typeString"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>String <mark class="class-field">expectedCitation</mark> = "[1]B. Smith, B. Jones, and J. Williams, ‚ÄúFamous quote: ‚Äú&TitleTest&‚Äù - that is it,‚Äù BibTeX Journal, vol. 34, no. 3, pp. 45‚Äì67, Jul. 2016, doi: 10.1001/bla.blubb.\n"*expectedCitation2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaá á(á
_org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?entry@136.17:136.22VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaà à("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = TestEntry.getTestEntry()*entry2Å
org.jabref.model.entry.BibEntryTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaà à(2ê
.org.jabref.logic.util.TestEntry.getTestEntry()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaà# à(/™
_org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?style@138.15:138.20VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaä ä("
typeString"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>String <mark class="class-field">style</mark> = CitationStyle.getDefault().getSource()*style2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaä ä(2ö
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaä2 ä(;2õ
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaä% ä(/∫
`org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?format@139.34:139.40VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaã" ã(("!
typeCitationStyleOutputFormat"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>CitationStyleOutputFormat <mark class="class-field">format</mark> = CitationStyleOutputFormat.TEXT*format2ö
8org.jabref.logic.citationstyle.CitationStyleOutputFormatTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaã ã(!ó
horg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?actualCitation@141.15:141.29VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaç ç("
typeString"
isFinalfalse"˘
declarationString„<mark class="modifier"> </mark>String <mark class="class-field">actualCitation</mark> = CitationStyleGenerator.generateCitation(entry, style, format, new BibDatabaseContext()<mark class="modifier">,</mark> bibEntryTypesManager)*actualCitation2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaç ç(2Ò
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaç7 ç(G2£
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçb ç(t2¡
_org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?entry@136.17:136.22CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçH ç(M2¡
_org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?style@138.15:138.20CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçO ç(T2¬
`org.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleAmpersand()?format@139.34:139.40CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçV ç(\2Ω
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLY
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaçx ç(åß8
Porg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()METHODX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaí	 í("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">handleCrossRefFields</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*handleCrossRefFields2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaò ò(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaó ó(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javañ ñ(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaï ï(2£
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaî î( 2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java† †(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaü ü(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaû û(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaù ù(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaú ú(2£
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaõ õ( 2y
java.util.List.of(E, E)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£\ £(^2ö
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java§2 §(;2õ
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java§% §(/2Ò
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶7 ¶(G2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaì" ì(*2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaö# ö(+2»
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£4 £(F2ƒ
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£K £(V2À
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?firstEntry@147.17:147.27CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£_ £(i2Ã
jorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?secondEntry@154.17:154.28CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£k £(v2À
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?firstEntry@147.17:147.27CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶H ¶(R2∆
dorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?style@164.15:164.20CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶T ¶(Y2‘
qorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?bibDatabaseContext@163.27:163.45CALLY
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶{ ¶(ç2æ
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLZ
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶è ¶(£2—
oorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?expectedCitation@162.15:162.31CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaß ß(%2œ
morg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?actualCitation@166.15:166.29CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaß' ß(52“
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?firstEntry@147.17:147.27DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaì ì(2”
jorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?secondEntry@154.17:154.28DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaö ö(2ÿ
oorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?expectedCitation@162.15:162.31DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¢ ¢(2⁄
qorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?bibDatabaseContext@163.27:163.45DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£ £(-2Õ
dorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?style@164.15:164.20DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java§ §(2÷
morg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?actualCitation@166.15:166.29DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶ ¶(2m
voidRETURN_TYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaí í(’
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?firstEntry@147.17:147.27VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaì ì("
typeBibEntry"
isFinalfalse"‰
declarationStringŒ<mark class="modifier"> </mark>BibEntry <mark class="class-field">firstEntry</mark> = new BibEntry(StandardEntryType.InCollection).withCitationKey("smit2021").withField(StandardField.AUTHOR, "Smith, Bob").withField(StandardField.TITLE, "An article").withField(StandardField.PAGES, "1-10").withField(StandardField.CROSSREF, "jone2021")*
firstEntry2Å
org.jabref.model.entry.BibEntryTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaì ì(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaò ò(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaó ó(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javañ ñ(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaï ï(2£
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaî î( 2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaì" ì(*∆
jorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?secondEntry@154.17:154.28VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaö ö("
typeBibEntry"
isFinalfalse"è
declarationString˘<mark class="modifier"> </mark>BibEntry <mark class="class-field">secondEntry</mark> = new BibEntry(StandardEntryType.Book).withCitationKey("jone2021").withField(StandardField.EDITOR, "Jones, John").withField(StandardField.PUBLISHER, "Great Publisher").withField(StandardField.TITLE, "A book").withField(StandardField.YEAR, "2021").withField(StandardField.ADDRESS, "Somewhere")*secondEntry2Å
org.jabref.model.entry.BibEntryTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaö ö(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java† †(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaü ü(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaû û(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaù ù(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaú ú(2£
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaõ õ( 2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaö# ö(+Ì
oorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?expectedCitation@162.15:162.31VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¢ ¢("
typeString"
isFinalfalse"Ì
declarationString◊<mark class="modifier"> </mark>String <mark class="class-field">expectedCitation</mark> = "[1]B. Smith, ‚ÄúAn article,‚Äù J. Jones, Ed.<mark class="modifier">,</mark> Somewhere: Great Publisher, 2021, pp. 1‚Äì10.\n"*expectedCitation2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¢ ¢(û
qorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?bibDatabaseContext@163.27:163.45VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£ £(-"
typeBibDatabaseContext"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">bibDatabaseContext</mark> = new BibDatabaseContext(new BibDatabase(List.of(firstEntry, secondEntry)))*bibDatabaseContext2é
,org.jabref.model.database.BibDatabaseContextTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£ £(2y
java.util.List.of(E, E)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£\ £(^2»
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£4 £(F2ƒ
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£K £(V2À
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?firstEntry@147.17:147.27CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£_ £(i2Ã
jorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?secondEntry@154.17:154.28CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java£k £(vØ
dorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?style@164.15:164.20VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java§ §("
typeString"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>String <mark class="class-field">style</mark> = CitationStyle.getDefault().getSource()*style2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java§ §(2ö
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java§2 §(;2õ
9org.jabref.logic.citationstyle.CitationStyle.getDefault()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java§% §(/ë
morg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?actualCitation@166.15:166.29VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶ ¶("
typeString"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>String <mark class="class-field">actualCitation</mark> = CitationStyleGenerator.generateCitation(firstEntry, style, CitationStyleOutputFormat.TEXT, bibDatabaseContext, bibEntryTypesManager)*actualCitation2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶ ¶(2Ò
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶7 ¶(G2À
iorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?firstEntry@147.17:147.27CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶H ¶(R2∆
dorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?style@164.15:164.20CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶T ¶(Y2‘
qorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.handleCrossRefFields()?bibDatabaseContext@163.27:163.45CALLY
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶{ ¶(ç2æ
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLZ
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶è ¶(£∑∆
Forg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping()METHODX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java™ ™('"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">cslMapping</mark>()"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeStream<Arguments>*
cslMapping2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java≤! ≤(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java±! ±(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaπ! π(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∏! ∏(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿! ¿(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaø! ø(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java»! »(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java«! «(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∆! ∆(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java–! –(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaœ! œ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaŒ! Œ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÿ! ÿ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java◊! ◊(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java÷! ÷(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÊ! Ê(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÂ! Â(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java‰! ‰(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java„! „(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java‚! ‚(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java·! ·(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java‡! ‡(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaﬂ! ﬂ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÛ! Û(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÚ! Ú(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÒ! Ò(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java! (*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÔ! Ô(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÓ! Ó(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÌ! Ì(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˛! ˛(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˝! ˝(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¸! ¸(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˚! ˚(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˙! ˙(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaà! à(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaá! á(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÜ! Ü(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÖ! Ö(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaî! î(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaì! ì(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaí! í(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaë! ë(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaê! ê(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java†! †(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaü! ü(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaû! û(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaù! ù(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaú! ú(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java≠! ≠(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¨! ¨(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java´! ´(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java™! ™(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java©! ©(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java®! ®(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∫! ∫(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaπ! π(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∏! ∏(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∑! ∑(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∂! ∂(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaµ! µ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java≈! ≈(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaƒ! ƒ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java√! √(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¬! ¬(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java–! –(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaœ! œ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaŒ! Œ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÕ! Õ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÃ! Ã(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java›! ›(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java‹! ‹(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java€! €(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java⁄! ⁄(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaŸ! Ÿ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÿ! ÿ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÎ! Î(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÍ! Í(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÈ! È(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaË! Ë(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÁ! Á(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÊ! Ê(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÂ! Â(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˛! ˛(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˝! ˝(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¸! ¸(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˚! ˚(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˙! ˙(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˘! ˘(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaë! ë(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaê! ê(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaè! è(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaé! é(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaç! ç(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaå! å(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaã! ã(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaä! ä(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaü! ü(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaû! û(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaù! ù(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaú! ú(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaõ! õ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaö! ö(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaô! ô(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¨! ¨(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java´! ´(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java™! ™(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java©! ©(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java®! ®(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaß! ß(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¶! ¶(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∑! ∑(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∂! ∂(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaµ! µ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¥! ¥(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java≥! ≥(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java√! √(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¬! ¬(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡! ¡(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿! ¿(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaø! ø(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaæ! æ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaœ! œ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaŒ! Œ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÕ! Õ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÃ! Ã(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÀ! À(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java !  (*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java‹! ‹(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java€! €(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java⁄! ⁄(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaŸ! Ÿ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÿ! ÿ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java◊! ◊(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java÷! ÷(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÁ! Á(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÊ! Ê(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÂ! Â(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java‰! ‰(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java„! „(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÒ! Ò(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java! (*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÔ! Ô(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÓ! Ó(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˝! ˝(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¸! ¸(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˚! ˚(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˙! ˙(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˘! ˘(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¯! ¯(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaâ! â(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaà! à(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaá! á(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÜ! Ü(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÖ! Ö(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÑ! Ñ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaî! î(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaì! ì(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaí! í(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaë! ë(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaê! ê(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java†! †(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaü! ü(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaû! û(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaù! ù(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaú! ú(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaõ! õ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¨! ¨(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java´! ´(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java™! ™(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java©! ©(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java®! ®(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaπ! π(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∏! ∏(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∑! ∑(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∂! ∂(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaµ! µ(*2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¥! ¥(*2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∞ ∞($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∑ ∑($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaæ æ($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java≈ ≈($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÕ Õ($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java’ ’($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaﬁ ﬁ($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÏ Ï($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˘ ˘($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÑ Ñ($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaè è($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaõ õ($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaß ß($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¥ ¥($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡ ¡($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÀ À($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java◊ ◊($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java‰ ‰($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¯ ¯($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaâ â($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaò ò($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java• •($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java≤ ≤($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaΩ Ω($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java… …($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java’ ’($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java‚ ‚($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÌ Ì($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java˜ ˜($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaÉ É($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaè è($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaö ö($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaß ß($2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java≥ ≥($2Ä
java.util.stream.StreamRETURN_TYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java™ ™(2ù
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java™ ™(¬6
¥org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)METHODX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿	 ¿("
isFinalfalse"Å
declarationStringÎ <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">cslMapping</mark>(String expected<mark class="modifier"><mark class="modifier">,</mark></mark> BibDatabaseMode mode<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> String cslFileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*
cslMapping2v
java.util.List.of(E)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡\ ¡(^2¡
_org.jabref.model.database.BibDatabaseContext.setMode(org.jabref.model.database.BibDatabaseMode)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¬ ¬("2Ò
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaƒ1 ƒ(A2ö
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∆U ∆(^2Ç
 java.util.Optional.orElseThrow()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∆G ∆(R2º
Zorg.jabref.logic.citationstyle.CitationStyle.createCitationStyleFromFile(java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∆ ∆(92»
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡4 ¡(F2ƒ
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡K ¡(V2ù
∫org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!entryCALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡_ ¡(d2∏
’org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)?bibDatabaseContext@577.27:577.45CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¬ ¬(2ú
πorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!modeCALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¬# ¬('2ù
∫org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!entryCALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java≈ ≈(2£
¿org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!cslFileNameCALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∆: ∆(E2∏
’org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)?bibDatabaseContext@577.27:577.45CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java» »("2º
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java… …($2†
Ωorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!expectedCALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java   (2Æ
Àorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)?citation@580.15:580.23CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java   ('2•
Ωorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!expected	PARAMETERX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿ ¿(#2°
πorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!mode	PARAMETERX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿5 ¿(92¢
∫org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!entry	PARAMETERX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿D ¿(I2®
¿org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!cslFileName	PARAMETERX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿R ¿(]2ø
’org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)?bibDatabaseContext@577.27:577.45DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡ ¡(-2µ
Àorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)?citation@580.15:580.23DECLARATIONX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaƒ ƒ(2m
voidRETURN_TYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿ ¿(Ò
’org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)?bibDatabaseContext@577.27:577.45VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡ ¡(-"
typeBibDatabaseContext"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">bibDatabaseContext</mark> = new BibDatabaseContext(new BibDatabase(List.of(entry)))*bibDatabaseContext2é
,org.jabref.model.database.BibDatabaseContextTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡ ¡(2v
java.util.List.of(E)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡\ ¡(^2»
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡4 ¡(F2ƒ
borg.jabref.model.database.BibDatabase.BibDatabase(java.util.List<org.jabref.model.entry.BibEntry>)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡K ¡(V2ù
∫org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!entryCALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¡_ ¡(d∫
Àorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)?citation@580.15:580.23VARIABLEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaƒ ƒ("
typeString"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>String <mark class="class-field">citation</mark> = CitationStyleGenerator.generateCitation(entry, CitationStyle.createCitationStyleFromFile(cslFileName).orElseThrow().getSource()<mark class="modifier">,</mark> CitationStyleOutputFormat.TEXT, bibDatabaseContext, bibEntryTypesManager)*citation2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaƒ ƒ(2Ò
éorg.jabref.logic.citationstyle.CitationStyleGenerator.generateCitation(org.jabref.model.entry.BibEntry, java.lang.String, org.jabref.logic.citationstyle.CitationStyleOutputFormat, org.jabref.model.database.BibDatabaseContext, org.jabref.model.entry.BibEntryTypesManager)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaƒ1 ƒ(A2ö
8org.jabref.logic.citationstyle.CitationStyle.getSource()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∆U ∆(^2Ç
 java.util.Optional.orElseThrow()CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∆G ∆(R2º
Zorg.jabref.logic.citationstyle.CitationStyle.createCitationStyleFromFile(java.lang.String)CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∆ ∆(92ù
∫org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!entryCALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java≈ ≈(2£
¿org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!cslFileNameCALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java∆: ∆(E2∏
’org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)?bibDatabaseContext@577.27:577.45CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java» »("2º
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59CALLX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java… …($Î
Ωorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!expected	PARAMETERX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿ ¿(#"
typeString"
isFinalfalse"$
declarationStringString expected*expected2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿ ¿(ã
πorg.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!mode	PARAMETERX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿5 ¿(9"
typeBibDatabaseMode"
isFinalfalse")
declarationStringBibDatabaseMode mode*mode2ã
)org.jabref.model.database.BibDatabaseModeTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿% ¿(4ˆ
∫org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!entry	PARAMETERX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿D ¿(I"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2Å
org.jabref.model.entry.BibEntryTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿; ¿(CÙ
¿org.jabref.logic.citationstyle.CitationStyleGeneratorTest.cslMapping(java.lang.String, org.jabref.model.database.BibDatabaseMode, org.jabref.model.entry.BibEntry, java.lang.String)!cslFileName	PARAMETERX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿R ¿(]"
typeString"
isFinalfalse"'
declarationStringString cslFileName*cslFileName2r
java.lang.StringTYPEX
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java¿K ¿(Q§
Zorg.jabref.logic.citationstyle.CitationStyleGeneratorTest?bibEntryTypesManager@24.39:24.59VALUEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java' (;"
isFinaltrue"
typeBibEntryTypesManager"»
declarationString≤<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntryTypesManager <mark class="class-field">bibEntryTypesManager</mark> = new BibEntryTypesManager();"
isStaticfalse"
accessprivate*bibEntryTypesManager2ã
+org.jabref.model.entry.BibEntryTypesManagerTYPEV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.java (&2¢
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALLV
Lsrc\test\java\org\jabref\logic\citationstyle\CitationStyleGeneratorTest.javaB (V