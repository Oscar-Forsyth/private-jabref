
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaÖ
Torg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTestCLASSq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (5"/
package$org.jabref.logic.quality.consistency"
isFinalfalse"
inner classfalse"

isAbstractfalse"á
declarationStringr<mark class="modifier"> </mark><mark class="modifier">class </mark>BibliographyConsistencyCheckResultTxtWriterTest"
accesspackage_private*/BibliographyConsistencyCheckResultTxtWriterTest2˝
{org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java	 (2á
Ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java;	 ;($2˛
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaZ	 Z(2á
Çorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaà	 à("2Î
gorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaü	 ü(2Î
iorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest?importer@26.27:26.35DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (#Â>
{org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)METHODq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java	 ("
isFinalfalse"è
declarationString˘ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">checkSimpleLibrary</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*checkSimpleLibrary2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java   (2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java# #(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java" "(2Û
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$X $(]2í
java.util.List.of(E, E)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$c $(e2ß
,java.nio.file.Path.resolve(java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java& &(&2œ
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java': '(I2€
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriter.writeFindings()CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java)8 )(E2√
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java7/ 7(62≠
2java.nio.file.Files.readString(java.nio.file.Path)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java7 7(%2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (%2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java! !(&2€
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$9 $(U2æ
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java'! '(32â
çorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?first@30.17:30.22CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$f $(k2ä
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?second@33.17:33.23CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$m $(s2ˇ
Éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)!tempDirCALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java& &(2ã
èorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?txtFile@38.13:38.20CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java'J '(Q2å
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?result@36.44:36.50CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java(ó ((ù2å
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?writer@39.20:39.26CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java(ü ((•2∞
¥org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@40.57:40.100CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java) )(72ã
èorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?txtFile@38.13:38.20CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java7& 7(-2Ñ
Éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)!tempDir	PARAMETERq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java* (12ê
çorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?first@30.17:30.22DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (2ë
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?second@33.17:33.23DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java! !(2ë
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?result@36.44:36.50DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$, $(22í
èorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?txtFile@38.13:38.20DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java& &(2ë
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?writer@39.20:39.26DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java' '(2∑
¥org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@40.57:40.100DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java(9 ((d2Ü
voidRETURN_TYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (‰

çorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?first@30.17:30.22VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java ("
typeBibEntry"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>BibEntry <mark class="class-field">first</mark> = new BibEntry(StandardEntryType.Article, "first").withField(StandardField.AUTHOR, "Author One").withField(StandardField.PAGES, "some pages")*first2ö
org.jabref.model.entry.BibEntryTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java   (2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (%Î

éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?second@33.17:33.23VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java! !("
typeBibEntry"
isFinalfalse"˜
declarationString·<mark class="modifier"> </mark>BibEntry <mark class="class-field">second</mark> = new BibEntry(StandardEntryType.Article, "second").withField(StandardField.AUTHOR, "Author One").withField(StandardField.PUBLISHER, "publisher")*second2ö
org.jabref.model.entry.BibEntryTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java! !(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java# #(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java" "(2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java! !(&æ
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?result@36.44:36.50VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$, $(2"+
type#BibliographyConsistencyCheck.Result"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>BibliographyConsistencyCheck.Result <mark class="class-field">result</mark> = new BibliographyConsistencyCheck().check(List.of(first, second))*result2û
#BibliographyConsistencyCheck.ResultTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$% $(+2Û
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$X $(]2í
java.util.List.of(E, E)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$c $(e2€
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$9 $(U2â
çorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?first@30.17:30.22CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$f $(k2ä
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?second@33.17:33.23CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java$m $(sã
èorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?txtFile@38.13:38.20VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java& &("
typePath"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Path <mark class="class-field">txtFile</mark> = tempDir.resolve("checkSimpleLibrary-result.txt")*txtFile2ç
java.nio.file.PathTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java& &(2ß
,java.nio.file.Path.resolve(java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java& &(&2ˇ
Éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)!tempDirCALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java& &(Ñ

éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?writer@39.20:39.26VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java' '("
typeWriter"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Writer <mark class="class-field">writer</mark> = new OutputStreamWriter(Files.newOutputStream(txtFile))*writer2â
java.io.WriterTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java' '(2œ
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java': '(I2æ
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java'! '(32ã
èorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?txtFile@38.13:38.20CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java'J '(QÜ
¥org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@40.57:40.100VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java(9 ((d"3
type+BibliographyConsistencyCheckResultTxtWriter"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>BibliographyConsistencyCheckResultTxtWriter <mark class="class-field">BibliographyConsistencyCheckResultTxtWriter</mark> = new BibliographyConsistencyCheckResultTxtWriter(result, writer)*+BibliographyConsistencyCheckResultTxtWriter2À
Porg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java( ((82å
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?result@36.44:36.50CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java(ó ((ù2å
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)?writer@39.20:39.26CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java(ü ((•â
Éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkSimpleLibrary(java.nio.file.Path)!tempDir	PARAMETERq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java* (1"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2ç
java.nio.file.PathTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java% ()ËG
Ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)METHODq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java;	 ;($"
isFinalfalse"ò
declarationStringÇ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">checkDifferentOutputSymbols</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*checkDifferentOutputSymbols2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaA A(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java@ @(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java? ?(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java> >(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaC C(2Û
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaDX D(]2í
java.util.List.of(E, E)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaDc D(e2ß
,java.nio.file.Path.resolve(java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaF F(&2œ
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaG: G(I2€
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriter.writeFindings()CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaI8 I(E2√
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaV/ V(62≠
2java.nio.file.Files.readString(java.nio.file.Path)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaV V(%2√
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java<' <(32›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java= =(%2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaB B(&2€
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaD9 D(U2æ
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaG! G(32ò
úorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?customField@60.21:60.32CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaA A(&2í
ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?first@61.17:61.22CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaDf D(k2ì
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?second@66.17:66.23CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaDm D(s2à
åorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)!tempDirCALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaF F(2î
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?txtFile@70.13:70.20CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaGJ G(Q2ï
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?result@68.44:68.50CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaHó H(ù2ï
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?writer@71.20:71.26CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaHü H(•2π
Ωorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@72.57:72.100CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaI I(72î
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?txtFile@70.13:70.20CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaV& V(-2ç
åorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)!tempDir	PARAMETERq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java;3 ;(:2ü
úorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?customField@60.21:60.32DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java< <( 2ô
ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?first@61.17:61.22DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java= =(2ö
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?second@66.17:66.23DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaB B(2ö
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?result@68.44:68.50DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaD, D(22õ
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?txtFile@70.13:70.20DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaF F(2ö
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?writer@71.20:71.26DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaG G(2¿
Ωorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@72.57:72.100DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaH9 H(d2Ü
voidRETURN_TYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java; ;(À
úorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?customField@60.21:60.32VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java< <( "
typeUnknownField"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>UnknownField <mark class="class-field">customField</mark> = new UnknownField("custom")*customField2§
)org.jabref.model.entry.field.UnknownFieldTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java< <(2√
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java<' <(3æ
ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?first@61.17:61.22VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java= =("
typeBibEntry"
isFinalfalse"Ó
declarationStringÿ<mark class="modifier"> </mark>BibEntry <mark class="class-field">first</mark> = new BibEntry(StandardEntryType.Article, "first").withField(StandardField.AUTHOR, // required
"Author One").withField(StandardField.TITLE, // required
"Title").withField(StandardField.PAGES, // optional
"some pages").withField(customField, // unknown
"custom")*first2ö
org.jabref.model.entry.BibEntryTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java= =(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaA A(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java@ @(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java? ?(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java> >(2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java= =(%2ò
úorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?customField@60.21:60.32CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaA A(&Á
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?second@66.17:66.23VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaB B("
typeBibEntry"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>BibEntry <mark class="class-field">second</mark> = new BibEntry(StandardEntryType.Article, "second").withField(StandardField.AUTHOR, "Author One")*second2ö
org.jabref.model.entry.BibEntryTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaB B(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaC C(2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaB B(&Ÿ
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?result@68.44:68.50VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaD, D(2"+
type#BibliographyConsistencyCheck.Result"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>BibliographyConsistencyCheck.Result <mark class="class-field">result</mark> = new BibliographyConsistencyCheck().check(List.of(first, second))*result2û
#BibliographyConsistencyCheck.ResultTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaD% D(+2Û
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaDX D(]2í
java.util.List.of(E, E)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaDc D(e2€
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaD9 D(U2í
ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?first@61.17:61.22CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaDf D(k2ì
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?second@66.17:66.23CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaDm D(sß
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?txtFile@70.13:70.20VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaF F("
typePath"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>Path <mark class="class-field">txtFile</mark> = tempDir.resolve("checkDifferentOutputSymbols-result.txt")*txtFile2ç
java.nio.file.PathTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaF F(2ß
,java.nio.file.Path.resolve(java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaF F(&2à
åorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)!tempDirCALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaF F(ñ

óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?writer@71.20:71.26VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaG G("
typeWriter"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Writer <mark class="class-field">writer</mark> = new OutputStreamWriter(Files.newOutputStream(txtFile))*writer2â
java.io.WriterTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaG G(2œ
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaG: G(I2æ
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaG! G(32î
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?txtFile@70.13:70.20CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaGJ G(Q°
Ωorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@72.57:72.100VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaH9 H(d"3
type+BibliographyConsistencyCheckResultTxtWriter"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>BibliographyConsistencyCheckResultTxtWriter <mark class="class-field">BibliographyConsistencyCheckResultTxtWriter</mark> = new BibliographyConsistencyCheckResultTxtWriter(result, writer)*+BibliographyConsistencyCheckResultTxtWriter2À
Porg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaH H(82ï
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?result@68.44:68.50CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaHó H(ù2ï
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)?writer@71.20:71.26CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaHü H(•í
åorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkDifferentOutputSymbols(java.nio.file.Path)!tempDir	PARAMETERq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java;3 ;(:"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2ç
java.nio.file.PathTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java;. ;(2Ì`
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)METHODq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaZ	 Z("
isFinalfalse"ê
declarationString˙ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">checkComplexLibrary</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*checkComplexLibrary2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java] ](2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java\ \(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java` `(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java_ _(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaf f(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javae e(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javad d(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javac c(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaj j(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javai i(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javah h(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javam m(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javal l(2Û
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaoX o(]2õ
 java.util.List.of(E, E, E, E, E)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaoc o(e2ß
,java.nio.file.Path.resolve(java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaq q(&2œ
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javar: r(I2€
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriter.writeFindings()CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javat8 t(E2≈
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaÑ/ Ñ(62Ø
2java.nio.file.Files.readString(java.nio.file.Path)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaÑ Ñ(%2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java[ [(%2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java^ ^(&2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javab b(%2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javag g(&2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javak k(%2€
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javao9 o(U2æ
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javar! r(32ä
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?first@91.17:91.22CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaof o(k2ã
èorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?second@94.17:94.23CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaom o(s2ä
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?third@98.17:98.22CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaou o(z2é
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?fourth@103.17:103.23CALLr
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javao| o(Ç2é
êorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?fifth@107.17:107.22CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaoÑ o(â2Ä
Ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)!tempDirCALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaq q(2é
íorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?txtFile@113.13:113.20CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javarJ r(Q2è
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?result@111.44:111.50CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javasó s(ù2è
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?writer@114.20:114.26CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javasü s(•2≥
∑org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@115.57:115.100CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javat t(72ê
íorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?txtFile@113.13:113.20CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaÑ& Ñ(-2Ö
Ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)!tempDir	PARAMETERq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaZ+ Z(22ë
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?first@91.17:91.22DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java[ [(2í
èorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?second@94.17:94.23DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java^ ^(2ë
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?third@98.17:98.22DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javab b(2î
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?fourth@103.17:103.23DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javag g(2ì
êorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?fifth@107.17:107.22DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javak k(2î
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?result@111.44:111.50DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javao, o(22ï
íorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?txtFile@113.13:113.20DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaq q(2î
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?writer@114.20:114.26DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javar r(2∫
∑org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@115.57:115.100DECLARATIONq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javas9 s(d2Ü
voidRETURN_TYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaZ Z(Â

éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?first@91.17:91.22VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java[ [("
typeBibEntry"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>BibEntry <mark class="class-field">first</mark> = new BibEntry(StandardEntryType.Article, "first").withField(StandardField.AUTHOR, "Author One").withField(StandardField.PAGES, "some pages")*first2ö
org.jabref.model.entry.BibEntryTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java[ [(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java] ](2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java\ \(2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java[ [(%Ï

èorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?second@94.17:94.23VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java^ ^("
typeBibEntry"
isFinalfalse"˜
declarationString·<mark class="modifier"> </mark>BibEntry <mark class="class-field">second</mark> = new BibEntry(StandardEntryType.Article, "second").withField(StandardField.AUTHOR, "Author One").withField(StandardField.PUBLISHER, "publisher")*second2ö
org.jabref.model.entry.BibEntryTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java^ ^(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java` `(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java_ _(2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java^ ^(&˘
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?third@98.17:98.22VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javab b("
typeBibEntry"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>BibEntry <mark class="class-field">third</mark> = new BibEntry(StandardEntryType.InProceedings, "third").withField(StandardField.AUTHOR, "Author One").withField(StandardField.LOCATION, "location").withField(StandardField.YEAR, "2024").withField(StandardField.PAGES, "some pages")*third2ö
org.jabref.model.entry.BibEntryTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javab b(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaf f(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javae e(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javad d(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javac c(2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javab b(%˜
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?fourth@103.17:103.23VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javag g("
typeBibEntry"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>BibEntry <mark class="class-field">fourth</mark> = new BibEntry(StandardEntryType.InProceedings, "fourth").withField(StandardField.AUTHOR, "Author One").withField(StandardField.YEAR, "2024").withField(StandardField.PUBLISHER, "publisher")*fourth2ö
org.jabref.model.entry.BibEntryTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javag g(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaj j(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javai i(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javah h(2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javag g(&Ê

êorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?fifth@107.17:107.22VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javak k("
typeBibEntry"
isFinalfalse"Ò
declarationString€<mark class="modifier"> </mark>BibEntry <mark class="class-field">fifth</mark> = new BibEntry(StandardEntryType.InProceedings, "fifth").withField(StandardField.AUTHOR, "Author One").withField(StandardField.YEAR, "2024")*fifth2ö
org.jabref.model.entry.BibEntryTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javak k(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javam m(2⁄
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javal l(2›
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javak k(%ë
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?result@111.44:111.50VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javao, o(2"+
type#BibliographyConsistencyCheck.Result"
isFinalfalse"Ÿ
declarationString√<mark class="modifier"> </mark>BibliographyConsistencyCheck.Result <mark class="class-field">result</mark> = new BibliographyConsistencyCheck().check(List.of(first, second, third, fourth, fifth))*result2û
#BibliographyConsistencyCheck.ResultTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javao% o(+2Û
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaoX o(]2õ
 java.util.List.of(E, E, E, E, E)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaoc o(e2€
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javao9 o(U2ä
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?first@91.17:91.22CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaof o(k2ã
èorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?second@94.17:94.23CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaom o(s2ä
éorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?third@98.17:98.22CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaou o(z2é
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?fourth@103.17:103.23CALLr
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javao| o(Ç2é
êorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?fifth@107.17:107.22CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaoÑ o(âè
íorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?txtFile@113.13:113.20VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaq q("
typePath"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Path <mark class="class-field">txtFile</mark> = tempDir.resolve("checkSimpleLibrary-result.txt")*txtFile2ç
java.nio.file.PathTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaq q(2ß
,java.nio.file.Path.resolve(java.lang.String)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaq q(&2Ä
Ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)!tempDirCALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaq q(ä

ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?writer@114.20:114.26VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javar r("
typeWriter"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Writer <mark class="class-field">writer</mark> = new OutputStreamWriter(Files.newOutputStream(txtFile))*writer2â
java.io.WriterTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javar r(2œ
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javar: r(I2æ
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javar! r(32é
íorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?txtFile@113.13:113.20CALLq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javarJ r(Qè
∑org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@115.57:115.100VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javas9 s(d"3
type+BibliographyConsistencyCheckResultTxtWriter"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>BibliographyConsistencyCheckResultTxtWriter <mark class="class-field">BibliographyConsistencyCheckResultTxtWriter</mark> = new BibliographyConsistencyCheckResultTxtWriter(result, writer)*+BibliographyConsistencyCheckResultTxtWriter2À
Porg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javas s(82è
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?result@111.44:111.50CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javasó s(ù2è
ëorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)?writer@114.20:114.26CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javasü s(•ä
Ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkComplexLibrary(java.nio.file.Path)!tempDir	PARAMETERq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaZ+ Z(2"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2ç
java.nio.file.PathTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaZ& Z(*æ@
Çorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)METHODs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaà	 à(""
isFinalfalse"ñ
declarationStringÄ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">checkLibraryWithoutIssues</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*checkLibraryWithoutIssues2‹
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaã ã(2‹
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaä ä(2‹
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaé é(2‹
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaç ç(2ı
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaèX è(]2î
java.util.List.of(E, E)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaèc è(e2©
,java.nio.file.Path.resolve(java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaë ë(&2—
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaí: í(I2›
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriter.writeFindings()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaî8 î(E2≈
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaö/ ö(62Ø
2java.nio.file.Files.readString(java.nio.file.Path)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaö ö(%2ﬂ
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaâ â(%2ﬂ
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaå å(&2›
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaè9 è(U2¿
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaí! í(32î
ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?first@137.17:137.22CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaèf è(k2ï
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?second@140.17:140.23CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaèm è(s2à
äorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)!tempDirCALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaë ë(2ñ
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?txtFile@145.13:145.20CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaíJ í(Q2ó
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?result@143.44:143.50CALLu
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaìó ì(ù2ó
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?writer@146.20:146.26CALLu
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaìü ì(•2ª
Ωorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@147.57:147.100CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaî î(72ñ
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?txtFile@145.13:145.20CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaö& ö(-2ç
äorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)!tempDir	PARAMETERs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaà1 à(82õ
ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?first@137.17:137.22DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaâ â(2ú
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?second@140.17:140.23DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaå å(2ú
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?result@143.44:143.50DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaè, è(22ù
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?txtFile@145.13:145.20DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaë ë(2ú
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?writer@146.20:146.26DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaí í(2¬
Ωorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@147.57:147.100DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaì9 ì(d2à
voidRETURN_TYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaà à(˜

ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?first@137.17:137.22VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaâ â("
typeBibEntry"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>BibEntry <mark class="class-field">first</mark> = new BibEntry(StandardEntryType.Article, "first").withField(StandardField.AUTHOR, "Author One").withField(StandardField.PAGES, "some pages")*first2ú
org.jabref.model.entry.BibEntryTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaâ â(2‹
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaã ã(2‹
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaä ä(2ﬂ
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaâ â(%˚

óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?second@140.17:140.23VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaå å("
typeBibEntry"
isFinalfalse"Ù
declarationStringﬁ<mark class="modifier"> </mark>BibEntry <mark class="class-field">second</mark> = new BibEntry(StandardEntryType.Article, "second").withField(StandardField.AUTHOR, "Author One").withField(StandardField.PAGES, "some pages")*second2ú
org.jabref.model.entry.BibEntryTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaå å(2‹
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaé é(2‹
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaç ç(2ﬂ
borg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType, java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaå å(&Á
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?result@143.44:143.50VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaè, è(2"+
type#BibliographyConsistencyCheck.Result"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>BibliographyConsistencyCheck.Result <mark class="class-field">result</mark> = new BibliographyConsistencyCheck().check(List.of(first, second))*result2†
#BibliographyConsistencyCheck.ResultTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaè% è(+2ı
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaèX è(]2î
java.util.List.of(E, E)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaèc è(e2›
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaè9 è(U2î
ñorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?first@137.17:137.22CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaèf è(k2ï
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?second@140.17:140.23CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaèm è(s´
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?txtFile@145.13:145.20VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaë ë("
typePath"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Path <mark class="class-field">txtFile</mark> = tempDir.resolve("checkLibraryWithoutIssues-result.txt")*txtFile2è
java.nio.file.PathTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaë ë(2©
,java.nio.file.Path.resolve(java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaë ë(&2à
äorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)!tempDirCALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaë ë(†

óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?writer@146.20:146.26VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaí í("
typeWriter"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Writer <mark class="class-field">writer</mark> = new OutputStreamWriter(Files.newOutputStream(txtFile))*writer2ã
java.io.WriterTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaí í(2—
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaí: í(I2¿
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaí! í(32ñ
òorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?txtFile@145.13:145.20CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaíJ í(Q©
Ωorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?BibliographyConsistencyCheckResultTxtWriter@147.57:147.100VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaì9 ì(d"3
type+BibliographyConsistencyCheckResultTxtWriter"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>BibliographyConsistencyCheckResultTxtWriter <mark class="class-field">BibliographyConsistencyCheckResultTxtWriter</mark> = new BibliographyConsistencyCheckResultTxtWriter(result, writer)*+BibliographyConsistencyCheckResultTxtWriter2Õ
Porg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaì ì(82ó
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?result@143.44:143.50CALLu
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaìó ì(ù2ó
óorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)?writer@146.20:146.26CALLu
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaìü ì(•î
äorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkLibraryWithoutIssues(java.nio.file.Path)!tempDir	PARAMETERs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaà1 à(8"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2è
java.nio.file.PathTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaà, à(0Ô2
gorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()METHODs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaü	 ü("
isFinalfalse"Ω
declarationStringß <br><mark class="annotation">@Disabled("This</mark> test is only for manual generation of a report") <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">checkManualInput</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*checkManualInput2π
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java† †(2∞
3java.nio.file.Path.resolveSibling(java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java° °(*2∏
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢K ¢(]2”
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢6 ¢(D2ı
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£X £(]2∂
9org.jabref.model.database.BibDatabaseContext.getEntries()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£n £(x2—
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java§: §(I2›
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriter.writeFindings()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¶8 ¶(E2›
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£9 £(U2¿
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java§! §(32˜
zorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?file@160.13:160.17CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java° °(2Ê
iorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest?importer@26.27:26.35CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢- ¢(52˜
zorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?file@160.13:160.17CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢E ¢(I2É
Öorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?databaseContext@162.27:162.42CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£^ £(m2˙
}org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?txtFile@161.13:161.20CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java§J §(Q2˚
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?result@163.44:163.50CALLu
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java•ó •(ù2˚
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?writer@164.20:164.26CALLu
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java•ü •(•2†
¢org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?BibliographyConsistencyCheckResultTxtWriter@165.57:165.100CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¶ ¶(72˛
zorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?file@160.13:160.17DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java† †(2Å
}org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?txtFile@161.13:161.20DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java° °(2ä
Öorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?databaseContext@162.27:162.42DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢ ¢(*2Ä
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?result@163.44:163.50DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£, £(22Ä
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?writer@164.20:164.26DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java§ §(2ß
¢org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?BibliographyConsistencyCheckResultTxtWriter@165.57:165.100DECLARATIONs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java•9 •(d2à
voidRETURN_TYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.javaü ü(ˇ
zorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?file@160.13:160.17VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java† †("
typePath"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of("C:\\TEMP\\JabRef\\biblio-anon.bib")*file2è
java.nio.file.PathTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java† †(2π
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java† †(Ù
}org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?txtFile@161.13:161.20VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java° °("
typePath"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>Path <mark class="class-field">txtFile</mark> = file.resolveSibling("biblio-cited.txt")*txtFile2è
java.nio.file.PathTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java° °(2∞
3java.nio.file.Path.resolveSibling(java.lang.String)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java° °(*2˜
zorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?file@160.13:160.17CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java° °(ñ
Öorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?databaseContext@162.27:162.42VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢ ¢(*"
typeBibDatabaseContext"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">databaseContext</mark> = importer.importDatabase(file).getDatabaseContext()*databaseContext2©
,org.jabref.model.database.BibDatabaseContextTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢ ¢(2∏
;org.jabref.logic.importer.ParserResult.getDatabaseContext()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢K ¢(]2”
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢6 ¢(D2Ê
iorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest?importer@26.27:26.35CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢- ¢(52˜
zorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?file@160.13:160.17CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java¢E ¢(I 
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?result@163.44:163.50VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£, £(2"+
type#BibliographyConsistencyCheck.Result"
isFinalfalse"…
declarationString≥<mark class="modifier"> </mark>BibliographyConsistencyCheck.Result <mark class="class-field">result</mark> = new BibliographyConsistencyCheck().check(databaseContext.getEntries())*result2†
#BibliographyConsistencyCheck.ResultTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£% £(+2ı
xorg.jabref.logic.quality.consistency.BibliographyConsistencyCheck.check(java.util.List<org.jabref.model.entry.BibEntry>)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£X £(]2∂
9org.jabref.model.database.BibDatabaseContext.getEntries()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£n £(x2›
`org.jabref.logic.quality.consistency.BibliographyConsistencyCheck.BibliographyConsistencyCheck()CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£9 £(U2É
Öorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?databaseContext@162.27:162.42CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java£^ £(mË	
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?writer@164.20:164.26VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java§ §("
typeWriter"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Writer <mark class="class-field">writer</mark> = new OutputStreamWriter(Files.newOutputStream(txtFile))*writer2ã
java.io.WriterTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java§ §(2—
Tjava.nio.file.Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java§: §(I2¿
Cjava.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java§! §(32˙
}org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?txtFile@161.13:161.20CALLs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java§J §(Q÷

¢org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?BibliographyConsistencyCheckResultTxtWriter@165.57:165.100VARIABLEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java•9 •(d"3
type+BibliographyConsistencyCheckResultTxtWriter"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier"> </mark>BibliographyConsistencyCheckResultTxtWriter <mark class="class-field">BibliographyConsistencyCheckResultTxtWriter</mark> = new BibliographyConsistencyCheckResultTxtWriter(result, writer)*+BibliographyConsistencyCheckResultTxtWriter2Õ
Porg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTYPEs
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java• •(82˚
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?result@163.44:163.50CALLu
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java•ó •(ù2˚
|org.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest.checkManualInput()?writer@164.20:164.26CALLu
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java•ü •(•¡
iorg.jabref.logic.quality.consistency.BibliographyConsistencyCheckResultTxtWriterTest?importer@26.27:26.35VARIABLEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (#"
isFinalfalse"
typeBibtexImporter"á
declarationStringÒ<mark class="modifier">private </mark>BibtexImporter <mark class="class-field">importer</mark> = new BibtexImporter(mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS)<mark class="modifier">,</mark> new DummyFileUpdateMonitor());"
isStaticfalse"
accessprivate*importer2Æ
3org.jabref.logic.importer.fileformat.BibtexImporterTYPEq
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java (2¡
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLr
gsrc\test\java\org\jabref\logic\quality\consistency\BibliographyConsistencyCheckResultTxtWriterTest.java~ (î