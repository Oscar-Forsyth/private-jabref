
3src\main\java\org\jabref\logic\net\URLDownload.java¸$
 org.jabref.logic.net.URLDownloadCLASS=
3src\main\java\org\jabref\logic\net\URLDownload.javaC C("
packageorg.jabref.logic.net"
isFinalfalse"
inner classfalse"

isAbstractfalse"i
declarationStringT<mark class="modifier">public </mark><mark class="modifier">class </mark>URLDownload"
accesspublic*URLDownload2å
>org.jabref.logic.net.URLDownload.URLDownload(java.lang.String)DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javaR R(2à
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javaY Y(2Ü
8org.jabref.logic.net.URLDownload.bypassSSLVerification()DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javal l(,2√
sorg.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaí í()2|
,org.jabref.logic.net.URLDownload.getSource()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ õ(2~
.org.jabref.logic.net.URLDownload.getMimeType()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaü ü(2
/org.jabref.logic.net.URLDownload.canBeReached()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÃ Ã(2ç
=org.jabref.logic.net.URLDownload.isMimeType(java.lang.String)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄ ⁄(2x
(org.jabref.logic.net.URLDownload.isPdf()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java‰ ‰(2û
Norg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaË Ë(2é
>org.jabref.logic.net.URLDownload.setPostData(java.lang.String)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÏ Ï(2{
+org.jabref.logic.net.URLDownload.asString()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java˜ ˜(2ì
Corg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ Å(2ë
Aorg.jabref.logic.net.URLDownload.asString(java.net.URLConnection)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaã ã(!2´
[org.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javañ ñ(!2É
3org.jabref.logic.net.URLDownload.getCookieFromUrl()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaü ü(,2ã
;org.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java¥ ¥(2Ä
0org.jabref.logic.net.URLDownload.asInputStream()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java¿ ¿(,2Ç
2org.jabref.logic.net.URLDownload.toTemporaryFile()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java– –(2{
+org.jabref.logic.net.URLDownload.toString()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java‚ ‚(2¥
dorg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ Ê(2Å
1org.jabref.logic.net.URLDownload.openConnection()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java˜ ˜('2ñ
Forg.jabref.logic.net.URLDownload.setConnectTimeout(java.time.Duration)DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ õ(!2Ñ
4org.jabref.logic.net.URLDownload.getConnectTimeout()DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java° °(%2Ö
7org.jabref.logic.net.URLDownload?USER_AGENT@69.31:69.41DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javaE E()2Å
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javaF  F(&2í
Dorg.jabref.logic.net.URLDownload?DEFAULT_CONNECT_TIMEOUT@71.34:71.57DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javaG" G(92Å
3org.jabref.logic.net.URLDownload?source@73.22:73.28DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javaI I(2Ö
7org.jabref.logic.net.URLDownload?parameters@74.38:74.48DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javaJ& J(02É
5org.jabref.logic.net.URLDownload?postData@75.19:75.27DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javaK K(2â
;org.jabref.logic.net.URLDownload?connectTimeout@76.21:76.35DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javaL L(#‰
>org.jabref.logic.net.URLDownload.URLDownload(java.lang.String)CONSTRUCTOR=
3src\main\java\org\jabref\logic\net\URLDownload.javaR R(" 
declarationString¥<mark class="modifier">public </mark><mark class="method">URLDownload</mark>(String source)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>MalformedURLException*URLDownload2i
"java.net.URL.URL(java.lang.String)CALL=
3src\main\java\org\jabref\logic\net\URLDownload.javaS S(2å
Eorg.jabref.logic.net.URLDownload.URLDownload(java.lang.String)!sourceCALL=
3src\main\java\org\jabref\logic\net\URLDownload.javaS S(2ë
Eorg.jabref.logic.net.URLDownload.URLDownload(java.lang.String)!source	PARAMETER=
3src\main\java\org\jabref\logic\net\URLDownload.javaR R($2n
 org.jabref.logic.net.URLDownloadRETURN_TYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaR- R(B∏
Eorg.jabref.logic.net.URLDownload.URLDownload(java.lang.String)!source	PARAMETER=
3src\main\java\org\jabref\logic\net\URLDownload.javaR R($"
typeString"
isFinalfalse""
declarationStringString source*source2W
java.lang.StringTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaR R(£
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CONSTRUCTOR=
3src\main\java\org\jabref\logic\net\URLDownload.javaY Y("m
declarationStringX<mark class="modifier">public </mark><mark class="method">URLDownload</mark>(URL source)*URLDownload2ï
Norg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)CALL=
3src\main\java\org\jabref\logic\net\URLDownload.java[ [(2à
Aorg.jabref.logic.net.URLDownload.URLDownload(java.net.URL)!sourceCALL=
3src\main\java\org\jabref\logic\net\URLDownload.javaZ Z(2z
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL=
3src\main\java\org\jabref\logic\net\URLDownload.javaZ Z(2~
7org.jabref.logic.net.URLDownload?USER_AGENT@69.31:69.41CALL=
3src\main\java\org\jabref\logic\net\URLDownload.java[1 [(;2ç
Aorg.jabref.logic.net.URLDownload.URLDownload(java.net.URL)!source	PARAMETER=
3src\main\java\org\jabref\logic\net\URLDownload.javaY Y(!2n
 org.jabref.logic.net.URLDownloadRETURN_TYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaY Y(™
Aorg.jabref.logic.net.URLDownload.URLDownload(java.net.URL)!source	PARAMETER=
3src\main\java\org\jabref\logic\net\URLDownload.javaY Y(!"
typeURL"
isFinalfalse"
declarationString
URL source*source2S
java.net.URLTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaY Y(æ
8org.jabref.logic.net.URLDownload.bypassSSLVerification()METHOD=
3src\main\java\org\jabref\logic\net\URLDownload.javal l(,"
isFinalfalse"Ê
declarationString–<mark class="annotation">@Deprecated</mark> <br><mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">bypassSSLVerification</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*bypassSSLVerification2
6javax.net.ssl.SSLContext.getInstance(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ, Å(72º
sjavax.net.ssl.SSLContext.init(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÇ Ç(2§
[javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÉ É(92t
+javax.net.ssl.SSLContext.getSocketFactory()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÉB É(R2§
[javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaá á(92»
Äorg.jabref.logic.net.URLDownload.Anonymous-6c29a8b0-29ed-4aa4-a4c2-a96382c73581.Anonymous-6c29a8b0-29ed-4aa4-a4c2-a96382c73581()CALL=
3src\main\java\org\jabref\logic\net\URLDownload.javap, p(<2r
)java.security.SecureRandom.SecureRandom()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÇ2 Ç(>2z
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38CALL=
3src\main\java\org\jabref\logic\net\URLDownload.javam m(2ó
Norg.jabref.logic.net.URLDownload.bypassSSLVerification()?context@129.23:129.30CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÇ Ç(2ù
Torg.jabref.logic.net.URLDownload.bypassSSLVerification()?trustAllCerts@112.23:112.36CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÇ Ç(,2ó
Norg.jabref.logic.net.URLDownload.bypassSSLVerification()?context@129.23:129.30CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÉ: É(A2ù
Torg.jabref.logic.net.URLDownload.bypassSSLVerification()?allHostsValid@134.29:134.42CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaá: á(G2|
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaâ â(2ë
Horg.jabref.logic.net.URLDownload.bypassSSLVerification()?e@136.27:136.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaâO â(P2¢
Torg.jabref.logic.net.URLDownload.bypassSSLVerification()?trustAllCerts@112.23:112.36DECLARATION=
3src\main\java\org\jabref\logic\net\URLDownload.javap p($2û
Norg.jabref.logic.net.URLDownload.bypassSSLVerification()?context@129.23:129.30DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ Å(2§
Torg.jabref.logic.net.URLDownload.bypassSSLVerification()?allHostsValid@134.29:134.42DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ Ü(*2ü
Oorg.jabref.logic.net.URLDownload.bypassSSLVerification()?hostname@134.46:134.54DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ. Ü(62û
Norg.jabref.logic.net.URLDownload.bypassSSLVerification()?session@134.56:134.63DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ8 Ü(?2ò
Horg.jabref.logic.net.URLDownload.bypassSSLVerification()?e@136.27:136.28DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaà à(2R
voidRETURN_TYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javal l(û
Torg.jabref.logic.net.URLDownload.bypassSSLVerification()?trustAllCerts@112.23:112.36VARIABLE=
3src\main\java\org\jabref\logic\net\URLDownload.javap p($"
typeTrustManager"
isFinalfalse"ï
declarationStringˇ<mark class="modifier"> </mark>TrustManager[] <mark class="class-field">trustAllCerts</mark> = { new X509TrustManager() {

    @Override
    public <mark class="modifier">void</mark> checkClientTrusted(X509Certificate[] chain, String authType) {
    }

    @Override
    public <mark class="modifier">void</mark> checkServerTrusted(X509Certificate[] chain, String authType) {
    }

    @Override
    public X509Certificate[] getAcceptedIssuers() {
        return new X509Certificate[0];
    }
} }*trustAllCerts2c
javax.net.ssl.TrustManager[]TYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javap p(2»
Äorg.jabref.logic.net.URLDownload.Anonymous-7e4112fa-ab94-48bc-a13c-de3819ecc11c.Anonymous-7e4112fa-ab94-48bc-a13c-de3819ecc11c()CALL=
3src\main\java\org\jabref\logic\net\URLDownload.javap, p(<∏
Norg.jabref.logic.net.URLDownload.bypassSSLVerification()?context@129.23:129.30VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ Å("
type
SSLContext"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark>SSLContext <mark class="class-field">context</mark> = SSLContext.getInstance("TLS")*context2a
javax.net.ssl.SSLContextTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ Å(2
6javax.net.ssl.SSLContext.getInstance(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ, Å(7Ÿ
Torg.jabref.logic.net.URLDownload.bypassSSLVerification()?allHostsValid@134.29:134.42VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ Ü(*"
typeHostnameVerifier"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>HostnameVerifier <mark class="class-field">allHostsValid</mark> = (hostname, session) -> true*allHostsValid2g
javax.net.ssl.HostnameVerifierTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ Ü(º
†org.jabref.logic.net.URLDownload.Anonymous-0018f0a5-5008-473d-ac9b-3162ffa0b232.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)!chain	PARAMETER=
3src\main\java\org\jabref\logic\net\URLDownload.javar= r(B"
typeX509Certificate[]"
isFinalfalse",
declarationStringX509Certificate[] chain*chain2k
$java.security.cert.X509Certificate[]TYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javar+ r(<õ
£org.jabref.logic.net.URLDownload.Anonymous-77f14bbd-0559-473b-ac60-a57d117d2602.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)!authType	PARAMETER=
3src\main\java\org\jabref\logic\net\URLDownload.javarK r(S"
typeString"
isFinalfalse"$
declarationStringString authType*authType2W
java.lang.StringTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javarD r(Jº
†org.jabref.logic.net.URLDownload.Anonymous-603c6f1f-059d-40c7-92b9-e7eef293e4cc.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)!chain	PARAMETER=
3src\main\java\org\jabref\logic\net\URLDownload.javav= v(B"
typeX509Certificate[]"
isFinalfalse",
declarationStringX509Certificate[] chain*chain2k
$java.security.cert.X509Certificate[]TYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javav+ v(<õ
£org.jabref.logic.net.URLDownload.Anonymous-c40121e4-7f67-48a9-ac2e-afe1fbd9c110.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)!authType	PARAMETER=
3src\main\java\org\jabref\logic\net\URLDownload.javavK v(S"
typeString"
isFinalfalse"$
declarationStringString authType*authType2W
java.lang.StringTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javavD v(JË
Oorg.jabref.logic.net.URLDownload.bypassSSLVerification()?hostname@134.46:134.54VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ. Ü(6"
type"
isFinalfalse"
declarationString	 hostname*hostname2TYPEÂ
Norg.jabref.logic.net.URLDownload.bypassSSLVerification()?session@134.56:134.63VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ8 Ü(?"
type"
isFinalfalse"
declarationString session*session2TYPEΩ
Horg.jabref.logic.net.URLDownload.bypassSSLVerification()?e@136.27:136.28VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaà à("
type	Exception"
isFinalfalse" 
declarationStringException e*e2\
java.lang.ExceptionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaà à(’
sorg.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaí í()"
isFinalfalse"®
declarationStringí<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">setSSLVerification</mark>(SSLSocketFactory socketFactory<mark class="modifier"><mark class="modifier">,</mark></mark> HostnameVerifier verifier)"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*setSSLVerification2§
[javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaî î(92§
[javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaï ï(92À
Åorg.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)!socketFactoryCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaî: î(G2≈
|org.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)!verifierCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaï: ï(B2|
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaó ó(2Õ
Éorg.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)?e@150.27:150.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaóK ó(L2–
Åorg.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)!socketFactory	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaí; í(H2 
|org.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)!verifier	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaí[ í(c2‘
Éorg.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)?e@150.27:150.28DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javañ ñ(2T
voidRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaí í(©
Åorg.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)!socketFactory	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaí; í(H"
typeSSLSocketFactory"
isFinalfalse"3
declarationStringSSLSocketFactory socketFactory*socketFactory2g
javax.net.ssl.SSLSocketFactoryTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaí* í(:ô
|org.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)!verifier	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaí[ í(c"
typeHostnameVerifier"
isFinalfalse".
declarationStringHostnameVerifier verifier*verifier2g
javax.net.ssl.HostnameVerifierTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaíJ í(Z˘
Éorg.jabref.logic.net.URLDownload.setSSLVerification(javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier)?e@150.27:150.28VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javañ ñ("
type	Exception"
isFinalfalse" 
declarationStringException e*e2\
java.lang.ExceptionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javañ ñ(û
,org.jabref.logic.net.URLDownload.getSource()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ õ("
isFinalfalse"e
declarationStringP<mark class="modifier">public </mark>URL <mark class="method">getSource</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURL*	getSource2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaú ú(2\
java.net.URLRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ õ(…(
.org.jabref.logic.net.URLDownload.getMimeType()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaü ü("
isFinalfalse"j
declarationStringU<mark class="modifier">public </mark>String <mark class="method">getMimeType</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getMimeType2`
java.net.URL.toString()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java•. •(62c
java.lang.String.isEmpty()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¶6 ¶(=2`
java.net.URL.toString()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaØ- Ø(52c
java.lang.String.isEmpty()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java∞6 ∞(=2f
java.net.URL.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaπB π(P2`
java.net.URL.toString()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ6 π(>2p
'java.net.URLConnection.getContentType()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaª% ª(32c
java.lang.String.isEmpty()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaº6 º(=2k
"java.net.URL.URL(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ+ π(.2ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java• •(2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java•' •(-2ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¶ ¶(2ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¶* ¶(52ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaß ß("2|
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java™ ™(2á
>org.jabref.logic.net.URLDownload.getMimeType()?e@169.27:169.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java™L ™(M2ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaØ Ø(2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaØ& Ø(,2ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java∞ ∞(2ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java∞* ∞(52ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java± ±("2|
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¥ ¥(2á
>org.jabref.logic.net.URLDownload.getMimeType()?e@179.27:179.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¥K ¥(L2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ/ π(52ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaª ª(2ê
Gorg.jabref.logic.net.URLDownload.getMimeType()?connection@185.26:185.36CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaª ª($2ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaº º(2ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaº* º(52ë
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaΩ Ω("2|
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¿ ¿(2á
>org.jabref.logic.net.URLDownload.getMimeType()?e@191.29:191.30CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¿G ¿(H2ò
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java¢ ¢(2ó
Gorg.jabref.logic.net.URLDownload.getMimeType()?connection@185.26:185.36DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ π($2é
>org.jabref.logic.net.URLDownload.getMimeType()?e@169.27:169.28DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java© ©(2é
>org.jabref.logic.net.URLDownload.getMimeType()?e@179.27:179.28DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java≥ ≥(2é
>org.jabref.logic.net.URLDownload.getMimeType()?e@191.29:191.30DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaø ø(2`
java.lang.StringRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaü ü(à
Horg.jabref.logic.net.URLDownload.getMimeType()?contentType@162.15:162.26VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java¢ ¢("
typeString"
isFinalfalse"g
declarationStringR<mark class="modifier"> </mark>String <mark class="class-field">contentType</mark>*contentType2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java¢ ¢(˛
Gorg.jabref.logic.net.URLDownload.getMimeType()?connection@185.26:185.36VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ π($"
typeURLConnection"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>URLConnection <mark class="class-field">connection</mark> = new URL(source.toString()).openConnection()*
connection2_
java.net.URLConnectionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ π(2f
java.net.URL.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaπB π(P2`
java.net.URL.toString()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ6 π(>2k
"java.net.URL.URL(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ+ π(.2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ/ π(5≥
>org.jabref.logic.net.URLDownload.getMimeType()?e@169.27:169.28VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java© ©("
type	Exception"
isFinalfalse" 
declarationStringException e*e2\
java.lang.ExceptionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java© ©(≥
>org.jabref.logic.net.URLDownload.getMimeType()?e@179.27:179.28VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java≥ ≥("
type	Exception"
isFinalfalse" 
declarationStringException e*e2\
java.lang.ExceptionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java≥ ≥(∑
>org.jabref.logic.net.URLDownload.getMimeType()?e@191.29:191.30VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaø ø("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2\
java.io.IOExceptionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaø ø(Í
/org.jabref.logic.net.URLDownload.canBeReached()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaÃ Ã("
isFinalfalse"ﬂ
declarationString…<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">canBeReached</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>UnirestException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*canBeReached2`
java.net.URL.toString()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java÷- ÷(52Ä
7org.jabref.logic.net.URLDownload?USER_AGENT@69.31:69.41CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java‘8 ‘(B2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java÷& ÷(,2ë
Horg.jabref.logic.net.URLDownload.canBeReached()?statusCode@214.12:214.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java◊ ◊(2ë
Horg.jabref.logic.net.URLDownload.canBeReached()?statusCode@214.12:214.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java◊' ◊(12ò
Horg.jabref.logic.net.URLDownload.canBeReached()?statusCode@214.12:214.22DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java÷ ÷(2è
?org.jabref.logic.net.URLDownload.canBeReached()?c@208.56:208.57DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java–8 –(92è
?org.jabref.logic.net.URLDownload.canBeReached()?r@208.59:208.60DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java–; –(<2W
booleanRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÃ Ã(¨
Horg.jabref.logic.net.URLDownload.canBeReached()?statusCode@214.12:214.22VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java÷ ÷("
typeint"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">statusCode</mark> = Unirest.head(source.toString()).asString().getStatus()*
statusCode2L
intTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java÷ ÷(2`
java.net.URL.toString()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java÷- ÷(52|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java÷& ÷(, 
?org.jabref.logic.net.URLDownload.canBeReached()?c@208.56:208.57VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java–8 –(9"
type"
isFinalfalse"
declarationString c*c2TYPE 
?org.jabref.logic.net.URLDownload.canBeReached()?r@208.59:208.60VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java–; –(<"
type"
isFinalfalse"
declarationString r*r2TYPE≤
=org.jabref.logic.net.URLDownload.isMimeType(java.lang.String)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄ ⁄("
isFinalfalse"ì
declarationString~<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isMimeType</mark>(String type)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*
isMimeType2w
.org.jabref.logic.net.URLDownload.getMimeType()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java€ €(!2c
java.lang.String.isEmpty()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java› ›(2v
-java.lang.String.startsWith(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java· ·(2ô
Porg.jabref.logic.net.URLDownload.isMimeType(java.lang.String)?mime@219.15:219.19CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java› ›(2ô
Porg.jabref.logic.net.URLDownload.isMimeType(java.lang.String)?mime@219.15:219.19CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java· ·(2ã
Borg.jabref.logic.net.URLDownload.isMimeType(java.lang.String)!typeCALL?
3src\main\java\org\jabref\logic\net\URLDownload.java· ·(#2ê
Borg.jabref.logic.net.URLDownload.isMimeType(java.lang.String)!type	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄% ⁄()2†
Porg.jabref.logic.net.URLDownload.isMimeType(java.lang.String)?mime@219.15:219.19DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java€ €(2W
booleanRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄ ⁄(ã
Porg.jabref.logic.net.URLDownload.isMimeType(java.lang.String)?mime@219.15:219.19VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java€ €("
typeString"
isFinalfalse"p
declarationString[<mark class="modifier"> </mark>String <mark class="class-field">mime</mark> = getMimeType()*mime2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java€ €(2w
.org.jabref.logic.net.URLDownload.getMimeType()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java€ €(!µ
Borg.jabref.logic.net.URLDownload.isMimeType(java.lang.String)!type	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄% ⁄()"
typeString"
isFinalfalse" 
declarationStringString type*type2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄ ⁄($ø
(org.jabref.logic.net.URLDownload.isPdf()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.java‰ ‰("
isFinalfalse"É
declarationStringn<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isPdf</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isPdf2Ü
=org.jabref.logic.net.URLDownload.isMimeType(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÂ Â(2W
booleanRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java‰ ‰(õ
Norg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaË Ë("
isFinalfalse"Ÿ
declarationString√<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">addHeader</mark>(String key<mark class="modifier"><mark class="modifier">,</mark></mark> String value)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*	addHeader2`
java.util.Map.put(K, V)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÈ È(2õ
Rorg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)!keyCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÈ È(2ù
Torg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)!valueCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÈ! È(&2Ä
7org.jabref.logic.net.URLDownload?parameters@74.38:74.48CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÈ È(2†
Rorg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)!key	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaË! Ë($2¢
Torg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)!value	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaË- Ë(22T
voidRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaË Ë(√
Rorg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)!key	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaË! Ë($"
typeString"
isFinalfalse"
declarationString
String key*key2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaË Ë( …
Torg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)!value	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaË- Ë(2"
typeString"
isFinalfalse"!
declarationStringString value*value2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaË& Ë(,ù
>org.jabref.logic.net.URLDownload.setPostData(java.lang.String)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaÏ Ï("
isFinalfalse"ñ
declarationStringÄ<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setPostData</mark>(String postData)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setPostData2ê
Gorg.jabref.logic.net.URLDownload.setPostData(java.lang.String)!postDataCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÌ Ì(2ê
Gorg.jabref.logic.net.URLDownload.setPostData(java.lang.String)!postDataCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÓ Ó($2~
5org.jabref.logic.net.URLDownload?postData@75.19:75.27CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÓ Ó(2ï
Gorg.jabref.logic.net.URLDownload.setPostData(java.lang.String)!postData	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÏ# Ï(+2T
voidRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÏ Ï(¬
Gorg.jabref.logic.net.URLDownload.setPostData(java.lang.String)!postData	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÏ# Ï(+"
typeString"
isFinalfalse"$
declarationStringString postData*postData2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÏ Ï("õ
+org.jabref.logic.net.URLDownload.asString()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.java˜ ˜("
isFinalfalse"∑
declarationString°<mark class="modifier">public </mark>String <mark class="method">asString</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*asString2§
[org.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¯ ¯(2z
1org.jabref.logic.net.URLDownload.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¯5 ¯(C2`
java.lang.StringRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java˜ ˜(¯
Corg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ Å("
isFinalfalse"«
declarationString±<mark class="modifier">public </mark>String <mark class="method">asString</mark>(Charset encoding)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*asString2§
[org.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÇ Ç(2z
1org.jabref.logic.net.URLDownload.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÇ' Ç(52ï
Lorg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset)!encodingCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÇ Ç( 2ö
Lorg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset)!encoding	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ# Å(+2`
java.lang.StringRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ Å(—
Lorg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset)!encoding	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ# Å(+"
typeCharset"
isFinalfalse"%
declarationStringCharset encoding*encoding2a
java.nio.charset.CharsetTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÅ Å("æ
Aorg.jabref.logic.net.URLDownload.asString(java.net.URLConnection)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaã ã(!"
isFinalfalse"¸
declarationStringÊ<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">asString</mark>(URLConnection existingConnection)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*asString2§
[org.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaå å(2ù
Torg.jabref.logic.net.URLDownload.asString(java.net.URLConnection)!existingConnectionCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaå0 å(B2¢
Torg.jabref.logic.net.URLDownload.asString(java.net.URLConnection)!existingConnection	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaã0 ã(B2`
java.lang.StringRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaã ã(˜
Torg.jabref.logic.net.URLDownload.asString(java.net.URLConnection)!existingConnection	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaã0 ã(B"
typeURLConnection"
isFinalfalse"5
declarationString URLConnection existingConnection*existingConnection2_
java.net.URLConnectionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaã" ã(/æ
[org.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javañ ñ(!"
isFinalfalse"¬
declarationString¨<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">asString</mark>(Charset encoding<mark class="modifier"><mark class="modifier">,</mark></mark> URLConnection connection)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*asString2p
'java.net.URLConnection.getInputStream()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaòD ò(R2≠
dorg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaö ö(2d
java.lang.Object.toString()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ õ("2ç
Djava.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaò% ò(82l
#java.io.StringWriter.StringWriter()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaô! ô(-2Ø
forg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)!connectionCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaò9 ò(C2∏
oorg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)?input@280.25:280.30CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaö ö(2π
porg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)?output@281.20:281.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaö ö(2≠
dorg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)!encodingCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaö  ö((2π
porg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)?output@281.20:281.26CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ õ(2≤
dorg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)!encoding	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javañ* ñ(22¥
forg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)!connection	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javañB ñ(L2ø
oorg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)?input@280.25:280.30DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaò ò(2¿
porg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)?output@281.20:281.26DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaô ô(2`
java.lang.StringRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javañ ñ(ù
oorg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)?input@280.25:280.30VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaò ò("
typeInputStream"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>InputStream <mark class="class-field">input</mark> = new BufferedInputStream(connection.getInputStream())*input2\
java.io.InputStreamTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaò ò(2p
'java.net.URLConnection.getInputStream()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaòD ò(R2ç
Djava.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaò% ò(82Ø
forg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)!connectionCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaò9 ò(Cß
porg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)?output@281.20:281.26VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaô ô("
typeWriter"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>Writer <mark class="class-field">output</mark> = new StringWriter()*output2W
java.io.WriterTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaô ô(2l
#java.io.StringWriter.StringWriter()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaô! ô(-È
dorg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)!encoding	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javañ* ñ(2"
typeCharset"
isFinalfalse"%
declarationStringCharset encoding*encoding2a
java.nio.charset.CharsetTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javañ" ñ()˘
forg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset, java.net.URLConnection)!connection	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javañB ñ(L"
typeURLConnection"
isFinalfalse"-
declarationStringURLConnection connection*
connection2_
java.net.URLConnectionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javañ4 ñ(AÔ
3org.jabref.logic.net.URLDownload.getCookieFromUrl()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaü ü(,"
isFinalfalse"œ
declarationStringπ<mark class="modifier">public </mark>List&lt;HttpCookie&gt; <mark class="method">getCookieFromUrl</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<HttpCookie>*getCookieFromUrl2Ç
9java.net.CookieHandler.setDefault(java.net.CookieHandler)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java° °( 2Ü
=java.net.CookieManager.setCookiePolicy(java.net.CookiePolicy)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¢ ¢(%2z
1org.jabref.logic.net.URLDownload.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java§! §(/2q
(java.net.URLConnection.getHeaderFields()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java• •(2o
&java.net.CookieStore.get(java.net.URI)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java®2 ®(52p
'java.net.CookieManager.getCookieStore()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java®! ®(/2]
java.net.URL.toURI()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java®B ®(G2j
!java.util.Collections.emptyList()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java´ ´((2o
&java.net.CookieManager.CookieManager()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java†* †(72ò
Oorg.jabref.logic.net.URLDownload.getCookieFromUrl()?cookieManager@288.22:288.35CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java°! °(.2ò
Oorg.jabref.logic.net.URLDownload.getCookieFromUrl()?cookieManager@288.22:288.35CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¢ ¢(2é
Eorg.jabref.logic.net.URLDownload.getCookieFromUrl()?con@292.22:292.25CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java• •(2ò
Oorg.jabref.logic.net.URLDownload.getCookieFromUrl()?cookieManager@288.22:288.35CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java® ®( 2|
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java™ ™(2å
Corg.jabref.logic.net.URLDownload.getCookieFromUrl()?e@297.36:297.37CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java™B ™(C2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java®; ®(A2ü
Oorg.jabref.logic.net.URLDownload.getCookieFromUrl()?cookieManager@288.22:288.35DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java† †(#2ï
Eorg.jabref.logic.net.URLDownload.getCookieFromUrl()?con@292.22:292.25DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java§ §(2ì
Corg.jabref.logic.net.URLDownload.getCookieFromUrl()?e@297.36:297.37DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java©$ ©(%2^
java.util.ListRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaü ü(2l
java.net.HttpCookieRETURN_TYPE_ARGUMENT?
3src\main\java\org\jabref\logic\net\URLDownload.javaü ü(Ø
Oorg.jabref.logic.net.URLDownload.getCookieFromUrl()?cookieManager@288.22:288.35VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java† †(#"
typeCookieManager"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>CookieManager <mark class="class-field">cookieManager</mark> = new CookieManager()*cookieManager2_
java.net.CookieManagerTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java† †(2o
&java.net.CookieManager.CookieManager()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java†* †(7Ω
Eorg.jabref.logic.net.URLDownload.getCookieFromUrl()?con@292.22:292.25VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java§ §("
typeURLConnection"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>URLConnection <mark class="class-field">con</mark> = <mark class="modifier">this</mark>.openConnection()*con2_
java.net.URLConnectionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java§ §(2z
1org.jabref.logic.net.URLDownload.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java§! §(/“
Corg.jabref.logic.net.URLDownload.getCookieFromUrl()?e@297.36:297.37VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java©$ ©(%"
typeURISyntaxException"
isFinalfalse")
declarationStringURISyntaxException e*e2d
java.net.URISyntaxExceptionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java© ©(#¸
;org.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.java¥ ¥("
isFinalfalse"·
declarationStringÀ<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">toFile</mark>(Path destination)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*toFile2p
'java.net.URLConnection.getInputStream()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaµO µ(]2z
1org.jabref.logic.net.URLDownload.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaµ> µ(L2ß
^java.nio.file.Files.copy(java.io.InputStream, java.nio.file.Path, java.nio.file.CopyOption...)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java∂ ∂(2ç
Djava.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaµ% µ(82ò
Oorg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)?input@309.25:309.30CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java∂ ∂(2ê
Gorg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)!destinationCALL?
3src\main\java\org\jabref\logic\net\URLDownload.java∂ ∂()2|
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java∏ ∏(2î
Korg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)?e@311.29:311.30CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java∏0 ∏(12î
Korg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)?e@311.29:311.30CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaπ π(2ï
Gorg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)!destination	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.java¥ ¥('2ü
Oorg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)?input@309.25:309.30DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaµ µ(2õ
Korg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)?e@311.29:311.30DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java∑ ∑(2T
voidRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java¥ ¥(
Oorg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)?input@309.25:309.30VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaµ µ("
typeInputStream"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>InputStream <mark class="class-field">input</mark> = new BufferedInputStream(<mark class="modifier">this</mark>.openConnection().getInputStream())*input2\
java.io.InputStreamTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaµ µ(2p
'java.net.URLConnection.getInputStream()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaµO µ(]2z
1org.jabref.logic.net.URLDownload.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaµ> µ(L2ç
Djava.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaµ% µ(8∆
Gorg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)!destination	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.java¥ ¥('"
typePath"
isFinalfalse"%
declarationStringPath destination*destination2[
java.nio.file.PathTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java¥ ¥(ƒ
Korg.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)?e@311.29:311.30VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java∑ ∑("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2\
java.io.IOExceptionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java∑ ∑(¶
0org.jabref.logic.net.URLDownload.asInputStream()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.java¿ ¿(,"
isFinalfalse"…
declarationString≥<mark class="modifier">public </mark>ProgressInputStream <mark class="method">asInputStream</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeProgressInputStream*asInputStream2z
1org.jabref.logic.net.URLDownload.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¡C ¡(Q2u
,java.net.HttpURLConnection.getResponseCode()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java√ √(*2u
,java.net.HttpURLConnection.getResponseCode()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java√d √(s2x
/java.net.HttpURLConnection.getResponseMessage()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaƒR ƒ(d2h
java.net.URLConnection.getURL()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaƒv ƒ(|2v
-java.net.URLConnection.getContentLengthLong()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java«& «(:2p
'java.net.URLConnection.getInputStream()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java»M »([2†
Worg.jabref.logic.net.ProgressInputStream.ProgressInputStream(java.io.InputStream, long)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java≈ ≈(*2Ç
9java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java≈/ ≈(C2†
Worg.jabref.logic.net.ProgressInputStream.ProgressInputStream(java.io.InputStream, long)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java» »(&2ç
Djava.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java»+ »(>2ï
Lorg.jabref.logic.net.URLDownload.asInputStream()?urlConnection@321.26:321.39CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java√ √(2ï
Lorg.jabref.logic.net.URLDownload.asInputStream()?urlConnection@321.26:321.39CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java√V √(c2|
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaƒ ƒ(2ï
Lorg.jabref.logic.net.URLDownload.asInputStream()?urlConnection@321.26:321.39CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaƒD ƒ(Q2ï
Lorg.jabref.logic.net.URLDownload.asInputStream()?urlConnection@321.26:321.39CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaƒh ƒ(u2ï
Lorg.jabref.logic.net.URLDownload.asInputStream()?urlConnection@321.26:321.39CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java« «(%2ï
Lorg.jabref.logic.net.URLDownload.asInputStream()?urlConnection@321.26:321.39CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java»? »(L2ê
Gorg.jabref.logic.net.URLDownload.asInputStream()?fileSize@327.13:327.21CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java»` »(h2ú
Lorg.jabref.logic.net.URLDownload.asInputStream()?urlConnection@321.26:321.39DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java¡ ¡('2ó
Gorg.jabref.logic.net.URLDownload.asInputStream()?fileSize@327.13:327.21DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java« «(2x
(org.jabref.logic.net.ProgressInputStreamRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java¿ ¿(¯
Lorg.jabref.logic.net.URLDownload.asInputStream()?urlConnection@321.26:321.39VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java¡ ¡('"
typeHttpURLConnection"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>HttpURLConnection <mark class="class-field">urlConnection</mark> = (HttpURLConnection) <mark class="modifier">this</mark>.openConnection()*urlConnection2c
java.net.HttpURLConnectionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java¡ ¡(2z
1org.jabref.logic.net.URLDownload.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¡C ¡(Q»
Gorg.jabref.logic.net.URLDownload.asInputStream()?fileSize@327.13:327.21VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java« «("
typelong"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark><mark class="modifier">long</mark> <mark class="class-field">fileSize</mark> = urlConnection.getContentLengthLong()*fileSize2M
longTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java« «(2v
-java.net.URLConnection.getContentLengthLong()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java«& «(:2ï
Lorg.jabref.logic.net.URLDownload.asInputStream()?urlConnection@321.26:321.39CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java« «(%÷
2org.jabref.logic.net.URLDownload.toTemporaryFile()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.java– –("
isFinalfalse"º
declarationString¶<mark class="modifier">public </mark>Path <mark class="method">toTemporaryFile</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typePath*toTemporaryFile2_
java.net.URL.getPath()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java“# “(*2h
java.lang.String.substring(int)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java’2 ’(;2j
!java.lang.String.lastIndexOf(int)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java’G ’(R2à
?org.jabref.logic.util.io.FileUtil.getBaseName(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java÷/ ÷(:2e
java.util.Optional.orElse(T)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java◊R ◊(X2ç
Dorg.jabref.logic.util.io.FileUtil.getFileExtension(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java◊* ◊(:2÷
åjava.nio.file.Files.createTempFile(java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄ ⁄((2d
java.io.File.deleteOnExit()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java€ €("2d
java.nio.file.Path.toFile()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java€ €(2Ñ
;org.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java‹ ‹(2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java“ “("2î
Korg.jabref.logic.net.URLDownload.toTemporaryFile()?sourcePath@338.15:338.25CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java’' ’(12î
Korg.jabref.logic.net.URLDownload.toTemporaryFile()?sourcePath@338.15:338.25CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java’< ’(F2ü
Vorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileNameWithExtension@341.15:341.36CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java÷; ÷(P2ü
Vorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileNameWithExtension@341.15:341.36CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java◊; ◊(P2í
Iorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileName@342.15:342.23CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄) ⁄(12ì
Jorg.jabref.logic.net.URLDownload.toTemporaryFile()?extension@343.15:343.24CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄3 ⁄(<2é
Eorg.jabref.logic.net.URLDownload.toTemporaryFile()?file@346.13:346.17CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java€ €(2é
Eorg.jabref.logic.net.URLDownload.toTemporaryFile()?file@346.13:346.17CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java‹ ‹(2é
Eorg.jabref.logic.net.URLDownload.toTemporaryFile()?file@346.13:346.17CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaﬁ ﬁ(2õ
Korg.jabref.logic.net.URLDownload.toTemporaryFile()?sourcePath@338.15:338.25DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java“ “(2¶
Vorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileNameWithExtension@341.15:341.36DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java’ ’($2ô
Iorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileName@342.15:342.23DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java÷ ÷(2ö
Jorg.jabref.logic.net.URLDownload.toTemporaryFile()?extension@343.15:343.24DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java◊ ◊(2ï
Eorg.jabref.logic.net.URLDownload.toTemporaryFile()?file@346.13:346.17DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄ ⁄(2b
java.nio.file.PathRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java– –(˚
Korg.jabref.logic.net.URLDownload.toTemporaryFile()?sourcePath@338.15:338.25VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java“ “("
typeString"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>String <mark class="class-field">sourcePath</mark> = source.getPath()*
sourcePath2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java“ “(2_
java.net.URL.getPath()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java“# “(*2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java“ “("Ë
Vorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileNameWithExtension@341.15:341.36VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java’ ’($"
typeString"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>String <mark class="class-field">fileNameWithExtension</mark> = sourcePath.substring(sourcePath.lastIndexOf('/') + 1)*fileNameWithExtension2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java’ ’(2h
java.lang.String.substring(int)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java’2 ’(;2j
!java.lang.String.lastIndexOf(int)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java’G ’(R2î
Korg.jabref.logic.net.URLDownload.toTemporaryFile()?sourcePath@338.15:338.25CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java’' ’(12î
Korg.jabref.logic.net.URLDownload.toTemporaryFile()?sourcePath@338.15:338.25CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java’< ’(FÏ
Iorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileName@342.15:342.23VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java÷ ÷("
typeString"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>String <mark class="class-field">fileName</mark> = "jabref-" + FileUtil.getBaseName(fileNameWithExtension)*fileName2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java÷ ÷(2à
?org.jabref.logic.util.io.FileUtil.getBaseName(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java÷/ ÷(:2ü
Vorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileNameWithExtension@341.15:341.36CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java÷; ÷(PË
Jorg.jabref.logic.net.URLDownload.toTemporaryFile()?extension@343.15:343.24VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java◊ ◊("
typeString"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>String <mark class="class-field">extension</mark> = "." + FileUtil.getFileExtension(fileNameWithExtension).orElse("tmp")*	extension2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java◊ ◊(2e
java.util.Optional.orElse(T)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java◊R ◊(X2ç
Dorg.jabref.logic.util.io.FileUtil.getFileExtension(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java◊* ◊(:2ü
Vorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileNameWithExtension@341.15:341.36CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java◊; ◊(P¶
Eorg.jabref.logic.net.URLDownload.toTemporaryFile()?file@346.13:346.17VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄ ⁄("
typePath"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Files.createTempFile(fileName, extension)*file2[
java.nio.file.PathTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄ ⁄(2÷
åjava.nio.file.Files.createTempFile(java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄ ⁄((2í
Iorg.jabref.logic.net.URLDownload.toTemporaryFile()?fileName@342.15:342.23CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄) ⁄(12ì
Jorg.jabref.logic.net.URLDownload.toTemporaryFile()?extension@343.15:343.24CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java⁄3 ⁄(<’
+org.jabref.logic.net.URLDownload.toString()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.java‚ ‚("
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">toString</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*toString2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java„1 „(72`
java.lang.StringRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java‚ ‚(‹
dorg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ Ê("
isFinalfalse"ô
declarationStringÉ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">copy</mark>(InputStream in<mark class="modifier"><mark class="modifier">,</mark></mark> Writer out<mark class="modifier"><mark class="modifier">,</mark></mark> Charset encoding)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typevoid*copy2j
!java.io.BufferedReader.readLine()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÍ  Í((2o
&java.io.Writer.write(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÎ Î(2o
&java.io.Writer.write(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÏ Ï(2£
Zjava.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.nio.charset.Charset)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÁ Á((2~
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaË' Ë(52∞
gorg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!inCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÁ) Á(+2∂
morg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!encodingCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÁ- Á(52Ω
torg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?r@359.15:359.16CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaË6 Ë(72¿
worg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?line@361.19:361.23CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÍ Í(2¿
worg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?read@360.28:360.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÍ Í(2±
horg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!outCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÎ Î(2¿
worg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?line@361.19:361.23CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÎ Î(2±
horg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!outCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÏ Ï(2µ
gorg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!in	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ) Ê(+2∂
horg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!out	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ4 Ê(72ª
morg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!encoding	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊA Ê(I2ƒ
torg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?r@359.15:359.16DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÁ Á(2«
worg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?read@360.28:360.32DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaË Ë( 2«
worg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?line@361.19:361.23DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÈ È(2T
voidRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ Ê(◊
torg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?r@359.15:359.16VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÁ Á("
typeReader"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Reader <mark class="class-field">r</mark> = new InputStreamReader(in, encoding)*r2W
java.io.ReaderTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÁ Á(2£
Zjava.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.nio.charset.Charset)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÁ Á((2∞
gorg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!inCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÁ) Á(+2∂
morg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!encodingCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÁ- Á(5ò
worg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?read@360.28:360.32VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaË Ë( "
typeBufferedReader"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>BufferedReader <mark class="class-field">read</mark> = new BufferedReader(r)*read2_
java.io.BufferedReaderTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaË Ë(2~
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaË' Ë(52Ω
torg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?r@359.15:359.16CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaË6 Ë(7©
worg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)?line@361.19:361.23VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÈ È("
typeString"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>String <mark class="class-field">line</mark>*line2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÈ È(„
gorg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!in	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ) Ê(+"
typeInputStream"
isFinalfalse"#
declarationStringInputStream in*in2\
java.io.InputStreamTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ Ê((◊
horg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!out	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ4 Ê(7"
typeWriter"
isFinalfalse"
declarationString
Writer out*out2W
java.io.WriterTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ- Ê(3Ú
morg.jabref.logic.net.URLDownload.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset)!encoding	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊA Ê(I"
typeCharset"
isFinalfalse"%
declarationStringCharset encoding*encoding2a
java.nio.charset.CharsetTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÊ9 Ê(@Ÿ9
1org.jabref.logic.net.URLDownload.openConnection()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.java˜ ˜('"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier">public </mark>URLConnection <mark class="method">openConnection</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURLConnection*openConnection2f
java.net.URL.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¯/ ¯(=2v
-java.net.URLConnection.setConnectTimeout(int)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˘ ˘($2f
java.time.Duration.toMillis()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˘: ˘(B2a
java.util.Map.entrySet()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˙; ˙(C2ñ
Mjava.net.URLConnection.setRequestProperty(java.lang.String, java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˚ ˚()2e
java.util.Map.Entry.getKey()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˚0 ˚(62g
java.util.Map.Entry.getValue()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˚@ ˚(H2c
java.lang.String.isEmpty()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˝ ˝("2t
+java.net.URLConnection.setDoOutput(boolean)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˛ ˛("2q
(java.net.URLConnection.getOutputStream()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaˇG ˇ(V2~
5java.io.DataOutputStream.writeBytes(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÄ Ä(2u
,java.net.HttpURLConnection.getResponseCode()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ% Ü(42Ä
7java.net.URLConnection.getHeaderField(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaå+ å(92z
1org.jabref.logic.net.URLDownload.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaé5 é(C2à
?java.io.DataOutputStream.DataOutputStream(java.io.OutputStream)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaˇ+ ˇ(;2á
>org.jabref.logic.net.URLDownload.URLDownload(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaé! é(,2}
4java.io.IOException.IOException(java.lang.Throwable)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaë ë(%2¢
Yorg.jabref.logic.importer.FetcherClientException.FetcherClientException(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaë* ë(@2}
4java.io.IOException.IOException(java.lang.Throwable)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaî î(%2¢
Yorg.jabref.logic.importer.FetcherServerException.FetcherServerException(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaî* î(@2ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˘ ˘(2Ñ
;org.jabref.logic.net.URLDownload?connectTimeout@76.21:76.35CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˘+ ˘(92ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˚ ˚(2é
Eorg.jabref.logic.net.URLDownload.openConnection()?entry@378.35:378.40CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˚* ˚(/2é
Eorg.jabref.logic.net.URLDownload.openConnection()?entry@378.35:378.40CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˚: ˚(?2ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˛ ˛(2ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaˇ< ˇ(F2ã
Borg.jabref.logic.net.URLDownload.openConnection()?wr@383.34:383.36CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÄ Ä(2ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÑ Ñ(2è
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaà à(2è
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaâ â(2è
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaä ä(2ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaå  å(*2ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaé é(2è
Forg.jabref.logic.net.URLDownload.openConnection()?newUrl@396.23:396.29CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaé- é(32è
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaê ê(2è
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaê$ ê(*2è
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaëc ë(i2è
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaì ì(2è
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaîc î(i2ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaò ò(2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¯( ¯(.2Ä
7org.jabref.logic.net.URLDownload?parameters@74.38:74.48CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˙0 ˙(:2~
5org.jabref.logic.net.URLDownload?postData@75.19:75.27CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java˝ ˝(2~
5org.jabref.logic.net.URLDownload?postData@75.19:75.27CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÄ# Ä(+2ö
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java¯ ¯( 2ï
Eorg.jabref.logic.net.URLDownload.openConnection()?entry@378.35:378.40DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.java˙# ˙((2í
Borg.jabref.logic.net.URLDownload.openConnection()?wr@383.34:383.36DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaˇ" ˇ($2ñ
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ Ü(2ñ
Forg.jabref.logic.net.URLDownload.openConnection()?newUrl@396.23:396.29DECLARATION?
3src\main\java\org\jabref\logic\net\URLDownload.javaå å(2f
java.net.URLConnectionRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java˜ ˜(¡
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java¯ ¯( "
typeURLConnection"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>URLConnection <mark class="class-field">connection</mark> = <mark class="modifier">this</mark>.source.openConnection()*
connection2_
java.net.URLConnectionTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java¯ ¯(2f
java.net.URL.openConnection()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¯/ ¯(=2|
3org.jabref.logic.net.URLDownload?source@73.22:73.28CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¯( ¯(.‚
Eorg.jabref.logic.net.URLDownload.openConnection()?entry@378.35:378.40VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.java˙# ˙(("
typeEntry<String, String>"
isFinalfalse"p
declarationString[<mark class="modifier"> </mark>Entry<String, String> <mark class="class-field">entry</mark>*entry2\
java.util.Map.EntryTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java˙ ˙(2b
java.lang.StringTYPE_ARGUMENT?
3src\main\java\org\jabref\logic\net\URLDownload.java˙ ˙(2b
java.lang.StringTYPE_ARGUMENT?
3src\main\java\org\jabref\logic\net\URLDownload.java˙ ˙(!◊
Borg.jabref.logic.net.URLDownload.openConnection()?wr@383.34:383.36VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaˇ" ˇ($"
typeDataOutputStream"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>DataOutputStream <mark class="class-field">wr</mark> = new DataOutputStream(connection.getOutputStream())*wr2a
java.io.DataOutputStreamTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaˇ ˇ(!2q
(java.net.URLConnection.getOutputStream()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaˇG ˇ(V2à
?java.io.DataOutputStream.DataOutputStream(java.io.OutputStream)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaˇ+ ˇ(;2ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaˇ< ˇ(F†
Forg.jabref.logic.net.URLDownload.openConnection()?status@390.16:390.22VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ Ü("
typeint"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">status</mark> = lConnection.getResponseCode()*status2L
intTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ Ü(2u
,java.net.HttpURLConnection.getResponseCode()CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaÜ% Ü(4æ
Forg.jabref.logic.net.URLDownload.openConnection()?newUrl@396.23:396.29VARIABLE?
3src\main\java\org\jabref\logic\net\URLDownload.javaå å("
typeString"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>String <mark class="class-field">newUrl</mark> = connection.getHeaderField("location")*newUrl2Y
java.lang.StringTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaå å(2Ä
7java.net.URLConnection.getHeaderField(java.lang.String)CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaå+ å(92ì
Jorg.jabref.logic.net.URLDownload.openConnection()?connection@376.22:376.32CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaå  å(*Í
Forg.jabref.logic.net.URLDownload.setConnectTimeout(java.time.Duration)METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ õ(!"
isFinalfalse"§
declarationStringé<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setConnectTimeout</mark>(Duration connectTimeout)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setConnectTimeout2û
Uorg.jabref.logic.net.URLDownload.setConnectTimeout(java.time.Duration)!connectTimeoutCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaú ú(2û
Uorg.jabref.logic.net.URLDownload.setConnectTimeout(java.time.Duration)!connectTimeoutCALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaù" ù(02Ñ
;org.jabref.logic.net.URLDownload?connectTimeout@76.21:76.35CALL?
3src\main\java\org\jabref\logic\net\URLDownload.javaù ù(2£
Uorg.jabref.logic.net.URLDownload.setConnectTimeout(java.time.Duration)!connectTimeout	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ+ õ(92T
voidRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ õ(‚
Uorg.jabref.logic.net.URLDownload.setConnectTimeout(java.time.Duration)!connectTimeout	PARAMETER?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ+ õ(9"
typeDuration"
isFinalfalse",
declarationStringDuration connectTimeout*connectTimeout2[
java.time.DurationTYPE?
3src\main\java\org\jabref\logic\net\URLDownload.javaõ" õ(*œ
4org.jabref.logic.net.URLDownload.getConnectTimeout()METHOD?
3src\main\java\org\jabref\logic\net\URLDownload.java° °(%"
isFinalfalse"r
declarationString]<mark class="modifier">public </mark>Duration <mark class="method">getConnectTimeout</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeDuration*getConnectTimeout2Ñ
;org.jabref.logic.net.URLDownload?connectTimeout@76.21:76.35CALL?
3src\main\java\org\jabref\logic\net\URLDownload.java¢ ¢(2b
java.time.DurationRETURN_TYPE?
3src\main\java\org\jabref\logic\net\URLDownload.java° °(◊
7org.jabref.logic.net.URLDownload?USER_AGENT@69.31:69.41VALUE=
3src\main\java\org\jabref\logic\net\URLDownload.javaE E()"
isFinaltrue"
typeString"´
declarationStringï<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">USER_AGENT</mark> = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36";"
isStatictrue"
accesspublic*
USER_AGENT2W
java.lang.StringTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaE E(Ü
3org.jabref.logic.net.URLDownload?LOGGER@70.32:70.38VALUE=
3src\main\java\org\jabref\logic\net\URLDownload.javaF  F(&"
isFinaltrue"
typeLogger"·
declarationStringÀ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(URLDownload.class);"
isStatictrue"
accessprivate*LOGGER2W
org.slf4j.LoggerTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaF F(ñ
Dorg.jabref.logic.net.URLDownload?DEFAULT_CONNECT_TIMEOUT@71.34:71.57VALUE=
3src\main\java\org\jabref\logic\net\URLDownload.javaG" G(9"
isFinaltrue"
typeDuration"‡
declarationString <mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Duration <mark class="class-field">DEFAULT_CONNECT_TIMEOUT</mark> = Duration.ofSeconds(30);"
isStatictrue"
accessprivate*DEFAULT_CONNECT_TIMEOUT2Y
java.time.DurationTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaG G(!2i
"java.time.Duration.ofSeconds(long)CALL=
3src\main\java\org\jabref\logic\net\URLDownload.javaGE G(N©
3org.jabref.logic.net.URLDownload?source@73.22:73.28VALUE=
3src\main\java\org\jabref\logic\net\URLDownload.javaI I("
isFinaltrue"
typeURL"ä
declarationStringu<mark class="modifier">private </mark><mark class="modifier">final </mark>URL <mark class="class-field">source</mark>"
isStaticfalse"
accessprivate*source2S
java.net.URLTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaI I(í
7org.jabref.logic.net.URLDownload?parameters@74.38:74.48VALUE=
3src\main\java\org\jabref\logic\net\URLDownload.javaJ& J(0"
isFinaltrue"
typeMap<String, String>"≤
declarationStringú<mark class="modifier">private </mark><mark class="modifier">final </mark>Map<String, String> <mark class="class-field">parameters</mark> = new HashMap<>();"
isStaticfalse"
accessprivate*
parameters2T
java.util.MapTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaJ J(2`
java.lang.StringTYPE_ARGUMENT=
3src\main\java\org\jabref\logic\net\URLDownload.javaJ J(2`
java.lang.StringTYPE_ARGUMENT=
3src\main\java\org\jabref\logic\net\URLDownload.javaJ J($2b
java.util.HashMap.HashMap()CALL=
3src\main\java\org\jabref\logic\net\URLDownload.javaJ7 J(@û
5org.jabref.logic.net.URLDownload?postData@75.19:75.27VARIABLE=
3src\main\java\org\jabref\logic\net\URLDownload.javaK K("
isFinalfalse"
typeString"q
declarationString\<mark class="modifier">private </mark>String <mark class="class-field">postData</mark> = "";"
isStaticfalse"
accessprivate*postData2W
java.lang.StringTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaK K(⁄
;org.jabref.logic.net.URLDownload?connectTimeout@76.21:76.35VARIABLE=
3src\main\java\org\jabref\logic\net\URLDownload.javaL L(#"
isFinalfalse"
typeDuration"é
declarationStringy<mark class="modifier">private </mark>Duration <mark class="class-field">connectTimeout</mark> = DEFAULT_CONNECT_TIMEOUT;"
isStaticfalse"
accessprivate*connectTimeout2Y
java.time.DurationTYPE=
3src\main\java\org\jabref\logic\net\URLDownload.javaL L(2ã
Dorg.jabref.logic.net.URLDownload?DEFAULT_CONNECT_TIMEOUT@71.34:71.57CALL=
3src\main\java\org\jabref\logic\net\URLDownload.javaL& L(=