
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÖ
$org.jabref.logic.net.URLDownloadTestCLASSA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java ("
packageorg.jabref.logic.net"
isFinalfalse"
inner classfalse"

isAbstractfalse"ü
declarationStringâ<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>URLDownloadTest"
accesspublic*URLDownloadTest2ñ
Dorg.jabref.logic.net.URLDownloadTest.stringDownloadWithSetEncoding()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java (-2á
5org.jabref.logic.net.URLDownloadTest.stringDownload()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java% %(2Ö
3org.jabref.logic.net.URLDownloadTest.fileDownload()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java, ,(2ä
8org.jabref.logic.net.URLDownloadTest.determineMimeType()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java; ;(!2≠
[org.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaB B(D2ô
Gorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaJ J(02é
<org.jabref.logic.net.URLDownloadTest.downloadOfFTPSucceeds()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaS S(%2è
=org.jabref.logic.net.URLDownloadTest.downloadOfHttpSucceeds()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java[ [(&2ê
>org.jabref.logic.net.URLDownloadTest.downloadOfHttpsSucceeds()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javac c('2è
=org.jabref.logic.net.URLDownloadTest.checkConnectionSuccess()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javak k(&2å
:org.jabref.logic.net.URLDownloadTest.checkConnectionFail()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javar r(#2í
@org.jabref.logic.net.URLDownloadTest.connectTimeoutIsNeverNull()DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javay y()2∏
dorg.jabref.logic.net.URLDownloadTest.test503ErrorThrowsNestedIOExceptionWithFetcherServerException()DECLARATIONC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÇ Ç(M2∏
dorg.jabref.logic.net.URLDownloadTest.test429ErrorThrowsNestedIOExceptionWithFetcherServerException()DECLARATIONC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaä ä(M2â
7org.jabref.logic.net.URLDownloadTest?LOGGER@27.32:27.38DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java  (&≠
Dorg.jabref.logic.net.URLDownloadTest.stringDownloadWithSetEncoding()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java (-"
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">stringDownloadWithSetEncoding</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*stringDownloadWithSetEncoding2|
1java.lang.String.contains(java.lang.CharSequence)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java!! !()2v
+org.jabref.logic.net.URLDownload.asString()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java! !(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java ((2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java- (02û
Sorg.jabref.logic.net.URLDownloadTest.stringDownloadWithSetEncoding()?dl@31.20:31.22CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java! !(2•
Sorg.jabref.logic.net.URLDownloadTest.stringDownloadWithSetEncoding()?dl@31.20:31.22DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java (2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java (Ã
Sorg.jabref.logic.net.URLDownloadTest.stringDownloadWithSetEncoding()?dl@31.20:31.22VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java ("
typeURLDownload"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>URLDownload <mark class="class-field">dl</mark> = new URLDownload(new URL("http://www.google.com"))*dl2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java (2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java ((2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java- (0˚

5org.jabref.logic.net.URLDownloadTest.stringDownload()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java% %("
isFinalfalse"É
declarationStringÌ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">stringDownload</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*stringDownload2|
1java.lang.String.contains(java.lang.CharSequence)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java(7 ((?2é
Corg.jabref.logic.net.URLDownload.asString(java.nio.charset.Charset)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java( ((2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java& &((2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java&- &(02è
Dorg.jabref.logic.net.URLDownloadTest.stringDownload()?dl@38.20:38.22CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java( ((2ñ
Dorg.jabref.logic.net.URLDownloadTest.stringDownload()?dl@38.20:38.22DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java& &(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java% %(Ω
Dorg.jabref.logic.net.URLDownloadTest.stringDownload()?dl@38.20:38.22VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java& &("
typeURLDownload"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>URLDownload <mark class="class-field">dl</mark> = new URLDownload(new URL("http://www.google.com"))*dl2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java& &(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java& &((2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java&- &(0é
3org.jabref.logic.net.URLDownloadTest.fileDownload()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java, ,("
isFinalfalse"Å
declarationStringÎ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fileDownload</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*fileDownload2ä
?java.io.File.createTempFile(java.lang.String, java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java-  -(.2Ü
;org.jabref.logic.net.URLDownload.toFile(java.nio.file.Path)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java0 0(2`
java.io.File.toPath()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java0" 0((2`
java.io.File.exists()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java1# 1()2`
java.io.File.delete()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java4 4(#2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java/! /(,2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java/1 /(42ç
Borg.jabref.logic.net.URLDownloadTest.fileDownload()?dl@47.24:47.26CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java0 0(2ñ
Korg.jabref.logic.net.URLDownloadTest.fileDownload()?destination@45.13:45.24CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java0 0(!2ñ
Korg.jabref.logic.net.URLDownloadTest.fileDownload()?destination@45.13:45.24CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java1 1("2ñ
Korg.jabref.logic.net.URLDownloadTest.fileDownload()?destination@45.13:45.24CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java4 4(2Ç
7org.jabref.logic.net.URLDownloadTest?LOGGER@27.32:27.38CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java5 5(2ù
Korg.jabref.logic.net.URLDownloadTest.fileDownload()?destination@45.13:45.24DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java- -(2î
Borg.jabref.logic.net.URLDownloadTest.fileDownload()?dl@47.24:47.26DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java/ /(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java, ,(‚
Korg.jabref.logic.net.URLDownloadTest.fileDownload()?destination@45.13:45.24VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java- -("
typeFile"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>File <mark class="class-field">destination</mark> = File.createTempFile("jabref-test"<mark class="modifier">,</mark> ".html")*destination2W
java.io.FileTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java- -(2ä
?java.io.File.createTempFile(java.lang.String, java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java-  -(.ª
Borg.jabref.logic.net.URLDownloadTest.fileDownload()?dl@47.24:47.26VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java/ /("
typeURLDownload"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>URLDownload <mark class="class-field">dl</mark> = new URLDownload(new URL("http://www.google.com"))*dl2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java/ /(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java/! /(,2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java/1 /(4

8org.jabref.logic.net.URLDownloadTest.determineMimeType()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java; ;(!"
isFinalfalse"Ü
declarationString<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">determineMimeType</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*determineMimeType2x
-java.lang.String.startsWith(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java>$ >(.2y
.org.jabref.logic.net.URLDownload.getMimeType()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java> >(!2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java< <((2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java<- <(02í
Gorg.jabref.logic.net.URLDownloadTest.determineMimeType()?dl@60.20:60.22CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java> >(2ô
Gorg.jabref.logic.net.URLDownloadTest.determineMimeType()?dl@60.20:60.22DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java< <(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java; ;(¿
Gorg.jabref.logic.net.URLDownloadTest.determineMimeType()?dl@60.20:60.22VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java< <("
typeURLDownload"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>URLDownload <mark class="class-field">dl</mark> = new URLDownload(new URL("http://www.google.com"))*dl2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java< <(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java< <((2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java<- <(0»
[org.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaB B(D"
isFinalfalse"©
declarationStringì<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">downloadToTemporaryFilePathWithoutFileSavesAsTmpFile</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*4downloadToTemporaryFilePathWithoutFileSavesAsTmpFile2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaE/ E(72}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaE E(,2v
+java.lang.String.endsWith(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaF F( 2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaC! C(,2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaC1 C(42π
norg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()?google@67.20:67.26CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaE E(2∑
lorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()?path@69.15:69.19CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaF F(2∑
lorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()?path@69.15:69.19CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaF* F(.2¿
norg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()?google@67.20:67.26DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaC C(2æ
lorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()?path@69.15:69.19DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaE E(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaB B(Ô
norg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()?google@67.20:67.26VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaC C("
typeURLDownload"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>URLDownload <mark class="class-field">google</mark> = new URLDownload(new URL("http://www.google.com"))*google2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaC C(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaC! C(,2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaC1 C(4Ó
lorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()?path@69.15:69.19VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaE E("
typeString"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>String <mark class="class-field">path</mark> = google.toTemporaryFile().toString()*path2[
java.lang.StringTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaE E(2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaE/ E(72}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaE E(,2π
norg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFilePathWithoutFileSavesAsTmpFile()?google@67.20:67.26CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaE E(Æ
Gorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaJ J(0"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">downloadToTemporaryFileKeepsName</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* downloadToTemporaryFileKeepsName2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaM/ M(72}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaM M(,2|
1java.lang.String.contains(java.lang.CharSequence)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaN N( 2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaK! K(,2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaK1 K(42•
Zorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()?google@75.20:75.26CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaM M(2£
Xorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()?path@77.15:77.19CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaN N(2£
Xorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()?path@77.15:77.19CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaN- N(12¨
Zorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()?google@75.20:75.26DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaK K(2™
Xorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()?path@77.15:77.19DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaM M(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaJ J(¯
Zorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()?google@75.20:75.26VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaK K("
typeURLDownload"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>URLDownload <mark class="class-field">google</mark> = new URLDownload(new URL("https://github.com/JabRef/jabref/blob/main/LICENSE"))*google2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaK K(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaK! K(,2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaK1 K(4∆
Xorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()?path@77.15:77.19VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaM M("
typeString"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>String <mark class="class-field">path</mark> = google.toTemporaryFile().toString()*path2[
java.lang.StringTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaM M(2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaM/ M(72}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaM M(,2•
Zorg.jabref.logic.net.URLDownloadTest.downloadToTemporaryFileKeepsName()?google@75.20:75.26CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaM M(É
<org.jabref.logic.net.URLDownloadTest.downloadOfFTPSucceeds()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaS S(%"
isFinalfalse"¿
declarationString™ <br><mark class="annotation">@DisabledOnCIServer("CI</mark> Server is apparently blocked") <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">downloadOfFTPSucceeds</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*downloadOfFTPSucceeds2}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaV V('2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaT T()2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaT. T(12ó
Lorg.jabref.logic.net.URLDownloadTest.downloadOfFTPSucceeds()?ftp@84.20:84.23CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaV V(2ò
Morg.jabref.logic.net.URLDownloadTest.downloadOfFTPSucceeds()?path@86.13:86.17CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaW W(2û
Lorg.jabref.logic.net.URLDownloadTest.downloadOfFTPSucceeds()?ftp@84.20:84.23DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaT T(2ü
Morg.jabref.logic.net.URLDownloadTest.downloadOfFTPSucceeds()?path@86.13:86.17DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaV V(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaS S(ö
Lorg.jabref.logic.net.URLDownloadTest.downloadOfFTPSucceeds()?ftp@84.20:84.23VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaT T("
typeURLDownload"
isFinalfalse"Ï
declarationString÷<mark class="modifier"> </mark>URLDownload <mark class="class-field">ftp</mark> = new URLDownload(new URL("ftp://ftp.informatik.uni-stuttgart.de/pub/library/ncstrl.ustuttgart_fi/INPROC-2016-15/INPROC-2016-15.pdf"))*ftp2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaT T(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaT T()2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaT. T(1≤
Morg.jabref.logic.net.URLDownloadTest.downloadOfFTPSucceeds()?path@86.13:86.17VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaV V("
typePath"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = ftp.toTemporaryFile()*path2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaV V(2}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaV V('2ó
Lorg.jabref.logic.net.URLDownloadTest.downloadOfFTPSucceeds()?ftp@84.20:84.23CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaV V(‘
=org.jabref.logic.net.URLDownloadTest.downloadOfHttpSucceeds()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java[ [(&"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">downloadOfHttpSucceeds</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*downloadOfHttpSucceeds2}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java^ ^('2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java\ \()2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java\. \(12ò
Morg.jabref.logic.net.URLDownloadTest.downloadOfHttpSucceeds()?ftp@92.20:92.23CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java^ ^(2ô
Norg.jabref.logic.net.URLDownloadTest.downloadOfHttpSucceeds()?path@94.13:94.17CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java_ _(2ü
Morg.jabref.logic.net.URLDownloadTest.downloadOfHttpSucceeds()?ftp@92.20:92.23DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java\ \(2†
Norg.jabref.logic.net.URLDownloadTest.downloadOfHttpSucceeds()?path@94.13:94.17DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java^ ^(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java[ [(»
Morg.jabref.logic.net.URLDownloadTest.downloadOfHttpSucceeds()?ftp@92.20:92.23VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java\ \("
typeURLDownload"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>URLDownload <mark class="class-field">ftp</mark> = new URLDownload(new URL("http://www.jabref.org"))*ftp2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java\ \(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java\ \()2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java\. \(1¥
Norg.jabref.logic.net.URLDownloadTest.downloadOfHttpSucceeds()?path@94.13:94.17VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java^ ^("
typePath"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = ftp.toTemporaryFile()*path2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java^ ^(2}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java^ ^('2ò
Morg.jabref.logic.net.URLDownloadTest.downloadOfHttpSucceeds()?ftp@92.20:92.23CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java^ ^(„
>org.jabref.logic.net.URLDownloadTest.downloadOfHttpsSucceeds()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javac c('"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">downloadOfHttpsSucceeds</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*downloadOfHttpsSucceeds2}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaf f('2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javad d()2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javad. d(12õ
Porg.jabref.logic.net.URLDownloadTest.downloadOfHttpsSucceeds()?ftp@100.20:100.23CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaf f(2ú
Qorg.jabref.logic.net.URLDownloadTest.downloadOfHttpsSucceeds()?path@102.13:102.17CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javag g(2¢
Porg.jabref.logic.net.URLDownloadTest.downloadOfHttpsSucceeds()?ftp@100.20:100.23DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javad d(2£
Qorg.jabref.logic.net.URLDownloadTest.downloadOfHttpsSucceeds()?path@102.13:102.17DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaf f(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javac c(Ã
Porg.jabref.logic.net.URLDownloadTest.downloadOfHttpsSucceeds()?ftp@100.20:100.23VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javad d("
typeURLDownload"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>URLDownload <mark class="class-field">ftp</mark> = new URLDownload(new URL("https://www.jabref.org"))*ftp2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javad d(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javad d()2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javad. d(1∫
Qorg.jabref.logic.net.URLDownloadTest.downloadOfHttpsSucceeds()?path@102.13:102.17VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaf f("
typePath"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = ftp.toTemporaryFile()*path2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaf f(2}
2org.jabref.logic.net.URLDownload.toTemporaryFile()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaf f('2õ
Porg.jabref.logic.net.URLDownloadTest.downloadOfHttpsSucceeds()?ftp@100.20:100.23CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaf f(¶

=org.jabref.logic.net.URLDownloadTest.checkConnectionSuccess()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javak k(&"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">checkConnectionSuccess</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>MalformedURLException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*checkConnectionSuccess2z
/org.jabref.logic.net.URLDownload.canBeReached()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javan n(&2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javal! l(,2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javal1 l(42ù
Rorg.jabref.logic.net.URLDownloadTest.checkConnectionSuccess()?google@108.20:108.26CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javan n(2§
Rorg.jabref.logic.net.URLDownloadTest.checkConnectionSuccess()?google@108.20:108.26DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javal l(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javak k(”
Rorg.jabref.logic.net.URLDownloadTest.checkConnectionSuccess()?google@108.20:108.26VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javal l("
typeURLDownload"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>URLDownload <mark class="class-field">google</mark> = new URLDownload(new URL("http://www.google.com"))*google2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javal l(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javal! l(,2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javal1 l(4Ä
:org.jabref.logic.net.URLDownloadTest.checkConnectionFail()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javar r(#"
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">checkConnectionFail</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>MalformedURLException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*checkConnectionFail2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javas# s(.2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javas3 s(62£
Qorg.jabref.logic.net.URLDownloadTest.checkConnectionFail()?nonsense@115.20:115.28DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javas s(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javar r(ÿ
Qorg.jabref.logic.net.URLDownloadTest.checkConnectionFail()?nonsense@115.20:115.28VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javas s("
typeURLDownload"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>URLDownload <mark class="class-field">nonsense</mark> = new URLDownload(new URL("http://nonsenseadddress"))*nonsense2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javas s(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javas# s(.2m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javas3 s(6©
@org.jabref.logic.net.URLDownloadTest.connectTimeoutIsNeverNull()METHODA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javay y()"
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">connectTimeoutIsNeverNull</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>MalformedURLException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*connectTimeoutIsNeverNull2
4org.jabref.logic.net.URLDownload.getConnectTimeout()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java{" {(32ë
Forg.jabref.logic.net.URLDownload.setConnectTimeout(java.time.Duration)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java} }(%2
4org.jabref.logic.net.URLDownload.getConnectTimeout()CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java~" ~(32Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaz& z(12m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaz6 z(92•
Zorg.jabref.logic.net.URLDownloadTest.connectTimeoutIsNeverNull()?urlDownload@122.20:122.31CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java{ {(!2•
Zorg.jabref.logic.net.URLDownloadTest.connectTimeoutIsNeverNull()?urlDownload@122.20:122.31CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java} }(2•
Zorg.jabref.logic.net.URLDownloadTest.connectTimeoutIsNeverNull()?urlDownload@122.20:122.31CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java~ ~(!2¨
Zorg.jabref.logic.net.URLDownloadTest.connectTimeoutIsNeverNull()?urlDownload@122.20:122.31DECLARATIONA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaz z(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javay y(Ê
Zorg.jabref.logic.net.URLDownloadTest.connectTimeoutIsNeverNull()?urlDownload@122.20:122.31VARIABLEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaz z("
typeURLDownload"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>URLDownload <mark class="class-field">urlDownload</mark> = new URLDownload(new URL("http://www.example.com"))*urlDownload2k
 org.jabref.logic.net.URLDownloadTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaz z(2Ö
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaz& z(12m
"java.net.URL.URL(java.lang.String)CALLA
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaz6 z(9µ
dorg.jabref.logic.net.URLDownloadTest.test503ErrorThrowsNestedIOExceptionWithFetcherServerException()METHODC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÇ Ç(M"
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">test503ErrorThrowsNestedIOExceptionWithFetcherServerException</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*=test503ErrorThrowsNestedIOExceptionWithFetcherServerException2k
java.lang.Throwable.getCause()CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÜA Ü(I2á
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÉ& É(12o
"java.net.URL.URL(java.lang.String)CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÉ6 É(92…
|org.jabref.logic.net.URLDownloadTest.test503ErrorThrowsNestedIOExceptionWithFetcherServerException()?exception@133.18:133.27CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÜ7 Ü(@2“
~org.jabref.logic.net.URLDownloadTest.test503ErrorThrowsNestedIOExceptionWithFetcherServerException()?urlDownload@131.20:131.31DECLARATIONC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÉ É(2–
|org.jabref.logic.net.URLDownloadTest.test503ErrorThrowsNestedIOExceptionWithFetcherServerException()?exception@133.18:133.27DECLARATIONC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÖ Ö(2X
voidRETURN_TYPEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÇ Ç(í
~org.jabref.logic.net.URLDownloadTest.test503ErrorThrowsNestedIOExceptionWithFetcherServerException()?urlDownload@131.20:131.31VARIABLEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÉ É("
typeURLDownload"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>URLDownload <mark class="class-field">urlDownload</mark> = new URLDownload(new URL("http://httpstat.us/503"))*urlDownload2m
 org.jabref.logic.net.URLDownloadTYPEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÉ É(2á
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÉ& É(12o
"java.net.URL.URL(java.lang.String)CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÉ6 É(9Ñ
|org.jabref.logic.net.URLDownloadTest.test503ErrorThrowsNestedIOExceptionWithFetcherServerException()?exception@133.18:133.27VARIABLEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÖ Ö("
type	Exception"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>Exception <mark class="class-field">exception</mark> = assertThrows(IOException.class, urlDownload::asString)*	exception2`
java.lang.ExceptionTYPEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaÖ Ö(µ
dorg.jabref.logic.net.URLDownloadTest.test429ErrorThrowsNestedIOExceptionWithFetcherServerException()METHODC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaä ä(M"
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">test429ErrorThrowsNestedIOExceptionWithFetcherServerException</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*=test429ErrorThrowsNestedIOExceptionWithFetcherServerException2k
java.lang.Throwable.getCause()CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaéA é(I2á
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaã& ã(12o
"java.net.URL.URL(java.lang.String)CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaã6 ã(92…
|org.jabref.logic.net.URLDownloadTest.test429ErrorThrowsNestedIOExceptionWithFetcherServerException()?exception@141.18:141.27CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaé7 é(@2“
~org.jabref.logic.net.URLDownloadTest.test429ErrorThrowsNestedIOExceptionWithFetcherServerException()?urlDownload@139.20:139.31DECLARATIONC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaã ã(2–
|org.jabref.logic.net.URLDownloadTest.test429ErrorThrowsNestedIOExceptionWithFetcherServerException()?exception@141.18:141.27DECLARATIONC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaç ç(2X
voidRETURN_TYPEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaä ä(í
~org.jabref.logic.net.URLDownloadTest.test429ErrorThrowsNestedIOExceptionWithFetcherServerException()?urlDownload@139.20:139.31VARIABLEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaã ã("
typeURLDownload"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>URLDownload <mark class="class-field">urlDownload</mark> = new URLDownload(new URL("http://httpstat.us/429"))*urlDownload2m
 org.jabref.logic.net.URLDownloadTYPEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaã ã(2á
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaã& ã(12o
"java.net.URL.URL(java.lang.String)CALLC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaã6 ã(9Ñ
|org.jabref.logic.net.URLDownloadTest.test429ErrorThrowsNestedIOExceptionWithFetcherServerException()?exception@141.18:141.27VARIABLEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaç ç("
type	Exception"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>Exception <mark class="class-field">exception</mark> = assertThrows(IOException.class, urlDownload::asString)*	exception2`
java.lang.ExceptionTYPEC
7src\test\java\org\jabref\logic\net\URLDownloadTest.javaç ç(ñ
7org.jabref.logic.net.URLDownloadTest?LOGGER@27.32:27.38VALUEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java  (&"
isFinaltrue"
typeLogger"Â
declarationStringœ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(URLDownloadTest.class);"
isStatictrue"
accessprivate*LOGGER2[
org.slf4j.LoggerTYPEA
7src\test\java\org\jabref\logic\net\URLDownloadTest.java (