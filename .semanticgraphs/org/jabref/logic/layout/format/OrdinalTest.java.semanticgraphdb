
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.javaÎ

*org.jabref.logic.layout.format.OrdinalTestCLASSG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java (")
packageorg.jabref.logic.layout.format"
isFinalfalse"
inner classfalse"

isAbstractfalse"i
declarationStringT<mark class="modifier">public </mark><mark class="modifier">class </mark>OrdinalTest"
accesspublic*OrdinalTest2ä
2org.jabref.logic.layout.format.OrdinalTest.empty()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java
 
(2ç
5org.jabref.logic.layout.format.OrdinalTest.testNull()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java (2ê
8org.jabref.logic.layout.format.OrdinalTest.singleDigit()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java (2ê
8org.jabref.logic.layout.format.OrdinalTest.multiDigits()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java (2î
<org.jabref.logic.layout.format.OrdinalTest.alreadyOrdinals()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java# #(2ë
9org.jabref.logic.layout.format.OrdinalTest.fullSentence()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java* *(2å
4org.jabref.logic.layout.format.OrdinalTest.letters()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java1 1(â
2org.jabref.logic.layout.format.OrdinalTest.empty()METHODG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java
 
("
isFinalfalse"´
declarationStringï<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">empty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*empty2ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java' (-2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java ($2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java
 
(í
5org.jabref.logic.layout.format.OrdinalTest.testNull()METHODG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java ("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">testNull</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*testNull2ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java! ('2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java (2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java (‡
8org.jabref.logic.layout.format.OrdinalTest.singleDigit()METHODG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">singleDigit</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*singleDigit2ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java* (02ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java* (02ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java* (02ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java* (02Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java  ('2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java  ('2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java  ('2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java  ('2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java (…

8org.jabref.logic.layout.format.OrdinalTest.multiDigits()METHODG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">multiDigits</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*multiDigits2ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java+ (12ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java, (22ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java+ (12Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java! ((2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java" ()2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java! ((2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java (’

<org.jabref.logic.layout.format.OrdinalTest.alreadyOrdinals()METHODG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java# #("
isFinalfalse"µ
declarationStringü<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">alreadyOrdinals</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*alreadyOrdinals2ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java$* $(02ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java%, %(22ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java&+ &(12Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java$  $('2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java%" %()2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java&! &((2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java# #(Ã

9org.jabref.logic.layout.format.OrdinalTest.fullSentence()METHODG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java* *("
isFinalfalse"≤
declarationStringú<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fullSentence</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*fullSentence2ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java+/ +(52ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java,2 ,(82ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java-E -(K2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java+% +(,2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java,( ,(/2Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java-; -(B2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java* *(è
4org.jabref.logic.layout.format.OrdinalTest.letters()METHODG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java1 1("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">letters</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*letters2ê
?org.jabref.logic.layout.format.Ordinal.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java2/ 2(52Å
0org.jabref.logic.layout.format.Ordinal.Ordinal()CALLG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java2% 2(,2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\OrdinalTest.java1 1(