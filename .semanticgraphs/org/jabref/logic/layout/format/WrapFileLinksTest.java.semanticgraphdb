
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaò
0org.jabref.logic.layout.format.WrapFileLinksTestCLASSM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java (")
packageorg.jabref.logic.layout.format"
isFinalfalse"
inner classfalse"

isAbstractfalse"i
declarationStringT<mark class="modifier"> </mark><mark class="modifier">class </mark>WrapFileLinksTest"
accesspackage_private*WrapFileLinksTest2ñ
8org.jabref.logic.layout.format.WrapFileLinksTest.setUp()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java	 (2ñ
8org.jabref.logic.layout.format.WrapFileLinksTest.empty()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java	 (2ô
;org.jabref.logic.layout.format.WrapFileLinksTest.testNull()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java	 (2™
Lorg.jabref.logic.layout.format.WrapFileLinksTest.noFormatSetNonEmptyString()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java!	 !("2û
@org.jabref.logic.layout.format.WrapFileLinksTest.fileExtension()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java&	 &(2©
Korg.jabref.logic.layout.format.WrapFileLinksTest.fileExtensionNoExtension()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java,	 ,(!2†
Borg.jabref.logic.layout.format.WrapFileLinksTest.plainTextString()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java2	 2(2ú
>org.jabref.logic.layout.format.WrapFileLinksTest.description()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java8	 8(2©
Korg.jabref.logic.layout.format.WrapFileLinksTest.descriptionNoDescription()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java>	 >(!2ï
7org.jabref.logic.layout.format.WrapFileLinksTest.type()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaD	 D(2õ
=org.jabref.logic.layout.format.WrapFileLinksTest.typeNoType()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaJ	 J(2ô
;org.jabref.logic.layout.format.WrapFileLinksTest.iterator()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaP	 P(2°
Corg.jabref.logic.layout.format.WrapFileLinksTest.iteratorTwoItems()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaV	 V(2û
@org.jabref.logic.layout.format.WrapFileLinksTest.endingBracket()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java\	 \(2ï
7org.jabref.logic.layout.format.WrapFileLinksTest.path()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javab	 b(2´
Morg.jabref.logic.layout.format.WrapFileLinksTest.pathFallBackToGeneratedDir()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaj	 j(#2≤
Torg.jabref.logic.layout.format.WrapFileLinksTest.pathReturnsRelativePathIfNotFound()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javar	 r(*2ù
?org.jabref.logic.layout.format.WrapFileLinksTest.relativePath()DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javay	 y(2§
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35DECLARATIONM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java (#Ò
8org.jabref.logic.layout.format.WrapFileLinksTest.setUp()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java	 ("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2x
!java.util.Collections.emptyList()CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java2 (;2«
porg.jabref.logic.layout.format.WrapFileLinks.WrapFileLinks(java.util.List<java.nio.file.Path>, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java (%2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java (2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java (∆
8org.jabref.logic.layout.format.WrapFileLinksTest.empty()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java	 ("
isFinalfalse"•
declarationStringè<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">empty</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*empty2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java# ()2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java ("2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java (œ
;org.jabref.logic.layout.format.WrapFileLinksTest.testNull()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java	 ("
isFinalfalse"®
declarationStringí<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">testNull</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*testNull2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java# ()2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java ("2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java (Ç
Lorg.jabref.logic.layout.format.WrapFileLinksTest.noFormatSetNonEmptyString()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java!	 !(""
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">noFormatSetNonEmptyString</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*noFormatSetNonEmptyString2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java"A "(G2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java"7 "(@2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java! !(¢	
@org.jabref.logic.layout.format.WrapFileLinksTest.fileExtension()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java&	 &("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fileExtension</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*fileExtension2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java' '(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java(& ((,2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java' '(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java( ((%2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java& &(√	
Korg.jabref.logic.layout.format.WrapFileLinksTest.fileExtensionNoExtension()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java,	 ,(!"
isFinalfalse"∏
declarationString¢<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fileExtensionNoExtension</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*fileExtensionNoExtension2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java- -(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java.# .()2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java- -(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java. .("2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java, ,(®	
Borg.jabref.logic.layout.format.WrapFileLinksTest.plainTextString()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java2	 2("
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">plainTextString</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*plainTextString2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java3 3(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java4$ 4(*2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java3 3(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java4 4(#2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java2 2(ú	
>org.jabref.logic.layout.format.WrapFileLinksTest.description()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java8	 8("
isFinalfalse"´
declarationStringï<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">description</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*description2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java9 9(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java:, :(22ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java9 9(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java:" :(+2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java8 8(√	
Korg.jabref.logic.layout.format.WrapFileLinksTest.descriptionNoDescription()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java>	 >(!"
isFinalfalse"∏
declarationString¢<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">descriptionNoDescription</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*descriptionNoDescription2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java? ?(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java@# @()2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java? ?(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java@ @("2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java> >(á	
7org.jabref.logic.layout.format.WrapFileLinksTest.type()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaD	 D("
isFinalfalse"§
declarationStringé<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">type</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*type2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaE E(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaF& F(,2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaE E(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaF F(%2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaD D(ô	
=org.jabref.logic.layout.format.WrapFileLinksTest.typeNoType()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaJ	 J("
isFinalfalse"™
declarationStringî<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">typeNoType</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*
typeNoType2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaK K(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaL# L()2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaK K(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaL L("2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaJ J(ì	
;org.jabref.logic.layout.format.WrapFileLinksTest.iterator()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaP	 P("
isFinalfalse"®
declarationStringí<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">iterator</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*iterator2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaQ Q(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaR$ R(*2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaQ Q(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaR R(#2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaP P(´	
Corg.jabref.logic.layout.format.WrapFileLinksTest.iteratorTwoItems()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaV	 V("
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">iteratorTwoItems</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*iteratorTwoItems2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaW W(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaX) X(/2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaW W(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaX X((2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaV V(¢	
@org.jabref.logic.layout.format.WrapFileLinksTest.endingBracket()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java\	 \("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">endingBracket</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*endingBracket2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java] ](2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java^. ^(42ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java] ](2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java^$ ^(-2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java\ \(…
7org.jabref.logic.layout.format.WrapFileLinksTest.path()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javab	 b("
isFinalfalse"Û
declarationString›<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">path</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*path2}
&java.util.Collections.singletonList(T)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javac2 c(?2ì
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javacE c(G2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javad d(2v
java.io.File.getCanonicalPath()CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaeG e(W2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaf f( 2«
porg.jabref.logic.layout.format.WrapFileLinks.WrapFileLinks(java.util.List<java.nio.file.Path>, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javac c(%2z
#java.io.File.File(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javae e(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javac c(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javad d(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaf f(2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javab b(
Morg.jabref.logic.layout.format.WrapFileLinksTest.pathFallBackToGeneratedDir()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaj	 j(#"
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">pathFallBackToGeneratedDir</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*pathFallBackToGeneratedDir2x
!java.util.Collections.emptyList()CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javak2 k(;2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javal l(2v
java.io.File.getCanonicalPath()CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javamG m(W2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javan n( 2«
porg.jabref.logic.layout.format.WrapFileLinks.WrapFileLinks(java.util.List<java.nio.file.Path>, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javak k(%2z
#java.io.File.File(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javam m(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javak k(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javal l(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javan n(2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaj j(›
Torg.jabref.logic.layout.format.WrapFileLinksTest.pathReturnsRelativePathIfNotFound()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javar	 r(*"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">pathReturnsRelativePathIfNotFound</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!pathReturnsRelativePathIfNotFound2}
&java.util.Collections.singletonList(T)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javas2 s(?2ì
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javasE s(G2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javat t(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javau+ u(12«
porg.jabref.logic.layout.format.WrapFileLinks.WrapFileLinks(java.util.List<java.nio.file.Path>, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javas s(%2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javas s(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javat t(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javau! u(*2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javar r(ü	
?org.jabref.logic.layout.format.WrapFileLinksTest.relativePath()METHODM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javay	 y("
isFinalfalse"¨
declarationStringñ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">relativePath</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*relativePath2°
Jorg.jabref.logic.layout.format.WrapFileLinks.setArgument(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaz z(2ú
Eorg.jabref.logic.layout.format.WrapFileLinks.format(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java{+ {(12ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javaz z(2ù
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35CALLM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java{! {(*2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.javay y(ˆ
Forg.jabref.logic.layout.format.WrapFileLinksTest?formatter@15.26:15.35VARIABLEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java (#"
isFinalfalse"
typeWrapFileLinks"s
declarationString^<mark class="modifier">private </mark>WrapFileLinks <mark class="class-field">formatter</mark>"
isStaticfalse"
accessprivate*	formatter2É
,org.jabref.logic.layout.format.WrapFileLinksTYPEM
Csrc\test\java\org\jabref\logic\layout\format\WrapFileLinksTest.java (