
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java® 
*org.jabref.logic.layout.format.AuthorsTestCLASSG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java
 
(")
packageorg.jabref.logic.layout.format"
isFinalfalse"
inner classfalse"

isAbstractfalse"i
declarationStringT<mark class="modifier">public </mark><mark class="modifier">class </mark>AuthorsTest"
accesspublic*AuthorsTest2í
:org.jabref.logic.layout.format.AuthorsTest.standardUsage()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java (2ï
=org.jabref.logic.layout.format.AuthorsTest.standardUsageOne()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java ( 2ï
=org.jabref.logic.layout.format.AuthorsTest.standardUsageTwo()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java ( 2ó
?org.jabref.logic.layout.format.AuthorsTest.standardUsageThree()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java! !("2ñ
>org.jabref.logic.layout.format.AuthorsTest.standardUsageFour()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java( ((!2ñ
>org.jabref.logic.layout.format.AuthorsTest.standardUsageFive()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java/ /(!2ï
=org.jabref.logic.layout.format.AuthorsTest.standardUsageSix()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java6 6( 2ê
8org.jabref.logic.layout.format.AuthorsTest.specialEtAl()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java= =(2ñ
>org.jabref.logic.layout.format.AuthorsTest.standardUsageNull()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaD D(!2ì
;org.jabref.logic.layout.format.AuthorsTest.standardOxford()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaI I(2õ
Corg.jabref.logic.layout.format.AuthorsTest.standardOxfordFullName()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaP P(&2ö
Borg.jabref.logic.layout.format.AuthorsTest.standardCommaFullName()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaW W(%2ò
@org.jabref.logic.layout.format.AuthorsTest.standardAmpFullName()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java^ ^(#2ç
5org.jabref.logic.layout.format.AuthorsTest.lastName()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javae e(2í
:org.jabref.logic.layout.format.AuthorsTest.middleInitial()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javal l(2ç
5org.jabref.logic.layout.format.AuthorsTest.noPeriod()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javas s(2â
1org.jabref.logic.layout.format.AuthorsTest.etAl()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaz z(2õ
Aorg.jabref.logic.layout.format.AuthorsTest.etAlNotEnoughAuthors()DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaÅ Å($2ê
6org.jabref.logic.layout.format.AuthorsTest.emptyEtAl()DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaà à(2¥
Zorg.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaî î(2≥
Yorg.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java£ £(2≥
Yorg.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∞ ∞(2π
_org.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∆ ∆( 2•
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java! (7ø
:org.jabref.logic.layout.format.AuthorsTest.standardUsage()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java ("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardUsage</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardUsage2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java' (-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java (&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java (á	
=org.jabref.logic.layout.format.AuthorsTest.standardUsageOne()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java ( "
isFinalfalse"∂
declarationString†<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardUsageOne</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardUsageOne2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java (*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaQ (W2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java (2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java: (P2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java (á	
=org.jabref.logic.layout.format.AuthorsTest.standardUsageTwo()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java ( "
isFinalfalse"∂
declarationString†<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardUsageTwo</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardUsageTwo2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java (*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaI (O2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java (2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java2 (H2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java (ç	
?org.jabref.logic.layout.format.AuthorsTest.standardUsageThree()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java! !(""
isFinalfalse"∏
declarationString¢<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardUsageThree</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardUsageThree2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java" "(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java$' $(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java" "(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java$ $(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java! !(ä	
>org.jabref.logic.layout.format.AuthorsTest.standardUsageFour()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java( ((!"
isFinalfalse"∑
declarationString°<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardUsageFour</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardUsageFour2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java) )(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java+' +(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java) )(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java+ +(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java( ((ä	
>org.jabref.logic.layout.format.AuthorsTest.standardUsageFive()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java/ /(!"
isFinalfalse"∑
declarationString°<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardUsageFive</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardUsageFive2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java0 0(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java2' 2(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java0 0(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java2 2(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java/ /(á	
=org.jabref.logic.layout.format.AuthorsTest.standardUsageSix()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java6 6( "
isFinalfalse"∂
declarationString†<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardUsageSix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardUsageSix2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java7 7(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java9' 9(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java7 7(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java9 9(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java6 6(¯
8org.jabref.logic.layout.format.AuthorsTest.specialEtAl()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java= =("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">specialEtAl</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*specialEtAl2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java> >(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java@' @(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java> >(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java@ @(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java= =(À
>org.jabref.logic.layout.format.AuthorsTest.standardUsageNull()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaD D(!"
isFinalfalse"∑
declarationString°<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardUsageNull</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardUsageNull2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaE0 E(62û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaE E(/2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaD D(Å	
;org.jabref.logic.layout.format.AuthorsTest.standardOxford()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaI I("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardOxford</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardOxford2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaJ J(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaL' L(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaJ J(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaL L(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaI I(ô	
Corg.jabref.logic.layout.format.AuthorsTest.standardOxfordFullName()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaP P(&"
isFinalfalse"º
declarationString¶<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardOxfordFullName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardOxfordFullName2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaQ Q(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaS' S(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaQ Q(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaS S(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaP P(ñ	
Borg.jabref.logic.layout.format.AuthorsTest.standardCommaFullName()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaW W(%"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardCommaFullName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardCommaFullName2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaX X(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaZ' Z(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaX X(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaZ Z(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaW W(ê	
@org.jabref.logic.layout.format.AuthorsTest.standardAmpFullName()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java^ ^(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">standardAmpFullName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*standardAmpFullName2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java_ _(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaa' a(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java_ _(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaa a(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java^ ^(Ô
5org.jabref.logic.layout.format.AuthorsTest.lastName()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javae e("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">lastName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*lastName2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaf f(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javah' h(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaf f(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javah h(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javae e(˛
:org.jabref.logic.layout.format.AuthorsTest.middleInitial()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javal l("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">middleInitial</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*middleInitial2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javam m(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javao' o(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javam m(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javao o(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javal l(Ô
5org.jabref.logic.layout.format.AuthorsTest.noPeriod()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javas s("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">noPeriod</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*noPeriod2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javat t(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javav' v(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javat t(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javav v(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javas s(„
1org.jabref.logic.layout.format.AuthorsTest.etAl()METHODG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaz z("
isFinalfalse"™
declarationStringî<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">etAl</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*etAl2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java{ {(*2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java}' }(-2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java{ {(2û
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java} }(&2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaz z(ü	
Aorg.jabref.logic.layout.format.AuthorsTest.etAlNotEnoughAuthors()METHODI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaÅ Å($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">etAlNotEnoughAuthors</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*etAlNotEnoughAuthors2ù
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaÇ Ç(*2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaÑ' Ñ(-2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaÇ Ç(2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaÑ Ñ(&2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaÅ Å(˛
6org.jabref.logic.layout.format.AuthorsTest.emptyEtAl()METHODI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaà à("
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">emptyEtAl</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*	emptyEtAl2ù
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaâ â(*2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaã' ã(-2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaâ â(2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaã ã(&2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaà à(ƒ
Zorg.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)METHODI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaî î("
isFinalfalse"¬
declarationString¨ = "arg={0}<mark class="modifier"><mark class="modifier">,</mark></mark> formattedStr={1}") <br><mark class="annotation">@CsvSource({</mark> // FirstFirst
"FirstFirst<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // LastFirst
"LastFirst<mark class="modifier"><mark class="modifier">,</mark></mark> 'Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> B. C.<mark class="modifier"><mark class="modifier">,</mark></mark> Manson<mark class="modifier"><mark class="modifier">,</mark></mark> C.<mark class="modifier"><mark class="modifier">,</mark></mark> Jumper<mark class="modifier"><mark class="modifier">,</mark></mark> J. and Chuckles<mark class="modifier"><mark class="modifier">,</mark></mark> C.'"<mark class="modifier"><mark class="modifier">,</mark></mark> // LastFirstFirstFirst
"LastFirstFirstFirst<mark class="modifier"><mark class="modifier">,</mark></mark> 'Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> B. C.<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'" }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">authorOrder</mark>(String arg<mark class="modifier"><mark class="modifier">,</mark></mark> String expectedResult)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*authorOrder2ù
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaï ï(*2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javañ5 ñ(;2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaï ï(2±
^org.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)!argCALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaï+ ï(.2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javañ ñ(42º
iorg.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)!expectedResultCALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaó ó(#2»
uorg.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)?formattedStr@150.15:150.27CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaó% ó(12∂
^org.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)!arg	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaî# î(&2¡
iorg.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)!expectedResult	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaî/ î(=2œ
uorg.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)?formattedStr@150.15:150.27DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javañ ñ(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaî î(Ú
uorg.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)?formattedStr@150.15:150.27VARIABLEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javañ ñ("
typeString"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>String <mark class="class-field">formattedStr</mark> = authorsLayoutFormatter.format("Bob Croydon Bruce and Charles Manson and Jolly Jumper and Chuck Chuckles")*formattedStr2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javañ ñ(2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javañ5 ñ(;2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javañ ñ(4„
^org.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)!arg	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaî# î(&"
typeString"
isFinalfalse"
declarationString
String arg*arg2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaî î("Ñ
iorg.jabref.logic.layout.format.AuthorsTest.authorOrder(java.lang.String, java.lang.String)!expectedResult	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaî/ î(="
typeString"
isFinalfalse"*
declarationStringString expectedResult*expectedResult2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.javaî( î(.“"
Yorg.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)METHODI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java£ £("
isFinalfalse"ÿ
declarationString¬ = "arg={0}<mark class="modifier"><mark class="modifier">,</mark></mark> formattedStr={1}") <br><mark class="annotation">@CsvSource({</mark> // FullName
"FullName<mark class="modifier"><mark class="modifier">,</mark></mark> 'Bob Croydon Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> Charles Manson<mark class="modifier"><mark class="modifier">,</mark></mark> Jolly Jumper and Chuck Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Initials
"Initials<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // FirstInitial
"FirstInitial<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // MiddleInitial
"MiddleInitial<mark class="modifier"><mark class="modifier">,</mark></mark> 'Bob C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> Charles Manson<mark class="modifier"><mark class="modifier">,</mark></mark> Jolly Jumper and Chuck Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // LastName
"LastName<mark class="modifier"><mark class="modifier">,</mark></mark> 'Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> Manson<mark class="modifier"><mark class="modifier">,</mark></mark> Jumper and Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // InitialsNoSpace
"InitialsNoSpace<mark class="modifier"><mark class="modifier">,</mark></mark> 'B.C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'" }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">authorABRV</mark>(String arg<mark class="modifier"><mark class="modifier">,</mark></mark> String expectedResult)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*
authorABRV2ù
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java§ §(*2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java•5 •(;2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java§ §(2∞
]org.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)!argCALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java§+ §(.2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java• •(42ª
horg.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)!expectedResultCALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java¶ ¶(#2«
torg.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)?formattedStr@165.15:165.27CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java¶% ¶(12µ
]org.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)!arg	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java£" £(%2¿
horg.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)!expectedResult	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java£. £(<2Œ
torg.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)?formattedStr@165.15:165.27DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java• •(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java£ £(Ò
torg.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)?formattedStr@165.15:165.27VARIABLEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java• •("
typeString"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>String <mark class="class-field">formattedStr</mark> = authorsLayoutFormatter.format("Bob Croydon Bruce and Charles Manson and Jolly Jumper and Chuck Chuckles")*formattedStr2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java• •(2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java•5 •(;2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java• •(4‚
]org.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)!arg	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java£" £(%"
typeString"
isFinalfalse"
declarationString
String arg*arg2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java£ £(!É
horg.jabref.logic.layout.format.AuthorsTest.authorABRV(java.lang.String, java.lang.String)!expectedResult	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java£. £(<"
typeString"
isFinalfalse"*
declarationStringString expectedResult*expectedResult2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java£' £(-ú
Yorg.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)METHODI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∞ ∞("
isFinalfalse"¢
declarationStringå = "arg={0}<mark class="modifier"><mark class="modifier">,</mark></mark> formattedStr={1}") <br><mark class="annotation">@CsvSource({</mark> // FullPunc
"FullPunc<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // NoPunc
"NoPunc<mark class="modifier"><mark class="modifier">,</mark></mark> 'B C Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J Jumper and C Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // NoComma
"NoComma<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // NoPeriod
"NoPeriod<mark class="modifier"><mark class="modifier">,</mark></mark> 'B C Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J Jumper and C Chuckles'" }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">authorPUNC</mark>(String arg<mark class="modifier"><mark class="modifier">,</mark></mark> String expectedResult)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*
authorPUNC2ù
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java± ±(*2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java≤5 ≤(;2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java± ±(2∞
]org.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)!argCALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java±+ ±(.2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java≤ ≤(42ª
horg.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)!expectedResultCALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java≥ ≥(#2«
torg.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)?formattedStr@178.15:178.27CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java≥% ≥(12µ
]org.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)!arg	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∞" ∞(%2¿
horg.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)!expectedResult	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∞. ∞(<2Œ
torg.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)?formattedStr@178.15:178.27DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java≤ ≤(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∞ ∞(Ò
torg.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)?formattedStr@178.15:178.27VARIABLEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java≤ ≤("
typeString"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>String <mark class="class-field">formattedStr</mark> = authorsLayoutFormatter.format("Bob Croydon Bruce and Charles Manson and Jolly Jumper and Chuck Chuckles")*formattedStr2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java≤ ≤(2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java≤5 ≤(;2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java≤ ≤(4‚
]org.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)!arg	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∞" ∞(%"
typeString"
isFinalfalse"
declarationString
String arg*arg2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∞ ∞(!É
horg.jabref.logic.layout.format.AuthorsTest.authorPUNC(java.lang.String, java.lang.String)!expectedResult	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∞. ∞(<"
typeString"
isFinalfalse"*
declarationStringString expectedResult*expectedResult2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∞' ∞(-ê2
_org.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)METHODI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∆ ∆( "
isFinalfalse"Ê 
declarationString–  = "arg={0}<mark class="modifier"><mark class="modifier">,</mark></mark> formattedStr={1}") <br><mark class="annotation">@CsvSource({</mark> // Comma
"Comma<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // And
"And<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce and C. Manson and J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Colon
"Colon<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce: C. Manson: J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Semicolon
"Semicolon<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce; C. Manson; J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Oxford
"Oxford<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper<mark class="modifier"><mark class="modifier">,</mark></mark> and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Amp
"Amp<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper & C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Sep
"Sep<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // LastSep
"LastSep<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Custom Sep
"Sep=|<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce|C. Manson|J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Custom LastSep
"LastSep=|<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper|C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Comma And
"'Comma<mark class="modifier"><mark class="modifier">,</mark></mark> And'<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper and C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Comma Colon
"'Comma<mark class="modifier"><mark class="modifier">,</mark></mark> Colon'<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper: C. Chuckles'"<mark class="modifier"><mark class="modifier">,</mark></mark> // Comma Semicolon
"'Comma<mark class="modifier"><mark class="modifier">,</mark></mark> Semicolon'<mark class="modifier"><mark class="modifier">,</mark></mark> 'B. C. Bruce<mark class="modifier"><mark class="modifier">,</mark></mark> C. Manson<mark class="modifier"><mark class="modifier">,</mark></mark> J. Jumper; C. Chuckles'" }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">authorSEPARATORS</mark>(String arg<mark class="modifier"><mark class="modifier">,</mark></mark> String expectedResult)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*authorSEPARATORS2ù
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java« «(*2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java»5 »(;2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java« «(2∂
corg.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)!argCALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java«+ «(.2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java» »(42¡
norg.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)!expectedResultCALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java… …(#2Õ
zorg.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)?formattedStr@200.15:200.27CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java…% …(12ª
corg.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)!arg	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∆( ∆(+2∆
norg.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)!expectedResult	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∆4 ∆(B2‘
zorg.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)?formattedStr@200.15:200.27DECLARATIONI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java» »(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∆ ∆(˜
zorg.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)?formattedStr@200.15:200.27VARIABLEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java» »("
typeString"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>String <mark class="class-field">formattedStr</mark> = authorsLayoutFormatter.format("Bob Croydon Bruce and Charles Manson and Jolly Jumper and Chuck Chuckles")*formattedStr2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java» »(2ì
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java»5 »(;2†
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55CALLI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java» »(4Ë
corg.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)!arg	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∆( ∆(+"
typeString"
isFinalfalse"
declarationString
String arg*arg2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∆! ∆('â
norg.jabref.logic.layout.format.AuthorsTest.authorSEPARATORS(java.lang.String, java.lang.String)!expectedResult	PARAMETERI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∆4 ∆(B"
typeString"
isFinalfalse"*
declarationStringString expectedResult*expectedResult2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java∆- ∆(3Ø
Morg.jabref.logic.layout.format.AuthorsTest?authorsLayoutFormatter@12.33:12.55VARIABLEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java! (7"
isFinalfalse"
typeParamLayoutFormatter"ô
declarationStringÉ<mark class="modifier">private </mark>ParamLayoutFormatter <mark class="class-field">authorsLayoutFormatter</mark> = new Authors();"
isStaticfalse"
accessprivate*authorsLayoutFormatter2}
,org.jabref.logic.layout.ParamLayoutFormatterTYPEG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java ( 2Å
0org.jabref.logic.layout.format.Authors.Authors()CALLG
=src\test\java\org\jabref\logic\layout\format\AuthorsTest.java> (E