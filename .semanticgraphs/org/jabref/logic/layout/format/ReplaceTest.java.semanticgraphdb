
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.javaÈ	
*org.jabref.logic.layout.format.ReplaceTestCLASSG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java	 	(")
packageorg.jabref.logic.layout.format"
isFinalfalse"
inner classfalse"

isAbstractfalse"i
declarationStringT<mark class="modifier">public </mark><mark class="modifier">class </mark>ReplaceTest"
accesspublic*ReplaceTest2è
7org.jabref.logic.layout.format.ReplaceTest.simpleText()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2î
<org.jabref.logic.layout.format.ReplaceTest.simpleTextNoHit()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2è
7org.jabref.logic.layout.format.ReplaceTest.formatNull()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2ê
8org.jabref.logic.layout.format.ReplaceTest.formatEmpty()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java! !(2í
:org.jabref.logic.layout.format.ReplaceTest.noArgumentSet()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java( ((2ï
=org.jabref.logic.layout.format.ReplaceTest.noProperArgument()DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java. .( â
7org.jabref.logic.layout.format.ReplaceTest.simpleText()METHODG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java ("
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">simpleText</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*
simpleText2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java
 (2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java$ (*2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java% (,2ñ
Eorg.jabref.logic.layout.format.ReplaceTest.simpleText()?a@13.29:13.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (	2ñ
Eorg.jabref.logic.layout.format.ReplaceTest.simpleText()?a@13.29:13.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java" (#2ù
Eorg.jabref.logic.layout.format.ReplaceTest.simpleText()?a@13.29:13.30DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (Õ
Eorg.jabref.logic.layout.format.ReplaceTest.simpleText()?a@13.29:13.30VARIABLEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java ("
typeParamLayoutFormatter"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>ParamLayoutFormatter <mark class="class-field">a</mark> = new Replace()*a2}
,org.jabref.logic.layout.ParamLayoutFormatterTYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java% (,ß
<org.jabref.logic.layout.format.ReplaceTest.simpleTextNoHit()METHODG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java ("
isFinalfalse"µ
declarationStringü<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">simpleTextNoHit</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*simpleTextNoHit2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java
 (2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java' (-2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java% (,2õ
Jorg.jabref.logic.layout.format.ReplaceTest.simpleTextNoHit()?a@20.29:20.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (	2õ
Jorg.jabref.logic.layout.format.ReplaceTest.simpleTextNoHit()?a@20.29:20.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java% (&2¢
Jorg.jabref.logic.layout.format.ReplaceTest.simpleTextNoHit()?a@20.29:20.30DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (“
Jorg.jabref.logic.layout.format.ReplaceTest.simpleTextNoHit()?a@20.29:20.30VARIABLEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java ("
typeParamLayoutFormatter"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>ParamLayoutFormatter <mark class="class-field">a</mark> = new Replace()*a2}
,org.jabref.logic.layout.ParamLayoutFormatterTYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java% (,â
7org.jabref.logic.layout.format.ReplaceTest.formatNull()METHODG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java ("
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">formatNull</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*
formatNull2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java
 (2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java% (,2ñ
Eorg.jabref.logic.layout.format.ReplaceTest.formatNull()?a@27.29:27.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (	2ñ
Eorg.jabref.logic.layout.format.ReplaceTest.formatNull()?a@27.29:27.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2ù
Eorg.jabref.logic.layout.format.ReplaceTest.formatNull()?a@27.29:27.30DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (Õ
Eorg.jabref.logic.layout.format.ReplaceTest.formatNull()?a@27.29:27.30VARIABLEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java ("
typeParamLayoutFormatter"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>ParamLayoutFormatter <mark class="class-field">a</mark> = new Replace()*a2}
,org.jabref.logic.layout.ParamLayoutFormatterTYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java (2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java% (,è
8org.jabref.logic.layout.format.ReplaceTest.formatEmpty()METHODG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java! !("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">formatEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*formatEmpty2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java#
 #(2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java$ $(!2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java"% "(,2ó
Forg.jabref.logic.layout.format.ReplaceTest.formatEmpty()?a@34.29:34.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java# #(	2ó
Forg.jabref.logic.layout.format.ReplaceTest.formatEmpty()?a@34.29:34.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java$ $(2û
Forg.jabref.logic.layout.format.ReplaceTest.formatEmpty()?a@34.29:34.30DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java" "(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java! !(Œ
Forg.jabref.logic.layout.format.ReplaceTest.formatEmpty()?a@34.29:34.30VARIABLEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java" "("
typeParamLayoutFormatter"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>ParamLayoutFormatter <mark class="class-field">a</mark> = new Replace()*a2}
,org.jabref.logic.layout.ParamLayoutFormatterTYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java" "(2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java"% "(,·
:org.jabref.logic.layout.format.ReplaceTest.noArgumentSet()METHODG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java( (("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">noArgumentSet</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*noArgumentSet2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java*5 *(;2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java)% )(,2ô
Horg.jabref.logic.layout.format.ReplaceTest.noArgumentSet()?a@41.29:41.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java*3 *(42†
Horg.jabref.logic.layout.format.ReplaceTest.noArgumentSet()?a@41.29:41.30DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java) )(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java( ((–
Horg.jabref.logic.layout.format.ReplaceTest.noArgumentSet()?a@41.29:41.30VARIABLEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java) )("
typeParamLayoutFormatter"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>ParamLayoutFormatter <mark class="class-field">a</mark> = new Replace()*a2}
,org.jabref.logic.layout.ParamLayoutFormatterTYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java) )(2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java)% )(,≠
=org.jabref.logic.layout.format.ReplaceTest.noProperArgument()METHODG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java. .( "
isFinalfalse"∂
declarationString†<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">noProperArgument</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*noProperArgument2õ
Jorg.jabref.logic.layout.ParamLayoutFormatter.setArgument(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java0
 0(2ë
@org.jabref.logic.layout.LayoutFormatter.format(java.lang.String)CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java15 1(;2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java/% /(,2ú
Korg.jabref.logic.layout.format.ReplaceTest.noProperArgument()?a@47.29:47.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java0 0(	2ú
Korg.jabref.logic.layout.format.ReplaceTest.noProperArgument()?a@47.29:47.30CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java13 1(42£
Korg.jabref.logic.layout.format.ReplaceTest.noProperArgument()?a@47.29:47.30DECLARATIONG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java/ /(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java. .(”
Korg.jabref.logic.layout.format.ReplaceTest.noProperArgument()?a@47.29:47.30VARIABLEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java/ /("
typeParamLayoutFormatter"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>ParamLayoutFormatter <mark class="class-field">a</mark> = new Replace()*a2}
,org.jabref.logic.layout.ParamLayoutFormatterTYPEG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java/ /(2Å
0org.jabref.logic.layout.format.Replace.Replace()CALLG
=src\test\java\org\jabref\logic\layout\format\ReplaceTest.java/% /(,