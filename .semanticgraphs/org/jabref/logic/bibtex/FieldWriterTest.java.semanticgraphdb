
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaö
'org.jabref.logic.bibtex.FieldWriterTestCLASSD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java (""
packageorg.jabref.logic.bibtex"
isFinalfalse"
inner classfalse"

isAbstractfalse"g
declarationStringR<mark class="modifier"> </mark><mark class="modifier">class </mark>FieldWriterTest"
accesspackage_private*FieldWriterTest2ã
6org.jabref.logic.bibtex.FieldWriterTest.getMarkdowns()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java$ (02Ñ
/org.jabref.logic.bibtex.FieldWriterTest.setUp()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java5	 5(2ß
Rorg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java;	 ;(12ù
Horg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaD	 D('2¶
Qorg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaN	 N(02õ
Forg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaX	 X(%2•
Porg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javab	 b(/2ñ
Aorg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracing()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javan	 n( 2ß
Rorg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracingWithEscapedBraces()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javau	 u(12î
?org.jabref.logic.bibtex.FieldWriterTest.tolerateBalancedBrace()DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java|	 |(2ô
Borg.jabref.logic.bibtex.FieldWriterTest.tolerateEscapeCharacters()DECLARATIONF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÉ	 É(!2¨
Uorg.jabref.logic.bibtex.FieldWriterTest.hashEnclosedWordsGetRealStringsInMonthField()DECLARATIONF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaä	 ä(42¶
Oorg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)DECLARATIONF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaë	 ë(2è
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java (ô
6org.jabref.logic.bibtex.FieldWriterTest.getMarkdowns()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java$ (0"
isFinalfalse"¢
declarationStringå<mark class="modifier">public </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">getMarkdowns</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeStream<Arguments>*getMarkdowns2l
java.util.stream.StreamRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java (2â
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java ("π
/org.jabref.logic.bibtex.FieldWriterTest.setUp()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java5	 5("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2b
java.util.List.of(E)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java6L 6(N2o
!java.util.Collections.emptyList()CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java6q 6(z2˘
™org.jabref.logic.bibtex.FieldPreferences.FieldPreferences(boolean, java.util.List<org.jabref.model.entry.field.Field>, java.util.List<org.jabref.model.entry.field.Field>)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java60 6(@2ß
Yorg.jabref.logic.bibtex.FieldWriter.FieldWriter(org.jabref.logic.bibtex.FieldPreferences)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java7 7( 2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java7 7(2ö
Lorg.jabref.logic.bibtex.FieldWriterTest.setUp()?fieldPreferences@54.25:54.41CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java7! 7(12°
Lorg.jabref.logic.bibtex.FieldWriterTest.setUp()?fieldPreferences@54.25:54.41DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java6 6()2Y
voidRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java5 5(ë
Lorg.jabref.logic.bibtex.FieldWriterTest.setUp()?fieldPreferences@54.25:54.41VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java6 6()"
typeFieldPreferences"
isFinalfalse"È
declarationString”<mark class="modifier"> </mark>FieldPreferences <mark class="class-field">fieldPreferences</mark> = new FieldPreferences(true, List.of(StandardField.MONTH)<mark class="modifier">,</mark> Collections.emptyList())*fieldPreferences2v
(org.jabref.logic.bibtex.FieldPreferencesTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java6 6(2b
java.util.List.of(E)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java6L 6(N2o
!java.util.Collections.emptyList()CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java6q 6(z2˘
™org.jabref.logic.bibtex.FieldPreferences.FieldPreferences(boolean, java.util.List<org.jabref.model.entry.field.Field>, java.util.List<org.jabref.model.entry.field.Field>)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java60 6(@Í
Rorg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java;	 ;(1"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">noNormalizationOfNewlinesInAbstractField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*(noNormalizationOfNewlinesInAbstractField2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java= =($2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java= =(2±
corg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?text@60.15:60.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java== =(A2±
corg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?text@60.15:60.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java?  ?($2µ
gorg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?expected@63.15:63.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java@ @(2≥
eorg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?result@61.15:61.21CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java@ @(%2∏
corg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?text@60.15:60.19DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java< <(2∫
eorg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?result@61.15:61.21DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java= =(2º
gorg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?expected@63.15:63.23DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java? ?(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java; ;(Ú
corg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?text@60.15:60.19VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java< <("
typeString"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>String <mark class="class-field">text</mark> = "lorem" + OS.NEWLINE + " ipsum lorem ipsum\nlorem ipsum \rlorem ipsum\r\ntest"*text2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java< <(¬
eorg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?result@61.15:61.21VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java= =("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">result</mark> = writer.write(StandardField.ABSTRACT, text)*result2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java= =(2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java= =($2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java= =(2±
corg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?text@60.15:60.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java== =(AÚ
gorg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?expected@63.15:63.23VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java? ?("
typeString"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "{" + text + "}"*expected2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java? ?(2±
corg.jabref.logic.bibtex.FieldWriterTest.noNormalizationOfNewlinesInAbstractField()?text@60.15:60.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java?  ?($Ü
Horg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaD	 D('"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">preserveNewlineInAbstractField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*preserveNewlineInAbstractField2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaG G($2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaG G(2ß
Yorg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?text@69.15:69.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaG= G(A2ß
Yorg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?text@69.15:69.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaH  H($2´
]org.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?expected@72.15:72.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaJ J(2©
[org.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?result@71.15:71.21CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaJ J(%2Æ
Yorg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?text@69.15:69.19DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaE E(2∞
[org.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?result@71.15:71.21DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaG G(2≤
]org.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?expected@72.15:72.23DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaH H(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaD D(‹
Yorg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?text@69.15:69.19VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaE E("
typeString"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>String <mark class="class-field">text</mark> = "lorem ipsum lorem ipsum" + OS.NEWLINE + "lorem ipsum lorem ipsum"*text2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaE E(Æ
[org.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?result@71.15:71.21VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaG G("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">result</mark> = writer.write(StandardField.ABSTRACT, text)*result2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaG G(2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaG G($2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaG G(2ß
Yorg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?text@69.15:69.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaG= G(Aﬁ
]org.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?expected@72.15:72.23VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaH H("
typeString"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "{" + text + "}"*expected2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaH H(2ß
Yorg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInAbstractField()?text@69.15:69.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaH  H($‡
Qorg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaN	 N(0"
isFinalfalse"î
declarationString˛<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">preserveMultipleNewlinesInAbstractField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'preserveMultipleNewlinesInAbstractField2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaQ Q($2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaQ Q(2∞
borg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?text@79.15:79.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaQ= Q(A2∞
borg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?text@79.15:79.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaR  R($2¥
forg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?expected@82.15:82.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaT T(2≤
dorg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?result@81.15:81.21CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaT T(%2∑
borg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?text@79.15:79.19DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaO O(2π
dorg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?result@81.15:81.21DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaQ Q(2ª
forg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?expected@82.15:82.23DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaR R(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaN N(Ú
borg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?text@79.15:79.19VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaO O("
typeString"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>String <mark class="class-field">text</mark> = "lorem ipsum lorem ipsum" + OS.NEWLINE + OS.NEWLINE + "lorem ipsum lorem ipsum"*text2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaO O(¿
dorg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?result@81.15:81.21VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaQ Q("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">result</mark> = writer.write(StandardField.ABSTRACT, text)*result2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaQ Q(2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaQ Q($2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaQ Q(2∞
borg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?text@79.15:79.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaQ= Q(A
forg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?expected@82.15:82.23VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaR R("
typeString"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "{" + text + "}"*expected2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaR R(2∞
borg.jabref.logic.bibtex.FieldWriterTest.preserveMultipleNewlinesInAbstractField()?text@79.15:79.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaR  R($Ú
Forg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaX	 X(%"
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">preserveNewlineInReviewField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*preserveNewlineInReviewField2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java[ [($2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java[ [(2•
Worg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?text@89.15:89.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java[; [(?2•
Worg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?text@89.15:89.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java\  \($2©
[org.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?expected@92.15:92.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java^ ^(2ß
Yorg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?result@91.15:91.21CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java^ ^(%2¨
Worg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?text@89.15:89.19DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaY Y(2Æ
Yorg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?result@91.15:91.21DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java[ [(2∞
[org.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?expected@92.15:92.23DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java\ \(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaX X(⁄
Worg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?text@89.15:89.19VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaY Y("
typeString"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>String <mark class="class-field">text</mark> = "lorem ipsum lorem ipsum" + OS.NEWLINE + "lorem ipsum lorem ipsum"*text2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaY Y(®
Yorg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?result@91.15:91.21VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java[ [("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">result</mark> = writer.write(StandardField.REVIEW, text)*result2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java[ [(2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java[ [($2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java[ [(2•
Worg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?text@89.15:89.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java[; [(?⁄
[org.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?expected@92.15:92.23VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java\ \("
typeString"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "{" + text + "}"*expected2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java\ \(2•
Worg.jabref.logic.bibtex.FieldWriterTest.preserveNewlineInReviewField()?text@89.15:89.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java\  \($·
Porg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javab	 b(/"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">removeWhitespaceFromNonMultiLineFields</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*&removeWhitespaceFromNonMultiLineFields2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaf f(#2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javag g(!2ñ
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javag& g(22à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaf f(2≥
eorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?original@99.15:99.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaf9 f(A2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javag g(2≥
eorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?original@99.15:99.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javagE g(M2µ
gorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?expected@100.15:100.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javai i(2≤
dorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?title@102.15:102.20CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javai i($2µ
gorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?expected@100.15:100.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaj j(2∞
borg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?any@103.15:103.18CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaj j("2∫
eorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?original@99.15:99.23DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javac c(2º
gorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?expected@100.15:100.23DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javad d(2π
dorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?title@102.15:102.20DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaf f(2∑
borg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?any@103.15:103.18DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javag g(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javab b(Ô
eorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?original@99.15:99.23VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javac c("
typeString"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>String <mark class="class-field">original</mark> = "I\nshould\nnot\ninclude\nadditional\nwhitespaces  \nor\n\ttabs."*original2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javac c(Ë
gorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?expected@100.15:100.23VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javad d("
typeString"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "{I should not include additional whitespaces or tabs.}"*expected2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javad d(¬
dorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?title@102.15:102.20VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaf f("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">title</mark> = writer.write(StandardField.TITLE, original)*title2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaf f(2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaf f(#2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaf f(2≥
eorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?original@99.15:99.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaf9 f(AÇ	
borg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?any@103.15:103.18VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javag g("
typeString"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>String <mark class="class-field">any</mark> = writer.write(new UnknownField("anyotherfield")<mark class="modifier">,</mark> original)*any2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javag g(2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javag g(!2ñ
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javag& g(22à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javag g(2≥
eorg.jabref.logic.bibtex.FieldWriterTest.removeWhitespaceFromNonMultiLineFields()?original@99.15:99.23CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javagE g(M†
Aorg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracing()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javan	 n( "
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">reportUnbalancedBracing</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*reportUnbalancedBracing2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaqD q(I2ñ
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaqN q(Z2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaq= q(C2®
Zorg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracing()?unbalanced@111.15:111.25CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaqh q(r2Ø
Zorg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracing()?unbalanced@111.15:111.25DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javao o(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javan n(®
Zorg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracing()?unbalanced@111.15:111.25VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javao o("
typeString"
isFinalfalse"l
declarationStringW<mark class="modifier"> </mark>String <mark class="class-field">unbalanced</mark> = "{"*
unbalanced2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javao o(ı
Rorg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracingWithEscapedBraces()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javau	 u(1"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">reportUnbalancedBracingWithEscapedBraces</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*(reportUnbalancedBracingWithEscapedBraces2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaxD x(I2ñ
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaxN x(Z2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javax= x(C2π
korg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracingWithEscapedBraces()?unbalanced@118.15:118.25CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaxh x(r2¿
korg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracingWithEscapedBraces()?unbalanced@118.15:118.25DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javav v(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javau u(º
korg.jabref.logic.bibtex.FieldWriterTest.reportUnbalancedBracingWithEscapedBraces()?unbalanced@118.15:118.25VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javav v("
typeString"
isFinalfalse"o
declarationStringZ<mark class="modifier"> </mark>String <mark class="class-field">unbalanced</mark> = "{\\}"*
unbalanced2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javav v(≠
?org.jabref.logic.bibtex.FieldWriterTest.tolerateBalancedBrace()METHODD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java|	 |("
isFinalfalse"Ç
declarationStringÏ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">tolerateBalancedBrace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*tolerateBalancedBrace2≠
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java. (32ñ
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java8 (D2†
Rorg.jabref.logic.bibtex.FieldWriterTest.tolerateBalancedBrace()?text@125.15:125.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java (2à
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java' (-2†
Rorg.jabref.logic.bibtex.FieldWriterTest.tolerateBalancedBrace()?text@125.15:125.19CALLD
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaR (V2ß
Rorg.jabref.logic.bibtex.FieldWriterTest.tolerateBalancedBrace()?text@125.15:125.19DECLARATIOND
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java} }(2Y
voidRETURN_TYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java| |(€
Rorg.jabref.logic.bibtex.FieldWriterTest.tolerateBalancedBrace()?text@125.15:125.19VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java} }("
typeString"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark>String <mark class="class-field">text</mark> = "Incorporating evolutionary {Measures into Conservation Prioritization}"*text2^
java.lang.StringTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java} }(œ
Borg.jabref.logic.bibtex.FieldWriterTest.tolerateEscapeCharacters()METHODF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÉ	 É(!"
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">tolerateEscapeCharacters</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*tolerateEscapeCharacters2Ø
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÜ. Ü(32ò
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÜ8 Ü(D2•
Uorg.jabref.logic.bibtex.FieldWriterTest.tolerateEscapeCharacters()?text@132.15:132.19CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÜ Ü(2ä
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÜ' Ü(-2•
Uorg.jabref.logic.bibtex.FieldWriterTest.tolerateEscapeCharacters()?text@132.15:132.19CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÜR Ü(V2¨
Uorg.jabref.logic.bibtex.FieldWriterTest.tolerateEscapeCharacters()?text@132.15:132.19DECLARATIONF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÑ Ñ(2[
voidRETURN_TYPEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÉ É(Á
Uorg.jabref.logic.bibtex.FieldWriterTest.tolerateEscapeCharacters()?text@132.15:132.19VARIABLEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÑ Ñ("
typeString"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>String <mark class="class-field">text</mark> = "Incorporating {\\O}evolutionary {Measures into Conservation Prioritization}"*text2`
java.lang.StringTYPEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaÑ Ñ(Î

Uorg.jabref.logic.bibtex.FieldWriterTest.hashEnclosedWordsGetRealStringsInMonthField()METHODF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaä	 ä(4"
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">hashEnclosedWordsGetRealStringsInMonthField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*+hashEnclosedWordsGetRealStringsInMonthField2Ø
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaå1 å(62ä
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaå* å(02∏
horg.jabref.logic.bibtex.FieldWriterTest.hashEnclosedWordsGetRealStringsInMonthField()?text@139.15:139.19CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaåL å(P2ø
horg.jabref.logic.bibtex.FieldWriterTest.hashEnclosedWordsGetRealStringsInMonthField()?text@139.15:139.19DECLARATIONF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaã ã(2[
voidRETURN_TYPEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaä ä(∫
horg.jabref.logic.bibtex.FieldWriterTest.hashEnclosedWordsGetRealStringsInMonthField()?text@139.15:139.19VARIABLEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaã ã("
typeString"
isFinalfalse"r
declarationString]<mark class="modifier"> </mark>String <mark class="class-field">text</mark> = "#jan# - #feb#"*text2`
java.lang.StringTYPEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaã ã(¨
Oorg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)METHODF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaë	 ë("
isFinalfalse"™
declarationStringî <br><mark class="annotation">@MethodSource("getMarkdowns")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">keepHashSignInComment</mark>(String text)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*keepHashSignInComment2Ø
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaí$ í()2ß
Worg.jabref.model.strings.StringUtil.unifyLineBreaks(java.lang.String, java.lang.String)CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaì; ì(J2ä
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaí í(#2§
Torg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)!textCALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaíA í(E2π
iorg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)?writeResult@146.15:146.26CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaìK ì(V2§
Torg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)!textCALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaî î(2Ã
|org.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)?resultWithLfAsNewLineSeparator@147.15:147.45CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaî' î(E2©
Torg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)!text	PARAMETERF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaë& ë(*2¿
iorg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)?writeResult@146.15:146.26DECLARATIONF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaí í(2”
|org.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)?resultWithLfAsNewLineSeparator@147.15:147.45DECLARATIONF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaì ì(-2[
voidRETURN_TYPEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaë ë( 
iorg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)?writeResult@146.15:146.26VARIABLEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaí í("
typeString"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>String <mark class="class-field">writeResult</mark> = writer.write(StandardField.COMMENT, text)*writeResult2`
java.lang.StringTYPEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaí í(2Ø
_org.jabref.logic.bibtex.FieldWriter.write(org.jabref.model.entry.field.Field, java.lang.String)CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaí$ í()2ä
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaí í(#2§
Torg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)!textCALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaíA í(Eà
|org.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)?resultWithLfAsNewLineSeparator@147.15:147.45VARIABLEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaì ì(-"
typeString"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>String <mark class="class-field">resultWithLfAsNewLineSeparator</mark> = StringUtil.unifyLineBreaks(writeResult, "\n")*resultWithLfAsNewLineSeparator2`
java.lang.StringTYPEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaì ì(2ß
Worg.jabref.model.strings.StringUtil.unifyLineBreaks(java.lang.String, java.lang.String)CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaì; ì(J2π
iorg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)?writeResult@146.15:146.26CALLF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaìK ì(V’
Torg.jabref.logic.bibtex.FieldWriterTest.keepHashSignInComment(java.lang.String)!text	PARAMETERF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaë& ë(*"
typeString"
isFinalfalse" 
declarationStringString text*text2`
java.lang.StringTYPEF
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.javaë ë(%ƒ
:org.jabref.logic.bibtex.FieldWriterTest?writer@22.24:22.30VARIABLED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java ("
isFinalfalse"
typeFieldWriter"n
declarationStringY<mark class="modifier">private </mark>FieldWriter <mark class="class-field">writer</mark>"
isStaticfalse"
accessprivate*writer2q
#org.jabref.logic.bibtex.FieldWriterTYPED
:src\test\java\org\jabref\logic\bibtex\FieldWriterTest.java (