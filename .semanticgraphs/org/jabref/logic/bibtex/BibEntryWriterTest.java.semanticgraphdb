
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java£8
*org.jabref.logic.bibtex.BibEntryWriterTestCLASSG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java( ((""
packageorg.jabref.logic.bibtex"
isFinalfalse"
inner classfalse"

isAbstractfalse"j
declarationStringU<mark class="modifier"> </mark><mark class="modifier">class </mark>BibEntryWriterTest"
accesspackage_private*BibEntryWriterTest2ê
8org.jabref.logic.bibtex.BibEntryWriterTest.setUpWriter()DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java0	 0(2í
:org.jabref.logic.bibtex.BibEntryWriterTest.serialization()DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java7	 7(2ó
?org.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaQ	 Q(2ó
?org.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithFile()DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaa	 a(2ö
Borg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javap	 p(2≠
Sorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaä	 ä(/2°
Gorg.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶	 ¶(#2î
:org.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∑	 ∑(2¨
Rorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ	 Õ(.2¶
Lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‡	 ‡((2∞
Vorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÛ	 Û(22¶
Lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÜ	 Ü((2´
Qorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaú	 ú(-2©
Oorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¥	 ¥(+2†
Forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ	 Ã("2≈
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÒ	 Ò(G2ñ
<org.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò	 ò(2§
Jorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿	 ¿(&2¢
Horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ	 Ÿ($2®
Norg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˆ	 ˆ(*2¶
Lorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaâ â("2û
Dorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö	 ö( 2ù
Corg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂	 ∂(2ô
?org.jabref.logic.bibtex.BibEntryWriterTest.constantMonthApril()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÁ	 Á(2ë
7org.jabref.logic.bibtex.BibEntryWriterTest.monthApril()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¯	 ¯(2¶
Lorg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaâ	 â((2ü
Eorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java£	 £(!2ú
Borg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≈	 ≈(2∂
\org.jabref.logic.bibtex.BibEntryWriterTest.writeThrowsErrorIfFieldContainsUnbalancedBraces()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‘	 ‘(82®
Norg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‹	 ‹(*2∑
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaı	 ı(92û
Dorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù	 ù( 2ì
9org.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿	 ¿(2§
Jorg.jabref.logic.bibtex.BibEntryWriterTest.testGetFormattedFieldNameData()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä(:2√
iorg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç	 ç(2™
Porg.jabref.logic.bibtex.BibEntryWriterTest.testGetLengthOfLongestFieldNameData()DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(@2∆
lorg.jabref.logic.bibtex.BibEntryWriterTest.getLengthOfLongestFieldName(int, org.jabref.model.entry.BibEntry)DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù	 ù($2¶
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java*+ *(B2õ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java+ +(+2ò
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java, ,(2ù
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java- -()ö
8org.jabref.logic.bibtex.BibEntryWriterTest.setUpWriter()METHODG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java0	 0("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUpWriter</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUpWriter2e
java.util.List.of(E)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java2L 2(N2r
!java.util.Collections.emptyList()CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java2q 2(z2¸
™org.jabref.logic.bibtex.FieldPreferences.FieldPreferences(boolean, java.util.List<org.jabref.model.entry.field.Field>, java.util.List<org.jabref.model.entry.field.Field>)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java20 2(@2Ÿ
áorg.jabref.logic.bibtex.BibEntryWriter.BibEntryWriter(org.jabref.logic.bibtex.FieldWriter, org.jabref.model.entry.BibEntryTypesManager)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java3 3(+2™
Yorg.jabref.logic.bibtex.FieldWriter.FieldWriter(org.jabref.logic.bibtex.FieldPreferences)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java30 3(;2ì
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java3S 3(g2ü
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java1 1(2ñ
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java3 3(2¶
Uorg.jabref.logic.bibtex.BibEntryWriterTest.setUpWriter()?fieldPreferences@50.25:50.41CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java3< 3(L2≠
Uorg.jabref.logic.bibtex.BibEntryWriterTest.setUpWriter()?fieldPreferences@50.25:50.41DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java2 2()2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java0 0(©
Uorg.jabref.logic.bibtex.BibEntryWriterTest.setUpWriter()?fieldPreferences@50.25:50.41VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java2 2()"
typeFieldPreferences"
isFinalfalse"È
declarationString”<mark class="modifier"> </mark>FieldPreferences <mark class="class-field">fieldPreferences</mark> = new FieldPreferences(true, List.of(StandardField.MONTH)<mark class="modifier">,</mark> Collections.emptyList())*fieldPreferences2y
(org.jabref.logic.bibtex.FieldPreferencesTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java2 2(2e
java.util.List.of(E)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java2L 2(N2r
!java.util.Collections.emptyList()CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java2q 2(z2¸
™org.jabref.logic.bibtex.FieldPreferences.FieldPreferences(boolean, java.util.List<org.jabref.model.entry.field.Field>, java.util.List<org.jabref.model.entry.field.Field>)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java20 2(@Ñ
:org.jabref.logic.bibtex.BibEntryWriterTest.serialization()METHODG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java7	 7("
isFinalfalse"¸
declarationStringÊ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">serialization</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*serialization2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java: :(2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java; ;(2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java= =(2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java> >(2Ô
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java@ @(2p
java.io.StringWriter.toString()CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaM, M(42°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java8 8(%2ù
Lorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?entry@56.17:56.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java: :(2ù
Lorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?entry@56.17:56.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java; ;(2ù
Lorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?entry@56.17:56.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java= =(2ù
Lorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?entry@56.17:56.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java> >(2ñ
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java@ @(2ù
Lorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?entry@56.17:56.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java@ @("2ë
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java@$ @(-2†
Oorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?expected@67.15:67.23CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaM M(2î
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaM M(+2§
Lorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?entry@56.17:56.22DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java8 8(2ß
Oorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?expected@67.15:67.23DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaC C(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java7 7(Ú
Lorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?entry@56.17:56.22VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java8 8("
typeBibEntry"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Article)*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java8 8(2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java8 8(%ñ
Oorg.jabref.logic.bibtex.BibEntryWriterTest.serialization()?expected@67.15:67.23VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaC C("
typeString"
isFinalfalse"‡
declarationString <mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    @Article{<mark class="modifier">,</mark>
      author  = {Foo Bar}<mark class="modifier">,</mark>
      journal = {International Journal of Something}<mark class="modifier">,</mark>
      note    = {some note}<mark class="modifier">,</mark>
      number  = {1}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2a
java.lang.StringTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaC C(ë
?org.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()METHODG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaQ	 Q("
isFinalfalse"ˇ
declarationStringÈ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">writeOtherTypeTest</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*writeOtherTypeTest2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaY Y(2ë
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaZ Z(2Ô
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java\ \(2p
java.io.StringWriter.toString()CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java], ](42°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaX X(%2°
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaX* X(:2¢
Qorg.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()?entry@88.17:88.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaY Y(2¢
Qorg.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()?entry@88.17:88.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaZ Z(2ñ
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java\ \(2¢
Qorg.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()?entry@88.17:88.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java\ \("2ë
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java\$ \(-2•
Torg.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()?expected@82.15:82.23CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java] ](2î
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java] ](+2¨
Torg.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()?expected@82.15:82.23DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaR R(2©
Qorg.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()?entry@88.17:88.22DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaX X(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaQ Q(º
Torg.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()?expected@82.15:82.23VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaR R("
typeString"
isFinalfalse"Å
declarationStringÎ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    @Other{test,
      comment = {testentry}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2a
java.lang.StringTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaR R(ü
Qorg.jabref.logic.bibtex.BibEntryWriterTest.writeOtherTypeTest()?entry@88.17:88.22VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaX X("
typeBibEntry"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(new UnknownEntryType("other"))*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaX X(2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaX X(%2°
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaX* X(:‡
?org.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithFile()METHODG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaa	 a("
isFinalfalse"ˇ
declarationStringÈ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">writeEntryWithFile</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*writeEntryWithFile2ç
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javac6 c(82õ
Jorg.jabref.model.entry.BibEntry.addFile(org.jabref.model.entry.LinkedFile)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javad d(2Ô
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaf f(2p
java.io.StringWriter.toString()CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javal< l(D2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javab b(%2µ
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javac c((2¢
Qorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithFile()?entry@98.17:98.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javad d(2°
Porg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithFile()?file@99.19:99.23CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javad d(2ñ
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaf f(2¢
Qorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithFile()?entry@98.17:98.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaf f("2ë
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaf$ f(-2î
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javal/ l(;2©
Qorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithFile()?entry@98.17:98.22DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javab b(2®
Porg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithFile()?file@99.19:99.23DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javac c(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaa a(˜
Qorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithFile()?entry@98.17:98.22VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javab b("
typeBibEntry"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Article)*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javab b(2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javab b(%Ò
Porg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithFile()?file@99.19:99.23VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javac c("
type
LinkedFile"
isFinalfalse"·
declarationStringÀ<mark class="modifier"> </mark>LinkedFile <mark class="class-field">file</mark> = new LinkedFile("test"<mark class="modifier">,</mark> Path.of("/home/uers/test.pdf")<mark class="modifier">,</mark> "PDF")*file2r
!org.jabref.model.entry.LinkedFileTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javac c(2ç
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javac6 c(82µ
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javac c((
Borg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()METHODG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javap	 p("
isFinalfalse"Ç
declarationStringÏ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">writeEntryWithOrField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*writeEntryWithOrField2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javas s(2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javat t(2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javav v(2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaw w(2Ô
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javay y(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÜ, Ü(42°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaq q(%2ß
Vorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?entry@113.17:113.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javas s(2ß
Vorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?entry@113.17:113.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javat t(2ß
Vorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?entry@113.17:113.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javav v(2ß
Vorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?entry@113.17:113.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaw w(2ñ
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javay y(2ß
Vorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?entry@113.17:113.22CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javay y("2ë
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javay$ y(-2¨
Yorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?expected@124.15:124.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÜ Ü(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÜ Ü(+2Æ
Vorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?entry@113.17:113.22DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaq q(2±
Yorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?expected@124.15:124.23DECLARATIONG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java| |(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javap p(˚
Vorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?entry@113.17:113.22VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaq q("
typeBibEntry"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.InBook)*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaq q(2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaq q(%ü
Yorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrField()?expected@124.15:124.23VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java| |("
typeString"
isFinalfalse"ﬂ
declarationString…<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    @InBook{<mark class="modifier">,</mark>
      editor  = {Foo Bar}<mark class="modifier">,</mark>
      note    = {some note}<mark class="modifier">,</mark>
      number  = {1}<mark class="modifier">,</mark>
      journal = {International Journal of Something}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2a
java.lang.StringTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java| |(æ!
Sorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaä	 ä(/"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">writeEntryWithOrFieldBothFieldsPresent</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*&writeEntryWithOrFieldBothFieldsPresent2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç ç(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé é(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaè è(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë ë(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¢, ¢(42£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(%2∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?entry@139.17:139.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç ç(2∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?entry@139.17:139.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé é(2∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?entry@139.17:139.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaè è(2∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?entry@139.17:139.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë ë(2∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?entry@139.17:139.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î(2∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?entry@139.17:139.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî$ î(-2Ω
jorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?expected@151.15:151.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¢ ¢(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¢ ¢(+2¡
gorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?entry@139.17:139.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(2ƒ
jorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?expected@151.15:151.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaó ó(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaä ä(í
gorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?entry@139.17:139.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã("
typeBibEntry"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.InBook)*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(%Ô
jorg.jabref.logic.bibtex.BibEntryWriterTest.writeEntryWithOrFieldBothFieldsPresent()?expected@151.15:151.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaó ó("
typeString"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    @InBook{<mark class="modifier">,</mark>
      author  = {Foo Thor}<mark class="modifier">,</mark>
      editor  = {Edi Bar}<mark class="modifier">,</mark>
      note    = {some note}<mark class="modifier">,</mark>
      number  = {1}<mark class="modifier">,</mark>
      journal = {International Journal of Something}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaó ó(∂
Gorg.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶	 ¶(#"
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">writeReallyUnknownTypeTest</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*writeReallyUnknownTypeTest2¢
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ Ø(2ì
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java± ±(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≥, ≥(42}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠ ≠(%2£
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ(*2Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()?entry@173.17:173.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ(2Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()?entry@173.17:173.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ Ø(2Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()?entry@173.17:173.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java± ±(2Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()?entry@173.17:173.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java± ±("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java±$ ±(-2±
^org.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()?expected@167.15:167.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≥ ≥(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≥ ≥(+2∏
^org.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()?expected@167.15:167.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß(2µ
[org.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()?entry@173.17:173.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠ ≠(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶ ¶(÷
^org.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()?expected@167.15:167.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß("
typeString"
isFinalfalse"ç
declarationString˜<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    @Reallyunknowntype{test,
      comment = {testentry}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß(∆
[org.jabref.logic.bibtex.BibEntryWriterTest.writeReallyUnknownTypeTest()?entry@173.17:173.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠ ≠("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠ ≠(2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠ ≠(%»
:org.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∑	 ∑("
isFinalfalse"¸
declarationStringÊ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripTest</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*roundTripTest2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬H ¬(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√< √(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√. √(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ, ƒ(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ! ƒ()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java« «(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java…/ …(72Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬R ¬(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬/ ¬(F2ß
Torg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?bibtexEntry@184.15:184.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬_ ¬(j2¢
Oorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?result@194.21:194.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√' √(-2£
Porg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?entries@195.29:195.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ ƒ( 2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java« «(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?entry@196.17:196.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java« «("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java«$ «(-2ß
Torg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?bibtexEntry@184.15:184.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java… …( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java…" …(.2Æ
Torg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?bibtexEntry@184.15:184.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∏ ∏(2©
Oorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?result@194.21:194.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬ ¬(2™
Porg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?entries@195.29:195.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√ √($2®
Norg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?entry@196.17:196.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ ƒ(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∑ ∑(∞
Torg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?bibtexEntry@184.15:184.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∏ ∏("
typeString"
isFinalfalse"Ó
declarationStringÿ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∏ ∏(Ç	
Oorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?result@194.21:194.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬ ¬("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬ ¬(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬H ¬(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬R ¬(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬/ ¬(F2ß
Torg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?bibtexEntry@184.15:184.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬_ ¬(jñ
Porg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?entries@195.29:195.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√ √($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√ √(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√ √(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√< √(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√. √(92¢
Oorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?result@194.21:194.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√' √(-Õ
Norg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?entry@196.17:196.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ ƒ("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ ƒ(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ, ƒ(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ! ƒ()2£
Porg.jabref.logic.bibtex.BibEntryWriterTest.roundTripTest()?entries@195.29:195.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ ƒ( Ë 
Rorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ	 Õ(."
isFinalfalse"î
declarationString˛<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripKeepsFilePathWithBackslashes</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*%roundTripKeepsFilePathWithBackslashes2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’H ’(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷< ÷(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷. ÷(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊, ◊(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊! ◊()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄ ⁄(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‹/ ‹(72Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’R ’(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’/ ’(F2ø
lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?bibtexEntry@206.15:206.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’_ ’(j2∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?result@213.21:213.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷' ÷(-2ª
horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?entries@214.29:214.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊ ◊( 2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄ ⁄(2π
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?entry@215.17:215.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄ ⁄("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄$ ⁄(-2ø
lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?bibtexEntry@206.15:206.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‹ ‹( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‹" ‹(.2∆
lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?bibtexEntry@206.15:206.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŒ Œ(2¡
gorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?result@213.21:213.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’ ’(2¬
horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?entries@214.29:214.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷ ÷($2¿
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?entry@215.17:215.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊ ◊(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ Õ(Ñ
lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?bibtexEntry@206.15:206.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŒ Œ("
typeString"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Article{<mark class="modifier">,</mark>
      file = {Tagungen\\2013\\KWTK45}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŒ Œ(≤	
gorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?result@213.21:213.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’ ’("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’ ’(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’H ’(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’R ’(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’/ ’(F2ø
lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?bibtexEntry@206.15:206.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’_ ’(j∆
horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?entries@214.29:214.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷ ÷($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷ ÷(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷ ÷(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷< ÷(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷. ÷(92∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?result@213.21:213.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷' ÷(-˝
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?entry@215.17:215.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊ ◊("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊ ◊(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊, ◊(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊! ◊()2ª
horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathWithBackslashes()?entries@214.29:214.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊ ◊( † 
Lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‡	 ‡(("
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripKeepsEscapedCharacters</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*roundTripKeepsEscapedCharacters2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaËH Ë(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ< È(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ. È(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ, Í(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ! Í()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ Ì(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ/ Ô(72Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaËR Ë(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË/ Ë(F2π
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?bibtexEntry@225.15:225.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË_ Ë(j2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?result@232.21:232.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ' È(-2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?entries@233.29:233.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í( 2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ Ì(2≥
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?entry@234.17:234.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ Ì("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ$ Ì(-2π
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?bibtexEntry@225.15:225.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ Ô( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ" Ô(.2¿
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?bibtexEntry@225.15:225.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java· ·(2ª
aorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?result@232.21:232.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË Ë(2º
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?entries@233.29:233.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ È($2∫
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?entry@234.17:234.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‡ ‡(É
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?bibtexEntry@225.15:225.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java· ·("
typeString"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Article{<mark class="modifier">,</mark>
      demofield = {Tagungen\\2013\\KWTK45}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java· ·(¶	
aorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?result@232.21:232.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË Ë("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË Ë(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaËH Ë(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaËR Ë(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË/ Ë(F2π
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?bibtexEntry@225.15:225.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË_ Ë(j∫
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?entries@233.29:233.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ È($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ È(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ È(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ< È(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ. È(92¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?result@232.21:232.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ' È(-Ò
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?entry@234.17:234.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ, Í(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ! Í()2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsEscapedCharacters()?entries@233.29:233.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í( ò!
Vorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÛ	 Û(2"
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripKeepsFilePathEndingWithBackslash</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)roundTripKeepsFilePathEndingWithBackslash2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚H ˚(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸< ¸(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸. ¸(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝, ˝(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝! ˝()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ/ Ç(72Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚R ˚(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚/ ˚(F2√
porg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?bibtexEntry@244.15:244.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚_ ˚(j2æ
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?result@251.21:251.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸' ¸(-2ø
lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?entries@252.29:252.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝ ˝( 2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä(2Ω
jorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?entry@253.17:253.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ$ Ä(-2√
porg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?bibtexEntry@244.15:244.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ Ç( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ" Ç(.2 
porg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?bibtexEntry@244.15:244.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÙ Ù(2≈
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?result@251.21:251.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚ ˚(2∆
lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?entries@252.29:252.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸ ¸($2ƒ
jorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?entry@253.17:253.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝ ˝(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÛ Û(˜
porg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?bibtexEntry@244.15:244.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÙ Ù("
typeString"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Article{<mark class="modifier">,</mark>
      file = {dir\\}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÙ Ù(∫	
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?result@251.21:251.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚ ˚("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚ ˚(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚H ˚(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚R ˚(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚/ ˚(F2√
porg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?bibtexEntry@244.15:244.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˚_ ˚(jŒ
lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?entries@252.29:252.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸ ¸($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸ ¸(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸ ¸(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸< ¸(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸. ¸(92æ
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?result@251.21:251.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸' ¸(-Ö
jorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?entry@253.17:253.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝ ˝("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝ ˝(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝, ˝(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝! ˝()2ø
lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripKeepsFilePathEndingWithBackslash()?entries@252.29:252.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝ ˝( î!
Lorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÜ	 Ü(("
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripWithPrependingNewlines</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*roundTripWithPrependingNewlines2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaëH ë(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí< í(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí. í(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaì, ì(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaì! ì()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javañ ñ(2r
java.lang.String.substring(int)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò! ò(*2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò< ò(D2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaëR ë(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë/ ë(F2π
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?bibtexEntry@264.15:264.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë_ ë(j2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?result@273.21:273.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí' í(-2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?entries@274.29:274.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaì ì( 2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javañ ñ(2≥
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?entry@275.17:275.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javañ ñ("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javañ$ ñ(-2π
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?bibtexEntry@264.15:264.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò ò( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò/ ò(;2¿
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?bibtexEntry@264.15:264.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaà à(2ª
aorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?result@273.21:273.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë ë(2º
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?entries@274.29:274.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í($2∫
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?entry@275.17:275.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaì ì(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÜ Ü(«
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?bibtexEntry@264.15:264.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaà à("
typeString"
isFinalfalse"Û
declarationString›<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = "\r\n@Article{test," + OS.NEWLINE + "  Author                   = {Foo Bar}<mark class="modifier">,</mark>" + OS.NEWLINE + "  Journal                  = {International Journal of Something}<mark class="modifier">,</mark>" + OS.NEWLINE + "  Note                     = {some note}<mark class="modifier">,</mark>" + OS.NEWLINE + "  Number                   = {1}" + OS.NEWLINE + "}" + OS.NEWLINE*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaà à(¶	
aorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?result@273.21:273.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë ë("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë ë(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaëH ë(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaëR ë(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë/ ë(F2π
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?bibtexEntry@264.15:264.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë_ ë(j∫
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?entries@274.29:274.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí< í(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí. í(92¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?result@273.21:273.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí' í(-Ò
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?entry@275.17:275.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaì ì("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaì ì(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaì, ì(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaì! ì()2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrependingNewlines()?entries@274.29:274.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaì ì( ∞$
Qorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaú	 ú(-"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripWithKeepsCRLFLineBreakStyle</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$roundTripWithKeepsCRLFLineBreakStyle2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaßH ß(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®< ®(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®. ®(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java©, ©(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java©! ©()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞/ ∞(72Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaßR ß(^2¢
Oorg.jabref.logic.exporter.BibWriter.BibWriter(java.io.Writer, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠ ≠(!2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß/ ß(F2æ
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?bibtexEntry@286.15:286.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß_ ß(j2π
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?result@295.21:295.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®' ®(-2∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?entries@296.29:296.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©( 2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠ ≠(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠" ≠(.2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ(2∏
eorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?entry@297.17:297.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ$ Æ(-2æ
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?bibtexEntry@286.15:286.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞" ∞(.2≈
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?bibtexEntry@286.15:286.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû û(2¿
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?result@295.21:295.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß(2¡
gorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?entries@296.29:296.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®($2ø
eorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?entry@297.17:297.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaú ú(í
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?bibtexEntry@286.15:286.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû û("
typeString"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = "@Article{test,\r\n" + "  Author                   = {Foo Bar}<mark class="modifier">,</mark>\r\n" + "  Journal                  = {International Journal of Something}<mark class="modifier">,</mark>\r\n" + "  Note                     = {some note}<mark class="modifier">,</mark>\r\n" + "  Number                   = {1}\r\n" + "}\r\n"*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû û(∞	
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?result@295.21:295.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaßH ß(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaßR ß(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß/ ß(F2æ
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?bibtexEntry@286.15:286.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß_ ß(jƒ
gorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?entries@296.29:296.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®< ®(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®. ®(92π
forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?result@295.21:295.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®' ®(-˚
eorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?entry@297.17:297.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java©, ©(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java©! ©()2∫
gorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsCRLFLineBreakStyle()?entries@296.29:296.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©( ò$
Oorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¥	 ¥(+"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripWithKeepsLFLineBreakStyle</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*"roundTripWithKeepsLFLineBreakStyle2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaøH ø(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿< ¿(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿. ¿(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡, ¡(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡! ¡()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java»/ »(72Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaøR ø(^2¢
Oorg.jabref.logic.exporter.BibWriter.BibWriter(java.io.Writer, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≈ ≈(!2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaø/ ø(F2º
iorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?bibtexEntry@310.15:310.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaø_ ø(j2∑
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?result@319.21:319.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿' ¿(-2∏
eorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?entries@320.29:320.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡( 2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≈ ≈(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≈" ≈(.2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆(2∂
corg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?entry@321.17:321.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆$ ∆(-2º
iorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?bibtexEntry@310.15:310.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java» »( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java»" »(.2√
iorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?bibtexEntry@310.15:310.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂ ∂(2æ
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?result@319.21:319.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaø ø(2ø
eorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?entries@320.29:320.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿ ¿($2Ω
corg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?entry@321.17:321.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¥ ¥(Ñ
iorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?bibtexEntry@310.15:310.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂ ∂("
typeString"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = "@Article{test,\n" + "  Author                   = {Foo Bar}<mark class="modifier">,</mark>\n" + "  Journal                  = {International Journal of Something}<mark class="modifier">,</mark>\n" + "  Note                     = {some note}<mark class="modifier">,</mark>\n" + "  Number                   = {1}\n" + "}\n"*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂ ∂(¨	
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?result@319.21:319.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaø ø("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaø ø(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaøH ø(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaøR ø(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaø/ ø(F2º
iorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?bibtexEntry@310.15:310.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaø_ ø(j¿
eorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?entries@320.29:320.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿ ¿($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿ ¿(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿ ¿(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿< ¿(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿. ¿(92∑
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?result@319.21:319.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿' ¿(-˜
corg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?entry@321.17:321.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡, ¡(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡! ¡()2∏
eorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithKeepsLFLineBreakStyle()?entries@320.29:320.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡( Û#
Forg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ	 Ã(""
isFinalfalse"à
declarationStringÚ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripWithModification</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*roundTripWithModification2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸH Ÿ(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄< ⁄(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄. ⁄(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€, €(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€! €()2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaﬁ ﬁ(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java· ·(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ, Ì(42Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸR Ÿ(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ/ Ÿ(F2≥
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?bibtexEntry@334.15:334.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ_ Ÿ(j2Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?result@345.21:345.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄' ⁄(-2Ø
\org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?entries@346.29:346.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €( 2≠
Zorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?entry@347.17:347.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaﬁ ﬁ(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java· ·(2≠
Zorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?entry@347.17:347.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java· ·("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java·$ ·(-2∞
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?expected@356.15:356.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ Ì(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ Ì(+2∫
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?bibtexEntry@334.15:334.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŒ Œ(2µ
[org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?result@345.21:345.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ Ÿ(2∂
\org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?entries@346.29:346.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄ ⁄($2¥
Zorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?entry@347.17:347.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €(2∑
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?expected@356.15:356.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰ ‰(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã(€
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?bibtexEntry@334.15:334.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŒ Œ("
typeString"
isFinalfalse"ç
declarationString˜<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŒ Œ(ö	
[org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?result@345.21:345.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ Ÿ("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ Ÿ(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸH Ÿ(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸR Ÿ(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ/ Ÿ(F2≥
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?bibtexEntry@334.15:334.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ_ Ÿ(jÆ
\org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?entries@346.29:346.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄ ⁄($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄ ⁄(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄ ⁄(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄< ⁄(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄. ⁄(92Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?result@345.21:345.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄' ⁄(-Â
Zorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?entry@347.17:347.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€, €(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€! €()2Ø
\org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?entries@346.29:346.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €( ç
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithModification()?expected@356.15:356.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰ ‰("
typeString"
isFinalfalse"≈
declarationStringØ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    @Article{test,
      author  = {BlaBla}<mark class="modifier">,</mark>
      journal = {International Journal of Something}<mark class="modifier">,</mark>
      note    = {some note}<mark class="modifier">,</mark>
      number  = {1}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰ ‰(Å(
korg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÒ	 Ò(G"
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*>roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇH ˇ(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ< Ä(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ. Ä(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÅ, Å(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÅ! Å()2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ Ñ(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaá á(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî, î(42Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇR ˇ(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇ/ ˇ(F2Ÿ
Öorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?bibtexEntry@371.15:371.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇ_ ˇ(j2‘
Äorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?result@383.21:383.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ' Ä(-2’
Åorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?entries@384.29:384.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÅ Å( 2“
org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?entry@385.17:385.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ Ñ(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaá á(2“
org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?entry@385.17:385.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaá á("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaá$ á(-2÷
Çorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?expected@394.15:394.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î(+2‡
Öorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?bibtexEntry@371.15:371.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÛ Û(2€
Äorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?result@383.21:383.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇ ˇ(2‹
Åorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?entries@384.29:384.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä($2Ÿ
org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?entry@385.17:385.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÅ Å(2›
Çorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?expected@394.15:394.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaä ä(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÒ Ò(…
Öorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?bibtexEntry@371.15:371.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÛ Û("
typeString"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Number                   = {1}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      HowPublished             = {asdf}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÛ Û(Ê	
Äorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?result@383.21:383.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇ ˇ("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇ ˇ(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇH ˇ(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇR ˇ(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇ/ ˇ(F2Ÿ
Öorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?bibtexEntry@371.15:371.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˇ_ ˇ(j˙
Åorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?entries@384.29:384.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ< Ä(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ. Ä(92‘
Äorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?result@383.21:383.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ' Ä(-∞
org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?entry@385.17:385.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÅ Å("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÅ Å(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÅ, Å(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÅ! Å()2’
Åorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?entries@384.29:384.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÅ Å( É
Çorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase()?expected@394.15:394.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaä ä("
typeString"
isFinalfalse"ï
declarationStringˇ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    @Article{test,
      author       = {BlaBla}<mark class="modifier">,</mark>
      journal      = {International Journal of Something}<mark class="modifier">,</mark>
      note         = {some note}<mark class="modifier">,</mark>
      number       = {1}<mark class="modifier">,</mark>
      howpublished = {asdf}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaä ä(‚"
<org.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò	 ò("
isFinalfalse"˛
declarationStringË<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">entryTypeChange</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*entryTypeChange2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaßH ß(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®< ®(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®. ®(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java©, ©(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java©! ©()2¢
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¨ ¨(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ Ø(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaº4 º(<2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaßR ß(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß/ ß(F2¶
Sorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?expected@410.15:410.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß_ ß(g2§
Qorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?result@423.21:423.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®' ®(-2•
Rorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?entries@424.29:424.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©( 2£
Porg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?entry@425.17:425.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¨ ¨(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ Ø(2£
Porg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?entry@425.17:425.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ Ø("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ$ Ø(-2Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?expectedNewEntry@434.15:434.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaº º(%2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaº' º(32≠
Sorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?expected@410.15:410.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö ö(2´
Qorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?result@423.21:423.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß(2¨
Rorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?entries@424.29:424.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®($2™
Porg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?entry@425.17:425.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©(2µ
[org.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?expectedNewEntry@434.15:434.31DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≤ ≤(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò ò(Ÿ
Sorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?expected@410.15:410.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö ö("
typeString"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    
    @Article{test,
      author       = {BlaBla}<mark class="modifier">,</mark>
      journal      = {International Journal of Something}<mark class="modifier">,</mark>
      number       = {1}<mark class="modifier">,</mark>
      note         = {some note}<mark class="modifier">,</mark>
      howpublished = {asdf}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö ö(Ä	
Qorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?result@423.21:423.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß("
typeParserResult"
isFinalfalse"∑
declarationString°<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(expected))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaßH ß(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaßR ß(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß/ ß(F2¶
Sorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?expected@410.15:410.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß_ ß(gö
Rorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?entries@424.29:424.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®< ®(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®. ®(92§
Qorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?result@423.21:423.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®' ®(-—
Porg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?entry@425.17:425.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java©, ©(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java©! ©()2•
Rorg.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?entries@424.29:424.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©( Ò
[org.jabref.logic.bibtex.BibEntryWriterTest.entryTypeChange()?expectedNewEntry@434.15:434.31VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≤ ≤("
typeString"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>String <mark class="class-field">expectedNewEntry</mark> = """
    @InProceedings{test,
      author       = {BlaBla}<mark class="modifier">,</mark>
      note         = {some note}<mark class="modifier">,</mark>
      number       = {1}<mark class="modifier">,</mark>
      howpublished = {asdf}<mark class="modifier">,</mark>
      journal      = {International Journal of Something}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expectedNewEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≤ ≤(ö&
Jorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿	 ¿(&"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripWithAppendedNewlines</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*roundTripWithAppendedNewlines2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀH À(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ< Ã(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ. Ã(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ, Õ(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ! Õ()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java– –(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java—% —(-2w
$java.lang.String.substring(int, int)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’! ’(*2l
java.lang.String.length()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’: ’(@2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀR À(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ/ À(F2∑
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?bibtexEntry@450.15:450.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ_ À(j2≤
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?result@459.21:459.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ' Ã(-2≥
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?entries@460.29:460.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ Õ( 2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java– –(2±
^org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?entry@461.17:461.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java– –("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java–$ –(-2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —($2∑
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?bibtexEntry@450.15:450.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’ ’( 2∑
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?bibtexEntry@450.15:450.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’. ’(92≤
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?actual@465.15:465.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’V ’(\2æ
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?bibtexEntry@450.15:450.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬ ¬(2π
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?result@459.21:459.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ À(2∫
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?entries@460.29:460.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã($2∏
^org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?entry@461.17:461.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ Õ(2π
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?actual@465.15:465.21DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿ ¿(∏
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?bibtexEntry@450.15:450.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬ ¬("
typeString"
isFinalfalse"Ê
declarationString–<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = "@Article{test," + OS.NEWLINE + "  Author                   = {Foo Bar}<mark class="modifier">,</mark>" + OS.NEWLINE + "  Journal                  = {International Journal of Something}<mark class="modifier">,</mark>" + OS.NEWLINE + "  Number                   = {1}<mark class="modifier">,</mark>" + OS.NEWLINE + "  Note                     = {some note}" + OS.NEWLINE + "}\n\n"*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¬ ¬(¢	
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?result@459.21:459.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ À("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ À(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀH À(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀR À(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ/ À(F2∑
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?bibtexEntry@450.15:450.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ_ À(j∂
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?entries@460.29:460.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ< Ã(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ. Ã(92≤
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?result@459.21:459.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ' Ã(-Ì
^org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?entry@461.17:461.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ Õ("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ Õ(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ, Õ(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ! Õ()2≥
`org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?entries@460.29:460.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ Õ( –
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithAppendedNewlines()?actual@465.15:465.21VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —("
typeString"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>String <mark class="class-field">actual</mark> = stringWriter.toString()*actual2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java—% —(-2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —($ñ$
Horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ	 Ÿ($"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripNormalizesNewLines</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*roundTripNormalizesNewLines2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰H ‰(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ< Â(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ. Â(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÊ, Ê(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÊ! Ê()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ È(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ% Í(-2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰R ‰(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰/ ‰(F2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?bibtexEntry@475.15:475.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰_ ‰(j2∞
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?result@484.21:484.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ' Â(-2±
^org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?entries@485.29:485.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÊ Ê( 2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ È(2Ø
\org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?entry@486.17:486.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ È("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ$ È(-2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í($2≤
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?expected@492.15:492.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÚ Ú(2∞
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?actual@490.15:490.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÚ Ú(%2º
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?bibtexEntry@475.15:475.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €(2∑
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?result@484.21:484.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰ ‰(2∏
^org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?entries@485.29:485.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ Â($2∂
\org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?entry@486.17:486.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÊ Ê(2∑
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?actual@490.15:490.21DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í(2π
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?expected@492.15:492.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ Ï(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŸ Ÿ(É
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?bibtexEntry@475.15:475.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €("
typeString"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = "@Article{test,\n" + "  Author                   = {Foo Bar}<mark class="modifier">,</mark>\r\n" + "  Journal                  = {International Journal of Something}<mark class="modifier">,</mark>\n" + "  Number                   = {1}<mark class="modifier">,</mark>\n" + "  Note                     = {some note}\r\n" + "}\n\n"*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €(û	
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?result@484.21:484.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰ ‰("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰ ‰(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰H ‰(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰R ‰(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰/ ‰(F2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?bibtexEntry@475.15:475.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‰_ ‰(j≤
^org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?entries@485.29:485.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ Â($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ Â(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ Â(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ< Â(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ. Â(92∞
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?result@484.21:484.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÂ' Â(-È
\org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?entry@486.17:486.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÊ Ê("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÊ Ê(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÊ, Ê(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÊ! Ê()2±
^org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?entries@485.29:485.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÊ Ê( Œ
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?actual@490.15:490.21VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í("
typeString"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>String <mark class="class-field">actual</mark> = stringWriter.toString()*actual2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ% Í(-2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í($∂
_org.jabref.logic.bibtex.BibEntryWriterTest.roundTripNormalizesNewLines()?expected@492.15:492.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ Ï("
typeString"
isFinalfalse"Ï
declarationString÷<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "@Article{test," + OS.NEWLINE + "  Author                   = {Foo Bar}<mark class="modifier">,</mark>" + OS.NEWLINE + "  Journal                  = {International Journal of Something}<mark class="modifier">,</mark>" + OS.NEWLINE + "  Number                   = {1}<mark class="modifier">,</mark>" + OS.NEWLINE + "  Note                     = {some note}" + OS.NEWLINE + "}" + OS.NEWLINE*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ Ï(†
Norg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˆ	 ˆ(*"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">multipleWritesWithoutModification</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!multipleWritesWithoutModification2ü
Lorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ Ç('2ü
Lorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ É( 2ü
Lorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ Ñ( 2ª
horg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?bibtexEntry@504.15:504.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ( Ç(32∂
corg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?result@514.15:514.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ É(2∂
corg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?result@514.15:514.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ! É('2∂
corg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?result@514.15:514.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ Ñ(2∂
corg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?result@514.15:514.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ! Ñ('2ª
horg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?bibtexEntry@504.15:504.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÜ Ü( 2∂
corg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?result@514.15:514.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÜ" Ü((2¬
horg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?bibtexEntry@504.15:504.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¯ ¯(2Ω
corg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?result@514.15:514.21DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ Ç(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaˆ ˆ(ƒ
horg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?bibtexEntry@504.15:504.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¯ ¯("
typeString"
isFinalfalse"Ó
declarationStringÿ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¯ ¯(≠
corg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?result@514.15:514.21VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ Ç("
typeString"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>String <mark class="class-field">result</mark> = testSingleWrite(bibtexEntry)*result2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ Ç(2ü
Lorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ Ç('2ª
horg.jabref.logic.bibtex.BibEntryWriterTest.multipleWritesWithoutModification()?bibtexEntry@504.15:504.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÇ( Ç(3Ó*
Lorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaâ â(""
isFinalfalse"—
declarationStringª<mark class="modifier">private </mark>String <mark class="method">testSingleWrite</mark>(String bibtexEntry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*testSingleWrite2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaãH ã(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå< å(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå. å(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç, ç(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç! ç()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î('2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaãR ã(^2v
#java.io.StringWriter.StringWriter()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaê" ê(.2¢
Oorg.jabref.logic.exporter.BibWriter.BibWriter(java.io.Writer, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë" ë(+2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã/ ã(F2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)!bibtexEntryCALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã_ ã(j2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?result@523.21:523.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå' å(-2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?entries@524.29:524.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç ç( 2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?writer@528.21:528.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë, ë(22ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(2≥
`org.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?entry@525.17:525.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í("2∑
dorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?bibWriter@529.18:529.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí$ í(-2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?writer@528.21:528.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)!bibtexEntryCALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaï ï( 2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?actual@532.15:532.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaï" ï((2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?actual@532.15:532.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javañ ñ(2∞
Xorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)!bibtexEntry	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaâ* â(52ª
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?result@523.21:523.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(2º
borg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?entries@524.29:524.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå å($2∫
`org.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?entry@525.17:525.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç ç(2ª
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?writer@528.21:528.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaê ê(2æ
dorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?bibWriter@529.18:529.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë ë(2ª
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?actual@532.15:532.21DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î(2j
java.lang.StringRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaâ â(ò	
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?result@523.21:523.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaãH ã(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaãR ã(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã/ ã(F2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)!bibtexEntryCALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã_ ã(j∫
borg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?entries@524.29:524.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå å($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå å(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå å(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå< å(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå. å(92¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?result@523.21:523.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaå' å(-Ò
`org.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?entry@525.17:525.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç ç("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç ç(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç, ç(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç! ç()2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?entries@524.29:524.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç ç( »
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?writer@528.21:528.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaê ê("
typeStringWriter"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>StringWriter <mark class="class-field">writer</mark> = new StringWriter()*writer2g
java.io.StringWriterTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaê ê(2v
#java.io.StringWriter.StringWriter()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaê" ê(.Œ
dorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?bibWriter@529.18:529.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë ë("
type	BibWriter"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>BibWriter <mark class="class-field">bibWriter</mark> = new BibWriter(writer, OS.NEWLINE)*	bibWriter2v
#org.jabref.logic.exporter.BibWriterTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë ë(2¢
Oorg.jabref.logic.exporter.BibWriter.BibWriter(java.io.Writer, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë" ë(+2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?writer@528.21:528.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaë, ë(2Í
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?actual@532.15:532.21VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î("
typeString"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>String <mark class="class-field">actual</mark> = writer.toString()*actual2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î('2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)?writer@528.21:528.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî î(Ì
Xorg.jabref.logic.bibtex.BibEntryWriterTest.testSingleWrite(java.lang.String)!bibtexEntry	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaâ* â(5"
typeString"
isFinalfalse"'
declarationStringString bibtexEntry*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaâ# â()ç)
Dorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö	 ö( "
isFinalfalse"Ü
declarationString<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">monthFieldSpecialSyntax</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*monthFieldSpecialSyntax2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶H ¶(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß< ß(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß. ß(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®, ®(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®! ®()2~
+org.jabref.model.entry.BibEntry.getFields()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´" ´(+2{
(java.util.Set.contains(java.lang.Object)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¨ ¨("2k
java.util.Optional.get()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠B ≠(E2ü
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠$ ≠(,2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≤/ ≤(72Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶R ¶(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶/ ¶(F2±
^org.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?bibtexEntry@540.15:540.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶_ ¶(j2¨
Yorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?result@550.21:550.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß' ß(-2≠
Zorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entries@551.29:551.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®( 2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entry@552.17:552.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´ ´(!2¨
Yorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?fields@555.19:555.25CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¨ ¨(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entry@552.17:552.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≠ ≠(#2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entry@552.17:552.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞$ ∞(-2±
^org.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?bibtexEntry@540.15:540.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≤ ≤( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≤" ≤(.2∏
^org.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?bibtexEntry@540.15:540.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaú ú(2≥
Yorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?result@550.21:550.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶ ¶(2¥
Zorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entries@551.29:551.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß($2≤
Xorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entry@552.17:552.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®(2≥
Yorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?fields@555.19:555.25DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´ ´(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö ö(Æ
^org.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?bibtexEntry@540.15:540.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaú ú("
typeString"
isFinalfalse"‚
declarationStringÃ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Month                    = mar,
      Number                   = {1}
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaú ú(ñ	
Yorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?result@550.21:550.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶ ¶("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶ ¶(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶H ¶(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶R ¶(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶/ ¶(F2±
^org.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?bibtexEntry@540.15:540.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶_ ¶(j™
Zorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entries@551.29:551.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß ß(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß< ß(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß. ß(92¨
Yorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?result@550.21:550.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaß' ß(-·
Xorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entry@552.17:552.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®, ®(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java®! ®()2≠
Zorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entries@551.29:551.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®( Í
Yorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?fields@555.19:555.25VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´ ´("
type
Set<Field>"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>Set<Field> <mark class="class-field">fields</mark> = entry.getFields()*fields2`
java.util.SetTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´ ´(2~
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´ ´(2~
+org.jabref.model.entry.BibEntry.getFields()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´" ´(+2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.monthFieldSpecialSyntax()?entry@552.17:552.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´ ´(!Â$
Corg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂	 ∂("
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">customTypeCanBewritten</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*customTypeCanBewritten2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java H  (M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ< À(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ. À(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ, Ã(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ! Ã()2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŒ Œ(2ô
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŒ$ Œ(.2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java„, „(42Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java R  (^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java /  (F2∞
]org.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?bibtexEntry@568.15:568.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java _  (j2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?result@586.21:586.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ' À(-2¨
Yorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?entries@587.29:587.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã( 2™
Worg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?entry@588.17:588.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaŒ Œ(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —(2™
Worg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?entry@588.17:588.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java—$ —(-2≠
Zorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?expected@595.15:595.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java„ „(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java„ „(+2∑
]org.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?bibtexEntry@568.15:568.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∏ ∏(2≤
Xorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?result@586.21:586.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java   (2≥
Yorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?entries@587.29:587.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ À($2±
Worg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?entry@588.17:588.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã(2¥
Zorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?expected@595.15:595.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java” ”(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂ ∂(˙	
]org.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?bibtexEntry@568.15:568.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∏ ∏("
typeString"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @reference{Broecker1984,
      title = {International Center of Photography}<mark class="modifier">,</mark>
      subtitle = {Encyclopedia of Photography}<mark class="modifier">,</mark>
      editor = {Broecker, William L.}<mark class="modifier">,</mark>
      date = {1984}<mark class="modifier">,</mark>
      eprint = {305515791}<mark class="modifier">,</mark>
      eprinttype = {scribd}<mark class="modifier">,</mark>
      isbn = {0-517-55271-X}<mark class="modifier">,</mark>
      keywords = {g:photography, p:positive, c:silver, m:albumen, c:pigment, m:carbon, g:reference, c:encyclopedia}<mark class="modifier">,</mark>
      location = {New York}<mark class="modifier">,</mark>
      pagetotal = {678}<mark class="modifier">,</mark>
      publisher = {Crown}<mark class="modifier">,</mark>
    }
    """*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∏ ∏(î	
Xorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?result@586.21:586.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java   ("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java   (2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java H  (M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java R  (^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java /  (F2∞
]org.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?bibtexEntry@568.15:568.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java _  (j®
Yorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?entries@587.29:587.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ À($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ À(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ À(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ< À(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ. À(92´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?result@586.21:586.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÀ' À(-ﬂ
Worg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?entry@588.17:588.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ, Ã(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ! Ã()2¨
Yorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?entries@587.29:587.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã( ƒ

Zorg.jabref.logic.bibtex.BibEntryWriterTest.customTypeCanBewritten()?expected@595.15:595.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java” ”("
typeString"
isFinalfalse"ˇ
declarationStringÈ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    @Reference{Broecker1984,
      date       = {1984}<mark class="modifier">,</mark>
      editor     = {Broecker, William L.}<mark class="modifier">,</mark>
      eprint     = {305515791}<mark class="modifier">,</mark>
      eprinttype = {scribd}<mark class="modifier">,</mark>
      isbn       = {0-517-55271-X}<mark class="modifier">,</mark>
      keywords   = {g:photography, p:positive, c:silver, m:albumen, c:pigment, m:carbon, g:reference, c:encyclopedia}<mark class="modifier">,</mark>
      location   = {NY}<mark class="modifier">,</mark>
      pagetotal  = {678}<mark class="modifier">,</mark>
      publisher  = {Crown}<mark class="modifier">,</mark>
      subtitle   = {Encyclopedia of Photography}<mark class="modifier">,</mark>
      title      = {International Center of Photography}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java” ”(Ö
?org.jabref.logic.bibtex.BibEntryWriterTest.constantMonthApril()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÁ	 Á("
isFinalfalse"ˇ
declarationStringÈ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">constantMonthApril</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*constantMonthApril2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ È(2Ü
3org.jabref.model.entry.BibEntry.setChanged(boolean)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ Î(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ Ì(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÙ Ù(%2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË Ë(%2¶
Sorg.jabref.logic.bibtex.BibEntryWriterTest.constantMonthApril()?entry@616.17:616.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ Î(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ Ì(2¶
Sorg.jabref.logic.bibtex.BibEntryWriterTest.constantMonthApril()?entry@616.17:616.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ Ì("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÌ$ Ì(-2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÙ Ù(2≠
Sorg.jabref.logic.bibtex.BibEntryWriterTest.constantMonthApril()?entry@616.17:616.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË Ë(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÁ Á(⁄
Sorg.jabref.logic.bibtex.BibEntryWriterTest.constantMonthApril()?entry@616.17:616.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË Ë("
typeBibEntry"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Misc).withField(StandardField.MONTH, "#apr#")*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË Ë(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÈ È(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaË Ë(%’
7org.jabref.logic.bibtex.BibEntryWriterTest.monthApril()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¯	 ¯("
isFinalfalse"˜
declarationString·<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">monthApril</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*
monthApril2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˙ ˙(2Ü
3org.jabref.model.entry.BibEntry.setChanged(boolean)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸ ¸(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˛ ˛(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ Ö(%2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˘ ˘(%2û
Korg.jabref.logic.bibtex.BibEntryWriterTest.monthApril()?entry@633.17:633.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¸ ¸(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˛ ˛(2û
Korg.jabref.logic.bibtex.BibEntryWriterTest.monthApril()?entry@633.17:633.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˛ ˛("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˛$ ˛(-2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ Ö(2•
Korg.jabref.logic.bibtex.BibEntryWriterTest.monthApril()?entry@633.17:633.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˘ ˘(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¯ ¯(–
Korg.jabref.logic.bibtex.BibEntryWriterTest.monthApril()?entry@633.17:633.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˘ ˘("
typeBibEntry"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Misc).withField(StandardField.MONTH, "apr")*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˘ ˘(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˙ ˙(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˘ ˘(%û 
Lorg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaâ	 â(("
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">filenameIsUnmodifiedDuringWrite</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*filenameIsUnmodifiedDuringWrite2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaòH ò(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô< ô(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô. ô(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö, ö(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö! ö()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù ù(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaü/ ü(72Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaòR ò(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò/ ò(F2π
forg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?bibtexEntry@651.15:651.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò_ ò(j2¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?result@664.21:664.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô' ô(-2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?entries@665.29:665.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö ö( 2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù ù(2≥
`org.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?entry@666.17:666.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù ù("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù$ ù(-2π
forg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?bibtexEntry@651.15:651.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaü ü( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaü" ü(.2¿
forg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?bibtexEntry@651.15:651.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(2ª
aorg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?result@664.21:664.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò ò(2º
borg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?entries@665.29:665.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô ô($2∫
`org.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?entry@666.17:666.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö ö(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaâ â(–
forg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?bibtexEntry@651.15:651.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã("
typeString"
isFinalfalse"¸
declarationStringÊ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
        @Book{Hue17,
          author    = {Rudolf Huebener}<mark class="modifier">,</mark>
          date      = {2017}<mark class="modifier">,</mark>
          title     = {Leiter, Halbleiter, Supraleiter}<mark class="modifier">,</mark>
          doi       = {10.1007/978-3-662-53281-2}<mark class="modifier">,</mark>
          publisher = {Springer Berlin Heidelberg}<mark class="modifier">,</mark>
          file      = {:Hue17 - Leiter # Halbleiter # Supraleiter.pdf:PDF}<mark class="modifier">,</mark>
          timestamp = {2020.10.13}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(¶	
aorg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?result@664.21:664.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò ò("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò ò(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaòH ò(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaòR ò(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò/ ò(F2π
forg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?bibtexEntry@651.15:651.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaò_ ò(j∫
borg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?entries@665.29:665.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô ô($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô ô(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô ô(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô< ô(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô. ô(92¥
aorg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?result@664.21:664.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô' ô(-Ò
`org.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?entry@666.17:666.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö ö("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö ö(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö, ö(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö! ö()2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.filenameIsUnmodifiedDuringWrite()?entries@665.29:665.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaö ö( Â#
Eorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java£	 £(!"
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">addFieldWithLongerLength</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*addFieldWithLongerLength2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆH Æ(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ< Ø(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ. Ø(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞, ∞(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞! ∞()2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≥ ≥(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂ ∂(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡, ¡(42Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆR Æ(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ/ Æ(F2≤
_org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?bibtexEntry@677.15:677.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ_ Æ(j2≠
Zorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?result@686.21:686.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ' Ø(-2Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?entries@687.29:687.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞( 2¨
Yorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?entry@688.17:688.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≥ ≥(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂ ∂(2¨
Yorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?entry@688.17:688.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂ ∂("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∂$ ∂(-2Ø
\org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?expected@697.15:697.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡(+2π
_org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?bibtexEntry@677.15:677.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java• •(2¥
Zorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?result@686.21:686.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ(2µ
[org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?entries@687.29:687.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ Ø($2≥
Yorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?entry@688.17:688.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞(2∂
\org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?expected@697.15:697.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaπ π(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java£ £(£
_org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?bibtexEntry@677.15:677.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java• •("
typeString"
isFinalfalse"÷
declarationString¿<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = OS.NEWLINE + OS.NEWLINE + "@Article{test," + OS.NEWLINE + "  author =  {BlaBla}<mark class="modifier">,</mark>" + OS.NEWLINE + "  journal = {International Journal of Something}<mark class="modifier">,</mark>" + OS.NEWLINE + "  number =  {1}<mark class="modifier">,</mark>" + OS.NEWLINE + "  note =    {some note}<mark class="modifier">,</mark>" + OS.NEWLINE + "}"*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java• •(ò	
Zorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?result@686.21:686.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆH Æ(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆR Æ(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ/ Æ(F2≤
_org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?bibtexEntry@677.15:677.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ_ Æ(j¨
[org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?entries@687.29:687.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ Ø($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ Ø(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ Ø(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ< Ø(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ. Ø(92≠
Zorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?result@686.21:686.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaØ' Ø(-„
Yorg.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?entry@688.17:688.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞, ∞(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞! ∞()2Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?entries@687.29:687.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∞ ∞( ˆ
\org.jabref.logic.bibtex.BibEntryWriterTest.addFieldWithLongerLength()?expected@697.15:697.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaπ π("
typeString"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = OS.NEWLINE + "@Article{test," + OS.NEWLINE + "  author       = {BlaBla}<mark class="modifier">,</mark>" + OS.NEWLINE + "  journal      = {International Journal of Something}<mark class="modifier">,</mark>" + OS.NEWLINE + "  note         = {some note}<mark class="modifier">,</mark>" + OS.NEWLINE + "  number       = {1}<mark class="modifier">,</mark>" + OS.NEWLINE + "  howpublished = {asdf}<mark class="modifier">,</mark>" + OS.NEWLINE + "}" + OS.NEWLINE*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaπ π(‘
Borg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≈	 ≈("
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">doNotWriteEmptyFields</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*doNotWriteEmptyFields2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java« «(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java» »(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java   (2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java–, –(42£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆(%2©
Vorg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()?entry@710.17:710.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java« «(2©
Vorg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()?entry@710.17:710.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java» »(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java   (2©
Vorg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()?entry@710.17:710.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java   ("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java $  (-2¨
Yorg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()?expected@716.15:716.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java– –(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java– –(+2∞
Vorg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()?entry@710.17:710.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆(2≥
Yorg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()?expected@716.15:716.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≈ ≈(Ç
Vorg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()?entry@710.17:710.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆("
typeBibEntry"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Article)*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆(%Ω
Yorg.jabref.logic.bibtex.BibEntryWriterTest.doNotWriteEmptyFields()?expected@716.15:716.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã("
typeString"
isFinalfalse"˘
declarationString„<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = "@Article{<mark class="modifier">,</mark>" + OS.NEWLINE + "  note   = {some note}<mark class="modifier">,</mark>" + OS.NEWLINE + "}" + OS.NEWLINE*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã(œ
\org.jabref.logic.bibtex.BibEntryWriterTest.writeThrowsErrorIfFieldContainsUnbalancedBraces()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‘	 ‘(8"
isFinalfalse"œ
declarationStringπ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">writeThrowsErrorIfFieldContainsUnbalancedBraces</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*/writeThrowsErrorIfFieldContainsUnbalancedBraces2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷ ÷(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÿ= ÿ(B2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’ ’(%2√
porg.jabref.logic.bibtex.BibEntryWriterTest.writeThrowsErrorIfFieldContainsUnbalancedBraces()?entry@725.17:725.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java÷ ÷(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÿ. ÿ(<2√
porg.jabref.logic.bibtex.BibEntryWriterTest.writeThrowsErrorIfFieldContainsUnbalancedBraces()?entry@725.17:725.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÿC ÿ(H2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÿJ ÿ(S2 
porg.jabref.logic.bibtex.BibEntryWriterTest.writeThrowsErrorIfFieldContainsUnbalancedBraces()?entry@725.17:725.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’ ’(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‘ ‘(ú
porg.jabref.logic.bibtex.BibEntryWriterTest.writeThrowsErrorIfFieldContainsUnbalancedBraces()?entry@725.17:725.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’ ’("
typeBibEntry"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Article)*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’ ’(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java’ ’(%∏ 
Norg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‹	 ‹(*"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripWithPrecedingCommentTest</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!roundTripWithPrecedingCommentTest2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍH Í(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ< Î(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ. Î(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ, Ï(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ! Ï()2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ Ô(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÒ/ Ò(72Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍR Í(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ/ Í(F2ª
horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?bibtexEntry@734.15:734.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ_ Í(j2∂
corg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?result@746.21:746.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ' Î(-2∑
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?entries@747.29:747.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ Ï( 2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ Ô(2µ
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?entry@748.17:748.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ Ô("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ$ Ô(-2ª
horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?bibtexEntry@734.15:734.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÒ Ò( 2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÒ" Ò(.2¬
horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?bibtexEntry@734.15:734.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaﬁ ﬁ(2Ω
corg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?result@746.21:746.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í(2æ
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?entries@747.29:747.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ Î($2º
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?entry@748.17:748.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ Ï(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‹ ‹(ı
horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?bibtexEntry@734.15:734.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaﬁ ﬁ("
typeString"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    % Some random comment that should stay here
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaﬁ ﬁ(™	
corg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?result@746.21:746.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ Í(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍH Í(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍR Í(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ/ Í(F2ª
horg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?bibtexEntry@734.15:734.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÍ_ Í(jæ
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?entries@747.29:747.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ Î($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ Î(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ Î(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ< Î(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ. Î(92∂
corg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?result@746.21:746.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÎ' Î(-ı
borg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?entry@748.17:748.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ Ï("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ Ï(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ, Ï(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ! Ï()2∑
dorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentTest()?entries@747.29:747.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÏ Ï( µ&
]org.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaı	 ı(9"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">roundTripWithPrecedingCommentAndModificationTest</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*0roundTripWithPrecedingCommentAndModificationTest2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉH É(M2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ< Ñ(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ. Ñ(92l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ, Ö(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ! Ö()2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaà à(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô, ô(42Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉR É(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ/ É(F2 
worg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?bibtexEntry@759.15:759.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ_ É(j2≈
rorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?result@771.21:771.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ' Ñ(-2∆
sorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?entries@772.29:772.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ Ö( 2ƒ
qorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?entry@773.17:773.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaà à(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã(2ƒ
qorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?entry@773.17:773.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã ã("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaã$ ã(-2«
torg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?expected@782.15:782.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô ô(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaô ô(+2—
worg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?bibtexEntry@759.15:759.26DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˜ ˜(2Ã
rorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?result@771.21:771.27DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ É(2Õ
sorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?entries@772.29:772.36DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ Ñ($2À
qorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?entry@773.17:773.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ Ö(2Œ
torg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?expected@782.15:782.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé é(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaı ı(Ñ
worg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?bibtexEntry@759.15:759.26VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˜ ˜("
typeString"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    % Some random comment that should stay here
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Number                   = {1}<mark class="modifier">,</mark>
      Note                     = {some note}
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*bibtexEntry2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˜ ˜(»	
rorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?result@771.21:771.27VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ É("
typeParserResult"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = new BibtexParser(importFormatPreferences).parse(new StringReader(bibtexEntry))*result2y
&org.jabref.logic.importer.ParserResultTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ É(2ö
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉH É(M2Ü
3java.io.StringReader.StringReader(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉR É(^2°
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ/ É(F2 
worg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?bibtexEntry@759.15:759.26CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÉ_ É(j‹
sorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?entries@772.29:772.36VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ Ñ($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2g
java.util.CollectionTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ Ñ(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ Ñ(2Ö
2org.jabref.model.database.BibDatabase.getEntries()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ< Ñ(F2á
4org.jabref.logic.importer.ParserResult.getDatabase()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ. Ñ(92≈
rorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?result@771.21:771.27CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÑ' Ñ(-ì
qorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?entry@773.17:773.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ Ö("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ Ö(2l
java.util.Iterator.next()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ, Ö(02r
java.util.Collection.iterator()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ! Ö()2∆
sorg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?entries@772.29:772.36CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÖ Ö( ◊
torg.jabref.logic.bibtex.BibEntryWriterTest.roundTripWithPrecedingCommentAndModificationTest()?expected@782.15:782.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé é("
typeString"
isFinalfalse"¯
declarationString‚<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    % Some random comment that should stay here
    @Article{test,
      author  = {John Doe}<mark class="modifier">,</mark>
      journal = {International Journal of Something}<mark class="modifier">,</mark>
      note    = {some note}<mark class="modifier">,</mark>
      number  = {1}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé é(≤(
Dorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù	 ù( "
isFinalfalse"Ü
declarationString<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">alphabeticSerialization</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*alphabeticSerialization2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java† †(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java° °(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¢ ¢(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java£ £(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java• •(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶ ¶(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©(2Ò
ùorg.jabref.logic.bibtex.BibEntryWriter.write(org.jabref.model.entry.BibEntry, org.jabref.logic.exporter.BibWriter, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´ ´(2r
java.io.StringWriter.toString()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaº, º(42£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû û(%2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java† †(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java° °(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¢ ¢(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java£ £(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java• •(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¶ ¶(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java® ®(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java© ©(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´ ´(2´
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´ ´("2ì
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java´$ ´(-2Æ
[org.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?expected@814.15:814.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaº º(2ñ
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaº º(+2≤
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû û(2µ
[org.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?expected@814.15:814.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù ù(Ñ
Xorg.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?entry@798.17:798.22VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû û("
typeBibEntry"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Article)*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû û(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû û(%¥
[org.jabref.logic.bibtex.BibEntryWriterTest.alphabeticSerialization()?expected@814.15:814.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ("
typeString"
isFinalfalse"Ó
declarationStringÿ<mark class="modifier"> </mark>String <mark class="class-field">expected</mark> = """
    @Article{<mark class="modifier">,</mark>
      author       = {Foo Bar}<mark class="modifier">,</mark>
      date         = {2019-10-16}<mark class="modifier">,</mark>
      journaltitle = {International Journal of Something}<mark class="modifier">,</mark>
      title        = {Title}<mark class="modifier">,</mark>
      note         = {some note}<mark class="modifier">,</mark>
      number       = {1}<mark class="modifier">,</mark>
      chapter      = {chapter}<mark class="modifier">,</mark>
      year         = {2019}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÆ Æ(≠C
9org.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿	 ¿("
isFinalfalse"˚
declarationStringÂ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">serializeAll</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*serializeAll2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√ √(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ ƒ(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≈ ≈(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java… …(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java   (2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ Õ(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java“ “(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java” ”(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‘ ‘(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊ ◊(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÿ ÿ(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄ ⁄(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €(2„
èorg.jabref.logic.bibtex.BibEntryWriter.serializeAll(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java›' ›(32j
java.util.List.of(E, E)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java›9 ›(;2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡(&2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaœ œ(&2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java√ √(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaƒ ƒ(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java≈ ≈(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java∆ ∆(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java… …(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java   (2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÃ Ã(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÕ Õ(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java— —(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java“ “(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java” ”(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‘ ‘(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java◊ ◊(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÿ ÿ(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java⁄ ⁄(2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java€ €(2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java› ›(&2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java›< ›(B2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java›D ›(J2§
Qorg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?expected1@864.15:864.24CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝ ˝(2§
Qorg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?expected2@879.15:879.24CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝. ˝(72°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?output@861.15:861.21CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java˝9 ˝(?2®
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡(2®
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaœ œ(2®
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?output@861.15:861.21DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java› ›(2´
Qorg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?expected1@864.15:864.24DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‡ ‡(2´
Qorg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?expected2@879.15:879.24DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ Ô(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¿ ¿(¸
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡("
typeBibEntry"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry1</mark> = new BibEntry(StandardEntryType.Article)*entry12r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java¡ ¡(&˘
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaœ œ("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry2</mark> = new BibEntry(StandardEntryType.Book)*entry22r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaœ œ(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaœ œ(&æ

Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?output@861.15:861.21VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java› ›("
typeString"
isFinalfalse"“
declarationStringº<mark class="modifier"> </mark>String <mark class="class-field">output</mark> = bibEntryWriter.serializeAll(List.of(entry1, entry2)<mark class="modifier">,</mark> BibDatabaseMode.BIBLATEX)*output2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java› ›(2„
èorg.jabref.logic.bibtex.BibEntryWriter.serializeAll(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.database.BibDatabaseMode)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java›' ›(32j
java.util.List.of(E, E)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java›9 ›(;2ò
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java› ›(&2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry1@833.17:833.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java›< ›(B2°
Norg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?entry2@847.17:847.23CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java›D ›(Jß
Qorg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?expected1@864.15:864.24VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‡ ‡("
typeString"
isFinalfalse"Í
declarationString‘<mark class="modifier"> </mark>String <mark class="class-field">expected1</mark> = """
    @Article{<mark class="modifier">,</mark>
      author       = {Journal Author}<mark class="modifier">,</mark>
      date         = {2020-11-16}<mark class="modifier">,</mark>
      journaltitle = {Journal of Words}<mark class="modifier">,</mark>
      title        = {Entry Title}<mark class="modifier">,</mark>
      note         = {some note}<mark class="modifier">,</mark>
      number       = {1}<mark class="modifier">,</mark>
      chapter      = {chapter}<mark class="modifier">,</mark>
      year         = {2019}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*	expected12c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java‡ ‡(å
Qorg.jabref.logic.bibtex.BibEntryWriterTest.serializeAll()?expected2@879.15:879.24VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ Ô("
typeString"
isFinalfalse"œ
declarationStringπ<mark class="modifier"> </mark>String <mark class="class-field">expected2</mark> = """
    @Book{<mark class="modifier">,</mark>
      author    = {John Book}<mark class="modifier">,</mark>
      date      = {2017-12-20}<mark class="modifier">,</mark>
      title     = {Entry Title}<mark class="modifier">,</mark>
      chapter   = {chapter}<mark class="modifier">,</mark>
      note      = {some note}<mark class="modifier">,</mark>
      number    = {1}<mark class="modifier">,</mark>
      booktitle = {The Big Book of Books}<mark class="modifier">,</mark>
      year      = {2020}<mark class="modifier">,</mark>
    }
    """.replace("\n"<mark class="modifier">,</mark> OS.NEWLINE)*	expected22c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÔ Ô(·
Jorg.jabref.logic.bibtex.BibEntryWriterTest.testGetFormattedFieldNameData()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä(:"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">testGetFormattedFieldNameData</mark>()"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeStream<Arguments>*testGetFormattedFieldNameData2q
java.util.stream.StreamRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä(2é
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaÄ Ä(Ç
iorg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç	 ç("
isFinalfalse"¶
declarationStringê <br><mark class="annotation">@MethodSource("testGetFormattedFieldNameData")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getFormattedFieldName</mark>(String expected<mark class="modifier"><mark class="modifier">,</mark></mark> String fieldName<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> indent)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getFormattedFieldName2ô
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé# é(-2∏
eorg.jabref.logic.bibtex.BibEntryWriter.getFormattedFieldName(org.jabref.model.entry.field.Field, int)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaè. è(C2∆
sorg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!fieldNameCALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé. é(72≈
rorg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!expectedCALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaè è(2–
}org.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)?field@910.14:910.19CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaèD è(I2√
porg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!indentCALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaèK è(Q2 
rorg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!expected	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç& ç(.2À
sorg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!fieldName	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç7 ç(@2»
porg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!indent	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaçF ç(L2◊
}org.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)?field@910.14:910.19DECLARATIONI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé é(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç ç(‡
}org.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)?field@910.14:910.19VARIABLEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé é("
typeField"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>Field <mark class="class-field">field</mark> = FieldFactory.parseField(fieldName)*field2u
"org.jabref.model.entry.field.FieldTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé é(2ô
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé# é(-2∆
sorg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!fieldNameCALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaé. é(7Å
rorg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!expected	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç& ç(."
typeString"
isFinalfalse"$
declarationStringString expected*expected2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç ç(%Ñ
sorg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!fieldName	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç7 ç(@"
typeString"
isFinalfalse"%
declarationStringString fieldName*	fieldName2c
java.lang.StringTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaç0 ç(6Ü
porg.jabref.logic.bibtex.BibEntryWriterTest.getFormattedFieldName(java.lang.String, java.lang.String, int)!indent	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaçF ç(L"
typeint"
isFinalfalse"=
declarationString(<mark class="modifier">int</mark> indent*indent2V
intTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaçB ç(E–
Porg.jabref.logic.bibtex.BibEntryWriterTest.testGetLengthOfLongestFieldNameData()METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(@"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">testGetLengthOfLongestFieldNameData</mark>()"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeStream<Arguments>*#testGetLengthOfLongestFieldNameData2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî/ î(82ô
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaîF î(P2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaó ó("2î
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javañ ñ((2ò
Eorg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaï> ï(C2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaî$ î(,2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaï$ ï(,2q
java.util.stream.StreamRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(2é
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaí í(Ú
lorg.jabref.logic.bibtex.BibEntryWriterTest.getLengthOfLongestFieldName(int, org.jabref.model.entry.BibEntry)METHODI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù	 ù($"
isFinalfalse"Â
declarationStringœ <br><mark class="annotation">@MethodSource("testGetLengthOfLongestFieldNameData")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getLengthOfLongestFieldName</mark>(<mark class="modifier">int</mark> expected<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getLengthOfLongestFieldName2∂
corg.jabref.logic.bibtex.BibEntryWriter.getLengthOfLongestFieldName(org.jabref.model.entry.BibEntry)CALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû. û(I2»
uorg.jabref.logic.bibtex.BibEntryWriterTest.getLengthOfLongestFieldName(int, org.jabref.model.entry.BibEntry)!expectedCALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaû û(2≈
rorg.jabref.logic.bibtex.BibEntryWriterTest.getLengthOfLongestFieldName(int, org.jabref.model.entry.BibEntry)!entryCALLI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaûJ û(O2Õ
uorg.jabref.logic.bibtex.BibEntryWriterTest.getLengthOfLongestFieldName(int, org.jabref.model.entry.BibEntry)!expected	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù) ù(12 
rorg.jabref.logic.bibtex.BibEntryWriterTest.getLengthOfLongestFieldName(int, org.jabref.model.entry.BibEntry)!entry	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù< ù(A2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù ù(è
uorg.jabref.logic.bibtex.BibEntryWriterTest.getLengthOfLongestFieldName(int, org.jabref.model.entry.BibEntry)!expected	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù) ù(1"
typeint"
isFinalfalse"?
declarationString*<mark class="modifier">int</mark> expected*expected2V
intTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù% ù((é
rorg.jabref.logic.bibtex.BibEntryWriterTest.getLengthOfLongestFieldName(int, org.jabref.model.entry.BibEntry)!entry	PARAMETERI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù< ù(A"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.javaù3 ù(;≤
Norg.jabref.logic.bibtex.BibEntryWriterTest?importFormatPreferences@42.43:42.66VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java*+ *(B"
isFinalfalse"
typeImportFormatPreferences"±
declarationStringõ<mark class="modifier">private </mark><mark class="modifier">static </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStatictrue"
accessprivate*importFormatPreferences2h
ImportFormatPreferencesTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java* *(*Ä
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43VALUEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java+ +(+"
isFinaltrue"
typeStringWriter"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">final </mark>StringWriter <mark class="class-field">stringWriter</mark> = new StringWriter();"
isStaticfalse"
accessprivate*stringWriter2e
java.io.StringWriterTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java+ +(2t
#java.io.StringWriter.StringWriter()CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java+2 +(>π
@org.jabref.logic.bibtex.BibEntryWriterTest?bibWriter@44.22:44.31VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java, ,("
isFinalfalse"
type	BibWriter"õ
declarationStringÖ<mark class="modifier">private </mark>BibWriter <mark class="class-field">bibWriter</mark> = new BibWriter(stringWriter, OS.NEWLINE);"
isStaticfalse"
accessprivate*	bibWriter2t
#org.jabref.logic.exporter.BibWriterTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java, ,(2†
Oorg.jabref.logic.exporter.BibWriter.BibWriter(java.io.Writer, java.lang.String)CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java,& ,(/2î
Corg.jabref.logic.bibtex.BibEntryWriterTest?stringWriter@43.31:43.43CALLG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java,0 ,(<Ó
Eorg.jabref.logic.bibtex.BibEntryWriterTest?bibEntryWriter@45.27:45.41VARIABLEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java- -()"
isFinalfalse"
typeBibEntryWriter"y
declarationStringd<mark class="modifier">private </mark>BibEntryWriter <mark class="class-field">bibEntryWriter</mark>"
isStaticfalse"
accessprivate*bibEntryWriter2w
&org.jabref.logic.bibtex.BibEntryWriterTYPEG
=src\test\java\org\jabref\logic\bibtex\BibEntryWriterTest.java- -(