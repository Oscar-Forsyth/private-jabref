
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaù
6org.jabref.logic.bibtex.comparator.EntryComparatorTestCLASSS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java
 
("-
package"org.jabref.logic.bibtex.comparator"
isFinalfalse"
inner classfalse"

isAbstractfalse"k
declarationStringV<mark class="modifier"> </mark><mark class="modifier">class </mark>EntryComparatorTest"
accesspackage_private*EntryComparatorTest2Ω
Yorg.jabref.logic.bibtex.comparator.EntryComparatorTest.recognizeIdenticalObjectsAsEqual()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java	 ()2æ
Zorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java	 (*2Ã
horg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java	 (82»
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java*	 *(42«
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java5	 5(32∏
Torg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaA	 A($2π
Uorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaM	 M(%2∏
Torg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaW	 W($2π
Uorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java`	 `(%2≤
Norg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithCrLfFields()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaj	 j(2∞
Lorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithLfFields()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javas	 s(2∏
Torg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithMixedLineEndings()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java|	 |($2›
worg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÖ	 Ö(G2—
korg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaé	 é(;2”
morg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaó	 ó(=ï
Yorg.jabref.logic.bibtex.comparator.EntryComparatorTest.recognizeIdenticalObjectsAsEqual()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java	 ()"
isFinalfalse"≈
declarationStringØ <br><mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">recognizeIdenticalObjectsAsEqual</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* recognizeIdenticalObjectsAsEqual2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaO (V2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (%2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (+2»
korg.jabref.logic.bibtex.comparator.EntryComparatorTest.recognizeIdenticalObjectsAsEqual()?entry@15.17:15.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaW (\2»
korg.jabref.logic.bibtex.comparator.EntryComparatorTest.recognizeIdenticalObjectsAsEqual()?entry@15.17:15.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java^ (c2œ
korg.jabref.logic.bibtex.comparator.EntryComparatorTest.recognizeIdenticalObjectsAsEqual()?entry@15.17:15.22DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (ı
korg.jabref.logic.bibtex.comparator.EntryComparatorTest.recognizeIdenticalObjectsAsEqual()?entry@15.17:15.22VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java ("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (%®
Zorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java	 (*"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareAuthorFieldBiggerAscending</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!compareAuthorFieldBiggerAscending2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java) (02á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (&2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (&2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java. (=2”
vorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()?entryComparator@25.24:25.39CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java ((2 
morg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()?entry1@21.17:21.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java1 (72 
morg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()?entry2@23.17:23.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java9 (?2—
morg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()?entry1@21.17:21.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2—
morg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()?entry2@23.17:23.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2⁄
vorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()?entryComparator@25.24:25.39DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java ('2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (Í
morg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()?entry1@21.17:21.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java ("
typeBibEntry"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry1</mark> = new BibEntry().withField(StandardField.AUTHOR, "Stephen King")*entry12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (&Ì
morg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()?entry2@23.17:23.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java ("
typeBibEntry"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry2</mark> = new BibEntry().withField(StandardField.AUTHOR, "Henning Mankell")*entry22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (&ß
vorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareAuthorFieldBiggerAscending()?entryComparator@25.24:25.39VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java ('"
typeEntryComparator"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>EntryComparator <mark class="class-field">entryComparator</mark> = new EntryComparator(<mark class="modifier">false</mark><mark class="modifier">,</mark> <mark class="modifier">false</mark><mark class="modifier">,</mark> StandardField.AUTHOR)*entryComparator2è
2org.jabref.logic.bibtex.comparator.EntryComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java. (=®
horg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java	 (8"
isFinalfalse"œ
declarationStringπ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bothEntriesHaveNotSetTheFieldToCompareAscending</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*/bothEntriesHaveNotSetTheFieldToCompareAscending2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java! !(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java# #(2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java&) &(02á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java   (&2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java" "(&2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java$. $(=2‚
Ñorg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()?entryComparator@36.24:36.39CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java& &((2ÿ
{org.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()?entry1@32.17:32.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java&1 &(72ÿ
{org.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()?entry2@34.17:34.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java&9 &(?2ﬂ
{org.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()?entry1@32.17:32.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java   (2ﬂ
{org.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()?entry2@34.17:34.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java" "(2È
Ñorg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()?entryComparator@36.24:36.39DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java$ $('2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (ã
{org.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()?entry1@32.17:32.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java   ("
typeBibEntry"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry1</mark> = new BibEntry().withField(StandardField.BOOKTITLE, "Stark - The Dark Half (1989)")*entry12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java   (2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java! !(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java   (&Å
{org.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()?entry2@34.17:34.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java" "("
typeBibEntry"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry2</mark> = new BibEntry().withField(StandardField.COMMENTATOR, "Some Commentator")*entry22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java" "(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java# #(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java" "(&µ
Ñorg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesHaveNotSetTheFieldToCompareAscending()?entryComparator@36.24:36.39VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java$ $('"
typeEntryComparator"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>EntryComparator <mark class="class-field">entryComparator</mark> = new EntryComparator(<mark class="modifier">false</mark><mark class="modifier">,</mark> <mark class="modifier">false</mark><mark class="modifier">,</mark> StandardField.TITLE)*entryComparator2è
2org.jabref.logic.bibtex.comparator.EntryComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java$ $(2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java$. $(=Ñ
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java*	 *(4"
isFinalfalse"À
declarationStringµ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">secondEntryHasNotSetFieldToCompareAscending</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*+secondEntryHasNotSetFieldToCompareAscending2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java, ,(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java. .(2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java1( 1(/2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java+ +(&2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java- -(&2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java/. /(=2ﬁ
Äorg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()?entryComparator@47.24:47.39CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java1 1('2‘
worg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()?entry1@43.17:43.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java10 1(62‘
worg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()?entry2@45.17:45.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java18 1(>2€
worg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()?entry1@43.17:43.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java+ +(2€
worg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()?entry2@45.17:45.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java- -(2Â
Äorg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()?entryComparator@47.24:47.39DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java/ /('2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java* *(É
worg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()?entry1@43.17:43.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java+ +("
typeBibEntry"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry1</mark> = new BibEntry().withField(StandardField.TITLE, "Stark - The Dark Half (1989)")*entry12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java+ +(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java, ,(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java+ +(&˝
worg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()?entry2@45.17:45.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java- -("
typeBibEntry"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry2</mark> = new BibEntry().withField(StandardField.COMMENTATOR, "Some Commentator")*entry22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java- -(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java. .(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java- -(&±
Äorg.jabref.logic.bibtex.comparator.EntryComparatorTest.secondEntryHasNotSetFieldToCompareAscending()?entryComparator@47.24:47.39VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java/ /('"
typeEntryComparator"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>EntryComparator <mark class="class-field">entryComparator</mark> = new EntryComparator(<mark class="modifier">false</mark><mark class="modifier">,</mark> <mark class="modifier">false</mark><mark class="modifier">,</mark> StandardField.TITLE)*entryComparator2è
2org.jabref.logic.bibtex.comparator.EntryComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java/ /(2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java/. /(=˘
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java5	 5(3"
isFinalfalse" 
declarationString¥<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">firstEntryHasNotSetFieldToCompareAscending</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid**firstEntryHasNotSetFieldToCompareAscending2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java7 7(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java9 9(2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java=) =(02á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java6 6(&2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java8 8(&2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java;. ;(=2‹
org.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()?entryComparator@59.24:59.39CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java= =((2”
vorg.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()?entry1@54.17:54.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java=1 =(72”
vorg.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()?entry2@56.17:56.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java=9 =(?2⁄
vorg.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()?entry1@54.17:54.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java6 6(2⁄
vorg.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()?entry2@56.17:56.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java8 8(2„
org.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()?entryComparator@59.24:59.39DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java; ;('2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java5 5(¸
vorg.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()?entry1@54.17:54.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java6 6("
typeBibEntry"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry1</mark> = new BibEntry().withField(StandardField.COMMENTATOR, "Some Commentator")*entry12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java6 6(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java7 7(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java6 6(&Ç
vorg.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()?entry2@56.17:56.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java8 8("
typeBibEntry"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry2</mark> = new BibEntry().withField(StandardField.TITLE, "Stark - The Dark Half (1989)")*entry22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java8 8(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java9 9(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java8 8(&Ø
org.jabref.logic.bibtex.comparator.EntryComparatorTest.firstEntryHasNotSetFieldToCompareAscending()?entryComparator@59.24:59.39VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java; ;('"
typeEntryComparator"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>EntryComparator <mark class="class-field">entryComparator</mark> = new EntryComparator(<mark class="modifier">false</mark><mark class="modifier">,</mark> <mark class="modifier">false</mark><mark class="modifier">,</mark> StandardField.TITLE)*entryComparator2è
2org.jabref.logic.bibtex.comparator.EntryComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java; ;(2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java;. ;(=Ú
Torg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaA	 A($"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bothEntriesNumericAscending</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*bothEntriesNumericAscending2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaC C(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaE E(2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaI) I(02á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaB B(&2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaD D(&2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaG. G(=2Õ
porg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()?entryComparator@71.24:71.39CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaI I((2ƒ
gorg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()?entry1@66.17:66.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaI1 I(72ƒ
gorg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()?entry2@68.17:68.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaI9 I(?2À
gorg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()?entry1@66.17:66.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaB B(2À
gorg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()?entry2@68.17:68.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaD D(2‘
porg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()?entryComparator@71.24:71.39DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaG G('2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaA A(⁄
gorg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()?entry1@66.17:66.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaB B("
typeBibEntry"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry1</mark> = new BibEntry().withField(StandardField.EDITION, "1")*entry12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaB B(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaC C(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaB B(&⁄
gorg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()?entry2@68.17:68.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaD D("
typeBibEntry"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry2</mark> = new BibEntry().withField(StandardField.EDITION, "3")*entry22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaD D(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaE E(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaD D(&¢
porg.jabref.logic.bibtex.comparator.EntryComparatorTest.bothEntriesNumericAscending()?entryComparator@71.24:71.39VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaG G('"
typeEntryComparator"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>EntryComparator <mark class="class-field">entryComparator</mark> = new EntryComparator(<mark class="modifier">false</mark><mark class="modifier">,</mark> <mark class="modifier">false</mark><mark class="modifier">,</mark> StandardField.EDITION)*entryComparator2è
2org.jabref.logic.bibtex.comparator.EntryComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaG G(2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaG. G(=¬
Uorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaM	 M(%"
isFinalfalse"º
declarationString¶<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareObjectsByKeyAscending</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*compareObjectsByKeyAscending2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaO O( 2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaQ Q( 2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaRS R(Z2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaST S([2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaN N("2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaP P("2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaR R(+2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaS S(,2¡
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()?e1@78.17:78.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaR[ R(]2¡
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()?e2@80.17:80.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaR_ R(a2¡
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()?e2@80.17:80.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaS\ S(^2¡
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()?e1@78.17:78.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaS` S(b2»
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()?e1@78.17:78.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaN N(2»
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()?e2@80.17:80.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaP P(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaM M(®
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()?e1@78.17:78.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaN N("
typeBibEntry"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry().withCitationKey("Mayer2019b")*e12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaN N(2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaO O( 2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaN N("®
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyAscending()?e2@80.17:80.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaP P("
typeBibEntry"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry().withCitationKey("Mayer2019a")*e22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaP P(2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaQ Q( 2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaP P("ò
Torg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaW	 W($"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareObjectsByKeyWithNull</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*compareObjectsByKeyWithNull2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaY Y( 2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java[S [(Z2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java\T \([2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaX X("2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaZ Z("2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java[ [(+2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java\ \(,2¿
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()?e1@88.17:88.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java[[ [(]2¿
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()?e2@90.17:90.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java[_ [(a2¿
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()?e2@90.17:90.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java\\ \(^2¿
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()?e1@88.17:88.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java\` \(b2«
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()?e1@88.17:88.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaX X(2«
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()?e2@90.17:90.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaZ Z(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaW W(ß
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()?e1@88.17:88.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaX X("
typeBibEntry"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry().withCitationKey("Mayer2019b")*e12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaX X(2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaY Y( 2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaX X("Á
corg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithNull()?e2@90.17:90.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaZ Z("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry()*e22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaZ Z(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaZ Z("¬
Uorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java`	 `(%"
isFinalfalse"º
declarationString¶<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareObjectsByKeyWithBlank</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*compareObjectsByKeyWithBlank2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javab b( 2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javad d( 2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaeS e(Z2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javafT f([2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaa a("2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javac c("2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javae e(+2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaf f(,2¡
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()?e1@97.17:97.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javae[ e(]2¡
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()?e2@99.17:99.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javae_ e(a2¡
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()?e2@99.17:99.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaf\ f(^2¡
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()?e1@97.17:97.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaf` f(b2»
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()?e1@97.17:97.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaa a(2»
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()?e2@99.17:99.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javac c(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java` `(®
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()?e1@97.17:97.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaa a("
typeBibEntry"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry().withCitationKey("Mayer2019b")*e12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaa a(2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javab b( 2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaa a("ü
dorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareObjectsByKeyWithBlank()?e2@99.17:99.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javac c("
typeBibEntry"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry().withCitationKey(" ")*e22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javac c(2û
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javad d( 2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javac c("ô
Norg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithCrLfFields()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaj	 j("
isFinalfalse"µ
declarationStringü<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareWithCrLfFields</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*compareWithCrLfFields2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javal l(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javan n(2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaoS o(Z2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javak k("2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javam m("2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javao o(+2º
_org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithCrLfFields()?e1@107.17:107.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javao[ o(]2º
_org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithCrLfFields()?e2@109.17:109.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javao_ o(a2√
_org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithCrLfFields()?e1@107.17:107.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javak k(2√
_org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithCrLfFields()?e2@109.17:109.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javam m(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaj j(Ë
_org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithCrLfFields()?e1@107.17:107.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javak k("
typeBibEntry"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\r\n\r\nline3\r\n\r\nline5")*e12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javak k(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javal l(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javak k("Ë
_org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithCrLfFields()?e2@109.17:109.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javam m("
typeBibEntry"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\r\n\r\nline3\r\n\r\nline5")*e22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javam m(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javan n(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javam m("ã
Lorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithLfFields()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javas	 s("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareWithLfFields</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*compareWithLfFields2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javau u(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaw w(2Ÿ
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaxS x(Z2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javat t("2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javav v("2’
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javax x(+2∫
]org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithLfFields()?e1@116.17:116.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javax[ x(]2∫
]org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithLfFields()?e2@118.17:118.19CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javax_ x(a2¡
]org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithLfFields()?e1@116.17:116.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javat t(2¡
]org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithLfFields()?e2@118.17:118.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javav v(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javas s(ﬁ
]org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithLfFields()?e1@116.17:116.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javat t("
typeBibEntry"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\n\nline3\n\nline5")*e12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javat t(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javau u(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javat t("ﬁ
]org.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithLfFields()?e2@118.17:118.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javav v("
typeBibEntry"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\n\nline3\n\nline5")*e22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javav v(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaw w(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javav v("Õ
Torg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithMixedLineEndings()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java|	 |($"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareWithMixedLineEndings</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*compareWithMixedLineEndings2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java~ ~(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÄ Ä(2€
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÅT Å([2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java} }("2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java ("2◊
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÅ Å(,2ƒ
eorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithMixedLineEndings()?e1@125.17:125.19CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÅ\ Å(^2ƒ
eorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithMixedLineEndings()?e2@127.17:127.19CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÅ` Å(b2…
eorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithMixedLineEndings()?e1@125.17:125.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java} }(2…
eorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithMixedLineEndings()?e2@127.17:127.19DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java| |(Ê
eorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithMixedLineEndings()?e1@125.17:125.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java} }("
typeBibEntry"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\n\nline3\n\nline5")*e12|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java} }(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java~ ~(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java} }("
eorg.jabref.logic.bibtex.comparator.EntryComparatorTest.compareWithMixedLineEndings()?e2@127.17:127.19VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java ("
typeBibEntry"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\r\n\r\nline3\r\n\r\nline5")*e22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java (2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÄ Ä(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.java ("‘
worg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÖ	 Ö(G"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*>withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaá á(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaâ â(2€
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaäS ä(Z2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÜ Ü("2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaà à("2◊
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaä ä(,2Ë
àorg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey()?e1@134.17:134.19CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaä[ ä(]2Ë
àorg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey()?e2@136.17:136.19CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaä_ ä(a2Ô
àorg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey()?e1@134.17:134.19DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÜ Ü(2Ô
àorg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey()?e2@136.17:136.19DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaà à(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÖ Ö(Ü
àorg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey()?e1@134.17:134.19VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÜ Ü("
typeBibEntry"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry().withField(StandardField.AUTHOR, "Stephen King")*e12~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÜ Ü(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaá á(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaÜ Ü("˙
àorg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithEmptyAuthorWhenSortingWithNonExistentKey()?e2@136.17:136.19VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaà à("
typeBibEntry"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry().withField(StandardField.AUTHOR, "")*e22~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaà à(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaâ â(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaà à("¸
korg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaé	 é(;"
isFinalfalse"“
declarationStringº<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*2withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaê ê(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaí í(2€
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaìP ì(W2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaè è("2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaë ë("2◊
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaì ì(,2€
|org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor()?e1@143.17:143.19CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaìX ì(Z2€
|org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor()?e2@145.17:145.19CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaì\ ì(^2‚
|org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor()?e1@143.17:143.19DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaè è(2‚
|org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor()?e2@145.17:145.19DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaë ë(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaé é(˘
|org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor()?e1@143.17:143.19VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaè è("
typeBibEntry"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry().withField(StandardField.AUTHOR, "Stephen King")*e12~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaè è(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaê ê(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaè è("Ì
|org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeEmptyAuthorWhenSortingWithAuthor()?e2@145.17:145.19VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaë ë("
typeBibEntry"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry().withField(StandardField.AUTHOR, "")*e22~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaë ë(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaí í(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaë ë("…
morg.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaó	 ó(="
isFinalfalse"‘
declarationStringæ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*4withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaô ô(2€
|org.jabref.logic.bibtex.comparator.EntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaõP õ(W2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaò ò("2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaö ö("2◊
xorg.jabref.logic.bibtex.comparator.EntryComparator.EntryComparator(boolean, boolean, org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaõ õ(+2›
~org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor()?e1@152.17:152.19CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaõX õ(Z2›
~org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor()?e2@154.17:154.19CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaõ\ õ(^2‰
~org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor()?e1@152.17:152.19DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaò ò(2‰
~org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor()?e2@154.17:154.19DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaö ö(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaó ó(˚
~org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor()?e1@152.17:152.19VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaò ò("
typeBibEntry"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry().withField(StandardField.AUTHOR, "Stephen King")*e12~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaò ò(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaô ô(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaò ò("à
~org.jabref.logic.bibtex.comparator.EntryComparatorTest.withAuthorIsBeforeWithoutAuthorWhenSortingWithAuthor()?e2@154.17:154.19VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaö ö("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry()*e22~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaö ö(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\EntryComparatorTest.javaö ö("