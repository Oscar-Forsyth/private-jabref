
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÁ%
6org.jabref.logic.bibtex.comparator.FieldComparatorTestCLASSS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ( "-
package"org.jabref.logic.bibtex.comparator"
isFinalfalse"
inner classfalse"

isAbstractfalse"q
declarationString\<mark class="modifier">public </mark><mark class="modifier">class </mark>FieldComparatorTest"
accesspublic*FieldComparatorTest2∂
Rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldIdentity()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ()2∂
Rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ()2Ω
Yorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java' '(02æ
Zorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java2 2(12µ
Qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldIdentity()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java= =((2µ
Qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaF F((2º
Xorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaQ Q(/2Ω
Yorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java\ \(02µ
Qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldIdentity()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javag g((2µ
Qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javao o((2º
Xorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaz z(/2ø
Yorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÉ É(02∫
Torg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsIdentity()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaå å(+2∫
Torg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaï ï(+2¡
[org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java† †(22¬
\org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java´ ´(32√
]org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∂ ∂(42”
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¡ ¡(D2Ô
àorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕ Õ(&2µ
Oorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java◊% ◊(;2œ
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰ ‰(2®
Borg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÙ% Ù(.2±
Korg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java˛ ˛("ˆ
Rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldIdentity()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ()"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareMonthFieldIdentity</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareMonthFieldIdentity2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java# (*2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java) (82á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (%2∆
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldIdentity()?comparator@20.24:20.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ("2¡
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldIdentity()?equal@21.17:21.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java+ (02¡
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldIdentity()?equal@21.17:21.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java2 (72Õ
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldIdentity()?comparator@20.24:20.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ("2»
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldIdentity()?equal@21.17:21.22DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (˜
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldIdentity()?comparator@20.24:20.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (""
typeFieldComparator"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.MONTH)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java) (8”
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldIdentity()?equal@21.17:21.22VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ("
typeBibEntry"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal</mark> = new BibEntry().withField(StandardField.MONTH, "1")*equal2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (%å
Rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ()"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareMonthFieldEquality</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareMonthFieldEquality2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java! !(2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java## #(*2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java) (82á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (%2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java   (&2∆
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()?comparator@29.24:29.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java# #("2¡
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()?equal@30.17:30.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java#+ #(02¬
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()?equal2@32.17:32.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java#2 #(82Õ
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()?comparator@29.24:29.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ("2»
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()?equal@30.17:30.22DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2…
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()?equal2@32.17:32.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java   (2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (˜
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()?comparator@29.24:29.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (""
typeFieldComparator"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.MONTH)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java) (8”
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()?equal@30.17:30.22VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ("
typeBibEntry"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal</mark> = new BibEntry().withField(StandardField.MONTH, "1")*equal2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java (%÷
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldEquality()?equal2@32.17:32.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java   ("
typeBibEntry"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal2</mark> = new BibEntry().withField(StandardField.MONTH, "1")*equal22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java   (2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java! !(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java   (&œ
Yorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java' '(0"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareMonthFieldBiggerAscending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* compareMonthFieldBiggerAscending2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java* *(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java, ,(2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java.# .(*2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java() ((82á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java) )('2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java+ +(&2Õ
porg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()?comparator@40.24:40.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java. .("2…
lorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()?bigger@43.17:43.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java.+ .(12 
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()?smaller@41.17:41.24CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java.3 .(:2‘
porg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()?comparator@40.24:40.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java( (("2—
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()?smaller@41.17:41.24DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java) )(2–
lorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()?bigger@43.17:43.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java+ +(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java' '(˛
porg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()?comparator@40.24:40.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java( ((""
typeFieldComparator"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.MONTH)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java( ((2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java() ((8‚
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()?smaller@41.17:41.24VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java) )("
typeBibEntry"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry().withField(StandardField.MONTH, "jan")*smaller2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java) )(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java* *(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java) )('ﬂ
lorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerAscending()?bigger@43.17:43.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java+ +("
typeBibEntry"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry().withField(StandardField.MONTH, "feb")*bigger2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java+ +(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java, ,(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java+ +(&ñ
Zorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java2 2(1"
isFinalfalse"î
declarationString˛<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareMonthFieldBiggerDescending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!compareMonthFieldBiggerDescending2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java5 5(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java7 7(2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java9# 9(*2œ
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java3) 3(82Ø
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java3= 3(E2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java4 4('2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java6 6(&2Œ
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()?comparator@51.24:51.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java9 9("2 
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()?bigger@54.17:54.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java9+ 9(12À
norg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()?smaller@52.17:52.24CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java93 9(:2’
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()?comparator@51.24:51.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java3 3("2“
norg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()?smaller@52.17:52.24DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java4 4(2—
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()?bigger@54.17:54.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java6 6(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java2 2(Ô
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()?comparator@51.24:51.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java3 3(""
typeFieldComparator"
isFinalfalse"Õ
declarationString∑<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(new OrFields(StandardField.MONTH)<mark class="modifier">,</mark> true)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java3 3(2œ
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java3) 3(82Ø
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java3= 3(E„
norg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()?smaller@52.17:52.24VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java4 4("
typeBibEntry"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry().withField(StandardField.MONTH, "feb")*smaller2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java4 4(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java5 5(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java4 4('‡
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareMonthFieldBiggerDescending()?bigger@54.17:54.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java6 6("
typeBibEntry"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry().withField(StandardField.MONTH, "jan")*bigger2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java6 6(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java7 7(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java6 6(&Ó
Qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldIdentity()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java= =(("
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareYearFieldIdentity</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareYearFieldIdentity2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java@ @(2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaB# B(*2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java>) >(82á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java? ?(%2≈
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldIdentity()?comparator@62.24:62.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaB B("2¿
corg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldIdentity()?equal@63.17:63.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaB+ B(02¿
corg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldIdentity()?equal@63.17:63.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaB2 B(72Ã
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldIdentity()?comparator@62.24:62.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java> >("2«
corg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldIdentity()?equal@63.17:63.22DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java? ?(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java= =(ı
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldIdentity()?comparator@62.24:62.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java> >(""
typeFieldComparator"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.YEAR)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java> >(2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java>) >(8‘
corg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldIdentity()?equal@63.17:63.22VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java? ?("
typeBibEntry"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal</mark> = new BibEntry().withField(StandardField.YEAR, "2016")*equal2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java? ?(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java@ @(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java? ?(%É
Qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaF F(("
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareYearFieldEquality</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareYearFieldEquality2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaI I(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaK K(2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaM# M(*2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaG) G(82á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaH H(%2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaJ J(&2≈
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()?comparator@71.24:71.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaM M("2¿
corg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()?equal@72.17:72.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaM+ M(02¡
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()?equal2@74.17:74.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaM2 M(82Ã
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()?comparator@71.24:71.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaG G("2«
corg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()?equal@72.17:72.22DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaH H(2»
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()?equal2@74.17:74.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaJ J(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaF F(ı
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()?comparator@71.24:71.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaG G(""
typeFieldComparator"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.YEAR)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaG G(2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaG) G(8‘
corg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()?equal@72.17:72.22VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaH H("
typeBibEntry"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal</mark> = new BibEntry().withField(StandardField.YEAR, "2016")*equal2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaH H(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaI I(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaH H(%◊
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldEquality()?equal2@74.17:74.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaJ J("
typeBibEntry"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal2</mark> = new BibEntry().withField(StandardField.YEAR, "2016")*equal22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaJ J(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaK K(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaJ J(&∆
Xorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaQ Q(/"
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareYearFieldBiggerAscending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareYearFieldBiggerAscending2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaT T(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaV V(2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaX# X(*2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaR) R(82á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaS S('2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaU U(&2Ã
oorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()?comparator@82.24:82.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaX X("2»
korg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()?bigger@85.17:85.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaX+ X(12…
lorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()?smaller@83.17:83.24CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaX3 X(:2”
oorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()?comparator@82.24:82.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaR R("2–
lorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()?smaller@83.17:83.24DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaS S(2œ
korg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()?bigger@85.17:85.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaU U(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaQ Q(¸
oorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()?comparator@82.24:82.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaR R(""
typeFieldComparator"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.YEAR)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaR R(2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaR) R(8·
lorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()?smaller@83.17:83.24VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaS S("
typeBibEntry"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry().withField(StandardField.YEAR, "2000")*smaller2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaS S(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaT T(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaS S('ﬁ
korg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerAscending()?bigger@85.17:85.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaU U("
typeBibEntry"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry().withField(StandardField.YEAR, "2016")*bigger2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaU U(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaV V(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaU U(&ç
Yorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java\ \(0"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareYearFieldBiggerDescending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* compareYearFieldBiggerDescending2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java_ _(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaa a(2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javac# c(*2œ
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java]) ](82Ø
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java]= ](E2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java^ ^('2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java` `(&2Õ
porg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()?comparator@93.24:93.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javac c("2…
lorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()?bigger@96.17:96.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javac+ c(12 
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()?smaller@94.17:94.24CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javac3 c(:2‘
porg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()?comparator@93.24:93.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java] ]("2—
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()?smaller@94.17:94.24DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java^ ^(2–
lorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()?bigger@96.17:96.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java` `(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java\ \(Ì
porg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()?comparator@93.24:93.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java] ](""
typeFieldComparator"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(new OrFields(StandardField.YEAR)<mark class="modifier">,</mark> true)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java] ](2œ
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java]) ](82Ø
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java]= ](E‚
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()?smaller@94.17:94.24VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java^ ^("
typeBibEntry"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry().withField(StandardField.YEAR, "2016")*smaller2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java^ ^(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java_ _(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java^ ^('ﬂ
lorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareYearFieldBiggerDescending()?bigger@96.17:96.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java` `("
typeBibEntry"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry().withField(StandardField.YEAR, "2000")*bigger2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java` `(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaa a(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java` `(&ﬂ
Qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldIdentity()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javag g(("
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareTypeFieldIdentity</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareTypeFieldIdentity2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javak# k(*2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javah) h(82≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javai i(%2«
jorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldIdentity()?comparator@104.24:104.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javak k("2¬
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldIdentity()?equal@105.17:105.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javak+ k(02¬
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldIdentity()?equal@105.17:105.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javak2 k(72Œ
jorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldIdentity()?comparator@104.24:104.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javah h("2…
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldIdentity()?equal@105.17:105.22DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javai i(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javag g(˛
jorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldIdentity()?comparator@104.24:104.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javah h(""
typeFieldComparator"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(InternalField.TYPE_HEADER)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javah h(2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javah) h(8Ø
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldIdentity()?equal@105.17:105.22VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javai i("
typeBibEntry"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal</mark> = new BibEntry(StandardEntryType.Article)*equal2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javai i(2≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javai i(%ñ
Qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javao o(("
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareTypeFieldEquality</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareTypeFieldEquality2î
7org.jabref.model.entry.BibEntry.setId(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javar r(2î
7org.jabref.model.entry.BibEntry.setId(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javat t(2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javav# v(*2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javap) p(82≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaq q(%2≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javas s(&2¬
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?equal@113.17:113.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javar r(2√
forg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?equal2@115.17:115.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javat t(2«
jorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?comparator@112.24:112.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javav v("2¬
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?equal@113.17:113.22CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javav+ v(02√
forg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?equal2@115.17:115.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javav2 v(82Œ
jorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?comparator@112.24:112.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javap p("2…
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?equal@113.17:113.22DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaq q(2 
forg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?equal2@115.17:115.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javas s(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javao o(˛
jorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?comparator@112.24:112.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javap p(""
typeFieldComparator"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(InternalField.TYPE_HEADER)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javap p(2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javap) p(8Ø
eorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?equal@113.17:113.22VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaq q("
typeBibEntry"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal</mark> = new BibEntry(StandardEntryType.Article)*equal2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaq q(2≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaq q(%≤
forg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldEquality()?equal2@115.17:115.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javas s("
typeBibEntry"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal2</mark> = new BibEntry(StandardEntryType.Article)*equal22|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javas s(2≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javas s(&†
Xorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()METHODS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaz z(/"
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareTypeFieldBiggerAscending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareTypeFieldBiggerAscending2Ÿ
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java# (*2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java{) {(82≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java| |('2≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java} }(&2Œ
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()?comparator@123.24:123.34CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java ("2 
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()?bigger@125.17:125.23CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java+ (12À
norg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()?smaller@124.17:124.24CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java3 (:2’
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()?comparator@123.24:123.34DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java{ {("2“
norg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()?smaller@124.17:124.24DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java| |(2—
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()?bigger@125.17:125.23DECLARATIONS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java} }(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaz z(Ö
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()?comparator@123.24:123.34VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java{ {(""
typeFieldComparator"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(InternalField.TYPE_HEADER)*
comparator2è
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java{ {(2√
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java{) {(8º
norg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()?smaller@124.17:124.24VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java| |("
typeBibEntry"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry(StandardEntryType.Article)*smaller2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java| |(2≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java| |('∂
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerAscending()?bigger@125.17:125.23VARIABLES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java} }("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry(StandardEntryType.Book)*bigger2|
org.jabref.model.entry.BibEntryTYPES
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java} }(2≠
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLS
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java} }(&Å
Yorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÉ É(0"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareTypeFieldBiggerDescending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* compareTypeFieldBiggerDescending2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaà# à(*2—
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÑ) Ñ(82±
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÑ= Ñ(E2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÖ Ö(&2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÜ Ü('2—
rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()?comparator@132.24:132.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaà à("2Õ
norg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()?bigger@133.17:133.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaà+ à(12Œ
oorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()?smaller@134.17:134.24CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaà3 à(:2ÿ
rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()?comparator@132.24:132.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÑ Ñ("2‘
norg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()?bigger@133.17:133.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÖ Ö(2’
oorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()?smaller@134.17:134.24DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÜ Ü(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÉ É(˛
rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()?comparator@132.24:132.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÑ Ñ(""
typeFieldComparator"
isFinalfalse"”
declarationStringΩ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(new OrFields(InternalField.TYPE_HEADER)<mark class="modifier">,</mark> true)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÑ Ñ(2—
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÑ) Ñ(82±
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÑ= Ñ(E¿
norg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()?bigger@133.17:133.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÖ Ö("
typeBibEntry"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry(StandardEntryType.Article)*bigger2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÖ Ö(2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÖ Ö(&¿
oorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareTypeFieldBiggerDescending()?smaller@134.17:134.24VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÜ Ü("
typeBibEntry"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry(StandardEntryType.Book)*smaller2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÜ Ü(2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÜ Ü('¶
Torg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsIdentity()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaå å(+"
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareStringFieldsIdentity</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareStringFieldsIdentity2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaè è(2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaë# ë(*2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaç) ç(82â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaé é(%2Ã
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsIdentity()?comparator@141.24:141.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaë ë("2«
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsIdentity()?equal@142.17:142.22CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaë+ ë(02«
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsIdentity()?equal@142.17:142.22CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaë2 ë(72”
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsIdentity()?comparator@141.24:141.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaç ç("2Œ
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsIdentity()?equal@142.17:142.22DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaé é(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaå å(Å
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsIdentity()?comparator@141.24:141.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaç ç(""
typeFieldComparator"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.TITLE)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaç ç(2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaç) ç(8„
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsIdentity()?equal@142.17:142.22VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaé é("
typeBibEntry"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal</mark> = new BibEntry().withField(StandardField.TITLE, "title")*equal2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaé é(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaè è(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaé é(%∆
Torg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaï ï(+"
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareStringFieldsEquality</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareStringFieldsEquality2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaò ò(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaö ö(2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaú# ú(*2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javañ) ñ(82â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaó ó(%2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaô ô(&2Ã
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()?comparator@150.24:150.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaú ú("2«
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()?equal@151.17:151.22CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaú+ ú(02»
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()?equal2@153.17:153.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaú2 ú(82”
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()?comparator@150.24:150.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javañ ñ("2Œ
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()?equal@151.17:151.22DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaó ó(2œ
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()?equal2@153.17:153.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaô ô(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaï ï(Å
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()?comparator@150.24:150.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javañ ñ(""
typeFieldComparator"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.TITLE)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javañ ñ(2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javañ) ñ(8„
horg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()?equal@151.17:151.22VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaó ó("
typeBibEntry"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal</mark> = new BibEntry().withField(StandardField.TITLE, "title")*equal2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaó ó(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaò ò(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaó ó(%Ê
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsEquality()?equal2@153.17:153.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaô ô("
typeBibEntry"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>BibEntry <mark class="class-field">equal2</mark> = new BibEntry().withField(StandardField.TITLE, "title")*equal22~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaô ô(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaö ö(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaô ô(&â
[org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java† †(2"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareStringFieldsBiggerAscending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*"compareStringFieldsBiggerAscending2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java£ £(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java• •(2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaß# ß(*2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java°) °(82â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¢ ¢(&2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java§ §('2”
torg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()?comparator@161.24:161.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaß ß("2œ
porg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()?bigger@162.17:162.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaß+ ß(12–
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()?smaller@164.17:164.24CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaß3 ß(:2⁄
torg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()?comparator@161.24:161.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java° °("2÷
porg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()?bigger@162.17:162.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¢ ¢(2◊
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()?smaller@164.17:164.24DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java§ §(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java† †(à
torg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()?comparator@161.24:161.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java° °(""
typeFieldComparator"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.TITLE)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java° °(2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java°) °(8È
porg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()?bigger@162.17:162.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¢ ¢("
typeBibEntry"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry().withField(StandardField.TITLE, "b")*bigger2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¢ ¢(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java£ £(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¢ ¢(&Ï
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerAscending()?smaller@164.17:164.24VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java§ §("
typeBibEntry"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry().withField(StandardField.TITLE, "a")*smaller2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java§ §(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java• •(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java§ §('“
\org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java´ ´(3"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareStringFieldsBiggerDescending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*#compareStringFieldsBiggerDescending2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÆ Æ(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∞ ∞(2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≤# ≤(*2—
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¨) ¨(82±
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¨= ¨(E2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≠ ≠(&2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaØ Ø('2‘
uorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()?comparator@172.24:172.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≤ ≤("2–
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()?bigger@173.17:173.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≤+ ≤(12—
rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()?smaller@175.17:175.24CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≤3 ≤(:2€
uorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()?comparator@172.24:172.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¨ ¨("2◊
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()?bigger@173.17:173.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≠ ≠(2ÿ
rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()?smaller@175.17:175.24DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaØ Ø(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java´ ´(˚
uorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()?comparator@172.24:172.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¨ ¨(""
typeFieldComparator"
isFinalfalse"Õ
declarationString∑<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(new OrFields(StandardField.TITLE)<mark class="modifier">,</mark> true)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¨ ¨(2—
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¨) ¨(82±
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¨= ¨(EÍ
qorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()?bigger@173.17:173.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≠ ≠("
typeBibEntry"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry().withField(StandardField.TITLE, "a")*bigger2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≠ ≠(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÆ Æ(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≠ ≠(&Ì
rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareStringFieldsBiggerDescending()?smaller@175.17:175.24VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaØ Ø("
typeBibEntry"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry().withField(StandardField.TITLE, "b")*smaller2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaØ Ø(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∞ ∞(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaØ Ø('€
]org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∂ ∂(4"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareNumericFieldsBiggerDescending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*$compareNumericFieldsBiggerDescending2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaπ π(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaª ª(2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaΩ# Ω(*2—
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∑) ∑(82±
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∑= ∑(E2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∏ ∏('2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∫ ∫(&2’
vorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()?comparator@183.24:183.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaΩ Ω("2—
rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()?bigger@186.17:186.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaΩ+ Ω(12“
sorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()?smaller@184.17:184.24CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaΩ3 Ω(:2‹
vorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()?comparator@183.24:183.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∑ ∑("2Ÿ
sorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()?smaller@184.17:184.24DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∏ ∏(2ÿ
rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()?bigger@186.17:186.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∫ ∫(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∂ ∂(˚
vorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()?comparator@183.24:183.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∑ ∑(""
typeFieldComparator"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(new OrFields(StandardField.PMID)<mark class="modifier">,</mark> true)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∑ ∑(2—
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∑) ∑(82±
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∑= ∑(EÚ
sorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()?smaller@184.17:184.24VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∏ ∏("
typeBibEntry"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry().withField(StandardField.PMID, "234567")*smaller2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∏ ∏(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaπ π(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∏ ∏('Ô
rorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericFieldsBiggerDescending()?bigger@186.17:186.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∫ ∫("
typeBibEntry"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry().withField(StandardField.PMID, "123456")*bigger2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∫ ∫(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaª ª(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∫ ∫(&˚
morg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¡ ¡(D"
isFinalfalse"ß
declarationStringë<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareParsableWithNonParsableNumericFieldDescending</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*4compareParsableWithNonParsableNumericFieldDescending2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaƒ ƒ(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∆ ∆(2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java»# »(*2—
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¬) ¬(82±
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¬= ¬(E2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java√  √((2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≈" ≈(*2Ê
Üorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()?comparator@194.24:194.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java» »("2‰
Ñorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()?parsable@195.17:195.25CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java»+ »(32Ê
Üorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()?unparsable@197.17:197.27CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java»5 »(?2Ì
Üorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()?comparator@194.24:194.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¬ ¬("2Î
Ñorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()?parsable@195.17:195.25DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java√ √(2Ì
Üorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()?unparsable@197.17:197.27DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≈ ≈(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¡ ¡(å
Üorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()?comparator@194.24:194.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¬ ¬(""
typeFieldComparator"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(new OrFields(StandardField.PMID)<mark class="modifier">,</mark> true)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¬ ¬(2—
rorg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.OrFields, boolean)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¬) ¬(82±
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java¬= ¬(EÜ
Ñorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()?parsable@195.17:195.25VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java√ √("
typeBibEntry"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsable</mark> = new BibEntry().withField(StandardField.PMID, "123456")*parsable2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java√ √(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaƒ ƒ(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java√  √((å
Üorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareParsableWithNonParsableNumericFieldDescending()?unparsable@197.17:197.27VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≈ ≈("
typeBibEntry"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>BibEntry <mark class="class-field">unparsable</mark> = new BibEntry().withField(StandardField.PMID, "abc##z")*
unparsable2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≈ ≈(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java∆ ∆(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java≈" ≈(*≠+
àorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕ Õ(&"
isFinalfalse"◊
declarationString¡ <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareNumericalValues</mark>(<mark class="modifier">int</mark> comparisonResult<mark class="modifier"><mark class="modifier">,</mark></mark> String id1<mark class="modifier"><mark class="modifier">,</mark></mark> String id2<mark class="modifier"><mark class="modifier">,</mark></mark> String message)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareNumericalValues2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java– –(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java“ “(2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‘2 ‘(92≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaŒ) Œ(82â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaœ œ(&2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java— —(&2Ï
åorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!id1CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java–/ –(22Ï
åorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!id2CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java“/ “(22˘
ôorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!comparisonResultCALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‘ ‘(%2Å
°org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)?comparator@206.24:206.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‘' ‘(12˝
ùorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)?entry1@207.17:207.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‘: ‘(@2˝
ùorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)?entry2@209.17:209.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‘B ‘(H2
êorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!messageCALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‘K ‘(R2˛
ôorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!comparisonResult	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕ+ Õ(;2Ò
åorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!id1	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕD Õ(G2Ò
åorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!id2	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕP Õ(S2ı
êorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!message	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕ\ Õ(c2à
°org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)?comparator@206.24:206.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaŒ Œ("2Ñ
ùorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)?entry1@207.17:207.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaœ œ(2Ñ
ùorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)?entry2@209.17:209.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java— —(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕ Õ(µ
°org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)?comparator@206.24:206.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaŒ Œ(""
typeFieldComparator"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.PMID)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaŒ Œ(2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaŒ) Œ(8Ö	
ùorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)?entry1@207.17:207.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaœ œ("
typeBibEntry"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry1</mark> = new BibEntry().withField(StandardField.PMID, id1)*entry12~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaœ œ(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java– –(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaœ œ(&2Ï
åorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!id1CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java–/ –(2Ö	
ùorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)?entry2@209.17:209.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java— —("
typeBibEntry"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry2</mark> = new BibEntry().withField(StandardField.PMID, id2)*entry22~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java— —(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java“ “(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java— —(&2Ï
åorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!id2CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java“/ “(2‹
ôorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!comparisonResult	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕ+ Õ(;"
typeint"
isFinalfalse"G
declarationString2<mark class="modifier">int</mark> comparisonResult*comparisonResult2b
intTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕ' Õ(*™
åorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!id1	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕD Õ(G"
typeString"
isFinalfalse"
declarationString
String id1*id12o
java.lang.StringTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕ= Õ(C™
åorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!id2	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕP Õ(S"
typeString"
isFinalfalse"
declarationString
String id2*id22o
java.lang.StringTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕI Õ(O∂
êorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues(int, java.lang.String, java.lang.String, java.lang.String)!message	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕ\ Õ(c"
typeString"
isFinalfalse"#
declarationStringString message*message2o
java.lang.StringTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÕU Õ([˚
Oorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareNumericalValues()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java◊% ◊(;"
isFinalfalse"≠
declarationStringó<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">compareNumericalValues</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*compareNumericalValues2}
java.util.stream.StreamRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java◊ ◊(2ö
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java◊ ◊(#÷*
iorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰ ‰("
isFinalfalse"ç
declarationString˜ <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">nullTests</mark>(<mark class="modifier">int</mark> comparisonResult<mark class="modifier"><mark class="modifier">,</mark></mark> String firstValue<mark class="modifier"><mark class="modifier">,</mark></mark> String secondValue)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*	nullTests2Ω
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÈ È(2Ω
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÓ Ó(2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÒ2 Ò(92≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÂ) Â(82â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÁ Á(&2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÏ Ï(&2”
torg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!firstValueCALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaË Ë(2›
~org.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?entry1@231.17:231.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÈ È(2”
torg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!firstValueCALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÈ1 È(;2‘
uorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!secondValueCALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÌ Ì(2›
~org.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?entry2@236.17:236.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÓ Ó(2‘
uorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!secondValueCALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÓ1 Ó(<2Ÿ
zorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!comparisonResultCALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÒ Ò(%2‚
Çorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?comparator@229.24:229.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÒ' Ò(12›
~org.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?entry1@231.17:231.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÒ: Ò(@2›
~org.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?entry2@236.17:236.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÒB Ò(H2ﬁ
zorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!comparisonResult	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰ ‰(.2ÿ
torg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!firstValue	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰7 ‰(A2Ÿ
uorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!secondValue	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰J ‰(U2È
Çorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?comparator@229.24:229.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÂ Â("2‰
~org.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?entry1@231.17:231.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÁ Á(2‰
~org.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?entry2@236.17:236.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÏ Ï(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰ ‰(ó
Çorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?comparator@229.24:229.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÂ Â(""
typeFieldComparator"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.TITLE)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÂ Â(2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÂ) Â(8ê
~org.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?entry1@231.17:231.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÁ Á("
typeBibEntry"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry1</mark> = new BibEntry()*entry12~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÁ Á(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÁ Á(&ê
~org.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)?entry2@236.17:236.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÏ Ï("
typeBibEntry"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry2</mark> = new BibEntry()*entry22~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÏ Ï(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÏ Ï(&º
zorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!comparisonResult	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰ ‰(."
typeint"
isFinalfalse"G
declarationString2<mark class="modifier">int</mark> comparisonResult*comparisonResult2b
intTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰ ‰(ü
torg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!firstValue	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰7 ‰(A"
typeString"
isFinalfalse"&
declarationStringString firstValue*
firstValue2o
java.lang.StringTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰0 ‰(6¢
uorg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests(int, java.lang.String, java.lang.String)!secondValue	PARAMETERU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰J ‰(U"
typeString"
isFinalfalse"'
declarationStringString secondValue*secondValue2o
java.lang.StringTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java‰C ‰(I‘
Borg.jabref.logic.bibtex.comparator.FieldComparatorTest.nullTests()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÙ% Ù(."
isFinalfalse"†
declarationStringä<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">nullTests</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*	nullTests2}
java.util.stream.StreamRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÙ Ù(2ö
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÙ Ù(#˘
Korg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()METHODU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java˛ ˛(""
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareAuthorField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*compareAuthorField2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÅ Å(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÉ É(2€
|org.jabref.logic.bibtex.comparator.FieldComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÖ# Ö(*2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaˇ) ˇ(82â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÄ Ä(&2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÇ Ç('2√
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()?comparator@255.24:255.34CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÖ Ö("2¿
aorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()?smaller@258.17:258.24CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÖ+ Ö(22ø
`org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()?bigger@256.17:256.23CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÖ4 Ö(:2 
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()?comparator@255.24:255.34DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaˇ ˇ("2∆
`org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()?bigger@256.17:256.23DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÄ Ä(2«
aorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()?smaller@258.17:258.24DECLARATIONU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÇ Ç(2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.java˛ ˛(˘
dorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()?comparator@255.24:255.34VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaˇ ˇ(""
typeFieldComparator"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>FieldComparator <mark class="class-field">comparator</mark> = new FieldComparator(StandardField.AUTHOR)*
comparator2ë
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaˇ ˇ(2≈
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaˇ) ˇ(8Ê
`org.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()?bigger@256.17:256.23VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÄ Ä("
typeBibEntry"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>BibEntry <mark class="class-field">bigger</mark> = new BibEntry().withField(StandardField.AUTHOR, "Freund, Lucas")*bigger2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÄ Ä(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÅ Å(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÄ Ä(&Î
aorg.jabref.logic.bibtex.comparator.FieldComparatorTest.compareAuthorField()?smaller@258.17:258.24VARIABLEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÇ Ç("
typeBibEntry"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>BibEntry <mark class="class-field">smaller</mark> = new BibEntry().withField(StandardField.AUTHOR, "Mustermann, Max")*smaller2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÇ Ç(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÉ É(2â
*org.jabref.model.entry.BibEntry.BibEntry()CALLU
Isrc\test\java\org\jabref\logic\bibtex\comparator\FieldComparatorTest.javaÇ Ç('