
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java–
/org.jabref.logic.bibtex.comparator.IdComparatorCLASSL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java ("-
package"org.jabref.logic.bibtex.comparator"
isFinalfalse"
inner classfalse"

isAbstractfalse"²
declarationStringœ<mark class="modifier">public </mark><mark class="modifier">class </mark>IdComparator<mark class="modifier"><br>implements </mark>Comparator&lt;BibEntry&gt;"
accesspublic*IdComparator2Ö
yorg.jabref.logic.bibtex.comparator.IdComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)DECLARATIONL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java (2l
java.util.ComparatorEXTENDL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java% (/2…
org.jabref.model.entry.BibEntryEXTEND_TYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java0 (8ƒ
yorg.jabref.logic.bibtex.comparator.IdComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)METHODL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java ("
isFinalfalse"†
declarationStringð<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">compare</mark>(BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry two)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*compare2‚
,java.lang.String.compareTo(java.lang.String)CALLL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java ($2}
'org.jabref.model.entry.BibEntry.getId()CALLL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java (2}
'org.jabref.model.entry.BibEntry.getId()CALLL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java) (.2Ó
}org.jabref.logic.bibtex.comparator.IdComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java (2Ó
}org.jabref.logic.bibtex.comparator.IdComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java% ((2Ø
}org.jabref.logic.bibtex.comparator.IdComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java  (#2Ø
}org.jabref.logic.bibtex.comparator.IdComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java. (12`
intRETURN_TYPEL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java (›
}org.jabref.logic.bibtex.comparator.IdComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java  (#"
typeBibEntry"
isFinalfalse"!
declarationStringBibEntry one*one2u
org.jabref.model.entry.BibEntryTYPEL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java (›
}org.jabref.logic.bibtex.comparator.IdComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java. (1"
typeBibEntry"
isFinalfalse"!
declarationStringBibEntry two*two2u
org.jabref.model.entry.BibEntryTYPEL
Bsrc\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java% (-