
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java©
>org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTestCLASS[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (("-
package"org.jabref.logic.bibtex.comparator"
isFinalfalse"
inner classfalse"

isAbstractfalse"y
declarationStringd<mark class="modifier">public </mark><mark class="modifier">class </mark>CrossRefEntryComparatorTest"
accesspublic*CrossRefEntryComparatorTest2≤
Forg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.setUp()DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (2µ
Iorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.tearDown()DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (2Õ
aorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithoutCrossRef()DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (02 
^org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java   (-2œ
corg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isGreaterForEntriesWithoutCrossRef()DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java) )(22Ã
`org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isSmallerForEntriesWithCrossRef()DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java1 1(/2¡
Uorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest?comparator@12.36:12.46DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java$ (.≠
Forg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.setUp()METHOD[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2π
Torg.jabref.logic.bibtex.comparator.CrossRefEntryComparator.CrossRefEntryComparator()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (02∫
Uorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest?comparator@12.36:12.46CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (˘
Iorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.tearDown()METHOD[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java ("
isFinalfalse"≥
declarationStringù<mark class="annotation">@AfterEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">tearDown</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*tearDown2∫
Uorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest?comparator@12.36:12.46CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (ª
aorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithoutCrossRef()METHOD[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (0"
isFinalfalse"∆
declarationString∞<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isEqualForEntriesWithoutCrossRef</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* isEqualForEntriesWithoutCrossRef2Í
Ñorg.jabref.logic.bibtex.comparator.CrossRefEntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java# (*2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java ("2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java ("2∫
Uorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest?comparator@12.36:12.46CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java ("2’
porg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithoutCrossRef()?e1@26.17:26.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java+ (-2’
porg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithoutCrossRef()?e2@27.17:27.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java/ (12‹
porg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithoutCrossRef()?e1@26.17:26.19DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (2‹
porg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithoutCrossRef()?e2@27.17:27.19DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (ç
porg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithoutCrossRef()?e1@26.17:26.19VARIABLE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java ("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry()*e12Ñ
org.jabref.model.entry.BibEntryTYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java ("ç
porg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithoutCrossRef()?e2@27.17:27.19VARIABLE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java ("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry()*e22Ñ
org.jabref.model.entry.BibEntryTYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java ("‹
^org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()METHOD[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java   (-"
isFinalfalse"√
declarationString≠<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isEqualForEntriesWithCrossRef</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isEqualForEntriesWithCrossRef2√
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java" "(2√
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java$ $(2Í
Ñorg.jabref.logic.bibtex.comparator.CrossRefEntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java%# %(*2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java! !("2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java# #("2“
morg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()?e1@33.17:33.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java" "(
2“
morg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()?e2@35.17:35.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java$ $(
2∫
Uorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest?comparator@12.36:12.46CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java% %("2“
morg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()?e1@33.17:33.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java%+ %(-2“
morg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()?e2@35.17:35.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java%/ %(12Ÿ
morg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()?e1@33.17:33.19DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java! !(2Ÿ
morg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()?e2@35.17:35.19DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java# #(2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java   (ä
morg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()?e1@33.17:33.19VARIABLE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java! !("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry()*e12Ñ
org.jabref.model.entry.BibEntryTYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java! !(2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java! !("ä
morg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isEqualForEntriesWithCrossRef()?e2@35.17:35.19VARIABLE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java# #("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry()*e22Ñ
org.jabref.model.entry.BibEntryTYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java# #(2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java# #("È
corg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isGreaterForEntriesWithoutCrossRef()METHOD[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java) )(2"
isFinalfalse"»
declarationString≤<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isGreaterForEntriesWithoutCrossRef</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*"isGreaterForEntriesWithoutCrossRef2√
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java, ,(2Í
Ñorg.jabref.logic.bibtex.comparator.CrossRefEntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java-# -(*2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java* *("2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java+ +("2◊
rorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isGreaterForEntriesWithoutCrossRef()?e2@43.17:43.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java, ,(
2∫
Uorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest?comparator@12.36:12.46CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java- -("2◊
rorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isGreaterForEntriesWithoutCrossRef()?e1@42.17:42.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java-+ -(-2◊
rorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isGreaterForEntriesWithoutCrossRef()?e2@43.17:43.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java-/ -(12ﬁ
rorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isGreaterForEntriesWithoutCrossRef()?e1@42.17:42.19DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java* *(2ﬁ
rorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isGreaterForEntriesWithoutCrossRef()?e2@43.17:43.19DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java+ +(2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java) )(è
rorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isGreaterForEntriesWithoutCrossRef()?e1@42.17:42.19VARIABLE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java* *("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry()*e12Ñ
org.jabref.model.entry.BibEntryTYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java* *(2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java* *("è
rorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isGreaterForEntriesWithoutCrossRef()?e2@43.17:43.19VARIABLE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java+ +("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry()*e22Ñ
org.jabref.model.entry.BibEntryTYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java+ +(2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java+ +("—
`org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isSmallerForEntriesWithCrossRef()METHOD[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java1 1(/"
isFinalfalse"≈
declarationStringØ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isSmallerForEntriesWithCrossRef</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isSmallerForEntriesWithCrossRef2√
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java3 3(2Í
Ñorg.jabref.logic.bibtex.comparator.CrossRefEntryComparator.compare(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java5$ 5(+2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java2 2("2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java4 4("2‘
oorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isSmallerForEntriesWithCrossRef()?e1@50.17:50.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java3 3(
2∫
Uorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest?comparator@12.36:12.46CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java5 5(#2‘
oorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isSmallerForEntriesWithCrossRef()?e1@50.17:50.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java5, 5(.2‘
oorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isSmallerForEntriesWithCrossRef()?e2@52.17:52.19CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java50 5(22€
oorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isSmallerForEntriesWithCrossRef()?e1@50.17:50.19DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java2 2(2€
oorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isSmallerForEntriesWithCrossRef()?e2@52.17:52.19DECLARATION[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java4 4(2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java1 1(å
oorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isSmallerForEntriesWithCrossRef()?e1@50.17:50.19VARIABLE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java2 2("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e1</mark> = new BibEntry()*e12Ñ
org.jabref.model.entry.BibEntryTYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java2 2(2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java2 2("å
oorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest.isSmallerForEntriesWithCrossRef()?e2@52.17:52.19VARIABLE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java4 4("
typeBibEntry"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>BibEntry <mark class="class-field">e2</mark> = new BibEntry()*e22Ñ
org.jabref.model.entry.BibEntryTYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java4 4(2è
*org.jabref.model.entry.BibEntry.BibEntry()CALL[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java4 4("≈
Uorg.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTest?comparator@12.36:12.46VARIABLE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java$ (."
isFinalfalse"
typeCrossRefEntryComparator"~
declarationStringi<mark class="modifier">private </mark>CrossRefEntryComparator <mark class="class-field">comparator</mark>"
isStaticfalse"
accessprivate*
comparator2ü
:org.jabref.logic.bibtex.comparator.CrossRefEntryComparatorTYPE[
Qsrc\test\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparatorTest.java (#