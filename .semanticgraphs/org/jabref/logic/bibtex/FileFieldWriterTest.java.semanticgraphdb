
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java·
+org.jabref.logic.bibtex.FileFieldWriterTestCLASSH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java ( ""
packageorg.jabref.logic.bibtex"
isFinalfalse"
inner classfalse"

isAbstractfalse"q
declarationString\<mark class="modifier">public </mark><mark class="modifier">class </mark>FileFieldWriterTest"
accesspublic*FileFieldWriterTest2î
;org.jabref.logic.bibtex.FileFieldWriterTest.quoteStandard()DECLARATIONH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java (2ô
@org.jabref.logic.bibtex.FileFieldWriterTest.quoteAllCharacters()DECLARATIONH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java ("2ë
8org.jabref.logic.bibtex.FileFieldWriterTest.quoteEmpty()DECLARATIONH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java (2ê
7org.jabref.logic.bibtex.FileFieldWriterTest.quoteNull()DECLARATIONH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java! !(2ö
Aorg.jabref.logic.bibtex.FileFieldWriterTest.getEncodingTestData()DECLARATIONH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java%% %(82æ
eorg.jabref.logic.bibtex.FileFieldWriterTest.encodeStringArray(java.lang.String, java.lang.String[][])DECLARATIONH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java0 0(!2≠
Torg.jabref.logic.bibtex.FileFieldWriterTest.fileFieldWriterGetStringRepresentation()DECLARATIONH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java5 5(6°
;org.jabref.logic.bibtex.FileFieldWriterTest.quoteStandard()METHODH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java ("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">quoteStandard</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*quoteStandard2ë
?org.jabref.logic.bibtex.FileFieldWriter.quote(java.lang.String)CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java* (/2]
voidRETURN_TYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java (∞
@org.jabref.logic.bibtex.FileFieldWriterTest.quoteAllCharacters()METHODH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java (""
isFinalfalse"∏
declarationString¢<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">quoteAllCharacters</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*quoteAllCharacters2ë
?org.jabref.logic.bibtex.FileFieldWriter.quote(java.lang.String)CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java4 (92]
voidRETURN_TYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java (ò
8org.jabref.logic.bibtex.FileFieldWriterTest.quoteEmpty()METHODH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java ("
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">quoteEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*
quoteEmpty2ë
?org.jabref.logic.bibtex.FileFieldWriter.quote(java.lang.String)CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java) (.2]
voidRETURN_TYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java (ï
7org.jabref.logic.bibtex.FileFieldWriterTest.quoteNull()METHODH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java! !("
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">quoteNull</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*	quoteNull2ë
?org.jabref.logic.bibtex.FileFieldWriter.quote(java.lang.String)CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java"# "((2]
voidRETURN_TYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java! !(¿
Aorg.jabref.logic.bibtex.FileFieldWriterTest.getEncodingTestData()METHODH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java%% %(8"
isFinalfalse"™
declarationStringî<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">getEncodingTestData</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*getEncodingTestData2p
java.util.stream.StreamRETURN_TYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java% %(2ç
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java% %(#˜
eorg.jabref.logic.bibtex.FileFieldWriterTest.encodeStringArray(java.lang.String, java.lang.String[][])METHODH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java0 0(!"
isFinalfalse"π
declarationString£ <br><mark class="annotation">@MethodSource("getEncodingTestData")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">encodeStringArray</mark>(String expected<mark class="modifier"><mark class="modifier">,</mark></mark> String[][] values)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*encodeStringArray2°
Oorg.jabref.logic.bibtex.FileFieldWriter.encodeStringArray(java.lang.String[][])CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java1/ 1(@2¿
norg.jabref.logic.bibtex.FileFieldWriterTest.encodeStringArray(java.lang.String, java.lang.String[][])!expectedCALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java1 1(2æ
lorg.jabref.logic.bibtex.FileFieldWriterTest.encodeStringArray(java.lang.String, java.lang.String[][])!valuesCALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java1A 1(G2≈
norg.jabref.logic.bibtex.FileFieldWriterTest.encodeStringArray(java.lang.String, java.lang.String[][])!expected	PARAMETERH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java0) 0(12√
lorg.jabref.logic.bibtex.FileFieldWriterTest.encodeStringArray(java.lang.String, java.lang.String[][])!values	PARAMETERH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java0> 0(D2]
voidRETURN_TYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java0 0(˚
norg.jabref.logic.bibtex.FileFieldWriterTest.encodeStringArray(java.lang.String, java.lang.String[][])!expected	PARAMETERH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java0) 0(1"
typeString"
isFinalfalse"$
declarationStringString expected*expected2b
java.lang.StringTYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java0" 0((Å
lorg.jabref.logic.bibtex.FileFieldWriterTest.encodeStringArray(java.lang.String, java.lang.String[][])!values	PARAMETERH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java0> 0(D"
type
String[][]"
isFinalfalse"&
declarationStringString[][] values*values2f
java.lang.String[][]TYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java03 0(;‘
Torg.jabref.logic.bibtex.FileFieldWriterTest.fileFieldWriterGetStringRepresentation()METHODH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java5 5(6"
isFinalfalse"Ã
declarationString∂<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">fileFieldWriterGetStringRepresentation</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*&fileFieldWriterGetStringRepresentation2é
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java66 6(82¥
borg.jabref.logic.bibtex.FileFieldWriter.getStringRepresentation(org.jabref.model.entry.LinkedFile)CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java7D 7([2∂
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java6 6((2∑
eorg.jabref.logic.bibtex.FileFieldWriterTest.fileFieldWriterGetStringRepresentation()?file@54.19:54.23CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java7\ 7(`2æ
eorg.jabref.logic.bibtex.FileFieldWriterTest.fileFieldWriterGetStringRepresentation()?file@54.19:54.23DECLARATIONH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java6 6(2]
voidRETURN_TYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java5 5(â
eorg.jabref.logic.bibtex.FileFieldWriterTest.fileFieldWriterGetStringRepresentation()?file@54.19:54.23VARIABLEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java6 6("
type
LinkedFile"
isFinalfalse"‡
declarationString <mark class="modifier"> </mark>LinkedFile <mark class="class-field">file</mark> = new LinkedFile("test"<mark class="modifier">,</mark> Path.of("X:\\Users\\abc.pdf")<mark class="modifier">,</mark> "PDF")*file2s
!org.jabref.model.entry.LinkedFileTYPEH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java6 6(2é
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java66 6(82∂
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLH
>src\test\java\org\jabref\logic\bibtex\FileFieldWriterTest.java6 6((