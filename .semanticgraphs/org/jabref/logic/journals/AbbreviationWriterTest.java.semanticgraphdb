
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.javaá
0org.jabref.logic.journals.AbbreviationWriterTestCLASSM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java ("$
packageorg.jabref.logic.journals"
isFinalfalse"
inner classfalse"

isAbstractfalse"∏
declarationString¢<mark class="annotation">@Execution(ExecutionMode.CONCURRENT)</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>AbbreviationWriterTest"
accesspackage_private*AbbreviationWriterTest2œ
qorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java	 (52Ÿ
{org.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java	 (?†
qorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)METHODM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java	 (5"
isFinalfalse"©
declarationStringì <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">shortestUniqueAbbreviationWrittenIfItDiffers</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*,shortestUniqueAbbreviationWrittenIfItDiffers2É
,java.nio.file.Path.resolve(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (&2ﬁ
Üorg.jabref.logic.journals.AbbreviationWriter.writeOrCreate(java.nio.file.Path, java.util.List<org.jabref.logic.journals.Abbreviation>)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java ((2k
java.util.List.of(E)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2k
java.util.List.of(E)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2ã
4java.nio.file.Files.readAllLines(java.nio.file.Path)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java3 (?2¿
iorg.jabref.logic.journals.Abbreviation.Abbreviation(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java( (42–
yorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)!tempDirCALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2›
Öorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?csvFile@19.13:19.20CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2‚
äorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?abbreviation@18.21:18.33CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java ($2›
Öorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?csvFile@19.13:19.20CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java@ (G2’
yorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)!tempDir	PARAMETERM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.javaD (K2È
äorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?abbreviation@18.21:18.33DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (!2‰
Öorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?csvFile@19.13:19.20DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (¥
äorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?abbreviation@18.21:18.33VARIABLEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (!"
typeAbbreviation"
isFinalfalse"”
declarationStringΩ<mark class="modifier"> </mark>Abbreviation <mark class="class-field">abbreviation</mark> = new Abbreviation("Full"<mark class="modifier">,</mark> "Abbr"<mark class="modifier">,</mark> "A")*abbreviation2}
&org.jabref.logic.journals.AbbreviationTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2¿
iorg.jabref.logic.journals.Abbreviation.Abbreviation(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java( (4œ
Öorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?csvFile@19.13:19.20VARIABLEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java ("
typePath"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>Path <mark class="class-field">csvFile</mark> = tempDir.resolve("test.csv")*csvFile2i
java.nio.file.PathTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2É
,java.nio.file.Path.resolve(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (&2–
yorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)!tempDirCALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (µ
yorg.jabref.logic.journals.AbbreviationWriterTest.shortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)!tempDir	PARAMETERM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.javaD (K"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2i
java.nio.file.PathTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java? (CÙ
{org.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)METHODM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java	 (?"
isFinalfalse"≥
declarationStringù <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*6doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers2É
,java.nio.file.Path.resolve(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (&2ﬁ
Üorg.jabref.logic.journals.AbbreviationWriter.writeOrCreate(java.nio.file.Path, java.util.List<org.jabref.logic.journals.Abbreviation>)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java ((2k
java.util.List.of(E)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java   (2k
java.util.List.of(E)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java! !(2ã
4java.nio.file.Files.readAllLines(java.nio.file.Path)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java!1 !(=2Æ
Worg.jabref.logic.journals.Abbreviation.Abbreviation(java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java( (42€
Éorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)!tempDirCALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2Á
èorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?csvFile@29.13:29.20CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2Ï
îorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?abbreviation@28.21:28.33CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java   ($2Á
èorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?csvFile@29.13:29.20CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java!> !(E2‡
Éorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)!tempDir	PARAMETERM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.javaN (U2Û
îorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?abbreviation@28.21:28.33DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (!2Ó
èorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?csvFile@29.13:29.20DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (â
îorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?abbreviation@28.21:28.33VARIABLEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (!"
typeAbbreviation"
isFinalfalse"∞
declarationStringö<mark class="modifier"> </mark>Abbreviation <mark class="class-field">abbreviation</mark> = new Abbreviation("Full"<mark class="modifier">,</mark> "Abbr")*abbreviation2}
&org.jabref.logic.journals.AbbreviationTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2Æ
Worg.jabref.logic.journals.Abbreviation.Abbreviation(java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java( (4‰
èorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)?csvFile@29.13:29.20VARIABLEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java ("
typePath"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>Path <mark class="class-field">csvFile</mark> = tempDir.resolve("test.csv")*csvFile2i
java.nio.file.PathTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (2É
,java.nio.file.Path.resolve(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (&2€
Éorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)!tempDirCALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.java (¿
Éorg.jabref.logic.journals.AbbreviationWriterTest.doNotWriteShortestUniqueAbbreviationWrittenIfItDiffers(java.nio.file.Path)!tempDir	PARAMETERM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.javaN (U"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2i
java.nio.file.PathTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationWriterTest.javaI (M