
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java¨
7org.jabref.logic.journals.JournalInformationFetcherTestCLASST
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java (#"$
packageorg.jabref.logic.journals"
isFinalfalse"
inner classfalse"

isAbstractfalse"ß
declarationStringë<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>JournalInformationFetcherTest"
accesspackage_private*JournalInformationFetcherTest2ß
Borg.jabref.logic.journals.JournalInformationFetcherTest.getsName()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java, ,(2∑
Rorg.jabref.logic.journals.JournalInformationFetcherTest.getsJournalInfoValidISSN()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java1 1((2∑
Rorg.jabref.logic.journals.JournalInformationFetcherTest.getsJournalInfoUsingName()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java6 6((2æ
Yorg.jabref.logic.journals.JournalInformationFetcherTest.sameEntryReturnedFromISSNOrName()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java; ;(/2ƒ
_org.jabref.logic.journals.JournalInformationFetcherTest.getsJournalInfoValidISSNWithoutHyphen()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java@ @(52º
Worg.jabref.logic.journals.JournalInformationFetcherTest.getsJournalInfoNonTrimmedISSN()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaE E(-2ª
Vorg.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoExtraSpaceISSN()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaJ J(,2∂
Qorg.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoEmptyISSN()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaO O('2∏
Sorg.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoInvalidISSN()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaT T()2¡
\org.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoInvalidISSNAndNoName()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaY Y(22º
Worg.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoNoISSNAndNoName()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java^ ^(-2¡
\org.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoNoISSNAndInvalidName()DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javac c(22∞
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java, (32ª
Vorg.jabref.logic.journals.JournalInformationFetcherTest?journalInformation@21.37:21.55DECLARATIONT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java% (7Ù
Borg.jabref.logic.journals.JournalInformationFetcherTest.getsName()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java, ,("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getsName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getsName2£
Eorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getName()CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java-4 -(;2©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java-, -(32i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java, ,(ﬂ	
Rorg.jabref.logic.journals.JournalInformationFetcherTest.getsJournalInfoValidISSN()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java1 1(("
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getsJournalInfoValidISSN</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getsJournalInfoValidISSN2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java2> 2(S2¥
Vorg.jabref.logic.journals.JournalInformationFetcherTest?journalInformation@21.37:21.55CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java2! 2(32©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java26 2(=2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java1 1(ﬂ	
Rorg.jabref.logic.journals.JournalInformationFetcherTest.getsJournalInfoUsingName()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java6 6(("
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getsJournalInfoUsingName</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getsJournalInfoUsingName2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java7> 7(S2¥
Vorg.jabref.logic.journals.JournalInformationFetcherTest?journalInformation@21.37:21.55CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java7! 7(32©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java76 7(=2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java6 6(ø
Yorg.jabref.logic.journals.JournalInformationFetcherTest.sameEntryReturnedFromISSNOrName()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java; ;(/"
isFinalfalse"ô
declarationStringÉ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sameEntryReturnedFromISSNOrName</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*sameEntryReturnedFromISSNOrName2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java< <(22”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java<M <(b2©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java< <(2©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java<E <(L2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java; ;(Ü

_org.jabref.logic.journals.JournalInformationFetcherTest.getsJournalInfoValidISSNWithoutHyphen()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java@ @(5"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getsJournalInfoValidISSNWithoutHyphen</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*%getsJournalInfoValidISSNWithoutHyphen2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaA> A(S2¥
Vorg.jabref.logic.journals.JournalInformationFetcherTest?journalInformation@21.37:21.55CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaA! A(32©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaA6 A(=2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java@ @(Ó	
Worg.jabref.logic.journals.JournalInformationFetcherTest.getsJournalInfoNonTrimmedISSN()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaE E(-"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getsJournalInfoNonTrimmedISSN</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getsJournalInfoNonTrimmedISSN2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaF> F(S2¥
Vorg.jabref.logic.journals.JournalInformationFetcherTest?journalInformation@21.37:21.55CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaF! F(32©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaF6 F(=2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaE E(‡
Vorg.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoExtraSpaceISSN()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaJ J(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getJournalInfoExtraSpaceISSN</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getJournalInfoExtraSpaceISSN2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaK; K(P2©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaK3 K(:2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaJ J(—
Qorg.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoEmptyISSN()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaO O('"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getJournalInfoEmptyISSN</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getJournalInfoEmptyISSN2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaP; P(P2©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaP3 P(:2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaO O(◊
Sorg.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoInvalidISSN()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaT T()"
isFinalfalse"ø
declarationString©<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getJournalInfoInvalidISSN</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getJournalInfoInvalidISSN2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaU; U(P2©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaU3 U(:2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaT T(Ú
\org.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoInvalidISSNAndNoName()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaY Y(2"
isFinalfalse"»
declarationString≤<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getJournalInfoInvalidISSNAndNoName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*"getJournalInfoInvalidISSNAndNoName2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaZ; Z(P2©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaZ3 Z(:2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javaY Y(„
Worg.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoNoISSNAndNoName()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java^ ^(-"
isFinalfalse"√
declarationString≠<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getJournalInfoNoISSNAndNoName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getJournalInfoNoISSNAndNoName2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java_; _(P2©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java_3 _(:2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java^ ^(Ú
\org.jabref.logic.journals.JournalInformationFetcherTest.getJournalInfoNoISSNAndInvalidName()METHODT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javac c(2"
isFinalfalse"»
declarationString≤<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getJournalInfoNoISSNAndInvalidName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*"getJournalInfoNoISSNAndInvalidName2”
uorg.jabref.logic.importer.fetcher.JournalInformationFetcher.getJournalInformation(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javad; d(P2©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javad3 d(:2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.javac c(©
Korg.jabref.logic.journals.JournalInformationFetcherTest?fetcher@19.44:19.51VALUET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java, (3"
isFinaltrue"!
typeJournalInformationFetcher"≈
declarationStringØ<mark class="modifier">private </mark><mark class="modifier">final </mark>JournalInformationFetcher <mark class="class-field">fetcher</mark> = new JournalInformationFetcher();"
isStaticfalse"
accessprivate*fetcher2ô
;org.jabref.logic.importer.fetcher.JournalInformationFetcherTYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java (+2µ
Worg.jabref.logic.importer.fetcher.JournalInformationFetcher.JournalInformationFetcher()CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java: (Sïd
Vorg.jabref.logic.journals.JournalInformationFetcherTest?journalInformation@21.37:21.55VALUET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java% (7"
isFinaltrue"
typeJournalInformation"ŸX
declarationString√X<mark class="modifier">private </mark><mark class="modifier">final </mark>JournalInformation <mark class="class-field">journalInformation</mark> = new JournalInformation("Annual Review of Biochemistry"<mark class="modifier">,</mark> "Annual Reviews Inc."<mark class="modifier">,</mark> ""<mark class="modifier">,</mark> ""<mark class="modifier">,</mark> "Biochemistry,  Genetics and Molecular Biology"<mark class="modifier">,</mark> "United States"<mark class="modifier">,</mark> "Biochemistry (Q1)"<mark class="modifier">,</mark> "16801"<mark class="modifier">,</mark> "316"<mark class="modifier">,</mark> "15454509,  00664154"<mark class="modifier">,</mark> List.of(new Pair<>(1999, 50.518)<mark class="modifier">,</mark> new Pair<>(2000, 39.127)<mark class="modifier">,</mark> new Pair<>(2001, 39.946)<mark class="modifier">,</mark> new Pair<>(2002, 35.423)<mark class="modifier">,</mark> new Pair<>(2003, 35.186)<mark class="modifier">,</mark> new Pair<>(2004, 34.766)<mark class="modifier">,</mark> new Pair<>(2005, 32.241)<mark class="modifier">,</mark> new Pair<>(2006, 35.708)<mark class="modifier">,</mark> new Pair<>(2007, 34.376)<mark class="modifier">,</mark> new Pair<>(2008, 35.294)<mark class="modifier">,</mark> new Pair<>(2009, 31.033)<mark class="modifier">,</mark> new Pair<>(2010, 30.879)<mark class="modifier">,</mark> new Pair<>(2011, 30.916)<mark class="modifier">,</mark> new Pair<>(2012, 27.081)<mark class="modifier">,</mark> new Pair<>(2013, 27.872)<mark class="modifier">,</mark> new Pair<>(2014, 23.931)<mark class="modifier">,</mark> new Pair<>(2015, 24.589)<mark class="modifier">,</mark> new Pair<>(2016, 20.325)<mark class="modifier">,</mark> new Pair<>(2017, 18.513)<mark class="modifier">,</mark> new Pair<>(2018, 17.5)<mark class="modifier">,</mark> new Pair<>(2019, 17.387)<mark class="modifier">,</mark> new Pair<>(2020, 16.921)<mark class="modifier">,</mark> new Pair<>(2021, 13.085)<mark class="modifier">,</mark> new Pair<>(2022, 11.154))<mark class="modifier">,</mark> List.of()<mark class="modifier">,</mark> List.of(new Pair<>(1999, 30.0)<mark class="modifier">,</mark> new Pair<>(2000, 31.0)<mark class="modifier">,</mark> new Pair<>(2001, 23.0)<mark class="modifier">,</mark> new Pair<>(2002, 27.0)<mark class="modifier">,</mark> new Pair<>(2003, 24.0)<mark class="modifier">,</mark> new Pair<>(2004, 33.0)<mark class="modifier">,</mark> new Pair<>(2005, 28.0)<mark class="modifier">,</mark> new Pair<>(2006, 30.0)<mark class="modifier">,</mark> new Pair<>(2007, 33.0)<mark class="modifier">,</mark> new Pair<>(2008, 31.0)<mark class="modifier">,</mark> new Pair<>(2009, 35.0)<mark class="modifier">,</mark> new Pair<>(2010, 28.0)<mark class="modifier">,</mark> new Pair<>(2011, 42.0)<mark class="modifier">,</mark> new Pair<>(2012, 32.0)<mark class="modifier">,</mark> new Pair<>(2013, 28.0)<mark class="modifier">,</mark> new Pair<>(2014, 31.0)<mark class="modifier">,</mark> new Pair<>(2015, 35.0)<mark class="modifier">,</mark> new Pair<>(2016, 29.0)<mark class="modifier">,</mark> new Pair<>(2017, 35.0)<mark class="modifier">,</mark> new Pair<>(2018, 40.0)<mark class="modifier">,</mark> new Pair<>(2019, 30.0)<mark class="modifier">,</mark> new Pair<>(2020, 32.0)<mark class="modifier">,</mark> new Pair<>(2021, 32.0)<mark class="modifier">,</mark> new Pair<>(2022, 29.0))<mark class="modifier">,</mark> List.of(new Pair<>(1999, 79.0)<mark class="modifier">,</mark> new Pair<>(2000, 84.0)<mark class="modifier">,</mark> new Pair<>(2001, 88.0)<mark class="modifier">,</mark> new Pair<>(2002, 84.0)<mark class="modifier">,</mark> new Pair<>(2003, 81.0)<mark class="modifier">,</mark> new Pair<>(2004, 74.0)<mark class="modifier">,</mark> new Pair<>(2005, 84.0)<mark class="modifier">,</mark> new Pair<>(2006, 85.0)<mark class="modifier">,</mark> new Pair<>(2007, 91.0)<mark class="modifier">,</mark> new Pair<>(2008, 91.0)<mark class="modifier">,</mark> new Pair<>(2009, 94.0)<mark class="modifier">,</mark> new Pair<>(2010, 99.0)<mark class="modifier">,</mark> new Pair<>(2011, 94.0)<mark class="modifier">,</mark> new Pair<>(2012, 105.0)<mark class="modifier">,</mark> new Pair<>(2013, 102.0)<mark class="modifier">,</mark> new Pair<>(2014, 102.0)<mark class="modifier">,</mark> new Pair<>(2015, 91.0)<mark class="modifier">,</mark> new Pair<>(2016, 94.0)<mark class="modifier">,</mark> new Pair<>(2017, 95.0)<mark class="modifier">,</mark> new Pair<>(2018, 99.0)<mark class="modifier">,</mark> new Pair<>(2019, 104.0)<mark class="modifier">,</mark> new Pair<>(2020, 105.0)<mark class="modifier">,</mark> new Pair<>(2021, 102.0)<mark class="modifier">,</mark> new Pair<>(2022, 94.0))<mark class="modifier">,</mark> List.of(new Pair<>(1999, 79.0)<mark class="modifier">,</mark> new Pair<>(2000, 84.0)<mark class="modifier">,</mark> new Pair<>(2001, 88.0)<mark class="modifier">,</mark> new Pair<>(2002, 84.0)<mark class="modifier">,</mark> new Pair<>(2003, 81.0)<mark class="modifier">,</mark> new Pair<>(2004, 74.0)<mark class="modifier">,</mark> new Pair<>(2005, 84.0)<mark class="modifier">,</mark> new Pair<>(2006, 85.0)<mark class="modifier">,</mark> new Pair<>(2007, 91.0)<mark class="modifier">,</mark> new Pair<>(2008, 91.0)<mark class="modifier">,</mark> new Pair<>(2009, 94.0)<mark class="modifier">,</mark> new Pair<>(2010, 99.0)<mark class="modifier">,</mark> new Pair<>(2011, 94.0)<mark class="modifier">,</mark> new Pair<>(2012, 105.0)<mark class="modifier">,</mark> new Pair<>(2013, 102.0)<mark class="modifier">,</mark> new Pair<>(2014, 102.0)<mark class="modifier">,</mark> new Pair<>(2015, 91.0)<mark class="modifier">,</mark> new Pair<>(2016, 94.0)<mark class="modifier">,</mark> new Pair<>(2017, 95.0)<mark class="modifier">,</mark> new Pair<>(2018, 99.0)<mark class="modifier">,</mark> new Pair<>(2019, 104.0)<mark class="modifier">,</mark> new Pair<>(2020, 105.0)<mark class="modifier">,</mark> new Pair<>(2021, 102.0)<mark class="modifier">,</mark> new Pair<>(2022, 94.0))<mark class="modifier">,</mark> List.of(new Pair<>(1999, 3477.0)<mark class="modifier">,</mark> new Pair<>(2000, 3423.0)<mark class="modifier">,</mark> new Pair<>(2001, 4143.0)<mark class="modifier">,</mark> new Pair<>(2002, 3586.0)<mark class="modifier">,</mark> new Pair<>(2003, 3266.0)<mark class="modifier">,</mark> new Pair<>(2004, 3004.0)<mark class="modifier">,</mark> new Pair<>(2005, 3064.0)<mark class="modifier">,</mark> new Pair<>(2006, 3422.0)<mark class="modifier">,</mark> new Pair<>(2007, 3287.0)<mark class="modifier">,</mark> new Pair<>(2008, 3194.0)<mark class="modifier">,</mark> new Pair<>(2009, 3193.0)<mark class="modifier">,</mark> new Pair<>(2010, 3410.0)<mark class="modifier">,</mark> new Pair<>(2011, 3445.0)<mark class="modifier">,</mark> new Pair<>(2012, 3617.0)<mark class="modifier">,</mark> new Pair<>(2013, 3523.0)<mark class="modifier">,</mark> new Pair<>(2014, 3000.0)<mark class="modifier">,</mark> new Pair<>(2015, 2634.0)<mark class="modifier">,</mark> new Pair<>(2016, 2279.0)<mark class="modifier">,</mark> new Pair<>(2017, 2218.0)<mark class="modifier">,</mark> new Pair<>(2018, 2655.0)<mark class="modifier">,</mark> new Pair<>(2019, 2902.0)<mark class="modifier">,</mark> new Pair<>(2020, 3350.0)<mark class="modifier">,</mark> new Pair<>(2021, 2788.0)<mark class="modifier">,</mark> new Pair<>(2022, 2389.0))<mark class="modifier">,</mark> List.of(new Pair<>(1999, 36.15)<mark class="modifier">,</mark> new Pair<>(2000, 43.37)<mark class="modifier">,</mark> new Pair<>(2001, 32.46)<mark class="modifier">,</mark> new Pair<>(2002, 37.22)<mark class="modifier">,</mark> new Pair<>(2003, 39.46)<mark class="modifier">,</mark> new Pair<>(2004, 33.18)<mark class="modifier">,</mark> new Pair<>(2005, 34.46)<mark class="modifier">,</mark> new Pair<>(2006, 39.18)<mark class="modifier">,</mark> new Pair<>(2007, 33.69)<mark class="modifier">,</mark> new Pair<>(2008, 31.49)<mark class="modifier">,</mark> new Pair<>(2009, 32.16)<mark class="modifier">,</mark> new Pair<>(2010, 31.52)<mark class="modifier">,</mark> new Pair<>(2011, 36.89)<mark class="modifier">,</mark> new Pair<>(2012, 30.5)<mark class="modifier">,</mark> new Pair<>(2013, 29.01)<mark class="modifier">,</mark> new Pair<>(2014, 32.67)<mark class="modifier">,</mark> new Pair<>(2015, 23.68)<mark class="modifier">,</mark> new Pair<>(2016, 21.65)<mark class="modifier">,</mark> new Pair<>(2017, 22.08)<mark class="modifier">,</mark> new Pair<>(2018, 28.06)<mark class="modifier">,</mark> new Pair<>(2019, 27.41)<mark class="modifier">,</mark> new Pair<>(2020, 22.46)<mark class="modifier">,</mark> new Pair<>(2021, 26.55)<mark class="modifier">,</mark> new Pair<>(2022, 17.13))<mark class="modifier">,</mark> List.of(new Pair<>(1999, 5913.0)<mark class="modifier">,</mark> new Pair<>(2000, 5859.0)<mark class="modifier">,</mark> new Pair<>(2001, 4150.0)<mark class="modifier">,</mark> new Pair<>(2002, 4856.0)<mark class="modifier">,</mark> new Pair<>(2003, 4453.0)<mark class="modifier">,</mark> new Pair<>(2004, 5355.0)<mark class="modifier">,</mark> new Pair<>(2005, 4201.0)<mark class="modifier">,</mark> new Pair<>(2006, 4354.0)<mark class="modifier">,</mark> new Pair<>(2007, 4786.0)<mark class="modifier">,</mark> new Pair<>(2008, 4666.0)<mark class="modifier">,</mark> new Pair<>(2009, 5344.0)<mark class="modifier">,</mark> new Pair<>(2010, 4477.0)<mark class="modifier">,</mark> new Pair<>(2011, 6209.0)<mark class="modifier">,</mark> new Pair<>(2012, 4863.0)<mark class="modifier">,</mark> new Pair<>(2013, 4697.0)<mark class="modifier">,</mark> new Pair<>(2014, 5207.0)<mark class="modifier">,</mark> new Pair<>(2015, 5186.0)<mark class="modifier">,</mark> new Pair<>(2016, 4508.0)<mark class="modifier">,</mark> new Pair<>(2017, 5103.0)<mark class="modifier">,</mark> new Pair<>(2018, 5630.0)<mark class="modifier">,</mark> new Pair<>(2019, 4749.0)<mark class="modifier">,</mark> new Pair<>(2020, 4637.0)<mark class="modifier">,</mark> new Pair<>(2021, 4872.0)<mark class="modifier">,</mark> new Pair<>(2022, 4437.0))<mark class="modifier">,</mark> List.of(new Pair<>(1999, 197.1)<mark class="modifier">,</mark> new Pair<>(2000, 189.0)<mark class="modifier">,</mark> new Pair<>(2001, 180.43)<mark class="modifier">,</mark> new Pair<>(2002, 179.85)<mark class="modifier">,</mark> new Pair<>(2003, 185.54)<mark class="modifier">,</mark> new Pair<>(2004, 162.27)<mark class="modifier">,</mark> new Pair<>(2005, 150.04)<mark class="modifier">,</mark> new Pair<>(2006, 145.13)<mark class="modifier">,</mark> new Pair<>(2007, 145.03)<mark class="modifier">,</mark> new Pair<>(2008, 150.52)<mark class="modifier">,</mark> new Pair<>(2009, 152.69)<mark class="modifier">,</mark> new Pair<>(2010, 159.89)<mark class="modifier">,</mark> new Pair<>(2011, 147.83)<mark class="modifier">,</mark> new Pair<>(2012, 151.97)<mark class="modifier">,</mark> new Pair<>(2013, 167.75)<mark class="modifier">,</mark> new Pair<>(2014, 167.97)<mark class="modifier">,</mark> new Pair<>(2015, 148.17)<mark class="modifier">,</mark> new Pair<>(2016, 155.45)<mark class="modifier">,</mark> new Pair<>(2017, 145.8)<mark class="modifier">,</mark> new Pair<>(2018, 140.75)<mark class="modifier">,</mark> new Pair<>(2019, 158.3)<mark class="modifier">,</mark> new Pair<>(2020, 144.91)<mark class="modifier">,</mark> new Pair<>(2021, 152.25)<mark class="modifier">,</mark> new Pair<>(2022, 153.0)));"
isStaticfalse"
accessprivate*journalInformation2p
JournalInformationTYPET
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java ($2u
java.util.List.of(E...)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java   (2q
java.util.List.of()CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java! !(2u
java.util.List.of(E...)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java" "(2u
java.util.List.of(E...)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java# #(2u
java.util.List.of(E...)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java$ $(2u
java.util.List.of(E...)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java% %(2u
java.util.List.of(E...)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java& &(2u
java.util.List.of(E...)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java' '(2u
java.util.List.of(E...)CALLT
Jsrc\test\java\org\jabref\logic\journals\JournalInformationFetcherTest.java( ((