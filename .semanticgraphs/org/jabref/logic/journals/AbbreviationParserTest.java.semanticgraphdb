
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.javaã
0org.jabref.logic.journals.AbbreviationParserTestCLASSM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (#"$
packageorg.jabref.logic.journals"
isFinalfalse"
inner classfalse"

isAbstractfalse"t
declarationString_<mark class="modifier">public </mark><mark class="modifier">class </mark>AbbreviationParserTest"
accesspublic*AbbreviationParserTest2®
Jorg.jabref.logic.journals.AbbreviationParserTest.setup(java.nio.file.Path)DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java	 (2∞
Rorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithSemicolon()DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java	 ((2¨
Norg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithComma()DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java&	 &($2¢
Dorg.jabref.logic.journals.AbbreviationParserTest?csvFile@16.17:16.24DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (2°
Corg.jabref.logic.journals.AbbreviationParserTest?parser@17.37:17.43DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java% (+2ß
Iorg.jabref.logic.journals.AbbreviationParserTest?abbreviation@19.31:19.43DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (+™	
Jorg.jabref.logic.journals.AbbreviationParserTest.setup(java.nio.file.Path)METHODM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java	 ("
isFinalfalse"µ
declarationStringü <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setup</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setup2É
,java.nio.file.Path.resolve(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (!2õ
Dorg.jabref.logic.journals.AbbreviationParserTest?csvFile@16.17:16.24CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (2©
Rorg.jabref.logic.journals.AbbreviationParserTest.setup(java.nio.file.Path)!tempDirCALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (2Æ
Rorg.jabref.logic.journals.AbbreviationParserTest.setup(java.nio.file.Path)!tempDir	PARAMETERM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java ($2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (é
Rorg.jabref.logic.journals.AbbreviationParserTest.setup(java.nio.file.Path)!tempDir	PARAMETERM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java ($"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2i
java.nio.file.PathTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (Õ
Rorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithSemicolon()METHODM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java	 (("
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">readingFileFromCSVWithSemicolon</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*readingFileFromCSVWithSemicolon2«
pjava.nio.file.Files.newBufferedWriter(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java+ (<2}
&java.io.Writer.write(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (2Ø
Xorg.jabref.logic.journals.AbbreviationParser.readJournalListFromFile(java.nio.file.Path)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java! !(&2j
java.util.Set.of(E)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java" "(2ñ
?org.jabref.logic.journals.AbbreviationParser.getAbbreviations()CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java"2 "(B2õ
Dorg.jabref.logic.journals.AbbreviationParserTest?csvFile@16.17:16.24CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java= (D2º
eorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithSemicolon()?writer@30.28:30.34CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (2¿
iorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithSemicolon()?testAbbrev@29.15:29.25CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (#2ö
Corg.jabref.logic.journals.AbbreviationParserTest?parser@17.37:17.43CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java! !(2õ
Dorg.jabref.logic.journals.AbbreviationParserTest?csvFile@16.17:16.24CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java!' !(.2†
Iorg.jabref.logic.journals.AbbreviationParserTest?abbreviation@19.31:19.43CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java" "((2ö
Corg.jabref.logic.journals.AbbreviationParserTest?parser@17.37:17.43CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java"+ "(12«
iorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithSemicolon()?testAbbrev@29.15:29.25DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (2√
eorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithSemicolon()?writer@30.28:30.34DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java ("2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (€
iorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithSemicolon()?testAbbrev@29.15:29.25VARIABLEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java ("
typeString"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>String <mark class="class-field">testAbbrev</mark> = "Long Name;L.N.;L.N."*
testAbbrev2g
java.lang.StringTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (Ú
eorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithSemicolon()?writer@30.28:30.34VARIABLEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (""
typeBufferedWriter"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>BufferedWriter <mark class="class-field">writer</mark> = Files.newBufferedWriter(csvFile, StandardCharsets.UTF_8)*writer2m
java.io.BufferedWriterTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (2«
pjava.nio.file.Files.newBufferedWriter(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java+ (<2õ
Dorg.jabref.logic.journals.AbbreviationParserTest?csvFile@16.17:16.24CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java= (D±
Norg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithComma()METHODM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java&	 &($"
isFinalfalse"à
declarationStringÚ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">readingFileFromCSVWithComma</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*readingFileFromCSVWithComma2«
pjava.nio.file.Files.newBufferedWriter(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java(+ ((<2}
&java.io.Writer.write(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java) )(2Ø
Xorg.jabref.logic.journals.AbbreviationParser.readJournalListFromFile(java.nio.file.Path)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java+ +(&2j
java.util.Set.of(E)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java, ,(2ñ
?org.jabref.logic.journals.AbbreviationParser.getAbbreviations()CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java,2 ,(B2õ
Dorg.jabref.logic.journals.AbbreviationParserTest?csvFile@16.17:16.24CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java(= ((D2∏
aorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithComma()?writer@40.28:40.34CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java) )(2º
eorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithComma()?testAbbrev@39.15:39.25CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java) )(#2ö
Corg.jabref.logic.journals.AbbreviationParserTest?parser@17.37:17.43CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java+ +(2õ
Dorg.jabref.logic.journals.AbbreviationParserTest?csvFile@16.17:16.24CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java+' +(.2†
Iorg.jabref.logic.journals.AbbreviationParserTest?abbreviation@19.31:19.43CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java, ,((2ö
Corg.jabref.logic.journals.AbbreviationParserTest?parser@17.37:17.43CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java,+ ,(12√
eorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithComma()?testAbbrev@39.15:39.25DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java' '(2ø
aorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithComma()?writer@40.28:40.34DECLARATIONM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java( (("2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java& &(◊
eorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithComma()?testAbbrev@39.15:39.25VARIABLEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java' '("
typeString"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>String <mark class="class-field">testAbbrev</mark> = "Long Name,L.N.,L.N."*
testAbbrev2g
java.lang.StringTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java' '(Ó
aorg.jabref.logic.journals.AbbreviationParserTest.readingFileFromCSVWithComma()?writer@40.28:40.34VARIABLEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java( ((""
typeBufferedWriter"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>BufferedWriter <mark class="class-field">writer</mark> = Files.newBufferedWriter(csvFile, StandardCharsets.UTF_8)*writer2m
java.io.BufferedWriterTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java( ((2«
pjava.nio.file.Files.newBufferedWriter(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java(+ ((<2õ
Dorg.jabref.logic.journals.AbbreviationParserTest?csvFile@16.17:16.24CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java(= ((D√
Dorg.jabref.logic.journals.AbbreviationParserTest?csvFile@16.17:16.24VARIABLEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java ("
isFinalfalse"
typePath"h
declarationStringS<mark class="modifier">private </mark>Path <mark class="class-field">csvFile</mark>"
isStaticfalse"
accessprivate*csvFile2i
java.nio.file.PathTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (–
Corg.jabref.logic.journals.AbbreviationParserTest?parser@17.37:17.43VALUEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java% (+"
isFinaltrue"
typeAbbreviationParser"∂
declarationString†<mark class="modifier">private </mark><mark class="modifier">final </mark>AbbreviationParser <mark class="class-field">parser</mark> = new AbbreviationParser();"
isStaticfalse"
accessprivate*parser2É
,org.jabref.logic.journals.AbbreviationParserTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java ($2ò
Aorg.jabref.logic.journals.AbbreviationParser.AbbreviationParser()CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java2 (D»
Iorg.jabref.logic.journals.AbbreviationParserTest?abbreviation@19.31:19.43VALUEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (+"
isFinaltrue"
typeAbbreviation"á
declarationStringÒ<mark class="modifier">private </mark><mark class="modifier">final </mark>Abbreviation <mark class="class-field">abbreviation</mark> = new Abbreviation("Long Name"<mark class="modifier">,</mark> "L.N."<mark class="modifier">,</mark> "L.N.");"
isStaticfalse"
accessprivate*abbreviation2}
&org.jabref.logic.journals.AbbreviationTYPEM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java (2¿
iorg.jabref.logic.journals.Abbreviation.Abbreviation(java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\journals\AbbreviationParserTest.java2 (>