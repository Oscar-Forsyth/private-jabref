
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java∫
"org.jabref.logic.xmp.XmpUtilSharedCLASS?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java ("
packageorg.jabref.logic.xmp"
isFinalfalse"
inner classfalse"

isAbstractfalse"k
declarationStringV<mark class="modifier">public </mark><mark class="modifier">class </mark>XmpUtilShared"
accesspublic*XmpUtilShared2Ç
2org.jabref.logic.xmp.XmpUtilShared.XmpUtilShared()DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (2ò
Horg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java! (12∑
gorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java/ /(%2Ö
5org.jabref.logic.xmp.XmpUtilShared?LOGGER@20.32:20.38DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java  (&Ì
2org.jabref.logic.xmp.XmpUtilShared.XmpUtilShared()CONSTRUCTOR?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java ("f
declarationStringQ<mark class="modifier">private </mark><mark class="method">XmpUtilShared</mark>()*XmpUtilShared2r
"org.jabref.logic.xmp.XmpUtilSharedRETURN_TYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (º
Horg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)METHOD?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java! (1"
isFinalfalse"˙
declarationString‰<mark class="modifier">protected </mark><mark class="modifier">static </mark>XMPMetadata <mark class="method">parseXmpMetadata</mark>(InputStream is)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
access	protected"

isAbstractfalse"
typeXMPMetadata*parseXmpMetadata2}
4java.io.IOException.IOException(java.lang.Throwable)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java! !(!2¢
Yorg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?meta@26.20:26.24CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (2§
[org.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?parser@28.25:28.31CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (2î
Korg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)!isCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java  ("2¢
Yorg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?meta@26.20:26.24CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (2ü
Vorg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?e@31.27:31.28CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java!" !(#2ô
Korg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)!is	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java> (@2©
Yorg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?meta@26.20:26.24DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (2´
[org.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?parser@28.25:28.31DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (2¶
Vorg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?e@31.27:31.28DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (2m
org.apache.xmpbox.XMPMetadataRETURN_TYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java ( ¢
Yorg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?meta@26.20:26.24VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java ("
typeXMPMetadata"
isFinalfalse"e
declarationStringP<mark class="modifier"> </mark>XMPMetadata <mark class="class-field">meta</mark>*meta2f
org.apache.xmpbox.XMPMetadataTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (ƒ
[org.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?parser@28.25:28.31VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java ("
typeDomXmpParser"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>DomXmpParser <mark class="class-field">parser</mark> = new DomXmpParser()*parser2k
"org.apache.xmpbox.xml.DomXmpParserTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java («
Korg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)!is	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java> (@"
typeInputStream"
isFinalfalse"#
declarationStringInputStream is*is2\
java.io.InputStreamTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java2 (=À
Vorg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)?e@31.27:31.28VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java ("
type	Exception"
isFinalfalse" 
declarationStringException e*e2\
java.lang.ExceptionTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java („
gorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)METHOD?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java/ /(%"
isFinalfalse"ì
declarationString˝<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">hasMetadata</mark>(Path path<mark class="modifier"><mark class="modifier">,</mark></mark> XmpPreferences xmpPreferences)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeboolean*hasMetadata2¨
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1< 1(C2a
java.util.List.isEmpty()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java2 2(&2f
java.nio.file.Path.toString()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java7O 7(W2{
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1, 1(92µ
lorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!pathCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1D 1(H2ø
vorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!xmpPreferencesCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1J 1(X2«
~org.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?bibEntries@49.27:49.37CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java2 2(2~
5org.jabref.logic.xmp.XmpUtilShared?LOGGER@20.32:20.38CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java4 4(2µ
lorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!pathCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java7J 7(N2~
5org.jabref.logic.xmp.XmpUtilShared?LOGGER@20.32:20.38CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java7 7( 2∫
lorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!path	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java/+ /(/2ƒ
vorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!xmpPreferences	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java/@ /(N2Œ
~org.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?bibEntries@49.27:49.37DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1 1(%2∆
vorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?ex@51.52:51.54DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java34 3(62≈
uorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?e@54.29:54.30DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java6 6(2W
booleanRETURN_TYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java/ /(ô

~org.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?bibEntries@49.27:49.37VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1 1(%"
typeList<BibEntry>"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = new XmpUtilReader().readXmp(path, xmpPreferences)*
bibEntries2W
java.util.ListTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1 1(2q
org.jabref.model.entry.BibEntryTYPE_ARGUMENT?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1 1(2¨
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1< 1(C2{
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1, 1(92µ
lorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!pathCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1D 1(H2ø
vorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!xmpPreferencesCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java1J 1(X›
lorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!path	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java/+ /(/"
typePath"
isFinalfalse"
declarationString	Path path*path2[
java.nio.file.PathTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java/& /(*†
vorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!xmpPreferences	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java/@ /(N"
typeXmpPreferences"
isFinalfalse"2
declarationStringXmpPreferences xmpPreferences*xmpPreferences2l
#org.jabref.logic.xmp.XmpPreferencesTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java/1 /(?ƒ
vorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?ex@51.52:51.54VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java34 3(6"*
type"EncryptedPdfsNotSupportedException"
isFinalfalse":
declarationString%EncryptedPdfsNotSupportedException ex*ex2Ä
7org.jabref.logic.xmp.EncryptedPdfsNotSupportedExceptionTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java3 3(3Ó
uorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?e@54.29:54.30VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java6 6("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2\
java.io.IOExceptionTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java6 6(é
5org.jabref.logic.xmp.XmpUtilShared?LOGGER@20.32:20.38VALUE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java  (&"
isFinaltrue"
typeLogger"„
declarationStringÕ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(XmpUtilShared.class);"
isStatictrue"
accessprivate*LOGGER2Y
org.slf4j.LoggerTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilShared.java (