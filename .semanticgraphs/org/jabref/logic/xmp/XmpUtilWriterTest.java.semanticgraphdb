
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java‡
&org.jabref.logic.xmp.XmpUtilWriterTestCLASSC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java ("
packageorg.jabref.logic.xmp"
isFinalfalse"
inner classfalse"

isAbstractfalse"i
declarationStringT<mark class="modifier"> </mark><mark class="modifier">class </mark>XmpUtilWriterTest"
accesspackage_private*XmpUtilWriterTest2Ç
.org.jabref.logic.xmp.XmpUtilWriterTest.setUp()DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaO	 O(2¨
Xorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaY	 Y(2ä
6org.jabref.logic.xmp.XmpUtilWriterTest.olly2018Works()DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javah	 h(2ã
7org.jabref.logic.xmp.XmpUtilWriterTest.toral2006Works()DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javam	 m(2å
8org.jabref.logic.xmp.XmpUtilWriterTest.vapnik2000Works()DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javar	 r(2°
Morg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaw	 w(2•
Oorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÜ	 Ü(2∞
Zorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaï	 ï((2≠
Worg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java§	 §(%2≠
Worg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java±	 ±(%2ú
Forg.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaæ	 æ(2¥
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÀ À("2é
:org.jabref.logic.xmp.XmpUtilWriterTest?tempDir@32.17:32.24DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java   (2è
;org.jabref.logic.xmp.XmpUtilWriterTest?olly2018@34.27:34.35DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java" "(#2ê
<org.jabref.logic.xmp.XmpUtilWriterTest?toral2006@56.27:56.36DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java8 8($2ë
=org.jabref.logic.xmp.XmpUtilWriterTest?vapnik2000@64.27:64.37DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java@ @(%2ï
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaL L()∫	
.org.jabref.logic.xmp.XmpUtilWriterTest.setUp()METHODC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaO	 O("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2Ü
9org.jabref.logic.xmp.XmpPreferences.getKeywordSeparator()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaQ Q(/2å
?org.jabref.logic.xmp.XmpPreferences.shouldUseXmpPrivacyFilter()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaS S(52é
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaP P(2é
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaQ Q(2é
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaS S(2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaO O(«$
Xorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)METHODC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaY	 Y("
isFinalfalse"·
declarationStringÀ<mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">singleEntryWorks</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*singleEntryWorks2´
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaZ Z(-2’
áorg.jabref.logic.xmp.XmpUtilWriter.writeXmp(java.nio.file.Path, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java\* \(22p
#java.nio.file.Path.toAbsolutePath()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java\; \(I2∞
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^< ^(C2õ
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaa a(2õ
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javab b(2a
java.util.List.of(E)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javad d(2¢
Uorg.jabref.logic.xmp.XmpUtilWriter.XmpUtilWriter(org.jabref.logic.xmp.XmpPreferences)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java\ \(2
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^, ^(92á
:org.jabref.logic.xmp.XmpUtilWriterTest?tempDir@32.17:32.24CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaZH Z(O2é
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java\ \((2π
lorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?pdfFile@90.13:90.20CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java\3 \(:2´
^org.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)!entryCALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java\M \(R2π
lorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?pdfFile@90.13:90.20CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^D ^(K2é
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^M ^([2¿
sorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?entriesWritten@94.23:94.37CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java`  `(.2æ
qorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?entryWritten@96.17:96.29CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaa a(2´
^org.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)!entryCALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javab b(2´
^org.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)!entryCALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javad d("2¿
sorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?entriesWritten@94.23:94.37CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javad% d(32∞
^org.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)!entry	PARAMETERC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaY# Y((2¿
lorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?pdfFile@90.13:90.20DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaZ Z(2«
sorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?entriesWritten@94.23:94.37DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^ ^(%2≈
qorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?entryWritten@96.17:96.29DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java` `(2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaY Y(‹
lorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?pdfFile@90.13:90.20VARIABLEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaZ Z("
typePath"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark>Path <mark class="class-field">pdfFile</mark> = <mark class="modifier">this</mark>.createDefaultFile("JabRef_writeSingle.pdf"<mark class="modifier">,</mark> tempDir)*pdfFile2_
java.nio.file.PathTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaZ Z(2´
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaZ Z(-2á
:org.jabref.logic.xmp.XmpUtilWriterTest?tempDir@32.17:32.24CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaZH Z(OÄ

sorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?entriesWritten@94.23:94.37VARIABLEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^ ^(%"
typeList<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entriesWritten</mark> = new XmpUtilReader().readXmp(pdfFile, xmpPreferences)*entriesWritten2[
java.util.ListTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^ ^(2u
org.jabref.model.entry.BibEntryTYPE_ARGUMENTC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^ ^(2∞
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^< ^(C2
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^, ^(92π
lorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?pdfFile@90.13:90.20CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^D ^(K2é
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java^M ^([Æ
qorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?entryWritten@96.17:96.29VARIABLEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java` `("
typeBibEntry"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryWritten</mark> = entriesWritten.getFirst()*entryWritten2l
org.jabref.model.entry.BibEntryTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java` `(2¿
sorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)?entriesWritten@94.23:94.37CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java`  `(.Ó
^org.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)!entry	PARAMETERC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaY# Y(("
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2l
org.jabref.model.entry.BibEntryTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaY Y("Å
6org.jabref.logic.xmp.XmpUtilWriterTest.olly2018Works()METHODC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javah	 h("
isFinalfalse"˙
declarationString‰<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">olly2018Works</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*olly2018Works2•
Xorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javai i(2à
;org.jabref.logic.xmp.XmpUtilWriterTest?olly2018@34.27:34.35CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javai i(!2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javah h(Ö
7org.jabref.logic.xmp.XmpUtilWriterTest.toral2006Works()METHODC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javam	 m("
isFinalfalse"˚
declarationStringÂ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">toral2006Works</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*toral2006Works2•
Xorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javan n(2â
<org.jabref.logic.xmp.XmpUtilWriterTest?toral2006@56.27:56.36CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javan n("2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javam m(â
8org.jabref.logic.xmp.XmpUtilWriterTest.vapnik2000Works()METHODC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javar	 r("
isFinalfalse"¸
declarationStringÊ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">vapnik2000Works</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*vapnik2000Works2•
Xorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntryWorks(org.jabref.model.entry.BibEntry)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javas s(2ä
=org.jabref.logic.xmp.XmpUtilWriterTest?vapnik2000@64.27:64.37CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javas s(#2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javar r(ô.
Morg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)METHODC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaw	 w("
isFinalfalse"è
declarationString˘ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">writeTwoBibEntries</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*writeTwoBibEntries2´
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javax x(-2d
java.util.List.of(E, E)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay& y((2Â
óorg.jabref.logic.xmp.XmpUtilWriter.writeXmp(java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.database.BibDatabase)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaz* z(22p
#java.nio.file.Path.toAbsolutePath()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaz; z(I2∞
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{7 {(>2p
#java.nio.file.Path.toAbsolutePath()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{G {(U2è
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java (2õ
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java' (12ë
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÄ Ä(2ù
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÄ) Ä(32¢
Uorg.jabref.logic.xmp.XmpUtilWriter.XmpUtilWriter(org.jabref.logic.xmp.XmpPreferences)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaz z(2
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{' {(42¢
Uorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)!tempDirCALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaxE x(L2à
;org.jabref.logic.xmp.XmpUtilWriterTest?olly2018@34.27:34.35CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay) y(12â
<org.jabref.logic.xmp.XmpUtilWriterTest?toral2006@56.27:56.36CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay3 y(<2é
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaz z((2∞
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?pdfFile@120.13:120.20CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaz3 z(:2∞
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entries@121.23:121.30CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javazM z(T2∞
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?pdfFile@120.13:120.20CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{? {(F2é
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{Y {(g2∞
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entries@121.23:121.30CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java (2Æ
aorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entry@127.24:127.29CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java! (&2¥
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entryList@123.23:123.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÄ Ä(2∞
aorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entry@128.26:128.31CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÄ# Ä((2≤
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entries@121.23:121.30CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÇ Ç(2¥
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entryList@123.23:123.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÇ Ç('2ß
Uorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)!tempDir	PARAMETERC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaw* w(12∑
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?pdfFile@120.13:120.20DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javax x(2∑
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entries@121.23:121.30DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay y(2π
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entryList@123.23:123.32DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{ {( 2µ
aorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entry@127.24:127.29DECLARATIONC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java (2∑
aorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entry@128.26:128.31DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÄ Ä(2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaw w(Î
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?pdfFile@120.13:120.20VARIABLEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javax x("
typePath"
isFinalfalse"◊
declarationString¡<mark class="modifier"> </mark>Path <mark class="class-field">pdfFile</mark> = <mark class="modifier">this</mark>.createDefaultFile("JabRef_writeTwo.pdf"<mark class="modifier">,</mark> tempDir)*pdfFile2_
java.nio.file.PathTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javax x(2´
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javax x(-2¢
Uorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)!tempDirCALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaxE x(L≈
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entries@121.23:121.30VARIABLEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay y("
typeList<BibEntry>"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = List.of(olly2018, toral2006)*entries2[
java.util.ListTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay y(2u
org.jabref.model.entry.BibEntryTYPE_ARGUMENTC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay y(2d
java.util.List.of(E, E)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay& y((2à
;org.jabref.logic.xmp.XmpUtilWriterTest?olly2018@34.27:34.35CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay) y(12â
<org.jabref.logic.xmp.XmpUtilWriterTest?toral2006@56.27:56.36CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javay3 y(<Ä
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entryList@123.23:123.32VARIABLEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{ {( "
typeList<BibEntry>"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entryList</mark> = new XmpUtilReader().readXmp(pdfFile.toAbsolutePath()<mark class="modifier">,</mark> xmpPreferences)*	entryList2[
java.util.ListTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{ {(2u
org.jabref.model.entry.BibEntryTYPE_ARGUMENTC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{ {(2∞
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{7 {(>2p
#java.nio.file.Path.toAbsolutePath()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{G {(U2
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{' {(42∞
corg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?pdfFile@120.13:120.20CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{? {(F2é
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java{Y {(g˝
Uorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)!tempDir	PARAMETERC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaw* w(1"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2_
java.nio.file.PathTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaw% w()¯
aorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entry@127.24:127.29VARIABLEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java ("
type"
isFinalfalse"
declarationString entry*entry2TYPE˙
aorg.jabref.logic.xmp.XmpUtilWriterTest.writeTwoBibEntries(java.nio.file.Path)?entry@128.26:128.31VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÄ Ä("
type"
isFinalfalse"
declarationString entry*entry2TYPEà0
Oorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)METHODE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÜ	 Ü("
isFinalfalse"ë
declarationString˚ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">writeThreeBibEntries</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*writeThreeBibEntries2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaá á(-2i
java.util.List.of(E, E, E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà& à((2Á
óorg.jabref.logic.xmp.XmpUtilWriter.writeXmp(java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.database.BibDatabase)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaâ* â(22r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaâ; â(I2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä7 ä(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaäG ä(U2ë
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaé é(2ù
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaé' é(12ë
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaè è(2ù
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaè) è(32§
Uorg.jabref.logic.xmp.XmpUtilWriter.XmpUtilWriter(org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaâ â(2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä' ä(42¶
Worg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaáG á(N2ä
;org.jabref.logic.xmp.XmpUtilWriterTest?olly2018@34.27:34.35CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà) à(12å
=org.jabref.logic.xmp.XmpUtilWriterTest?vapnik2000@64.27:64.37CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà3 à(=2ã
<org.jabref.logic.xmp.XmpUtilWriterTest?toral2006@56.27:56.36CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà? à(H2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaâ â((2¥
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?pdfFile@135.13:135.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaâ3 â(:2¥
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entries@136.23:136.30CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaâM â(T2¥
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?pdfFile@135.13:135.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä? ä(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaäY ä(g2¥
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entries@136.23:136.30CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaé é(2≤
corg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entry@142.24:142.29CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaé! é(&2∂
gorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entryList@138.23:138.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaè è(2≤
corg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entry@143.26:143.31CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaè# è((2¥
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entries@136.23:136.30CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaë ë(2∂
gorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entryList@138.23:138.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaë ë('2´
Worg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÜ, Ü(32ª
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?pdfFile@135.13:135.20DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaá á(2ª
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entries@136.23:136.30DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà à(2Ω
gorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entryList@138.23:138.32DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä ä( 2π
corg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entry@142.24:142.29DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaé é(2π
corg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entry@143.26:143.31DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaè è(2Z
voidRETURN_TYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÜ Ü(˘
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?pdfFile@135.13:135.20VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaá á("
typePath"
isFinalfalse"Ÿ
declarationString√<mark class="modifier"> </mark>Path <mark class="class-field">pdfFile</mark> = <mark class="modifier">this</mark>.createDefaultFile("JabRef_writeThree.pdf"<mark class="modifier">,</mark> tempDir)*pdfFile2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaá á(2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaá á(-2¶
Worg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaáG á(NÚ
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entries@136.23:136.30VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà à("
typeList<BibEntry>"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = List.of(olly2018, vapnik2000, toral2006)*entries2]
java.util.ListTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà à(2w
org.jabref.model.entry.BibEntryTYPE_ARGUMENTE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà à(2i
java.util.List.of(E, E, E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà& à((2ä
;org.jabref.logic.xmp.XmpUtilWriterTest?olly2018@34.27:34.35CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà) à(12å
=org.jabref.logic.xmp.XmpUtilWriterTest?vapnik2000@64.27:64.37CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà3 à(=2ã
<org.jabref.logic.xmp.XmpUtilWriterTest?toral2006@56.27:56.36CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaà? à(Hï
gorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entryList@138.23:138.32VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä ä( "
typeList<BibEntry>"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entryList</mark> = new XmpUtilReader().readXmp(pdfFile.toAbsolutePath()<mark class="modifier">,</mark> xmpPreferences)*	entryList2]
java.util.ListTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä ä(2w
org.jabref.model.entry.BibEntryTYPE_ARGUMENTE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä ä(2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä7 ä(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaäG ä(U2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä' ä(42¥
eorg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?pdfFile@135.13:135.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaä? ä(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaäY ä(gÉ
Worg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÜ, Ü(3"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÜ' Ü(+¸
corg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entry@142.24:142.29VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaé é("
type"
isFinalfalse"
declarationString entry*entry2TYPE¸
corg.jabref.logic.xmp.XmpUtilWriterTest.writeThreeBibEntries(java.nio.file.Path)?entry@143.26:143.31VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaè è("
type"
isFinalfalse"
declarationString entry*entry2TYPE∂.
Zorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)METHODE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaï	 ï(("
isFinalfalse"ú
declarationStringÜ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">proctingBracesAreRemovedAtTitle</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*proctingBracesAreRemovedAtTitle2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javañ ñ(-2Æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaò ò(2Á
óorg.jabref.logic.xmp.XmpUtilWriter.writeXmp(java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.database.BibDatabase)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaô* ô(22r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaô; ô(I2c
java.util.List.of(E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaôR ô(T2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö7 ö(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaöG ö(U2ë
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaú ú(2ù
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaú) ú(32Æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaü ü(2c
java.util.List.of(E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java† †(2y
*org.jabref.model.entry.BibEntry.BibEntry()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaó  ó((2§
Uorg.jabref.logic.xmp.XmpUtilWriter.XmpUtilWriter(org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaô ô(2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö' ö(42y
*org.jabref.model.entry.BibEntry.BibEntry()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaû  û((2±
borg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javañH ñ(O2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaô ô((2ø
porg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?pdfFile@150.13:150.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaô3 ô(:2¿
qorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?original@151.17:151.25CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaôU ô(]2ø
porg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?pdfFile@150.13:150.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö? ö(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaöY ö(g2¡
rorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?entryList@154.23:154.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaú ú(2Ω
norg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?entry@156.26:156.31CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaú# ú((2¿
qorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?expected@158.17:158.25CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java† †(%2¡
rorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?entryList@154.23:154.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java†( †(12∂
borg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaï7 ï(>2∆
porg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?pdfFile@150.13:150.20DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javañ ñ(2«
qorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?original@151.17:151.25DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaó ó(2»
rorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?entryList@154.23:154.32DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö ö( 2«
qorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?expected@158.17:158.25DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaû û(2ƒ
norg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?entry@156.26:156.31DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaú ú(2Z
voidRETURN_TYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaï ï(ê
porg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?pdfFile@150.13:150.20VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javañ ñ("
typePath"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark>Path <mark class="class-field">pdfFile</mark> = <mark class="modifier">this</mark>.createDefaultFile("JabRef_writeBraces.pdf"<mark class="modifier">,</mark> tempDir)*pdfFile2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javañ ñ(2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javañ ñ(-2±
borg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javañH ñ(O√
qorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?original@151.17:151.25VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaó ó("
typeBibEntry"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>BibEntry <mark class="class-field">original</mark> = new BibEntry().withField(StandardField.TITLE, "Some {P}rotected {T}erm")*original2n
org.jabref.model.entry.BibEntryTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaó ó(2Æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaò ò(2y
*org.jabref.model.entry.BibEntry.BibEntry()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaó  ó((´
rorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?entryList@154.23:154.32VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö ö( "
typeList<BibEntry>"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entryList</mark> = new XmpUtilReader().readXmp(pdfFile.toAbsolutePath()<mark class="modifier">,</mark> xmpPreferences)*	entryList2]
java.util.ListTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö ö(2w
org.jabref.model.entry.BibEntryTYPE_ARGUMENTE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö ö(2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö7 ö(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaöG ö(U2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö' ö(42ø
porg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?pdfFile@150.13:150.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaö? ö(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaöY ö(gø
qorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?expected@158.17:158.25VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaû û("
typeBibEntry"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry().withField(StandardField.TITLE, "Some Protected Term")*expected2n
org.jabref.model.entry.BibEntryTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaû û(2Æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaü ü(2y
*org.jabref.model.entry.BibEntry.BibEntry()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaû  û((é
borg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaï7 ï(>"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaï2 ï(6á
norg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreRemovedAtTitle(java.nio.file.Path)?entry@156.26:156.31VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaú ú("
type"
isFinalfalse"
declarationString entry*entry2TYPEê*
Worg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)METHODE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java§	 §(%"
isFinalfalse"ô
declarationStringÉ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">proctingBracesAreKeptAtPages</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*proctingBracesAreKeptAtPages2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java• •(-2Æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaß ß(2Á
óorg.jabref.logic.xmp.XmpUtilWriter.writeXmp(java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.database.BibDatabase)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java®* ®(22r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java®; ®(I2c
java.util.List.of(E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java®R ®(T2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©7 ©(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©G ©(U2ë
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java´ ´(2ù
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java´) ´(32c
java.util.List.of(E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≠ ≠(2y
*org.jabref.model.entry.BibEntry.BibEntry()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¶  ¶((2§
Uorg.jabref.logic.xmp.XmpUtilWriter.XmpUtilWriter(org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java® ®(2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©' ©(42Æ
_org.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java•H •(O2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java® ®((2º
morg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?pdfFile@165.13:165.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java®3 ®(:2Ω
norg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?original@166.17:166.25CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java®U ®(]2º
morg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?pdfFile@165.13:165.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©? ©(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©Y ©(g2æ
oorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?entryList@169.23:169.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java´ ´(2∫
korg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?entry@171.26:171.31CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java´# ´((2Ω
norg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?original@166.17:166.25CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≠ ≠(%2æ
oorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?entryList@169.23:169.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≠( ≠(12≥
_org.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java§4 §(;2√
morg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?pdfFile@165.13:165.20DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java• •(2ƒ
norg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?original@166.17:166.25DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¶ ¶(2≈
oorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?entryList@169.23:169.32DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java© ©( 2¡
korg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?entry@171.26:171.31DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java´ ´(2Z
voidRETURN_TYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java§ §(ä
morg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?pdfFile@165.13:165.20VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java• •("
typePath"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark>Path <mark class="class-field">pdfFile</mark> = <mark class="modifier">this</mark>.createDefaultFile("JabRef_writeBraces.pdf"<mark class="modifier">,</mark> tempDir)*pdfFile2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java• •(2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java• •(-2Æ
_org.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java•H •(O≤
norg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?original@166.17:166.25VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¶ ¶("
typeBibEntry"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>BibEntry <mark class="class-field">original</mark> = new BibEntry().withField(StandardField.PAGES, "{55}-{99}")*original2n
org.jabref.model.entry.BibEntryTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¶ ¶(2Æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaß ß(2y
*org.jabref.model.entry.BibEntry.BibEntry()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¶  ¶((•
oorg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?entryList@169.23:169.32VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java© ©( "
typeList<BibEntry>"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entryList</mark> = new XmpUtilReader().readXmp(pdfFile.toAbsolutePath()<mark class="modifier">,</mark> xmpPreferences)*	entryList2]
java.util.ListTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java© ©(2w
org.jabref.model.entry.BibEntryTYPE_ARGUMENTE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java© ©(2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©7 ©(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©G ©(U2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©' ©(42º
morg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?pdfFile@165.13:165.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©? ©(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java©Y ©(gã
_org.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java§4 §(;"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java§/ §(3Ñ
korg.jabref.logic.xmp.XmpUtilWriterTest.proctingBracesAreKeptAtPages(java.nio.file.Path)?entry@171.26:171.31VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java´ ´("
type"
isFinalfalse"
declarationString entry*entry2TYPEê*
Worg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)METHODE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java±	 ±(%"
isFinalfalse"ô
declarationStringÉ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">doubleDashAtPageNumberIsKept</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*doubleDashAtPageNumberIsKept2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≤ ≤(-2Æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¥ ¥(2Á
óorg.jabref.logic.xmp.XmpUtilWriter.writeXmp(java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.database.BibDatabase)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaµ* µ(22r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaµ; µ(I2c
java.util.List.of(E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaµR µ(T2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂7 ∂(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂G ∂(U2ë
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∏ ∏(2ù
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∏) ∏(32c
java.util.List.of(E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∫ ∫(2y
*org.jabref.model.entry.BibEntry.BibEntry()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≥  ≥((2§
Uorg.jabref.logic.xmp.XmpUtilWriter.XmpUtilWriter(org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaµ µ(2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂' ∂(42Æ
_org.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≤H ≤(O2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaµ µ((2º
morg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?pdfFile@178.13:178.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaµ3 µ(:2Ω
norg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?original@179.17:179.25CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaµU µ(]2º
morg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?pdfFile@178.13:178.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂? ∂(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂Y ∂(g2æ
oorg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?entryList@182.23:182.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∏ ∏(2∫
korg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?entry@184.26:184.31CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∏# ∏((2Ω
norg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?original@179.17:179.25CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∫ ∫(%2æ
oorg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?entryList@182.23:182.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∫( ∫(12≥
_org.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java±4 ±(;2√
morg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?pdfFile@178.13:178.20DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≤ ≤(2ƒ
norg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?original@179.17:179.25DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≥ ≥(2≈
oorg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?entryList@182.23:182.32DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂ ∂( 2¡
korg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?entry@184.26:184.31DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∏ ∏(2Z
voidRETURN_TYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java± ±(ä
morg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?pdfFile@178.13:178.20VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≤ ≤("
typePath"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark>Path <mark class="class-field">pdfFile</mark> = <mark class="modifier">this</mark>.createDefaultFile("JabRef_writeBraces.pdf"<mark class="modifier">,</mark> tempDir)*pdfFile2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≤ ≤(2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≤ ≤(-2Æ
_org.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≤H ≤(OÆ
norg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?original@179.17:179.25VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≥ ≥("
typeBibEntry"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>BibEntry <mark class="class-field">original</mark> = new BibEntry().withField(StandardField.PAGES, "2--33")*original2n
org.jabref.model.entry.BibEntryTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≥ ≥(2Æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¥ ¥(2y
*org.jabref.model.entry.BibEntry.BibEntry()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≥  ≥((•
oorg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?entryList@182.23:182.32VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂ ∂( "
typeList<BibEntry>"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entryList</mark> = new XmpUtilReader().readXmp(pdfFile.toAbsolutePath()<mark class="modifier">,</mark> xmpPreferences)*	entryList2]
java.util.ListTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂ ∂(2w
org.jabref.model.entry.BibEntryTYPE_ARGUMENTE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂ ∂(2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂7 ∂(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂G ∂(U2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂' ∂(42º
morg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?pdfFile@178.13:178.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂? ∂(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∂Y ∂(gã
_org.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java±4 ±(;"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java±/ ±(3Ñ
korg.jabref.logic.xmp.XmpUtilWriterTest.doubleDashAtPageNumberIsKept(java.nio.file.Path)?entry@184.26:184.31VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java∏ ∏("
type"
isFinalfalse"
declarationString entry*entry2TYPEç&
Forg.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)METHODE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaæ	 æ("
isFinalfalse"à
declarationStringÚ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">singleEntry</mark>(<mark class="annotation">@TempDir</mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*singleEntry2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaø ø(-2Á
óorg.jabref.logic.xmp.XmpUtilWriter.writeXmp(java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.database.BibDatabase)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¿* ¿(22r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¿; ¿(I2c
java.util.List.of(E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¿R ¿(T2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡7 ¡(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡G ¡(U2ù
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java√ √(2ë
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaƒ ƒ(2ù
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaƒ) ƒ(32c
java.util.List.of(E)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≈ ≈(2§
Uorg.jabref.logic.xmp.XmpUtilWriter.XmpUtilWriter(org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¿ ¿(2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡' ¡(42ù
Norg.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaø< ø(C2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¿ ¿((2´
\org.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?pdfFile@191.13:191.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¿3 ¿(:2å
=org.jabref.logic.xmp.XmpUtilWriterTest?vapnik2000@64.27:64.37CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¿U ¿(_2´
\org.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?pdfFile@191.13:191.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡? ¡(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡Y ¡(g2å
=org.jabref.logic.xmp.XmpUtilWriterTest?vapnik2000@64.27:64.37CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java√ √(2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?entryList@193.23:193.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaƒ ƒ(2©
Zorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?entry@196.26:196.31CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaƒ# ƒ((2å
=org.jabref.logic.xmp.XmpUtilWriterTest?vapnik2000@64.27:64.37CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≈ ≈('2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?entryList@193.23:193.32CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java≈* ≈(32¢
Norg.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaæ# æ(*2≤
\org.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?pdfFile@191.13:191.20DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaø ø(2¥
^org.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?entryList@193.23:193.32DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡ ¡( 2∞
Zorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?entry@196.26:196.31DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaƒ ƒ(2Z
voidRETURN_TYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaæ æ(‹
\org.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?pdfFile@191.13:191.20VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaø ø("
typePath"
isFinalfalse"Œ
declarationString∏<mark class="modifier"> </mark>Path <mark class="class-field">pdfFile</mark> = <mark class="modifier">this</mark>.createDefaultFile("JabRef.pdf"<mark class="modifier">,</mark> tempDir)*pdfFile2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaø ø(2≠
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaø ø(-2ù
Norg.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaø< ø(CÉ
^org.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?entryList@193.23:193.32VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡ ¡( "
typeList<BibEntry>"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entryList</mark> = new XmpUtilReader().readXmp(pdfFile.toAbsolutePath()<mark class="modifier">,</mark> xmpPreferences)*	entryList2]
java.util.ListTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡ ¡(2w
org.jabref.model.entry.BibEntryTYPE_ARGUMENTE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡ ¡(2≤
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡7 ¡(>2r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡G ¡(U2Å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡' ¡(42´
\org.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?pdfFile@191.13:191.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡? ¡(F2ê
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java¡Y ¡(g˙
Norg.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaæ# æ(*"
typePath"
isFinalfalse"J
declarationString5<mark class="annotation">@TempDir</mark> Path tempDir*tempDir2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaæ æ("Û
Zorg.jabref.logic.xmp.XmpUtilWriterTest.singleEntry(java.nio.file.Path)?entry@196.26:196.31VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaƒ ƒ("
type"
isFinalfalse"
declarationString entry*entry2TYPEë
^org.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)METHODE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÀ À(""
isFinalfalse"ñ
declarationStringÄ<mark class="modifier">private </mark>Path <mark class="method">createDefaultFile</mark>(String fileName<mark class="modifier"><mark class="modifier">,</mark></mark> Path tempDir)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accessprivate"

isAbstractfalse"
typePath*createDefaultFile2{
,java.nio.file.Path.resolve(java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÕ Õ(&2l
java.nio.file.Path.toString()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java—. —(62r
#java.nio.file.Path.toAbsolutePath()CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java— —(+2µ
forg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÕ Õ(2∂
gorg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)!fileNameCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÕ' Õ(/2ø
porg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)?pdf@206.24:206.27CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java– –(2ø
porg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)?pdf@206.24:206.27CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java— —(2√
torg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)?pdfFile@205.13:205.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java— —(2√
torg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)?pdfFile@205.13:205.20CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java” ”(2ª
gorg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)!fileName	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÀ* À(22∫
forg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÀ9 À(@2 
torg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)?pdfFile@205.13:205.20DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÕ Õ(2∆
porg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)?pdf@206.24:206.27DECLARATIONE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaŒ Œ(2h
java.nio.file.PathRETURN_TYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÀ À(¿
torg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)?pdfFile@205.13:205.20VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÕ Õ("
typePath"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Path <mark class="class-field">pdfFile</mark> = tempDir.resolve(fileName)*pdfFile2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÕ Õ(2{
,java.nio.file.Path.resolve(java.lang.String)CALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÕ Õ(&2µ
forg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)!tempDirCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÕ Õ(2∂
gorg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)!fileNameCALLE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÕ' Õ(/€
porg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)?pdf@206.24:206.27VARIABLEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaŒ Œ("
type
PDDocument"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>PDDocument <mark class="class-field">pdf</mark> = new PDDocument()*pdf2s
$org.apache.pdfbox.pdmodel.PDDocumentTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaŒ Œ(Ó
gorg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)!fileName	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÀ* À(2"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2_
java.lang.StringTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÀ# À()È
forg.jabref.logic.xmp.XmpUtilWriterTest.createDefaultFile(java.lang.String, java.nio.file.Path)!tempDir	PARAMETERE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÀ9 À(@"
typePath"
isFinalfalse"!
declarationStringPath tempDir*tempDir2a
java.nio.file.PathTYPEE
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaÀ4 À(8•
:org.jabref.logic.xmp.XmpUtilWriterTest?tempDir@32.17:32.24VARIABLEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java   ("
isFinalfalse"
typePath"h
declarationStringS<mark class="modifier">private </mark>Path <mark class="class-field">tempDir</mark>"
isStaticfalse"
accessprivate*tempDir2_
java.nio.file.PathTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java   (¸&
;org.jabref.logic.xmp.XmpUtilWriterTest?olly2018@34.27:34.35VALUEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java" "(#"
isFinaltrue"
typeBibEntry"ô
declarationStringÉ<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">olly2018</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("Olly2018").withField(StandardField.AUTHOR, "Olly and Johannes").withField(StandardField.TITLE, "Stefan's palace").withField(StandardField.JOURNAL, "Test Journal").withField(StandardField.VOLUME, "1").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "1-2").withMonth(Month.MARCH).withField(StandardField.ISSN, "978-123-123").withField(StandardField.NOTE, "NOTE").withField(StandardField.ABSTRACT, "ABSTRACT").withField(StandardField.COMMENT, "COMMENT").withField(StandardField.DOI, "10/3212.3123").withField(StandardField.FILE, ":article_dublinCore.pdf:PDF").withField(StandardField.GROUPS, "NO").withField(StandardField.HOWPUBLISHED, "online").withField(StandardField.KEYWORDS, "k1, k2").withField(StandardField.OWNER, "me").withField(StandardField.REVIEW, "review").withField(StandardField.URL, "https://www.olly2018.edu");"
isStaticfalse"
accessprivate*olly20182l
org.jabref.model.entry.BibEntryTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java" "(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java6 6(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java5 5(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java4 4(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java3 3(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java2 2(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java1 1(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java0 0(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java/ /(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java. .(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java- -(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java, ,(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java+ +(2î
Gorg.jabref.model.entry.BibEntry.withMonth(org.jabref.model.entry.Month)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java* *(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java) )(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java( ((2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java' '(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java& &(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java% %(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java$ $(2é
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java# #(2ù
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java"* "(2™
<org.jabref.logic.xmp.XmpUtilWriterTest?toral2006@56.27:56.36VALUEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java8 8($"
isFinaltrue"
typeBibEntry"Ú
declarationString‹<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">toral2006</mark> = new BibEntry(StandardEntryType.InProceedings).withField(StandardField.AUTHOR, "Antonio Toral and Rafael Munoz").withField(StandardField.TITLE, "A proposal to automatically build and maintain gazetteers for Named Entity Recognition by using Wikipedia").withField(StandardField.BOOKTITLE, "Proceedings of EACL").withField(StandardField.PAGES, "56--61").withField(StandardField.EPRINTTYPE, "asdf").withField(StandardField.OWNER, "Ich").withField(StandardField.URL, "www.url.de");"
isStaticfalse"
accessprivate*	toral20062l
org.jabref.model.entry.BibEntryTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java8 8(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java? ?(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java> >(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java= =(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java< <(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java; ;(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java: :(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java9 9(2ù
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java8+ 8(3–
=org.jabref.logic.xmp.XmpUtilWriterTest?vapnik2000@64.27:64.37VALUEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java@ @(%"
isFinaltrue"
typeBibEntry"—
declarationStringª<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">vapnik2000</mark> = new BibEntry(StandardEntryType.Book).withCitationKey("vapnik2000").withField(StandardField.TITLE, "The Nature of Statistical Learning Theory").withField(StandardField.PUBLISHER, "Springer Science + Business Media").withField(StandardField.AUTHOR, "Vladimir N. Vapnik").withField(StandardField.DOI, "10.1007/978-1-4757-3264-1").withField(StandardField.OWNER, "Ich").withField(StandardField.LANGUAGE, "English, Japanese").withDate(new Date(2000, 5)).withField(new UnknownField(DC_COVERAGE)<mark class="modifier">,</mark> "coverageField").withField(new UnknownField(DC_SOURCE)<mark class="modifier">,</mark> "JabRef").withField(new UnknownField(DC_RIGHTS)<mark class="modifier">,</mark> "Right To X");"
isStaticfalse"
accessprivate*
vapnik20002l
org.jabref.model.entry.BibEntryTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java@ @(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaK K(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaJ J(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaI I(2í
Eorg.jabref.model.entry.BibEntry.withDate(org.jabref.model.entry.Date)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaH H(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaG G(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaF F(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaE E(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaD D(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaC C(2¨
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaB B(2é
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaA A(2ù
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.java@, @(42w
*org.jabref.model.entry.Date.Date(int, int)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaH H(2ï
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaI I('2ï
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaJ J('2ï
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaK K('ﬂ
Aorg.jabref.logic.xmp.XmpUtilWriterTest?xmpPreferences@76.27:76.41VARIABLEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaL L()"
isFinalfalse"
typeXmpPreferences"y
declarationStringd<mark class="modifier">private </mark>XmpPreferences <mark class="class-field">xmpPreferences</mark>"
isStaticfalse"
accessprivate*xmpPreferences2p
#org.jabref.logic.xmp.XmpPreferencesTYPEC
9src\test\java\org\jabref\logic\xmp\XmpUtilWriterTest.javaL L(