
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaî
"org.jabref.logic.xmp.XmpUtilReaderCLASS?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java ("
packageorg.jabref.logic.xmp"
isFinalfalse"
inner classfalse"

isAbstractfalse"k
declarationStringV<mark class="modifier">public </mark><mark class="modifier">class </mark>XmpUtilReader"
accesspublic*XmpUtilReader2Ç
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java (2ë
Aorg.jabref.logic.xmp.XmpUtilReader.readRawXmp(java.nio.file.Path)DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java* *('2≥
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java; ;(!2ß
Worg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javad d(,2§
Rorg.jabref.logic.xmp.XmpUtilReader.loadWithAutomaticDecryption(java.nio.file.Path)DECLARATIONA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaè è(12Ö
5org.jabref.logic.xmp.XmpUtilReader?LOGGER@26.32:26.38DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java  (&2à
8org.jabref.logic.xmp.XmpUtilReader?START_TAG@28.32:28.41DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java  ()2Ü
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java  ('¯
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CONSTRUCTOR?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java ("e
declarationStringP<mark class="modifier">public </mark><mark class="method">XmpUtilReader</mark>()*XmpUtilReader2â
@java.lang.System.setProperty(java.lang.String, java.lang.String)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java! !(2r
"org.jabref.logic.xmp.XmpUtilReaderRETURN_TYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java (‚
Aorg.jabref.logic.xmp.XmpUtilReader.readRawXmp(java.nio.file.Path)METHOD?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java* *('"
isFinalfalse"”
declarationStringΩ<mark class="modifier">public </mark>List&lt;XMPMetadata&gt; <mark class="method">readRawXmp</mark>(Path path)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<XMPMetadata>*
readRawXmp2õ
Rorg.jabref.logic.xmp.XmpUtilReader.loadWithAutomaticDecryption(java.nio.file.Path)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java+# +(>2†
Worg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java, ,(!2è
Forg.jabref.logic.xmp.XmpUtilReader.readRawXmp(java.nio.file.Path)!pathCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java+? +(C2ü
Vorg.jabref.logic.xmp.XmpUtilReader.readRawXmp(java.nio.file.Path)?document@43.24:43.32CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java," ,(*2î
Forg.jabref.logic.xmp.XmpUtilReader.readRawXmp(java.nio.file.Path)!path	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java*- *(12¶
Vorg.jabref.logic.xmp.XmpUtilReader.readRawXmp(java.nio.file.Path)?document@43.24:43.32DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java+ +( 2^
java.util.ListRETURN_TYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java* *(2v
org.apache.xmpbox.XMPMetadataRETURN_TYPE_ARGUMENT?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java* *(Å
Vorg.jabref.logic.xmp.XmpUtilReader.readRawXmp(java.nio.file.Path)?document@43.24:43.32VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java+ +( "
type
PDDocument"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>PDDocument <mark class="class-field">document</mark> = loadWithAutomaticDecryption(path)*document2m
$org.apache.pdfbox.pdmodel.PDDocumentTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java+ +(2õ
Rorg.jabref.logic.xmp.XmpUtilReader.loadWithAutomaticDecryption(java.nio.file.Path)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java+# +(>2è
Forg.jabref.logic.xmp.XmpUtilReader.readRawXmp(java.nio.file.Path)!pathCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java+? +(C∑
Forg.jabref.logic.xmp.XmpUtilReader.readRawXmp(java.nio.file.Path)!path	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java*- *(1"
typePath"
isFinalfalse"
declarationString	Path path*path2[
java.nio.file.PathTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java*( *(,∂K
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)METHOD?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java; ;(!"
isFinalfalse"®
declarationStringí<mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">readXmp</mark>(Path path<mark class="modifier"><mark class="modifier">,</mark></mark> XmpPreferences xmpPreferences)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*readXmp2õ
Rorg.jabref.logic.xmp.XmpUtilReader.loadWithAutomaticDecryption(java.nio.file.Path)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java@# @(>2†
Worg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaA, A(:2a
java.util.List.isEmpty()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaC C($2Ü
=org.jabref.logic.xmp.DublinCoreExtractor.extractBibtexEntry()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaI? I(Q2ç
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaJ J('2a
java.util.List.isEmpty()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaN N(2è
Forg.jabref.logic.xmp.DocumentInformationExtractor.extractBibtexEntry()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaR7 R(I2ç
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaS S(2ã
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaW W(2ì
Jorg.jabref.model.entry.BibEntry.addFile(org.jabref.model.entry.LinkedFile)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaW& W(-2l
#java.nio.file.Path.toAbsolutePath()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaWF W(T2j
!java.util.LinkedList.LinkedList()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java>$ >(02˜
≠org.jabref.logic.xmp.DublinCoreExtractor.DublinCoreExtractor(org.apache.xmpbox.schema.DublinCoreSchema, org.jabref.logic.xmp.XmpPreferences, org.jabref.model.entry.BibEntry)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaH> H(Q2s
*org.jabref.model.entry.BibEntry.BibEntry()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaHp H(x2»
org.jabref.logic.xmp.DocumentInformationExtractor.DocumentInformationExtractor(org.apache.pdfbox.pdmodel.PDDocumentInformation)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaQ? Q([2≠
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaW2 W(<2±
horg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!pathCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java@? @(C2¡
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?document@64.24:64.32CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaA; A(C2ƒ
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?xmpMetaList@65.30:65.41CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaC C(2ƒ
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?xmpMetaList@65.30:65.41CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaE+ E(62¿
worg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?xmpMeta@69.33:69.40CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaF\ F(c2¡
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?dcSchema@70.37:70.45CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaG G( 2¡
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?dcSchema@70.37:70.45CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaHR H(Z2ª
rorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!xmpPreferencesCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaH\ H(j2ƒ
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?dcExtractor@72.44:72.55CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaI3 I(>2æ
uorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?entry@73.43:73.48CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaJ J(2ø
vorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?result@62.23:62.29CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaN N(2¡
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?document@64.24:64.32CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaP< P(D2Õ
Éorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?documentInformation@80.38:80.57CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaQ\ Q(o2ƒ
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?diExtractor@81.45:81.56CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaR+ R(62æ
uorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?entry@82.35:82.40CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaS S(2ø
vorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?result@62.23:62.29CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaW W(2æ
uorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?entry@87.23:87.28CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaW  W(%2±
horg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!pathCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaWA W(E2ø
vorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?result@62.23:62.29CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaX X(2^
java.util.List.add(E)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaJ( J(32^
java.util.List.add(E)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaS  S(+2∂
horg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!path	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java;' ;(+2¿
rorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!xmpPreferences	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java;< ;(J2∆
vorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?result@62.23:62.29DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java> >(2»
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?document@64.24:64.32DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java@ @( 2À
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?xmpMetaList@65.30:65.41DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaA A()2«
worg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?xmpMeta@69.33:69.40DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaE! E((2»
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?dcSchema@70.37:70.45DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaF% F(-2À
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?dcExtractor@72.44:72.55DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaH, H(72≈
uorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?entry@73.43:73.48DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaI+ I(02‘
Éorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?documentInformation@80.38:80.57DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaP& P(92À
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?diExtractor@81.45:81.56DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaQ- Q(82≈
uorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?entry@82.35:82.40DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaR# R((2≈
uorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?entry@87.23:87.28DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaW W(2^
java.util.ListRETURN_TYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java; ;(2x
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENT?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java; ;(Æ
vorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?result@62.23:62.29VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java> >("
typeList<BibEntry>"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = new LinkedList<>()*result2W
java.util.ListTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java> >(2q
org.jabref.model.entry.BibEntryTYPE_ARGUMENT?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java> >(2j
!java.util.LinkedList.LinkedList()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java>$ >(0≈
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?document@64.24:64.32VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java@ @( "
type
PDDocument"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>PDDocument <mark class="class-field">document</mark> = loadWithAutomaticDecryption(path)*document2m
$org.apache.pdfbox.pdmodel.PDDocumentTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java@ @(2õ
Rorg.jabref.logic.xmp.XmpUtilReader.loadWithAutomaticDecryption(java.nio.file.Path)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java@# @(>2±
horg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!pathCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java@? @(C√
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?xmpMetaList@65.30:65.41VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaA A()"
typeList<XMPMetadata>"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>List<XMPMetadata> <mark class="class-field">xmpMetaList</mark> = getXmpMetadata(document)*xmpMetaList2W
java.util.ListTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaA A(2o
org.apache.xmpbox.XMPMetadataTYPE_ARGUMENT?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaA A(2†
Worg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaA, A(:2¡
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?document@64.24:64.32CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaA; A(C∆
worg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?xmpMeta@69.33:69.40VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaE! E(("
typeXMPMetadata"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>XMPMetadata <mark class="class-field">xmpMeta</mark>*xmpMeta2f
org.apache.xmpbox.XMPMetadataTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaE E( Ò
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?dcSchema@70.37:70.45VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaF% F(-"
typeDublinCoreSchema"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>DublinCoreSchema <mark class="class-field">dcSchema</mark> = DublinCoreSchemaCustom.copyDublinCoreSchema(xmpMeta.getDublinCoreSchema())*dcSchema2r
)org.apache.xmpbox.schema.DublinCoreSchemaTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaF F($2¿
worg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?xmpMeta@69.33:69.40CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaF\ F(c§

{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?dcExtractor@72.44:72.55VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaH, H(7"
typeDublinCoreExtractor"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>DublinCoreExtractor <mark class="class-field">dcExtractor</mark> = new DublinCoreExtractor(dcSchema, xmpPreferences, new BibEntry())*dcExtractor2q
(org.jabref.logic.xmp.DublinCoreExtractorTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaH H(+2˜
≠org.jabref.logic.xmp.DublinCoreExtractor.DublinCoreExtractor(org.apache.xmpbox.schema.DublinCoreSchema, org.jabref.logic.xmp.XmpPreferences, org.jabref.model.entry.BibEntry)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaH> H(Q2s
*org.jabref.model.entry.BibEntry.BibEntry()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaHp H(x2¡
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?dcSchema@70.37:70.45CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaHR H(Z2ª
rorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!xmpPreferencesCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaH\ H(j™
uorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?entry@73.43:73.48VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaI+ I(0"
typeOptional<BibEntry>"
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">entry</mark> = dcExtractor.extractBibtexEntry()*entry2[
java.util.OptionalTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaI I( 2q
org.jabref.model.entry.BibEntryTYPE_ARGUMENT?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaI! I()2Ü
=org.jabref.logic.xmp.DublinCoreExtractor.extractBibtexEntry()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaI? I(Q2ƒ
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?dcExtractor@72.44:72.55CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaI3 I(>˚
Éorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?documentInformation@80.38:80.57VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaP& P(9"
typePDDocumentInformation"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>PDDocumentInformation <mark class="class-field">documentInformation</mark> = document.getDocumentInformation()*documentInformation2x
/org.apache.pdfbox.pdmodel.PDDocumentInformationTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaP P(%2¡
xorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?document@64.24:64.32CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaP< P(D›
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?diExtractor@81.45:81.56VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaQ- Q(8"$
typeDocumentInformationExtractor"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>DocumentInformationExtractor <mark class="class-field">diExtractor</mark> = new DocumentInformationExtractor(documentInformation)*diExtractor2z
1org.jabref.logic.xmp.DocumentInformationExtractorTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaQ Q(,2»
org.jabref.logic.xmp.DocumentInformationExtractor.DocumentInformationExtractor(org.apache.pdfbox.pdmodel.PDDocumentInformation)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaQ? Q([2Õ
Éorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?documentInformation@80.38:80.57CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaQ\ Q(o≥
uorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?entry@82.35:82.40VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaR# R(("
typeOptional<BibEntry>"
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">entry</mark> = diExtractor.extractBibtexEntry()*entry2[
java.util.OptionalTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaR R(2q
org.jabref.model.entry.BibEntryTYPE_ARGUMENT?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaR R(!2è
Forg.jabref.logic.xmp.DocumentInformationExtractor.extractBibtexEntry()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaR7 R(I2ƒ
{org.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?diExtractor@81.45:81.56CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaR+ R(6Ÿ
horg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!path	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java;' ;(+"
typePath"
isFinalfalse"
declarationString	Path path*path2[
java.nio.file.PathTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java;" ;(&ú
rorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)!xmpPreferences	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java;< ;(J"
typeXmpPreferences"
isFinalfalse"2
declarationStringXmpPreferences xmpPreferences*xmpPreferences2l
#org.jabref.logic.xmp.XmpPreferencesTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java;- ;(;à
uorg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)?entry@87.23:87.28VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaW W("
type"
isFinalfalse"
declarationString entry*entry2TYPEãS
Worg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)METHOD?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javad d(,"
isFinalfalse"í
declarationString}<mark class="modifier">private </mark>List&lt;XMPMetadata&gt; <mark class="method">getXmpMetadata</mark>(PDDocument document)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeList<XMPMetadata>*getXmpMetadata2s
*java.lang.String.indexOf(java.lang.String)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javao* o(12w
.java.lang.String.lastIndexOf(java.lang.String)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap( p(32b
java.lang.String.length()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javapG p(M2d
java.lang.String.length()CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javarÖ r(ã2m
$java.lang.String.substring(int, int)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaw w($2q
(java.lang.String.split(java.lang.String)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javayc y(h2m
$java.lang.String.substring(int, int)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javay) y(22h
java.lang.String.substring(int)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java{ {("2`
java.util.List.add(E)CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÅ Å(2ì
Horg.jabref.logic.xmp.XmpUtilShared.parseXmpMetadata(java.io.InputStream)CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÅ+ Å(;2f
java.lang.String.getBytes()CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÅc Å(k2h
java.util.ArrayList.ArrayList()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javag) g(42Ñ
9java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÅ@ Å(T2©
`org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)!documentCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javae$ e(,2∂
morg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?catalog@101.26:101.33CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaf f($2∂
morg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaRaw@102.19:102.26CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javai i(2∑
norg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaList@103.26:103.34CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaj j(2∂
morg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaRaw@102.19:102.26CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javam m(2≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javao& o()2Å
8org.jabref.logic.xmp.XmpUtilReader?START_TAG@28.32:28.41CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javao2 o(;2≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap$ p('2
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap4 p(;2
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap? p(F2∆
}org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?startDescriptionSection@111.12:111.35CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javar r($2∆
}org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?startDescriptionSection@111.12:111.35CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javar. r(E2ƒ
{org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?endDescriptionSection@112.12:112.33CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javarH r(]2ƒ
{org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?endDescriptionSection@112.12:112.33CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javarc r(x2Ä
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39CALL@
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javar} r(Ñ2∑
norg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaList@103.26:103.34CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javas s(2≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaw w(2∆
}org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?startDescriptionSection@111.12:111.35CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaw( w(?2≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javay% y((2∆
}org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?startDescriptionSection@111.12:111.35CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javay3 y(J2ƒ
{org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?endDescriptionSection@112.12:112.33CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javayL y(a2
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javayi y(p2≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java{ {(2ƒ
{org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?endDescriptionSection@112.12:112.33CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java{# {(82¿
worg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?descriptionsArray@121.17:121.34CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java} }()2¥
korg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?start@119.15:119.20CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java# ((2∞
gorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?s@125.20:125.21CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java+ (,2
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java/ (62≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?end@123.15:123.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java9 (<2π
norg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaList@103.26:103.34CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÅ Å(2æ
sorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmpMetaString@127.19:127.32CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÅU Å(b2Ä
5org.jabref.logic.xmp.XmpUtilReader?LOGGER@26.32:26.38CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÉ É(2≥
horg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?ex@130.33:130.35CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÉZ É(\2π
norg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaList@103.26:103.34CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÜ Ü(2Æ
`org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)!document	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javad8 d(@2Ω
morg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?catalog@101.26:101.33DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javae e(!2Ω
morg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaRaw@102.19:102.26DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaf f(2æ
norg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaList@103.26:103.34DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javag g("2π
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javam m(2Õ
}org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?startDescriptionSection@111.12:111.35DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javao o(#2À
{org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?endDescriptionSection@112.12:112.33DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap p(!2ª
korg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?start@119.15:119.20DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaw w(2«
worg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?descriptionsArray@121.17:121.34DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javay y("2π
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?end@123.15:123.18DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java{ {(2∑
gorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?s@125.20:125.21DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java} }(2√
sorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmpMetaString@127.19:127.32DECLARATION?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java ( 2∫
horg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?ex@130.33:130.35DECLARATIONA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÇ! Ç(#2^
java.util.ListRETURN_TYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javad d(2v
org.apache.xmpbox.XMPMetadataRETURN_TYPE_ARGUMENT?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javad d(£
morg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?catalog@101.26:101.33VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javae e(!"
typePDDocumentCatalog"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>PDDocumentCatalog <mark class="class-field">catalog</mark> = document.getDocumentCatalog()*catalog2t
+org.apache.pdfbox.pdmodel.PDDocumentCatalogTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javae e(2©
`org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)!documentCALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javae$ e(,ô
morg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaRaw@102.19:102.26VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaf f("
type
PDMetadata"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>PDMetadata <mark class="class-field">metaRaw</mark> = catalog.getMetadata()*metaRaw2t
+org.apache.pdfbox.pdmodel.common.PDMetadataTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaf f(2∂
morg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?catalog@101.26:101.33CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaf f($¨
norg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaList@103.26:103.34VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javag g(""
typeList<XMPMetadata>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>List<XMPMetadata> <mark class="class-field">metaList</mark> = new ArrayList<>()*metaList2W
java.util.ListTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javag g(2o
org.apache.xmpbox.XMPMetadataTYPE_ARGUMENT?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javag g(2h
java.util.ArrayList.ArrayList()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javag) g(4˚
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javam m("
typeString"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark>String <mark class="class-field">xmp</mark> = metaRaw.getCOSObject().toTextString()*xmp2Y
java.lang.StringTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javam m(2∂
morg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?metaRaw@102.19:102.26CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javam m(©
}org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?startDescriptionSection@111.12:111.35VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javao o(#"
typeint"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">startDescriptionSection</mark> = xmp.indexOf(START_TAG)*startDescriptionSection2L
intTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javao o(2s
*java.lang.String.indexOf(java.lang.String)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javao* o(12≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javao& o()2Å
8org.jabref.logic.xmp.XmpUtilReader?START_TAG@28.32:28.41CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javao2 o(;û	
{org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?endDescriptionSection@112.12:112.33VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap p(!"
typeint"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">endDescriptionSection</mark> = xmp.lastIndexOf(END_TAG) + END_TAG.length()*endDescriptionSection2L
intTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap p(2w
.java.lang.String.lastIndexOf(java.lang.String)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap( p(32b
java.lang.String.length()CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javapG p(M2≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap$ p('2
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap4 p(;2
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javap? p(Fπ
korg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?start@119.15:119.20VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaw w("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">start</mark> = xmp.substring(0, startDescriptionSection)*start2Y
java.lang.StringTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaw w(2m
$java.lang.String.substring(int, int)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaw w($2≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaw w(2∆
}org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?startDescriptionSection@111.12:111.35CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaw( w(?¿
worg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?descriptionsArray@121.17:121.34VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javay y(""
typeString"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>String[] <mark class="class-field">descriptionsArray</mark> = xmp.substring(startDescriptionSection, endDescriptionSection).split(END_TAG)*descriptionsArray2[
java.lang.String[]TYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javay y(2q
(java.lang.String.split(java.lang.String)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javayc y(h2m
$java.lang.String.substring(int, int)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javay) y(22≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javay% y((2∆
}org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?startDescriptionSection@111.12:111.35CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javay3 y(J2ƒ
{org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?endDescriptionSection@112.12:112.33CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javayL y(a2
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javayi y(pß
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?end@123.15:123.18VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java{ {("
typeString"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>String <mark class="class-field">end</mark> = xmp.substring(endDescriptionSection)*end2Y
java.lang.StringTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java{ {(2h
java.lang.String.substring(int)CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java{ {("2≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmp@109.15:109.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java{ {(2ƒ
{org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?endDescriptionSection@112.12:112.33CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java{# {(8ì
gorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?s@125.20:125.21VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java} }("
typeString"
isFinalfalse"]
declarationStringH<mark class="modifier"> </mark>String <mark class="class-field">s</mark>*s2Y
java.lang.StringTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java} }(Ù
sorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?xmpMetaString@127.19:127.32VARIABLE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java ( "
typeString"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>String <mark class="class-field">xmpMetaString</mark> = start + s + END_TAG + end*xmpMetaString2Y
java.lang.StringTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java (2¥
korg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?start@119.15:119.20CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java# ((2∞
gorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?s@125.20:125.21CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java+ (,2
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java/ (62≤
iorg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?end@123.15:123.18CALL?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java9 (<˜
`org.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)!document	PARAMETER?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javad8 d(@"
type
PDDocument"
isFinalfalse"(
declarationStringPDDocument document*document2m
$org.apache.pdfbox.pdmodel.PDDocumentTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javad- d(7Á
horg.jabref.logic.xmp.XmpUtilReader.getXmpMetadata(org.apache.pdfbox.pdmodel.PDDocument)?ex@130.33:130.35VARIABLEA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÇ! Ç(#"
typeIOException"
isFinalfalse"#
declarationStringIOException ex*ex2^
java.io.IOExceptionTYPEA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaÇ Ç( •
Rorg.jabref.logic.xmp.XmpUtilReader.loadWithAutomaticDecryption(java.nio.file.Path)METHODA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaè è(1"
isFinalfalse"◊
declarationString¡<mark class="modifier">public </mark>PDDocument <mark class="method">loadWithAutomaticDecryption</mark>(Path path)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
PDDocument*loadWithAutomaticDecryption2f
java.nio.file.Path.toFile()CALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaí# í()2¢
Worg.jabref.logic.xmp.XmpUtilReader.loadWithAutomaticDecryption(java.nio.file.Path)!pathCALLA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaí í("2ß
Worg.jabref.logic.xmp.XmpUtilReader.loadWithAutomaticDecryption(java.nio.file.Path)!path	PARAMETERA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaè7 è(;2v
$org.apache.pdfbox.pdmodel.PDDocumentRETURN_TYPEA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaè è(Ã
Worg.jabref.logic.xmp.XmpUtilReader.loadWithAutomaticDecryption(java.nio.file.Path)!path	PARAMETERA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaè7 è(;"
typePath"
isFinalfalse"
declarationString	Path path*path2]
java.nio.file.PathTYPEA
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.javaè2 è(6é
5org.jabref.logic.xmp.XmpUtilReader?LOGGER@26.32:26.38VALUE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java  (&"
isFinaltrue"
typeLogger"„
declarationStringÕ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(XmpUtilReader.class);"
isStatictrue"
accessprivate*LOGGER2Y
org.slf4j.LoggerTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java (˝
8org.jabref.logic.xmp.XmpUtilReader?START_TAG@28.32:28.41VALUE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java  ()"
isFinaltrue"
typeString"Ã
declarationString∂<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">START_TAG</mark> = "<rdf:Description";"
isStatictrue"
accessprivate*	START_TAG2Y
java.lang.StringTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java (˘
6org.jabref.logic.xmp.XmpUtilReader?END_TAG@29.32:29.39VALUE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java  ('"
isFinaltrue"
typeString"Ã
declarationString∂<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">END_TAG</mark> = "</rdf:Description>";"
isStatictrue"
accessprivate*END_TAG2Y
java.lang.StringTYPE?
5src\main\java\org\jabref\logic\xmp\XmpUtilReader.java (