
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaÄ
6org.jabref.logic.protectedterms.ProtectedTermsListTestCLASSS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (#"*
packageorg.jabref.logic.protectedterms"
isFinalfalse"
inner classfalse"

isAbstractfalse"t
declarationString_<mark class="modifier">public </mark><mark class="modifier">class </mark>ProtectedTermsListTest"
accesspublic*ProtectedTermsListTest2¥
Porg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (2Œ
jorg.jabref.logic.protectedterms.ProtectedTermsListTest.protectedTermsListStringListOfStringStringBoolean()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java   (A2«
corg.jabref.logic.protectedterms.ProtectedTermsListTest.protectedTermsListStringListOfStringString()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java% %(:2´
Gorg.jabref.logic.protectedterms.ProtectedTermsListTest.getDescription()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java* *(2®
Dorg.jabref.logic.protectedterms.ProtectedTermsListTest.getTermList()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java/ /(2®
Dorg.jabref.logic.protectedterms.ProtectedTermsListTest.getLocation()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java4 4(2´
Gorg.jabref.logic.protectedterms.ProtectedTermsListTest.getTermListing()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java9 9(2¶
Borg.jabref.logic.protectedterms.ProtectedTermsListTest.compareTo()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java> >(2∞
Lorg.jabref.logic.protectedterms.ProtectedTermsListTest.setEnabledIsEnabled()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaC C(#2∞
Lorg.jabref.logic.protectedterms.ProtectedTermsListTest.notEnabledByDefault()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaJ J(#2∏
Torg.jabref.logic.protectedterms.ProtectedTermsListTest.canNotAddTermToInternalList()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaO O(+2∑
Sorg.jabref.logic.protectedterms.ProtectedTermsListTest.termNotAddedToInternalList()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaT T(*2µ
Qorg.jabref.logic.protectedterms.ProtectedTermsListTest.canAddTermToExternalList()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaZ Z((2¥
Porg.jabref.logic.protectedterms.ProtectedTermsListTest.termAddedToExternalList()DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java_ _('2≥
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (+2≥
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?externalList@19.31:19.43DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (+Œ
Porg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java ("
isFinalfalse"í
declarationString¸ <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>(<mark class="annotation">@TempDir</mark> Path temporaryFolder)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2â
,java.nio.file.Path.resolve(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java$ (+2’
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (2z
java.nio.file.Path.toString()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java# (+2z
java.util.Arrays.asList(T...)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaM (S2z
java.util.Arrays.asList(T...)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaO (U2Ú
îorg.jabref.logic.protectedterms.ProtectedTermsList.ProtectedTermsList(java.lang.String, java.util.List<java.lang.String>, java.lang.String, boolean)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (-2ù
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java: (E2È
ãorg.jabref.logic.protectedterms.ProtectedTermsList.ProtectedTermsList(java.lang.String, java.util.List<java.lang.String>, java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (-2ù
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java< (G2Ω
`org.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)!temporaryFolderCALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (#2æ
aorg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)?path@23.13:23.17CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (2æ
aorg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)?path@23.13:23.17CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java ("2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?externalList@19.31:19.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (2∆
iorg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)?tempFileName@25.15:25.27CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaf (r2¬
`org.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)!temporaryFolder	PARAMETERS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java$ (32≈
aorg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)?path@23.13:23.17DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (2Õ
iorg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)?tempFileName@25.15:25.27DECLARATIONS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (º
aorg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)?path@23.13:23.17VARIABLES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java ("
typePath"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = temporaryFolder.resolve("ThisIsARandomlyNamedFile")*path2o
java.nio.file.PathTYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (2â
,java.nio.file.Path.resolve(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java$ (+2Ω
`org.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)!temporaryFolderCALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (#¢
iorg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)?tempFileName@25.15:25.27VARIABLES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java ("
typeString"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>String <mark class="class-field">tempFileName</mark> = path.toString()*tempFileName2m
java.lang.StringTYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (2z
java.nio.file.Path.toString()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java# (+2æ
aorg.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)?path@23.13:23.17CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java ("∏
`org.jabref.logic.protectedterms.ProtectedTermsListTest.setUp(java.nio.file.Path)!temporaryFolder	PARAMETERS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java$ (3"
typePath"
isFinalfalse"R
declarationString=<mark class="annotation">@TempDir</mark> Path temporaryFolder*temporaryFolder2o
java.nio.file.PathTYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (#Ï
jorg.jabref.logic.protectedterms.ProtectedTermsListTest.protectedTermsListStringListOfStringStringBoolean()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java   (A"
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">protectedTermsListStringListOfStringStringBoolean</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*1protectedTermsListStringListOfStringStringBoolean2†
Corg.jabref.logic.protectedterms.ProtectedTermsList.isInternalList()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java!  !(.2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java! !(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java   (◊
corg.jabref.logic.protectedterms.ProtectedTermsListTest.protectedTermsListStringListOfStringString()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java% %(:"
isFinalfalse"–
declarationString∫<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">protectedTermsListStringListOfStringString</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid**protectedTermsListStringListOfStringString2†
Corg.jabref.logic.protectedterms.ProtectedTermsList.isInternalList()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java&! &(/2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?externalList@19.31:19.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java& &( 2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java% %(É
Gorg.jabref.logic.protectedterms.ProtectedTermsListTest.getDescription()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java* *("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getDescription2†
Corg.jabref.logic.protectedterms.ProtectedTermsList.getDescription()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java+* +(82¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java+ +()2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java* *(Û
Dorg.jabref.logic.protectedterms.ProtectedTermsListTest.getTermList()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java/ /("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getTermList</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getTermList2z
java.util.Arrays.asList(T...)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java0 0("2ù
@org.jabref.logic.protectedterms.ProtectedTermsList.getTermList()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java0? 0(J2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java02 0(>2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java/ /(˜
Dorg.jabref.logic.protectedterms.ProtectedTermsListTest.getLocation()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java4 4("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getLocation</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getLocation2ù
@org.jabref.logic.protectedterms.ProtectedTermsList.getLocation()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java5. 5(92¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java5! 5(-2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java4 4(É
Gorg.jabref.logic.protectedterms.ProtectedTermsListTest.getTermListing()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java9 9("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getTermListing</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getTermListing2†
Corg.jabref.logic.protectedterms.ProtectedTermsList.getTermListing()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java:. :(<2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java:! :(-2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java9 9(–
Borg.jabref.logic.protectedterms.ProtectedTermsListTest.compareTo()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java> >("
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">compareTo</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*	compareTo2Õ
porg.jabref.logic.protectedterms.ProtectedTermsList.compareTo(org.jabref.logic.protectedterms.ProtectedTermsList)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java?& ?(/2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java? ?(%2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?externalList@19.31:19.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java?0 ?(<2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java> >(Ø
Lorg.jabref.logic.protectedterms.ProtectedTermsListTest.setEnabledIsEnabled()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaC C(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setEnabledIsEnabled</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setEnabledIsEnabled2õ
>org.jabref.logic.protectedterms.ProtectedTermsList.isEnabled()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaD! D(*2£
Forg.jabref.logic.protectedterms.ProtectedTermsList.setEnabled(boolean)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaE E(2õ
>org.jabref.logic.protectedterms.ProtectedTermsList.isEnabled()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaF  F()2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaD D( 2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaE E(2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaF F(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaC C(ç
Lorg.jabref.logic.protectedterms.ProtectedTermsListTest.notEnabledByDefault()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaJ J(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">notEnabledByDefault</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*notEnabledByDefault2õ
>org.jabref.logic.protectedterms.ProtectedTermsList.isEnabled()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaK! K(*2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaK K( 2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaJ J(º
Torg.jabref.logic.protectedterms.ProtectedTermsListTest.canNotAddTermToInternalList()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaO O(+"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">canNotAddTermToInternalList</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*canNotAddTermToInternalList2≤
Uorg.jabref.logic.protectedterms.ProtectedTermsList.addProtectedTerm(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaP! P(12¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaP P( 2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaO O(ë
Sorg.jabref.logic.protectedterms.ProtectedTermsListTest.termNotAddedToInternalList()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaT T(*"
isFinalfalse"¿
declarationString™<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">termNotAddedToInternalList</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*termNotAddedToInternalList2≤
Uorg.jabref.logic.protectedterms.ProtectedTermsList.addProtectedTerm(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaU U(%2Ü
)java.util.List.contains(java.lang.Object)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaV/ V(72ù
@org.jabref.logic.protectedterms.ProtectedTermsList.getTermList()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaV! V(,2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaU U(2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaV V( 2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaT T(≥
Qorg.jabref.logic.protectedterms.ProtectedTermsListTest.canAddTermToExternalList()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaZ Z(("
isFinalfalse"æ
declarationString®<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">canAddTermToExternalList</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*canAddTermToExternalList2≤
Uorg.jabref.logic.protectedterms.ProtectedTermsList.addProtectedTerm(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java[  [(02¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?externalList@19.31:19.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java[ [(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaZ Z(à
Porg.jabref.logic.protectedterms.ProtectedTermsListTest.termAddedToExternalList()METHODS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java_ _('"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">termAddedToExternalList</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*termAddedToExternalList2≤
Uorg.jabref.logic.protectedterms.ProtectedTermsList.addProtectedTerm(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java` `(%2Ü
)java.util.List.contains(java.lang.Object)CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaa. a(62ù
@org.jabref.logic.protectedterms.ProtectedTermsList.getTermList()CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaa  a(+2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?externalList@19.31:19.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java` `(2¨
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?externalList@19.31:19.43CALLS
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.javaa a(2h
voidRETURN_TYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java_ _(°
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?internalList@18.31:18.43VARIABLES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (+"
isFinalfalse"
typeProtectedTermsList"{
declarationStringf<mark class="modifier">private </mark>ProtectedTermsList <mark class="class-field">internalList</mark>"
isStaticfalse"
accessprivate*internalList2è
2org.jabref.logic.protectedterms.ProtectedTermsListTYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (°
Oorg.jabref.logic.protectedterms.ProtectedTermsListTest?externalList@19.31:19.43VARIABLES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (+"
isFinalfalse"
typeProtectedTermsList"{
declarationStringf<mark class="modifier">private </mark>ProtectedTermsList <mark class="class-field">externalList</mark>"
isStaticfalse"
accessprivate*externalList2è
2org.jabref.logic.protectedterms.ProtectedTermsListTYPES
Isrc\test\java\org\jabref\logic\protectedterms\ProtectedTermsListTest.java (