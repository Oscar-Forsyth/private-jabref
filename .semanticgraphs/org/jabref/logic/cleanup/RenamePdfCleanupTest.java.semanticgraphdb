
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaõ
-org.jabref.logic.cleanup.RenamePdfCleanupTestCLASSJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java ("#
packageorg.jabref.logic.cleanup"
isFinalfalse"
inner classfalse"

isAbstractfalse"l
declarationStringW<mark class="modifier"> </mark><mark class="modifier">class </mark>RenamePdfCleanupTest"
accesspackage_private*RenamePdfCleanupTest2¢
Gorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java$	 $(2¿
eorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java7	 7(>2≥
Xorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesWithMultipleFiles()DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaF	 F(12Ω
borg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java]	 ](;2≤
Worg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javam	 m(02ö
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java (2§
Iorg.jabref.logic.cleanup.RenamePdfCleanupTest?filePreferences@29.28:29.43DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java (+2ú
Aorg.jabref.logic.cleanup.RenamePdfCleanupTest?cleanup@30.29:30.36DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java ($2ü
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java! !(î&
Gorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)METHODJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java$	 $("
isFinalfalse"∏
declarationString¢ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>(<mark class="annotation">@TempDir</mark> Path testFolder)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java& &(&2§
Porg.jabref.model.database.BibDatabaseContext.setDatabasePath(java.nio.file.Path)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java) )(2î
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java, ,(2û
Jorg.jabref.preferences.FilePreferences.shouldStoreFilesRelativeToBibFile()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java/ /(>2Å
-org.jabref.model.metadata.MetaData.MetaData()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java'  '((2ﬂ
äorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase, org.jabref.model.metadata.MetaData)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java() ((;2á
3org.jabref.model.database.BibDatabase.BibDatabase()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java(@ ((K2~
*org.jabref.model.entry.BibEntry.BibEntry()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java+ +(2Ó
ôorg.jabref.logic.cleanup.RenamePdfCleanup.RenamePdfCleanup(boolean, org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java0 0(&2¶
Rorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)!testFolderCALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java% %($2¶
Rorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)!testFolderCALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java& &(2∞
\org.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?metaData@39.17:39.25CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java(O ((W2Ø
[org.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?context@40.27:40.34CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java) )(2¨
Xorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?path@38.13:38.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java)  )($2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java+ +(2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java, ,(2ù
Iorg.jabref.logic.cleanup.RenamePdfCleanupTest?filePreferences@29.28:29.43CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java. .(2ù
Iorg.jabref.logic.cleanup.RenamePdfCleanupTest?filePreferences@29.28:29.43CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java/ /(2ï
Aorg.jabref.logic.cleanup.RenamePdfCleanupTest?cleanup@30.29:30.36CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java0 0(2Ø
[org.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?context@40.27:40.34CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java0. 0(52ù
Iorg.jabref.logic.cleanup.RenamePdfCleanupTest?filePreferences@29.28:29.43CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java07 0(F2ò
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java% %(2´
Rorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)!testFolder	PARAMETERJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java$ $('2≥
Xorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?path@38.13:38.17DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java& &(2∑
\org.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?metaData@39.17:39.25DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java' '(2∂
[org.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?context@40.27:40.34DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java( (("2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java$ $(Î
Xorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?path@38.13:38.17VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java& &("
typePath"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = testFolder.resolve("test.bib")*path2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java& &(2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java& &(&2¶
Rorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)!testFolderCALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java& &(◊
\org.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?metaData@39.17:39.25VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java' '("
typeMetaData"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>MetaData <mark class="class-field">metaData</mark> = new MetaData()*metaData2v
"org.jabref.model.metadata.MetaDataTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java' '(2Å
-org.jabref.model.metadata.MetaData.MetaData()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java'  '((”
[org.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?context@40.27:40.34VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java( ((""
typeBibDatabaseContext"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">context</mark> = new BibDatabaseContext(new BibDatabase()<mark class="modifier">,</mark> metaData)*context2Ä
,org.jabref.model.database.BibDatabaseContextTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java( ((2ﬂ
äorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase, org.jabref.model.metadata.MetaData)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java() ((;2á
3org.jabref.model.database.BibDatabase.BibDatabase()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java(@ ((K2∞
\org.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)?metaData@39.17:39.25CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java(O ((Wé
Rorg.jabref.logic.cleanup.RenamePdfCleanupTest.setUp(java.nio.file.Path)!testFolder	PARAMETERJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java$ $('"
typePath"
isFinalfalse"M
declarationString8<mark class="annotation">@TempDir</mark> Path testFolder*
testFolder2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java$ $(É)
eorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()METHODJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java7	 7(>"
isFinalfalse"§
declarationStringé<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*5cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java8 8(&2Ã
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java9 9(2w
#java.nio.file.Path.toAbsolutePath()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java;7 ;(E2≤
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java< <(2∂
borg.jabref.logic.bibtex.FileFieldWriter.getStringRepresentation(org.jabref.model.entry.LinkedFile)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java<; <(R2è
;org.jabref.preferences.FilePreferences.getFileNamePattern()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java> >(/2¶
Rorg.jabref.logic.cleanup.RenamePdfCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java? ?(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaA: A(<2l
java.util.Optional.of(T)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaB B( 2∂
borg.jabref.logic.bibtex.FileFieldWriter.getStringRepresentation(org.jabref.model.entry.LinkedFile)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaB1 B(H2†
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaB_ B(g2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java;# ;(-2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaA& A(02ò
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java8 8(2 
vorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?path@56.13:56.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java9 9(2 
vorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?path@56.13:56.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java;2 ;(62ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java< <(2œ
{org.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?fileField@59.19:59.28CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java<S <(\2ù
Iorg.jabref.logic.cleanup.RenamePdfCleanupTest?filePreferences@29.28:29.43CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java> >(2ï
Aorg.jabref.logic.cleanup.RenamePdfCleanupTest?cleanup@30.29:30.36CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java? ?(2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java? ?(2“
~org.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?newFileField@65.19:65.31CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaBI B(U2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaBY B(^2—
vorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?path@56.13:56.17DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java8 8(2÷
{org.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?fileField@59.19:59.28DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java; ;(2Ÿ
~org.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?newFileField@65.19:65.31DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaA A(2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java7 7(˚
vorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?path@56.13:56.17VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java8 8("
typePath"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = testFolder.resolve("toot.tmp")*path2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java8 8(2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java8 8(&2ò
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java8 8(’
{org.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?fileField@59.19:59.28VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java; ;("
type
LinkedFile"
isFinalfalse"÷
declarationString¿<mark class="modifier"> </mark>LinkedFile <mark class="class-field">fileField</mark> = new LinkedFile(""<mark class="modifier">,</mark> path.toAbsolutePath()<mark class="modifier">,</mark> "")*	fileField2u
!org.jabref.model.entry.LinkedFileTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java; ;(2w
#java.nio.file.Path.toAbsolutePath()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java;7 ;(E2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java;# ;(-2 
vorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?path@56.13:56.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java;2 ;(6©
~org.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase()?newFileField@65.19:65.31VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaA A("
type
LinkedFile"
isFinalfalse"◊
declarationString¡<mark class="modifier"> </mark>LinkedFile <mark class="class-field">newFileField</mark> = new LinkedFile(""<mark class="modifier">,</mark> Path.of("Toot.tmp")<mark class="modifier">,</mark> "")*newFileField2u
!org.jabref.model.entry.LinkedFileTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaA A(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaA: A(<2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaA& A(0‚0
Xorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesWithMultipleFiles()METHODJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaF	 F(1"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">cleanupRenamePdfRenamesWithMultipleFiles</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*(cleanupRenamePdfRenamesWithMultipleFiles2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaG G(&2Ã
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaH H(2≤
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaJ J(2≤
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaK K(2∆
rorg.jabref.logic.bibtex.FileFieldWriter.getStringRepresentation(java.util.List<org.jabref.model.entry.LinkedFile>)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaK; K(R2q
java.util.Arrays.asList(T...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaL L(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaM0 M(22w
#java.nio.file.Path.toAbsolutePath()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaN0 N(>2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaO0 O(22è
;org.jabref.preferences.FilePreferences.getFileNamePattern()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaQ Q(/2¶
Rorg.jabref.logic.cleanup.RenamePdfCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaR R(2l
java.util.Optional.of(T)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaT T( 2∆
rorg.jabref.logic.bibtex.FileFieldWriter.getStringRepresentation(java.util.List<org.jabref.model.entry.LinkedFile>)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaT1 T(H2q
java.util.Arrays.asList(T...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaU U(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaV0 V(22ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaW0 W(22ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaX0 X(22†
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaY Y(2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaM M(&2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaN N(&2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaO O(&2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaV V(&2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaW W(&2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaX X(&2ò
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaG G(2Ω
iorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesWithMultipleFiles()?path@71.13:71.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaH H(2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaJ J(2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaK K(2Ω
iorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesWithMultipleFiles()?path@71.13:71.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaN+ N(/2ù
Iorg.jabref.logic.cleanup.RenamePdfCleanupTest?filePreferences@29.28:29.43CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaQ Q(2ï
Aorg.jabref.logic.cleanup.RenamePdfCleanupTest?cleanup@30.29:30.36CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaR R(2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaR R(2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaY Y(2ƒ
iorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesWithMultipleFiles()?path@71.13:71.17DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaG G(2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaF F(Ó
iorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesWithMultipleFiles()?path@71.13:71.17VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaG G("
typePath"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = testFolder.resolve("Toot.tmp")*path2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaG G(2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaG G(&2ò
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaG G(¥+
borg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()METHODJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java]	 ](;"
isFinalfalse"°
declarationStringã<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">cleanupRenamePdfRenamesFileStartingWithCitationKey</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*2cleanupRenamePdfRenamesFileStartingWithCitationKey2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java^ ^(&2Ã
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java_ _(2w
#java.nio.file.Path.toAbsolutePath()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaa7 a(E2≤
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javab b(2∂
borg.jabref.logic.bibtex.FileFieldWriter.getStringRepresentation(org.jabref.model.entry.LinkedFile)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javab; b(R2≤
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javac c(2è
;org.jabref.preferences.FilePreferences.getFileNamePattern()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javae e(/2¶
Rorg.jabref.logic.cleanup.RenamePdfCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaf f(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javah: h(<2l
java.util.Optional.of(T)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javai i( 2∂
borg.jabref.logic.bibtex.FileFieldWriter.getStringRepresentation(org.jabref.model.entry.LinkedFile)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javai1 i(H2†
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javai_ i(g2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaa# a(-2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javah& h(02ò
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java^ ^(2«
sorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?path@94.13:94.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java_ _(2«
sorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?path@94.13:94.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaa2 a(62ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javab b(2Ã
xorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?fileField@97.19:97.28CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javabS b(\2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javac c(2ù
Iorg.jabref.logic.cleanup.RenamePdfCleanupTest?filePreferences@29.28:29.43CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javae e(2ï
Aorg.jabref.logic.cleanup.RenamePdfCleanupTest?cleanup@30.29:30.36CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaf f(2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaf f(2—
}org.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?newFileField@104.19:104.31CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaiI i(U2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaiY i(^2Œ
sorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?path@94.13:94.17DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java^ ^(2”
xorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?fileField@97.19:97.28DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaa a(2ÿ
}org.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?newFileField@104.19:104.31DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javah h(2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java] ](¯
sorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?path@94.13:94.17VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java^ ^("
typePath"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = testFolder.resolve("Toot.tmp")*path2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java^ ^(2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java^ ^(&2ò
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java^ ^(œ
xorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?fileField@97.19:97.28VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaa a("
type
LinkedFile"
isFinalfalse"÷
declarationString¿<mark class="modifier"> </mark>LinkedFile <mark class="class-field">fileField</mark> = new LinkedFile(""<mark class="modifier">,</mark> path.toAbsolutePath()<mark class="modifier">,</mark> "")*	fileField2u
!org.jabref.model.entry.LinkedFileTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaa a(2w
#java.nio.file.Path.toAbsolutePath()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaa7 a(E2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaa# a(-2«
sorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?path@94.13:94.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaa2 a(6µ
}org.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileStartingWithCitationKey()?newFileField@104.19:104.31VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javah h("
type
LinkedFile"
isFinalfalse"‰
declarationStringŒ<mark class="modifier"> </mark>LinkedFile <mark class="class-field">newFileField</mark> = new LinkedFile(""<mark class="modifier">,</mark> Path.of("Toot - test title.tmp")<mark class="modifier">,</mark> "")*newFileField2u
!org.jabref.model.entry.LinkedFileTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javah h(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javah: h(<2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javah& h(0©)
Worg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()METHODJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javam	 m(0"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">cleanupRenamePdfRenamesFileInSameFolder</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'cleanupRenamePdfRenamesFileInSameFolder2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javan n(&2Ã
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javao o(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javap7 p(92≤
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaq q(2∂
borg.jabref.logic.bibtex.FileFieldWriter.getStringRepresentation(org.jabref.model.entry.LinkedFile)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaq; q(R2≤
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javar r(2è
;org.jabref.preferences.FilePreferences.getFileNamePattern()CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javat t(/2¶
Rorg.jabref.logic.cleanup.RenamePdfCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javau u(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaw: w(<2l
java.util.Optional.of(T)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javax x( 2∂
borg.jabref.logic.bibtex.FileFieldWriter.getStringRepresentation(org.jabref.model.entry.LinkedFile)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javax1 x(H2†
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javax_ x(g2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javap# p(-2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaw& w(02ò
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javan n(2æ
jorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()?path@110.13:110.17CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javao o(2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaq q(2√
oorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()?fileField@112.19:112.28CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaqS q(\2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javar r(2ù
Iorg.jabref.logic.cleanup.RenamePdfCleanupTest?filePreferences@29.28:29.43CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javat t(2ï
Aorg.jabref.logic.cleanup.RenamePdfCleanupTest?cleanup@30.29:30.36CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javau u(2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javau u(2∆
rorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()?newFileField@119.19:119.31CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaxI x(U2ì
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaxY x(^2≈
jorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()?path@110.13:110.17DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javan n(2 
oorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()?fileField@112.19:112.28DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javap p(2Õ
rorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()?newFileField@119.19:119.31DECLARATIONJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaw w(2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javam m(Ô
jorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()?path@110.13:110.17VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javan n("
typePath"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>Path <mark class="class-field">path</mark> = testFolder.resolve("Toot.pdf")*path2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javan n(2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javan n(&2ò
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javan n(ó
oorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()?fileField@112.19:112.28VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javap p("
type
LinkedFile"
isFinalfalse"◊
declarationString¡<mark class="modifier"> </mark>LinkedFile <mark class="class-field">fileField</mark> = new LinkedFile(""<mark class="modifier">,</mark> Path.of("Toot.pdf")<mark class="modifier">,</mark> "PDF")*	fileField2u
!org.jabref.model.entry.LinkedFileTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javap p(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javap7 p(92∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javap# p(-≠
rorg.jabref.logic.cleanup.RenamePdfCleanupTest.cleanupRenamePdfRenamesFileInSameFolder()?newFileField@119.19:119.31VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaw w("
type
LinkedFile"
isFinalfalse"Á
declarationString—<mark class="modifier"> </mark>LinkedFile <mark class="class-field">newFileField</mark> = new LinkedFile(""<mark class="modifier">,</mark> Path.of("Toot - test title.pdf")<mark class="modifier">,</mark> "PDF")*newFileField2u
!org.jabref.model.entry.LinkedFileTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaw w(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaw: w(<2∏
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.javaw& w(0…
?org.jabref.logic.cleanup.RenamePdfCleanupTest?entry@27.21:27.26VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java ("
isFinalfalse"
typeBibEntry"j
declarationStringU<mark class="modifier">private </mark>BibEntry <mark class="class-field">entry</mark>"
isStaticfalse"
accessprivate*entry2s
org.jabref.model.entry.BibEntryTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java (¸
Iorg.jabref.logic.cleanup.RenamePdfCleanupTest?filePreferences@29.28:29.43VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java (+"
isFinalfalse"
typeFilePreferences"{
declarationStringf<mark class="modifier">private </mark>FilePreferences <mark class="class-field">filePreferences</mark>"
isStaticfalse"
accessprivate*filePreferences2z
&org.jabref.preferences.FilePreferencesTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java (È
Aorg.jabref.logic.cleanup.RenamePdfCleanupTest?cleanup@30.29:30.36VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java ($"
isFinalfalse"
typeRenamePdfCleanup"t
declarationString_<mark class="modifier">private </mark>RenamePdfCleanup <mark class="class-field">cleanup</mark>"
isStaticfalse"
accessprivate*cleanup2}
)org.jabref.logic.cleanup.RenamePdfCleanupTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java (√
Dorg.jabref.logic.cleanup.RenamePdfCleanupTest?testFolder@33.17:33.27VARIABLEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java! !("
isFinalfalse"
typePath"k
declarationStringV<mark class="modifier">private </mark>Path <mark class="class-field">testFolder</mark>"
isStaticfalse"
accessprivate*
testFolder2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\cleanup\RenamePdfCleanupTest.java! !(