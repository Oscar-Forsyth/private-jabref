
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaˆ
6org.jabref.logic.openoffice.style.OOBibStyleTestHelperCLASSS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java (",
package!org.jabref.logic.openoffice.style"
isFinalfalse"
inner classfalse"

isAbstractfalse"l
declarationStringW<mark class="modifier"> </mark><mark class="modifier">class </mark>OOBibStyleTestHelper"
accesspackage_private*OOBibStyleTestHelper2ﬂ
{org.jabref.logic.openoffice.style.OOBibStyleTestHelper.numBibEntry(java.lang.String, java.util.Optional<java.lang.Integer>)DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaR) R(42î
Øorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java[ [(+2Ã
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javau& u(.2©
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaz z(+2™
√org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaâ â(62È
Çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaü ü(&2¨
≈org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¬ ¬($2≠
∆org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java” ”(%2È
Çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaË Ë(-¥
{org.jabref.logic.openoffice.style.OOBibStyleTestHelper.numBibEntry(java.lang.String, java.util.Optional<java.lang.Integer>)METHODS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaR) R(4"
isFinalfalse"á
declarationStringÒ<mark class="modifier"> </mark><mark class="modifier">static </mark>CitationMarkerNumericBibEntry <mark class="method">numBibEntry</mark>(String key<mark class="modifier"><mark class="modifier">,</mark></mark> Optional&lt;Integer&gt; number)"
isStatictrue"
accesspackage_private"

isAbstractfalse"%
typeCitationMarkerNumericBibEntry*numBibEntry2ë
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaS S(42‹
org.jabref.logic.openoffice.style.OOBibStyleTestHelper.numBibEntry(java.lang.String, java.util.Optional<java.lang.Integer>)!keyCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaS5 S(82‡
Çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numBibEntry(java.lang.String, java.util.Optional<java.lang.Integer>)!numberCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaS: S(@2·
org.jabref.logic.openoffice.style.OOBibStyleTestHelper.numBibEntry(java.lang.String, java.util.Optional<java.lang.Integer>)!key	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaR< R(?2Â
Çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numBibEntry(java.lang.String, java.util.Optional<java.lang.Integer>)!number	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaRS R(Y2£
?org.jabref.model.openoffice.style.CitationMarkerNumericBibEntryRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaR R((ò
org.jabref.logic.openoffice.style.OOBibStyleTestHelper.numBibEntry(java.lang.String, java.util.Optional<java.lang.Integer>)!key	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaR< R(?"
typeString"
isFinalfalse"
declarationString
String key*key2m
java.lang.StringTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaR5 R(;≥
Çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numBibEntry(java.lang.String, java.util.Optional<java.lang.Integer>)!number	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaRS R(Y"
typeOptional<Integer>"
isFinalfalse"-
declarationStringOptional<Integer> number*number2o
java.util.OptionalTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaRA R(I2w
java.lang.IntegerTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaRJ R(QãN
Øorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)METHODS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java[ [(+"
isFinalfalse"◊
declarationString¡<mark class="modifier"> </mark><mark class="modifier">static </mark>String <mark class="method">runGetNumCitationMarker2a</mark>(OOBibStyle style<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;Integer&gt; num<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> minGroupingCount<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> inList)"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeString*runGetNumCitationMarker2a2r
java.util.List.size()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java^ ^(2r
java.util.List.size()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java_d _(h2w
java.util.Optional.empty()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javad. d(32u
java.util.Optional.of(T)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javadA d(C2ë
4org.jabref.model.openoffice.ootext.OOText.toString()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javae@ e(H2Ô
ëorg.jabref.logic.openoffice.style.OOBibStyle.getNumCitationMarkerForBibliography(org.jabref.model.openoffice.style.CitationMarkerNumericBibEntry)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javae e(<2©
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javam m(2≠
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javai i(2z
java.util.Collection.stream()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javah h(2w
java.util.Optional.empty()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javal0 l(52Å
$java.util.stream.Collectors.toList()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javam+ m(12ë
4org.jabref.model.openoffice.ootext.OOText.toString()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javanH n(P2Û
ïorg.jabref.logic.openoffice.style.OOBibStyle.getNumCitationMarker2(java.util.List<org.jabref.model.openoffice.style.CitationMarkerNumericEntry>, int)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javan n(.2™
Mjava.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java_ _(22ë
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javac c(92®
 org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaj# j(A2î
∂org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!inListCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java] ](2ë
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!numCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java^ ^(2ë
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!numCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java_` _(c2ë
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!numCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaa a(2õ
Ωorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@97.16:97.17CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javad d(2õ
Ωorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@97.16:97.17CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javadD d(E2ì
µorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!styleCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javae e(2õ
Ωorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?x@98.46:98.47CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javae= e(>2ë
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!numCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javah h(2ù
øorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@105.28:105.29CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javajJ j(K2ù
øorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@105.28:105.29CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javak' k((2ì
µorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!styleCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javan n(2°
√org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?input@103.45:103.50CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javan/ n(42û
¿org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!minGroupingCountCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javan6 n(F2ò
µorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!style	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java[7 [(<2ñ
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!num	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\: \(=2£
¿org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!minGroupingCount	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\C \(S2ô
∂org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!inList	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\] \(c2¢
Ωorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@97.16:97.17DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaa a(2¢
Ωorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?x@98.46:98.47DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javab. b(/2®
√org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?input@103.45:103.50DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javag- g(22§
øorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@105.28:105.29DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javai i(2t
java.lang.StringRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java[ [(√
Ωorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@97.16:97.17VARIABLES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaa a("
typeint"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">n</mark> = num.getFirst()*n2`
intTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaa a(2ë
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!numCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaa a(Ã
Ωorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?x@98.46:98.47VARIABLES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javab. b(/")
type!CitationMarkerNumericBibEntryImpl"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>CitationMarkerNumericBibEntryImpl <mark class="class-field">x</mark> = new CitationMarkerNumericBibEntryImpl("key"<mark class="modifier">,</mark> n == 0 ? Optional.empty() : Optional.of(n))*x2µ
Xorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImplTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javab b(-2w
java.util.Optional.empty()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javad. d(32u
java.util.Optional.of(T)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javadA d(C2ë
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javac c(92õ
Ωorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@97.16:97.17CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javad d(2õ
Ωorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@97.16:97.17CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javadD d(E∆
√org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?input@103.45:103.50VARIABLES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javag- g(2"(
type List<CitationMarkerNumericEntry>"
isFinalfalse"ı
declarationStringﬂ<mark class="modifier"> </mark>List<CitationMarkerNumericEntry> <mark class="class-field">input</mark> = num.stream().map(n -> new CitationMarkerNumericEntryImpl("key" + n, n, Optional.empty())).collect(Collectors.toList())*input2k
java.util.ListTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javag g(2¢
<org.jabref.model.openoffice.style.CitationMarkerNumericEntryTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javag g(+2©
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javam m(2≠
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javai i(2z
java.util.Collection.stream()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javah h(2w
java.util.Optional.empty()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javal0 l(52Å
$java.util.stream.Collectors.toList()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javam+ m(12®
 org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaj# j(A2ë
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!numCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javah h(2ù
øorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@105.28:105.29CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javajJ j(K2ù
øorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@105.28:105.29CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javak' k((¯
µorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!style	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java[7 [(<"
type
OOBibStyle"
isFinalfalse"%
declarationStringOOBibStyle style*style2â
,org.jabref.logic.openoffice.style.OOBibStyleTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java[, [(6“
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!num	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\: \(="
typeList<Integer>"
isFinalfalse"&
declarationStringList<Integer> num*num2k
java.util.ListTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\, \(02w
java.lang.IntegerTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\1 \(8ˇ
¿org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!minGroupingCount	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\C \(S"
typeint"
isFinalfalse"G
declarationString2<mark class="modifier">int</mark> minGroupingCount*minGroupingCount2`
intTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\? \(BÌ
∂org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)!inList	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\] \(c"
typeboolean"
isFinalfalse"A
declarationString,<mark class="modifier">boolean</mark> inList*inList2d
booleanTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java\U \(\ﬂ
øorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2a(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<java.lang.Integer>, int, boolean)?n@105.28:105.29VARIABLES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javai i("
type"
isFinalfalse"
declarationString n*n2TYPEÃ
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)METHODS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javau& u(."
isFinalfalse"€
declarationString≈<mark class="modifier"> </mark><mark class="modifier">static </mark>CitationMarkerNumericEntry <mark class="method">numEntry</mark>(String key<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> num<mark class="modifier"><mark class="modifier">,</mark></mark> String pageInfoOrNull)"
isStatictrue"
accesspackage_private"

isAbstractfalse""
typeCitationMarkerNumericEntry*numEntry2}
 java.util.Optional.ofNullable(T)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javav- v(72£
Forg.jabref.model.openoffice.ootext.OOText.fromString(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javav? v(I2®
 org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaw w(12‘
worg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!pageInfoOrNullCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javavJ v(X2…
lorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!keyCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaw2 w(52…
lorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!numCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaw7 w(:2‹
org.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)?pageInfo@118.25:118.33CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaw< w(D2Œ
lorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!key	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javau6 u(92Œ
lorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!num	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javau? u(B2Ÿ
worg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!pageInfoOrNull	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javauK u(Y2„
org.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)?pageInfo@118.25:118.33DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javav v(!2†
<org.jabref.model.openoffice.style.CitationMarkerNumericEntryRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javau u(%¿	
org.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)?pageInfo@118.25:118.33VARIABLES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javav v(!"
typeOptional<OOText>"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>Optional<OOText> <mark class="class-field">pageInfo</mark> = Optional.ofNullable(OOText.fromString(pageInfoOrNull))*pageInfo2o
java.util.OptionalTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javav v(2è
)org.jabref.model.openoffice.ootext.OOTextTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javav v(2}
 java.util.Optional.ofNullable(T)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javav- v(72£
Forg.jabref.model.openoffice.ootext.OOText.fromString(java.lang.String)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javav? v(I2‘
worg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!pageInfoOrNullCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javavJ v(XÖ
lorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!key	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javau6 u(9"
typeString"
isFinalfalse"
declarationString
String key*key2m
java.lang.StringTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javau/ u(5ê
lorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!num	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javau? u(B"
typeint"
isFinalfalse":
declarationString%<mark class="modifier">int</mark> num*num2`
intTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javau; u(>¶
worg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)!pageInfoOrNull	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javauK u(Y"
typeString"
isFinalfalse"*
declarationStringString pageInfoOrNull*pageInfoOrNull2m
java.lang.StringTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javauD u(J◊%
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)METHODS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaz z(+"
isFinalfalse"ı
declarationStringﬂ<mark class="modifier"> </mark><mark class="modifier">static </mark>String <mark class="method">runGetNumCitationMarker2b</mark>(OOBibStyle style<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> minGroupingCount<mark class="modifier"><mark class="modifier">,</mark></mark> CitationMarkerNumericEntry... s)"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeString*runGetNumCitationMarker2b2©
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}> }(E2}
 java.util.stream.Stream.of(T...)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}8 }(:2Å
$java.util.stream.Collectors.toList()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}Q }(W2Û
ïorg.jabref.logic.openoffice.style.OOBibStyle.getNumCitationMarker2(java.util.List<org.jabref.model.openoffice.style.CitationMarkerNumericEntry>, int)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~ ~(02ë
4org.jabref.model.openoffice.ootext.OOText.toString()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java (2§
∆org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!sCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}; }(<2®
 org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!styleCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~ ~(2∂
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)?input@125.41:125.46CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~1 ~(62≥
’org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!minGroupingCountCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~8 ~(H2¥
÷org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)?res@126.15:126.18CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java (2≠
 org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!style	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaz7 z(<2∏
’org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!minGroupingCount	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java{0 {(@2©
∆org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!s	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java|J |(K2Ω
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)?input@125.41:125.46DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}) }(.2ª
÷org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)?res@126.15:126.18DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~ ~(2t
java.lang.StringRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaz z(ê
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)?input@125.41:125.46VARIABLES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}) }(."(
type List<CitationMarkerNumericEntry>"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>List<CitationMarkerNumericEntry> <mark class="class-field">input</mark> = Stream.of(s).collect(Collectors.toList())*input2k
java.util.ListTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java} }(2¢
<org.jabref.model.openoffice.style.CitationMarkerNumericEntryTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java} }('2©
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}> }(E2}
 java.util.stream.Stream.of(T...)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}8 }(:2Å
$java.util.stream.Collectors.toList()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}Q }(W2§
∆org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!sCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java}; }(<í
÷org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)?res@126.15:126.18VARIABLES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~ ~("
typeOOText"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>OOText <mark class="class-field">res</mark> = style.getNumCitationMarker2(input, minGroupingCount)*res2Ü
)org.jabref.model.openoffice.ootext.OOTextTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~ ~(2Û
ïorg.jabref.logic.openoffice.style.OOBibStyle.getNumCitationMarker2(java.util.List<org.jabref.model.openoffice.style.CitationMarkerNumericEntry>, int)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~ ~(02®
 org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!styleCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~ ~(2∂
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)?input@125.41:125.46CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~1 ~(62≥
’org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!minGroupingCountCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java~8 ~(Hç
 org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!style	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaz7 z(<"
type
OOBibStyle"
isFinalfalse"%
declarationStringOOBibStyle style*style2â
,org.jabref.logic.openoffice.style.OOBibStyleTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaz, z(6î
’org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!minGroupingCount	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java{0 {(@"
typeint"
isFinalfalse"G
declarationString2<mark class="modifier">int</mark> minGroupingCount*minGroupingCount2`
intTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java{, {(/≥
∆org.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)!s	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java|J |(K""
typeCitationMarkerNumericEntry"
isFinalfalse"1
declarationStringCitationMarkerNumericEntry s*s2õ
>org.jabref.model.openoffice.style.CitationMarkerNumericEntry[]TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java|, |(FÍS
√org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)METHODU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaâ â(6"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark><mark class="modifier">static </mark>CitationMarkerEntry <mark class="method">makeCitationMarkerEntry</mark>(BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> BibDatabase database<mark class="modifier"><mark class="modifier">,</mark></mark> String uniqueLetterQ<mark class="modifier"><mark class="modifier">,</mark></mark> String pageInfoQ<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> isFirstAppearanceOfSource)"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeCitationMarkerEntry*makeCitationMarkerEntry2{
java.util.Optional.isEmpty()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaé# é(*2è
0org.jabref.model.entry.BibEntry.getCitationKey()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaé é( 2w
java.util.Optional.get()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaë4 ë(72è
0org.jabref.model.entry.BibEntry.getCitationKey()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaë# ë(12Ê
Üorg.jabref.model.openoffice.style.Citation.setLookupResult(java.util.Optional<org.jabref.model.openoffice.style.CitationLookupResult>)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaì ì(2w
java.util.Optional.of(T)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaì( ì(*2ø
`org.jabref.model.openoffice.style.Citation.setUniqueLetter(java.util.Optional<java.lang.String>)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaî î(2
 java.util.Optional.ofNullable(T)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaî( î(22
 java.util.Optional.ofNullable(T)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaï- ï(72•
Forg.jabref.model.openoffice.ootext.OOText.fromString(java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaï? ï(I2‘
uorg.jabref.model.openoffice.style.Citation.setPageInfo(java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javañ ñ(2⁄
{org.jabref.model.openoffice.style.PageInfo.normalizePageInfo(java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javañ$ ñ(52Ø
Porg.jabref.model.openoffice.style.Citation.setIsFirstAppearanceOfSource(boolean)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaó ó(+2¨
Mjava.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaè è(.2§
Eorg.jabref.model.openoffice.style.Citation.Citation(java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaí í(&2Û
ìorg.jabref.model.openoffice.style.CitationLookupResult.CitationLookupResult(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaì/ ì(C2©
…org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!entryCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaé é(2©
…org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!entryCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaë ë("2Ω
›org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?citationKey@145.15:145.26CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaí' í(22∏
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?result@146.17:146.23CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaì ì(2©
…org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!entryCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaìD ì(I2¨
Ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!databaseCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaìK ì(S2∏
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?result@146.17:146.23CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaî î(2±
—org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!uniqueLetterQCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaî3 î(@2≠
Õorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!pageInfoQCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaïJ ï(S2∏
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?result@146.17:146.23CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javañ ñ(2∫
⁄org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?pageInfo@149.25:149.33CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javañ6 ñ(>2∏
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?result@146.17:146.23CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaó ó(2Ω
›org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!isFirstAppearanceOfSourceCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaó, ó(E2∏
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?result@146.17:146.23CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaò ò(2Æ
…org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!entry	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaâ@ â(E2±
Ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!database	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaäC ä(K2∂
—org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!uniqueLetterQ	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaã> ã(K2≤
Õorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!pageInfoQ	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaå> å(G2¬
›org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!isFirstAppearanceOfSource	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaç? ç(X2ƒ
›org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?citationKey@145.15:145.26DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaë ë(2ø
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?result@146.17:146.23DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaí í(2¡
⁄org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?pageInfo@149.25:149.33DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaï ï(!2õ
5org.jabref.model.openoffice.style.CitationMarkerEntryRETURN_TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaâ â(°	
›org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?citationKey@145.15:145.26VARIABLEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaë ë("
typeString"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>String <mark class="class-field">citationKey</mark> = entry.getCitationKey().get()*citationKey2o
java.lang.StringTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaë ë(2w
java.util.Optional.get()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaë4 ë(72è
0org.jabref.model.entry.BibEntry.getCitationKey()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaë# ë(12©
…org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!entryCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaë ë("ﬁ
ÿorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?result@146.17:146.23VARIABLEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaí í("
typeCitation"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>Citation <mark class="class-field">result</mark> = new Citation(citationKey)*result2â
*org.jabref.model.openoffice.style.CitationTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaí í(2§
Eorg.jabref.model.openoffice.style.Citation.Citation(java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaí í(&2Ω
›org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?citationKey@145.15:145.26CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaí' í(2˙

⁄org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)?pageInfo@149.25:149.33VARIABLEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaï ï(!"
typeOptional<OOText>"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>Optional<OOText> <mark class="class-field">pageInfo</mark> = Optional.ofNullable(OOText.fromString(pageInfoQ))*pageInfo2q
java.util.OptionalTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaï ï(2ë
)org.jabref.model.openoffice.ootext.OOTextTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaï ï(2
 java.util.Optional.ofNullable(T)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaï- ï(72•
Forg.jabref.model.openoffice.ootext.OOText.fromString(java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaï? ï(I2≠
Õorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!pageInfoQCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaïJ ï(S˛
…org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!entry	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaâ@ â(E"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaâ7 â(?î
Ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!database	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaäC ä(K"
typeBibDatabase"
isFinalfalse")
declarationStringBibDatabase database*database2Ñ
%org.jabref.model.database.BibDatabaseTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaä7 ä(BÉ
—org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!uniqueLetterQ	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaã> ã(K"
typeString"
isFinalfalse")
declarationStringString uniqueLetterQ*uniqueLetterQ2o
java.lang.StringTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaã7 ã(=˜
Õorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!pageInfoQ	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaå> å(G"
typeString"
isFinalfalse"%
declarationStringString pageInfoQ*	pageInfoQ2o
java.lang.StringTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaå7 å(=æ
›org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)!isFirstAppearanceOfSource	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaç? ç(X"
typeboolean"
isFinalfalse"T
declarationString?<mark class="modifier">boolean</mark> isFirstAppearanceOfSource*isFirstAppearanceOfSource2f
booleanTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaç7 ç(>ç 
Çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)METHODU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaü ü(&"
isFinalfalse"Ù
declarationStringﬁ<mark class="modifier"> </mark><mark class="modifier">static </mark>String <mark class="method">getCitationMarker2ab</mark>(OOBibStyle style<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;BibEntry&gt; entries<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;BibEntry<mark class="modifier"><mark class="modifier">,</mark></mark> BibDatabase&gt; entryDBMap<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> inParenthesis<mark class="modifier"><mark class="modifier">,</mark></mark> String[] uniquefiers<mark class="modifier"><mark class="modifier">,</mark></mark> Boolean[] isFirstAppearanceOfSource<mark class="modifier"><mark class="modifier">,</mark></mark> String[] pageInfo<mark class="modifier"><mark class="modifier">,</mark></mark> NonUniqueCitationMarker nonunique)"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeString*getCitationMarker2ab2t
java.util.List.size()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java®- ®(12ö
;java.util.Arrays.fill(java.lang.Object[], java.lang.Object)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java© ©(2t
java.util.List.size()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¨* ¨(.2ö
;java.util.Arrays.fill(java.lang.Object[], java.lang.Object)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≠ ≠(2t
java.util.List.size()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∞< ∞(@2à
)java.util.Arrays.fill(boolean[], boolean)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java± ±(2t
java.util.List.size()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¥$ ¥((2v
java.util.List.get(int)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ% µ((2£
√org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∂$ ∂(;2Ç
#java.util.Map.get(java.lang.Object)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∑ ∑("2t
java.util.List.add(E)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaª" ª(%2ì
4org.jabref.model.openoffice.ootext.OOText.toString()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaø ø(#2¨
Ãorg.jabref.logic.openoffice.style.OOBibStyle.createCitationMarker(java.util.List<org.jabref.model.openoffice.style.CitationMarkerEntry>, boolean, org.jabref.model.openoffice.style.NonUniqueCitationMarker)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaΩ Ω()2~
java.util.ArrayList.ArrayList()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≥> ≥(I2Ó
éorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!uniquefiersCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaß ß(2Ó
éorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!uniquefiersCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java® ®(2Í
äorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entriesCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java®% ®(,2Ó
éorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!uniquefiersCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java© ©(#2Î
ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!pageInfoCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java´ ´(2Î
ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!pageInfoCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¨ ¨(2Í
äorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entriesCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¨" ¨()2Î
ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!pageInfoCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≠ ≠( 2¸
úorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!isFirstAppearanceOfSourceCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaØ Ø(%2¸
úorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!isFirstAppearanceOfSourceCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∞ ∞(%2Í
äorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entriesCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∞4 ∞(;2¸
úorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!isFirstAppearanceOfSourceCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java± ±(12Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¥ ¥(2Í
äorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entriesCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¥ ¥(#2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¥, ¥(-2Í
äorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entriesCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ µ($2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ) µ(*2ˆ
ñorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?entry@181.21:181.26CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∂< ∂(A2Ì
çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entryDBMapCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∑ ∑(2ˆ
ñorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?entry@181.21:181.26CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∑# ∑((2Ó
éorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!uniquefiersCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∏ ∏(2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∏  ∏(!2Î
ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!pageInfoCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaπ π(2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaπ π(2¸
úorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!isFirstAppearanceOfSourceCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∫ ∫(-2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∫. ∫(/2Ü
¶org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?citationMarkerEntries@179.34:179.55CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaª ª(!2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?e@182.32:182.33CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaª& ª('2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaΩ Ω(2Ü
¶org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?citationMarkerEntries@179.34:179.55CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaΩ* Ω(?2
êorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!inParenthesisCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaæ æ(2Ï
åorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!nonuniqueCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaø ø(2Ì
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!style	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaü2 ü(72Ô
äorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entries	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java†6 †(=2Ú
çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entryDBMap	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java°B °(L2ı
êorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!inParenthesis	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¢/ ¢(<2Û
éorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!uniquefiers	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java£0 £(;2Å
úorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!isFirstAppearanceOfSource	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java§1 §(J2
ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!pageInfo	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java•0 •(82Ò
åorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!nonunique	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¶? ¶(H2ç
¶org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?citationMarkerEntries@179.34:179.55DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≥" ≥(72˘
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¥ ¥(2˝
ñorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?entry@181.21:181.26DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ µ(2˘
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?e@182.32:182.33DECLARATIONU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∂  ∂(!2v
java.lang.StringRETURN_TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaü ü(Å	
¶org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?citationMarkerEntries@179.34:179.55VARIABLEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≥" ≥(7"!
typeList<CitationMarkerEntry>"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>List<CitationMarkerEntry> <mark class="class-field">citationMarkerEntries</mark> = new ArrayList<>()*citationMarkerEntries2m
java.util.ListTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≥ ≥(2ù
5org.jabref.model.openoffice.style.CitationMarkerEntryTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≥ ≥( 2~
java.util.ArrayList.ArrayList()CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≥> ≥(I˙
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18VARIABLEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¥ ¥("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2b
intTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¥ ¥(ı
ñorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?entry@181.21:181.26VARIABLEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ µ("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.get(i)*entry2~
org.jabref.model.entry.BibEntryTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ µ(2v
java.util.List.get(int)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ% µ((2Í
äorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entriesCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ µ($2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ) µ(*ƒ.
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?e@182.32:182.33VARIABLEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∂  ∂(!"
typeCitationMarkerEntry"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>CitationMarkerEntry <mark class="class-field">e</mark> = makeCitationMarkerEntry(entry, entryDBMap.get(entry)<mark class="modifier">,</mark> uniquefiers[i]<mark class="modifier">,</mark> pageInfo[i]<mark class="modifier">,</mark> isFirstAppearanceOfSource[i])*e2î
5org.jabref.model.openoffice.style.CitationMarkerEntryTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∂ ∂(2£
√org.jabref.logic.openoffice.style.OOBibStyleTestHelper.makeCitationMarkerEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase, java.lang.String, java.lang.String, boolean)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∂$ ∂(;2Ç
#java.util.Map.get(java.lang.Object)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∑ ∑("2ˆ
ñorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?entry@181.21:181.26CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∂< ∂(A2Ì
çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entryDBMapCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∑ ∑(2ˆ
ñorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?entry@181.21:181.26CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∑# ∑((2Ó
éorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!uniquefiersCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∏ ∏(2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∏  ∏(!2Î
ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!pageInfoCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaπ π(2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaπ π(2¸
úorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!isFirstAppearanceOfSourceCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∫ ∫(-2Ú
íorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)?i@180.17:180.18CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∫. ∫(/œ
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!style	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaü2 ü(7"
type
OOBibStyle"
isFinalfalse"%
declarationStringOOBibStyle style*style2ã
,org.jabref.logic.openoffice.style.OOBibStyleTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaü' ü(1»
äorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entries	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java†6 †(="
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2m
java.util.ListTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java†' †(+2á
org.jabref.model.entry.BibEntryTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java†, †(4¯
çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!entryDBMap	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java°B °(L""
typeMap<BibEntry, BibDatabase>"
isFinalfalse":
declarationString%Map<BibEntry, BibDatabase> entryDBMap*
entryDBMap2l
java.util.MapTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java°' °(*2á
org.jabref.model.entry.BibEntryTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java°+ °(32ç
%org.jabref.model.database.BibDatabaseTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java°5 °(@Ÿ
êorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!inParenthesis	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¢/ ¢(<"
typeboolean"
isFinalfalse"H
declarationString3<mark class="modifier">boolean</mark> inParenthesis*inParenthesis2f
booleanTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¢' ¢(.¬
éorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!uniquefiers	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java£0 £(;"
typeString[]"
isFinalfalse")
declarationStringString[] uniquefiers*uniquefiers2q
java.lang.String[]TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java£' £(/Ô
úorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!isFirstAppearanceOfSource	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java§1 §(J"
type	Boolean[]"
isFinalfalse"8
declarationString#Boolean[] isFirstAppearanceOfSource*isFirstAppearanceOfSource2r
java.lang.Boolean[]TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java§' §(0π
ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!pageInfo	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java•0 •(8"
typeString[]"
isFinalfalse"&
declarationStringString[] pageInfo*pageInfo2q
java.lang.String[]TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java•' •(/Ç
åorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)!nonunique	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¶? ¶(H"
typeNonUniqueCitationMarker"
isFinalfalse"6
declarationString!NonUniqueCitationMarker nonunique*	nonunique2ò
9org.jabref.model.openoffice.style.NonUniqueCitationMarkerTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¶' ¶(>ë?
≈org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])METHODU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¬ ¬($"
isFinalfalse"ì
declarationString˝<mark class="modifier"> </mark><mark class="modifier">static </mark>String <mark class="method">getCitationMarker2</mark>(OOBibStyle style<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;BibEntry&gt; entries<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;BibEntry<mark class="modifier"><mark class="modifier">,</mark></mark> BibDatabase&gt; entryDBMap<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> inParenthesis<mark class="modifier"><mark class="modifier">,</mark></mark> String[] uniquefiers<mark class="modifier"><mark class="modifier">,</mark></mark> Boolean[] isFirstAppearanceOfSource<mark class="modifier"><mark class="modifier">,</mark></mark> String[] pageInfo)"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeString*getCitationMarker22‚
Çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java… …(#2´
Àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java…$ …()2≠
Õorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entriesCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java   (2∞
–org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entryDBMapCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÀ À(2≥
”org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!inParenthesisCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÃ Ã(2±
—org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!uniquefiersCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÕ Õ(2ø
ﬂorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!isFirstAppearanceOfSourceCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaŒ Œ()2Æ
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!pageInfoCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaœ œ(2∞
Àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!style	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¬0 ¬(52≤
Õorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entries	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java√4 √(;2µ
–org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entryDBMap	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaƒ@ ƒ(J2∏
”org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!inParenthesis	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≈- ≈(:2∂
—org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!uniquefiers	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∆. ∆(92ƒ
ﬂorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!isFirstAppearanceOfSource	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java«/ «(H2≥
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!pageInfo	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java». »(62v
java.lang.StringRETURN_TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¬ ¬(í
Àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!style	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¬0 ¬(5"
type
OOBibStyle"
isFinalfalse"%
declarationStringOOBibStyle style*style2ã
,org.jabref.logic.openoffice.style.OOBibStyleTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¬% ¬(/ã
Õorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entries	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java√4 √(;"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2m
java.util.ListTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java√% √()2á
org.jabref.model.entry.BibEntryTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java√* √(2ª
–org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entryDBMap	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaƒ@ ƒ(J""
typeMap<BibEntry, BibDatabase>"
isFinalfalse":
declarationString%Map<BibEntry, BibDatabase> entryDBMap*
entryDBMap2l
java.util.MapTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaƒ% ƒ((2á
org.jabref.model.entry.BibEntryTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaƒ) ƒ(12ç
%org.jabref.model.database.BibDatabaseTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaƒ3 ƒ(>ú
”org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!inParenthesis	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≈- ≈(:"
typeboolean"
isFinalfalse"H
declarationString3<mark class="modifier">boolean</mark> inParenthesis*inParenthesis2f
booleanTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≈% ≈(,Ö
—org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!uniquefiers	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∆. ∆(9"
typeString[]"
isFinalfalse")
declarationStringString[] uniquefiers*uniquefiers2q
java.lang.String[]TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∆% ∆(-≤
ﬂorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!isFirstAppearanceOfSource	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java«/ «(H"
type	Boolean[]"
isFinalfalse"8
declarationString#Boolean[] isFirstAppearanceOfSource*isFirstAppearanceOfSource2r
java.lang.Boolean[]TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java«% «(.¸
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!pageInfo	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java». »(6"
typeString[]"
isFinalfalse"&
declarationStringString[] pageInfo*pageInfo2q
java.lang.String[]TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java»% »(-¢?
∆org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])METHODU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java” ”(%"
isFinalfalse"î
declarationString˛<mark class="modifier"> </mark><mark class="modifier">static </mark>String <mark class="method">getCitationMarker2b</mark>(OOBibStyle style<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;BibEntry&gt; entries<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;BibEntry<mark class="modifier"><mark class="modifier">,</mark></mark> BibDatabase&gt; entryDBMap<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> inParenthesis<mark class="modifier"><mark class="modifier">,</mark></mark> String[] uniquefiers<mark class="modifier"><mark class="modifier">,</mark></mark> Boolean[] isFirstAppearanceOfSource<mark class="modifier"><mark class="modifier">,</mark></mark> String[] pageInfo)"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeString*getCitationMarker2b2‚
Çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2ab(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[], org.jabref.model.openoffice.style.NonUniqueCitationMarker)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java⁄ ⁄(#2¨
Ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java⁄$ ⁄()2Æ
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entriesCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java€ €(2±
—org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entryDBMapCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java‹ ‹(2¥
‘org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!inParenthesisCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java› ›(2≤
“org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!uniquefiersCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaﬁ ﬁ(2¿
‡org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!isFirstAppearanceOfSourceCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaﬂ ﬂ()2Ø
œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!pageInfoCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java‡ ‡(2±
Ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!style	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java”1 ”(62≥
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entries	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java‘5 ‘(<2∂
—org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entryDBMap	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java’A ’(K2π
‘org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!inParenthesis	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java÷. ÷(;2∑
“org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!uniquefiers	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java◊/ ◊(:2≈
‡org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!isFirstAppearanceOfSource	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÿ0 ÿ(I2¥
œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!pageInfo	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaŸ/ Ÿ(72v
java.lang.StringRETURN_TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java” ”(ì
Ãorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!style	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java”1 ”(6"
type
OOBibStyle"
isFinalfalse"%
declarationStringOOBibStyle style*style2ã
,org.jabref.logic.openoffice.style.OOBibStyleTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java”& ”(0å
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entries	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java‘5 ‘(<"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2m
java.util.ListTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java‘& ‘(*2á
org.jabref.model.entry.BibEntryTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java‘+ ‘(3º
—org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!entryDBMap	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java’A ’(K""
typeMap<BibEntry, BibDatabase>"
isFinalfalse":
declarationString%Map<BibEntry, BibDatabase> entryDBMap*
entryDBMap2l
java.util.MapTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java’& ’()2á
org.jabref.model.entry.BibEntryTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java’* ’(22ç
%org.jabref.model.database.BibDatabaseTYPE_ARGUMENTU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java’4 ’(?ù
‘org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!inParenthesis	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java÷. ÷(;"
typeboolean"
isFinalfalse"H
declarationString3<mark class="modifier">boolean</mark> inParenthesis*inParenthesis2f
booleanTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java÷& ÷(-Ü
“org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!uniquefiers	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java◊/ ◊(:"
typeString[]"
isFinalfalse")
declarationStringString[] uniquefiers*uniquefiers2q
java.lang.String[]TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java◊& ◊(.≥
‡org.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!isFirstAppearanceOfSource	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÿ0 ÿ(I"
type	Boolean[]"
isFinalfalse"8
declarationString#Boolean[] isFirstAppearanceOfSource*isFirstAppearanceOfSource2r
java.lang.Boolean[]TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÿ& ÿ(/˝
œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.getCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, java.util.List<org.jabref.model.entry.BibEntry>, java.util.Map<org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase>, boolean, java.lang.String[], java.lang.Boolean[], java.lang.String[])!pageInfo	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaŸ/ Ÿ(7"
typeString[]"
isFinalfalse"&
declarationStringString[] pageInfo*pageInfo2q
java.lang.String[]TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaŸ& Ÿ(.÷¡
Çorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)METHODU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaË Ë(-"
isFinalfalse"»
declarationString≤<mark class="modifier"> </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">testGetNumCitationMarkerExtra</mark>(OOBibStyle style)"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typevoid*testGetNumCitationMarkerExtra2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÍ Í(82«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÎ Î(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÏ Ï(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÌ Ì(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÓ Ó(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÒ% Ò(>2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÚ Ú(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÛ Û(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÙ Ù(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaı ı(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¯3 ¯(L2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java˘ ˘(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java˙ ˙(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java˚ ˚(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¸ ¸(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java˝ ˝(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java˛ ˛(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÅ Å(72«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÇ Ç(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÉ É(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÑ Ñ(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaá" á(;2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaà à(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaâ â(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaä ä(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaç" ç(;2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaé é(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaè è(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaê ê(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaì% ì(>2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaî î(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaï ï(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javañ ñ(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaö ö(52«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaõ õ(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaú ú(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaù ù(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java†  †(92«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java° °(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¢ ¢(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java£ £(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¶( ¶(A2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaß ß(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java® ®(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java© ©(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java™ ™(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java´ ´(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¨ ¨(2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≠ ≠(2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≥ ≥()2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¥ ¥( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaµ µ( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∂ ∂( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∑ ∑( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∏ ∏( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaπ π( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∫ ∫( 2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaæ æ()2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaø ø( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¿ ¿( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¡ ¡( 2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≈ ≈()2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java∆ ∆( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java« «( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java» »( 2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÀ À()2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÃ Ã( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÕ Õ( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaŒ Œ( 2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java— —()2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java“ “( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java” ”( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java‘ ‘( 2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java◊ ◊()2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÿ ÿ( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaŸ Ÿ( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java⁄ ⁄( 2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java› ›()2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaﬁ ﬁ( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaﬂ ﬂ( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java‡ ‡( 2§
ƒorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.runGetNumCitationMarker2b(org.jabref.logic.openoffice.style.OOBibStyle, int, org.jabref.model.openoffice.style.CitationMarkerNumericEntry...)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java„ „()2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java‰ ‰( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÂ Â( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÊ Ê( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÁ Á( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaË Ë( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÈ È( 2«
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.numEntry(java.lang.String, int, java.lang.String)CALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÍ Í( 2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÍ9 Í(>2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÒ? Ò(D2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¯M ¯(R2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÅ8 Å(=2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaá< á(A2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaç< ç(A2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaì? ì(D2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaö6 ö(;2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java†: †(?2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java¶B ¶(G2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≥* ≥(/2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaæ* æ(/2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java≈* ≈(/2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaÀ* À(/2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java—* —(/2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java◊* ◊(/2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java›* ›(/2Ë
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!styleCALLU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java„* „(/2Ì
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!style	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaË9 Ë(>2j
voidRETURN_TYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaË Ë(œ
àorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.testGetNumCitationMarkerExtra(org.jabref.logic.openoffice.style.OOBibStyle)!style	PARAMETERU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaË9 Ë(>"
type
OOBibStyle"
isFinalfalse"%
declarationStringOOBibStyle style*style2ã
,org.jabref.logic.openoffice.style.OOBibStyleTYPEU
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaË. Ë(8Ø
Uorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImplCLASSS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java (/"A
package6org.jabref.logic.openoffice.style.OOBibStyleTestHelper"
isFinalfalse"
inner classfalse"

isAbstractfalse"æ
declarationString®<mark class="modifier"> </mark><mark class="modifier">class </mark>CitationMarkerNumericEntryImpl<mark class="modifier"><br>implements </mark>CitationMarkerNumericEntry"
accesspackage_private*CitationMarkerNumericEntryImpl2Ø
 org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java& &(-2 
forg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.getCitationKey()DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java/ /($2≈
aorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.getNumber()DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java4! 4(*2«
corg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.getPageInfo()DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java9  9(+2›
yorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?UNRESOLVED_ENTRY_NUMBER@32.32:32.55DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java    (72—
morg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?citationKey@34.29:34.40DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java" "((2…
eorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?num@35.40:35.43DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java#( #(+2Œ
jorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?pageInfo@36.39:36.47DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java$' $(/2õ
<org.jabref.model.openoffice.style.CitationMarkerNumericEntryEXTENDS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java; (U…!
 org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)CONSTRUCTORS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java& &(-"…
declarationString≥<mark class="modifier">public </mark><mark class="method">CitationMarkerNumericEntryImpl</mark>(String citationKey<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> num<mark class="modifier"><mark class="modifier">,</mark></mark> Optional&lt;OOText&gt; pageInfo)*CitationMarkerNumericEntryImpl2w
java.util.Optional.empty()CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java) )($2u
java.util.Optional.of(T)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java* *(!2ÿ
{org.jabref.model.openoffice.style.PageInfo.normalizePageInfo(java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java+% +(62¥
÷org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!citationKeyCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java' '(*2¨
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!numCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java( ((2÷
yorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?UNRESOLVED_ENTRY_NUMBER@32.32:32.55CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java( ((52¨
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!numCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java*" *(%2±
”org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!pageInfoCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java+7 +(?2 
morg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?citationKey@34.29:34.40CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java' '(2¬
eorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?num@35.40:35.43CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java( ((2«
jorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?pageInfo@36.39:36.47CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java+ +(2π
÷org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!citationKey	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&5 &(@2±
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!num	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&F &(I2∂
”org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!pageInfo	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&\ &(d2π
Uorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImplRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java& &(-Ä
÷org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!citationKey	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&5 &(@"
typeString"
isFinalfalse"'
declarationStringString citationKey*citationKey2m
java.lang.StringTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&. &(4Û
Œorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!num	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&F &(I"
typeint"
isFinalfalse":
declarationString%<mark class="modifier">int</mark> num*num2`
intTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&B &(Eü
”org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.CitationMarkerNumericEntryImpl(java.lang.String, int, java.util.Optional<org.jabref.model.openoffice.ootext.OOText>)!pageInfo	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&\ &(d"
typeOptional<OOText>"
isFinalfalse".
declarationStringOptional<OOText> pageInfo*pageInfo2o
java.util.OptionalTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&K &(S2è
)org.jabref.model.openoffice.ootext.OOTextTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java&T &(Zƒ
forg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.getCitationKey()METHODS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java/ /($"
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getCitationKey</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getCitationKey2 
morg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?citationKey@34.29:34.40CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java0 0(2Æ
Morg.jabref.model.openoffice.style.CitationMarkerNumericEntry.getCitationKey()OVERRIDES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java/ /($2t
java.lang.StringRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java/ /(∆
aorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.getNumber()METHODS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java4! 4(*"
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;Integer&gt; <mark class="method">getNumber</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<Integer>*	getNumber2¬
eorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?num@35.40:35.43CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java5 5(2©
Horg.jabref.model.openoffice.style.CitationMarkerNumericEntry.getNumber()OVERRIDES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java4! 4(*2v
java.util.OptionalRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java4 4(2~
java.lang.IntegerRETURN_TYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java4 4(Í
corg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl.getPageInfo()METHODS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java9  9(+"
isFinalfalse"©
declarationStringì<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;OOText&gt; <mark class="method">getPageInfo</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<OOText>*getPageInfo2«
jorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?pageInfo@36.39:36.47CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java: :(2´
Jorg.jabref.model.openoffice.style.CitationMarkerNumericEntry.getPageInfo()OVERRIDES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java9  9(+2v
java.util.OptionalRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java9 9(2ñ
)org.jabref.model.openoffice.ootext.OOTextRETURN_TYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java9 9(˙
yorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?UNRESOLVED_ENTRY_NUMBER@32.32:32.55VALUES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java    (7"
isFinaltrue"
typeint"„
declarationStringÕ<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">UNRESOLVED_ENTRY_NUMBER</mark> = 0;"
isStatictrue"
accesspublic*UNRESOLVED_ENTRY_NUMBER2`
intTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java   (£
morg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?citationKey@34.29:34.40VALUES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java" "(("
isFinaltrue"
typeString"í
declarationString}<mark class="modifier">private </mark><mark class="modifier">final </mark>String <mark class="class-field">citationKey</mark>"
isStaticfalse"
accessprivate*citationKey2m
java.lang.StringTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java" "(ù
eorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?num@35.40:35.43VALUES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java#( #(+"
isFinaltrue"
typeOptional<Integer>"ñ
declarationStringÄ<mark class="modifier">private </mark><mark class="modifier">final </mark>Optional<Integer> <mark class="class-field">num</mark>"
isStaticfalse"
accessprivate*num2o
java.util.OptionalTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java# #(2w
java.lang.IntegerTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java# #(&√
jorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericEntryImpl?pageInfo@36.39:36.47VALUES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java$' $(/"
isFinaltrue"
typeOptional<OOText>"ö
declarationStringÑ<mark class="modifier">private </mark><mark class="modifier">final </mark>Optional<OOText> <mark class="class-field">pageInfo</mark>"
isStaticfalse"
accessprivate*pageInfo2o
java.util.OptionalTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java$ $(2è
)org.jabref.model.openoffice.ootext.OOTextTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java$ $(%≥
Xorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImplCLASSS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java> >(2"A
package6org.jabref.logic.openoffice.style.OOBibStyleTestHelper"
isFinalfalse"
inner classfalse"

isAbstractfalse"ƒ
declarationStringÆ<mark class="modifier"> </mark><mark class="modifier">class </mark>CitationMarkerNumericBibEntryImpl<mark class="modifier"><br>implements </mark>CitationMarkerNumericBibEntry"
accesspackage_private*!CitationMarkerNumericBibEntryImpl2ò
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaB B(02Õ
iorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.getCitationKey()DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaH H($2»
dorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.getNumber()DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaM! M(*2Ã
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl?key@63.15:63.18DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java? ?(2œ
korg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl?number@64.26:64.32DECLARATIONS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java@ @( 2û
?org.jabref.model.openoffice.style.CitationMarkerNumericBibEntryEXTENDS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java>> >([‡
≥org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)CONSTRUCTORS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaB B(0"‡
declarationString <mark class="modifier">public </mark><mark class="method">CitationMarkerNumericBibEntryImpl</mark>(String key<mark class="modifier"><mark class="modifier">,</mark></mark> Optional&lt;Integer&gt; number)*!CitationMarkerNumericBibEntryImpl2ï
∑org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)!keyCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaC C(2ò
∫org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)!numberCALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaD D( 2≈
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl?key@63.15:63.18CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaC C(2»
korg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl?number@64.26:64.32CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaD D(2ö
∑org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)!key	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaB8 B(;2ù
∫org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)!number	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaBO B(U2º
Xorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImplRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaB B(0—
∑org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)!key	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaB8 B(;"
typeString"
isFinalfalse"
declarationString
String key*key2m
java.lang.StringTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaB1 B(7Î
∫org.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.CitationMarkerNumericBibEntryImpl(java.lang.String, java.util.Optional<java.lang.Integer>)!number	PARAMETERS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaBO B(U"
typeOptional<Integer>"
isFinalfalse"-
declarationStringOptional<Integer> number*number2o
java.util.OptionalTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaB= B(E2w
java.lang.IntegerTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaBF B(M≈
iorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.getCitationKey()METHODS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaH H($"
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getCitationKey</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getCitationKey2≈
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl?key@63.15:63.18CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaI I(2±
Porg.jabref.model.openoffice.style.CitationMarkerNumericBibEntry.getCitationKey()OVERRIDES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaH H($2t
java.lang.StringRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaH H(“
dorg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl.getNumber()METHODS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaM! M(*"
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;Integer&gt; <mark class="method">getNumber</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<Integer>*	getNumber2»
korg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl?number@64.26:64.32CALLS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaN N(2¨
Korg.jabref.model.openoffice.style.CitationMarkerNumericBibEntry.getNumber()OVERRIDES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaM! M(*2v
java.util.OptionalRETURN_TYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaM M(2~
java.lang.IntegerRETURN_TYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.javaM M(Ó
horg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl?key@63.15:63.18VARIABLES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java? ?("
isFinalfalse"
typeString"_
declarationStringJ<mark class="modifier"> </mark>String <mark class="class-field">key</mark>"
isStaticfalse"
accesspackage_private*key2m
java.lang.StringTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java? ?(à
korg.jabref.logic.openoffice.style.OOBibStyleTestHelper.CitationMarkerNumericBibEntryImpl?number@64.26:64.32VARIABLES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java@ @( "
isFinalfalse"
typeOptional<Integer>"m
declarationStringX<mark class="modifier"> </mark>Optional<Integer> <mark class="class-field">number</mark>"
isStaticfalse"
accesspackage_private*number2o
java.util.OptionalTYPES
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java@ @(2w
java.lang.IntegerTYPE_ARGUMENTS
Isrc\test\java\org\jabref\logic\openoffice\style\OOBibStyleTestHelper.java@ @(