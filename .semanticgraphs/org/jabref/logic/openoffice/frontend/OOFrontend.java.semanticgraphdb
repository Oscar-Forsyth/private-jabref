
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaµ3
/org.jabref.logic.openoffice.frontend.OOFrontendCLASSL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java+ +("/
package$org.jabref.logic.openoffice.frontend"
isFinalfalse"
inner classfalse"

isAbstractfalse"h
declarationStringS<mark class="modifier">public </mark><mark class="modifier">class </mark>OOFrontend"
accesspublic*
OOFrontend2∏
[org.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java0 0(2õ
>org.jabref.logic.openoffice.frontend.OOFrontend.getDataModel()DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java@ @(#2∫
]org.jabref.logic.openoffice.frontend.OOFrontend.healthReport(com.sun.star.text.XTextDocument)DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaD D((2û
¿org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaK K("2Ã
oorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javae/ e(D2ô
πorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaû  û(?2·
Åorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥ ¥(+2ç
≠org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java   (,2ı
ïorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ Í(#2Ü
¶org.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙ Ù($2Ó
éorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑ  Ñ(,2ˇ
üorg.jabref.logic.openoffice.frontend.OOFrontend.getFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã ã(42Å
°org.jabref.logic.openoffice.frontend.OOFrontend.cleanFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javañ ñ(/2æ
_org.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°7 °(E2¬
corg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥7 ¥(I2¿
aorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆7 ∆(G2¡
·org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄ ⁄(2ÿ
¯org.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙ ˙((2‘
Ùorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaô ô( 2œ
Ôorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ) π(;2¬
corg.jabref.logic.openoffice.frontend.OOFrontend.getCitationEntries(com.sun.star.text.XTextDocument)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„ „(12Ä
†org.jabref.logic.openoffice.frontend.OOFrontend.applyCitationEntries(com.sun.star.text.XTextDocument, java.util.List<org.jabref.model.openoffice.CitationEntry>)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ Í($2Ç
¢org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛ Û(!2†
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java- -("2ß
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java.  .(.Ê
[org.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)CONSTRUCTORL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java0 0("ü
declarationStringâ<mark class="modifier">public </mark><mark class="method">OOFrontend</mark>(XTextDocument doc)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException*
OOFrontend2¿
jorg.jabref.logic.openoffice.backend.Backend52.getJabRefReferenceMarkNames(com.sun.star.text.XTextDocument)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java97 9(R2ó
¿org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java< <(.2è
9org.jabref.logic.openoffice.backend.Backend52.Backend52()CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java6 6($2â
≤org.jabref.model.openoffice.style.CitationGroups.CitationGroups(java.util.Map<org.jabref.model.openoffice.style.CitationGroupId, org.jabref.model.openoffice.style.CitationGroup>)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java=" =(02µ
_org.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)!docCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java9S 9(V2µ
_org.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)!docCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java<= <(@2–
zorg.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)?citationGroupNames@57.21:57.39CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java<B <(T2Ã
vorg.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)?citationGroups@59.44:59.58CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java=1 =(?2ô
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java6 6(2ô
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java9/ 9(62ô
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java<4 <(;2†
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java= =(2∫
_org.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)!doc	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java0$ 0('2◊
zorg.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)?citationGroupNames@57.21:57.39DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java9 9('2”
vorg.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)?citationGroups@59.44:59.58DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java;, ;(:2å
/org.jabref.logic.openoffice.frontend.OOFrontendRETURN_TYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java2 2(ƒ	
zorg.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)?citationGroupNames@57.21:57.39VARIABLEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java9 9('"
typeList<String>"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>List<String> <mark class="class-field">citationGroupNames</mark> = <mark class="modifier">this</mark>.backend.getJabRefReferenceMarkNames(doc)*citationGroupNames2d
java.util.ListTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java9 9(2o
java.lang.StringTYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java9 9(2¿
jorg.jabref.logic.openoffice.backend.Backend52.getJabRefReferenceMarkNames(com.sun.star.text.XTextDocument)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java97 9(R2µ
_org.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)!docCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java9S 9(V2ô
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java9/ 9(6⁄
vorg.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)?citationGroups@59.44:59.58VARIABLEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java;, ;(:"+
type#Map<CitationGroupId, CitationGroup>"
isFinalfalse"Ó
declarationStringÿ<mark class="modifier"> </mark>Map<CitationGroupId, CitationGroup> <mark class="class-field">citationGroups</mark> = readCitationGroupsFromDocument(<mark class="modifier">this</mark>.backend, doc, citationGroupNames)*citationGroups2c
java.util.MapTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java; ;(2ê
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java; ;(2é
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java; ;(*2ó
¿org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java< <(.2µ
_org.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)!docCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java<= <(@2–
zorg.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)?citationGroupNames@57.21:57.39CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java<B <(T2ô
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java<4 <(;á
_org.jabref.logic.openoffice.frontend.OOFrontend.OOFrontend(com.sun.star.text.XTextDocument)!doc	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java0$ 0('"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2u
com.sun.star.text.XTextDocumentTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java0 0(#†
>org.jabref.logic.openoffice.frontend.OOFrontend.getDataModel()METHODL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java@ @(#"
isFinalfalse"p
declarationString[<mark class="modifier">public </mark>OODataModel <mark class="method">getDataModel</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOODataModel*getDataModel2ô
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaA A(2ä
-org.jabref.model.openoffice.style.OODataModelRETURN_TYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java@ @(¬
]org.jabref.logic.openoffice.frontend.OOFrontend.healthReport(com.sun.star.text.XTextDocument)METHODL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaD D(("
isFinalfalse"‰
declarationStringŒ<mark class="modifier">public </mark>Optional&lt;String&gt; <mark class="method">healthReport</mark>(XTextDocument doc)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<String>*healthReport2±
[org.jabref.logic.openoffice.backend.Backend52.healthReport(com.sun.star.text.XTextDocument)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaG G(#2ô
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaG G(2∑
aorg.jabref.logic.openoffice.frontend.OOFrontend.healthReport(com.sun.star.text.XTextDocument)!docCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaG$ G('2º
aorg.jabref.logic.openoffice.frontend.OOFrontend.healthReport(com.sun.star.text.XTextDocument)!doc	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaD7 D(:2o
java.util.OptionalRETURN_TYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaD D(2v
java.lang.StringRETURN_TYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaD D(â
aorg.jabref.logic.openoffice.frontend.OOFrontend.healthReport(com.sun.star.text.XTextDocument)!doc	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaD7 D(:"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2u
com.sun.star.text.XTextDocumentTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaD) D(6˚/
¿org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)METHODL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaK K(""
isFinalfalse"
declarationString⁄<mark class="modifier">private </mark><mark class="modifier">static </mark>Map&lt;CitationGroupId<mark class="modifier"><mark class="modifier">,</mark></mark>CitationGroup&gt; <mark class="method">readCitationGroupsFromDocument</mark>(Backend52 backend<mark class="modifier"><mark class="modifier">,</mark></mark> XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; citationGroupNames)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>WrappedTargetException<mark class="modifier"><mark class="modifier">,</mark></mark> NoDocumentException"
isStatictrue"
accessprivate"

isAbstractfalse"+
type#Map<CitationGroupId, CitationGroup>*readCitationGroupsFromDocument2‹
Öorg.jabref.logic.openoffice.backend.Backend52.readCitationGroupFromDocumentOrThrow(com.sun.star.text.XTextDocument, java.lang.String)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaT* T(N2m
java.util.Map.put(K, V)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaU U(2q
java.util.HashMap.HashMap()CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaRA R(J2™
”org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!citationGroupNamesCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaS S(-2ü
»org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!backendCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaT" T()2õ
ƒorg.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!docCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaTO T(R2®
—org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?name@83.20:83.24CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaTT T(X2≤
€org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?citationGroups@82.44:82.58CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaU U(2©
“org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?group@84.26:84.31CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaU U($2©
“org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?group@84.26:84.31CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaU. U(32≤
€org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?citationGroups@82.44:82.58CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaW W(2§
»org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!backend	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaK- K(42†
ƒorg.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!doc	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaL1 L(42Ø
”org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!citationGroupNames	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaM0 M(B2π
€org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?citationGroups@82.44:82.58DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaR, R(:2Ø
—org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?name@83.20:83.24DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaS S(2∞
“org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?group@84.26:84.31DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaT T(2j
java.util.MapRETURN_TYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaJ J(2ó
1org.jabref.model.openoffice.style.CitationGroupIdRETURN_TYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaJ J(&2ï
/org.jabref.model.openoffice.style.CitationGroupRETURN_TYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaJ( J(5û
€org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?citationGroups@82.44:82.58VARIABLEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaR, R(:"+
type#Map<CitationGroupId, CitationGroup>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Map<CitationGroupId, CitationGroup> <mark class="class-field">citationGroups</mark> = new HashMap<>()*citationGroups2c
java.util.MapTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaR R(2ê
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaR R(2é
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaR R(*2q
java.util.HashMap.HashMap()CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaRA R(Jû
—org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?name@83.20:83.24VARIABLEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaS S("
typeString"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>String <mark class="class-field">name</mark>*name2f
java.lang.StringTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaS S(’
“org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?group@84.26:84.31VARIABLEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaT T("
typeCitationGroup"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>CitationGroup <mark class="class-field">group</mark> = backend.readCitationGroupFromDocumentOrThrow(doc, name)*group2Ö
/org.jabref.model.openoffice.style.CitationGroupTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaT T(2‹
Öorg.jabref.logic.openoffice.backend.Backend52.readCitationGroupFromDocumentOrThrow(com.sun.star.text.XTextDocument, java.lang.String)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaT* T(N2ü
»org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!backendCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaT" T()2õ
ƒorg.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!docCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaTO T(R2®
—org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)?name@83.20:83.24CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaTT T(XÄ
»org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!backend	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaK- K(4"
type	Backend52"
isFinalfalse"&
declarationStringBackend52 backend*backend2É
-org.jabref.logic.openoffice.backend.Backend52TYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaK# K(,Ì
ƒorg.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!doc	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaL1 L(4"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2u
com.sun.star.text.XTextDocumentTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaL# L(0¯
”org.jabref.logic.openoffice.frontend.OOFrontend.readCitationGroupsFromDocument(org.jabref.logic.openoffice.backend.Backend52, com.sun.star.text.XTextDocument, java.util.List<java.lang.String>)!citationGroupNames	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaM0 M(B"
typeList<String>"
isFinalfalse"4
declarationStringList<String> citationGroupNames*citationGroupNames2d
java.util.ListTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaM# M('2o
java.lang.StringTYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaM( M(.ÄO
oorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)METHODL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javae/ e(D"
isFinalfalse"Ÿ
declarationString√<mark class="modifier">private </mark>List&lt;RangeSortable&lt;CitationGroup&gt;&gt; <mark class="method">createVisualSortInput</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> mapFootnotesToFootnoteMarks)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException"
isStaticfalse"
accessprivate"

isAbstractfalse"*
type"List<RangeSortable<CitationGroup>>*createVisualSortInput2£
Morg.jabref.model.openoffice.style.CitationGroups.getCitationGroupsUnordered()CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javal2 l(L2û
Hjava.util.Optional.orElseThrow(java.util.function.Supplier<? extends X>)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javao o( 2Â
éorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javan n(!2k
java.util.List.add(E)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javap p(2±
Yorg.jabref.model.openoffice.rangesort.RangeSort.partitionAndSortRanges(java.util.List<V>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÜ Ü(02ß
Oorg.jabref.model.openoffice.rangesort.RangeSort.RangePartitions.getPartitions()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaäH ä(U2§
Lorg.jabref.model.openoffice.rangesort.RangeSortEntry.setIndexInPosition(int)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaç ç(+2∑
_org.jabref.model.openoffice.uno.UnoTextRange.getFootnoteMarkRange(com.sun.star.text.XTextRange)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaê) ê(=2ó
?org.jabref.model.openoffice.rangesort.RangeSortEntry.getRange()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaêG ê(O2ú
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaí& í(/2m
java.util.List.add(E)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaî î(2u
java.util.ArrayList.ArrayList()CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javak< k(G2ø
iorg.jabref.model.openoffice.rangesort.RangeSortEntry.RangeSortEntry(com.sun.star.text.XTextRange, int, T)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javap p(.2w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaâ9 â(D2ò
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaó ó(2†
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javal# l(12…
sorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)!docCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javan" n(%2⁄
Éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?group@108.27:108.32CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javan' n(,2ﬁ
áorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortables@107.44:107.53CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javap p(2⁄
Éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?range@109.23:109.28CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javap/ p(42⁄
Éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?group@108.27:108.32CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javap9 p(>2‡
áorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortables@107.44:107.53CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÜ1 Ü(:2·
àorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?partitions@133.65:133.75CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaä= ä(G2‡
áorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?partition@138.49:138.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaå: å(C2ﬂ
Üorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortable@140.47:140.55CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaç ç(2Á
éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?indexInPartition@139.16:139.32CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaç, ç(<2‰
ãorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)!mapFootnotesToFootnoteMarksCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaé é(/2ﬂ
Üorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortable@140.47:140.55CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaê> ê(F2Ë
èorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?footnoteMarkRange@143.41:143.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaí í(%2›
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?result@137.44:137.50CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaî î(2ﬂ
Üorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortable@140.47:140.55CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaî î(#2›
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?result@137.44:137.50CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaó ó(%2≥
[org.jabref.model.openoffice.rangesort.RangeSortEntry.setRange(com.sun.star.text.XTextRange)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaí0 í(B2Œ
sorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)!doc	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaeS e(V2Á
ãorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)!mapFootnotesToFootnoteMarks	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javafM f(h2Â
áorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortables@107.44:107.53DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javak, k(52·
Éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?group@108.27:108.32DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javal l( 2·
Éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?range@109.23:109.28DECLARATIONL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javam m(2Ë
àorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?partitions@133.65:133.75DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÖA Ö(K2‰
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?result@137.44:137.50DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaâ, â(22Á
áorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?partition@138.49:138.58DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaä1 ä(:2Ó
éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?indexInPartition@139.16:139.32DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã ã( 2Ê
Üorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortable@140.47:140.55DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaå/ å(72Ô
èorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?footnoteMarkRange@143.41:143.58DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaè) è(:2k
java.util.ListRETURN_TYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javae e(2ô
3org.jabref.model.openoffice.rangesort.RangeSortableRETURN_TYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javae e(2ï
/org.jabref.model.openoffice.style.CitationGroupRETURN_TYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javae e(, 
áorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortables@107.44:107.53VARIABLEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javak, k(5"+
type#List<RangeSortEntry<CitationGroup>>"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>List<RangeSortEntry<CitationGroup>> <mark class="class-field">sortables</mark> = new ArrayList<>()*	sortables2d
java.util.ListTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javak k(2ì
4org.jabref.model.openoffice.rangesort.RangeSortEntryTYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javak k(2é
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javak k()2u
java.util.ArrayList.ArrayList()CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javak< k(GÄ
Éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?group@108.27:108.32VARIABLEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javal l( "
typeCitationGroup"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>CitationGroup <mark class="class-field">group</mark>*group2Ö
/org.jabref.model.openoffice.style.CitationGroupTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javal l(Ä
Éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?range@109.23:109.28VARIABLEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javam m("
type
XTextRange"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>XTextRange <mark class="class-field">range</mark> = <mark class="modifier">this</mark>.getMarkRange(doc, group).orElseThrow(IllegalStateException::new)*range2r
com.sun.star.text.XTextRangeTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javam m(2û
Hjava.util.Optional.orElseThrow(java.util.function.Supplier<? extends X>)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javao o( 2Â
éorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javan n(!2…
sorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)!docCALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javan" n(%2⁄
Éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?group@108.27:108.32CALLL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javan' n(,Î

àorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?partitions@133.65:133.75VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÖA Ö(K"@
type8RangeSort.RangePartitions<RangeSortEntry<CitationGroup>>"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>RangeSort.RangePartitions<RangeSortEntry<CitationGroup>> <mark class="class-field">partitions</mark> = RangeSort.partitionAndSortRanges(sortables)*
partitions2ó
?org.jabref.model.openoffice.rangesort.RangeSort.RangePartitionsTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÖ Ö(!2ï
4org.jabref.model.openoffice.rangesort.RangeSortEntryTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÖ Ö(2ê
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÖ" Ö(02±
Yorg.jabref.model.openoffice.rangesort.RangeSort.partitionAndSortRanges(java.util.List<V>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÜ Ü(02‡
áorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortables@107.44:107.53CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÜ1 Ü(: 
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?result@137.44:137.50VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaâ, â(2"+
type#List<RangeSortEntry<CitationGroup>>"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>List<RangeSortEntry<CitationGroup>> <mark class="class-field">result</mark> = new ArrayList<>()*result2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaâ â(2ï
4org.jabref.model.openoffice.rangesort.RangeSortEntryTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaâ â(2ê
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaâ â()2w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaâ9 â(D∆
áorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?partition@138.49:138.58VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaä1 ä(:"+
type#List<RangeSortEntry<CitationGroup>>"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>List<RangeSortEntry<CitationGroup>> <mark class="class-field">partition</mark>*	partition2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaä ä(2ï
4org.jabref.model.openoffice.rangesort.RangeSortEntryTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaä ä( 2ê
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaä! ä(.á
éorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?indexInPartition@139.16:139.32VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã ã( "
typeint"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">indexInPartition</mark> = 0*indexInPartition2[
intTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã ã(≈
Üorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortable@140.47:140.55VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaå/ å(7"%
typeRangeSortEntry<CitationGroup>"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>RangeSortEntry<CitationGroup> <mark class="class-field">sortable</mark>*sortable2å
4org.jabref.model.openoffice.rangesort.RangeSortEntryTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaå å(2ê
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaå  å(-à

èorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?footnoteMarkRange@143.41:143.58VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaè) è(:"
typeOptional<XTextRange>"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>Optional<XTextRange> <mark class="class-field">footnoteMarkRange</mark> = UnoTextRange.getFootnoteMarkRange(sortable.getRange())*footnoteMarkRange2j
java.util.OptionalTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaè è(2}
com.sun.star.text.XTextRangeTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaè è('2∑
_org.jabref.model.openoffice.uno.UnoTextRange.getFootnoteMarkRange(com.sun.star.text.XTextRange)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaê) ê(=2ó
?org.jabref.model.openoffice.rangesort.RangeSortEntry.getRange()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaêG ê(O2ﬂ
Üorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)?sortable@140.47:140.55CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaê> ê(Fõ
sorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)!doc	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaeS e(V"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2u
com.sun.star.text.XTextDocumentTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaeE e(Rﬁ
ãorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)!mapFootnotesToFootnoteMarks	PARAMETERL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javafM f(h"
typeboolean"
isFinalfalse"V
declarationStringA<mark class="modifier">boolean</mark> mapFootnotesToFootnoteMarks*mapFootnotesToFootnoteMarks2]
booleanTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javafE f(L˙,
πorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaû  û(?"
isFinalfalse"¨
declarationStringñ<mark class="modifier">private </mark>List&lt;CitationGroup&gt; <mark class="method">getVisuallySortedCitationGroups</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> mapFootnotesToFootnoteMarks<mark class="modifier"><mark class="modifier">,</mark></mark> FunctionalTextViewCursor fcursor)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>WrappedTargetException<mark class="modifier"><mark class="modifier">,</mark></mark> NoDocumentException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeList<CitationGroup>*getVisuallySortedCitationGroups2«
oorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java•7 •(L2¬
Èorg.jabref.model.openoffice.rangesort.RangeSortVisual.visualSort(java.util.List<org.jabref.model.openoffice.rangesort.RangeSortable<T>>, com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaßD ß(N2§
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´ ´(2®
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™ ™(2u
java.util.Collection.stream()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java© ©(2|
$java.util.stream.Collectors.toList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´* ´(02ñ
Ωorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java•M •(P2Æ
’org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!mapFootnotesToFootnoteMarksCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java•R •(m2™
—org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortables@165.43:165.52CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaßO ß(X2ñ
Ωorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaßZ ß(]2ö
¡org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!fcursorCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß_ ß(f2ß
Œorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sorted@167.43:167.49CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java© ©(2ò
@org.jabref.model.openoffice.rangesort.RangeSortable.getContent()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™ ™(42õ
Ωorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaûN û(Q2≥
’org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!mapFootnotesToFootnoteMarks	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaüH ü(c2ü
¡org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!fcursor	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†Y †(`2±
—org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortables@165.43:165.52DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java•+ •(42Æ
Œorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sorted@167.43:167.49DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß+ ß(12m
java.util.ListRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaû û(2ó
/org.jabref.model.openoffice.style.CitationGroupRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaû û(‹
—org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortables@165.43:165.52VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java•+ •(4"*
type"List<RangeSortable<CitationGroup>>"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>List<RangeSortable<CitationGroup>> <mark class="class-field">sortables</mark> = createVisualSortInput(doc, mapFootnotesToFootnoteMarks)*	sortables2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java• •(2î
3org.jabref.model.openoffice.rangesort.RangeSortableTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java• •(2ê
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java• •((2«
oorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java•7 •(L2ñ
Ωorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java•M •(P2Æ
’org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!mapFootnotesToFootnoteMarksCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java•R •(m„
Œorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sorted@167.43:167.49VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß+ ß(1"*
type"List<RangeSortable<CitationGroup>>"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>List<RangeSortable<CitationGroup>> <mark class="class-field">sorted</mark> = RangeSortVisual.visualSort(sortables, doc, fcursor)*sorted2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß ß(2î
3org.jabref.model.openoffice.rangesort.RangeSortableTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß ß(2ê
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß ß((2¬
Èorg.jabref.model.openoffice.rangesort.RangeSortVisual.visualSort(java.util.List<org.jabref.model.openoffice.rangesort.RangeSortable<T>>, com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaßD ß(N2™
—org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortables@165.43:165.52CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaßO ß(X2ñ
Ωorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaßZ ß(]2ö
¡org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!fcursorCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß_ ß(fÍ
Ωorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaûN û(Q"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaû@ û(M¨
’org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!mapFootnotesToFootnoteMarks	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaüH ü(c"
typeboolean"
isFinalfalse"V
declarationStringA<mark class="modifier">boolean</mark> mapFootnotesToFootnoteMarks*mapFootnotesToFootnoteMarks2_
booleanTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaü@ ü(G¨
¡org.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!fcursor	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†Y †(`" 
typeFunctionalTextViewCursor"
isFinalfalse"5
declarationString FunctionalTextViewCursor fcursor*fcursor2ñ
>org.jabref.model.openoffice.rangesort.FunctionalTextViewCursorTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†@ †(X™
Åorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥ ¥(+"
isFinalfalse"’
declarationStringø<mark class="modifier">public </mark>List&lt;CitationGroup&gt; <mark class="method">getCitationGroupsSortedWithinPartitions</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> mapFootnotesToFootnoteMarks)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<CitationGroup>*'getCitationGroupsSortedWithinPartitions2«
oorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª ª(%2§
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaΩA Ω(H2®
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaΩ" Ω(%2u
java.util.Collection.stream()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaΩ Ω(2|
$java.util.stream.Collectors.toList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaΩT Ω(Z2ﬁ
Öorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª& ª()2ˆ
ùorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)!mapFootnotesToFootnoteMarksCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª+ ª(F2Ú
ôorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)?sortables@186.43:186.52CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaΩ Ω(2ò
@org.jabref.model.openoffice.rangesort.RangeSortable.getContent()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaΩ& Ω(?2„
Öorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥: ¥(=2˚
ùorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)!mapFootnotesToFootnoteMarks	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥G ¥(b2˘
ôorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)?sortables@186.43:186.52DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫+ ∫(42m
java.util.ListRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java≥ ≥(2ó
/org.jabref.model.openoffice.style.CitationGroupRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java≥ ≥(¥
ôorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)?sortables@186.43:186.52VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫+ ∫(4"*
type"List<RangeSortable<CitationGroup>>"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>List<RangeSortable<CitationGroup>> <mark class="class-field">sortables</mark> = createVisualSortInput(doc, mapFootnotesToFootnoteMarks)*	sortables2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫ ∫(2î
3org.jabref.model.openoffice.rangesort.RangeSortableTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫ ∫(2ê
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫ ∫((2«
oorg.jabref.logic.openoffice.frontend.OOFrontend.createVisualSortInput(com.sun.star.text.XTextDocument, boolean)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª ª(%2ﬁ
Öorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª& ª()2ˆ
ùorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)!mapFootnotesToFootnoteMarksCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª+ ª(F≤
Öorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥: ¥(="
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥, ¥(9Ù
ùorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationGroupsSortedWithinPartitions(com.sun.star.text.XTextDocument, boolean)!mapFootnotesToFootnoteMarks	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥G ¥(b"
typeboolean"
isFinalfalse"V
declarationStringA<mark class="modifier">boolean</mark> mapFootnotesToFootnoteMarks*mapFootnotesToFootnoteMarks2_
booleanTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥? ¥(F¿R
≠org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java   (,"
isFinalfalse"‚
declarationStringÃ<mark class="modifier">public </mark>CitationGroup <mark class="method">createCitationGroup</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; citationKeys<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;Optional&lt;OOText&gt;&gt; pageInfos<mark class="modifier"><mark class="modifier">,</mark></mark> CitationType citationType<mark class="modifier"><mark class="modifier">,</mark></mark> XTextCursor position<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> insertSpaceAfter)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>CreationException<mark class="modifier"><mark class="modifier">,</mark></mark> NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException<mark class="modifier"><mark class="modifier">,</mark></mark> NotRemoveableException<mark class="modifier"><mark class="modifier">,</mark></mark> PropertyVetoException<mark class="modifier"><mark class="modifier">,</mark></mark> IllegalTypeException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeCitationGroup*createCitationGroup2{
#java.util.Objects.requireNonNull(T)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÿ ÿ(2m
java.util.List.size()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŸ Ÿ(2m
java.util.List.size()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŸ- Ÿ(12Ñ
´org.jabref.logic.openoffice.backend.Backend52.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‹& ‹(92“
zorg.jabref.model.openoffice.style.CitationGroups.afterCreateCitationGroup(org.jabref.model.openoffice.style.CitationGroup)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„ „(42•
Mjava.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄ ⁄(.2ê
∑org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!pageInfosCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÿ ÿ((2ê
∑org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!pageInfosCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŸ Ÿ(2ì
∫org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!citationKeysCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŸ  Ÿ(,2õ
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‹ ‹(%2ä
±org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‹: ‹(=2ì
∫org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!citationKeysCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java› ›(2ê
∑org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!pageInfosCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬁ ﬁ(2ì
∫org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!citationTypeCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬂ ﬂ(2è
∂org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!positionCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‡ ‡(2ó
æorg.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!insertSpaceAfterCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java· ·( 2ö
¡org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)?group@220.22:220.27CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„5 „(:2ö
¡org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)?group@220.22:220.27CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‰ ‰(2¢
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„ „(2è
±org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java ;  (>2ò
∫org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!citationKeys	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÀ: À(F2ï
∑org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!pageInfos	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃD Ã(M2ò
∫org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!citationType	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÕ: Õ(F2î
∂org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!position	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŒ9 Œ(A2ú
æorg.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!insertSpaceAfter	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaœ5 œ(E2°
¡org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)?group@220.22:220.27DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‹ ‹(2é
/org.jabref.model.openoffice.style.CitationGroupRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java   («
¡org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)?group@220.22:220.27VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‹ ‹("
typeCitationGroup"
isFinalfalse"œ
declarationStringπ<mark class="modifier"> </mark>CitationGroup <mark class="class-field">group</mark> = backend.createCitationGroup(doc, citationKeys, pageInfos, citationType, position, insertSpaceAfter)*group2á
/org.jabref.model.openoffice.style.CitationGroupTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‹ ‹(2Ñ
´org.jabref.logic.openoffice.backend.Backend52.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‹& ‹(92õ
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‹ ‹(%2ä
±org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‹: ‹(=2ì
∫org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!citationKeysCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java› ›(2ê
∑org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!pageInfosCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬁ ﬁ(2ì
∫org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!citationTypeCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬂ ﬂ(2è
∂org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!positionCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‡ ‡(2ó
æorg.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!insertSpaceAfterCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java· ·( ﬁ
±org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java ;  (>"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java -  (:Ÿ
∫org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!citationKeys	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÀ: À(F"
typeList<String>"
isFinalfalse".
declarationStringList<String> citationKeys*citationKeys2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÀ- À(12q
java.lang.StringTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÀ2 À(8Û
∑org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!pageInfos	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃD Ã(M"
typeList<Optional<OOText>>"
isFinalfalse"5
declarationString List<Optional<OOText>> pageInfos*	pageInfos2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃ- Ã(12s
java.util.OptionalTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃ2 Ã(:2ä
)org.jabref.model.openoffice.ootext.OOTextTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃ; Ã(Aá
∫org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!citationType	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÕ: Õ(F"
typeCitationType"
isFinalfalse".
declarationStringCitationType citationType*citationType2Ü
.org.jabref.model.openoffice.style.CitationTypeTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÕ- Õ(9Á
∂org.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!position	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŒ9 Œ(A"
typeXTextCursor"
isFinalfalse")
declarationStringXTextCursor position*position2u
com.sun.star.text.XTextCursorTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŒ- Œ(8ˇ
æorg.jabref.logic.openoffice.frontend.OOFrontend.createCitationGroup(com.sun.star.text.XTextDocument, java.util.List<java.lang.String>, java.util.List<java.util.Optional<org.jabref.model.openoffice.ootext.OOText>>, org.jabref.model.openoffice.style.CitationType, com.sun.star.text.XTextCursor, boolean)!insertSpaceAfter	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaœ5 œ(E"
typeboolean"
isFinalfalse"K
declarationString6<mark class="modifier">boolean</mark> insertSpaceAfter*insertSpaceAfter2_
booleanTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaœ- œ(4ó
ïorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ Í(#"
isFinalfalse"
declarationString⁄<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeCitationGroup</mark>(CitationGroup group<mark class="modifier"><mark class="modifier">,</mark></mark> XTextDocument doc)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>WrappedTargetException<mark class="modifier"><mark class="modifier">,</mark></mark> NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> NotRemoveableException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*removeCitationGroup2Ï
ìorg.jabref.logic.openoffice.backend.Backend52.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java (#2“
zorg.jabref.model.openoffice.style.CitationGroups.afterRemoveCitationGroup(org.jabref.model.openoffice.style.CitationGroup)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÒ Ò(42õ
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java (2Ù
õorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)!groupCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java$ ()2Ú
ôorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java+ (.2Ù
õorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)!groupCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÒ5 Ò(:2¢
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÒ Ò(2˘
õorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)!group	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ2 Í(72˜
ôorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍG Í(J2c
voidRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ Í(›
õorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)!group	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ2 Í(7"
typeCitationGroup"
isFinalfalse"(
declarationStringCitationGroup group*group2á
/org.jabref.model.openoffice.style.CitationGroupTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ$ Í(1∆
ôorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍG Í(J"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ9 Í(Fª
¶org.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙ Ù($"
isFinalfalse"Ü
declarationString<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">removeCitationGroups</mark>(List&lt;CitationGroup&gt; citationGroups<mark class="modifier"><mark class="modifier">,</mark></mark> XTextDocument doc)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>WrappedTargetException<mark class="modifier"><mark class="modifier">,</mark></mark> NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> NotRemoveableException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*removeCitationGroups2Ó
ïorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚ ˚(2é
µorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)!citationGroupsCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙# ˙(12ì
∫org.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)?group@250.27:250.32CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚  ˚(%2É
™org.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚' ˚(*2ì
µorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)!citationGroups	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙ9 Ù(G2à
™org.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙW Ù(Z2ö
∫org.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)?group@250.27:250.32DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙ ˙( 2c
voidRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙ Ù(ª
∫org.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)?group@250.27:250.32VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙ ˙( "
typeCitationGroup"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>CitationGroup <mark class="class-field">group</mark>*group2á
/org.jabref.model.openoffice.style.CitationGroupTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙ ˙(Ü
µorg.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)!citationGroups	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙ9 Ù(G"
typeList<CitationGroup>"
isFinalfalse"7
declarationString"List<CitationGroup> citationGroups*citationGroups2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙ% Ù()2ê
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙ* Ù(7◊
™org.jabref.logic.openoffice.frontend.OOFrontend.removeCitationGroups(java.util.List<org.jabref.model.openoffice.style.CitationGroup>, com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙW Ù(Z"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÙI Ù(V∑
éorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑ  Ñ(,"
isFinalfalse"ç
declarationString˜<mark class="modifier">public </mark>Optional&lt;XTextRange&gt; <mark class="method">getMarkRange</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> CitationGroup group)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<XTextRange>*getMarkRange2Â
åorg.jabref.logic.openoffice.backend.Backend52.getMarkRange(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaà à(#2õ
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaà à(2Ì
îorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!groupCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaà$ à()2Î
íorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaà+ à(.2
íorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑ; Ñ(>2Ú
îorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!group	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑN Ñ(S2q
java.util.OptionalRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑ Ñ(2Ñ
com.sun.star.text.XTextRangeRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑ Ñ(ø
íorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑ; Ñ(>"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑ- Ñ(:÷
îorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!group	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑN Ñ(S"
typeCitationGroup"
isFinalfalse"(
declarationStringCitationGroup group*group2á
/org.jabref.model.openoffice.style.CitationGroupTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑ@ Ñ(M˙
üorg.jabref.logic.openoffice.frontend.OOFrontend.getFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã ã(4"
isFinalfalse"ﬁ
declarationString»<mark class="modifier">public </mark>XTextCursor <mark class="method">getFillCursorForCitationGroup</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> CitationGroup group)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException<mark class="modifier"><mark class="modifier">,</mark></mark> CreationException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeXTextCursor*getFillCursorForCitationGroup2ˆ
ùorg.jabref.logic.openoffice.backend.Backend52.getFillCursorForCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaê ê(42õ
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaê ê(2˛
•org.jabref.logic.openoffice.frontend.OOFrontend.getFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!groupCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaê5 ê(:2¸
£org.jabref.logic.openoffice.frontend.OOFrontend.getFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaê< ê(?2Å
£org.jabref.logic.openoffice.frontend.OOFrontend.getFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaãC ã(F2É
•org.jabref.logic.openoffice.frontend.OOFrontend.getFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!group	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaãV ã([2|
com.sun.star.text.XTextCursorRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã ã(–
£org.jabref.logic.openoffice.frontend.OOFrontend.getFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaãC ã(F"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã5 ã(BÁ
•org.jabref.logic.openoffice.frontend.OOFrontend.getFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!group	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaãV ã(["
typeCitationGroup"
isFinalfalse"(
declarationStringCitationGroup group*group2á
/org.jabref.model.openoffice.style.CitationGroupTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaãH ã(U≤
°org.jabref.logic.openoffice.frontend.OOFrontend.cleanFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javañ ñ(/"
isFinalfalse"®
declarationStringí<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">cleanFillCursorForCitationGroup</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> CitationGroup group)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*cleanFillCursorForCitationGroup2¯
üorg.jabref.logic.openoffice.backend.Backend52.cleanFillCursorForCitationGroup(org.jabref.model.openoffice.style.CitationGroup, com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaõ õ(/2õ
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaõ õ(2Ä
ßorg.jabref.logic.openoffice.frontend.OOFrontend.cleanFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!groupCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaõ0 õ(52˛
•org.jabref.logic.openoffice.frontend.OOFrontend.cleanFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaõ7 õ(:2É
•org.jabref.logic.openoffice.frontend.OOFrontend.cleanFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javañ> ñ(A2Ö
ßorg.jabref.logic.openoffice.frontend.OOFrontend.cleanFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!group	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javañQ ñ(V2c
voidRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javañ ñ(“
•org.jabref.logic.openoffice.frontend.OOFrontend.cleanFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javañ> ñ(A"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javañ0 ñ(=È
ßorg.jabref.logic.openoffice.frontend.OOFrontend.cleanFillCursorForCitationGroup(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)!group	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javañQ ñ(V"
typeCitationGroup"
isFinalfalse"(
declarationStringCitationGroup group*group2á
/org.jabref.model.openoffice.style.CitationGroupTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javañC ñ(PÛ*
_org.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°7 °(E"
isFinalfalse"€
declarationString≈<mark class="modifier">public </mark>List&lt;RangeForOverlapCheck&lt;CitationGroupId&gt;&gt; <mark class="method">citationRanges</mark>(XTextDocument doc)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException"
isStaticfalse"
accesspublic"

isAbstractfalse"3
type+List<RangeForOverlapCheck<CitationGroupId>>*citationRanges2°
Iorg.jabref.model.openoffice.style.CitationGroups.numberOfCitationGroups()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß/ ß(E2•
Morg.jabref.model.openoffice.style.CitationGroups.getCitationGroupsUnordered()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java©2 ©(L2†
Hjava.util.Optional.orElseThrow(java.util.function.Supplier<? extends X>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™= ™(H2Á
éorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™$ ™(02£
Korg.jabref.model.openoffice.style.CitationGroupId.citationGroupIdAsString()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´/ ´(F2m
java.util.List.add(E)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¨ ¨(2z
"java.util.ArrayList.ArrayList(int)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß ß(2ﬂ
Üorg.jabref.logic.openoffice.frontend.RangeForOverlapCheck.RangeForOverlapCheck(com.sun.star.text.XTextRange, T, int, java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¨ ¨(12¢
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß  ß(.2¢
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java©# ©(12ª
corg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™1 ™(42À
sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?group@297.27:297.32CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™6 ™(;2À
sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?group@297.27:297.32CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´! ´(&2Ã
torg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?result@294.52:294.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¨ ¨(2À
sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?range@298.23:298.28CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¨2 ¨(72À
sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?group@297.27:297.32CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java≠ ≠(2—
yorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?description@299.19:299.30CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaØ Ø(2Ã
torg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?result@294.52:294.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java± ±(2¿
corg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°T °(W2”
torg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?result@294.52:294.58DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶4 ¶(:2“
sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?group@297.27:297.32DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java© ©( 2“
sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?range@298.23:298.28DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™ ™(2ÿ
yorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?description@299.19:299.30DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´ ´(2m
java.util.ListRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java° °(2°
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java° °($2ô
1org.jabref.model.openoffice.style.CitationGroupIdRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°% °(4ƒ

torg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?result@294.52:294.58VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶4 ¶(:"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>List<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">result</mark> = new ArrayList<>(citationGroups.numberOfCitationGroups())*result2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶ ¶(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶ ¶(!2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶" ¶(12°
Iorg.jabref.model.openoffice.style.CitationGroups.numberOfCitationGroups()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß/ ß(E2z
"java.util.ArrayList.ArrayList(int)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß ß(2¢
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaß  ß(.Û
sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?group@297.27:297.32VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java© ©( "
typeCitationGroup"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>CitationGroup <mark class="class-field">group</mark>*group2á
/org.jabref.model.openoffice.style.CitationGroupTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java© ©(⁄

sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?range@298.23:298.28VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™ ™("
type
XTextRange"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>XTextRange <mark class="class-field">range</mark> = <mark class="modifier">this</mark>.getMarkRange(doc, group).orElseThrow(IllegalStateException::new)*range2t
com.sun.star.text.XTextRangeTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™ ™(2†
Hjava.util.Optional.orElseThrow(java.util.function.Supplier<? extends X>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™= ™(H2Á
éorg.jabref.logic.openoffice.frontend.OOFrontend.getMarkRange(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroup)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™$ ™(02ª
corg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™1 ™(42À
sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?group@297.27:297.32CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™6 ™(;ˆ
yorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?description@299.19:299.30VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´ ´("
typeString"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>String <mark class="class-field">description</mark> = group.groupId.citationGroupIdAsString()*description2h
java.lang.StringTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´ ´(2£
Korg.jabref.model.openoffice.style.CitationGroupId.citationGroupIdAsString()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´/ ´(F2À
sorg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)?group@297.27:297.32CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´! ´(&è
corg.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°T °(W"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°F °(S !
corg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥7 ¥(I"
isFinalfalse"ﬂ
declarationString…<mark class="modifier">public </mark>List&lt;RangeForOverlapCheck&lt;CitationGroupId&gt;&gt; <mark class="method">bibliographyRanges</mark>(XTextDocument doc)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException"
isStaticfalse"
accesspublic"

isAbstractfalse"3
type+List<RangeForOverlapCheck<CitationGroupId>>*bibliographyRanges2≈
morg.jabref.logic.openoffice.frontend.UpdateBibliography.getBibliographyRange(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª8 ª(L2v
java.util.Optional.isPresent()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaº º(2m
java.util.List.add(E)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaæ æ(2p
java.util.Optional.get()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaæ8 æ(;2w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπA π(L2ﬂ
Üorg.jabref.logic.openoffice.frontend.RangeForOverlapCheck.RangeForOverlapCheck(com.sun.star.text.XTextRange, T, int, java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaæ æ(12´
Sorg.jabref.model.openoffice.style.CitationGroupId.CitationGroupId(java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaø ø('2ø
gorg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaªM ª(P2œ
worg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?range@315.29:315.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaº º(2–
xorg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?result@313.52:313.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaæ æ(2œ
worg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?range@315.29:315.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaæ2 æ(72’
}org.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?description@317.19:317.30CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡ ¡(2–
xorg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?result@313.52:313.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java√ √(2ƒ
gorg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥X ¥([2◊
xorg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?result@313.52:313.58DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ4 π(:2÷
worg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?range@315.29:315.34DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª ª("2‹
}org.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?description@317.19:317.30DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaΩ Ω(2m
java.util.ListRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥ ¥(2°
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥ ¥($2ô
1org.jabref.model.openoffice.style.CitationGroupIdRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥% ¥(4’
xorg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?result@313.52:313.58VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ4 π(:"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>List<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">result</mark> = new ArrayList<>()*result2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ π(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ π(!2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ" π(12w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπA π(L°
worg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?range@315.29:315.34VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª ª(""
typeOptional<XTextRange>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<XTextRange> <mark class="class-field">range</mark> = UpdateBibliography.getBibliographyRange(doc)*range2j
java.util.OptionalTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª ª(2}
com.sun.star.text.XTextRangeTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª ª(2≈
morg.jabref.logic.openoffice.frontend.UpdateBibliography.getBibliographyRange(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª8 ª(L2ø
gorg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaªM ª(PÏ
}org.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)?description@317.19:317.30VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaΩ Ω("
typeString"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>String <mark class="class-field">description</mark> = "bibliography"*description2h
java.lang.StringTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaΩ Ω(ì
gorg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥X ¥(["
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¥J ¥(Wµ$
aorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆7 ∆(G"
isFinalfalse"≤
declarationStringú<mark class="modifier">public </mark>List&lt;RangeForOverlapCheck&lt;CitationGroupId&gt;&gt; <mark class="method">viewCursorRanges</mark>(XTextDocument doc)"
isStaticfalse"
accesspublic"

isAbstractfalse"3
type+List<RangeForOverlapCheck<CitationGroupId>>*viewCursorRanges2£
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…B …(E2∞
Xorg.jabref.model.openoffice.uno.UnoCursor.getViewCursor(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…/ …(<2v
java.util.Optional.isPresent()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java   (2m
java.util.List.add(E)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃ Ã(2p
java.util.Optional.get()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃ8 Ã(;2w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java«A «(L2ﬂ
Üorg.jabref.logic.openoffice.frontend.RangeForOverlapCheck.RangeForOverlapCheck(com.sun.star.text.XTextRange, T, int, java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃ Ã(12´
Sorg.jabref.model.openoffice.style.CitationGroupId.CitationGroupId(java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÕ Õ('2Ω
eorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…= …(@2…
qorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?e@329.70:329.71CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…K …(L2Õ
uorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?range@329.29:329.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java   (2Œ
vorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?result@327.52:327.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃ Ã(2Õ
uorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?range@329.29:329.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃ2 Ã(72”
{org.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?description@331.19:331.30CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaœ œ(2Œ
vorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?result@327.52:327.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java— —(2¬
eorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆V ∆(Y2’
vorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?result@327.52:327.58DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java«4 «(:2‘
uorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?range@329.29:329.34DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java… …("2⁄
{org.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?description@331.19:331.30DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÀ À(2–
qorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?e@329.70:329.71DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…F …(G2m
java.util.ListRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆ ∆(2°
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆ ∆($2ô
1org.jabref.model.openoffice.style.CitationGroupIdRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆% ∆(4”
vorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?result@327.52:327.58VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java«4 «(:"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>List<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">result</mark> = new ArrayList<>()*result2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java« «(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java« «(!2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java«" «(12w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java«A «(Lˆ

uorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?range@329.29:329.34VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java… …(""
typeOptional<XTextRange>"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>Optional<XTextRange> <mark class="class-field">range</mark> = UnoCursor.getViewCursor(doc).map(e -> e)*range2j
java.util.OptionalTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java… …(2}
com.sun.star.text.XTextRangeTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java… …(2£
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…B …(E2∞
Xorg.jabref.model.openoffice.uno.UnoCursor.getViewCursor(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…/ …(<2Ω
eorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…= …(@2…
qorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?e@329.70:329.71CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…K …(L‰
{org.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?description@331.19:331.30VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÀ À("
typeString"
isFinalfalse"r
declarationString]<mark class="modifier"> </mark>String <mark class="class-field">description</mark> = "cursor"*description2h
java.lang.StringTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÀ À(ë
eorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆V ∆(Y"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆H ∆(Uã
qorg.jabref.logic.openoffice.frontend.OOFrontend.viewCursorRanges(com.sun.star.text.XTextDocument)?e@329.70:329.71VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…F …(G"
type"
isFinalfalse"
declarationString e*e2TYPEØE
·org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄ ⁄("
isFinalfalse"∏
declarationString¢<mark class="modifier">public </mark>List&lt;RangeForOverlapCheck&lt;CitationGroupId&gt;&gt; <mark class="method">footnoteMarkRanges</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;RangeForOverlapCheck&lt;CitationGroupId&gt;&gt; citationRanges)"
isStaticfalse"
accesspublic"

isAbstractfalse"3
type+List<RangeForOverlapCheck<CitationGroupId>>*footnoteMarkRanges2™
Rorg.jabref.model.openoffice.rangesort.RangeSort.partitionRanges(java.util.List<V>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‡ ‡()2ß
Oorg.jabref.model.openoffice.rangesort.RangeSort.RangePartitions.getPartitions()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÂP Â(]2p
java.util.List.isEmpty()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÊ Ê(!2∑
_org.jabref.model.openoffice.uno.UnoTextRange.getFootnoteMarkRange(com.sun.star.text.XTextRange)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÎB Î(V2t
java.util.Optional.isEmpty()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÌ" Ì()2m
java.util.List.add(E)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÚ Ú(2p
java.util.Optional.get()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÚD Ú(G2ö
Borg.jabref.logic.openoffice.frontend.RangeForOverlapCheck.format()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaı8 ı(>2w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬁA ﬁ(L2ﬂ
Üorg.jabref.logic.openoffice.frontend.RangeForOverlapCheck.RangeForOverlapCheck(com.sun.star.text.XTextRange, T, int, java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÚ Ú(12…
org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)!citationRangesCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‡* ‡(82”
˙org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?partitions@351.73:351.83CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÂE Â(O2“
˘org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?partition@357.57:357.66CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÊ Ê(2“
˘org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?partition@357.57:357.66CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÈB È(K2÷
˝org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?citationRange@361.50:361.63CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÎW Î(d2⁄
Åorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?footnoteMarkRange@363.33:363.50CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÌ Ì(!2œ
ˆorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?result@350.52:350.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÚ Ú(2⁄
Åorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?footnoteMarkRange@363.33:363.50CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÚ2 Ú(C2÷
˝org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?citationRange@361.50:361.63CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛ Û(!2÷
˝org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?citationRange@361.50:361.63CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaı* ı(72œ
ˆorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?result@350.52:350.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˜ ˜(2√
Âorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄% ⁄((2Œ
org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)!citationRanges	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄V ⁄(d2÷
ˆorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?result@350.52:350.58DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬁ4 ﬁ(:2⁄
˙org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?partitions@351.73:351.83DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬂI ﬂ(S2Ÿ
˘org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?partition@357.57:357.66DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÂ9 Â(B2›
˝org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?citationRange@361.50:361.63DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÈ2 È(?2·
Åorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?footnoteMarkRange@363.33:363.50DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÎ! Î(22m
java.util.ListRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŸ Ÿ(2°
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŸ Ÿ($2ô
1org.jabref.model.openoffice.style.CitationGroupIdRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŸ% Ÿ(4‘
ˆorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?result@350.52:350.58VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬁ4 ﬁ(:"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>List<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">result</mark> = new ArrayList<>()*result2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬁ ﬁ(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬁ ﬁ(!2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬁ" ﬁ(12w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬁA ﬁ(L‘
˙org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?partitions@351.73:351.83VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬂI ﬂ(S"H
type@RangeSort.RangePartitions<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"Õ
declarationString∑<mark class="modifier"> </mark>RangeSort.RangePartitions<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">partitions</mark> = RangeSort.partitionRanges(citationRanges)*
partitions2ó
?org.jabref.model.openoffice.rangesort.RangeSort.RangePartitionsTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬂ ﬂ(!2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬂ ﬂ(2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaﬂ" ﬂ(62™
Rorg.jabref.model.openoffice.rangesort.RangeSort.partitionRanges(java.util.List<V>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‡ ‡()2…
org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)!citationRangesCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java‡* ‡(8œ
˘org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?partition@357.57:357.66VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÂ9 Â(B"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>List<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">partition</mark>*	partition2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÂ Â(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÂ Â(&2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÂ' Â(6À	
˝org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?citationRange@361.50:361.63VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÈ2 È(?"-
type%RangeForOverlapCheck<CitationGroupId>"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>RangeForOverlapCheck<CitationGroupId> <mark class="class-field">citationRange</mark> = partition.getFirst()*citationRange2ë
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÈ È( 2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÈ! È(02“
˘org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?partition@357.57:357.66CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÈB È(K◊

Åorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?footnoteMarkRange@363.33:363.50VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÎ! Î(2"
typeOptional<XTextRange>"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>Optional<XTextRange> <mark class="class-field">footnoteMarkRange</mark> = UnoTextRange.getFootnoteMarkRange(citationRange.range)*footnoteMarkRange2j
java.util.OptionalTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÎ Î(2}
com.sun.star.text.XTextRangeTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÎ Î(2∑
_org.jabref.model.openoffice.uno.UnoTextRange.getFootnoteMarkRange(com.sun.star.text.XTextRange)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÎB Î(V2÷
˝org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)?citationRange@361.50:361.63CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÎW Î(dí
Âorg.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄% ⁄(("
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄ ⁄($ê
org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)!citationRanges	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄V ⁄(d"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"O
declarationString:List<RangeForOverlapCheck<CitationGroupId>> citationRanges*citationRanges2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄* ⁄(.2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄/ ⁄(C2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java⁄D ⁄(SΩD
¯org.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙ ˙(("
isFinalfalse"È
declarationString”<mark class="modifier"> </mark><mark class="modifier">static </mark>String <mark class="method">rangeOverlapsToMessage</mark>(List&lt;RangeOverlap&lt;RangeForOverlapCheck&lt;CitationGroupId&gt;&gt;&gt; overlaps)"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeString*rangeOverlapsToMessage2p
java.util.List.isEmpty()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚ ˚(2§
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÉF É(M2®
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇF Ç(I2u
java.util.Collection.stream()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÅE Å(K2á
/java.lang.String.formatted(java.lang.Object...)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇV Ç(_2ö
Borg.jabref.logic.openoffice.frontend.RangeForOverlapCheck.format()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇb Ç(h2ì
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÉY É(`2¶
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÜ9 Ü(=2¶
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaá5 á(92¶
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaà3 à(72à
0java.lang.StringBuilder.append(java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaä ä(2à
0java.lang.StringBuilder.append(java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã ã(2à
0java.lang.StringBuilder.append(java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaå å(2z
"java.lang.StringBuilder.toString()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaé é(2
'java.lang.StringBuilder.StringBuilder()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaˇ  ˇ(-2⁄
Åorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)!overlapsCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚ ˚(2⁄
Åorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)!overlapsCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÄK Ä(S2Á
éorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?overlap@384.65:384.72CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÅ" Å()2·
àorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?v@386.74:386.75CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇ` Ç(a2„
äorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?msg@383.22:383.25CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÑ Ñ(2Á
éorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?overlap@384.65:384.72CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÖ Ö(#2„
äorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?msg@383.22:383.25CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaä ä(2„
äorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?msg@383.22:383.25CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã ã(2Ï
ìorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?listOfRanges@385.19:385.31CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaã ã(#2„
äorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?msg@383.22:383.25CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaå å(2„
äorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?msg@383.22:383.25CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaé é(2ﬂ
Åorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)!overlaps	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙c ˙(k2Í
äorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?msg@383.22:383.25DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaˇ ˇ(2Ó
éorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?overlap@384.65:384.72DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÄA Ä(H2Û
ìorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?listOfRanges@385.19:385.31DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÅ Å(2Ë
àorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?v@386.74:386.75DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇJ Ç(K2o
java.lang.StringRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙ ˙(Ö
äorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?msg@383.22:383.25VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaˇ ˇ("
typeStringBuilder"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>StringBuilder <mark class="class-field">msg</mark> = new StringBuilder()*msg2o
java.lang.StringBuilderTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaˇ ˇ(2
'java.lang.StringBuilder.StringBuilder()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaˇ  ˇ(-ï
éorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?overlap@384.65:384.72VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÄA Ä(H";
type3RangeOverlap<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark>RangeOverlap<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">overlap</mark>*overlap2ä
2org.jabref.model.openoffice.rangesort.RangeOverlapTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÄ Ä(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÄ Ä(.2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÄ/ Ä(>ﬂ
ìorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?listOfRanges@385.19:385.31VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÅ Å("
typeString"
isFinalfalse"˛
declarationStringË<mark class="modifier"> </mark>String <mark class="class-field">listOfRanges</mark> = overlap.valuesForOverlappingRanges.stream().map(v -> "'%s'".formatted(v.format())).collect(Collectors.joining("<mark class="modifier">,</mark> "))*listOfRanges2h
java.lang.StringTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÅ Å(2§
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÉF É(M2®
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇF Ç(I2u
java.util.Collection.stream()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÅE Å(K2á
/java.lang.String.formatted(java.lang.Object...)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇV Ç(_2ö
Borg.jabref.logic.openoffice.frontend.RangeForOverlapCheck.format()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇb Ç(h2ì
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÉY É(`2Á
éorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?overlap@384.65:384.72CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÅ" Å()2·
àorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?v@386.74:386.75CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇ` Ç(a«
Åorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)!overlaps	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙c ˙(k"A
type9List<RangeOverlap<RangeForOverlapCheck<CitationGroupId>>>"
isFinalfalse"W
declarationStringBList<RangeOverlap<RangeForOverlapCheck<CitationGroupId>>> overlaps*overlaps2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙) ˙(-2ì
2org.jabref.model.openoffice.rangesort.RangeOverlapTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙. ˙(:2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙; ˙(O2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙P ˙(_£
àorg.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)?v@386.74:386.75VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÇJ Ç(K"
type"
isFinalfalse"
declarationString v*v2TYPEÁT
Ùorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaô ô( "
isFinalfalse" 
declarationString¥<mark class="modifier">public </mark>OOVoidResult&lt;JabRefException&gt; <mark class="method">checkRangeOverlapsWithCursor</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;RangeForOverlapCheck&lt;CitationGroupId&gt;&gt; userRanges<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> requireSeparation)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException"
isStaticfalse"
accesspublic"

isAbstractfalse"%
typeOOVoidResult<JabRefException>*checkRangeOverlapsWithCursor2∑
_org.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†E †(S2ê
8java.util.List.addAll(java.util.Collection<? extends E>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java§ §(2ª
corg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java§ §((2ê
8java.util.List.addAll(java.util.Collection<? extends E>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java• •(2ê
8java.util.List.addAll(java.util.Collection<? extends E>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶ ¶(2∫
·org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶ ¶((2Ï
ìorg.jabref.model.openoffice.rangesort.RangeOverlapBetween.findFirst(com.sun.star.text.XTextDocument, java.util.List<V>, java.util.List<V>, boolean)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java©$ ©(-2p
java.util.List.isEmpty()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÆ Æ(2ä
2org.jabref.model.openoffice.util.OOVoidResult.ok()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaØ  Ø("2é
6org.jabref.model.openoffice.util.OOVoidResult.error(E)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java± ±(!2—
¯org.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java≤ ≤(&2w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°A °(L2¨
Torg.jabref.logic.JabRefException.JabRefException(java.lang.String, java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java±& ±(52—
¯org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†T †(W2‚
âorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?ranges@417.52:417.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java§ §(2—
¯org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java§) §(,2‚
âorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?ranges@417.52:417.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java• •(2Í
ëorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?citationRanges@416.52:416.66CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java• •($2‚
âorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?ranges@417.52:417.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶ ¶(2—
¯org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶) ¶(,2Í
ëorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?citationRanges@416.52:416.66CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¶. ¶(<2—
¯org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java©. ©(12ÿ
ˇorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!userRangesCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™ ™("2‚
âorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?ranges@417.52:417.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´ ´(2ﬂ
Üorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!requireSeparationCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¨ ¨()2‰
ãorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?overlaps@424.66:424.74CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÆ Æ(2‰
ãorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?overlaps@424.66:424.74CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java≤' ≤(/2÷
¯org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaô/ ô(22›
ˇorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!userRanges	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaöM ö(W2‰
Üorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!requireSeparation	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaõ) õ(:2Ò
ëorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?citationRanges@416.52:416.66DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†4 †(B2È
âorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?ranges@417.52:417.58DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°4 °(:2Î
ãorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?overlaps@424.66:424.74DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java®B ®(J2å
-org.jabref.model.openoffice.util.OOVoidResultRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaò ò(2à
 org.jabref.logic.JabRefExceptionRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaò ò('ñ
ëorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?citationRanges@416.52:416.66VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†4 †(B"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>List<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">citationRanges</mark> = citationRanges(doc)*citationRanges2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java† †(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java† †(!2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†" †(12∑
_org.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†E †(S2—
¯org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java†T †(WÁ
âorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?ranges@417.52:417.58VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°4 °(:"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>List<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">ranges</mark> = new ArrayList<>()*ranges2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java° °(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java° °(!2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°" °(12w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java°A °(L√
ãorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?overlaps@424.66:424.74VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java®B ®(J"A
type9List<RangeOverlap<RangeForOverlapCheck<CitationGroupId>>>"
isFinalfalse"‰
declarationStringŒ<mark class="modifier"> </mark>List<RangeOverlap<RangeForOverlapCheck<CitationGroupId>>> <mark class="class-field">overlaps</mark> = RangeOverlapBetween.findFirst(doc, userRanges, ranges, requireSeparation)*overlaps2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java® ®(2ì
2org.jabref.model.openoffice.rangesort.RangeOverlapTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java® ®(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java® ®(.2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java®/ ®(>2Ï
ìorg.jabref.model.openoffice.rangesort.RangeOverlapBetween.findFirst(com.sun.star.text.XTextDocument, java.util.List<V>, java.util.List<V>, boolean)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java©$ ©(-2—
¯org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java©. ©(12ÿ
ˇorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!userRangesCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java™ ™("2‚
âorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)?ranges@417.52:417.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java´ ´(2ﬂ
Üorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!requireSeparationCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¨ ¨()•
¯org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaô/ ô(2"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaô! ô(.ó
ˇorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!userRanges	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaöM ö(W"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"K
declarationString6List<RangeForOverlapCheck<CitationGroupId>> userRanges*
userRanges2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaö! ö(%2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaö& ö(:2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaö; ö(J…
Üorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlapsWithCursor(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean)!requireSeparation	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaõ) õ(:"
typeboolean"
isFinalfalse"L
declarationString7<mark class="modifier">boolean</mark> requireSeparation*requireSeparation2_
booleanTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaõ! õ((˚]
Ôorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ) π(;"
isFinalfalse"¨
declarationStringñ<mark class="modifier">public </mark>OOVoidResult&lt;JabRefException&gt; <mark class="method">checkRangeOverlaps</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;RangeForOverlapCheck&lt;CitationGroupId&gt;&gt; userRanges<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> requireSeparation<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> reportAtMost)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>NoDocumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException"
isStaticfalse"
accesspublic"

isAbstractfalse"%
typeOOVoidResult<JabRefException>*checkRangeOverlaps2∑
_org.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡E ¡(S2ê
8java.util.List.addAll(java.util.Collection<? extends E>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java√ √(2ê
8java.util.List.addAll(java.util.Collection<? extends E>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaƒ ƒ(2ª
corg.jabref.logic.openoffice.frontend.OOFrontend.bibliographyRanges(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaƒ ƒ((2ê
8java.util.List.addAll(java.util.Collection<? extends E>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java≈ ≈(2ê
8java.util.List.addAll(java.util.Collection<? extends E>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆ ∆(2∫
·org.jabref.logic.openoffice.frontend.OOFrontend.footnoteMarkRanges(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆ ∆((2È
êorg.jabref.model.openoffice.rangesort.RangeOverlapWithin.findOverlappingRanges(com.sun.star.text.XTextDocument, java.util.List<V>, boolean, int)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…# …(82p
java.util.List.isEmpty()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÀ À(2ä
2org.jabref.model.openoffice.util.OOVoidResult.ok()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÃ  Ã("2é
6org.jabref.model.openoffice.util.OOVoidResult.error(E)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŒ Œ(!2—
¯org.jabref.logic.openoffice.frontend.OOFrontend.rangeOverlapsToMessage(java.util.List<org.jabref.model.openoffice.rangesort.RangeOverlap<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaœ œ(&2w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¬A ¬(L2¨
Torg.jabref.logic.JabRefException.JabRefException(java.lang.String, java.lang.String)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaŒ& Œ(52Ã
Ûorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡T ¡(W2›
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?ranges@450.52:450.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java√ √(2”
˙org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!userRangesCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java√ √( 2›
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?ranges@450.52:450.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaƒ ƒ(2Ã
Ûorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaƒ) ƒ(,2›
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?ranges@450.52:450.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java≈ ≈(2Â
åorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?citationRanges@449.52:449.66CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java≈ ≈($2›
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?ranges@450.52:450.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆ ∆(2Ã
Ûorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆) ∆(,2Â
åorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?citationRanges@449.52:449.66CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∆. ∆(<2Ã
Ûorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…9 …(<2›
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?ranges@450.52:450.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…> …(D2⁄
Åorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!requireSeparationCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…F …(W2’
¸org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!reportAtMostCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…Y …(e2ﬂ
Üorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?overlaps@456.66:456.74CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÀ À(2ﬂ
Üorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?overlaps@456.66:456.74CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaœ' œ(/2—
Ûorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπJ π(M2ÿ
˙org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!userRanges	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫h ∫(r2ﬂ
Åorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!requireSeparation	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaªD ª(U2⁄
¸org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!reportAtMost	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaº@ º(L2Ï
åorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?citationRanges@449.52:449.66DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡4 ¡(B2‰
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?ranges@450.52:450.58DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¬4 ¬(:2Ê
Üorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?overlaps@456.66:456.74DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java»B »(J2å
-org.jabref.model.openoffice.util.OOVoidResultRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ π(2à
 org.jabref.logic.JabRefExceptionRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ π('å
åorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?citationRanges@449.52:449.66VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡4 ¡(B"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>List<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">citationRanges</mark> = citationRanges(doc)*citationRanges2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡ ¡(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡ ¡(!2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡" ¡(12∑
_org.jabref.logic.openoffice.frontend.OOFrontend.citationRanges(com.sun.star.text.XTextDocument)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡E ¡(S2Ã
Ûorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¡T ¡(W‚
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?ranges@450.52:450.58VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¬4 ¬(:"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>List<RangeForOverlapCheck<CitationGroupId>> <mark class="class-field">ranges</mark> = new ArrayList<>()*ranges2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¬ ¬(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¬ ¬(!2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¬" ¬(12w
java.util.ArrayList.ArrayList()CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¬A ¬(L∂
Üorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?overlaps@456.66:456.74VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java»B »(J"A
type9List<RangeOverlap<RangeForOverlapCheck<CitationGroupId>>>"
isFinalfalse"Ò
declarationString€<mark class="modifier"> </mark>List<RangeOverlap<RangeForOverlapCheck<CitationGroupId>>> <mark class="class-field">overlaps</mark> = RangeOverlapWithin.findOverlappingRanges(doc, ranges, requireSeparation, reportAtMost)*overlaps2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java» »(2ì
2org.jabref.model.openoffice.rangesort.RangeOverlapTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java» »(2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java» »(.2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java»/ »(>2È
êorg.jabref.model.openoffice.rangesort.RangeOverlapWithin.findOverlappingRanges(com.sun.star.text.XTextDocument, java.util.List<V>, boolean, int)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…# …(82Ã
Ûorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…9 …(<2›
Ñorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)?ranges@450.52:450.58CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…> …(D2⁄
Åorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!requireSeparationCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…F …(W2’
¸org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!reportAtMostCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java…Y …(e†
Ûorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπJ π(M"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaπ< π(Ií
˙org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!userRanges	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫h ∫(r"3
type+List<RangeForOverlapCheck<CitationGroupId>>"
isFinalfalse"K
declarationString6List<RangeForOverlapCheck<CitationGroupId>> userRanges*
userRanges2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫< ∫(@2ö
9org.jabref.logic.openoffice.frontend.RangeForOverlapCheckTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫A ∫(U2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java∫V ∫(eƒ
Åorg.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!requireSeparation	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaªD ª(U"
typeboolean"
isFinalfalse"L
declarationString7<mark class="modifier">boolean</mark> requireSeparation*requireSeparation2_
booleanTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaª< ª(C©
¸org.jabref.logic.openoffice.frontend.OOFrontend.checkRangeOverlaps(com.sun.star.text.XTextDocument, java.util.List<org.jabref.logic.openoffice.frontend.RangeForOverlapCheck<org.jabref.model.openoffice.style.CitationGroupId>>, boolean, int)!reportAtMost	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaº@ º(L"
typeint"
isFinalfalse"C
declarationString.<mark class="modifier">int</mark> reportAtMost*reportAtMost2[
intTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaº< º(?º
corg.jabref.logic.openoffice.frontend.OOFrontend.getCitationEntries(com.sun.star.text.XTextDocument)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„ „(1"
isFinalfalse"¡
declarationString´<mark class="modifier">public </mark>List&lt;CitationEntry&gt; <mark class="method">getCitationEntries</mark>(XTextDocument doc)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>WrappedTargetException<mark class="modifier"><mark class="modifier">,</mark></mark> NoDocumentException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<CitationEntry>*getCitationEntries2Ï
ìorg.jabref.logic.openoffice.backend.Backend52.getCitationEntries(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.style.CitationGroups)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÁ Á(.2ø
gorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationEntries(com.sun.star.text.XTextDocument)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÁ/ Á(22¢
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÁ4 Á(B2õ
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÁ Á(2ƒ
gorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationEntries(com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„@ „(C2m
java.util.ListRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„ „(2ë
)org.jabref.model.openoffice.CitationEntryRETURN_TYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„ „(ì
gorg.jabref.logic.openoffice.frontend.OOFrontend.getCitationEntries(com.sun.star.text.XTextDocument)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„@ „(C"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java„2 „(?Í
†org.jabref.logic.openoffice.frontend.OOFrontend.applyCitationEntries(com.sun.star.text.XTextDocument, java.util.List<org.jabref.model.openoffice.CitationEntry>)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ Í($"
isFinalfalse"›
declarationString«<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">applyCitationEntries</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;CitationEntry&gt; citationEntries)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>PropertyVetoException<mark class="modifier"><mark class="modifier">,</mark></mark> IllegalTypeException<mark class="modifier"><mark class="modifier">,</mark></mark> IllegalArgumentException<mark class="modifier"><mark class="modifier">,</mark></mark> WrappedTargetException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*applyCitationEntries2˜
ûorg.jabref.logic.openoffice.backend.Backend52.applyCitationEntries(com.sun.star.text.XTextDocument, java.util.List<org.jabref.model.openoffice.CitationEntry>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java ()2˝
§org.jabref.logic.openoffice.frontend.OOFrontend.applyCitationEntries(com.sun.star.text.XTextDocument, java.util.List<org.jabref.model.openoffice.CitationEntry>)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java* (-2â
∞org.jabref.logic.openoffice.frontend.OOFrontend.applyCitationEntries(com.sun.star.text.XTextDocument, java.util.List<org.jabref.model.openoffice.CitationEntry>)!citationEntriesCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java/ (>2õ
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java (2Ç
§org.jabref.logic.openoffice.frontend.OOFrontend.applyCitationEntries(com.sun.star.text.XTextDocument, java.util.List<org.jabref.model.openoffice.CitationEntry>)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ3 Í(62é
∞org.jabref.logic.openoffice.frontend.OOFrontend.applyCitationEntries(com.sun.star.text.XTextDocument, java.util.List<org.jabref.model.openoffice.CitationEntry>)!citationEntries	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍL Í([2c
voidRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ Í(—
§org.jabref.logic.openoffice.frontend.OOFrontend.applyCitationEntries(com.sun.star.text.XTextDocument, java.util.List<org.jabref.model.openoffice.CitationEntry>)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ3 Í(6"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ% Í(2˝
∞org.jabref.logic.openoffice.frontend.OOFrontend.applyCitationEntries(com.sun.star.text.XTextDocument, java.util.List<org.jabref.model.openoffice.CitationEntry>)!citationEntries	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍL Í(["
typeList<CitationEntry>"
isFinalfalse"8
declarationString#List<CitationEntry> citationEntries*citationEntries2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ8 Í(<2ä
)org.jabref.model.openoffice.CitationEntryTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÍ= Í(JÉ(
¢org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)METHODN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛ Û(!"
isFinalfalse"ß
declarationStringë<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">imposeGlobalOrder</mark>(XTextDocument doc<mark class="modifier"><mark class="modifier">,</mark></mark> FunctionalTextViewCursor fcursor)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>WrappedTargetException<mark class="modifier"><mark class="modifier">,</mark></mark> NoDocumentException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*imposeGlobalOrder2í
πorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙ ˙(/2Ω
eorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚B ˚(E2€
Çorg.jabref.model.openoffice.style.CitationGroups.setGlobalOrder(java.util.List<org.jabref.model.openoffice.style.CitationGroupId>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¸ ¸(%2ˇ
¶org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙0 ˙(32•
Ãorg.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?mapFootnotesToFootnoteMarks@504.16:504.43CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙5 ˙(P2É
™org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!fcursorCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙R ˙(Y2û
≈org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortedCitationGroups@505.28:505.48CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚F ˚(Z2è
∂org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?group@507.92:507.97CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚e ˚(j2¢
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¸ ¸(2†
«org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortedCitationGroupIds@507.30:507.52CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¸& ¸(<2Ñ
¶org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛ0 Û(32à
™org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!fcursor	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛN Û(U2¨
Ãorg.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?mapFootnotesToFootnoteMarks@504.16:504.43DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¯ ¯(+2•
≈org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortedCitationGroups@505.28:505.48DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˘ ˘(02ß
«org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortedCitationGroupIds@507.30:507.52DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚ ˚(42ñ
∂org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?group@507.92:507.97DECLARATIONN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚\ ˚(a2c
voidRETURN_TYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛ Û(Î
Ãorg.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?mapFootnotesToFootnoteMarks@504.16:504.43VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¯ ¯(+"
typeboolean"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">mapFootnotesToFootnoteMarks</mark> = true*mapFootnotesToFootnoteMarks2_
booleanTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java¯ ¯(ı
≈org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortedCitationGroups@505.28:505.48VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˘ ˘(0"
typeList<CitationGroup>"
isFinalfalse"À
declarationStringµ<mark class="modifier"> </mark>List<CitationGroup> <mark class="class-field">sortedCitationGroups</mark> = getVisuallySortedCitationGroups(doc, mapFootnotesToFootnoteMarks, fcursor)*sortedCitationGroups2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˘ ˘(2ê
/org.jabref.model.openoffice.style.CitationGroupTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˘ ˘(2í
πorg.jabref.logic.openoffice.frontend.OOFrontend.getVisuallySortedCitationGroups(com.sun.star.text.XTextDocument, boolean, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙ ˙(/2ˇ
¶org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!docCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙0 ˙(32•
Ãorg.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?mapFootnotesToFootnoteMarks@504.16:504.43CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙5 ˙(P2É
™org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!fcursorCALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˙R ˙(Y°
«org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortedCitationGroupIds@507.30:507.52VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚ ˚(4"
typeList<CitationGroupId>"
isFinalfalse"¡
declarationString´<mark class="modifier"> </mark>List<CitationGroupId> <mark class="class-field">sortedCitationGroupIds</mark> = OOListUtil.map(sortedCitationGroups, group -> group.groupId)*sortedCitationGroupIds2f
java.util.ListTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚ ˚(2í
1org.jabref.model.openoffice.style.CitationGroupIdTYPE_ARGUMENTN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚ ˚(2Ω
eorg.jabref.model.openoffice.util.OOListUtil.map(java.util.List<T>, java.util.function.Function<T, U>)CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚B ˚(E2û
≈org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?sortedCitationGroups@505.28:505.48CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚F ˚(Z2è
∂org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?group@507.92:507.97CALLN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚e ˚(j”
¶org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!doc	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛ0 Û(3"
typeXTextDocument"
isFinalfalse"&
declarationStringXTextDocument doc*doc2w
com.sun.star.text.XTextDocumentTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛ" Û(/ï
™org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)!fcursor	PARAMETERN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛN Û(U" 
typeFunctionalTextViewCursor"
isFinalfalse"5
declarationString FunctionalTextViewCursor fcursor*fcursor2ñ
>org.jabref.model.openoffice.rangesort.FunctionalTextViewCursorTYPEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.javaÛ5 Û(MŸ
∂org.jabref.logic.openoffice.frontend.OOFrontend.imposeGlobalOrder(com.sun.star.text.XTextDocument, org.jabref.model.openoffice.rangesort.FunctionalTextViewCursor)?group@507.92:507.97VARIABLEN
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java˚\ ˚(a"
type"
isFinalfalse"
declarationString group*group2TYPEÖ
Corg.jabref.logic.openoffice.frontend.OOFrontend?backend@45.27:45.34VALUEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java- -(""
isFinaltrue"
type	Backend52"ê
declarationString{<mark class="modifier">public </mark><mark class="modifier">final </mark>Backend52 <mark class="class-field">backend</mark>"
isStaticfalse"
accesspublic*backend2É
-org.jabref.logic.openoffice.backend.Backend52TYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java- -(®
Jorg.jabref.logic.openoffice.frontend.OOFrontend?citationGroups@46.32:46.46VALUEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java.  .(."
isFinaltrue"
typeCitationGroups"ù
declarationStringá<mark class="modifier">public </mark><mark class="modifier">final </mark>CitationGroups <mark class="class-field">citationGroups</mark>"
isStaticfalse"
accesspublic*citationGroups2Ü
0org.jabref.model.openoffice.style.CitationGroupsTYPEL
Bsrc\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java. .(