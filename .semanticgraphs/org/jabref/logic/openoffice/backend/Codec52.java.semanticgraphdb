
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java‹
+org.jabref.logic.openoffice.backend.Codec52CLASSH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java (".
package#org.jabref.logic.openoffice.backend"
isFinalfalse"
inner classfalse"

isAbstractfalse"_
declarationStringJ<mark class="modifier"> </mark><mark class="modifier">class </mark>Codec52"
accesspackage_private*Codec522é
5org.jabref.logic.openoffice.backend.Codec52.Codec52()DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java (2ù
Dorg.jabref.logic.openoffice.backend.Codec52.citationTypeFromInt(int)DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java9  9(32∆
morg.jabref.logic.openoffice.backend.Codec52.citationTypeToInt(org.jabref.model.openoffice.style.CitationType)DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaB B((2ä
∞org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaU U(*2§
Korg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaj+ j(82∞
Worg.jabref.logic.openoffice.backend.Codec52.isJabRefReferenceMarkName(java.lang.String)DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaz z(32»
morg.jabref.logic.openoffice.backend.Codec52.filterIsJabRefReferenceMarkName(java.util.List<java.lang.String>)DECLARATIONJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÉ É(>2ù
Dorg.jabref.logic.openoffice.backend.Codec52?BIB_CITATION@19.32:19.44DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java  (,2ù
Dorg.jabref.logic.openoffice.backend.Codec52?CITE_PATTERN@20.33:20.45DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java! (-Ä
5org.jabref.logic.openoffice.backend.Codec52.Codec52()CONSTRUCTORH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java ("`
declarationStringK<mark class="modifier">private </mark><mark class="method">Codec52</mark>()*Codec522Ñ
+org.jabref.logic.openoffice.backend.Codec52RETURN_TYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java (ƒ
Dorg.jabref.logic.openoffice.backend.Codec52.citationTypeFromInt(int)METHODH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java9  9(3"
isFinalfalse"≈
declarationStringØ<mark class="modifier">private </mark><mark class="modifier">static </mark>CitationType <mark class="method">citationTypeFromInt</mark>(<mark class="modifier">int</mark> code)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeCitationType*citationTypeFromInt2ü
Mjava.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java>! >(92õ
Iorg.jabref.logic.openoffice.backend.Codec52.citationTypeFromInt(int)!codeCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java: :(2†
Iorg.jabref.logic.openoffice.backend.Codec52.citationTypeFromInt(int)!code	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java98 9(<2á
.org.jabref.model.openoffice.style.CitationTypeRETURN_TYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java9 9(Ÿ
Iorg.jabref.logic.openoffice.backend.Codec52.citationTypeFromInt(int)!code	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java98 9(<"
typeint"
isFinalfalse";
declarationString&<mark class="modifier">int</mark> code*code2U
intTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java94 9(7‰
morg.jabref.logic.openoffice.backend.Codec52.citationTypeToInt(org.jabref.model.openoffice.style.CitationType)METHODH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaB B(("
isFinalfalse"√
declarationString≠<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">int</mark> <mark class="method">citationTypeToInt</mark>(CitationType type)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeint*citationTypeToInt2ƒ
rorg.jabref.logic.openoffice.backend.Codec52.citationTypeToInt(org.jabref.model.openoffice.style.CitationType)!typeCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaC C(2…
rorg.jabref.logic.openoffice.backend.Codec52.citationTypeToInt(org.jabref.model.openoffice.style.CitationType)!type	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaB6 B(:2\
intRETURN_TYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaB B(¢
rorg.jabref.logic.openoffice.backend.Codec52.citationTypeToInt(org.jabref.model.openoffice.style.CitationType)!type	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaB6 B(:"
typeCitationType"
isFinalfalse"&
declarationStringCitationType type*type2Ä
.org.jabref.model.openoffice.style.CitationTypeTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaB) B(5Ï6
∞org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)METHODH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaU U(*"
isFinalfalse"Â
declarationStringœ<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">getUniqueMarkName</mark>(Set&lt;String&gt; usedNames<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; citationKeys<mark class="modifier"><mark class="modifier">,</mark></mark> CitationType citationType)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*getUniqueMarkName2µ
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaY) Y(-2ø
morg.jabref.logic.openoffice.backend.Codec52.citationTypeToInt(org.jabref.model.openoffice.style.CitationType)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java\ \(+2z
(java.util.Set.contains(java.lang.Object)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java^ ^(!2ê
Ωorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!citationKeysCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaY3 Y(?2ê
Ωorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!citationTypeCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java\, \(82ñ
Dorg.jabref.logic.openoffice.backend.Codec52?BIB_CITATION@19.32:19.44CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java] ]("2õ
»org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citTypeCode@92.12:92.23CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java]+ ](62†
Õorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citationKeysPart@89.15:89.31CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java]? ](O2ç
∫org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!usedNamesCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java^ ^(2î
¡org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?name@93.15:93.19CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java^" ^(&2î
¡org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?name@93.15:93.19CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java_ _(2ñ
Dorg.jabref.logic.openoffice.backend.Codec52?BIB_CITATION@19.32:19.44CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java_ _(2ï
¬org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?index@91.12:91.17CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java_" _('2õ
»org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citTypeCode@92.12:92.23CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java_0 _(;2†
Õorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citationKeysPart@89.15:89.31CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java_D _(T2ï
¬org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?index@91.12:91.17CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java` `(2î
¡org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?name@93.15:93.19CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javab b(2í
∫org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!usedNames	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaU7 U(@2ï
Ωorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!citationKeys	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaV8 V(D2ï
Ωorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!citationType	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaW8 W(D2ß
Õorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citationKeysPart@89.15:89.31DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaY Y(2ú
¬org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?index@91.12:91.17DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java[ [(2¢
»org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citTypeCode@92.12:92.23DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java\ \(2õ
¡org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?name@93.15:93.19DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java] ](2i
java.lang.StringRETURN_TYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaU U(‘
Õorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citationKeysPart@89.15:89.31VARIABLEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaY Y("
typeString"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>String <mark class="class-field">citationKeysPart</mark> = String.join("<mark class="modifier">,</mark>"<mark class="modifier">,</mark> citationKeys)*citationKeysPart2b
java.lang.StringTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaY Y(2µ
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaY) Y(-2ê
Ωorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!citationKeysCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaY3 Y(?ô
¬org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?index@91.12:91.17VARIABLEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java[ [("
typeint"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">index</mark> = 0*index2U
intTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java[ [(ü
»org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citTypeCode@92.12:92.23VARIABLEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java\ \("
typeint"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">citTypeCode</mark> = citationTypeToInt(citationType)*citTypeCode2U
intTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java\ \(2ø
morg.jabref.logic.openoffice.backend.Codec52.citationTypeToInt(org.jabref.model.openoffice.style.CitationType)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java\ \(+2ê
Ωorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!citationTypeCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java\, \(8û

¡org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?name@93.15:93.19VARIABLEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java] ]("
typeString"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>String <mark class="class-field">name</mark> = BIB_CITATION + '_' + citTypeCode + '_' + citationKeysPart*name2b
java.lang.StringTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java] ](2ñ
Dorg.jabref.logic.openoffice.backend.Codec52?BIB_CITATION@19.32:19.44CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java] ]("2õ
»org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citTypeCode@92.12:92.23CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java]+ ](62†
Õorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)?citationKeysPart@89.15:89.31CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java]? ](Oæ
∫org.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!usedNames	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaU7 U(@"
typeSet<String>"
isFinalfalse"*
declarationStringSet<String> usedNames*	usedNames2_
java.util.SetTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaU+ U(.2k
java.lang.StringTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaU/ U(5 
Ωorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!citationKeys	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaV8 V(D"
typeList<String>"
isFinalfalse".
declarationStringList<String> citationKeys*citationKeys2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaV+ V(/2k
java.lang.StringTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaV0 V(6˛
Ωorg.jabref.logic.openoffice.backend.Codec52.getUniqueMarkName(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.openoffice.style.CitationType)!citationType	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaW8 W(D"
typeCitationType"
isFinalfalse".
declarationStringCitationType citationType*citationType2Ä
.org.jabref.model.openoffice.style.CitationTypeTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaW+ W(7ú)
Korg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)METHODH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaj+ j(8"
isFinalfalse"º
declarationString¶<mark class="modifier">public </mark><mark class="modifier">static </mark>Optional&lt;ParsedMarkName&gt; <mark class="method">parseMarkName</mark>(String refMarkName)"
isStatictrue"
accesspublic"

isAbstractfalse" 
typeOptional<ParsedMarkName>*parseMarkName2â
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javak+ k(22p
java.util.regex.Matcher.find()CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javal l(2l
java.util.Optional.empty()CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javam m(!2o
java.util.Arrays.asList(T...)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap# p()2z
(java.lang.String.split(java.lang.String)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap? p(D2t
"java.util.regex.Matcher.group(int)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap6 p(;2t
"java.util.regex.Matcher.group(int)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaq# q((2~
,java.lang.Integer.parseInt(java.lang.String)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javar" r(*2t
"java.util.regex.Matcher.group(int)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javar7 r(<2ñ
Dorg.jabref.logic.openoffice.backend.Codec52.citationTypeFromInt(int)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javas$ s(72j
java.util.Optional.of(T)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javat t(2Ä
≠org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javat t(52ñ
Dorg.jabref.logic.openoffice.backend.Codec52?CITE_PATTERN@20.33:20.45CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javak k(*2©
Worg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)!refMarkNameCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javak3 k(>2∑
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citeMatcher@107.16:107.27CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javal l(2∑
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citeMatcher@107.16:107.27CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap* p(52∑
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citeMatcher@107.16:107.27CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaq q("2∑
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citeMatcher@107.16:107.27CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javar+ r(62∑
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citTypeCode@114.12:114.23CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javas8 s(C2±
_org.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?index@113.15:113.20CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javat6 t(;2∏
forg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citationType@115.21:115.33CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javat= t(I2∞
^org.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?keys@112.21:112.25CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javatK t(O2Æ
Worg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)!refMarkName	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaj@ j(K2æ
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citeMatcher@107.16:107.27DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javak k(2∑
^org.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?keys@112.21:112.25DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap p(2∏
_org.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?index@113.15:113.20DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaq q(2æ
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citTypeCode@114.12:114.23DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javar r(2ø
forg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citationType@115.21:115.33DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javas s(!2k
java.util.OptionalRETURN_TYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaj j(2ú
:org.jabref.logic.openoffice.backend.Codec52.ParsedMarkNameRETURN_TYPE_ARGUMENTH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaj j()∂
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citeMatcher@107.16:107.27VARIABLEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javak k("
typeMatcher"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>Matcher <mark class="class-field">citeMatcher</mark> = CITE_PATTERN.matcher(refMarkName)*citeMatcher2i
java.util.regex.MatcherTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javak k(2â
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javak+ k(22ñ
Dorg.jabref.logic.openoffice.backend.Codec52?CITE_PATTERN@20.33:20.45CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javak k(*2©
Worg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)!refMarkNameCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javak3 k(>á	
^org.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?keys@112.21:112.25VARIABLEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap p("
typeList<String>"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>List<String> <mark class="class-field">keys</mark> = Arrays.asList(citeMatcher.group(3).split("<mark class="modifier">,</mark>"))*keys2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap p(2k
java.lang.StringTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap p(2o
java.util.Arrays.asList(T...)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap# p()2z
(java.lang.String.split(java.lang.String)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap? p(D2t
"java.util.regex.Matcher.group(int)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap6 p(;2∑
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citeMatcher@107.16:107.27CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javap* p(5Ï
_org.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?index@113.15:113.20VARIABLEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaq q("
typeString"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>String <mark class="class-field">index</mark> = citeMatcher.group(1)*index2b
java.lang.StringTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaq q(2t
"java.util.regex.Matcher.group(int)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaq# q((2∑
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citeMatcher@107.16:107.27CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaq q("ù
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citTypeCode@114.12:114.23VARIABLEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javar r("
typeint"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">citTypeCode</mark> = Integer.parseInt(citeMatcher.group(2))*citTypeCode2U
intTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javar r(2~
,java.lang.Integer.parseInt(java.lang.String)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javar" r(*2t
"java.util.regex.Matcher.group(int)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javar7 r(<2∑
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citeMatcher@107.16:107.27CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javar+ r(6‹
forg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citationType@115.21:115.33VARIABLEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javas s(!"
typeCitationType"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>CitationType <mark class="class-field">citationType</mark> = citationTypeFromInt(citTypeCode)*citationType2Ä
.org.jabref.model.openoffice.style.CitationTypeTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javas s(2ñ
Dorg.jabref.logic.openoffice.backend.Codec52.citationTypeFromInt(int)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javas$ s(72∑
eorg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)?citTypeCode@114.12:114.23CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javas8 s(CÍ
Worg.jabref.logic.openoffice.backend.Codec52.parseMarkName(java.lang.String)!refMarkName	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaj@ j(K"
typeString"
isFinalfalse"'
declarationStringString refMarkName*refMarkName2b
java.lang.StringTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaj9 j(?Õ

Worg.jabref.logic.openoffice.backend.Codec52.isJabRefReferenceMarkName(java.lang.String)METHODH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaz z(3"
isFinalfalse"»
declarationString≤<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">isJabRefReferenceMarkName</mark>(String name)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeboolean*isJabRefReferenceMarkName2p
java.util.regex.Matcher.find()CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java{* {(.2â
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java{ {(#2ñ
Dorg.jabref.logic.openoffice.backend.Codec52?CITE_PATTERN@20.33:20.45CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java{ {(2Æ
\org.jabref.logic.openoffice.backend.Codec52.isJabRefReferenceMarkName(java.lang.String)!nameCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java{$ {((2≥
\org.jabref.logic.openoffice.backend.Codec52.isJabRefReferenceMarkName(java.lang.String)!name	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaz; z(?2`
booleanRETURN_TYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaz z(·
\org.jabref.logic.openoffice.backend.Codec52.isJabRefReferenceMarkName(java.lang.String)!name	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaz; z(?"
typeString"
isFinalfalse" 
declarationStringString name*name2b
java.lang.StringTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaz4 z(:Ê
morg.jabref.logic.openoffice.backend.Codec52.filterIsJabRefReferenceMarkName(java.util.List<java.lang.String>)METHODJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÉ É(>"
isFinalfalse"»
declarationString≤<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;String&gt; <mark class="method">filterIsJabRefReferenceMarkName</mark>(List&lt;String&gt; names)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<String>*filterIsJabRefReferenceMarkName2†
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÜ Ü(2õ
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÖ Ö(2q
java.util.Collection.stream()CALLJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÑ Ñ(2x
$java.util.stream.Collectors.toList()CALLJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÜ) Ü(/2«
sorg.jabref.logic.openoffice.backend.Codec52.filterIsJabRefReferenceMarkName(java.util.List<java.lang.String>)!namesCALLJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÑ Ñ(2´
Worg.jabref.logic.openoffice.backend.Codec52.isJabRefReferenceMarkName(java.lang.String)CALLJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÖ Ö(?2Ã
sorg.jabref.logic.openoffice.backend.Codec52.filterIsJabRefReferenceMarkName(java.util.List<java.lang.String>)!names	PARAMETERJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÉL É(Q2i
java.util.ListRETURN_TYPEJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÉ É(2t
java.lang.StringRETURN_TYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÉ É(˜
sorg.jabref.logic.openoffice.backend.Codec52.filterIsJabRefReferenceMarkName(java.util.List<java.lang.String>)!names	PARAMETERJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÉL É(Q"
typeList<String>"
isFinalfalse"'
declarationStringList<String> names*names2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÉ? É(C2m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.javaÉD É(Jò
Dorg.jabref.logic.openoffice.backend.Codec52?BIB_CITATION@19.32:19.44VALUEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java  (,"
isFinaltrue"
typeString"∆
declarationString∞<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">BIB_CITATION</mark> = "JR_cite";"
isStatictrue"
accessprivate*BIB_CITATION2b
java.lang.StringTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java (–
Dorg.jabref.logic.openoffice.backend.Codec52?CITE_PATTERN@20.33:20.45VALUEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java! (-"
isFinaltrue"
typePattern"◊
declarationString¡<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">CITE_PATTERN</mark> = // Pattern.compile(BIB_CITATION + "(\\d*)_(\\d*)_(.*)");
// citationType is always "1" "2" or "3"
Pattern.compile(BIB_CITATION + "(\\d*)_([123])_(.*)");"
isStatictrue"
accessprivate*CITE_PATTERN2i
java.util.regex.PatternTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java ( 2É
1java.util.regex.Pattern.compile(java.lang.String)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java (2ñ
Dorg.jabref.logic.openoffice.backend.Codec52?BIB_CITATION@19.32:19.44CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java ((¢	
:org.jabref.logic.openoffice.backend.Codec52.ParsedMarkNameCLASSH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java (&"6
package+org.jabref.logic.openoffice.backend.Codec52"
isFinalfalse"
inner classfalse"

isAbstractfalse"l
declarationStringW<mark class="modifier">public </mark><mark class="modifier">class </mark>ParsedMarkName"
accesspublic*ParsedMarkName2á
≠org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java- -(2•
Lorg.jabref.logic.openoffice.backend.Codec52.ParsedMarkName?index@35.28:35.33DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java# #(!2¨
Sorg.jabref.logic.openoffice.backend.Codec52.ParsedMarkName?citationType@39.34:39.46DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java'" '(.2¨
Sorg.jabref.logic.openoffice.backend.Codec52.ParsedMarkName?citationKeys@43.34:43.46DECLARATIONH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java+" +(.™
≠org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)CONSTRUCTORH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java- -("°
declarationStringã<mark class="modifier"> </mark><mark class="method">ParsedMarkName</mark>(String index<mark class="modifier"><mark class="modifier">,</mark></mark> CitationType citationType<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; citationKeys)*ParsedMarkName2u
#java.util.Objects.requireNonNull(T)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java. .("2u
#java.util.Objects.requireNonNull(T)CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java/ /("2Ü
≥org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!indexCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java.# .((2ç
∫org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!citationKeysCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java/# /(/2Ü
≥org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!indexCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java0 0(2ç
∫org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!citationTypeCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java1  1(,2ç
∫org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!citationKeysCALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java2  2(,2û
Lorg.jabref.logic.openoffice.backend.Codec52.ParsedMarkName?index@35.28:35.33CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java0 0(2•
Sorg.jabref.logic.openoffice.backend.Codec52.ParsedMarkName?citationType@39.34:39.46CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java1 1(2•
Sorg.jabref.logic.openoffice.backend.Codec52.ParsedMarkName?citationKeys@43.34:43.46CALLH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java2 2(2ã
≥org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!index	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java- -(#2í
∫org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!citationType	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java-2 -(>2í
∫org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!citationKeys	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java-M -(Y2ì
:org.jabref.logic.openoffice.backend.Codec52.ParsedMarkNameRETURN_TYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java- -(ª
≥org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!index	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java- -(#"
typeString"
isFinalfalse"!
declarationStringString index*index2b
java.lang.StringTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java- -(˚
∫org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!citationType	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java-2 -(>"
typeCitationType"
isFinalfalse".
declarationStringCitationType citationType*citationType2Ä
.org.jabref.model.openoffice.style.CitationTypeTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java-% -(1«
∫org.jabref.logic.openoffice.backend.Codec52.ParsedMarkName.ParsedMarkName(java.lang.String, org.jabref.model.openoffice.style.CitationType, java.util.List<java.lang.String>)!citationKeys	PARAMETERH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java-M -(Y"
typeList<String>"
isFinalfalse".
declarationStringList<String> citationKeys*citationKeys2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java-@ -(D2k
java.lang.StringTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java-E -(Kﬁ
Lorg.jabref.logic.openoffice.backend.Codec52.ParsedMarkName?index@35.28:35.33VALUEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java# #(!"
isFinaltrue"
typeString"ã
declarationStringv<mark class="modifier">public </mark><mark class="modifier">final </mark>String <mark class="class-field">index</mark>"
isStaticfalse"
accesspublic*index2b
java.lang.StringTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java# #(ü
Sorg.jabref.logic.openoffice.backend.Codec52.ParsedMarkName?citationType@39.34:39.46VALUEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java'" '(."
isFinaltrue"
typeCitationType"ô
declarationStringÉ<mark class="modifier">public </mark><mark class="modifier">final </mark>CitationType <mark class="class-field">citationType</mark>"
isStaticfalse"
accesspublic*citationType2Ä
.org.jabref.model.openoffice.style.CitationTypeTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java' '(!Î
Sorg.jabref.logic.openoffice.backend.Codec52.ParsedMarkName?citationKeys@43.34:43.46VALUEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java+" +(."
isFinaltrue"
typeList<String>"ô
declarationStringÉ<mark class="modifier">public </mark><mark class="modifier">final </mark>List<String> <mark class="class-field">citationKeys</mark>"
isStaticfalse"
accesspublic*citationKeys2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java+ +(2k
java.lang.StringTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\openoffice\backend\Codec52.java+ +( 