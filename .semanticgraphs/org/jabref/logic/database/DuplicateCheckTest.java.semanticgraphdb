
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaìB
,org.jabref.logic.database.DuplicateCheckTestCLASSI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java ("$
packageorg.jabref.logic.database"
isFinalfalse"
inner classfalse"

isAbstractfalse"p
declarationString[<mark class="modifier">public </mark><mark class="modifier">class </mark>DuplicateCheckTest"
accesspublic*DuplicateCheckTest2ô
?org.jabref.logic.database.DuplicateCheckTest.getSimpleArticle()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (,2û
Dorg.jabref.logic.database.DuplicateCheckTest.getSimpleIncollection()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java% %(12ò
>org.jabref.logic.database.DuplicateCheckTest.getSimpleInbook()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java. .(+2ú
Borg.jabref.logic.database.DuplicateCheckTest.getUnrelatedArticle()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java8 8(/2é
4org.jabref.logic.database.DuplicateCheckTest.setUp()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java@ @(2©
Oorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthor()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaI I(02≥
Yorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthorAndUmlauts()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaQ Q(:2Ø
Uorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentAuthors()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaY Y(62≠
Sorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTypes()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaa a(42≥
Yorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javai i(:2Ø
Uorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java{ {(62∞
Torg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentVolume()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaç ç(52π
]org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTitleSameVolume()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¢ ¢(>2™
Norg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePages()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∑ ∑(/2∫
^org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePagesOneEntryNoVolume()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaŒ Œ(?2µ
Yorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeNoJournal()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‰ ‰(:2¥
Xorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentTitleNoJournal()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˘ ˘(92∫
^org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeAllOthersEqual()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaé é(?2 
norg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •(O2ö
>org.jabref.logic.database.DuplicateCheckTest.wordCorrelation()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaº º(2≠
Qorg.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesAreNoDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java« «(22æ
borg.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesWithDifferentDoisAreNoDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÃ Ã(C2∏
\org.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesWithEqualDoisAreDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‘ ‘(=2∏
\org.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesWithEqualPmidAreDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‹ ‹(=2∫
^org.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesWithEqualEprintAreDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‰ ‰(?2æ
borg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameDoiButDifferentTypesAreDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÏ Ï(C2º
`org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDoiContainingUnderscoresAreNotEqual()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaı ı(A2ø
corg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameISBNButDifferentTypesAreDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÄ Ä(D2¿
dorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâ$ â(Y2®
Àorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaö ö(F2¬
forg.jabref.logic.database.DuplicateCheckTest.inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java§ §(G2∏
\org.jabref.logic.database.DuplicateCheckTest.twoBooksWithDifferentEditionsAreNotDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´(=2≥
Worg.jabref.logic.database.DuplicateCheckTest.sameBooksWithMissingEditionAreDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaæ æ(82º
`org.jabref.logic.database.DuplicateCheckTest.sameBooksWithPartiallyMissingEditionAreDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaœ œ(A2π
]org.jabref.logic.database.DuplicateCheckTest.sameBooksWithDifferentEditionsAreNotDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java· ·(>2Õ
qorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˚	 ˚(K2œ
sorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ	 Ç(M2‘
xorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâ	 â(R2ª
_org.jabref.logic.database.DuplicateCheckTest.differentArticlesFromTheSameBookAreNotDuplicates()DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaë	 ë(92†
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java ("2£
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (%2ü
Eorg.jabref.logic.database.DuplicateCheckTest?simpleInbook@26.21:26.33DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (!2•
Korg.jabref.logic.database.DuplicateCheckTest?simpleIncollection@27.21:27.39DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java ('2£
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (+ﬂ	
?org.jabref.logic.database.DuplicateCheckTest.getSimpleArticle()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (,"
isFinalfalse"ò
declarationStringÇ<mark class="modifier">private </mark><mark class="modifier">static </mark>BibEntry <mark class="method">getSimpleArticle</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeBibEntry*getSimpleArticle2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java" "(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java! !(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java   (2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (2y
org.jabref.model.entry.BibEntryRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (ÿ
Dorg.jabref.logic.database.DuplicateCheckTest.getSimpleIncollection()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java% %(1"
isFinalfalse"ù
declarationStringá<mark class="modifier">private </mark><mark class="modifier">static </mark>BibEntry <mark class="method">getSimpleIncollection</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeBibEntry*getSimpleIncollection2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java+ +(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java* *(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java) )(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java( ((2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java' '(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java& &(2y
org.jabref.model.entry.BibEntryRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java% %(˚
>org.jabref.logic.database.DuplicateCheckTest.getSimpleInbook()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java. .(+"
isFinalfalse"ó
declarationStringÅ<mark class="modifier">private </mark><mark class="modifier">static </mark>BibEntry <mark class="method">getSimpleInbook</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeBibEntry*getSimpleInbook2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java5 5(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java4 4(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java3 3(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java2 2(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java1 1(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java0 0(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java/ /(2y
org.jabref.model.entry.BibEntryRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java. .(Ë	
Borg.jabref.logic.database.DuplicateCheckTest.getUnrelatedArticle()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java8 8(/"
isFinalfalse"õ
declarationStringÖ<mark class="modifier">private </mark><mark class="modifier">static </mark>BibEntry <mark class="method">getUnrelatedArticle</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeBibEntry*getUnrelatedArticle2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java< <(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java; ;(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java: :(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java9 9(2y
org.jabref.model.entry.BibEntryRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java8 8(¡
4org.jabref.logic.database.DuplicateCheckTest.setUp()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java@ @("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2í
?org.jabref.logic.database.DuplicateCheckTest.getSimpleArticle()CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaA A((2ï
Borg.jabref.logic.database.DuplicateCheckTest.getUnrelatedArticle()CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaB B(.2ë
>org.jabref.logic.database.DuplicateCheckTest.getSimpleInbook()CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaC C(&2ó
Dorg.jabref.logic.database.DuplicateCheckTest.getSimpleIncollection()CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaD D(22∑
dorg.jabref.logic.database.DuplicateCheck.DuplicateCheck(org.jabref.model.entry.BibEntryTypesManager)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaE E(-2ï
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaE2 E(F2ô
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaA A(2ú
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaB B(2ò
Eorg.jabref.logic.database.DuplicateCheckTest?simpleInbook@26.21:26.33CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaC C(2û
Korg.jabref.logic.database.DuplicateCheckTest?simpleIncollection@27.21:27.39CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaD D(2ú
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaE E(2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java@ @(¯
Oorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthor()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaI I(0"
isFinalfalse"∆
declarationString∞<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithSameAuthor</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* duplicateDetectionWithSameAuthor2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaJ? J(H2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaK? K(H2ı
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaM$ M(/2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaJ J(#2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaK K(#2ú
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaM M(#2≤
_org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthor()?one@74.17:74.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaM0 M(32≤
_org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthor()?two@75.17:75.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaM5 M(82π
_org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthor()?one@74.17:74.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaJ J(2π
_org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthor()?two@75.17:75.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaK K(2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaI I(Í
_org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthor()?one@74.17:74.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaJ J("
typeBibEntry"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob")*one2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaJ J(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaJ? J(H2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaJ J(#Í
_org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthor()?two@75.17:75.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaK K("
typeBibEntry"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob")*two2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaK K(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaK? K(H2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaK K(#æ
Yorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthorAndUmlauts()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaQ Q(:"
isFinalfalse"–
declarationString∫<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithSameAuthorAndUmlauts</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid**duplicateDetectionWithSameAuthorAndUmlauts2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaR? R(H2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaS? S(H2ı
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaU$ U(/2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaR R(#2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaS S(#2ú
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaU U(#2º
iorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthorAndUmlauts()?one@82.17:82.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaU0 U(32º
iorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthorAndUmlauts()?two@83.17:83.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaU5 U(82√
iorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthorAndUmlauts()?one@82.17:82.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaR R(2√
iorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthorAndUmlauts()?two@83.17:83.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaS S(2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaQ Q(ˆ
iorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthorAndUmlauts()?one@82.17:82.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaR R("
typeBibEntry"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob√§")*one2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaR R(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaR? R(H2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaR R(#Ö
iorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameAuthorAndUmlauts()?two@83.17:83.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaS S("
typeBibEntry"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Bill{\\\"{a}} Bob{\\\"{a}}")*two2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaS S(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaS? S(H2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaS S(#¢
Uorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentAuthors()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaY Y(6"
isFinalfalse"Ã
declarationString∂<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithDifferentAuthors</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*&duplicateDetectionWithDifferentAuthors2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaZ? Z(H2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java[? [(H2ı
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java]% ](02£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaZ Z(#2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java[ [(#2ú
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java] ]($2∏
eorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentAuthors()?one@90.17:90.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java]1 ](42∏
eorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentAuthors()?two@91.17:91.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java]6 ](92ø
eorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentAuthors()?one@90.17:90.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaZ Z(2ø
eorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentAuthors()?two@91.17:91.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java[ [(2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaY Y(
eorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentAuthors()?one@90.17:90.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaZ Z("
typeBibEntry"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob")*one2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaZ Z(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaZ? Z(H2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaZ Z(#Ú
eorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentAuthors()?two@91.17:91.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java[ [("
typeBibEntry"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "James Joyce")*two2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java[ [(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java[? [(H2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java[ [(#î
Sorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTypes()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaa a(4"
isFinalfalse" 
declarationString¥<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithDifferentTypes</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*$duplicateDetectionWithDifferentTypes2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javab? b(H2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javac< c(E2ı
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javae% e(02£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javab b(#2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javac c(#2ú
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javae e($2∂
corg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTypes()?one@98.17:98.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javae1 e(42∂
corg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTypes()?two@99.17:99.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javae6 e(92Ω
corg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTypes()?one@98.17:98.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javab b(2Ω
corg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTypes()?two@99.17:99.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javac c(2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaa a(Ó
corg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTypes()?one@98.17:98.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javab b("
typeBibEntry"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob")*one2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javab b(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javab? b(H2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javab b(#Î
corg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTypes()?two@99.17:99.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javac c("
typeBibEntry"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Book).withField(StandardField.AUTHOR, "Billy Bob")*two2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javac c(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javac< c(E2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javac c(#ﬁ 
Yorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javai i(:"
isFinalfalse"–
declarationString∫<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithSameYearTitleJournal</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid**duplicateDetectionWithSameYearTitleJournal2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javan n(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javam m(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javal l(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javak k(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javat t(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javas s(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javar r(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaq q(2ı
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javav$ v(/2’
Åorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaw* w(@2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaj j(#2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javap p(#2ú
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javav v(#2æ
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()?one@106.17:106.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javav0 v(32æ
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()?two@112.17:112.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javav5 v(82æ
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()?one@106.17:106.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javawA w(D2æ
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()?two@112.17:112.20CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javawF w(I2≈
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()?one@106.17:106.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaj j(2≈
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()?two@112.17:112.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javap p(2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javai i(ã
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()?one@106.17:106.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaj j("
typeBibEntry"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A")*one2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaj j(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javan n(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javam m(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javal l(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javak k(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaj j(#ã
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSameYearTitleJournal()?two@112.17:112.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javap p("
typeBibEntry"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A")*two2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javap p(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javat t(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javas s(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javar r(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaq q(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javap p(#÷ 
Uorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()METHODI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java{ {(6"
isFinalfalse"Ã
declarationString∂<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithDifferentJournal</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*&duplicateDetectionWithDifferentJournal2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÄ Ä(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java~ ~(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java} }(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÜ Ü(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÖ Ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ Ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaà$ à(/2◊
Åorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâ* â(@2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java| |(#2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(#2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaà à(#2º
gorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()?one@124.17:124.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaà0 à(32º
gorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()?two@130.17:130.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaà5 à(82º
gorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()?one@124.17:124.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâA â(D2º
gorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()?two@130.17:130.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâF â(I2¡
gorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()?one@124.17:124.20DECLARATIONI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java| |(2√
gorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()?two@130.17:130.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java{ {(â
gorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()?one@124.17:124.20VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java| |("
typeBibEntry"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A")*one2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java| |(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÄ Ä(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java~ ~(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java} }(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java| |(#ï
gorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentJournal()?two@130.17:130.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç("
typeBibEntry"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "B")*two2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÜ Ü(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÖ Ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ Ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(#·!
Torg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentVolume()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaç ç(5"
isFinalfalse"À
declarationStringµ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithDifferentVolume</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*%duplicateDetectionWithDifferentVolume2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaî î(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaì ì(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí í(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaë ë(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaê ê(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaè è(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaú ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaõ õ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaö ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaô ô(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaò ò(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaó ó(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû$ û(/2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaé é(#2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javañ ñ(#2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû û(#2ª
forg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentVolume()?one@142.17:142.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû0 û(32ª
forg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentVolume()?two@150.17:150.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû5 û(82¬
forg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentVolume()?one@142.17:142.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaé é(2¬
forg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentVolume()?two@150.17:150.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javañ ñ(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaç ç(Õ
forg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentVolume()?one@142.17:142.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaé é("
typeBibEntry"
isFinalfalse"˙
declarationString‰<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A").withField(StandardField.NUMBER, "1").withField(StandardField.VOLUME, "21")*one2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaé é(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaî î(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaì ì(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí í(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaë ë(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaê ê(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaè è(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaé é(#Õ
forg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentVolume()?two@150.17:150.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javañ ñ("
typeBibEntry"
isFinalfalse"˙
declarationString‰<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A").withField(StandardField.NUMBER, "1").withField(StandardField.VOLUME, "22")*two2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javañ ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaú ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaõ õ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaö ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaô ô(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaò ò(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaó ó(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javañ ñ(#†"
]org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTitleSameVolume()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¢ ¢(>"
isFinalfalse"‘
declarationStringæ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithDifferentTitleSameVolume</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*.duplicateDetectionWithDifferentTitleSameVolume2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java© ©(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java® ®(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß ß(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¶ ¶(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java§ §(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java± ±(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∞ ∞(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaØ Ø(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÆ Æ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≠ ≠(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¨ ¨(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥% ≥(02•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java£ £(#2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´(#2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥ ≥($2ƒ
oorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTitleSameVolume()?one@163.17:163.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥1 ≥(42ƒ
oorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTitleSameVolume()?two@171.17:171.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥6 ≥(92À
oorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTitleSameVolume()?one@163.17:163.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java£ £(2À
oorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTitleSameVolume()?two@171.17:171.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¢ ¢(’
oorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTitleSameVolume()?one@163.17:163.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java£ £("
typeBibEntry"
isFinalfalse"˘
declarationString„<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "").withField(StandardField.NUMBER, "1").withField(StandardField.VOLUME, "21")*one2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java£ £(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java© ©(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java® ®(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß ß(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¶ ¶(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java§ §(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java£ £(#€
oorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithDifferentTitleSameVolume()?two@171.17:171.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´("
typeBibEntry"
isFinalfalse"ˇ
declarationStringÈ<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "Another title").withField(StandardField.JOURNAL, "").withField(StandardField.NUMBER, "1").withField(StandardField.VOLUME, "21")*two2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java± ±(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∞ ∞(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaØ Ø(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÆ Æ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≠ ≠(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¨ ¨(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´(#•$
Norg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePages()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∑ ∑(/"
isFinalfalse"≈
declarationStringØ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithSamePages</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*duplicateDetectionWithSamePages2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø ø(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaæ æ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaΩ Ω(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaº º(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaª ª(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∫ ∫(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaπ π(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java» »(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java« «(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∆ ∆(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≈ ≈(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaƒ ƒ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java√ √(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¬ ¬(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java $  (/2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏ ∏(#2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡ ¡(#2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java   (#2µ
`org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePages()?one@184.17:184.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java 0  (32µ
`org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePages()?two@193.17:193.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java 5  (82º
`org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePages()?one@184.17:184.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏ ∏(2º
`org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePages()?two@193.17:193.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡ ¡(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∑ ∑(©
`org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePages()?one@184.17:184.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏ ∏("
typeBibEntry"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A").withField(StandardField.VOLUME, "21").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*one2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏ ∏(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø ø(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaæ æ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaΩ Ω(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaº º(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaª ª(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∫ ∫(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaπ π(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏ ∏(#©
`org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePages()?two@193.17:193.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡ ¡("
typeBibEntry"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A").withField(StandardField.VOLUME, "21").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*two2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡ ¡(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java» »(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java« «(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∆ ∆(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≈ ≈(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaƒ ƒ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java√ √(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¬ ¬(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡ ¡(#ﬁ#
^org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePagesOneEntryNoVolume()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaŒ Œ(?"
isFinalfalse"’
declarationStringø<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionWithSamePagesOneEntryNoVolume</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*/duplicateDetectionWithSamePagesOneEntryNoVolume2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java’ ’(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‘ ‘(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java” ”(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java“ “(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java— —(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java– –(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaﬁ ﬁ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java› ›(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‹ ‹(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java€ €(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java⁄ ⁄(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaŸ Ÿ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÿ ÿ(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‡$ ‡(/2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaœ œ(#2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java◊ ◊(#2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‡ ‡(#2≈
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePagesOneEntryNoVolume()?one@207.17:207.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‡0 ‡(32≈
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePagesOneEntryNoVolume()?two@215.17:215.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‡5 ‡(82Ã
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePagesOneEntryNoVolume()?one@207.17:207.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaœ œ(2Ã
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePagesOneEntryNoVolume()?two@215.17:215.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java◊ ◊(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaŒ Œ(‹
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePagesOneEntryNoVolume()?one@207.17:207.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaœ œ("
typeBibEntry"
isFinalfalse"ˇ
declarationStringÈ<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*one2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaœ œ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java’ ’(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‘ ‘(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java” ”(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java“ “(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java— —(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java– –(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaœ œ(#π
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionWithSamePagesOneEntryNoVolume()?two@215.17:215.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java◊ ◊("
typeBibEntry"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A").withField(StandardField.VOLUME, "21").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*two2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java◊ ◊(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaﬁ ﬁ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java› ›(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‹ ‹(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java€ €(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java⁄ ⁄(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaŸ Ÿ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÿ ÿ(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java◊ ◊(#Ñ"
Yorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeNoJournal()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‰ ‰(:"
isFinalfalse"–
declarationString∫<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionDifferentVolumeNoJournal</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid**duplicateDetectionDifferentVolumeNoJournal2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÎ Î(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÍ Í(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÈ È(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaË Ë(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÁ Á(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÊ Ê(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÛ Û(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÚ Ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÒ Ò(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÔ Ô(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓ Ó(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaı$ ı(/2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÂ Â(#2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì(#2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaı ı(#2¿
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeNoJournal()?one@229.17:229.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaı0 ı(32¿
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeNoJournal()?two@237.17:237.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaı5 ı(82«
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeNoJournal()?one@229.17:229.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÂ Â(2«
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeNoJournal()?two@237.17:237.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‰ ‰(◊
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeNoJournal()?one@229.17:229.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÂ Â("
typeBibEntry"
isFinalfalse"ˇ
declarationStringÈ<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.VOLUME, "21").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*one2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÂ Â(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÎ Î(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÍ Í(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÈ È(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaË Ë(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÁ Á(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÊ Ê(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÂ Â(#◊
korg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeNoJournal()?two@237.17:237.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì("
typeBibEntry"
isFinalfalse"ˇ
declarationStringÈ<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.VOLUME, "22").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*two2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÛ Û(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÚ Ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÒ Ò(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÔ Ô(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓ Ó(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì(#˝!
Xorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentTitleNoJournal()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˘ ˘(9"
isFinalfalse"œ
declarationStringπ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionDifferentTitleNoJournal</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*)duplicateDetectionDifferentTitleNoJournal2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÄ Ä(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaˇ ˇ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˛ ˛(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˝ ˝(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸ ¸(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˚ ˚(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaà à(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaá á(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÜ Ü(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÖ Ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ Ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä% ä(02•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˙ ˙(#2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(#2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä ä($2ø
jorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentTitleNoJournal()?one@250.17:250.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä1 ä(42ø
jorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentTitleNoJournal()?two@258.17:258.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä6 ä(92∆
jorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentTitleNoJournal()?one@250.17:250.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˙ ˙(2∆
jorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentTitleNoJournal()?two@258.17:258.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˘ ˘(÷
jorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentTitleNoJournal()?one@250.17:250.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˙ ˙("
typeBibEntry"
isFinalfalse"ˇ
declarationStringÈ<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.VOLUME, "21").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*one2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˙ ˙(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÄ Ä(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaˇ ˇ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˛ ˛(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˝ ˝(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸ ¸(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˚ ˚(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˙ ˙(#‹
jorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentTitleNoJournal()?two@258.17:258.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç("
typeBibEntry"
isFinalfalse"Ö
declarationStringÔ<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "Another title").withField(StandardField.VOLUME, "22").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*two2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaà à(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaá á(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÜ Ü(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÖ Ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ Ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(#ï%
^org.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeAllOthersEqual()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaé é(?"
isFinalfalse"’
declarationStringø<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionDifferentVolumeAllOthersEqual</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*/duplicateDetectionDifferentVolumeAllOthersEqual2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javañ ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaï ï(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaî î(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaì ì(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí í(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaë ë(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaê ê(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü ü(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû û(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaù ù(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaú ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaõ õ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaö ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaô ô(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java°$ °(/2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaè è(#2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaò ò(#2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java° °(#2≈
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeAllOthersEqual()?one@271.17:271.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java°0 °(32≈
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeAllOthersEqual()?two@280.17:280.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java°5 °(82Ã
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeAllOthersEqual()?one@271.17:271.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaè è(2Ã
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeAllOthersEqual()?two@280.17:280.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaò ò(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaé é(π
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeAllOthersEqual()?one@271.17:271.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaè è("
typeBibEntry"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A").withField(StandardField.VOLUME, "21").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*one2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaè è(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javañ ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaï ï(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaî î(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaì ì(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí í(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaë ë(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaê ê(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaè è(#π
porg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeAllOthersEqual()?two@280.17:280.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaò ò("
typeBibEntry"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A").withField(StandardField.VOLUME, "22").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*two2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaò ò(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü ü(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû û(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaù ù(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaú ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaõ õ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaö ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaô ô(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaò ò(#â&
norg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •(O"
isFinalfalse"Â
declarationStringœ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*?duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≠ ≠(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¨ ¨(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java™ ™(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java© ©(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java® ®(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß ß(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∂ ∂(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaµ µ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¥ ¥(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥ ≥(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≤ ≤(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java± ±(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∞ ∞(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏$ ∏(/2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¶ ¶(#2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaØ Ø(#2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏ ∏(#2÷
Äorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual()?one@294.17:294.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏0 ∏(32÷
Äorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual()?two@303.17:303.20CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏5 ∏(82›
Äorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual()?one@294.17:294.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¶ ¶(2›
Äorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual()?two@303.17:303.20DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaØ Ø(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •( 
Äorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual()?one@294.17:294.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¶ ¶("
typeBibEntry"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>BibEntry <mark class="class-field">one</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "A").withField(StandardField.VOLUME, "21").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*one2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¶ ¶(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≠ ≠(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¨ ¨(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java™ ™(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java© ©(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java® ®(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß ß(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¶ ¶(# 
Äorg.jabref.logic.database.DuplicateCheckTest.duplicateDetectionDifferentVolumeDifferentJournalAllOthersEqual()?two@303.17:303.20VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaØ Ø("
typeBibEntry"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>BibEntry <mark class="class-field">two</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Billy Bob").withField(StandardField.YEAR, "2005").withField(StandardField.TITLE, "A title").withField(StandardField.JOURNAL, "B").withField(StandardField.VOLUME, "22").withField(StandardField.NUMBER, "1").withField(StandardField.PAGES, "334--337")*two2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaØ Ø(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∂ ∂(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaµ µ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¥ ¥(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥ ≥(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≤ ≤(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java± ±(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∞ ∞(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaØ Ø(#≠
>org.jabref.logic.database.DuplicateCheckTest.wordCorrelation()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaº º("
isFinalfalse"µ
declarationStringü<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">wordCorrelation</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*wordCorrelation2≤
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡* ¡(:2≤
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¬+ ¬(;2≤
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java√+ √(;2§
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d1@317.15:317.17CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡; ¡(=2§
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d2@318.15:318.17CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡? ¡(A2§
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d1@317.15:317.17CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¬< ¬(>2§
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d3@319.15:319.17CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¬@ ¬(B2§
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d2@318.15:318.17CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java√< √(>2§
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d3@319.15:319.17CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java√@ √(B2´
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d1@317.15:317.17DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaΩ Ω(2´
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d2@318.15:318.17DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaæ æ(2´
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d3@319.15:319.17DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø ø(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaº º(›
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d1@317.15:317.17VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaΩ Ω("
typeString"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>String <mark class="class-field">d1</mark> = "Characterization of Calanus finmarchicus habitat in the North Sea"*d12e
java.lang.StringTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaΩ Ω(›
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d2@318.15:318.17VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaæ æ("
typeString"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>String <mark class="class-field">d2</mark> = "Characterization of Calunus finmarchicus habitat in the North Sea"*d22e
java.lang.StringTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaæ æ(›
Oorg.jabref.logic.database.DuplicateCheckTest.wordCorrelation()?d3@319.15:319.17VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø ø("
typeString"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>String <mark class="class-field">d3</mark> = "Characterization of Calanus glacialissss habitat in the South Sea"*d32e
java.lang.StringTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø ø(≠

Qorg.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesAreNoDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java« «(2"
isFinalfalse"»
declarationString≤<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">twoUnrelatedEntriesAreNoDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*"twoUnrelatedEntriesAreNoDuplicates2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java»% »(02û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java» »($2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java»1 »(>2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java»@ »(P2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java« «(ã
borg.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesWithDifferentDoisAreNoDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÃ Ã(C"
isFinalfalse"Ÿ
declarationString√<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">twoUnrelatedEntriesWithDifferentDoisAreNoDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*3twoUnrelatedEntriesWithDifferentDoisAreNoDuplicates2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÕ Õ(2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaŒ Œ(!2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java–% –(02õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÕ Õ(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaŒ Œ(2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java– –($2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java–1 –(>2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java–@ –(P2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÃ Ã(˘
\org.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesWithEqualDoisAreDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‘ ‘(="
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">twoUnrelatedEntriesWithEqualDoisAreDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*-twoUnrelatedEntriesWithEqualDoisAreDuplicates2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java’ ’(2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java÷ ÷(!2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÿ$ ÿ(/2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java’ ’(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java÷ ÷(2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÿ ÿ(#2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÿ0 ÿ(=2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÿ? ÿ(O2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‘ ‘(˘
\org.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesWithEqualPmidAreDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‹ ‹(="
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">twoUnrelatedEntriesWithEqualPmidAreDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*-twoUnrelatedEntriesWithEqualPmidAreDuplicates2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java› ›(2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaﬁ ﬁ(!2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‡$ ‡(/2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java› ›(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaﬁ ﬁ(2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‡ ‡(#2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‡0 ‡(=2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‡? ‡(O2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‹ ‹(ˇ
^org.jabref.logic.database.DuplicateCheckTest.twoUnrelatedEntriesWithEqualEprintAreDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‰ ‰(?"
isFinalfalse"’
declarationStringø<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">twoUnrelatedEntriesWithEqualEprintAreDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*/twoUnrelatedEntriesWithEqualEprintAreDuplicates2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÂ Â(2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÊ Ê(!2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaË$ Ë(/2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÂ Â(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÊ Ê(2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaË Ë(#2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaË0 Ë(=2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaË? Ë(O2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‰ ‰(â
borg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameDoiButDifferentTypesAreDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÏ Ï(C"
isFinalfalse"Ÿ
declarationString√<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">twoEntriesWithSameDoiButDifferentTypesAreDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*3twoEntriesWithSameDoiButDifferentTypesAreDuplicates2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì(2|
'org.jabref.model.entry.BibEntry.clone()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓG Ó(L2§
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÔ# Ô(*2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÒ$ Ò(/2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì(2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓ9 Ó(F2·
ãorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameDoiButDifferentTypesAreDuplicates()?duplicateWithDifferentType@366.17:366.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÔ Ô("2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÒ Ò(#2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÒ0 Ò(=2·
ãorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameDoiButDifferentTypesAreDuplicates()?duplicateWithDifferentType@366.17:366.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÒ? Ò(Y2Ë
ãorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameDoiButDifferentTypesAreDuplicates()?duplicateWithDifferentType@366.17:366.43DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓ Ó(+2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÏ Ï(÷
ãorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameDoiButDifferentTypesAreDuplicates()?duplicateWithDifferentType@366.17:366.43VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓ Ó(+"
typeBibEntry"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibEntry <mark class="class-field">duplicateWithDifferentType</mark> = (BibEntry) simpleArticle.clone()*duplicateWithDifferentType2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓ Ó(2|
'org.jabref.model.entry.BibEntry.clone()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓG Ó(L2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓ9 Ó(FŸ
`org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDoiContainingUnderscoresAreNotEqual()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaı ı(A"
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">twoEntriesWithDoiContainingUnderscoresAreNotEqual</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*1twoEntriesWithDoiContainingUnderscoresAreNotEqual2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaˆ ˆ(2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¯ ¯(!2§
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˙# ˙(*2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸% ¸(02õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaˆ ˆ(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¯ ¯(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˘. ˘(>2ﬂ
âorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDoiContainingUnderscoresAreNotEqual()?duplicateWithDifferentType@377.17:377.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˙ ˙("2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸ ¸($2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸1 ¸(>2ﬂ
âorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDoiContainingUnderscoresAreNotEqual()?duplicateWithDifferentType@377.17:377.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸@ ¸(Z2Ê
âorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDoiContainingUnderscoresAreNotEqual()?duplicateWithDifferentType@377.17:377.43DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˘ ˘(+2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaı ı(»
âorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDoiContainingUnderscoresAreNotEqual()?duplicateWithDifferentType@377.17:377.43VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˘ ˘(+"
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">duplicateWithDifferentType</mark> = unrelatedArticle*duplicateWithDifferentType2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˘ ˘(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˘. ˘(>Î
corg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameISBNButDifferentTypesAreDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÄ Ä(D"
isFinalfalse"⁄
declarationStringƒ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">twoEntriesWithSameISBNButDifferentTypesAreDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*4twoEntriesWithSameISBNButDifferentTypesAreDuplicates2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÅ Å(2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(!2§
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ# Ñ(*2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÜ$ Ü(/2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÅ Å(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ. É(>2‚
åorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameISBNButDifferentTypesAreDuplicates()?duplicateWithDifferentType@387.17:387.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ Ñ("2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÜ Ü(#2õ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÜ0 Ü(=2‚
åorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameISBNButDifferentTypesAreDuplicates()?duplicateWithDifferentType@387.17:387.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÜ? Ü(Y2È
åorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameISBNButDifferentTypesAreDuplicates()?duplicateWithDifferentType@387.17:387.43DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É(+2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÄ Ä(À
åorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithSameISBNButDifferentTypesAreDuplicates()?duplicateWithDifferentType@387.17:387.43VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É(+"
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">duplicateWithDifferentType</mark> = unrelatedArticle*duplicateWithDifferentType2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É(2û
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ. É(>í
dorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâ$ â(Y"
isFinalfalse"À
declarationStringµ<mark class="modifier">public </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">twoEntriesWithDifferentSpecificFieldsAreNotDuplicates</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeStream<Arguments>*5twoEntriesWithDifferentSpecificFieldsAreNotDuplicates2ì
>org.jabref.logic.database.DuplicateCheckTest.getSimpleInbook()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaå å(,2ì
>org.jabref.logic.database.DuplicateCheckTest.getSimpleInbook()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaê ê(,2ô
Dorg.jabref.logic.database.DuplicateCheckTest.getSimpleIncollection()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí í(22ô
Dorg.jabref.logic.database.DuplicateCheckTest.getSimpleIncollection()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaî î(22s
java.util.stream.StreamRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâ â(2ê
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâ â("Ê1
Àorg.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaö ö(F"
isFinalfalse"˚
declarationStringÂ <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">twoEntriesWithDifferentSpecificFieldsAreNotDuplicates</mark>(final BibEntry cloneable<mark class="modifier"><mark class="modifier">,</mark></mark> final Field field<mark class="modifier"><mark class="modifier">,</mark></mark> final String firstValue<mark class="modifier"><mark class="modifier">,</mark></mark> final String secondValue)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*5twoEntriesWithDifferentSpecificFieldsAreNotDuplicates2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû? û(H2|
'org.jabref.model.entry.BibEntry.clone()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû6 û(;2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü? ü(H2|
'org.jabref.model.entry.BibEntry.clone()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü6 ü(;2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java†% †(02´
’org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!cloneableCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû, û(52ß
—org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!fieldCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaûI û(N2¨
÷org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!firstValueCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaûP û(Z2´
’org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!cloneableCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü, ü(52ß
—org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!fieldCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaüI ü(N2≠
◊org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!secondValueCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaüP ü([2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java† †($2∂
‡org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)?entry1@414.23:414.29CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java†1 †(72∂
‡org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)?entry2@415.23:415.29CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java†9 †(?2∞
’org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!cloneable	PARAMETERK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaöV ö(_2¨
—org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!field	PARAMETERK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaõS õ(X2±
÷org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!firstValue	PARAMETERK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaúT ú(^2≤
◊org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!secondValue	PARAMETERK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaùT ù(_2Ω
‡org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)?entry1@414.23:414.29DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû û(2Ω
‡org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)?entry2@415.23:415.29DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü ü(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaö ö(ﬁ
‡org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)?entry1@414.23:414.29VALUEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû û("
typeBibEntry"
isFinaltrue"«
declarationString±<mark class="modifier"> </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">entry1</mark> = ((BibEntry) cloneable.clone()).withField(field, firstValue)*entry12t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû û(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû? û(H2|
'org.jabref.model.entry.BibEntry.clone()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû6 û(;2´
’org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!cloneableCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû, û(52ß
—org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!fieldCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaûI û(N2¨
÷org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!firstValueCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaûP û(Z‡
‡org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)?entry2@415.23:415.29VALUEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü ü("
typeBibEntry"
isFinaltrue"»
declarationString≤<mark class="modifier"> </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">entry2</mark> = ((BibEntry) cloneable.clone()).withField(field, secondValue)*entry22t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü ü(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü? ü(H2|
'org.jabref.model.entry.BibEntry.clone()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü6 ü(;2´
’org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!cloneableCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü, ü(52ß
—org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!fieldCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaüI ü(N2≠
◊org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!secondValueCALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaüP ü([˝
’org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!cloneable	PARAMETERK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaöV ö(_"
typeBibEntry"
isFinaltrue"'
declarationStringBibEntry cloneable*	cloneable2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaöM ö(UÓ
—org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!field	PARAMETERK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaõS õ(X"
typeField"
isFinaltrue" 
declarationStringField field*field2w
"org.jabref.model.entry.field.FieldTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaõM õ(RÌ
÷org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!firstValue	PARAMETERK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaúT ú(^"
typeString"
isFinaltrue"&
declarationStringString firstValue*
firstValue2e
java.lang.StringTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaúM ú(S
◊org.jabref.logic.database.DuplicateCheckTest.twoEntriesWithDifferentSpecificFieldsAreNotDuplicates(org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field, java.lang.String, java.lang.String)!secondValue	PARAMETERK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaùT ù(_"
typeString"
isFinaltrue"'
declarationStringString secondValue*secondValue2e
java.lang.StringTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaùM ù(SÀ
forg.jabref.logic.database.DuplicateCheckTest.inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java§ §(G"
isFinalfalse"›
declarationString«<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*7inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java•C •(L2|
'org.jabref.model.entry.BibEntry.clone()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java•: •(?2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß$ ß(/2ö
Eorg.jabref.logic.database.DuplicateCheckTest?simpleInbook@26.21:26.33CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java•- •(92û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß ß(#2ö
Eorg.jabref.logic.database.DuplicateCheckTest?simpleInbook@26.21:26.33CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß0 ß(<2—
|org.jabref.logic.database.DuplicateCheckTest.inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter()?inbook2@421.23:421.30CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß> ß(E2ÿ
|org.jabref.logic.database.DuplicateCheckTest.inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter()?inbook2@421.23:421.30DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java§ §(ú
|org.jabref.logic.database.DuplicateCheckTest.inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter()?inbook2@421.23:421.30VALUEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •("
typeBibEntry"
isFinaltrue"”
declarationStringΩ<mark class="modifier"> </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">inbook2</mark> = ((BibEntry) simpleInbook.clone()).withField(StandardField.CHAPTER, "")*inbook22t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java•C •(L2|
'org.jabref.model.entry.BibEntry.clone()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java•: •(?2ö
Eorg.jabref.logic.database.DuplicateCheckTest?simpleInbook@26.21:26.33CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java•- •(9«
\org.jabref.logic.database.DuplicateCheckTest.twoBooksWithDifferentEditionsAreNotDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´(="
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">twoBooksWithDifferentEditionsAreNotDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*-twoBooksWithDifferentEditionsAreNotDuplicates2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java± ±(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∞ ∞(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaØ Ø(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÆ Æ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≠ ≠(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏ ∏(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∑ ∑(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∂ ∂(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaµ µ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¥ ¥(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∫% ∫(02•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¨" ¨(*2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥" ≥(*2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∫ ∫($2 
uorg.jabref.logic.database.DuplicateCheckTest.twoBooksWithDifferentEditionsAreNotDuplicates()?editionOne@428.17:428.27CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∫1 ∫(;2 
uorg.jabref.logic.database.DuplicateCheckTest.twoBooksWithDifferentEditionsAreNotDuplicates()?editionTwo@435.17:435.27CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∫= ∫(G2—
uorg.jabref.logic.database.DuplicateCheckTest.twoBooksWithDifferentEditionsAreNotDuplicates()?editionOne@428.17:428.27DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¨ ¨(2—
uorg.jabref.logic.database.DuplicateCheckTest.twoBooksWithDifferentEditionsAreNotDuplicates()?editionTwo@435.17:435.27DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥ ≥(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java´ ´(§
uorg.jabref.logic.database.DuplicateCheckTest.twoBooksWithDifferentEditionsAreNotDuplicates()?editionOne@428.17:428.27VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¨ ¨("
typeBibEntry"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>BibEntry <mark class="class-field">editionOne</mark> = new BibEntry(StandardEntryType.Book).withField(StandardField.TITLE, "Effective Java").withField(StandardField.AUTHOR, "Bloch, Joshua").withField(StandardField.PUBLISHER, "Prentice Hall").withField(StandardField.DATE, "2001").withField(StandardField.EDITION, "1")*
editionOne2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¨ ¨(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java± ±(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∞ ∞(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaØ Ø(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÆ Æ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≠ ≠(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¨" ¨(*§
uorg.jabref.logic.database.DuplicateCheckTest.twoBooksWithDifferentEditionsAreNotDuplicates()?editionTwo@435.17:435.27VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥ ≥("
typeBibEntry"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>BibEntry <mark class="class-field">editionTwo</mark> = new BibEntry(StandardEntryType.Book).withField(StandardField.TITLE, "Effective Java").withField(StandardField.AUTHOR, "Bloch, Joshua").withField(StandardField.PUBLISHER, "Prentice Hall").withField(StandardField.DATE, "2008").withField(StandardField.EDITION, "2")*
editionTwo2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥ ≥(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∏ ∏(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∑ ∑(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∂ ∂(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaµ µ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¥ ¥(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≥" ≥(*∂
Worg.jabref.logic.database.DuplicateCheckTest.sameBooksWithMissingEditionAreDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaæ æ(8"
isFinalfalse"Œ
declarationString∏<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sameBooksWithMissingEditionAreDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*(sameBooksWithMissingEditionAreDuplicates2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java√ √(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¬ ¬(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡ ¡(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¿ ¿(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java… …(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java» »(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java« «(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∆ ∆(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÀ$ À(/2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø" ø(*2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≈" ≈(*2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÀ À(#2≈
porg.jabref.logic.database.DuplicateCheckTest.sameBooksWithMissingEditionAreDuplicates()?editionOne@447.17:447.27CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÀ0 À(:2≈
porg.jabref.logic.database.DuplicateCheckTest.sameBooksWithMissingEditionAreDuplicates()?editionTwo@453.17:453.27CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÀ< À(F2Ã
porg.jabref.logic.database.DuplicateCheckTest.sameBooksWithMissingEditionAreDuplicates()?editionOne@447.17:447.27DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø ø(2Ã
porg.jabref.logic.database.DuplicateCheckTest.sameBooksWithMissingEditionAreDuplicates()?editionTwo@453.17:453.27DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≈ ≈(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaæ æ(¬
porg.jabref.logic.database.DuplicateCheckTest.sameBooksWithMissingEditionAreDuplicates()?editionOne@447.17:447.27VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø ø("
typeBibEntry"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>BibEntry <mark class="class-field">editionOne</mark> = new BibEntry(StandardEntryType.Book).withField(StandardField.TITLE, "Effective Java").withField(StandardField.AUTHOR, "Bloch, Joshua").withField(StandardField.PUBLISHER, "Prentice Hall").withField(StandardField.DATE, "2001")*
editionOne2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø ø(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java√ √(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¬ ¬(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¡ ¡(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¿ ¿(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaø" ø(*¬
porg.jabref.logic.database.DuplicateCheckTest.sameBooksWithMissingEditionAreDuplicates()?editionTwo@453.17:453.27VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≈ ≈("
typeBibEntry"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>BibEntry <mark class="class-field">editionTwo</mark> = new BibEntry(StandardEntryType.Book).withField(StandardField.TITLE, "Effective Java").withField(StandardField.AUTHOR, "Bloch, Joshua").withField(StandardField.PUBLISHER, "Prentice Hall").withField(StandardField.DATE, "2008")*
editionTwo2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≈ ≈(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java… …(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java» »(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java« «(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java∆ ∆(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java≈" ≈(*¨
`org.jabref.logic.database.DuplicateCheckTest.sameBooksWithPartiallyMissingEditionAreDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaœ œ(A"
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sameBooksWithPartiallyMissingEditionAreDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*1sameBooksWithPartiallyMissingEditionAreDuplicates2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‘ ‘(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java” ”(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java“ “(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java— —(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java€ €(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java⁄ ⁄(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaŸ Ÿ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÿ ÿ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java◊ ◊(2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java›$ ›(/2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java–" –(*2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java÷" ÷(*2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java› ›(#2Œ
yorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithPartiallyMissingEditionAreDuplicates()?editionOne@464.17:464.27CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java›0 ›(:2Œ
yorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithPartiallyMissingEditionAreDuplicates()?editionTwo@470.17:470.27CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java›< ›(F2’
yorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithPartiallyMissingEditionAreDuplicates()?editionOne@464.17:464.27DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java– –(2’
yorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithPartiallyMissingEditionAreDuplicates()?editionTwo@470.17:470.27DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java÷ ÷(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaœ œ(À
yorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithPartiallyMissingEditionAreDuplicates()?editionOne@464.17:464.27VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java– –("
typeBibEntry"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>BibEntry <mark class="class-field">editionOne</mark> = new BibEntry(StandardEntryType.Book).withField(StandardField.TITLE, "Effective Java").withField(StandardField.AUTHOR, "Bloch, Joshua").withField(StandardField.PUBLISHER, "Prentice Hall").withField(StandardField.DATE, "2001")*
editionOne2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java– –(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‘ ‘(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java” ”(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java“ “(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java— —(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java–" –(*®
yorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithPartiallyMissingEditionAreDuplicates()?editionTwo@470.17:470.27VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java÷ ÷("
typeBibEntry"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>BibEntry <mark class="class-field">editionTwo</mark> = new BibEntry(StandardEntryType.Book).withField(StandardField.TITLE, "Effective Java").withField(StandardField.AUTHOR, "Bloch, Joshua").withField(StandardField.PUBLISHER, "Prentice Hall").withField(StandardField.DATE, "2008").withField(StandardField.EDITION, "2")*
editionTwo2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java÷ ÷(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java€ €(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java⁄ ⁄(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaŸ Ÿ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÿ ÿ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java◊ ◊(2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java÷" ÷(*ì)
]org.jabref.logic.database.DuplicateCheckTest.sameBooksWithDifferentEditionsAreNotDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java· ·(>"
isFinalfalse"‘
declarationStringæ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sameBooksWithDifferentEditionsAreNotDuplicates</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*.sameBooksWithDifferentEditionsAreNotDuplicates2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÎ Î(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÍ Í(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÈ È(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaË Ë(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÁ Á(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÊ Ê(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÂ Â(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‰ ‰(2ñ
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java„ „( 2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaı ı(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÙ Ù(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÛ Û(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÚ Ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÒ Ò(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÔ Ô(2ñ
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓ Ó( 2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˜% ˜(02•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‚" ‚(*2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ" Ì(*2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˜ ˜($2À
vorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithDifferentEditionsAreNotDuplicates()?editionOne@493.17:493.27CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˜1 ˜(;2À
vorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithDifferentEditionsAreNotDuplicates()?editionTwo@482.17:482.27CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˜= ˜(G2“
vorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithDifferentEditionsAreNotDuplicates()?editionTwo@482.17:482.27DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‚ ‚(2“
vorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithDifferentEditionsAreNotDuplicates()?editionOne@493.17:493.27DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java· ·(É
vorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithDifferentEditionsAreNotDuplicates()?editionTwo@482.17:482.27VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‚ ‚("
typeBibEntry"
isFinalfalse"í
declarationString¸<mark class="modifier"> </mark>BibEntry <mark class="class-field">editionTwo</mark> = new BibEntry(StandardEntryType.Book).withCitationKey("Sutton17reinfLrnIntroBook").withField(StandardField.TITLE, "Reinforcement learning:An introduction").withField(StandardField.PUBLISHER, "MIT Press").withField(StandardField.YEAR, "2017").withField(StandardField.AUTHOR, "Sutton, Richard S and Barto, Andrew G").withField(StandardField.ADDRESS, "Cambridge, MA.USA").withField(StandardField.EDITION, "Second").withField(StandardField.JOURNAL, "MIT Press").withField(StandardField.URL, "https://webdocs.cs.ualberta.ca/~sutton/book/the-book-2nd.html")*
editionTwo2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‚ ‚(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÎ Î(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÍ Í(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÈ È(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaË Ë(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÁ Á(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÊ Ê(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÂ Â(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‰ ‰(2ñ
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java„ „( 2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java‚" ‚(*ﬁ
vorg.jabref.logic.database.DuplicateCheckTest.sameBooksWithDifferentEditionsAreNotDuplicates()?editionOne@493.17:493.27VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì("
typeBibEntry"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>BibEntry <mark class="class-field">editionOne</mark> = new BibEntry(StandardEntryType.Book).withCitationKey("Sutton98reinfLrnIntroBook").withField(StandardField.TITLE, "Reinforcement learning: An introduction").withField(StandardField.PUBLISHER, "MIT press Cambridge").withField(StandardField.YEAR, "1998").withField(StandardField.AUTHOR, "Sutton, Richard S and Barto, Andrew G").withField(StandardField.VOLUME, "1").withField(StandardField.NUMBER, "1").withField(StandardField.EDITION, "First")*
editionOne2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ Ì(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaı ı(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÙ Ù(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÛ Û(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÚ Ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÒ Ò(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÔ Ô(2ñ
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÓ Ó( 2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÌ" Ì(*†
qorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˚	 ˚(K"
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*BcompareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸+ ¸(42¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˝+ ˝(42˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˛$ ˛(/2
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸  ¸((2
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˝  ˝((2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˛ ˛(#2ﬁ
àorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences()?entryOne@508.17:508.25CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˛0 ˛(82ﬁ
àorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences()?entryTwo@509.17:509.25CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˛: ˛(B2Â
àorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences()?entryOne@508.17:508.25DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸ ¸(2Â
àorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences()?entryTwo@509.17:509.25DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˝ ˝(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˚ ˚(ı
àorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences()?entryOne@508.17:508.25VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸ ¸("
typeBibEntry"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryOne</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\n\nline3\n\nline5")*entryOne2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸ ¸(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸+ ¸(42
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¸  ¸((ı
àorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndLfEndingsReportsNoDifferences()?entryTwo@509.17:509.25VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˝ ˝("
typeBibEntry"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryTwo</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\n\nline3\n\nline5")*entryTwo2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˝ ˝(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˝+ ˝(42
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java˝  ˝((Æ
sorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ	 Ç(M"
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*DcompareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ+ É(42¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ+ Ñ(42˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÖ$ Ö(/2
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ  É((2
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ  Ñ((2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÖ Ö(#2‡
äorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences()?entryOne@515.17:515.25CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÖ0 Ö(82‡
äorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences()?entryTwo@516.17:516.25CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÖ: Ö(B2Á
äorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences()?entryOne@515.17:515.25DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É(2Á
äorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences()?entryTwo@516.17:516.25DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ Ñ(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÇ Ç(ˇ
äorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences()?entryOne@515.17:515.25VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É("
typeBibEntry"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryOne</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\r\n\r\nline3\r\n\r\nline5")*entryOne2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ É(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ+ É(42
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÉ  É((ˇ
äorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndCrLfEndingsReportsNoDifferences()?entryTwo@516.17:516.25VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ Ñ("
typeBibEntry"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryTwo</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\r\n\r\nline3\r\n\r\nline5")*entryTwo2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ Ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ+ Ñ(42
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaÑ  Ñ((—
xorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâ	 â(R"
isFinalfalse"∂
declarationString†<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">compareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*IcompareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä+ ä(42¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaã+ ã(42˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaå$ å(/2
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä  ä((2
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaã  ã((2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaå å(#2Â
èorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences()?entryOne@522.17:522.25CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaå0 å(82Â
èorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences()?entryTwo@523.17:523.25CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaå: å(B2Ï
èorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences()?entryOne@522.17:522.25DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä ä(2Ï
èorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences()?entryTwo@523.17:523.25DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaã ã(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaâ â(¸
èorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences()?entryOne@522.17:522.25VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä ä("
typeBibEntry"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryOne</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\n\nline3\n\nline5")*entryOne2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä ä(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä+ ä(42
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaä  ä((Ñ
èorg.jabref.logic.database.DuplicateCheckTest.compareOfTwoEntriesWithSameContentAndMixedLineEndingsReportsNoDifferences()?entryTwo@523.17:523.25VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaã ã("
typeBibEntry"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryTwo</mark> = new BibEntry().withField(StandardField.COMMENT, "line1\r\n\r\nline3\r\n\r\nline5")*entryTwo2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaã ã(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaã+ ã(42
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaã  ã((¬.
_org.jabref.logic.database.DuplicateCheckTest.differentArticlesFromTheSameBookAreNotDuplicates()METHODK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaë	 ë(9"
isFinalfalse"—
declarationStringª entries can have the same ISBN due to different chapters. The Test fails as crossref identifies both entries as the same.") <br><mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">differentArticlesFromTheSameBookAreNotDuplicates</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*0differentArticlesFromTheSameBookAreNotDuplicates2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaú ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaõ õ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaö ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaô ô(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaò ò(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaó ó(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javañ ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaï ï(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaî î(2ñ
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaì ì( 2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java® ®(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß ß(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¶ ¶(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java§ §(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java£ £(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¢ ¢(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java° °(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java† †(2ñ
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü ü( 2˜
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java™% ™(02•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí  í((2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû  û((2û
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java™ ™($2À
vorg.jabref.logic.database.DuplicateCheckTest.differentArticlesFromTheSameBookAreNotDuplicates()?entryOne@530.17:530.25CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java™1 ™(92À
vorg.jabref.logic.database.DuplicateCheckTest.differentArticlesFromTheSameBookAreNotDuplicates()?entryTwo@542.17:542.25CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java™; ™(C2“
vorg.jabref.logic.database.DuplicateCheckTest.differentArticlesFromTheSameBookAreNotDuplicates()?entryOne@530.17:530.25DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí í(2“
vorg.jabref.logic.database.DuplicateCheckTest.differentArticlesFromTheSameBookAreNotDuplicates()?entryTwo@542.17:542.25DECLARATIONK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû û(2`
voidRETURN_TYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaë ë(Í
vorg.jabref.logic.database.DuplicateCheckTest.differentArticlesFromTheSameBookAreNotDuplicates()?entryOne@530.17:530.25VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí í("
typeBibEntry"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryOne</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("Atkinson_1993").withField(StandardField.AUTHOR, "Richard Atkinson").withField(StandardField.CHAPTER, "11").withField(StandardField.PAGES, "91-100").withField(StandardField.TITLE, "Performance on a Signal").withField(StandardField.BOOKTITLE, "ABC").withField(StandardField.EDITOR, "ABC").withField(StandardField.PUBLISHER, "ABC").withField(StandardField.ISBN, "978-1-4684-8585-1").withField(StandardField.YEAR, "1993")*entryOne2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí í(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaú ú(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaõ õ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaö ö(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaô ô(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaò ò(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaó ó(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javañ ñ(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaï ï(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaî î(2ñ
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaì ì( 2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaí  í((Â
vorg.jabref.logic.database.DuplicateCheckTest.differentArticlesFromTheSameBookAreNotDuplicates()?entryTwo@542.17:542.25VARIABLEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû û("
typeBibEntry"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>BibEntry <mark class="class-field">entryTwo</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("Ballard_1993").withField(StandardField.AUTHOR, "Elizabeth Ballard").withField(StandardField.CHAPTER, "20").withField(StandardField.PAGES, "187-203").withField(StandardField.TITLE, "Rest in Treatment").withField(StandardField.BOOKTITLE, "ABC").withField(StandardField.EDITOR, "ABC").withField(StandardField.PUBLISHER, "ABC").withField(StandardField.ISBN, "978-1-4684-8585-1").withField(StandardField.YEAR, "1993")*entryTwo2t
org.jabref.model.entry.BibEntryTYPEK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû û(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java® ®(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaß ß(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¶ ¶(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java• •(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java§ §(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java£ £(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java¢ ¢(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java° °(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java† †(2ñ
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaü ü( 2•
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLK
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.javaû  û((ﬁ
Forg.jabref.logic.database.DuplicateCheckTest?simpleArticle@24.21:24.34VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (""
isFinalfalse"
typeBibEntry"r
declarationString]<mark class="modifier">private </mark>BibEntry <mark class="class-field">simpleArticle</mark>"
isStaticfalse"
accessprivate*simpleArticle2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (Á
Iorg.jabref.logic.database.DuplicateCheckTest?unrelatedArticle@25.21:25.37VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (%"
isFinalfalse"
typeBibEntry"u
declarationString`<mark class="modifier">private </mark>BibEntry <mark class="class-field">unrelatedArticle</mark>"
isStaticfalse"
accessprivate*unrelatedArticle2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (€
Eorg.jabref.logic.database.DuplicateCheckTest?simpleInbook@26.21:26.33VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (!"
isFinalfalse"
typeBibEntry"q
declarationString\<mark class="modifier">private </mark>BibEntry <mark class="class-field">simpleInbook</mark>"
isStaticfalse"
accessprivate*simpleInbook2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (Ì
Korg.jabref.logic.database.DuplicateCheckTest?simpleIncollection@27.21:27.39VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java ('"
isFinalfalse"
typeBibEntry"w
declarationStringb<mark class="modifier">private </mark>BibEntry <mark class="class-field">simpleIncollection</mark>"
isStaticfalse"
accessprivate*simpleIncollection2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (¸
Iorg.jabref.logic.database.DuplicateCheckTest?duplicateChecker@28.27:28.43VARIABLEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (+"
isFinalfalse"
typeDuplicateCheck"{
declarationStringf<mark class="modifier">private </mark>DuplicateCheck <mark class="class-field">duplicateChecker</mark>"
isStaticfalse"
accessprivate*duplicateChecker2{
(org.jabref.logic.database.DuplicateCheckTYPEI
?src\test\java\org\jabref\logic\database\DuplicateCheckTest.java (