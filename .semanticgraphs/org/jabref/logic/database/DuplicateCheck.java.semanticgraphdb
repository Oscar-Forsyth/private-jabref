
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaªA
(org.jabref.logic.database.DuplicateCheckCLASSE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java% %("$
packageorg.jabref.logic.database"
isFinalfalse"
inner classfalse"

isAbstractfalse"l
declarationStringW<mark class="modifier">public </mark><mark class="modifier">class </mark>DuplicateCheck"
accesspublic*DuplicateCheck2∫
dorg.jabref.logic.database.DuplicateCheck.DuplicateCheck(org.jabref.model.entry.BibEntryTypesManager)DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaG G(2”
}org.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaK K(-2ÿ
Åorg.jabref.logic.database.DuplicateCheck.haveDifferentEntryType(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaT T(12◊
Äorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaX X(02Î
îorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java` `(D2¸
•org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javag g(12ô
Corg.jabref.logic.database.DuplicateCheck.isFarFromThreshold(double)DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javan n(-2Ü
Øorg.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javau u(02ç
¥org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ Ñ(+2˙
°org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ õ()2∑
_org.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∏ ∏()2∂
^org.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java… …((2∏
`org.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷ ÷(*2∏
`org.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‡ ‡(*2±
Yorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÊ Ê(#2⁄
Åorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java (/2˙
°org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅ Å(-2µ
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaï ï()2Ø
Worg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java® ®($2˙
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬ ¬(2Ü
≠org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¯ ¯(/2û
Horg.jabref.logic.database.DuplicateCheck?DUPLICATE_THRESHOLD@38.32:38.51DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java&  &(32ë
;org.jabref.logic.database.DuplicateCheck?LOGGER@40.32:40.38DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java(  ((&2î
>org.jabref.logic.database.DuplicateCheck?NOT_EQUAL@44.29:44.38DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java, ,(&2ê
:org.jabref.logic.database.DuplicateCheck?EQUAL@45.29:45.34DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java- -("2ó
Aorg.jabref.logic.database.DuplicateCheck?EMPTY_IN_ONE@46.29:46.41DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java. .()2ó
Aorg.jabref.logic.database.DuplicateCheck?EMPTY_IN_TWO@47.29:47.41DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java/ /()2ò
Borg.jabref.logic.database.DuplicateCheck?EMPTY_IN_BOTH@49.29:49.42DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java1 1(*2ñ
@org.jabref.logic.database.DuplicateCheck?DOUBT_RANGE@52.32:52.43DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java4  4(+2ö
Dorg.jabref.logic.database.DuplicateCheck?REQUIRED_WEIGHT@54.32:54.47DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java6  6(/2ò
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java9, 9(92ú
Forg.jabref.logic.database.DuplicateCheck?entryTypesManager@69.39:69.56DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaE' E(82f
java.util.Map.put(K, V)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java<% <((2f
java.util.Map.put(K, V)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java=% =((2f
java.util.Map.put(K, V)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java>% >((2f
java.util.Map.put(K, V)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java?% ?((2f
java.util.Map.put(K, V)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java@% @((2f
java.util.Map.put(K, V)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaA% A((2f
java.util.Map.put(K, V)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaB% B((2ë
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java< <($2ë
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java= =($2ë
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java> >($2ë
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java? ?($2ë
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java@ @($2ë
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaA A($2ë
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaB B($Ü
dorg.jabref.logic.database.DuplicateCheck.DuplicateCheck(org.jabref.model.entry.BibEntryTypesManager)CONSTRUCTORE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaG G("å
declarationStringw<mark class="modifier">public </mark><mark class="method">DuplicateCheck</mark>(BibEntryTypesManager entryTypesManager)*DuplicateCheck2≈
vorg.jabref.logic.database.DuplicateCheck.DuplicateCheck(org.jabref.model.entry.BibEntryTypesManager)!entryTypesManagerCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaH! H(22ï
Forg.jabref.logic.database.DuplicateCheck?entryTypesManager@69.39:69.56CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaH H(2 
vorg.jabref.logic.database.DuplicateCheck.DuplicateCheck(org.jabref.model.entry.BibEntryTypesManager)!entryTypesManager	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaG/ G(@2~
(org.jabref.logic.database.DuplicateCheckRETURN_TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaG G(∆
vorg.jabref.logic.database.DuplicateCheck.DuplicateCheck(org.jabref.model.entry.BibEntryTypesManager)!entryTypesManager	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaG/ G(@"
typeBibEntryTypesManager"
isFinalfalse";
declarationString&BibEntryTypesManager entryTypesManager*entryTypesManager2z
+org.jabref.model.entry.BibEntryTypesManagerTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaG G(.Õ
}org.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)METHODE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaK K(-"
isFinalfalse"ô
declarationStringÉ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">haveSameIdentifier</mark>(final BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry two)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*haveSameIdentifier2í
Corg.jabref.model.entry.field.FieldFactory.getIdentifierFieldNames()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaL- L(D2m
java.util.Optional.isPresent()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaM# M(,2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaM M(2z
+java.util.Optional.equals(java.lang.Object)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaME M(K2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaM6 M(>2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaMP M(X2—
Åorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaM M(2ﬁ
éorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?name@76.25:76.29CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaM M(!2—
Åorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaM2 M(52ﬁ
éorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?name@76.25:76.29CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaM? M(C2—
Åorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaML M(O2ﬁ
éorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?name@76.25:76.29CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaMY M(]2÷
Åorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaK= K(@2÷
Åorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaKQ K(T2Â
éorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?name@76.25:76.29DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaL L(2]
booleanRETURN_TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaK K(˛
éorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?name@76.25:76.29VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaL L("
typeField"
isFinaltrue"É
declarationStringn<mark class="modifier"> </mark><mark class="modifier">final </mark>Field <mark class="class-field">name</mark>*name2q
"org.jabref.model.entry.field.FieldTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaL L(ë
Åorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaK= K(@"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry one*one2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaK4 K(<ë
Åorg.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaKQ K(T"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry two*two2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaKH K(Pü
Åorg.jabref.logic.database.DuplicateCheck.haveDifferentEntryType(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)METHODE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaT T(1"
isFinalfalse"ù
declarationStringá<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">haveDifferentEntryType</mark>(final BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry two)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*haveDifferentEntryType2x
)java.lang.Object.equals(java.lang.Object)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaU U($2x
)org.jabref.model.entry.BibEntry.getType()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaU U(2x
)org.jabref.model.entry.BibEntry.getType()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaU) U(02’
Öorg.jabref.logic.database.DuplicateCheck.haveDifferentEntryType(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaU U(2’
Öorg.jabref.logic.database.DuplicateCheck.haveDifferentEntryType(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaU% U((2⁄
Öorg.jabref.logic.database.DuplicateCheck.haveDifferentEntryType(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaTA T(D2⁄
Öorg.jabref.logic.database.DuplicateCheck.haveDifferentEntryType(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaTU T(X2]
booleanRETURN_TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaT T(ï
Öorg.jabref.logic.database.DuplicateCheck.haveDifferentEntryType(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaTA T(D"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry one*one2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaT8 T(@ï
Öorg.jabref.logic.database.DuplicateCheck.haveDifferentEntryType(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaTU T(X"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry two*two2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaTL T(Tö
Äorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)METHODE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaX X(0"
isFinalfalse"ú
declarationStringÜ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">haveDifferentEditions</mark>(final BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry two)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*haveDifferentEditions2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaY0 Y(82õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaZ0 Z(82m
java.util.Optional.isPresent()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java[ [(#2m
java.util.Optional.isPresent()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java\ \($2x
)java.lang.String.equals(java.lang.Object)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java]" ]((2g
java.util.Optional.get()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java] ](2g
java.util.Optional.get()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java]4 ](72‘
Ñorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaY, Y(/2‘
Ñorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaZ, Z(/2Á
óorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?editionOne@89.31:89.41CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java[ [(2Á
óorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?editionTwo@90.31:90.41CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java\ \(2Á
óorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?editionOne@89.31:89.41CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java] ](2Á
óorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?editionTwo@90.31:90.41CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java]) ](32Ÿ
Ñorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaX@ X(C2Ÿ
Ñorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaXT X(W2Ó
óorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?editionOne@89.31:89.41DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaY Y()2Ó
óorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?editionTwo@90.31:90.41DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaZ Z()2]
booleanRETURN_TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaX X(ü
óorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?editionOne@89.31:89.41VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaY Y()"
typeOptional<String>"
isFinaltrue"ª
declarationString•<mark class="modifier"> </mark><mark class="modifier">final </mark>Optional<String> <mark class="class-field">editionOne</mark> = one.getField(StandardField.EDITION)*
editionOne2a
java.util.OptionalTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaY Y(2h
java.lang.StringTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaY Y(2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaY0 Y(82‘
Ñorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaY, Y(/ü
óorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?editionTwo@90.31:90.41VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaZ Z()"
typeOptional<String>"
isFinaltrue"ª
declarationString•<mark class="modifier"> </mark><mark class="modifier">final </mark>Optional<String> <mark class="class-field">editionTwo</mark> = two.getField(StandardField.EDITION)*
editionTwo2a
java.util.OptionalTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaZ Z(2h
java.lang.StringTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaZ Z(2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaZ0 Z(82‘
Ñorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaZ, Z(/î
Ñorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaX@ X(C"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry one*one2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaX7 X(?î
Ñorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaXT X(W"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry two*two2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaXK X(S¿$
îorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)METHODE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java` `(D"
isFinalfalse"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">haveDifferentChaptersOrPagesOfTheSameBook</mark>(final BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry two)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*)haveDifferentChaptersOrPagesOfTheSameBook2Ò
°org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaa a("2Ò
°org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javab b(#2Ò
°org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javac c($2Ò
°org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javad d(+2Ë
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaa9 a(<2Ë
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaa> a(A2â
:org.jabref.logic.database.DuplicateCheck?EQUAL@45.29:45.34CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaaF a(K2Ë
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javab9 b(<2Ë
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javab> b(A2â
:org.jabref.logic.database.DuplicateCheck?EQUAL@45.29:45.34CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javabF b(K2Ë
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javac< c(?2Ë
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javacA c(D2ç
>org.jabref.logic.database.DuplicateCheck?NOT_EQUAL@44.29:44.38CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javacI c(R2Ë
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javadA d(D2Ë
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javadF d(I2ç
>org.jabref.logic.database.DuplicateCheck?NOT_EQUAL@44.29:44.38CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javadN d(W2Ì
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java`T `(W2Ì
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java`h `(k2]
booleanRETURN_TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java` `(®
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java`T `(W"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry one*one2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java`K `(S®
òorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java`h `(k"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry two*two2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java`_ `(g¢"
•org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)METHODE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javag g(1"
isFinalfalse"Ú
declarationString‹<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">double</mark>[] <mark class="method">compareRequiredFields</mark>(final BibEntryType type<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry two)"
isStatictrue"
accessprivate"

isAbstractfalse"
typedouble[]*compareRequiredFields2Ü
7org.jabref.model.entry.BibEntryType.getRequiredFields()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javah2 h(C2f
java.util.Set.isEmpty()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javai i(%2Ñ
¥org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javak! k(02õ
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javakc k(j2ü
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javakI k(L2l
java.util.Collection.stream()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javak@ k(F2r
#java.util.stream.Collectors.toSet()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javakv k({2˙
™org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!typeCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javah- h(12í
¬org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?requiredFields@104.28:104.42CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javai i(2í
¬org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?requiredFields@104.28:104.42CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javak1 k(?2˚
©org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javakÄ k(É2˚
©org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javakÖ k(à2Å
2org.jabref.model.entry.field.OrFields.getPrimary()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javakM k(a2ˇ
™org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!type	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javagE g(I2˛
©org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javagZ g(]2˛
©org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javagn g(q2ô
¬org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?requiredFields@104.28:104.42DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javah h(*2^
double[]RETURN_TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javag g(‚
¬org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?requiredFields@104.28:104.42VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javah h(*"
typeSet<OrFields>"
isFinaltrue"±
declarationStringõ<mark class="modifier"> </mark><mark class="modifier">final </mark>Set<OrFields> <mark class="class-field">requiredFields</mark> = type.getRequiredFields()*requiredFields2\
java.util.SetTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javah h(2}
%org.jabref.model.entry.field.OrFieldsTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javah h(2Ü
7org.jabref.model.entry.BibEntryType.getRequiredFields()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javah2 h(C2˙
™org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!typeCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javah- h(1»
™org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!type	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javagE g(I"
typeBibEntryType"
isFinaltrue"&
declarationStringBibEntryType type*type2r
#org.jabref.model.entry.BibEntryTypeTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javag8 g(Dπ
©org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javagZ g(]"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry one*one2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javagQ g(Yπ
©org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javagn g(q"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry two*two2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javage g(mÚ
Corg.jabref.logic.database.DuplicateCheck.isFarFromThreshold(double)METHODE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javan n(-"
isFinalfalse"·
declarationStringÀ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">isFarFromThreshold</mark>(<mark class="modifier">double</mark> value)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*isFarFromThreshold2ò
Iorg.jabref.logic.database.DuplicateCheck.isFarFromThreshold(double)!valueCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javao o(2ä
;org.jabref.logic.database.DuplicateCheck?LOGGER@40.32:40.38CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javap p(2ò
Iorg.jabref.logic.database.DuplicateCheck.isFarFromThreshold(double)!valueCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javapF p(K2ò
Iorg.jabref.logic.database.DuplicateCheck.isFarFromThreshold(double)!valueCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javar r(2ó
Horg.jabref.logic.database.DuplicateCheck?DUPLICATE_THRESHOLD@38.32:38.51CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javar& r(92è
@org.jabref.logic.database.DuplicateCheck?DOUBT_RANGE@52.32:52.43CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javarK r(V2ù
Iorg.jabref.logic.database.DuplicateCheck.isFarFromThreshold(double)!value	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javan5 n(:2]
booleanRETURN_TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javan n(ﬁ
Iorg.jabref.logic.database.DuplicateCheck.isFarFromThreshold(double)!value	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javan5 n(:"
typedouble"
isFinalfalse"?
declarationString*<mark class="modifier">double</mark> value*value2U
doubleTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javan. n(4ËA
Øorg.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])METHODE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javau u(0"
isFinalfalse"ﬂ
declarationString…<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">compareOptionalFields</mark>(final BibEntryType type<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry two<mark class="modifier"><mark class="modifier">,</mark></mark> final <mark class="modifier">double</mark>[] req)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*compareOptionalFields2Ü
7org.jabref.model.entry.BibEntryType.getOptionalFields()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javay2 y(C2s
#java.util.stream.Collectors.toSet()CALLF
;src\main\java\org\jabref\logic\database\DuplicateCheck.java}| }(Å2Ñ
¥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!typeCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javay- y(12ú
Ãorg.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?optionalFields@121.28:121.42CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaz z(2É
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!reqCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java{ {(2ú
Ãorg.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?optionalFields@121.28:121.42CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java}< }(J2Ö
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java}Ü }(â2Ö
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java}ã }(é2É
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!reqCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~C ~(F2É
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!reqCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~L ~(O2ë
¡org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?opt@125.23:125.26CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~W ~(Z2ë
¡org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?opt@125.23:125.26CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~` ~(c2É
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!reqCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java$ ('2ë
¡org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?opt@125.23:125.26CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaO (R2ô
«org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?numerator@126.21:126.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÄ  Ä()2õ
…org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?denominator@127.21:127.32CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÄ, Ä(72ò
∆org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?totValue@128.21:128.29CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅ Å(2ó
Horg.jabref.logic.database.DuplicateCheck?DUPLICATE_THRESHOLD@38.32:38.51CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java{, {(?2ì
Dorg.jabref.logic.database.DuplicateCheck?REQUIRED_WEIGHT@54.32:54.47CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~1 ~(@2ì
Dorg.jabref.logic.database.DuplicateCheck?REQUIRED_WEIGHT@54.32:54.47CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java< (K2ô
Horg.jabref.logic.database.DuplicateCheck?DUPLICATE_THRESHOLD@38.32:38.51CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅ* Å(=2â
¥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!type	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javauD u(H2à
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javav@ v(C2à
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaw@ w(C2à
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!req	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javax@ x(C2£
Ãorg.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?optionalFields@121.28:121.42DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javay y(*2ò
¡org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?opt@125.23:125.26DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java} }(2û
«org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?numerator@126.21:126.30DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~ ~(2†
…org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?denominator@127.21:127.32DECLARATIONE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java ( 2ü
∆org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?totValue@128.21:128.29DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÄ Ä(2]
booleanRETURN_TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javau u(Ì
Ãorg.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?optionalFields@121.28:121.42VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javay y(*"
typeSet<BibField>"
isFinaltrue"±
declarationStringõ<mark class="modifier"> </mark><mark class="modifier">final </mark>Set<BibField> <mark class="class-field">optionalFields</mark> = type.getOptionalFields()*optionalFields2R
SetTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javay y(2Ü
7org.jabref.model.entry.BibEntryType.getOptionalFields()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javay2 y(C2Ñ
¥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!typeCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javay- y(1Ô
¡org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?opt@125.23:125.26VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java} }("
typedouble"
isFinaltrue"∑
declarationString°<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark>[] <mark class="class-field">opt</mark> = DuplicateCheck.compareFieldSet(optionalFields.stream().map(BibField::field).collect(Collectors.toSet())<mark class="modifier">,</mark> one, two)*opt2W
double[]TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java} }(2s
#java.util.stream.Collectors.toSet()CALLF
;src\main\java\org\jabref\logic\database\DuplicateCheck.java}| }(Å2ú
Ãorg.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?optionalFields@121.28:121.42CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java}< }(J2Ö
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java}Ü }(â2Ö
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java}ã }(éŸ
«org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?numerator@126.21:126.30VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~ ~("
typedouble"
isFinaltrue"Ò
declarationString€<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">numerator</mark> = (DuplicateCheck.REQUIRED_WEIGHT * req[0] * req[1]) + (opt[0] * opt[1])*	numerator2U
doubleTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~ ~(2É
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!reqCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~C ~(F2É
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!reqCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~L ~(O2ë
¡org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?opt@125.23:125.26CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~W ~(Z2ë
¡org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?opt@125.23:125.26CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~` ~(c2ì
Dorg.jabref.logic.database.DuplicateCheck?REQUIRED_WEIGHT@54.32:54.47CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java~1 ~(@±

…org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?denominator@127.21:127.32VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java ( "
typedouble"
isFinaltrue"ﬂ
declarationString…<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">denominator</mark> = (req[1] * DuplicateCheck.REQUIRED_WEIGHT) + opt[1]*denominator2U
doubleTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java (2É
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!reqCALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java$ ('2ë
¡org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?opt@125.23:125.26CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaO (R2ì
Dorg.jabref.logic.database.DuplicateCheck?REQUIRED_WEIGHT@54.32:54.47CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java< (Kõ	
∆org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?totValue@128.21:128.29VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÄ Ä("
typedouble"
isFinaltrue"¡
declarationString´<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">totValue</mark> = numerator / denominator*totValue2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÄ Ä(2ô
«org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?numerator@126.21:126.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÄ  Ä()2õ
…org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])?denominator@127.21:127.32CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÄ, Ä(7“
¥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!type	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javauD u(H"
typeBibEntryType"
isFinaltrue"&
declarationStringBibEntryType type*type2r
#org.jabref.model.entry.BibEntryTypeTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javau7 u(C√
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!one	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javav@ v(C"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry one*one2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javav7 v(?√
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!two	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaw@ w(C"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry two*two2n
org.jabref.model.entry.BibEntryTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaw7 w(? 
≥org.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])!req	PARAMETERE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javax@ x(C"
typedouble[]"
isFinaltrue"?
declarationString*<mark class="modifier">double</mark>[] req*req2W
double[]TYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javax7 x(?òH
¥org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ Ñ(+"
isFinalfalse"˘
declarationString„<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">double</mark>[] <mark class="method">compareFieldSet</mark>(final Collection&lt;Field&gt; fields<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry two)"
isStatictrue"
accessprivate"

isAbstractfalse"
typedouble[]*compareFieldSet2o
java.util.Collection.isEmpty()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÖ Ö(2Ä
/java.util.Map.getOrDefault(java.lang.Object, V)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaãF ã(R2Û
°org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaç( ç(:2ç
ªorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldsCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÖ Ö(2ç
ªorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldsCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaä! ä('2ö
»org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?field@138.25:138.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaãS ã(X2°
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?totalWeights@137.15:137.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaå å(2¢
–org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?currentWeight@139.25:139.38CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaå å()2ö
»org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?field@138.25:138.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaç; ç(@2ä
∏org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaçB ç(E2ä
∏org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaçG ç(J2õ
…org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?result@141.16:141.22CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaé é(2ã
:org.jabref.logic.database.DuplicateCheck?EQUAL@45.29:45.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaé é(2°
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?equalWeights@136.15:136.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaè è(2¢
–org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?currentWeight@139.25:139.38CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaè  è(-2õ
…org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?result@141.16:141.22CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaê ê(2ì
Borg.jabref.logic.database.DuplicateCheck?EMPTY_IN_BOTH@49.29:49.42CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaê! ê(.2°
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?totalWeights@137.15:137.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaë ë(2¢
–org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?currentWeight@139.25:139.38CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaë  ë(-2°
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?totalWeights@137.15:137.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaî î(2°
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?equalWeights@136.15:136.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaï! ï(-2°
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?totalWeights@137.15:137.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaï0 ï(<2°
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?totalWeights@137.15:137.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaï> ï(J2ì
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaã8 ã(E2í
ªorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fields	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑD Ñ(J2è
∏org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ[ Ñ(^2è
∏org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑo Ñ(r2®
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?equalWeights@136.15:136.27DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaà à(2®
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?totalWeights@137.15:137.27DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaâ â(2°
»org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?field@138.25:138.30DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaä ä(2©
–org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?currentWeight@139.25:139.38DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaã ã(&2¢
…org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?result@141.16:141.22DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaç ç(2`
double[]RETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ Ñ(ª
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?equalWeights@136.15:136.27VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaà à("
typedouble"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark><mark class="modifier">double</mark> <mark class="class-field">equalWeights</mark> = 0*equalWeights2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaà à(º
œorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?totalWeights@137.15:137.27VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaâ â("
typedouble"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark><mark class="modifier">double</mark> <mark class="class-field">totalWeights</mark> = 0.*totalWeights2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaâ â(æ
»org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?field@138.25:138.30VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaä ä("
typeField"
isFinaltrue"Ñ
declarationStringo<mark class="modifier"> </mark><mark class="modifier">final </mark>Field <mark class="class-field">field</mark>*field2s
"org.jabref.model.entry.field.FieldTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaä ä(…	
–org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?currentWeight@139.25:139.38VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaã ã(&"
typedouble"
isFinaltrue"‰
declarationStringŒ<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">currentWeight</mark> = DuplicateCheck.FIELD_WEIGHTS.getOrDefault(field, 1.0)*currentWeight2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaã ã(2Ä
/java.util.Map.getOrDefault(java.lang.Object, V)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaãF ã(R2ö
»org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?field@138.25:138.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaãS ã(X2ì
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaã8 ã(Eˇ
…org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?result@141.16:141.22VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaç ç("
typeint"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">result</mark> = DuplicateCheck.compareSingleField(field, one, two)*result2T
intTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaç ç(2Û
°org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaç( ç(:2ö
»org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?field@138.25:138.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaç; ç(@2ä
∏org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaçB ç(E2ä
∏org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaçG ç(J⁄
ªorg.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fields	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑD Ñ(J"
typeCollection<Field>"
isFinaltrue"-
declarationStringCollection<Field> fields*fields2e
java.util.CollectionTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ2 Ñ(<2|
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ= Ñ(BÃ
∏org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ[ Ñ(^"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry one*one2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑR Ñ(ZÃ
∏org.jabref.logic.database.DuplicateCheck.compareFieldSet(java.util.Collection<org.jabref.model.entry.field.Field>, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑo Ñ(r"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry two*two2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑf Ñ(nèX
°org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ õ()"
isFinalfalse"‰
declarationStringŒ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">int</mark> <mark class="method">compareSingleField</mark>(final Field field<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry two)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeint*compareSingleField2¶
Uorg.jabref.model.entry.BibEntry.getFieldLatexFree(org.jabref.model.entry.field.Field)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaú7 ú(H2¶
Uorg.jabref.model.entry.BibEntry.getFieldLatexFree(org.jabref.model.entry.field.Field)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaù7 ù(H2m
java.util.Optional.isEmpty()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaû û(%2m
java.util.Optional.isEmpty()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaü" ü()2m
java.util.Optional.isEmpty()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java£% £(,2i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®3 ®(62i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java©3 ©(62y
(java.util.Set.contains(java.lang.Object)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java´" ´(*2É
2org.jabref.model.entry.field.Field.getProperties()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java´ ´(2∞
_org.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¨ ¨(%2Ø
^org.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÆ Æ($2±
`org.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∞ ∞(&2±
`org.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java≤ ≤(&2™
Yorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaµ µ(2˜
•org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaú3 ú(62˘
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaúI ú(N2˜
•org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaù3 ù(62˘
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaùI ù(N2ì
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringOne@156.31:156.48CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaû û(2ì
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringTwo@157.31:157.48CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaü ü(!2ì
Borg.jabref.logic.database.DuplicateCheck?EMPTY_IN_BOTH@49.29:49.42CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java† †($2í
Aorg.jabref.logic.database.DuplicateCheck?EMPTY_IN_ONE@46.29:46.41CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¢ ¢(2ì
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringTwo@157.31:157.48CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java£ £($2í
Aorg.jabref.logic.database.DuplicateCheck?EMPTY_IN_TWO@47.29:47.41CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java§ §(2ì
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringOne@156.31:156.48CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®! ®(22ì
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringTwo@157.31:157.48CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java©! ©(22˘
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java´ ´(2ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringOne@168.21:168.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¨& ¨(/2ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringTwo@169.21:169.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¨1 ¨(:2˘
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java≠* ≠(/2ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringOne@168.21:168.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÆ% Æ(.2ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringTwo@169.21:169.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÆ0 Æ(92˘
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaØ, Ø(12ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringOne@168.21:168.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∞' ∞(02ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringTwo@169.21:169.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∞2 ∞(;2˘
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java±, ±(12ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringOne@168.21:168.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java≤' ≤(02ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringTwo@169.21:169.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java≤2 ≤(;2ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringOne@168.21:168.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaµ µ(%2ã
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringTwo@169.21:169.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaµ' µ(02˛
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!field	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ6 õ(;2¸
•org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõL õ(O2¸
•org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ` õ(c2ö
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringOne@156.31:156.48DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaú ú(02ö
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringTwo@157.31:157.48DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaù ù(02í
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringOne@168.21:168.30DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java® ®(2í
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringTwo@169.21:169.30DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java© ©(2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ õ(Ä
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringOne@156.31:156.48VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaú ú(0"
typeOptional<String>"
isFinaltrue"ª
declarationString•<mark class="modifier"> </mark><mark class="modifier">final </mark>Optional<String> <mark class="class-field">optionalStringOne</mark> = one.getFieldLatexFree(field)*optionalStringOne2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaú ú(2j
java.lang.StringTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaú ú(2¶
Uorg.jabref.model.entry.BibEntry.getFieldLatexFree(org.jabref.model.entry.field.Field)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaú7 ú(H2˜
•org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaú3 ú(62˘
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaúI ú(NÄ
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringTwo@157.31:157.48VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaù ù(0"
typeOptional<String>"
isFinaltrue"ª
declarationString•<mark class="modifier"> </mark><mark class="modifier">final </mark>Optional<String> <mark class="class-field">optionalStringTwo</mark> = two.getFieldLatexFree(field)*optionalStringTwo2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaù ù(2j
java.lang.StringTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaù ù(2¶
Uorg.jabref.model.entry.BibEntry.getFieldLatexFree(org.jabref.model.entry.field.Field)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaù7 ù(H2˜
•org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaù3 ù(62˘
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaùI ù(N√
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringOne@168.21:168.30VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java® ®("
typeString"
isFinaltrue"§
declarationStringé<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">stringOne</mark> = optionalStringOne.get()*	stringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java® ®(2i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®3 ®(62ì
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringOne@156.31:156.48CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®! ®(2√
πorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?stringTwo@169.21:169.30VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java© ©("
typeString"
isFinaltrue"§
declarationStringé<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">stringTwo</mark> = optionalStringTwo.get()*	stringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java© ©(2i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java©3 ©(62ì
¡org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?optionalStringTwo@157.31:157.48CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java©! ©(2º
ßorg.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!field	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ6 õ(;"
typeField"
isFinaltrue" 
declarationStringField field*field2s
"org.jabref.model.entry.field.FieldTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ0 õ(5π
•org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõL õ(O"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry one*one2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõC õ(Kπ
•org.jabref.logic.database.DuplicateCheck.compareSingleField(org.jabref.model.entry.field.Field, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ` õ(c"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry two*two2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõW õ(_÷
_org.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∏ ∏()"
isFinalfalse"ù
declarationStringá<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">int</mark> <mark class="method">compareAuthorField</mark>(final String stringOne<mark class="modifier"><mark class="modifier">,</mark></mark> final String stringTwo)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeint*compareAuthorField2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaªp ª({2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaªZ ª(a2©
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaª, ª(G2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaºp º({2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaºZ º(a2©
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaº, º(G2Æ
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaΩ1 Ω(A2∫
iorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaªH ª(Q2∫
iorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaºH º(Q2»
worg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?authorOne@187.21:187.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaΩB Ω(K2»
worg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?authorTwo@188.21:188.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaΩM Ω(V2…
xorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?similarity@189.21:189.31CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaæ æ(2ã
:org.jabref.logic.database.DuplicateCheck?EQUAL@45.29:45.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaø ø(2è
>org.jabref.logic.database.DuplicateCheck?NOT_EQUAL@44.29:44.38CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¡ ¡(2ø
iorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∏7 ∏(@2ø
iorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∏O ∏(X2œ
worg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?authorOne@187.21:187.30DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaª ª(2œ
worg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?authorTwo@188.21:188.30DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaº º(2–
xorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?similarity@189.21:189.31DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaΩ Ω(2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∏ ∏(ë

worg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?authorOne@187.21:187.30VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaª ª("
typeString"
isFinaltrue"∞
declarationStringö<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">authorOne</mark> = AuthorList.fixAuthorLastNameOnlyCommas(stringOne, <mark class="modifier">false</mark>).replace(" and "<mark class="modifier">,</mark> " ").toLowerCase(Locale.ROOT)*	authorOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaª ª(2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaªp ª({2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaªZ ª(a2©
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaª, ª(G2∫
iorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaªH ª(Që

worg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?authorTwo@188.21:188.30VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaº º("
typeString"
isFinaltrue"∞
declarationStringö<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">authorTwo</mark> = AuthorList.fixAuthorLastNameOnlyCommas(stringTwo, <mark class="modifier">false</mark>).replace(" and "<mark class="modifier">,</mark> " ").toLowerCase(Locale.ROOT)*	authorTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaº º(2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaºp º({2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaºZ º(a2©
Xorg.jabref.model.entry.AuthorList.fixAuthorLastNameOnlyCommas(java.lang.String, boolean)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaº, º(G2∫
iorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaºH º(Q˚
xorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?similarity@189.21:189.31VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaΩ Ω("
typedouble"
isFinaltrue"·
declarationStringÀ<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">similarity</mark> = DuplicateCheck.correlateByWords(authorOne, authorTwo)*
similarity2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaΩ Ω(2Æ
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaΩ1 Ω(A2»
worg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?authorOne@187.21:187.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaΩB Ω(K2»
worg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)?authorTwo@188.21:188.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaΩM Ω(Vı
iorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∏7 ∏(@"
typeString"
isFinaltrue"%
declarationStringString stringOne*	stringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∏0 ∏(6ı
iorg.jabref.logic.database.DuplicateCheck.compareAuthorField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∏O ∏(X"
typeString"
isFinaltrue"%
declarationStringString stringTwo*	stringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∏H ∏(NØ
^org.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java… …(("
isFinalfalse"ú
declarationStringÜ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">int</mark> <mark class="method">comparePagesField</mark>(final String stringOne<mark class="modifier"><mark class="modifier">,</mark></mark> final String stringTwo)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeint*comparePagesField2ê
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java 4  (>2ê
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ4 À(>2z
)java.lang.String.equals(java.lang.Object)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÃ Ã(%2π
horg.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java *  (32π
horg.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ* À(32–
org.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)?processedStringOne@202.21:202.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÃ Ã(2–
org.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)?processedStringTwo@203.21:203.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÃ& Ã(82ã
:org.jabref.logic.database.DuplicateCheck?EQUAL@45.29:45.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÕ Õ(2è
>org.jabref.logic.database.DuplicateCheck?NOT_EQUAL@44.29:44.38CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaœ œ(2æ
horg.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java…6 …(?2æ
horg.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java…N …(W2◊
org.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)?processedStringOne@202.21:202.39DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java   ('2◊
org.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)?processedStringTwo@203.21:203.39DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ À('2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java… …(ë
org.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)?processedStringOne@202.21:202.39VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java   ('"
typeString"
isFinaltrue"÷
declarationString¿<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">processedStringOne</mark> = stringOne.replaceAll("[- ]+"<mark class="modifier">,</mark> "-")*processedStringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java   (2ê
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java 4  (>2π
horg.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java *  (3ë
org.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)?processedStringTwo@203.21:203.39VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ À('"
typeString"
isFinaltrue"÷
declarationString¿<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">processedStringTwo</mark> = stringTwo.replaceAll("[- ]+"<mark class="modifier">,</mark> "-")*processedStringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ À(2ê
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ4 À(>2π
horg.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ* À(3Ù
horg.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java…6 …(?"
typeString"
isFinaltrue"%
declarationStringString stringOne*	stringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java…/ …(5Ù
horg.jabref.logic.database.DuplicateCheck.comparePagesField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java…N …(W"
typeString"
isFinaltrue"%
declarationStringString stringTwo*	stringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java…G …(M≥
`org.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷ ÷(*"
isFinalfalse"û
declarationStringà<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">int</mark> <mark class="method">compareJournalField</mark>(final String stringOne<mark class="modifier"><mark class="modifier">,</mark></mark> final String stringTwo)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeint*compareJournalField2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java◊E ◊(P2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java◊4 ◊(;2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÿE ÿ(P2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÿ4 ÿ(;2Æ
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŸ1 Ÿ(A2ª
jorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java◊* ◊(32ª
jorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÿ* ÿ(32”
Åorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?processedStringOne@215.21:215.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŸB Ÿ(T2”
Åorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?processedStringTwo@216.21:216.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŸV Ÿ(h2 
yorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?similarity@217.21:217.31CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄ ⁄(2ã
:org.jabref.logic.database.DuplicateCheck?EQUAL@45.29:45.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java€ €(2è
>org.jabref.logic.database.DuplicateCheck?NOT_EQUAL@44.29:44.38CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java› ›(2¿
jorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷8 ÷(A2¿
jorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷P ÷(Y2⁄
Åorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?processedStringOne@215.21:215.39DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java◊ ◊('2⁄
Åorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?processedStringTwo@216.21:216.39DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÿ ÿ('2—
yorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?similarity@217.21:217.31DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŸ Ÿ(2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷ ÷(±
Åorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?processedStringOne@215.21:215.39VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java◊ ◊('"
typeString"
isFinaltrue"Á
declarationString—<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">processedStringOne</mark> = stringOne.replace("."<mark class="modifier">,</mark> "").toLowerCase(Locale.ROOT)*processedStringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java◊ ◊(2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java◊E ◊(P2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java◊4 ◊(;2ª
jorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java◊* ◊(3±
Åorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?processedStringTwo@216.21:216.39VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÿ ÿ('"
typeString"
isFinaltrue"Á
declarationString—<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">processedStringTwo</mark> = stringTwo.replace("."<mark class="modifier">,</mark> "").toLowerCase(Locale.ROOT)*processedStringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÿ ÿ(2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÿE ÿ(P2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÿ4 ÿ(;2ª
jorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÿ* ÿ(3§	
yorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?similarity@217.21:217.31VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŸ Ÿ("
typedouble"
isFinaltrue"Û
declarationString›<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">similarity</mark> = DuplicateCheck.correlateByWords(processedStringOne, processedStringTwo)*
similarity2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŸ Ÿ(2Æ
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŸ1 Ÿ(A2”
Åorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?processedStringOne@215.21:215.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŸB Ÿ(T2”
Åorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)?processedStringTwo@216.21:216.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŸV Ÿ(hˆ
jorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷8 ÷(A"
typeString"
isFinaltrue"%
declarationStringString stringOne*	stringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷1 ÷(7ˆ
jorg.jabref.logic.database.DuplicateCheck.compareJournalField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷P ÷(Y"
typeString"
isFinaltrue"%
declarationStringString stringTwo*	stringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷I ÷(OÆ
`org.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‡ ‡(*"
isFinalfalse"û
declarationStringà<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">int</mark> <mark class="method">compareChapterField</mark>(final String stringOne<mark class="modifier"><mark class="modifier">,</mark></mark> final String stringTwo)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeint*compareChapterField2h
java.lang.String.trim()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java·R ·(V2ê
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java·4 ·(>2h
java.lang.String.trim()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‚R ‚(V2ê
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‚4 ‚(>2™
Yorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java„ „(2ª
jorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java·* ·(32ª
jorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‚* ‚(32”
Åorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)?processedStringOne@225.21:225.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java„ „(.2”
Åorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)?processedStringTwo@226.21:226.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java„0 „(B2¿
jorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‡8 ‡(A2¿
jorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‡P ‡(Y2⁄
Åorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)?processedStringOne@225.21:225.39DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java· ·('2⁄
Åorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)?processedStringTwo@226.21:226.39DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‚ ‚('2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‡ ‡(å
Åorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)?processedStringOne@225.21:225.39VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java· ·('"
typeString"
isFinaltrue"‚
declarationStringÃ<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">processedStringOne</mark> = stringOne.replaceAll("(?i)chapter"<mark class="modifier">,</mark> "").trim()*processedStringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java· ·(2h
java.lang.String.trim()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java·R ·(V2ê
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java·4 ·(>2ª
jorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java·* ·(3å
Åorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)?processedStringTwo@226.21:226.39VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‚ ‚('"
typeString"
isFinaltrue"‚
declarationStringÃ<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">processedStringTwo</mark> = stringTwo.replaceAll("(?i)chapter"<mark class="modifier">,</mark> "").trim()*processedStringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‚ ‚(2h
java.lang.String.trim()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‚R ‚(V2ê
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‚4 ‚(>2ª
jorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‚* ‚(3ˆ
jorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‡8 ‡(A"
typeString"
isFinaltrue"%
declarationStringString stringOne*	stringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‡1 ‡(7ˆ
jorg.jabref.logic.database.DuplicateCheck.compareChapterField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‡P ‡(Y"
typeString"
isFinaltrue"%
declarationStringString stringTwo*	stringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‡I ‡(O∆
Yorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÊ Ê(#"
isFinalfalse"ó
declarationStringÅ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">int</mark> <mark class="method">compareField</mark>(final String stringOne<mark class="modifier"><mark class="modifier">,</mark></mark> final String stringTwo)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeint*compareField2®
Worg.jabref.model.strings.StringUtil.unifyLineBreaks(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁ5 Á(D2h
java.lang.String.trim()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁh Á(l2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁO Á(Z2®
Worg.jabref.model.strings.StringUtil.unifyLineBreaks(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaË5 Ë(D2h
java.lang.String.trim()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaËh Ë(l2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaËO Ë(Z2Æ
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÈ1 È(A2¥
corg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁE Á(N2¥
corg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaËE Ë(N2À
zorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?processedStringOne@231.21:231.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÈB È(T2À
zorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?processedStringTwo@232.21:232.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÈV È(h2√
rorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?similarity@233.21:233.31CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÍ Í(2ã
:org.jabref.logic.database.DuplicateCheck?EQUAL@45.29:45.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÎ Î(2è
>org.jabref.logic.database.DuplicateCheck?NOT_EQUAL@44.29:44.38CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÌ Ì(2π
corg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÊ1 Ê(:2π
corg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÊI Ê(R2“
zorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?processedStringOne@231.21:231.39DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁ Á('2“
zorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?processedStringTwo@232.21:232.39DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaË Ë('2 
rorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?similarity@233.21:233.31DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÈ È(2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÊ Ê(π	
zorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?processedStringOne@231.21:231.39VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁ Á('"
typeString"
isFinaltrue"Ö
declarationStringÔ<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">processedStringOne</mark> = StringUtil.unifyLineBreaks(stringOne.toLowerCase(Locale.ROOT).trim()<mark class="modifier">,</mark> OS.NEWLINE)*processedStringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁ Á(2®
Worg.jabref.model.strings.StringUtil.unifyLineBreaks(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁ5 Á(D2h
java.lang.String.trim()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁh Á(l2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁO Á(Z2¥
corg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)!stringOneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÁE Á(Nπ	
zorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?processedStringTwo@232.21:232.39VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaË Ë('"
typeString"
isFinaltrue"Ö
declarationStringÔ<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">processedStringTwo</mark> = StringUtil.unifyLineBreaks(stringTwo.toLowerCase(Locale.ROOT).trim()<mark class="modifier">,</mark> OS.NEWLINE)*processedStringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaË Ë(2®
Worg.jabref.model.strings.StringUtil.unifyLineBreaks(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaË5 Ë(D2h
java.lang.String.trim()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaËh Ë(l2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaËO Ë(Z2¥
corg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)!stringTwoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaËE Ë(Nç	
rorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?similarity@233.21:233.31VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÈ È("
typedouble"
isFinaltrue"Û
declarationString›<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">similarity</mark> = DuplicateCheck.correlateByWords(processedStringOne, processedStringTwo)*
similarity2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÈ È(2Æ
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÈ1 È(A2À
zorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?processedStringOne@231.21:231.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÈB È(T2À
zorg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)?processedStringTwo@232.21:232.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÈV È(hÔ
corg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)!stringOne	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÊ1 Ê(:"
typeString"
isFinaltrue"%
declarationStringString stringOne*	stringOne2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÊ* Ê(0Ô
corg.jabref.logic.database.DuplicateCheck.compareField(java.lang.String, java.lang.String)!stringTwo	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÊI Ê(R"
typeString"
isFinaltrue"%
declarationStringString stringTwo*	stringTwo2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÊB Ê(H≥,
Åorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java (/"
isFinalfalse"è
declarationString˘<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">double</mark> <mark class="method">compareEntriesStrictly</mark>(BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry two)"
isStatictrue"
accesspublic"

isAbstractfalse"
typedouble*compareEntriesStrictly2|
+org.jabref.model.entry.BibEntry.getFields()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÚ Ú(&2|
+org.jabref.model.entry.BibEntry.getFields()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÛ Û(&2Û
°org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˜ ˜("2e
java.util.Set.size()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˚ ˚(#2e
java.util.Set.size()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˛* ˛(.2l
java.util.HashSet.HashSet()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÒ) Ò(22Î
ôorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?allFields@241.25:241.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÚ Ú(2◊
Öorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÚ Ú(2Î
ôorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?allFields@241.25:241.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÛ Û(2◊
Öorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÛ Û(2Î
ôorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?allFields@241.25:241.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaˆ! ˆ(*2◊
Öorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˜# ˜(&2◊
Öorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˜( ˜(+2Á
ïorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?field@246.25:246.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˜- ˜(22Á
ïorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?score@245.12:245.17CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¯ ¯(2Á
ïorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?score@245.12:245.17CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˚ ˚(2Î
ôorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?allFields@241.25:241.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˚ ˚(2Á
ïorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?score@245.12:245.17CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˛ ˛(2Î
ôorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?allFields@241.25:241.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˛  ˛()2‹
Öorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java9 (<2‹
Öorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaG (J2Ú
ôorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?allFields@241.25:241.34DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÒ Ò("2Ó
ïorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?score@245.12:245.17DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaı ı(2Ó
ïorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?field@246.25:246.30DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaˆ ˆ(2^
doubleRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java (ã
ôorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?allFields@241.25:241.34VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÒ Ò(""
type
Set<Field>"
isFinaltrue"†
declarationStringä<mark class="modifier"> </mark><mark class="modifier">final </mark>Set<Field> <mark class="class-field">allFields</mark> = new HashSet<>()*	allFields2^
java.util.SetTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÒ Ò(2|
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÒ Ò(2l
java.util.HashSet.HashSet()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÒ) Ò(2Í
ïorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?score@245.12:245.17VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaı ı("
typeint"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">score</mark> = 0*score2T
intTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaı ı(ã
ïorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)?field@246.25:246.30VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaˆ ˆ("
typeField"
isFinaltrue"Ñ
declarationStringo<mark class="modifier"> </mark><mark class="modifier">final </mark>Field <mark class="class-field">field</mark>*field2s
"org.jabref.model.entry.field.FieldTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaˆ ˆ(ö
Öorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java9 (<"
typeBibEntry"
isFinalfalse"!
declarationStringBibEntry one*one2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java0 (8ö
Öorg.jabref.logic.database.DuplicateCheck.compareEntriesStrictly(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaG (J"
typeBibEntry"
isFinalfalse"!
declarationStringBibEntry two*two2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java> (F≠0
°org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅ Å(-"
isFinalfalse"÷
declarationString¿<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">isSingleFieldEqual</mark>(BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry two<mark class="modifier"><mark class="modifier">,</mark></mark> Field field)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeboolean*isSingleFieldEqual2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ/ Ç(72ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ/ É(72m
java.util.Optional.isEmpty()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ Ñ(2m
java.util.Optional.isEmpty()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ- Ñ(42m
java.util.Optional.isEmpty()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaá á(2m
java.util.Optional.isEmpty()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaá- á(42z
)java.lang.String.equals(java.lang.Object)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaäG ä(M2®
Worg.jabref.model.strings.StringUtil.unifyLineBreaks(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaä ä()2i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaä4 ä(72®
Worg.jabref.model.strings.StringUtil.unifyLineBreaks(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaã ã(*2i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaã5 ã(82˜
•org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ+ Ç(.2˘
ßorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ8 Ç(=2˜
•org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ+ É(.2˘
ßorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ8 É(=2ã
πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringOne@258.31:258.40CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ Ñ(2ã
πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringTwo@259.31:259.40CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÑ# Ñ(,2ã
πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringOne@258.31:258.40CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaá á(2ã
πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringTwo@259.31:259.40CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaá# á(,2ã
πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringOne@258.31:258.40CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaä* ä(32ã
πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringTwo@259.31:259.40CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaã+ ã(42¸
•org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅ7 Å(:2¸
•org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅE Å(H2˛
ßorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!field	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅP Å(U2í
πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringOne@258.31:258.40DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ Ç((2í
πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringTwo@259.31:259.40DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ É((2_
booleanRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅ Å(÷

πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringOne@258.31:258.40VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ Ç(("
typeOptional<String>"
isFinaltrue"™
declarationStringî<mark class="modifier"> </mark><mark class="modifier">final </mark>Optional<String> <mark class="class-field">stringOne</mark> = one.getField(field)*	stringOne2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ Ç(2j
java.lang.StringTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ Ç(2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ/ Ç(72˜
•org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ+ Ç(.2˘
ßorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÇ8 Ç(=÷

πorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)?stringTwo@259.31:259.40VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ É(("
typeOptional<String>"
isFinaltrue"™
declarationStringî<mark class="modifier"> </mark><mark class="modifier">final </mark>Optional<String> <mark class="class-field">stringTwo</mark> = two.getField(field)*	stringTwo2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ É(2j
java.lang.StringTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ É(2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ/ É(72˜
•org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ+ É(.2˘
ßorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!fieldCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÉ8 É(=∫
•org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅ7 Å(:"
typeBibEntry"
isFinalfalse"!
declarationStringBibEntry one*one2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅ. Å(6∫
•org.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅE Å(H"
typeBibEntry"
isFinalfalse"!
declarationStringBibEntry two*two2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅ< Å(DΩ
ßorg.jabref.logic.database.DuplicateCheck.isSingleFieldEqual(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)!field	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅP Å(U"
typeField"
isFinalfalse" 
declarationStringField field*field2s
"org.jabref.model.entry.field.FieldTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÅJ Å(O®/
]org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaï ï()"
isFinalfalse"è
declarationString˘<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">double</mark> <mark class="method">correlateByWords</mark>(final String s1<mark class="modifier"><mark class="modifier">,</mark></mark> final String s2)"
isStatictrue"
accesspublic"

isAbstractfalse"
typedouble*correlateByWords2y
(java.lang.String.split(java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javañ ñ($2y
(java.lang.String.split(java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaó ó($2m
java.lang.Math.min(int, int)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaò ò(2®
Worg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ õ($2±
`org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)!s1CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javañ ñ(2±
`org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)!s2CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaó ó(2ø
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w1@278.23:278.25CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaò ò(!2ø
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w2@279.23:279.25CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaò* ò(,2æ
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?i@282.17:282.18CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaö ö(2æ
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?n@280.18:280.19CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaö ö(2æ
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?i@282.17:282.18CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaö ö( 2ø
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w1@278.23:278.25CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ% õ('2æ
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?i@282.17:282.18CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ( õ()2ø
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w2@279.23:279.25CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ, õ(.2æ
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?i@282.17:282.18CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ/ õ(02¡
porg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?corr@283.19:283.23CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaú ú(2√
rorg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?misses@281.12:281.18CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaù ù(2√
rorg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?misses@281.12:281.18CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java†) †(/2æ
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?n@280.18:280.19CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java†; †(<2≈
torg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?missRate@288.21:288.29CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java° °(2∂
`org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)!s1	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaï7 ï(92∂
`org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)!s2	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaïH ï(J2∆
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w1@278.23:278.25DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javañ ñ(2∆
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w2@279.23:279.25DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaó ó(2≈
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?n@280.18:280.19DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaò ò(2 
rorg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?misses@281.12:281.18DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaô ô(2≈
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?i@282.17:282.18DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaö ö(2»
porg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?corr@283.19:283.23DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ õ(2Ã
torg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?missRate@288.21:288.29DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java† †(2^
doubleRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaï ï(ì
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w1@278.23:278.25VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javañ ñ("
typeString"
isFinaltrue"ó
declarationStringÅ<mark class="modifier"> </mark><mark class="modifier">final </mark>String[] <mark class="class-field">w1</mark> = s1.split("\\s")*w12c
java.lang.String[]TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javañ ñ(2y
(java.lang.String.split(java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javañ ñ($2±
`org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)!s1CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javañ ñ(ì
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w2@279.23:279.25VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaó ó("
typeString"
isFinaltrue"ó
declarationStringÅ<mark class="modifier"> </mark><mark class="modifier">final </mark>String[] <mark class="class-field">w2</mark> = s2.split("\\s")*w22c
java.lang.String[]TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaó ó(2y
(java.lang.String.split(java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaó ó($2±
`org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)!s2CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaó ó(Í
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?n@280.18:280.19VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaò ò("
typeint"
isFinaltrue"æ
declarationString®<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">n</mark> = Math.min(w1.length, w2.length)*n2T
intTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaò ò(2m
java.lang.Math.min(int, int)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaò ò(2ø
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w1@278.23:278.25CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaò ò(!2ø
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w2@279.23:279.25CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaò* ò(,»
rorg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?misses@281.12:281.18VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaô ô("
typeint"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">misses</mark> = 0*misses2T
intTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaô ô(∏
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?i@282.17:282.18VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaö ö("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2T
intTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaö ö(≤
porg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?corr@283.19:283.23VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ õ("
typedouble"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark><mark class="modifier">double</mark> <mark class="class-field">corr</mark> = similarity(w1[i]<mark class="modifier">,</mark> w2[i])*corr2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ õ(2®
Worg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ õ($2ø
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w1@278.23:278.25CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ% õ('2æ
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?i@282.17:282.18CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ( õ()2ø
norg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?w2@279.23:279.25CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ, õ(.2æ
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?i@282.17:282.18CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaõ/ õ(0÷
torg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?missRate@288.21:288.29VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java† †("
typedouble"
isFinaltrue"Ç
declarationStringÏ<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">missRate</mark> = (<mark class="modifier">double</mark>) misses / (<mark class="modifier">double</mark>) n*missRate2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java† †(2√
rorg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?misses@281.12:281.18CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java†) †(/2æ
morg.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)?n@280.18:280.19CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java†; †(<ﬁ
`org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)!s1	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaï7 ï(9"
typeString"
isFinaltrue"
declarationString	String s1*s12a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaï0 ï(6ﬁ
`org.jabref.logic.database.DuplicateCheck.correlateByWords(java.lang.String, java.lang.String)!s2	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaïH ï(J"
typeString"
isFinaltrue"
declarationString	String s2*s22a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaïA ï(Gß5
Worg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java® ®($"
isFinalfalse"ë
declarationString˚<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">double</mark> <mark class="method">similarity</mark>(final String first<mark class="modifier"><mark class="modifier">,</mark></mark> final String second)"
isStatictrue"
accessprivate"

isAbstractfalse"
typedouble*
similarity2j
java.lang.String.length()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¨ ¨(2j
java.lang.String.length()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¨$ ¨(*2j
java.lang.String.length()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¥( ¥(.2∫
iorg.jabref.logic.util.strings.StringSimilarity.editDistanceIgnoreCase(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπB π(X2í
Aorg.jabref.logic.util.strings.StringSimilarity.StringSimilarity()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπ/ π(?2Æ
]org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!firstCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¨ ¨(2Ø
^org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!secondCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¨ ¨(#2Ω
lorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longer@297.21:297.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java≠ ≠(2Ø
^org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!secondCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java≠ ≠(2æ
morg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?shorter@298.21:298.28CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÆ Æ(2Æ
]org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!firstCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÆ Æ(2Ω
lorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longer@297.21:297.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∞ ∞(2Æ
]org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!firstCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∞ ∞(2æ
morg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?shorter@298.21:298.28CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java± ±(2Ø
^org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!secondCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java± ±(2Ω
lorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longer@297.21:297.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¥! ¥('2√
rorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longerLength@308.18:308.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∂ ∂(2Ω
lorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longer@297.21:297.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπY π(_2æ
morg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?shorter@298.21:298.28CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπa π(h2√
rorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longerLength@308.18:308.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∫# ∫(/2 
yorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?distanceIgnoredCase@313.21:313.40CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∫2 ∫(E2√
rorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longerLength@308.18:308.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∫I ∫(U2å
;org.jabref.logic.database.DuplicateCheck?LOGGER@40.32:40.38CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaª ª(2Ω
lorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longer@297.21:297.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaªL ª(R2æ
morg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?shorter@298.21:298.28CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaªT ª([2¡
porg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?similarity@314.21:314.31CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaª] ª(g2¡
porg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?similarity@314.21:314.31CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaº º(2≥
]org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!first	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®2 ®(72¥
^org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!second	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®F ®(L2ƒ
lorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longer@297.21:297.27DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java© ©(2≈
morg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?shorter@298.21:298.28DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java™ ™(2 
rorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longerLength@308.18:308.30DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¥ ¥(2—
yorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?distanceIgnoredCase@313.21:313.40DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπ π((2»
porg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?similarity@314.21:314.31DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∫ ∫(2^
doubleRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java® ®(”
lorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longer@297.21:297.27VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java© ©("
typeString"
isFinaltrue"Ü
declarationStringq<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">longer</mark>*longer2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java© ©(÷
morg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?shorter@298.21:298.28VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java™ ™("
typeString"
isFinaltrue"á
declarationStringr<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">shorter</mark>*shorter2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java™ ™(Ø
rorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longerLength@308.18:308.30VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¥ ¥("
typeint"
isFinaltrue"∫
declarationString§<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">longerLength</mark> = longer.length()*longerLength2T
intTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¥ ¥(2j
java.lang.String.length()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¥( ¥(.2Ω
lorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longer@297.21:297.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¥! ¥('£

yorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?distanceIgnoredCase@313.21:313.40VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπ π(("
typedouble"
isFinaltrue"Û
declarationString›<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">distanceIgnoredCase</mark> = new StringSimilarity().editDistanceIgnoreCase(longer, shorter)*distanceIgnoredCase2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπ π(2∫
iorg.jabref.logic.util.strings.StringSimilarity.editDistanceIgnoreCase(java.lang.String, java.lang.String)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπB π(X2í
Aorg.jabref.logic.util.strings.StringSimilarity.StringSimilarity()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπ/ π(?2Ω
lorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longer@297.21:297.27CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπY π(_2æ
morg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?shorter@298.21:298.28CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaπa π(hÉ	
porg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?similarity@314.21:314.31VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∫ ∫("
typedouble"
isFinaltrue"ﬂ
declarationString…<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">similarity</mark> = (longerLength - distanceIgnoredCase) / longerLength*
similarity2W
doubleTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∫ ∫(2√
rorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longerLength@308.18:308.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∫# ∫(/2 
yorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?distanceIgnoredCase@313.21:313.40CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∫2 ∫(E2√
rorg.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)?longerLength@308.18:308.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java∫I ∫(U·
]org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!first	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®2 ®(7"
typeString"
isFinaltrue"!
declarationStringString first*first2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®+ ®(1‰
^org.jabref.logic.database.DuplicateCheck.similarity(java.lang.String, java.lang.String)!second	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®F ®(L"
typeString"
isFinaltrue""
declarationStringString second*second2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java®? ®(EôÜ
°org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬ ¬("
isFinalfalse"œ
declarationStringπ<mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isDuplicate</mark>(final BibEntry one<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry two<mark class="modifier"><mark class="modifier">,</mark></mark> final BibDatabaseMode bibDatabaseMode)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isDuplicate2Œ
}org.jabref.logic.database.DuplicateCheck.haveSameIdentifier(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java√ √(2y
(org.jabref.model.entry.BibEntry.getDOI()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java»# »()2y
(org.jabref.model.entry.BibEntry.getDOI()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java…# …()2o
java.util.Optional.isPresent()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java   (2o
java.util.Optional.isPresent()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java )  (22ç
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ À(!2z
)org.jabref.model.entry.BibEntry.getISBN()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŒ% Œ(,2z
)org.jabref.model.entry.BibEntry.getISBN()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaœ% œ(,2o
java.util.Optional.isPresent()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java– –(2o
java.util.Optional.isPresent()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java–+ –(42ç
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java— —(!2”
Åorg.jabref.logic.database.DuplicateCheck.haveDifferentEntryType(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‘ ‘("2“
Äorg.jabref.logic.database.DuplicateCheck.haveDifferentEditions(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java’ ’(%2Ê
îorg.jabref.logic.database.DuplicateCheck.haveDifferentChaptersOrPagesOfTheSameBook(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷ ÷(92◊
Öorg.jabref.model.entry.BibEntryTypesManager.enrich(org.jabref.model.entry.types.EntryType, org.jabref.model.database.BibDatabaseMode)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄> ⁄(D2z
)org.jabref.model.entry.BibEntry.getType()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄I ⁄(P2o
java.util.Optional.isPresent()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java€ €(2i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‹* ‹(-2˜
•org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java›* ›(?2î
Corg.jabref.logic.database.DuplicateCheck.isFarFromThreshold(double)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaﬂ ﬂ("2Å
Øorg.jabref.logic.database.DuplicateCheck.compareOptionalFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, double[])CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÂ Â(%2i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÂ+ Â(.2|
+org.jabref.model.entry.BibEntry.getFields()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÎ. Î(72|
+org.jabref.model.entry.BibEntry.getFields()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÎ? Î(H2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java√ √("2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java√$ √('2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java» »("2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java… …("2à
∂org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?oneDOI@328.22:328.28CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java   (2à
∂org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?twoDOI@329.22:329.28CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java "  ((2à
∂org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?oneDOI@328.22:328.28CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ" À((2à
∂org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?twoDOI@329.22:329.28CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÀ* À(02˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŒ! Œ($2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaœ! œ($2â
∑org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?oneISBN@334.23:334.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java– –(2â
∑org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?twoISBN@335.23:335.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java–# –(*2â
∑org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?oneISBN@334.23:334.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java—" —()2â
∑org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?twoISBN@335.23:335.30CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java—+ —(22˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‘# ‘(&2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‘( ‘(+2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java’& ’()2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java’+ ’(.2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷: ÷(=2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java÷? ÷(B2ó
Forg.jabref.logic.database.DuplicateCheck?entryTypesManager@69.39:69.56CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄, ⁄(=2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄E ⁄(H2É
±org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!bibDatabaseModeCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄T ⁄(c2Ü
¥org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?type@346.37:346.41CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java€ €(2Ü
¥org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?type@346.37:346.41CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‹% ‹()2ã
πorg.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?entryType@348.25:348.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java›@ ›(I2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java›K ›(N2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java›P ›(S2é
ºorg.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?reqCmpResult@349.27:349.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaﬂ# ﬂ(/2é
ºorg.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?reqCmpResult@349.27:349.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java· ·(#2Ü
¥org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?type@346.37:346.41CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÂ& Â(*2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÂ2 Â(52˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÂ7 Â(:2é
ºorg.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?reqCmpResult@349.27:349.39CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÂ< Â(H2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÎ* Î(-2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÎ; Î(>2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÎM Î(P2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÎR Î(U2ô
Horg.jabref.logic.database.DuplicateCheck?DUPLICATE_THRESHOLD@38.32:38.51CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java·9 ·(L2ô
Horg.jabref.logic.database.DuplicateCheck?DUPLICATE_THRESHOLD@38.32:38.51CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaÎl Î(2¸
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬. ¬(12¸
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬B ¬(E2à
±org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!bibDatabaseMode	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬] ¬(l2è
∂org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?oneDOI@328.22:328.28DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java» »(2è
∂org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?twoDOI@329.22:329.28DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java… …(2ê
∑org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?oneISBN@334.23:334.30DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŒ Œ(2ê
∑org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?twoISBN@335.23:335.30DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaœ œ(2ç
¥org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?type@346.37:346.41DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄% ⁄()2í
πorg.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?entryType@348.25:348.34DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‹ ‹("2ï
ºorg.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?reqCmpResult@349.27:349.39DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java› ›('2_
booleanRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬ ¬(í
∂org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?oneDOI@328.22:328.28VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java» »("
typeOptional<DOI>"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">oneDOI</mark> = one.getDOI()*oneDOI2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java» »(2
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java» »(2y
(org.jabref.model.entry.BibEntry.getDOI()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java»# »()2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java» »("í
∂org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?twoDOI@329.22:329.28VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java… …("
typeOptional<DOI>"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">twoDOI</mark> = two.getDOI()*twoDOI2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java… …(2
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java… …(2y
(org.jabref.model.entry.BibEntry.getDOI()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java…# …()2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java… …("õ
∑org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?oneISBN@334.23:334.30VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŒ Œ("
typeOptional<ISBN>"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>Optional<ISBN> <mark class="class-field">oneISBN</mark> = one.getISBN()*oneISBN2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŒ Œ(2Ä
&org.jabref.model.entry.identifier.ISBNTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŒ Œ(2z
)org.jabref.model.entry.BibEntry.getISBN()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŒ% Œ(,2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaŒ! Œ($õ
∑org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?twoISBN@335.23:335.30VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaœ œ("
typeOptional<ISBN>"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>Optional<ISBN> <mark class="class-field">twoISBN</mark> = two.getISBN()*twoISBN2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaœ œ(2Ä
&org.jabref.model.entry.identifier.ISBNTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaœ œ(2z
)org.jabref.model.entry.BibEntry.getISBN()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaœ% œ(,2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaœ! œ($É
¥org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?type@346.37:346.41VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄% ⁄()"
typeOptional<BibEntryType>"
isFinaltrue"Ó
declarationStringÿ<mark class="modifier"> </mark><mark class="modifier">final </mark>Optional<BibEntryType> <mark class="class-field">type</mark> = entryTypesManager.enrich(one.getType()<mark class="modifier">,</mark> bibDatabaseMode)*type2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄ ⁄(2}
#org.jabref.model.entry.BibEntryTypeTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄ ⁄(#2◊
Öorg.jabref.model.entry.BibEntryTypesManager.enrich(org.jabref.model.entry.types.EntryType, org.jabref.model.database.BibDatabaseMode)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄> ⁄(D2z
)org.jabref.model.entry.BibEntry.getType()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄I ⁄(P2ó
Forg.jabref.logic.database.DuplicateCheck?entryTypesManager@69.39:69.56CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄, ⁄(=2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄E ⁄(H2É
±org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!bibDatabaseModeCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java⁄T ⁄(c¶
πorg.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?entryType@348.25:348.34VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‹ ‹(""
typeBibEntryType"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>BibEntryType <mark class="class-field">entryType</mark> = type.get()*	entryType2t
#org.jabref.model.entry.BibEntryTypeTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‹ ‹(2i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‹* ‹(-2Ü
¥org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?type@346.37:346.41CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java‹% ‹()Ú
ºorg.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?reqCmpResult@349.27:349.39VALUEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java› ›('"
typedouble"
isFinaltrue"⁄
declarationStringƒ<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">double</mark>[] <mark class="class-field">reqCmpResult</mark> = compareRequiredFields(entryType, one, two)*reqCmpResult2Y
double[]TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java› ›(2˜
•org.jabref.logic.database.DuplicateCheck.compareRequiredFields(org.jabref.model.entry.BibEntryType, org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry)CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java›* ›(?2ã
πorg.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?entryType@348.25:348.34CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java›@ ›(I2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!oneCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java›K ›(N2˜
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!twoCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java›P ›(Sπ
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!one	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬. ¬(1"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry one*one2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬% ¬(-π
•org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!two	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬B ¬(E"
typeBibEntry"
isFinaltrue"!
declarationStringBibEntry two*two2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬9 ¬(Aı
±org.jabref.logic.database.DuplicateCheck.isDuplicate(org.jabref.model.entry.BibEntry, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!bibDatabaseMode	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬] ¬(l"
typeBibDatabaseMode"
isFinaltrue"4
declarationStringBibDatabaseMode bibDatabaseMode*bibDatabaseMode2z
)org.jabref.model.database.BibDatabaseModeTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¬M ¬(\“
≠org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)METHODG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¯ ¯(/"
isFinalfalse"“
declarationStringº<mark class="modifier">public </mark>Optional&lt;BibEntry&gt; <mark class="method">containsDuplicate</mark>(final BibDatabase database<mark class="modifier"><mark class="modifier">,</mark></mark> final BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> final BibDatabaseMode bibDatabaseMode)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<BibEntry>*containsDuplicate2É
2org.jabref.model.database.BibDatabase.getEntries()CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¸ ¸("2à
∂org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!databaseCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¸ ¸(2Ö
≥org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!entryCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¸J ¸(O2ì
¡org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?other@380.53:380.58CALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¸Q ¸(V2è
Ωorg.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!bibDatabaseModeCALLG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¸X ¸(g2ç
∂org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!database	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¯B ¯(J2ä
≥org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!entry	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˘? ˘(D2î
Ωorg.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!bibDatabaseMode	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˙F ˙(U2ö
¡org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?other@380.53:380.58DECLARATIONG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¸5 ¸(:2j
java.util.OptionalRETURN_TYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¯ ¯(2Ä
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¯ ¯(‡
∂org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!database	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¯B ¯(J"
typeBibDatabase"
isFinaltrue")
declarationStringBibDatabase database*database2v
%org.jabref.model.database.BibDatabaseTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¯6 ¯(AÀ
≥org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!entry	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˘? ˘(D"
typeBibEntry"
isFinaltrue"#
declarationStringBibEntry entry*entry2p
org.jabref.model.entry.BibEntryTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˘6 ˘(>Å
Ωorg.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!bibDatabaseMode	PARAMETERG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˙F ˙(U"
typeBibDatabaseMode"
isFinaltrue"4
declarationStringBibDatabaseMode bibDatabaseMode*bibDatabaseMode2z
)org.jabref.model.database.BibDatabaseModeTYPEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java˙6 ˙(E›
¡org.jabref.logic.database.DuplicateCheck.containsDuplicate(org.jabref.model.database.BibDatabase, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)?other@380.53:380.58VARIABLEG
;src\main\java\org\jabref\logic\database\DuplicateCheck.java¸5 ¸(:"
type"
isFinalfalse"
declarationString other*other2TYPE≥
Horg.jabref.logic.database.DuplicateCheck?DUPLICATE_THRESHOLD@38.32:38.51VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java&  &(3"
isFinaltrue"
typedouble"Ê
declarationString–<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">DUPLICATE_THRESHOLD</mark> = 0.75;"
isStatictrue"
accessprivate*DUPLICATE_THRESHOLD2U
doubleTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java& &(°
;org.jabref.logic.database.DuplicateCheck?LOGGER@40.32:40.38VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java(  ((&"
isFinaltrue"
typeLogger"‰
declarationStringŒ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(DuplicateCheck.class);"
isStatictrue"
accessprivate*LOGGER2_
org.slf4j.LoggerTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java( ((â
>org.jabref.logic.database.DuplicateCheck?NOT_EQUAL@44.29:44.38VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java, ,(&"
isFinaltrue"
typeint"÷
declarationString¿<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">NOT_EQUAL</mark> = 0;"
isStatictrue"
accessprivate*	NOT_EQUAL2R
intTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java, ,(˝
:org.jabref.logic.database.DuplicateCheck?EQUAL@45.29:45.34VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java- -(""
isFinaltrue"
typeint"“
declarationStringº<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">EQUAL</mark> = 1;"
isStatictrue"
accessprivate*EQUAL2R
intTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java- -(í
Aorg.jabref.logic.database.DuplicateCheck?EMPTY_IN_ONE@46.29:46.41VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java. .()"
isFinaltrue"
typeint"Ÿ
declarationString√<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">EMPTY_IN_ONE</mark> = 2;"
isStatictrue"
accessprivate*EMPTY_IN_ONE2R
intTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java. .(í
Aorg.jabref.logic.database.DuplicateCheck?EMPTY_IN_TWO@47.29:47.41VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java/ /()"
isFinaltrue"
typeint"Ÿ
declarationString√<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">EMPTY_IN_TWO</mark> = 3;"
isStatictrue"
accessprivate*EMPTY_IN_TWO2R
intTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java/ /(ï
Borg.jabref.logic.database.DuplicateCheck?EMPTY_IN_BOTH@49.29:49.42VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java1 1(*"
isFinaltrue"
typeint"⁄
declarationStringƒ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">EMPTY_IN_BOTH</mark> = 4;"
isStatictrue"
accessprivate*EMPTY_IN_BOTH2R
intTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java1 1(õ
@org.jabref.logic.database.DuplicateCheck?DOUBT_RANGE@52.32:52.43VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java4  4(+"
isFinaltrue"
typedouble"ﬁ
declarationString»<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">DOUBT_RANGE</mark> = 0.05;"
isStatictrue"
accessprivate*DOUBT_RANGE2U
doubleTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java4 4(§
Dorg.jabref.logic.database.DuplicateCheck?REQUIRED_WEIGHT@54.32:54.47VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java6  6(/"
isFinaltrue"
typedouble"ﬂ
declarationString…<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">double</mark> <mark class="class-field">REQUIRED_WEIGHT</mark> = 3;"
isStatictrue"
accessprivate*REQUIRED_WEIGHT2U
doubleTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java6 6(ˇ
Borg.jabref.logic.database.DuplicateCheck?FIELD_WEIGHTS@57.44:57.57VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java9, 9(9"
isFinaltrue"
typeMap<Field, Double>"Ÿ
declarationString√<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Map<Field, Double> <mark class="class-field">FIELD_WEIGHTS</mark> = new HashMap<>();"
isStatictrue"
accessprivate*FIELD_WEIGHTS2\
java.util.MapTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java9 9(2z
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java9 9("2h
java.lang.DoubleTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java9$ 9(*2j
java.util.HashMap.HashMap()CALLE
;src\main\java\org\jabref\logic\database\DuplicateCheck.java9@ 9(I§
Forg.jabref.logic.database.DuplicateCheck?entryTypesManager@69.39:69.56VALUEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaE' E(8"
isFinaltrue"
typeBibEntryTypesManager"ß
declarationStringë<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntryTypesManager <mark class="class-field">entryTypesManager</mark>"
isStaticfalse"
accessprivate*entryTypesManager2z
+org.jabref.model.entry.BibEntryTypesManagerTYPEE
;src\main\java\org\jabref\logic\database\DuplicateCheck.javaE E(&