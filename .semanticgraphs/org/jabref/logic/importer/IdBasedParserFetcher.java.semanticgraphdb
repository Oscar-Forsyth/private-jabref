
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaò
.org.jabref.logic.importer.IdBasedParserFetcherTRAITK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java (%"$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"¨
declarationStringñ<mark class="modifier">public </mark><mark class="modifier">interface </mark>IdBasedParserFetcher<mark class="modifier"> extends </mark>IdBasedFetcher"
accesspublic*IdBasedParserFetcher2∞
Torg.jabref.logic.importer.IdBasedParserFetcher.getUrlForIdentifier(java.lang.String)DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java   (2ñ
:org.jabref.logic.importer.IdBasedParserFetcher.getParser()DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java% %(2π
]org.jabref.logic.importer.IdBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java5 5(2Æ
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java: :(02ù
Aorg.jabref.logic.importer.IdBasedParserFetcher?LOGGER@25.11:25.17DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java (2
(org.jabref.logic.importer.IdBasedFetcherEXTENDK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java. (<Ω
Torg.jabref.logic.importer.IdBasedParserFetcher.getUrlForIdentifier(java.lang.String)METHODK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java   ("
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>URL <mark class="method">getUrlForIdentifier</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeURL*getUrlForIdentifier2π
_org.jabref.logic.importer.IdBasedParserFetcher.getUrlForIdentifier(java.lang.String)!identifier	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java #  (-2h
java.net.URLRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java   (ˆ
_org.jabref.logic.importer.IdBasedParserFetcher.getUrlForIdentifier(java.lang.String)!identifier	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java #  (-"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java   ("„
:org.jabref.logic.importer.IdBasedParserFetcher.getParser()METHODK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java% %("
isFinalfalse"b
declarationStringM<mark class="modifier"> </mark>Parser <mark class="method">getParser</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeParser*	getParser2|
 org.jabref.logic.importer.ParserRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java% %(
€
]org.jabref.logic.importer.IdBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)METHODK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java5 5("
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">doPostCleanup</mark>(BibEntry entry)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*doPostCleanup2Ω
corg.jabref.logic.importer.IdBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java5( 5(-2`
voidRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java5 5(É
corg.jabref.logic.importer.IdBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java5( 5(-"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2t
org.jabref.model.entry.BibEntryTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java5 5('ﬂ9
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)METHODK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java: :(0"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Override</mark> <br><mark class="modifier"> </mark>Optional&lt;BibEntry&gt; <mark class="method">performSearchById</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeOptional<BibEntry>*performSearchById2í
=org.jabref.model.strings.StringUtil.isBlank(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java; ;(2o
java.util.Optional.empty()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java< <(!2Ö
0org.jabref.logic.net.URLDownload.asInputStream()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java?R ?(_2ñ
Aorg.jabref.logic.importer.WebFetcher.getUrlDownload(java.net.URL)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java?" ?(02©
Torg.jabref.logic.importer.IdBasedParserFetcher.getUrlForIdentifier(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java?1 ?(D2ó
Borg.jabref.logic.importer.Parser.parseEntries(java.io.InputStream)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@8 @(D2è
:org.jabref.logic.importer.IdBasedParserFetcher.getParser()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@, @(52m
java.util.List.isEmpty()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaB B(&2o
java.util.Optional.empty()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaC  C(%2j
java.util.List.size()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaF F(#2É
.org.jabref.logic.importer.WebFetcher.getName()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaGu G(|2≤
]org.jabref.logic.importer.IdBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaM M(2m
java.util.Optional.of(T)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaO O(2s
java.lang.Throwable.getCause()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaT T(2∑
borg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String, java.lang.Throwable)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaQ Q(&2∑
borg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String, java.lang.Throwable)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaW W(&2∑
borg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String, java.lang.Throwable)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaY Y(&2≤
]org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)!identifierCALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java; ;()2≤
]org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)!identifierCALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java?E ?(O2∫
eorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?stream@63.25:63.31CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@E @(K2¬
morg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?fetchedEntries@64.27:64.41CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaB B(2¬
morg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?fetchedEntries@64.27:64.41CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaF F(2ñ
Aorg.jabref.logic.importer.IdBasedParserFetcher?LOGGER@25.11:25.17CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaG G(2¥
]org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)!identifierCALLM
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaGÄ G(ä2¬
morg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?fetchedEntries@64.27:64.41CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaJ J(+2π
dorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?entry@74.21:74.26CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaM M(2π
dorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?entry@74.21:74.26CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaO O($2µ
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@80.36:80.37CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaQB Q(C2µ
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@82.29:82.30CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaT T(2µ
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@82.29:82.30CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaWC W(D2µ
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@88.32:88.33CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaYL Y(M2•
Lorg.jabref.logic.importer.IdBasedFetcher.performSearchById(java.lang.String)OVERRIDEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java: :(02∑
]org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)!identifier	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java:8 :(B2¡
eorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?stream@63.25:63.31DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java? ?(2…
morg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?fetchedEntries@64.27:64.41DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@ @()2¿
dorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?entry@74.21:74.26DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaJ J(2º
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@80.36:80.37DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaP$ P(%2º
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@82.29:82.30DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaR R(2º
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@88.32:88.33DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaX  X(!2n
java.util.OptionalRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java: :(2Ñ
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java: :(Ü	
eorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?stream@63.25:63.31VARIABLEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java? ?("
typeInputStream"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>InputStream <mark class="class-field">stream</mark> = getUrlDownload(getUrlForIdentifier(identifier)).asInputStream()*stream2h
java.io.InputStreamTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java? ?(2Ö
0org.jabref.logic.net.URLDownload.asInputStream()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java?R ?(_2ñ
Aorg.jabref.logic.importer.WebFetcher.getUrlDownload(java.net.URL)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java?" ?(02©
Torg.jabref.logic.importer.IdBasedParserFetcher.getUrlForIdentifier(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java?1 ?(D2≤
]org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)!identifierCALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java?E ?(OÊ
morg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?fetchedEntries@64.27:64.41VARIABLEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@ @()"
typeList<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = getParser().parseEntries(stream)*fetchedEntries2c
java.util.ListTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@ @(2}
org.jabref.model.entry.BibEntryTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@ @(2ó
Borg.jabref.logic.importer.Parser.parseEntries(java.io.InputStream)CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@8 @(D2è
:org.jabref.logic.importer.IdBasedParserFetcher.getParser()CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@, @(52∫
eorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?stream@63.25:63.31CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java@E @(K§
dorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?entry@74.21:74.26VARIABLEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaJ J("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = fetchedEntries.getFirst()*entry2t
org.jabref.model.entry.BibEntryTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaJ J(2¬
morg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?fetchedEntries@64.27:64.41CALLK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaJ J(+Ù
]org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)!identifier	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java:8 :(B"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java:1 :(7á
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@80.36:80.37VARIABLEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaP$ P(%"
typeURISyntaxException"
isFinalfalse")
declarationStringURISyntaxException e*e2p
java.net.URISyntaxExceptionTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaP P(#Ò
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@82.29:82.30VARIABLEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaR R("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2h
java.io.IOExceptionTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaR R(å
`org.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)?e@88.32:88.33VARIABLEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaX  X(!"
typeParseException"
isFinalfalse"%
declarationStringParseException e*e2}
(org.jabref.logic.importer.ParseExceptionTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.javaX X(ˆ
Aorg.jabref.logic.importer.IdBasedParserFetcher?LOGGER@25.11:25.17VARIABLEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java ("
isFinalfalse"
typeLogger"ö
declarationStringÑ<mark class="modifier"> </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(IdBasedParserFetcher.class);"
isStaticfalse"
accesspackage_private*LOGGER2e
org.slf4j.LoggerTYPEK
Asrc\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java (
