
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java®

.org.jabref.logic.importer.AuthorListParserTestCLASSK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java ("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"l
declarationStringW<mark class="modifier"> </mark><mark class="modifier">class </mark>AuthorListParserTest"
accesspackage_private*AuthorListParserTest2ß
Korg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly()DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java% (?2÷
zorg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly(java.lang.String, org.jabref.model.entry.Author)DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java$	 $(#2£
Gorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly()DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java(% ((;2÷
zorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly(org.jabref.model.entry.AuthorList, java.lang.String)DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java5	 5(2ù
Aorg.jabref.logic.importer.AuthorListParserTest?parser@15.21:15.27DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java (ì
Korg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly()METHODK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java% (?"
isFinalfalse"±
declarationStringõ<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">parseSingleAuthorCorrectly</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*parseSingleAuthorCorrectly2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java) (/2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java. (42”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.javaS (Y2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java< (B2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java7 (=2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.javaO (U2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.javaC (I2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java< (B2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java; (A2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java7 (=2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java7 (=2s
java.util.stream.StreamRETURN_TYPEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java (2ê
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java (#¡
zorg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly(java.lang.String, org.jabref.model.entry.Author)METHODK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java$	 $(#"
isFinalfalse"≠
declarationStringó <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseSingleAuthorCorrectly</mark>(String authorsString<mark class="modifier"><mark class="modifier">,</mark></mark> Author authorsParsed)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseSingleAuthorCorrectly2õ
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java%  %("2ó
Borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java%: %(?2ﬁ
àorg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly(java.lang.String, org.jabref.model.entry.Author)!authorsParsedCALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java%# %(02ñ
Aorg.jabref.logic.importer.AuthorListParserTest?parser@15.21:15.27CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java%3 %(92ﬁ
àorg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly(java.lang.String, org.jabref.model.entry.Author)!authorsStringCALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java%@ %(M2„
àorg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly(java.lang.String, org.jabref.model.entry.Author)!authorsString	PARAMETERK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java$+ $(82„
àorg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly(java.lang.String, org.jabref.model.entry.Author)!authorsParsed	PARAMETERK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java$A $(N2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java$ $(¶
àorg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly(java.lang.String, org.jabref.model.entry.Author)!authorsString	PARAMETERK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java$+ $(8"
typeString"
isFinalfalse")
declarationStringString authorsString*authorsString2e
java.lang.StringTYPEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java$$ $(*≥
àorg.jabref.logic.importer.AuthorListParserTest.parseSingleAuthorCorrectly(java.lang.String, org.jabref.model.entry.Author)!authorsParsed	PARAMETERK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java$A $(N"
typeAuthor"
isFinalfalse")
declarationStringAuthor authorsParsed*authorsParsed2r
org.jabref.model.entry.AuthorTYPEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java$: $(@…
Gorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly()METHODK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java(% ((;"
isFinalfalse"≠
declarationStringó<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">parseMultipleCorrectly</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*parseMultipleCorrectly2õ
Forg.jabref.model.entry.AuthorList.of(org.jabref.model.entry.Author...)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java+# +(%2”
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java,$ ,(*2s
java.util.stream.StreamRETURN_TYPEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java( ((2ê
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java( ((#ê
zorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly(org.jabref.model.entry.AuthorList, java.lang.String)METHODK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java5	 5("
isFinalfalse"®
declarationStringí <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseMultipleCorrectly</mark>(AuthorList expected<mark class="modifier"><mark class="modifier">,</mark></mark> String authorsString)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseMultipleCorrectly2ó
Borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java6& 6(+2Ÿ
Éorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly(org.jabref.model.entry.AuthorList, java.lang.String)!expectedCALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java6 6(2ñ
Aorg.jabref.logic.importer.AuthorListParserTest?parser@15.21:15.27CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java6 6(%2ﬁ
àorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly(org.jabref.model.entry.AuthorList, java.lang.String)!authorsStringCALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java6, 6(92ﬁ
Éorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly(org.jabref.model.entry.AuthorList, java.lang.String)!expected	PARAMETERK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java5+ 5(32„
àorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly(org.jabref.model.entry.AuthorList, java.lang.String)!authorsString	PARAMETERK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java5< 5(I2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java5 5(∞
Éorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly(org.jabref.model.entry.AuthorList, java.lang.String)!expected	PARAMETERK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java5+ 5(3"
type
AuthorList"
isFinalfalse"(
declarationStringAuthorList expected*expected2v
!org.jabref.model.entry.AuthorListTYPEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java5  5(*¶
àorg.jabref.logic.importer.AuthorListParserTest.parseMultipleCorrectly(org.jabref.model.entry.AuthorList, java.lang.String)!authorsString	PARAMETERK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java5< 5(I"
typeString"
isFinalfalse")
declarationStringString authorsString*authorsString2e
java.lang.StringTYPEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java55 5(;õ
Aorg.jabref.logic.importer.AuthorListParserTest?parser@15.21:15.27VARIABLEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java ("
isFinalfalse"
typeAuthorListParser"Ü
declarationStringq<mark class="modifier"> </mark>AuthorListParser <mark class="class-field">parser</mark> = new AuthorListParser();"
isStaticfalse"
accesspackage_private*parser2
*org.jabref.logic.importer.AuthorListParserTYPEK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java (2í
=org.jabref.logic.importer.AuthorListParser.AuthorListParser()CALLK
Asrc\test\java\org\jabref\logic\importer\AuthorListParserTest.java" (2