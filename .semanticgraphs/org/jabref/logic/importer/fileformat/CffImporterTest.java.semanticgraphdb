
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java˚
4org.jabref.logic.importer.fileformat.CffImporterTestCLASSQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"m
declarationStringX<mark class="modifier">public </mark><mark class="modifier">class </mark>CffImporterTest"
accesspublic*CffImporterTest2û
<org.jabref.logic.importer.fileformat.CffImporterTest.setUp()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java (2¶
Dorg.jabref.logic.importer.fileformat.CffImporterTest.getFormatName()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java   (2°
?org.jabref.logic.importer.fileformat.CffImporterTest.getCLIId()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java% %(2ß
Eorg.jabref.logic.importer.fileformat.CffImporterTest.sGetExtensions()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java* *(2ß
Eorg.jabref.logic.importer.fileformat.CffImporterTest.getDescription()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java/ /(2´
Iorg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormat()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java5 5("2±
Oorg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java; ;((2´
Iorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaE E("2µ
Sorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaP P(,2≤
Porg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java[ [()2≤
Porg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaf f()2≠
Korg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaq q($2Ø
Morg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java} }(&2µ
Qorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()DECLARATIONS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaà à(*2¨
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()DECLARATIONS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaí í(%2´
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java ( Ÿ
<org.jabref.logic.importer.fileformat.CffImporterTest.setUp()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2ô
>org.jabref.logic.importer.fileformat.CffImporter.CffImporter()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java ("2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java (2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java (Á
Dorg.jabref.logic.importer.fileformat.CffImporterTest.getFormatName()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java   ("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFormatName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFormatName2ï
:org.jabref.logic.importer.fileformat.CffImporter.getName()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java!% !(,2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java! !($2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java   (÷
?org.jabref.logic.importer.fileformat.CffImporterTest.getCLIId()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java% %("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getCLIId</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getCLIId2ì
8org.jabref.logic.importer.fileformat.CffImporter.getId()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java&% &(*2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java& &($2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java% %(Ó
Eorg.jabref.logic.importer.fileformat.CffImporterTest.sGetExtensions()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java* *("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sGetExtensions</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*sGetExtensions2ô
>org.jabref.logic.importer.fileformat.CffImporter.getFileType()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java+4 +(?2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java++ +(32f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java* *(Ò
Eorg.jabref.logic.importer.fileformat.CffImporterTest.getDescription()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java/ /("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getDescription2ú
Aorg.jabref.logic.importer.fileformat.CffImporter.getDescription()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java1 1('2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java1 1(2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java/ /(ó
Iorg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormat()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java5 5(""
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormat</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormat2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java6 6(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java6Z 6(_2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java62 6(=2§
Iorg.jabref.logic.importer.Importer.isRecognizedFormat(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java7 7(.2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java7 7(2µ
Zorg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormat()?file@54.13:54.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java7/ 7(32º
Zorg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormat()?file@54.13:54.17DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java6 6(2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java5 5(˝
Zorg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormat()?file@54.13:54.17VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java6 6("
typePath"
isFinalfalse"∞
declarationStringö<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(CffImporterTest.class.getResource("CffImporterTestValid.cff").toURI())*file2m
java.nio.file.PathTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java6 6(2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java6 6(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java6Z 6(_2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java62 6(=π
Oorg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java; ;(("
isFinalfalse"›
declarationString«<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormatReject</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormatReject2x
java.util.Arrays.asList(T...)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java<# <()2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java? ?(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java?J ?(O2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java?6 ?(A2§
Iorg.jabref.logic.importer.Importer.isRecognizedFormat(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java@! @(32ª
`org.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?list@60.21:60.25CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java> >(!2Ω
borg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?string@62.20:62.26CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java?B ?(H2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java@ @( 2ª
`org.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?file@63.17:63.21CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java@4 @(82¬
`org.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?list@60.21:60.25DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java< <(2ƒ
borg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?string@62.20:62.26DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java> >(2¬
`org.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?file@63.17:63.21DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java? ?(2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java; ;(û
`org.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?list@60.21:60.25VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java< <("
typeList<String>"
isFinalfalse"”
declarationStringΩ<mark class="modifier"> </mark>List<String> <mark class="class-field">list</mark> = Arrays.asList("CffImporterTestInvalid1.cff"<mark class="modifier">,</mark> "CffImporterTestInvalid2.cff")*list2i
java.util.ListTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java< <(2t
java.lang.StringTYPE_ARGUMENTQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java< <(2x
java.util.Arrays.asList(T...)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java<# <()€
borg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?string@62.20:62.26VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java> >("
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String <mark class="class-field"><mark class="modifier">string</mark></mark>*string2k
java.lang.StringTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java> >(Õ
`org.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?file@63.17:63.21VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java? ?("
typePath"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(CffImporterTest.class.getResource(<mark class="modifier">string</mark>).toURI())*file2m
java.nio.file.PathTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java? ?(2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java? ?(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java?J ?(O2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java?6 ?(A2Ω
borg.jabref.logic.importer.fileformat.CffImporterTest.isRecognizedFormatReject()?string@62.20:62.26CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java?B ?(Hì
Iorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaE E(""
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntriesBasic</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntriesBasic2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaF F(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaFZ F(_2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaF2 F(=2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaGP G(Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaGB G(M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG- G(;2∫
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaJ0 J(92£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaJ J(-2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG$ G(,2µ
Zorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?file@70.13:70.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG< G(@2ª
`org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?bibEntries@71.23:71.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaH H(#2∂
[org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?entry@72.17:72.22CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaL L(2π
^org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?expected@74.17:74.25CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaL L($2º
Zorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?file@70.13:70.17DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaF F(2¬
`org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?bibEntries@71.23:71.33DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG G(!2Ω
[org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?entry@72.17:72.22DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaH H(2¿
^org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?expected@74.17:74.25DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaJ J(2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaE E(˝
Zorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?file@70.13:70.17VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaF F("
typePath"
isFinalfalse"∞
declarationStringö<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(CffImporterTest.class.getResource("CffImporterTestValid.cff").toURI())*file2m
java.nio.file.PathTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaF F(2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaF F(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaFZ F(_2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaF2 F(=∑
`org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?bibEntries@71.23:71.33VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG G(!"
typeList<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = importer.importDatabase(file).getDatabase().getEntries()*
bibEntries2i
java.util.ListTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG G(2É
org.jabref.model.entry.BibEntryTYPE_ARGUMENTQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG G(2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaGP G(Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaGB G(M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG- G(;2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG$ G(,2µ
Zorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?file@70.13:70.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaG< G(@ú
[org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?entry@72.17:72.22VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaH H("
typeBibEntry"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = bibEntries.getFirst()*entry2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaH H(2ª
`org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?bibEntries@71.23:71.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaH H(#˚
^org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesBasic()?expected@74.17:74.25VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaJ J("
typeBibEntry"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = getPopulatedEntry().withField(StandardField.AUTHOR, "Joe van Smith")*expected2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaJ J(2∫
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaJ0 J(92£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaJ J(-ƒ
Sorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaP P(,"
isFinalfalse"·
declarationStringÀ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntriesMultipleAuthors</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntriesMultipleAuthors2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaQ Q(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaQe Q(j2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaQ2 Q(=2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaRP R(Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaRB R(M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR- R(;2£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaU U(-2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR$ R(,2ø
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?file@81.13:81.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR< R(@2≈
jorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?bibEntries@82.23:82.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaS S(#2¿
eorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?entry@83.17:83.22CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaW W(2√
horg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?expected@85.17:85.25CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaW W($2∆
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?file@81.13:81.17DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaQ Q(2Ã
jorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?bibEntries@82.23:82.33DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR R(!2«
eorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?entry@83.17:83.22DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaS S(2 
horg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?expected@85.17:85.25DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaU U(2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaP P(í
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?file@81.13:81.17VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaQ Q("
typePath"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(CffImporterTest.class.getResource("CffImporterTestValidMultAuthors.cff").toURI())*file2m
java.nio.file.PathTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaQ Q(2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaQ Q(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaQe Q(j2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaQ2 Q(=À
jorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?bibEntries@82.23:82.33VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR R(!"
typeList<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = importer.importDatabase(file).getDatabase().getEntries()*
bibEntries2i
java.util.ListTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR R(2É
org.jabref.model.entry.BibEntryTYPE_ARGUMENTQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR R(2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaRP R(Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaRB R(M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR- R(;2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR$ R(,2ø
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?file@81.13:81.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaR< R(@∞
eorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?entry@83.17:83.22VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaS S("
typeBibEntry"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = bibEntries.getFirst()*entry2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaS S(2≈
jorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?bibEntries@82.23:82.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaS S(#ï
horg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesMultipleAuthors()?expected@85.17:85.25VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaU U("
typeBibEntry"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = getPopulatedEntry()*expected2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaU U(2£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaU U(-‡
Porg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java[ [()"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntriesSwhIdSelect1</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntriesSwhIdSelect12~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java\ \(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java\f \(k2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java\2 \(=2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]P ](Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]B ](M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]- ](;2∫
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java`0 `(92£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java` `(-2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]$ ](,2º
aorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?file@92.13:92.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]< ](@2¬
gorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?bibEntries@93.23:93.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java^ ^(#2Ω
borg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?entry@94.17:94.22CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javab b(2¿
eorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?expected@96.17:96.25CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javab b($2√
aorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?file@92.13:92.17DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java\ \(2…
gorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?bibEntries@93.23:93.33DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java] ](!2ƒ
borg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?entry@94.17:94.22DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java^ ^(2«
eorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?expected@96.17:96.25DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java` `(2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java[ [(ê
aorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?file@92.13:92.17VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java\ \("
typePath"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(CffImporterTest.class.getResource("CffImporterTestValidSwhIdSelect1.cff").toURI())*file2m
java.nio.file.PathTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java\ \(2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java\ \(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java\f \(k2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java\2 \(=≈
gorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?bibEntries@93.23:93.33VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java] ](!"
typeList<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = importer.importDatabase(file).getDatabase().getEntries()*
bibEntries2i
java.util.ListTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java] ](2É
org.jabref.model.entry.BibEntryTYPE_ARGUMENTQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java] ](2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]P ](Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]B ](M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]- ](;2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]$ ](,2º
aorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?file@92.13:92.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java]< ](@™
borg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?entry@94.17:94.22VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java^ ^("
typeBibEntry"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = bibEntries.getFirst()*entry2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java^ ^(2¬
gorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?bibEntries@93.23:93.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java^ ^(#Æ
eorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect1()?expected@96.17:96.25VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java` `("
typeBibEntry"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = getPopulatedEntry().withField(BiblatexSoftwareField.SWHID, "swh:1:rel:22ece559cc7cc2364edc5e5593d63ae8bd229f9f")*expected2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java` `(2∫
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java`0 `(92£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java` `(-
Porg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaf f()"
isFinalfalse"ﬁ
declarationString»<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntriesSwhIdSelect2</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntriesSwhIdSelect22~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javag g(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javagf g(k2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javag2 g(=2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javahP h(Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javahB h(M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah- h(;2∫
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javak0 k(92£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javak k(-2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah$ h(,2æ
corg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?file@103.13:103.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah< h(@2ƒ
iorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?bibEntries@104.23:104.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javai i(#2ø
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?entry@105.17:105.22CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javam m(2¬
gorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?expected@107.17:107.25CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javam m($2≈
corg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?file@103.13:103.17DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javag g(2À
iorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?bibEntries@104.23:104.33DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah h(!2∆
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?entry@105.17:105.22DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javai i(2…
gorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?expected@107.17:107.25DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javak k(2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaf f(í
corg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?file@103.13:103.17VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javag g("
typePath"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(CffImporterTest.class.getResource("CffImporterTestValidSwhIdSelect2.cff").toURI())*file2m
java.nio.file.PathTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javag g(2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javag g(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javagf g(k2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javag2 g(=…
iorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?bibEntries@104.23:104.33VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah h(!"
typeList<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = importer.importDatabase(file).getDatabase().getEntries()*
bibEntries2i
java.util.ListTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah h(2É
org.jabref.model.entry.BibEntryTYPE_ARGUMENTQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah h(2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javahP h(Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javahB h(M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah- h(;2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah$ h(,2æ
corg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?file@103.13:103.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javah< h(@Æ
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?entry@105.17:105.22VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javai i("
typeBibEntry"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = bibEntries.getFirst()*entry2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javai i(2ƒ
iorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?bibEntries@104.23:104.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javai i(#∞
gorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesSwhIdSelect2()?expected@107.17:107.25VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javak k("
typeBibEntry"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = getPopulatedEntry().withField(BiblatexSoftwareField.SWHID, "swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2")*expected2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javak k(2∫
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javak0 k(92£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javak k(-È
Korg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaq q($"
isFinalfalse"Ÿ
declarationString√<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntriesDataset</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntriesDataset2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javar r(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javar\ r(a2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javar2 r(=2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javasP s(Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javasB s(M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas- s(;2£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javav v(-2™
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaw w(2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas$ s(,2π
^org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?file@114.13:114.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas< s(@2ø
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?bibEntries@115.23:115.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javat t(#2Ω
borg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?expected@118.17:118.25CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaw w(2∫
_org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?entry@116.17:116.22CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javay y(2Ω
borg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?expected@118.17:118.25CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javay y($2¿
^org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?file@114.13:114.17DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javar r(2∆
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?bibEntries@115.23:115.33DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas s(!2¡
_org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?entry@116.17:116.22DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javat t(2ƒ
borg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?expected@118.17:118.25DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javav v(2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaq q(É
^org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?file@114.13:114.17VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javar r("
typePath"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(CffImporterTest.class.getResource("CffImporterTestDataset.cff").toURI())*file2m
java.nio.file.PathTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javar r(2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javar r(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javar\ r(a2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javar2 r(=ø
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?bibEntries@115.23:115.33VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas s(!"
typeList<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = importer.importDatabase(file).getDatabase().getEntries()*
bibEntries2i
java.util.ListTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas s(2É
org.jabref.model.entry.BibEntryTYPE_ARGUMENTQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas s(2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javasP s(Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javasB s(M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas- s(;2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas$ s(,2π
^org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?file@114.13:114.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javas< s(@§
_org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?entry@116.17:116.22VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javat t("
typeBibEntry"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = bibEntries.getFirst()*entry2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javat t(2ø
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?bibEntries@115.23:115.33CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javat t(#è
borg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDataset()?expected@118.17:118.25VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javav v("
typeBibEntry"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = getPopulatedEntry()*expected2z
org.jabref.model.entry.BibEntryTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javav v(2£
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javav v(-û
Morg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()METHODQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java} }(&"
isFinalfalse"€
declarationString≈<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntriesDoiSelect</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntriesDoiSelect2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java~ ~(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java~^ ~(c2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java~2 ~(=2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaP (Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaB (M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java- (;2•
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÇ Ç(-2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java$ (,2ª
`org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?file@126.13:126.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java< (@2√
forg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?bibEntries@127.23:127.33CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÄ Ä(#2æ
aorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?entry@128.17:128.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÑ Ñ(2¡
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?expected@130.17:130.25CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÑ Ñ($2¬
`org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?file@126.13:126.17DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java~ ~(2»
forg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?bibEntries@127.23:127.33DECLARATIONQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java (!2≈
aorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?entry@128.17:128.22DECLARATIONS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÄ Ä(2»
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?expected@130.17:130.25DECLARATIONS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÇ Ç(2f
voidRETURN_TYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java} }(á
`org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?file@126.13:126.17VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java~ ~("
typePath"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(CffImporterTest.class.getResource("CffImporterTestDoiSelect.cff").toURI())*file2m
java.nio.file.PathTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java~ ~(2~
#java.nio.file.Path.of(java.net.URI)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java~ ~(2o
java.net.URL.toURI()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java~^ ~(c2à
-java.lang.Class.getResource(java.lang.String)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java~2 ~(=√
forg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?bibEntries@127.23:127.33VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java (!"
typeList<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = importer.importDatabase(file).getDatabase().getEntries()*
bibEntries2i
java.util.ListTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java (2É
org.jabref.model.entry.BibEntryTYPE_ARGUMENTQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java (2ç
2org.jabref.model.database.BibDatabase.getEntries()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaP (Z2è
4org.jabref.logic.importer.ParserResult.getDatabase()CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaB (M2†
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java- (;2§
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java$ (,2ª
`org.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?file@126.13:126.17CALLQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java< (@Æ
aorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?entry@128.17:128.22VARIABLES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÄ Ä("
typeBibEntry"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = bibEntries.getFirst()*entry2|
org.jabref.model.entry.BibEntryTYPES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÄ Ä(2√
forg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?bibEntries@127.23:127.33CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÄ Ä(#ó
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesDoiSelect()?expected@130.17:130.25VARIABLES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÇ Ç("
typeBibEntry"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = getPopulatedEntry()*expected2|
org.jabref.model.entry.BibEntryTYPES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÇ Ç(2•
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaÇ Ç(- 
Qorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()METHODS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaà à(*"
isFinalfalse"ﬂ
declarationString…<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntriesUnknownFields</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntriesUnknownFields2Ä
#java.nio.file.Path.of(java.net.URI)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaâ â(2q
java.net.URL.toURI()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaâb â(g2ä
-java.lang.Class.getResource(java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaâ2 â(=2è
2org.jabref.model.database.BibDatabase.getEntries()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaäP ä(Z2ë
4org.jabref.logic.importer.ParserResult.getDatabase()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaäB ä(M2¢
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä- ä(;2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaç0 ç(92•
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaç ç(-2•
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaç> ç(J2¶
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä$ ä(,2¡
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?file@137.13:137.17CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä< ä(@2«
jorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?bibEntries@138.23:138.33CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaã ã(#2¬
eorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?entry@139.17:139.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaè è(2≈
horg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?expected@141.17:141.25CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaè è($2»
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?file@137.13:137.17DECLARATIONS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaâ â(2Œ
jorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?bibEntries@138.23:138.33DECLARATIONS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä ä(!2…
eorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?entry@139.17:139.22DECLARATIONS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaã ã(2Ã
horg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?expected@141.17:141.25DECLARATIONS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaç ç(2h
voidRETURN_TYPES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaà à(ö
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?file@137.13:137.17VARIABLES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaâ â("
typePath"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(CffImporterTest.class.getResource("CffImporterTestUnknownFields.cff").toURI())*file2o
java.nio.file.PathTYPES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaâ â(2Ä
#java.nio.file.Path.of(java.net.URI)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaâ â(2q
java.net.URL.toURI()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaâb â(g2ä
-java.lang.Class.getResource(java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaâ2 â(=€
jorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?bibEntries@138.23:138.33VARIABLES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä ä(!"
typeList<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = importer.importDatabase(file).getDatabase().getEntries()*
bibEntries2k
java.util.ListTYPES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä ä(2Ö
org.jabref.model.entry.BibEntryTYPE_ARGUMENTS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä ä(2è
2org.jabref.model.database.BibDatabase.getEntries()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaäP ä(Z2ë
4org.jabref.logic.importer.ParserResult.getDatabase()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaäB ä(M2¢
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä- ä(;2¶
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä$ ä(,2¡
dorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?file@137.13:137.17CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaä< ä(@∂
eorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?entry@139.17:139.22VARIABLES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaã ã("
typeBibEntry"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = bibEntries.getFirst()*entry2|
org.jabref.model.entry.BibEntryTYPES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaã ã(2«
jorg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?bibEntries@138.23:138.33CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaã ã(#–
horg.jabref.logic.importer.fileformat.CffImporterTest.importEntriesUnknownFields()?expected@141.17:141.25VARIABLES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaç ç("
typeBibEntry"
isFinalfalse"…
declarationString≥<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = getPopulatedEntry().withField(new UnknownField("commit")<mark class="modifier">,</mark> "10ad")*expected2|
org.jabref.model.entry.BibEntryTYPES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaç ç(2º
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaç0 ç(92•
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaç ç(-2•
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaç> ç(J (
Horg.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()METHODS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaí í(%"
isFinalfalse"r
declarationString]<mark class="modifier">public </mark>BibEntry <mark class="method">getPopulatedEntry</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeBibEntry*getPopulatedEntry2¨
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaî î(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javañ ñ(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaó ó(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaò ò(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaô ô(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaö ö(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaõ õ(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaú ú(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaù ù(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaû û(2ª
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaü ü(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaì ì(%2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaî î(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javañ ñ(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaó ó(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaò ò(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaô ô(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaö ö(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaõ õ(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaú ú(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaù ù(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaû û(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaü ü(2π
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java° °(2¿
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22DECLARATIONS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaì ì(2É
org.jabref.model.entry.BibEntryRETURN_TYPES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaí í(Ê
\org.jabref.logic.importer.fileformat.CffImporterTest.getPopulatedEntry()?entry@147.17:147.22VARIABLES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaì ì("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2|
org.jabref.model.entry.BibEntryTYPES
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaì ì(2á
*org.jabref.model.entry.BibEntry.BibEntry()CALLS
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.javaì ì(%ˇ
Iorg.jabref.logic.importer.fileformat.CffImporterTest?importer@24.24:24.32VARIABLEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java ( "
isFinalfalse"
typeCffImporter"p
declarationString[<mark class="modifier">private </mark>CffImporter <mark class="class-field">importer</mark>"
isStaticfalse"
accessprivate*importer2ã
0org.jabref.logic.importer.fileformat.CffImporterTYPEQ
Gsrc\test\java\org\jabref\logic\importer\fileformat\CffImporterTest.java (