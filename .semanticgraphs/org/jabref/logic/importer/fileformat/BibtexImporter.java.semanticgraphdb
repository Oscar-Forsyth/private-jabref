
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java÷
3org.jabref.logic.importer.fileformat.BibtexImporterCLASSP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"ú
declarationStringÜ<mark class="modifier">public </mark><mark class="modifier">class </mark>BibtexImporter<mark class="modifier"> extends </mark>Importer"
accesspublic*BibtexImporter2o
BibtexImporterDECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java' '(2ø
^org.jabref.logic.importer.fileformat.BibtexImporter.isRecognizedFormat(java.io.BufferedReader)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java1 1(%2∑
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java7 7(&2¥
Sorg.jabref.logic.importer.fileformat.BibtexImporter.getEncoding(java.nio.file.Path)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaM M(%2∫
Yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaU" U(32ª
Zorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.io.BufferedReader)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java} }(&2†
=org.jabref.logic.importer.fileformat.BibtexImporter.getName()DECLARATIONR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaÇ Ç(2§
Aorg.jabref.logic.importer.fileformat.BibtexImporter.getFileType()DECLARATIONR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaá á('2ß
Dorg.jabref.logic.importer.fileformat.BibtexImporter.getDescription()DECLARATIONR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaå å( 2¬
_org.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)DECLARATIONR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaì% ì(82ß
Forg.jabref.logic.importer.fileformat.BibtexImporter?LOGGER@31.32:31.38DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java  (&2™
Iorg.jabref.logic.importer.fileformat.BibtexImporter?SIGNATURE@34.32:34.41DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java"  "()2∏
Worg.jabref.logic.importer.fileformat.BibtexImporter?importFormatPreferences@36.42:36.65DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java$* $(A2¨
Korg.jabref.logic.importer.fileformat.BibtexImporter?fileMonitor@37.36:37.47DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java%$ %(/2~
"org.jabref.logic.importer.ImporterEXTENDP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java$ (,Ê
BibtexImporterCONSTRUCTORP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java' '("Ò
declarationString€<mark class="modifier">public </mark><mark class="method">BibtexImporter</mark>(ImportFormatPreferences importFormatPreferences<mark class="modifier"><mark class="modifier">,</mark></mark> FileUpdateMonitor fileMonitor)*BibtexImporter2±
Worg.jabref.logic.importer.fileformat.BibtexImporter?importFormatPreferences@36.42:36.65CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java( (($2•
Korg.jabref.logic.importer.fileformat.BibtexImporter?fileMonitor@37.36:37.47CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java) )(2î
3org.jabref.logic.importer.fileformat.BibtexImporterRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java' '(˚
importFormatPreferences	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java'2 '(I"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2q
ImportFormatPreferencesTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java' '(1‹
fileMonitor	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java'] '(h"
typeFileUpdateMonitor"
isFinalfalse"2
declarationStringFileUpdateMonitor fileMonitor*fileMonitor2Å
'org.jabref.model.util.FileUpdateMonitorTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java'K '(\¢

^org.jabref.logic.importer.fileformat.BibtexImporter.isRecognizedFormat(java.io.BufferedReader)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java1 1(%"
isFinalfalse"‘
declarationStringæ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isRecognizedFormat</mark>(BufferedReader reader)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isRecognizedFormat2}
#java.util.Objects.requireNonNull(T)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java2 2(2ø
eorg.jabref.logic.importer.fileformat.BibtexImporter.isRecognizedFormat(java.io.BufferedReader)!readerCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java2 2(%2´
Morg.jabref.logic.importer.Importer.isRecognizedFormat(java.io.BufferedReader)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java1 1(%2ƒ
eorg.jabref.logic.importer.fileformat.BibtexImporter.isRecognizedFormat(java.io.BufferedReader)!reader	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java15 1(;2h
booleanRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java1 1(î
eorg.jabref.logic.importer.fileformat.BibtexImporter.isRecognizedFormat(java.io.BufferedReader)!reader	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java15 1(;"
typeBufferedReader"
isFinalfalse"*
declarationStringBufferedReader reader*reader2p
java.io.BufferedReaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java1& 1(4Ì>
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java7 7(&"
isFinalfalse"˛
declarationStringË<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(Path filePath)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2≥
Yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java8  8(12Æ
Tjava.nio.charset.CharsetDecoder.onMalformedInput(java.nio.charset.CodingErrorAction)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java> >( 2≠
Sjava.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@O @(]2¥
Zorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.io.BufferedReader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaB- B(;2é
4org.jabref.logic.importer.ParserResult.getMetaData()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaC C($2é
4org.jabref.logic.importer.ParserResult.getMetaData()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaD D($2ú
Borg.jabref.logic.importer.ParserResult.setPath(java.nio.file.Path)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaE E( 2v
java.util.Optional.isEmpty()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaF5 F(<2Ü
,org.jabref.model.metadata.MetaData.getMode()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaF+ F(22é
4org.jabref.logic.importer.ParserResult.getMetaData()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaF F((2Ø
Uorg.jabref.model.metadata.MetaData.setMode(org.jabref.model.database.BibDatabaseMode)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaG+ G(22é
4org.jabref.logic.importer.ParserResult.getMetaData()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaG G((2Ω
corg.jabref.model.database.BibDatabaseModeDetection.inferMode(org.jabref.model.database.BibDatabase)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaGL G(U2é
4org.jabref.logic.importer.ParserResult.getDatabase()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaGc G(n2ª
ajava.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.nio.charset.CharsetDecoder)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@7 @(H2è
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaA) A(72π
_org.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java82 8(:2√
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?result@56.23:56.29CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java=! =('2ƒ
jorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?decoder@61.23:61.30CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java> >(2π
_org.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@^ @(f2ƒ
jorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?decoder@61.23:61.30CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@i @(p2Œ
torg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?inputStreamReader@64.31:64.48CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaA8 A(I2√
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?reader@65.28:65.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaB< B(B2…
oorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?parserResult@66.25:66.37CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaC C(2√
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?result@56.23:56.29CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaC3 C(92…
oorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?parserResult@66.25:66.37CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaD D(2√
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?result@56.23:56.29CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaDE D(K2…
oorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?parserResult@66.25:66.37CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaE E(2π
_org.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaE! E()2…
oorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?parserResult@66.25:66.37CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaF F(2…
oorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?parserResult@66.25:66.37CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaG G(2…
oorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?parserResult@66.25:66.37CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaGV G(b2…
oorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?parserResult@66.25:66.37CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaI I(2£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java7 7(&2æ
_org.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java7, 7(42 
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?result@56.23:56.29DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java8 8(2À
jorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?decoder@61.23:61.30DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java= =(2’
torg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?inputStreamReader@64.31:64.48DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@ @(02 
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?reader@65.28:65.34DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaA A("2–
oorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?parserResult@66.25:66.37DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaB B(%2á
&org.jabref.logic.importer.ParserResultRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java7 7(‡
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?result@56.23:56.29VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java8 8("
typeEncodingResult"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>EncodingResult <mark class="class-field">result</mark> = getEncodingResult(filePath)*result2h
EncodingResultTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java8 8(2≥
Yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java8  8(12π
_org.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java82 8(:À
jorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?decoder@61.23:61.30VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java= =("
typeCharsetDecoder"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>CharsetDecoder <mark class="class-field">decoder</mark> = result.encoding().newDecoder()*decoder2y
java.nio.charset.CharsetDecoderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java= =(2√
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?result@56.23:56.29CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java=! =('”

torg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?inputStreamReader@64.31:64.48VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@ @(0"
typeInputStreamReader"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>InputStreamReader <mark class="class-field">inputStreamReader</mark> = new InputStreamReader(Files.newInputStream(filePath)<mark class="modifier">,</mark> decoder)*inputStreamReader2s
java.io.InputStreamReaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@ @(2≠
Sjava.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@O @(]2ª
ajava.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.nio.charset.CharsetDecoder)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@7 @(H2π
_org.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@^ @(f2ƒ
jorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?decoder@61.23:61.30CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java@i @(p„
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?reader@65.28:65.34VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaA A(""
typeBufferedReader"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>BufferedReader <mark class="class-field">reader</mark> = new BufferedReader(inputStreamReader)*reader2p
java.io.BufferedReaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaA A(2è
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaA) A(72Œ
torg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?inputStreamReader@64.31:64.48CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaA8 A(I±
oorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?parserResult@66.25:66.37VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaB B(%"
typeParserResult"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = <mark class="modifier">this</mark>.importDatabase(reader)*parserResult2Ä
&org.jabref.logic.importer.ParserResultTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaB B(2¥
Zorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.io.BufferedReader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaB- B(;2√
iorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)?reader@65.28:65.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaB< B(B˙
_org.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java7, 7(4"
typePath"
isFinalfalse""
declarationStringPath filePath*filePath2l
java.nio.file.PathTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java7' 7(+∞	
Sorg.jabref.logic.importer.fileformat.BibtexImporter.getEncoding(java.nio.file.Path)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaM M(%"
isFinalfalse"Ì
declarationString◊<mark class="modifier">public </mark><mark class="modifier">static </mark>Charset <mark class="method">getEncoding</mark>(Path filePath)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accesspublic"

isAbstractfalse"
typeCharset*getEncoding2≥
Yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaN N( 2∂
\org.jabref.logic.importer.fileformat.BibtexImporter.getEncoding(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaN! N()2ª
\org.jabref.logic.importer.fileformat.BibtexImporter.getEncoding(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaM+ M(32y
java.nio.charset.CharsetRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaM M(˜
\org.jabref.logic.importer.fileformat.BibtexImporter.getEncoding(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaM+ M(3"
typePath"
isFinalfalse""
declarationStringPath filePath*filePath2l
java.nio.file.PathTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaM& M(*±D
Yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaU" U(3"
isFinalfalse"˚
declarationStringÂ<mark class="modifier">private </mark><mark class="modifier">static </mark>EncodingResult <mark class="method">getEncodingResult</mark>(Path filePath)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeEncodingResult*getEncodingResult2≠
Sjava.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java^- ^(;2
%java.io.BufferedInputStream.mark(int)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java`  `($2§
Jorg.jabref.logic.importer.Importer.getCharset(java.io.BufferedInputStream)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaa a((2}
#java.io.BufferedInputStream.reset()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javab  b(%2y
java.nio.charset.Charset.name()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javacA c(E2≠
Sjava.nio.file.Files.newBufferedReader(java.nio.file.Path, java.nio.charset.Charset)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javah+ h(<2π
_org.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javai1 i(D2x
java.util.Optional.isPresent()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javak: k(C2v
java.util.Optional.orElse(T)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javan( n(.2û
Djava.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java_: _(M2º
borg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java^< ^(D2À
qorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?inputStream@94.25:94.36CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java_N _(Y2”
yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?bufferedInputStream@95.32:95.51CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java` `(2œ
uorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?detectedCharset@93.16:93.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaa a(2”
yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?bufferedInputStream@95.32:95.51CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaa) a(<2”
yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?bufferedInputStream@95.32:95.51CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javab b(2†
Forg.jabref.logic.importer.fileformat.BibtexImporter?LOGGER@31.32:31.38CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javac c(2œ
uorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?detectedCharset@93.16:93.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javac1 c(@2º
borg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javah= h(E2œ
uorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?detectedCharset@93.16:93.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javahG h(V2»
norg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?reader@104.28:104.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaiE i(K2†
Forg.jabref.logic.importer.fileformat.BibtexImporter?LOGGER@31.32:31.38CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaj j(2“
xorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?suppliedEncoding@105.30:105.46CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaj2 j(B2›
Çorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encodingExplicitlySupplied@103.16:103.42CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javak k(&2“
xorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?suppliedEncoding@105.30:105.46CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javak) k(92 
porg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encoding@102.16:102.24CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javan n(2“
xorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?suppliedEncoding@105.30:105.46CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javan n('2œ
uorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?detectedCharset@93.16:93.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javan/ n(>2†
Forg.jabref.logic.importer.fileformat.BibtexImporter?LOGGER@31.32:31.38CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javao o(2 
porg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encoding@102.16:102.24CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javao? o(G2 
porg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encoding@102.16:102.24CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaq3 q(;2›
Çorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encodingExplicitlySupplied@103.16:103.42CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaq= q(W2»
norg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?result@113.23:113.29CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javar r(2¡
borg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaU9 U(A2÷
uorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?detectedCharset@93.16:93.31DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java] ](2“
qorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?inputStream@94.25:94.36DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java^ ^($2⁄
yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?bufferedInputStream@95.32:95.51DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java_  _(32—
porg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encoding@102.16:102.24DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaf f(2‰
Çorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encodingExplicitlySupplied@103.16:103.42DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javag g(*2œ
norg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?reader@104.28:104.34DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javah h("2Ÿ
xorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?suppliedEncoding@105.30:105.46DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javai i(.2œ
norg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?result@113.23:113.29DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaq q(2o
EncodingResultRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaU U(!È
uorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?detectedCharset@93.16:93.31VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java] ]("
typeCharset"
isFinalfalse"l
declarationStringW<mark class="modifier"> </mark>Charset <mark class="class-field">detectedCharset</mark>*detectedCharset2r
java.nio.charset.CharsetTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java] ](Ò
qorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?inputStream@94.25:94.36VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java^ ^($"
typeInputStream"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>InputStream <mark class="class-field">inputStream</mark> = Files.newInputStream(filePath)*inputStream2m
java.io.InputStreamTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java^ ^(2≠
Sjava.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java^- ^(;2º
borg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java^< ^(D®
yorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?bufferedInputStream@95.32:95.51VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java_  _(3"
typeBufferedInputStream"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>BufferedInputStream <mark class="class-field">bufferedInputStream</mark> = new BufferedInputStream(inputStream)*bufferedInputStream2u
java.io.BufferedInputStreamTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java_ _(2û
Djava.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java_: _(M2À
qorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?inputStream@94.25:94.36CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java_N _(Y÷
porg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encoding@102.16:102.24VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaf f("
typeCharset"
isFinalfalse"e
declarationStringP<mark class="modifier"> </mark>Charset <mark class="class-field">encoding</mark>*encoding2r
java.nio.charset.CharsetTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaf f(ú
Çorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encodingExplicitlySupplied@103.16:103.42VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javag g(*"
typeboolean"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">encodingExplicitlySupplied</mark>*encodingExplicitlySupplied2a
booleanTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javag g(‘
norg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?reader@104.28:104.34VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javah h(""
typeBufferedReader"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>BufferedReader <mark class="class-field">reader</mark> = Files.newBufferedReader(filePath, detectedCharset)*reader2p
java.io.BufferedReaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javah h(2≠
Sjava.nio.file.Files.newBufferedReader(java.nio.file.Path, java.nio.charset.Charset)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javah+ h(<2º
borg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javah= h(E2œ
uorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?detectedCharset@93.16:93.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javahG h(V†
xorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?suppliedEncoding@105.30:105.46VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javai i(."
typeOptional<Charset>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Optional<Charset> <mark class="class-field">suppliedEncoding</mark> = getSuppliedEncoding(reader)*suppliedEncoding2l
java.util.OptionalTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javai i(2{
java.nio.charset.CharsetTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javai i(2π
_org.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javai1 i(D2»
norg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?reader@104.28:104.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaiE i(Kæ
norg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?result@113.23:113.29VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaq q("
typeEncodingResult"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>EncodingResult <mark class="class-field">result</mark> = new EncodingResult(encoding, encodingExplicitlySupplied)*result2h
EncodingResultTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaq q(2 
porg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encoding@102.16:102.24CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaq3 q(;2›
Çorg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)?encodingExplicitlySupplied@103.16:103.42CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaq= q(W˝
borg.jabref.logic.importer.fileformat.BibtexImporter.getEncodingResult(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaU9 U(A"
typePath"
isFinalfalse""
declarationStringPath filePath*filePath2l
java.nio.file.PathTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaU4 U(8Ê
Zorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.io.BufferedReader)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java} }(&"
isFinalfalse"Ü
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(BufferedReader reader)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2°
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java~F ~(K2±
Worg.jabref.logic.importer.fileformat.BibtexImporter?importFormatPreferences@36.42:36.65CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java~  ~(72•
Korg.jabref.logic.importer.fileformat.BibtexImporter?fileMonitor@37.36:37.47CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java~9 ~(D2ª
aorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.io.BufferedReader)!readerCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java~L ~(R2ß
Iorg.jabref.logic.importer.Importer.importDatabase(java.io.BufferedReader)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java} }(&2¿
aorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.io.BufferedReader)!reader	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java}6 }(<2á
&org.jabref.logic.importer.ParserResultRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java} }(ê
aorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.io.BufferedReader)!reader	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java}6 }(<"
typeBufferedReader"
isFinalfalse"*
declarationStringBufferedReader reader*reader2p
java.io.BufferedReaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java}' }(5õ
=org.jabref.logic.importer.fileformat.BibtexImporter.getName()METHODR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaÇ Ç("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2å
,org.jabref.logic.importer.Importer.getName()OVERRIDER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaÇ Ç(2s
java.lang.StringRETURN_TYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaÇ Ç(ƒ
Aorg.jabref.logic.importer.fileformat.BibtexImporter.getFileType()METHODR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaá á('"
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>StandardFileType <mark class="method">getFileType</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeStandardFileType*getFileType2â
&org.jabref.logic.util.StandardFileTypeRETURN_TYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaá á(∏
Dorg.jabref.logic.importer.fileformat.BibtexImporter.getDescription()METHODR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaå å( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getDescription2ì
3org.jabref.logic.importer.Importer.getDescription()OVERRIDER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaå å( 2s
java.lang.StringRETURN_TYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaå å(ùD
_org.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)METHODR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaì% ì(8"
isFinalfalse"ø
declarationString©<mark class="modifier">private </mark><mark class="modifier">static </mark>Optional&lt;Charset&gt; <mark class="method">getSuppliedEncoding</mark>(BufferedReader reader)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeOptional<Charset>*getSuppliedEncoding2}
!java.io.BufferedReader.readLine()CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javañ" ñ(*2s
java.lang.String.trim()CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaó ó( 2~
"java.lang.String.indexOf(int, int)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaô& ô(-2v
java.util.Optional.empty()CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaú$ ú()2s
java.lang.String.trim()CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java†6 †(:2{
java.lang.String.substring(int)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java† †(%2â
-java.lang.String.startsWith(java.lang.String)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java¢ ¢(#2â
-java.lang.String.startsWith(java.lang.String)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java§  §(*2y
java.lang.String.indexOf(int)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaß1 ß(82Ä
$java.lang.String.substring(int, int)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java™( ™(12u
java.lang.String.length()CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java™T ™(Z2{
java.lang.String.substring(int)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java¨( ¨(12u
java.lang.String.length()CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java¨T ¨(Z2t
java.util.Optional.of(T)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaØ$ Ø(&2é
2java.nio.charset.Charset.forName(java.lang.String)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaØ/ Ø(62v
java.util.Optional.empty()CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java≤$ ≤()2v
java.util.Optional.empty()CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java∏ ∏(2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javañ ñ(2¬
forg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)!readerCALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javañ ñ(!2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaó ó(2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaó ó(2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaô! ô(%2‘
xorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?percentPos@153.20:153.30CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaõ õ(2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java† †(2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java† †(2‘
xorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?percentPos@153.20:153.30CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java†& †(02Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java¢ ¢(2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java§ §(2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaß, ß(02◊
{org.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?atSymbolIndex@167.28:167.41CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java© ©(%2“
vorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?encoding@168.27:168.35CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java™ ™( 2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java™# ™('2◊
{org.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?atSymbolIndex@167.28:167.41CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java™^ ™(k2“
vorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?encoding@168.27:168.35CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java¨ ¨( 2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java¨# ¨('2“
vorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?encoding@168.27:168.35CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaØ7 Ø(?2¢
Forg.jabref.logic.importer.fileformat.BibtexImporter?LOGGER@31.32:31.38CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java∂ ∂(2À
oorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?e@181.29:181.30CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java∂F ∂(G2•
Iorg.jabref.logic.importer.fileformat.BibtexImporter?SIGNATURE@34.32:34.41CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java¢3 ¢(<2«
forg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)!reader	PARAMETERR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaìH ì(N2’
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23DECLARATIONR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaï ï(2€
xorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?percentPos@153.20:153.30DECLARATIONR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaô ô(2ﬁ
{org.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?atSymbolIndex@167.28:167.41DECLARATIONR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaß ß()2Ÿ
vorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?encoding@168.27:168.35DECLARATIONR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java® ®(#2“
oorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?e@181.29:181.30DECLARATIONR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaµ µ(2u
java.util.OptionalRETURN_TYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaì ì(2Ñ
java.nio.charset.CharsetRETURN_TYPE_ARGUMENTR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaì ì(# 
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23VARIABLER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaï ï("
typeString"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>String <mark class="class-field">line</mark>*line2l
java.lang.StringTYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaï ï(—
xorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?percentPos@153.20:153.30VARIABLER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaô ô("
typevar"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>var <mark class="class-field">percentPos</mark> = line.indexOf('%'<mark class="modifier">,</mark> 0)*
percentPos2_
intTYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaô ô(2~
"java.lang.String.indexOf(int, int)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaô& ô(-2Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaô! ô(%»
{org.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?atSymbolIndex@167.28:167.41VARIABLER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaß ß()"
typeInteger"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>Integer <mark class="class-field">atSymbolIndex</mark> = line.indexOf('@')*atSymbolIndex2m
java.lang.IntegerTYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaß ß(2y
java.lang.String.indexOf(int)CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaß1 ß(82Œ
rorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?line@149.19:149.23CALLR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaß, ß(0÷
vorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?encoding@168.27:168.35VARIABLER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java® ®(#"
typeString"
isFinalfalse"d
declarationStringO<mark class="modifier"> </mark>String <mark class="class-field">encoding</mark>*encoding2l
java.lang.StringTYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java® ®(ô
forg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)!reader	PARAMETERR
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaìH ì(N"
typeBufferedReader"
isFinalfalse"*
declarationStringBufferedReader reader*reader2r
java.io.BufferedReaderTYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaì9 ì(Gé
oorg.jabref.logic.importer.fileformat.BibtexImporter.getSuppliedEncoding(java.io.BufferedReader)?e@181.29:181.30VARIABLER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaµ µ("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2o
java.io.IOExceptionTYPER
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.javaµ µ(¬
Forg.jabref.logic.importer.fileformat.BibtexImporter?LOGGER@31.32:31.38VALUEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java  (&"
isFinaltrue"
typeLogger"‰
declarationStringŒ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(BibtexImporter.class);"
isStatictrue"
accessprivate*LOGGER2j
org.slf4j.LoggerTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java (¡
Iorg.jabref.logic.importer.fileformat.BibtexImporter?SIGNATURE@34.32:34.41VALUEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java"  "()"
isFinaltrue"
typeString"›
declarationString«<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">SIGNATURE</mark> = "This file was created with JabRef";"
isStatictrue"
accessprivate*	SIGNATURE2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java" "(…
Worg.jabref.logic.importer.fileformat.BibtexImporter?importFormatPreferences@36.42:36.65VALUEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java$* $(A"
isFinaltrue"
typeImportFormatPreferences"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">final </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2q
ImportFormatPreferencesTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java$ $()™
Korg.jabref.logic.importer.fileformat.BibtexImporter?fileMonitor@37.36:37.47VALUEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java%$ %(/"
isFinaltrue"
typeFileUpdateMonitor"û
declarationStringà<mark class="modifier">private </mark><mark class="modifier">final </mark>FileUpdateMonitor <mark class="class-field">fileMonitor</mark>"
isStaticfalse"
accessprivate*fileMonitor2Å
'org.jabref.model.util.FileUpdateMonitorTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java% %(#