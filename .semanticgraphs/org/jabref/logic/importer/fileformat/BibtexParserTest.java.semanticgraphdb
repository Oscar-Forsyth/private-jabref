
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ◊
5org.jabref.logic.importer.fileformat.BibtexParserTestCLASSR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaL L("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"h
declarationStringS<mark class="modifier"> </mark><mark class="modifier">class </mark>BibtexParserTest"
accesspackage_private*BibtexParserTest2†
=org.jabref.logic.importer.fileformat.BibtexParserTest.setUp()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaR	 R(2¬
_org.jabref.logic.importer.fileformat.BibtexParserTest.parseWithNullThrowsNullPointerException()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaY	 Y(02¥
Qorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringRecognizesEntry()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java_	 _("2ƒ
aorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListFromEmptyString()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javai	 i(22»
eorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListIfNoEntryRecognized()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javao	 o(62∫
Worg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntry()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javav	 v((2∆
aorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntryInMultiple()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ	 Ö(22»
corg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyFromEmptyString()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê	 ê(42Ã
gorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyIfNoEntryRecognized()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ	 ñ(82±
Lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú	 ú(2«
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldValuesInQuotationMarks()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶	 ¶(32º
Worg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryOnlyWithKey()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞	 ∞((2 
eorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespaceAtBeginning()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏	 ∏(62ø
Zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespace()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√	 √(+2Ω
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithNewlines()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ	 Õ()2¿
[org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithUnknownType()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊	 ◊(,2¡
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithVeryLongType()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·	 ·(-2æ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryInParenthesis()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ	 Î(*2ø
Zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithBigNumbers()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı	 ı(+2Ã
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCitationKeyWithSpecialCharacters()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ	 Ñ(82“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWhereLastFieldIsFinishedWithComma()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé	 é(>2æ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtInField()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò	 ò(*2¡
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	 ¢(-2ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntries()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥	 ≥('2π
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈	 ≈(%2≈
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntriesOnSameLine()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–	 –(12æ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleAuthorFields()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	 ‹(*2æ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleEditorFields()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ	 Ê(*2¿
[org.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleKeywordsFields()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java	 (,2ƒ
_org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙	 ˙(02π
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù	 ù(%2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesNumbersWithoutBracketsOrQuotationMarks()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ	 Ω(>2ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercaseFields()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«	 «('2∏
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesAbsoluteFile()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java—	 —($2Ω
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFinalSlashAsSlash()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€	 €()2 
eorg.jabref.logic.importer.fileformat.BibtexParserTest.parseFailsWithFinalSlashAsSlashWhenSingleLine()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ	 Ì(62∆
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDateFieldWithConcatenation()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ	 Ù(22≈
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryRecognized()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛	 ˛(12√
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryExistent()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê	 ê(/2∆
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseNotWarnsAboutEntryWithoutCitationKey()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö	 ö(22”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§	 §(?2ƒ
_org.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	 ¨(02«
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	 ª(32„
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java 	  (O2√
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’	 ’(/2œ
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntryWithoutComma()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡(;2√
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ	 È(/2ƒ
_org.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ	 Û(02Õ
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛	 ˛(92÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç	 ç(B2À
forg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú	 ú(72ﬂ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	 ¨(K2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑	 ∑(B2…
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java»	 »(52¥
Oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreamble()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ	 ÿ( 2Ω
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercasePreamble()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡()2¬
]org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithWhitespace()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË	 Ë(.2¡
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleInParenthesis()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java	 (-2≈
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithConcatenation()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯	 ¯(12≤
Morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ	 Ä(2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå	 å(=2¿
[org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò	 ò(,2ø
Zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§	 §(+2ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞	 ∞('2∫
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆	 ∆(&2Œ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡(:2±
Lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresComments()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ	 È(2π
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresUpercaseComments()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ	 Ò(%2º
Worg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘	 ˘((2ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà	 à('2≠
Horg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresText()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó	 ó(2∏
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü	 ü($2∑
Rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ	 Æ(#2∏
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ	 Ω($2¡
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java»	 »(-2¥
Oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’	 ’( 2Ω
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡()2Ã
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ	 Ì(82æ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚	 ˚(*2¡
\org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ	 Ö(-2π
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè	 è(%2¿
[org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°	 °(,2≈
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseFileHeaderAndPreambleWithoutNewLine()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±	 ±(12¡
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫	 ∫(-2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆	 ∆(<2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”	 ”(D2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·	 ·(B2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java	 (>2Ω
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogue()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà		 à	()2«
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè		 è	(32≈
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù		 ù	(12¡
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´		 ´	(-2≥
Norg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√		 √	(2π
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCRLFLineBreak()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ		 Ì	(%2∑
Rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesLFLineBreak()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙		 ˙	(#2∑
Rorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá
	 á
(#2∏
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBibEntryType()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì
	 ì
($2ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveOrderConfig()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß
	 ß
('2º
Worg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂
	 ∂
((2∏
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBiblatexMode()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈
	 ≈
($2µ
Porg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ
	 œ
(!2¥
Oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestTexGroup()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ
	 Í
( 2π
Torg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestProtectedFlag()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ	 É(%2º
Worg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã	 ã((2≥
Norg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô	 ô(2Ø
Jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©	 ©(2∂
Qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ	 π("2…
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«	 «(52ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestFileDirectories()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’	 ’('2∆
aorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ	 Á("2‚
}org.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ	 Ò(,2ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯	 ¯('2≤
Morg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì	 ì(2∫
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´	 ´(&2æ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬	 ¬(*2≤
Morg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ	 œ(2ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ	 ÿ('2∏
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ	 Í($2√
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ	 Û(/2∫
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ	 Ö(&2∆
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô	 ô(22ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyPreambleLeadsToEmpty()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠	 ≠('2∫
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyFileLeadsToPreamble()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ	 µ(&2µ
Porg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthString()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ	 Ω(!2¡
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithIllFormattedMonthString()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ	 ƒ(-2µ
Porg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthNumber()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ	 À(!2¶
Aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYear()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“	 “(2ﬁ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ	 Ÿ(J2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ	 È(?2æ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthors()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘	 ˘(*2∫
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsParsedAsMonthApril()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ	 Ö(&2ª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsDisplayedAsConstant()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå	 å('2ƒ
_org.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsMonthApril()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì	 ì(02≈
`org.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsDisplayedAsConstant()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö	 ö(12›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsStringMonthAprilWhenReadingTheField()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°	 °(I2√
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithOnlyOneEntry()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®	 ®(/2¡
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ	 µ(-2º
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaN$ N(;2´
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaO O(Î	
=org.jabref.logic.importer.fileformat.BibtexParserTest.setUp()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaR	 R("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2µ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaS S(2µ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaT T($2§
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaU U(2µ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaU" U(92g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaR R(«
_org.jabref.logic.importer.fileformat.BibtexParserTest.parseWithNullThrowsNullPointerException()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaY	 Y(0"
isFinalfalse"î
declarationString˛<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseWithNullThrowsNullPointerException</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'parseWithNullThrowsNullPointerException2£
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaZ- Z(22§
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaZ& Z(,2“
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWithNullThrowsNullPointerException()?toBeTested@90.19:90.29CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java[1 [(;2Ÿ
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWithNullThrowsNullPointerException()?toBeTested@90.19:90.29DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaZ Z(2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaY Y(Ñ
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWithNullThrowsNullPointerException()?toBeTested@90.19:90.29VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaZ Z("
type
Executable"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>Executable <mark class="class-field">toBeTested</mark> = () -> parser.parse(<mark class="modifier">null</mark>)*
toBeTested2Ö
)org.junit.jupiter.api.function.ExecutableTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaZ Z(2£
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaZ- Z(22§
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaZ& Z(,Ü
Qorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringRecognizesEntry()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java_	 _(""
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fromStringRecognizesEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*fromStringRecognizesEntry2õ
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaa a(2ª
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javad d(2ù
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javac c( 2p
java.util.List.of(E)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javae e(2¨
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javab  b((2§
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java`  `(&2¬
forg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringRecognizesEntry()?expected@98.17:98.25CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javae e(%2¿
dorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringRecognizesEntry()?result@96.23:96.29CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javae( e(.2«
dorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringRecognizesEntry()?result@96.23:96.29DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java` `(2…
forg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringRecognizesEntry()?expected@98.17:98.25DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javab b(2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java_ _(Ÿ
dorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringRecognizesEntry()?result@96.23:96.29VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java` `("
typeList<BibEntry>"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = parser.parseEntries("@article{test,author={Ed von Test}}")*result2j
java.util.ListTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java` `(2Ñ
org.jabref.model.entry.BibEntryTYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java` `(2õ
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaa a(2§
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java`  `(&Ÿ
forg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringRecognizesEntry()?expected@98.17:98.25VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javab b("
typeBibEntry"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2{
org.jabref.model.entry.BibEntryTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javab b(2ª
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javad d(2ù
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javac c( 2¨
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javab  b((…
aorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListFromEmptyString()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javai	 i(2"
isFinalfalse"õ
declarationStringÖ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fromStringReturnsEmptyListFromEmptyString</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)fromStringReturnsEmptyListFromEmptyString2õ
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaj- j(92}
!java.util.Collections.emptyList()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javak! k(*2§
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaj& j(,2“
vorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListFromEmptyString()?parsed@106.29:106.35CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javak. k(42Ÿ
vorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListFromEmptyString()?parsed@106.29:106.35DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaj j(#2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javai i(Ÿ
vorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListFromEmptyString()?parsed@106.29:106.35VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaj j(#"
typeCollection<BibEntry>"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = parser.parseEntries("")*parsed2p
java.util.CollectionTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaj j(2Ñ
org.jabref.model.entry.BibEntryTYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaj j(2õ
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaj- j(92§
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaj& j(,›
eorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListIfNoEntryRecognized()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javao	 o(6"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fromStringReturnsEmptyListIfNoEntryRecognized</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*-fromStringReturnsEmptyListIfNoEntryRecognized2õ
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaq q(2}
!java.util.Collections.emptyList()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javar! r(*2§
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javap& p(,2÷
zorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListIfNoEntryRecognized()?parsed@112.29:112.35CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javar. r(42›
zorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListIfNoEntryRecognized()?parsed@112.29:112.35DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javap p(#2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javao o(
zorg.jabref.logic.importer.fileformat.BibtexParserTest.fromStringReturnsEmptyListIfNoEntryRecognized()?parsed@112.29:112.35VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javap p(#"
typeCollection<BibEntry>"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = parser.parseEntries("@@article@@{{{{{{}")*parsed2p
java.util.CollectionTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javap p(2Ñ
org.jabref.model.entry.BibEntryTYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javap p(2õ
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaq q(2§
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javap& p(,ı
Worg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntry()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javav	 v(("
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">singleFromStringRecognizesEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*singleFromStringRecognizesEntry2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(2ª
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (2ù
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java~ ~( 2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å( 2¨
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java}  }((2µ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java| |('2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntry()?expected@125.17:125.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ! Å()2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntry()?parsed@119.27:119.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ, Å(22œ
lorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntry()?parsed@119.27:119.33DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaw w(!2—
norg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntry()?expected@125.17:125.25DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java} }(2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javav v(ˇ
lorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntry()?parsed@119.27:119.33VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaw w(!"
typeOptional<BibEntry>"
isFinalfalse"À
declarationStringµ<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">parsed</mark> = BibtexParser.singleFromString("""
    @article{canh05,  author = {Crowston, K. and Annabi, H.}<mark class="modifier">,</mark>
      title = {Title A}}
    """<mark class="modifier">,</mark> importFormatPreferences)*parsed2n
java.util.OptionalTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaw w(2Ñ
org.jabref.model.entry.BibEntryTYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaw w(2µ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java| |('›

norg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntry()?expected@125.17:125.25VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java} }("
typeBibEntry"
isFinalfalse"î
declarationString˛<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("canh05").withField(StandardField.AUTHOR, "Crowston, K. and Annabi, H.").withField(StandardField.TITLE, "Title A")*expected2{
org.jabref.model.entry.BibEntryTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java} }(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(2ª
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (2ù
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java~ ~( 2¨
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java}  }((∏
aorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntryInMultiple()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ	 Ö(2"
isFinalfalse"õ
declarationStringÖ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">singleFromStringRecognizesEntryInMultiple</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)singleFromStringRecognizesEntryInMultiple2â
+java.util.Optional.equals(java.lang.Object)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã1 ã(72é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã  ã(.2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã ã(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaãA ã(C2â
+java.util.Optional.equals(java.lang.Object)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå1 å(72é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå  å(.2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaåA å(C2∑
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä('2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntryInMultiple()?parsed@134.27:134.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã ã(2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntryInMultiple()?parsed@134.27:134.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntryInMultiple()?parsed@134.27:134.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(ª
vorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringRecognizesEntryInMultiple()?parsed@134.27:134.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(!"
typeOptional<BibEntry>"
isFinalfalse"ı
declarationStringﬂ<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">parsed</mark> = BibtexParser.singleFromString("""
    @article{canh05, author = {Crowston, K. and Annabi, H.}<mark class="modifier">,</mark>
        title = {Title A}}
    @inProceedings{foo,  author={Norton Bar}}"""<mark class="modifier">,</mark> importFormatPreferences)*parsed2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2∑
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä('À
corg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyFromEmptyString()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê	 ê(4"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">singleFromStringReturnsEmptyFromEmptyString</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*+singleFromStringReturnsEmptyFromEmptyString2x
java.util.Optional.empty()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(#2∑
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaëF ë(]2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyFromEmptyString()?parsed@145.27:145.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí' í(-2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyFromEmptyString()?parsed@145.27:145.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê(í
xorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyFromEmptyString()?parsed@145.27:145.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(!"
typeOptional<BibEntry>"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">parsed</mark> = BibtexParser.singleFromString(""<mark class="modifier">,</mark> importFormatPreferences)*parsed2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2∑
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaëF ë(]ﬂ
gorg.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyIfNoEntryRecognized()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ	 ñ(8"
isFinalfalse"°
declarationStringã<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">singleFromStringReturnsEmptyIfNoEntryRecognized</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*/singleFromStringReturnsEmptyIfNoEntryRecognized2x
java.util.Optional.empty()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò(#2∑
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaóX ó(o2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyIfNoEntryRecognized()?parsed@151.27:151.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò' ò(-2·
|org.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyIfNoEntryRecognized()?parsed@151.27:151.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó ó(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ ñ(®
|org.jabref.logic.importer.fileformat.BibtexParserTest.singleFromStringReturnsEmptyIfNoEntryRecognized()?parsed@151.27:151.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó ó(!"
typeOptional<BibEntry>"
isFinalfalse"‹
declarationString∆<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">parsed</mark> = BibtexParser.singleFromString("@@article@@{{{{{{}"<mark class="modifier">,</mark> importFormatPreferences)*parsed2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó ó(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó ó(2∑
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaóX ó(oƒ
Lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú	 ú("
isFinalfalse"É
declarationStringÌ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢= ¢(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢/ ¢(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü  ü((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù($2¡
corg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntry()?expected@159.17:159.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(%2ø
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntry()?result@157.21:157.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢( ¢(.2∆
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntry()?result@157.21:157.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù(2»
corg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntry()?expected@159.17:159.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú(ì
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntry()?result@157.21:157.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù("
typeParserResult"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù($‡
corg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntry()?expected@159.17:159.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü("
typeBibEntry"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü  ü((ﬁ
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldValuesInQuotationMarks()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶	 ¶(3"
isFinalfalse"ô
declarationStringÉ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesFieldValuesInQuotationMarks</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid**parseRecognizesFieldValuesInQuotationMarks2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨= ¨(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨/ ¨(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©  ©((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß($2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldValuesInQuotationMarks()?expected@169.17:169.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨(%2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldValuesInQuotationMarks()?result@167.21:167.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨( ¨(.2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldValuesInQuotationMarks()?result@167.21:167.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß(2ﬁ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldValuesInQuotationMarks()?expected@169.17:169.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(´
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldValuesInQuotationMarks()?result@167.21:167.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß("
typeParserResult"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author=\"Ed von Test\"}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß($ˆ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldValuesInQuotationMarks()?expected@169.17:169.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©("
typeBibEntry"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©  ©((—
Worg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryOnlyWithKey()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞	 ∞(("
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryOnlyWithKey</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesEntryOnlyWithKey2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±% ±(*2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥= ¥(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥/ ¥(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±/ ±(;2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤  ≤((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±($2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryOnlyWithKey()?expected@178.17:178.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥(%2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryOnlyWithKey()?result@177.21:177.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥( ¥(.2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryOnlyWithKey()?result@177.21:177.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryOnlyWithKey()?expected@178.17:178.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(â
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryOnlyWithKey()?result@177.21:177.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±("
typeParserResult"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±% ±(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±/ ±(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±($¸
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryOnlyWithKey()?expected@178.17:178.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤("
typeBibEntry"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤  ≤((ñ
eorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespaceAtBeginning()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏	 ∏(6"
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryWithWhitespaceAtBeginning</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*-parseRecognizesEntryWithWhitespaceAtBeginning2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω( 2†
Borg.jabref.model.entry.BibEntry.withUserComments(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(!2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø= ø(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø/ ø(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª  ª((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π($2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespaceAtBeginning()?expected@187.17:187.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(%2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespaceAtBeginning()?result@185.21:185.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø( ø(.2ﬂ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespaceAtBeginning()?result@185.21:185.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(2·
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespaceAtBeginning()?expected@187.17:187.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏(≠
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespaceAtBeginning()?result@185.21:185.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π("
typeParserResult"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(" @article{test,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π($≤

|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespaceAtBeginning()?expected@187.17:187.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª("
typeBibEntry"
isFinalfalse"Ó
declarationStringÿ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withUserComments(" ").withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω( 2†
Borg.jabref.model.entry.BibEntry.withUserComments(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(!2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª  ª((¶
Zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespace()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√	 √(+"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryWithWhitespace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*"parseRecognizesEntryWithWhitespace2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…= …(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…/ …(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆  ∆((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ($2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespace()?expected@198.17:198.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(%2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespace()?result@196.21:196.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…( …(.2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespace()?result@196.21:196.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ(2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespace()?expected@198.17:198.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√ √(£
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespace()?result@196.21:196.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ("
typeParserResult"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article { test,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ($Ó
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithWhitespace()?expected@198.17:198.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆("
typeBibEntry"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆  ∆((ò
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithNewlines()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ	 Õ()"
isFinalfalse"è
declarationString˘<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryWithNewlines</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* parseRecognizesEntryWithNewlines2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”= ”(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”/ ”(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–  –((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ($2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithNewlines()?expected@208.17:208.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(%2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithNewlines()?result@206.21:206.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”( ”(.2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithNewlines()?result@206.21:206.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithNewlines()?expected@208.17:208.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(£
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithNewlines()?result@206.21:206.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ("
typeParserResult"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article\n{\ntest,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ($Ï
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithNewlines()?expected@208.17:208.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –("
typeBibEntry"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–  –((ﬁ
[org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithUnknownType()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊	 ◊(,"
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryWithUnknownType</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*#parseRecognizesEntryWithUnknownType2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java› ›(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›= ›(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›/ ›(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄  ⁄((2Æ
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄- ⁄(=2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ($2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithUnknownType()?expected@218.17:218.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java› ›(%2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithUnknownType()?result@216.21:216.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›( ›(.2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithUnknownType()?result@216.21:216.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithUnknownType()?expected@218.17:218.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊(¢
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithUnknownType()?result@216.21:216.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ("
typeParserResult"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@unknown{test,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ($¶

rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithUnknownType()?expected@218.17:218.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄("
typeBibEntry"
isFinalfalse"ﬁ
declarationString»<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(new UnknownEntryType("unknown")).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄  ⁄((2Æ
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄- ⁄(=Â
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithVeryLongType()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·	 ·(-"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryWithVeryLongType</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$parseRecognizesEntryWithVeryLongType2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚% ‚(*2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ Ê(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ= Á(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ/ Á(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰  ‰((2Æ
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰- ‰(=2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚($2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithVeryLongType()?expected@228.17:228.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á(%2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithVeryLongType()?result@226.21:226.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ( Á(.2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithVeryLongType()?result@226.21:226.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithVeryLongType()?expected@228.17:228.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithVeryLongType()?result@226.21:226.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚("
typeParserResult"
isFinalfalse"›
declarationString«<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@thisIsALongStringToTestMaybeItIsToLongWhoKnowsNOTme{test,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚% ‚(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚($”

sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithVeryLongType()?expected@228.17:228.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰("
typeBibEntry"
isFinalfalse"ä
declarationStringÙ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(new UnknownEntryType("thisisalongstringtotestmaybeitistolongwhoknowsnotme")).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ Ê(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰  ‰((2Æ
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰- ‰(=ü
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryInParenthesis()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ	 Î(*"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryInParenthesis</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!parseRecognizesEntryInParenthesis2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ Ô( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ= Ò(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ/ Ò(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ  Ó((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï($2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryInParenthesis()?expected@238.17:238.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(%2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryInParenthesis()?result@236.21:236.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ( Ò(.2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryInParenthesis()?result@236.21:236.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryInParenthesis()?expected@238.17:238.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ Ó(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(†
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryInParenthesis()?result@236.21:236.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï("
typeParserResult"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article(test,author={Ed von Test})"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï($Ì
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryInParenthesis()?expected@238.17:238.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ Ó("
typeBibEntry"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ Ó(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ Ô( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ  Ó((‰
Zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithBigNumbers()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı	 ı(+"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryWithBigNumbers</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*"parseRecognizesEntryWithBigNumbers2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ% ˆ(*2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ= Ä(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ/ Ä(:2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚  ˚((2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(+2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(+2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ($2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithBigNumbers()?expected@251.17:251.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(%2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithBigNumbers()?result@246.21:246.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ( Ä(.2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithBigNumbers()?result@246.21:246.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithBigNumbers()?expected@251.17:251.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(˚
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithBigNumbers()?result@246.21:246.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ("
typeParserResult"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("""
    @article{canh05,isbn = 1234567890123456789,
    isbn2 = {1234567890123456789}<mark class="modifier">,</mark>
    small = 1234,
    }"""))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ% ˆ(*2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ($Ì
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithBigNumbers()?expected@251.17:251.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚("
typeBibEntry"
isFinalfalse"Ö
declarationStringÔ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("canh05").withField(StandardField.ISBN, "1234567890123456789").withField(new UnknownField("isbn2")<mark class="modifier">,</mark> "1234567890123456789").withField(new UnknownField("small")<mark class="modifier">,</mark> "1234")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚  ˚((2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(+2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(+Å
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCitationKeyWithSpecialCharacters()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ	 Ñ(8"
isFinalfalse"û
declarationStringà<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesCitationKeyWithSpecialCharacters</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*/parseRecognizesCitationKeyWithSpecialCharacters2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà à( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä= ä(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä/ ä(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá  á((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö($2‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCitationKeyWithSpecialCharacters()?expected@263.17:263.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(%2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCitationKeyWithSpecialCharacters()?result@261.21:261.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä( ä(.2·
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCitationKeyWithSpecialCharacters()?result@261.21:261.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(2„
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCitationKeyWithSpecialCharacters()?expected@263.17:263.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá á(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ(»
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCitationKeyWithSpecialCharacters()?result@261.21:261.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö("
typeParserResult"
isFinalfalse"À
declarationStringµ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{te_st:with-special(characters),author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö($ï	
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCitationKeyWithSpecialCharacters()?expected@263.17:263.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá á("
typeBibEntry"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("te_st:with-special(characters)").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá á(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà à( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá  á((Ø
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWhereLastFieldIsFinishedWithComma()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé	 é(>"
isFinalfalse"§
declarationStringé<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryWhereLastFieldIsFinishedWithComma</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*5parseRecognizesEntryWhereLastFieldIsFinishedWithComma2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî= î(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî/ î(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë  ë((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è($2„
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWhereLastFieldIsFinishedWithComma()?expected@273.17:273.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(%2·
Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWhereLastFieldIsFinishedWithComma()?result@271.21:271.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî( î(.2Ë
Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWhereLastFieldIsFinishedWithComma()?result@271.21:271.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2Í
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWhereLastFieldIsFinishedWithComma()?expected@273.17:273.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é(‘
Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWhereLastFieldIsFinishedWithComma()?result@271.21:271.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è("
typeParserResult"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={Ed von Test}<mark class="modifier">,</mark>}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è($Ç	
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWhereLastFieldIsFinishedWithComma()?expected@273.17:273.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë("
typeBibEntry"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë  ë((Ω
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtInField()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò	 ò(*"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryWithAtInField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!parseRecognizesEntryWithAtInField2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú(2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû= û(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû/ û(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ  õ((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô($2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtInField()?expected@283.17:283.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(%2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtInField()?result@281.21:281.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû( û(.2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtInField()?result@281.21:281.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô(2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtInField()?expected@283.17:283.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò(†
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtInField()?result@281.21:281.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô("
typeParserResult"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={Ed von T@st}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô($û	
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtInField()?expected@283.17:283.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ("
typeBibEntry"
isFinalfalse"Î
declarationString’<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withField(InternalField.KEY_FIELD, "test").withField(StandardField.AUTHOR, "Ed von T@st")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ  õ((Ò*
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	 ¢(-"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryPrecedingComment</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$parseRecognizesEntryPrecedingComment2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß(2¶
Horg.jabref.model.entry.BibEntry.setCommentsBeforeEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©('2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´% ´(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨5 ¨(?2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨' ¨(22r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(2è
1org.jabref.model.entry.BibEntry.getUserComments()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø(-2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶  ¶((2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´/ ´(;2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?comment@291.15:291.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•" •()2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?expected@294.17:294.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©(2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?comment@291.15:291.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©( ©(/2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´($2Ÿ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?entryWithComment@293.15:293.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´< ´(L2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?result@299.21:299.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨  ¨(&2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?expected@294.17:294.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(%2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?parsed@300.23:300.29CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ( Æ(.2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?expected@294.17:294.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø(2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?parsed@300.23:300.29CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ1 Ø(72◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?comment@291.15:291.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(2‡
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?entryWithComment@293.15:293.31DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?expected@294.17:294.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?result@299.21:299.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´(2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?parsed@300.23:300.29DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(Â
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?comment@291.15:291.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £("
typeString"
isFinalfalse"Û
declarationString›<mark class="modifier"> </mark>String <mark class="class-field">comment</mark> = "@Comment{@article{myarticle,}" + OS.NEWLINE + "@inproceedings{blabla, title={the proceedings of bl@bl@}; }" + OS.NEWLINE + "}" + OS.NEWLINE*comment2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(ˆ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?entryWithComment@293.15:293.31VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •("
typeString"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>String <mark class="class-field">entryWithComment</mark> = comment + "@article{test,author={Ed von T@st}}"*entryWithComment2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?comment@291.15:291.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•" •()°	
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?expected@294.17:294.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶("
typeBibEntry"
isFinalfalse"Î
declarationString’<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withField(InternalField.KEY_FIELD, "test").withField(StandardField.AUTHOR, "Ed von T@st")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶  ¶((Í	
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?result@299.21:299.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´("
typeParserResult"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(entryWithComment))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´% ´(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´/ ´(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´($2Ÿ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?entryWithComment@293.15:293.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´< ´(Lá	
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?parsed@300.23:300.29VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨("
typeList<BibEntry>"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨5 ¨(?2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨' ¨(22œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryPrecedingComment()?result@299.21:299.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨  ¨(&Ã
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntries()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥	 ≥('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesMultipleEntries</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesMultipleEntries2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥% ¥(*2u
java.util.List.of(E, E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ' π()2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω("2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º("2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª((2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿("2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø((2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡4 ¡(>2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡& ¡(12Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥($2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntries()?expected@313.23:313.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡(2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntries()?result@308.21:308.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡(%2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntries()?result@308.21:308.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntries()?expected@313.23:313.31DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(ê
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntries()?result@308.21:308.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥("
typeParserResult"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("""
    @article{canh05,  author = {Crowston, K. and Annabi, H.}<mark class="modifier">,</mark>
      title = {Title A}}
    @inProceedings{foo,  author={Norton Bar}}"""))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥% ¥(*2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥($è
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntries()?expected@313.23:313.31VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π("
typeList<BibEntry>"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">expected</mark> = List.of(new BibEntry(StandardEntryType.Article).withCitationKey("canh05").withField(StandardField.AUTHOR, "Crowston, K. and Annabi, H.").withField(StandardField.TITLE, "Title A")<mark class="modifier">,</mark> new BibEntry(StandardEntryType.InProceedings).withCitationKey("foo").withField(StandardField.AUTHOR, "Norton Bar"))*expected2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(2u
java.util.List.of(E, E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ' π()2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω("2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º("2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª((2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿("2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø((2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(™
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈	 ≈(%"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseSetsParsedSerialization</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseSetsParsedSerialization2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java <  (F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java .  (92•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…. …(32ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ7 Ã(M2u
java.util.List.get(int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ0 Ã(32ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…8 …(D2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…' …(-2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?firstEntry@326.15:326.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…E …(O2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?secondEntry@328.15:328.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…R …(]2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?firstEntry@326.15:326.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?parsedEntries@329.23:329.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ! À(.2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?secondEntry@328.15:328.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã( 2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?parsedEntries@329.23:329.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ" Ã(/2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?firstEntry@326.15:326.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?secondEntry@328.15:328.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?parsedEntries@329.23:329.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …($2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈(Î
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?firstEntry@326.15:326.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆("
typeString"
isFinalfalse"˚
declarationStringÂ<mark class="modifier"> </mark>String <mark class="class-field">firstEntry</mark> = "@article{canh05," + "  author = {Crowston, K. and Annabi, H.}<mark class="modifier">,</mark>" + OS.NEWLINE + "  title = {Title A}}" + OS.NEWLINE*
firstEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(ç
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?secondEntry@328.15:328.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »("
typeString"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>String <mark class="class-field">secondEntry</mark> = "@inProceedings{foo," + "  author={Norton Bar}}"*secondEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(˜
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?parsedEntries@329.23:329.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …($"
typeList<BibEntry>"
isFinalfalse"»
declarationString≤<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">parsedEntries</mark> = parser.parse(new StringReader(firstEntry + secondEntry)).getDatabase().getEntries()*parsedEntries2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java <  (F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java .  (92•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…. …(32ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…8 …(D2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…' …(-2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?firstEntry@326.15:326.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…E …(O2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseSetsParsedSerialization()?secondEntry@328.15:328.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…R …(]Ê
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntriesOnSameLine()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–	 –(1"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesMultipleEntriesOnSameLine</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*(parseRecognizesMultipleEntriesOnSameLine2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(2u
java.util.List.of(E, E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”' ”()2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’((2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊((2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ4 ÿ(>2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ& ÿ(12ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —($2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntriesOnSameLine()?expected@339.23:339.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntriesOnSameLine()?result@337.21:337.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(%2⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntriesOnSameLine()?result@337.21:337.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —(2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntriesOnSameLine()?expected@339.23:339.31DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –(¨
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntriesOnSameLine()?result@337.21:337.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —("
typeParserResult"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{canh05}" + "@inProceedings{foo}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —($¬
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleEntriesOnSameLine()?expected@339.23:339.31VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”("
typeList<BibEntry>"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">expected</mark> = List.of(new BibEntry(StandardEntryType.Article).withCitationKey("canh05")<mark class="modifier">,</mark> new BibEntry(StandardEntryType.InProceedings).withCitationKey("foo"))*expected2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(2u
java.util.List.of(E, E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”' ”()2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’((2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊((2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(ü
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleAuthorFields()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	 ‹(*"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseCombinesMultipleAuthorFields</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!parseCombinesMultipleAuthorFields2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›% ›(*2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡ ‡( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚= ‚(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚/ ‚(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬁ ﬁ( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬂ  ﬂ((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java› ›($2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleAuthorFields()?expected@351.17:351.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(%2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleAuthorFields()?result@349.21:349.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚( ‚(.2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleAuthorFields()?result@349.21:349.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java› ›(2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleAuthorFields()?expected@351.17:351.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬂ ﬂ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹(Õ
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleAuthorFields()?result@349.21:349.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java› ›("
typeParserResult"
isFinalfalse"ﬁ
declarationString»<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={Ed von Test},author={Second Author},author={Third Author}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java› ›(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›% ›(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬁ ﬁ( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java› ›($ê	
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleAuthorFields()?expected@351.17:351.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬂ ﬂ("
typeBibEntry"
isFinalfalse"˚
declarationStringÂ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test and Second Author and Third Author")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬂ ﬂ(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡ ‡( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬂ  ﬂ((ü
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleEditorFields()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ	 Ê(*"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseCombinesMultipleEditorFields</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!parseCombinesMultipleEditorFields2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ% Á(*2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ= Ï(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ/ Ï(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË Ë( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ  È((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á($2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleEditorFields()?expected@361.17:361.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(%2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleEditorFields()?result@359.21:359.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ( Ï(.2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleEditorFields()?result@359.21:359.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á(2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleEditorFields()?expected@361.17:361.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ Ê(Õ
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleEditorFields()?result@359.21:359.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á("
typeParserResult"
isFinalfalse"ﬁ
declarationString»<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,editor={Ed von Test},editor={Second Author},editor={Third Author}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ% Á(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË Ë( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á($ê	
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleEditorFields()?expected@361.17:361.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È("
typeBibEntry"
isFinalfalse"˚
declarationStringÂ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.EDITOR, "Ed von Test and Second Author and Third Author")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ  È((≠
[org.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleKeywordsFields()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java	 (,"
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseCombinesMultipleKeywordsFields</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*#parseCombinesMultipleKeywordsFields2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ% Ò(*2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ= ˆ(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ/ ˆ(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ  Û((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò($2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleKeywordsFields()?expected@371.17:371.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(%2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleKeywordsFields()?result@369.21:369.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ( ˆ(.2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleKeywordsFields()?result@369.21:369.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleKeywordsFields()?expected@371.17:371.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (–
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleKeywordsFields()?result@369.21:369.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò("
typeParserResult"
isFinalfalse"ﬂ
declarationString…<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,Keywords={Test},Keywords={Second Keyword},Keywords={Third Keyword}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ% Ò(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò($â	
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCombinesMultipleKeywordsFields()?expected@371.17:371.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û("
typeBibEntry"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.KEYWORDS, "Test, Second Keyword, Third Keyword")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ  Û((¨A
_org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙	 ˙(0"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesHeaderButIgnoresEncoding</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'parseRecognizesHeaderButIgnoresEncoding2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚% ˚(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ; â(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ- â(82w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä+ ä(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä  ä((2x
java.util.Optional.empty()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(#2é
0org.jabref.model.metadata.MetaData.getEncoding()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå< å(G2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå. å(92y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(#2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé< é(C2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è('2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê7 ê(E2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaëg ë(o2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï ï(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ ñ( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ0 ñ(82v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó ó( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó2 ó(:2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò6 ò(>2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaôW ô(_2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚($2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?result@379.21:379.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ& â(,2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?parsed@393.29:393.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?result@379.21:379.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå' å(-2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?parsed@393.29:393.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé6 é(;2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê1 ê(62—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaëa ë(f2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï ï(2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ* ñ(/2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó, ó(12—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò0 ò(52—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaôQ ô(V2Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?result@379.21:379.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?parsed@393.29:393.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(#2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(¶
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?result@379.21:379.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚("
typeParserResult"
isFinalfalse"≈
declarationStringØ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("""
    This file was created with JabRef 2.1 beta 2.
    Encoding: Cp1252
    
    @INPROCEEDINGS{CroAnnHow05,
      author = {Crowston, K. and Annabi, H. and Howison, J. and Masango, C.}<mark class="modifier">,</mark>
      title = {Effective work practices for floss development: A model and propositions}<mark class="modifier">,</mark>
      booktitle = {Hawaii International Conference On System Sciences (HICSS)}<mark class="modifier">,</mark>
      year = {2005}<mark class="modifier">,</mark>
      owner = {oezbek}<mark class="modifier">,</mark>
      timestamp = {2006.05.29}<mark class="modifier">,</mark>
      url = {http://james.howison.name/publications.html}
    }))"""))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚% ˚(*2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚($ü	
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?parsed@393.29:393.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ; â(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ- â(82“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?result@379.21:379.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ& â(,Ã
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?entry@394.17:394.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parsed.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä+ ä(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä  ä((2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesHeaderButIgnoresEncoding()?parsed@393.29:393.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(Ê:
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù	 ù(%"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesFormatedEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesFormatedEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû% û(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™; ™(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™- ™(82w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´+ ´(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´  ´((2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠(#2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ< Æ(C2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø('2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞7 ∞(E2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±g ±(o2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂0 ∂(82v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑2 ∑(:2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏6 ∏(>2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπW π(_2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û($2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?result@414.21:414.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™& ™(,2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?parsed@426.29:426.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´(2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?parsed@426.29:426.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠(2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ6 Æ(;2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø(2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞1 ∞(62∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±a ±(f2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂* ∂(/2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑, ∑(12∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏0 ∏(52∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπQ π(V2Œ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?result@414.21:414.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2Œ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?parsed@426.29:426.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™(#2Õ
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù(Ã
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?result@414.21:414.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û("
typeParserResult"
isFinalfalse"ˆ
declarationString‡<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("""
    @INPROCEEDINGS{CroAnnHow05,
      author = {Crowston, K. and Annabi, H. and Howison, J. and Masango, C.}<mark class="modifier">,</mark>
      title = {Effective work practices for floss development: A model and propositions}<mark class="modifier">,</mark>
      booktitle = {Hawaii International Conference On System Sciences (HICSS)}<mark class="modifier">,</mark>
      year = {2005}<mark class="modifier">,</mark>
      owner = {oezbek}<mark class="modifier">,</mark>
      timestamp = {2006.05.29}<mark class="modifier">,</mark>
      url = {http://james.howison.name/publications.html}
    }))"""))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû% û(*2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û($â	
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?parsed@426.29:426.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™; ™(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™- ™(82«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?result@414.21:414.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™& ™(,∂
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?entry@427.17:427.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parsed.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´+ ´(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´  ´((2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFormatedEntry()?parsed@426.29:426.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´(Ø
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesNumbersWithoutBracketsOrQuotationMarks()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ	 Ω(>"
isFinalfalse"§
declarationStringé<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesNumbersWithoutBracketsOrQuotationMarks</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*5parseRecognizesNumbersWithoutBracketsOrQuotationMarks2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√ √(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√= √(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√/ √(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿  ¿((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ($2„
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesNumbersWithoutBracketsOrQuotationMarks()?expected@448.17:448.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√ √(%2·
Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesNumbersWithoutBracketsOrQuotationMarks()?result@446.21:446.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√( √(.2Ë
Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesNumbersWithoutBracketsOrQuotationMarks()?result@446.21:446.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2Í
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesNumbersWithoutBracketsOrQuotationMarks()?expected@448.17:448.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(¨
Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesNumbersWithoutBracketsOrQuotationMarks()?result@446.21:446.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ("
typeParserResult"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,year = 2005}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ($˘
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesNumbersWithoutBracketsOrQuotationMarks()?expected@448.17:448.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿("
typeBibEntry"
isFinalfalse"œ
declarationStringπ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.YEAR, "2005")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿  ¿((ä
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercaseFields()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«	 «('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesUppercaseFields</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesUppercaseFields2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ= Õ(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ/ Õ(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java    ((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »($2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercaseFields()?expected@458.17:458.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(%2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercaseFields()?result@456.21:456.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ( Õ(.2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercaseFields()?result@456.21:456.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercaseFields()?expected@458.17:458.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   (2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «(ù
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercaseFields()?result@456.21:456.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »("
typeParserResult"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,AUTHOR={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »($Í
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercaseFields()?expected@458.17:458.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   ("
typeBibEntry"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   (2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java    ((ı
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesAbsoluteFile()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java—	 —($"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesAbsoluteFile</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesAbsoluteFile2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊= ◊(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊/ ◊(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘  ‘((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “($2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesAbsoluteFile()?expected@468.17:468.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊(%2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesAbsoluteFile()?result@466.21:466.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊( ◊(.2Õ
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesAbsoluteFile()?result@466.21:466.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(2œ
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesAbsoluteFile()?expected@468.17:468.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —(º
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesAbsoluteFile()?result@466.21:466.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “("
typeParserResult"
isFinalfalse"”
declarationStringΩ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,file = {D:\\Documents\\literature\\Tansel-PRL2006.pdf}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “($á	
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesAbsoluteFile()?expected@468.17:468.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘("
typeBibEntry"
isFinalfalse"¯
declarationString‚<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.FILE, "D:\\Documents\\literature\\Tansel-PRL2006.pdf")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘  ‘((º
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFinalSlashAsSlash()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€	 €()"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesFinalSlashAsSlash</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* parseRecognizesFinalSlashAsSlash2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java› ›(2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰("2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ% Â(/2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â("2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „($2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰' ‰(32¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹($2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFinalSlashAsSlash()?result@476.21:476.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFinalSlashAsSlash()?result@476.21:476.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €(€
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFinalSlashAsSlash()?result@476.21:476.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹("
typeParserResult"
isFinalfalse"Å
declarationStringÎ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("""
    @misc{<mark class="modifier">,</mark>
      test = {wired\\}<mark class="modifier">,</mark>
    }
    """))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java› ›(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹($§
eorg.jabref.logic.importer.fileformat.BibtexParserTest.parseFailsWithFinalSlashAsSlashWhenSingleLine()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ	 Ì(6"
isFinalfalse"ö
declarationStringÑ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseFailsWithFinalSlashAsSlashWhenSingleLine</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*-parseFailsWithFinalSlashAsSlashWhenSingleLine2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ+ Ó(02í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java  (+2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ5 Ó(A2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ$ Ó(*2ﬂ
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseFailsWithFinalSlashAsSlashWhenSingleLine()?parserResult@494.21:494.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (2Ê
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseFailsWithFinalSlashAsSlashWhenSingleLine()?parserResult@494.21:494.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ Ó(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì(”
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseFailsWithFinalSlashAsSlashWhenSingleLine()?parserResult@494.21:494.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ Ó(!"
typeParserResult"
isFinalfalse"À
declarationStringµ<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = parser.parse(new StringReader("@misc{<mark class="modifier">,</mark> test = {wired\\}}"))*parserResult2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ Ó(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ+ Ó(02ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ5 Ó(A2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ$ Ó(*◊
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDateFieldWithConcatenation()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ	 Ù(2"
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesDateFieldWithConcatenation</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)parseRecognizesDateFieldWithConcatenation2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯ ¯( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙= ˙(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙/ ˙(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜  ˜((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı($2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDateFieldWithConcatenation()?expected@503.17:503.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(%2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDateFieldWithConcatenation()?result@501.21:501.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙( ˙(.2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDateFieldWithConcatenation()?result@501.21:501.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDateFieldWithConcatenation()?expected@503.17:503.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(ß
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDateFieldWithConcatenation()?result@501.21:501.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı("
typeParserResult"
isFinalfalse"∞
declarationStringö<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,date = {1-4~} # nov}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı($Ò
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDateFieldWithConcatenation()?expected@503.17:503.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜("
typeBibEntry"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.DATE, "1-4~#nov#")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯ ¯( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜  ˜((¨
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryRecognized()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛	 ˛(1"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseReturnsEmptyListIfNoEntryRecognized</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*(parseReturnsEmptyListIfNoEntryRecognized2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ% ˇ(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä; ä(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä- ä(82y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(#2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ($2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryRecognized()?result@511.21:511.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä& ä(,2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryRecognized()?parsed@522.29:522.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(2⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryRecognized()?result@511.21:511.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryRecognized()?parsed@522.29:522.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(#2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(∑
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryRecognized()?result@511.21:511.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ("
typeParserResult"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("""
      author = {Crowston, K. and Annabi, H. and Howison, J. and Masango, C.}<mark class="modifier">,</mark>
      title = {Effective work practices for floss development: A model and propositions}<mark class="modifier">,</mark>
      booktitle = {Hawaii International Conference On System Sciences (HICSS)}<mark class="modifier">,</mark>
      year = {2005}<mark class="modifier">,</mark>
      owner = {oezbek}<mark class="modifier">,</mark>
      timestamp = {2006.05.29}<mark class="modifier">,</mark>
      url = {http://james.howison.name/publications.html}
    }))"""))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ% ˇ(*2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ($°	
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryRecognized()?parsed@522.29:522.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä; ä(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä- ä(82”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryRecognized()?result@511.21:511.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä& ä(,Á
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryExistent()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê	 ê(/"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseReturnsEmptyListIfNoEntryExistent</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*&parseReturnsEmptyListIfNoEntryExistent2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(2q
java.util.List.of()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ ñ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ5 ñ(?2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ' ñ(22¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë($2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryExistent()?result@529.21:529.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ  ñ(&2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryExistent()?result@529.21:529.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê(º
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEmptyListIfNoEntryExistent()?result@529.21:529.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë("
typeParserResult"
isFinalfalse"‹
declarationString∆<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("""
    This was created with JabRef 2.1 beta 2.
    Encoding: Cp1252
    """))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë($°
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseNotWarnsAboutEntryWithoutCitationKey()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö	 ö(2"
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseNotWarnsAboutEntryWithoutCitationKey</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)parseNotWarnsAboutEntryWithoutCitationKey2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú(2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù(&2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†= †(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†/ †(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú('2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû  û((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ($2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseNotWarnsAboutEntryWithoutCitationKey()?result@539.21:539.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù(2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseNotWarnsAboutEntryWithoutCitationKey()?expected@542.17:542.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †(%2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseNotWarnsAboutEntryWithoutCitationKey()?result@539.21:539.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†( †(.2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseNotWarnsAboutEntryWithoutCitationKey()?result@539.21:539.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseNotWarnsAboutEntryWithoutCitationKey()?expected@542.17:542.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(§
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseNotWarnsAboutEntryWithoutCitationKey()?result@539.21:539.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ("
typeParserResult"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ($ª
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseNotWarnsAboutEntryWithoutCitationKey()?expected@542.17:542.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û("
typeBibEntry"
isFinalfalse"¿
declarationString™<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Ed von Test")*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû  û((«
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§	 §(?"
isFinalfalse"•
declarationStringè<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*6parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß(%2q
java.util.List.of()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®5 ®(?2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®' ®(22ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •($2‚
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket()?result@549.21:549.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß(2‚
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket()?result@549.21:549.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®  ®(&2È
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket()?result@549.21:549.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §(¿
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracket()?result@549.21:549.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •("
typeParserResult"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={author missing bracket}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •($ˇ%
_org.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	 ¨(0"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseAddsEscapedOpenBracketToFieldValue</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'parseAddsEscapedOpenBracketToFieldValue2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞; ∞(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞- ∞(82w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±+ ±(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±  ±((2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(#2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥6 ¥(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ0 µ(>2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂? ∂(G2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑(&2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠($2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?result@557.21:557.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞& ∞(,2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?parsed@560.29:560.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?parsed@560.29:560.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?entry@561.17:561.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥0 ¥(52—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?entry@561.17:561.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ* µ(/2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?entry@561.17:561.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂9 ∂(>2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?result@557.21:557.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑(2Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?result@557.21:557.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠(2Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?parsed@560.29:560.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(#2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?entry@561.17:561.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨(Æ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?result@557.21:557.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠("
typeParserResult"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,review={escaped \\{ bracket}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠($ü	
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?parsed@560.29:560.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞; ∞(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞- ∞(82“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?result@557.21:557.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞& ∞(,Ã
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?entry@561.17:561.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parsed.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±+ ±(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±  ±((2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedOpenBracketToFieldValue()?parsed@560.29:560.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(¶&
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	 ª(3"
isFinalfalse"ô
declarationStringÉ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseAddsEscapedClosingBracketToFieldValue</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid**parseAddsEscapedClosingBracketToFieldValue2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø; ø(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø- ø(82w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿+ ¿(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿  ¿((2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(#2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√6 √(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ0 ƒ(>2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈? ≈(G2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(&2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º($2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?result@572.21:572.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø& ø(,2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?parsed@575.29:575.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?parsed@575.29:575.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?entry@576.17:576.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√0 √(52‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?entry@576.17:576.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ* ƒ(/2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?entry@576.17:576.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈9 ≈(>2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?result@572.21:572.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?result@572.21:572.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?parsed@575.29:575.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(#2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?entry@576.17:576.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(±
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?result@572.21:572.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º("
typeParserResult"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,review={escaped \\} bracket}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º($•	
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?parsed@575.29:575.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø; ø(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø- ø(82’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?result@572.21:572.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø& ø(,“
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?entry@576.17:576.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parsed.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿+ ¿(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿  ¿((2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseAddsEscapedClosingBracketToFieldValue()?parsed@575.29:575.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(†
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java 	  (O"
isFinalfalse"µ
declarationStringü<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*FparseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ; Œ(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ- Œ(82y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –(#2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —(%2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À($2Ú
ìorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()?result@587.21:587.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ& Œ(,2Ú
ìorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()?parsed@590.29:590.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –(2Ú
ìorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()?result@587.21:587.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —(2˘
ìorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()?result@587.21:587.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(2˘
ìorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()?parsed@590.29:590.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(#2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   (‘
ìorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()?result@587.21:587.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À("
typeParserResult"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author=\"author {missing bracket\"}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À($ﬂ	
ìorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()?parsed@590.29:590.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ; Œ(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ- Œ(82Ú
ìorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithUnmatchedOpenBracketInQuotationMarks()?result@587.21:587.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ& Œ(,¸
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’	 ’(/"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresArbitraryContentAfterEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*&parseIgnoresArbitraryContentAfterEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ; Ÿ(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ- Ÿ(82y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €(#2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€O €(S2è
1org.jabref.model.database.BibDatabase.getEpilog()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹/ ‹(82í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹! ‹(,2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷($2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()?result@598.21:598.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ& Ÿ(,2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()?parsed@601.29:601.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €(2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()?parsed@601.29:601.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€H €(N2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()?result@598.21:598.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹( 2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()?result@598.21:598.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()?parsed@601.29:601.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(#2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’(™
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()?result@598.21:598.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷("
typeParserResult"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={author bracket }}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷($ù	
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()?parsed@601.29:601.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ; Ÿ(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ- Ÿ(82—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresArbitraryContentAfterEntry()?result@598.21:598.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ& Ÿ(,á
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntryWithoutComma()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡(;"
isFinalfalse"°
declarationStringã<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseWarnsAboutUnmatchedContentInEntryWithoutComma</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*2parseWarnsAboutUnmatchedContentInEntryWithoutComma2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·% ·(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„6 „(@2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„( „(32v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â( 2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·/ ·(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·($2›
org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntryWithoutComma()?result@609.21:609.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„! „('2ﬂ
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntryWithoutComma()?entries@611.23:611.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ@ Â(G2‰
org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntryWithoutComma()?result@609.21:609.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2Ê
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntryWithoutComma()?entries@611.23:611.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡ ‡(æ
org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntryWithoutComma()?result@609.21:609.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·("
typeParserResult"
isFinalfalse"æ
declarationString®<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={author bracket } too much}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·% ·(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·/ ·(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·($ß	
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntryWithoutComma()?entries@611.23:611.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „("
typeList<BibEntry>"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„6 „(@2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„( „(32›
org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntryWithoutComma()?result@609.21:609.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„! „('·
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ	 È(/"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseWarnsAboutUnmatchedContentInEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*&parseWarnsAboutUnmatchedContentInEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ% Í(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ6 Ï(@2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ( Ï(32í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ Ó(%2s
java.util.List.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ  Ô($2s
java.util.List.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔR Ô(V2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ/ Í(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í($2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()?result@618.21:618.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ! Ï('2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()?result@618.21:618.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ Ó(2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()?entries@620.23:620.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ Ô(2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()?entries@620.23:620.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔJ Ô(Q2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()?result@618.21:618.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í(2Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()?entries@620.23:620.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È(—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()?result@618.21:618.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í("
typeParserResult"
isFinalfalse"›
declarationString«<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={author bracket }<mark class="modifier">,</mark> too much}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ% Í(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ/ Í(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í($é	
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()?entries@620.23:620.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï("
typeList<BibEntry>"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ6 Ï(@2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ( Ï(32—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutUnmatchedContentInEntry()?result@618.21:618.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ! Ï('É
_org.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ	 Û(0"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseAcceptsEntryWithAtSymbolInBrackets</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'parseAcceptsEntryWithAtSymbolInBrackets2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜6 ˜(@2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜( ˜(32s
java.util.List.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘  ˘($2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙( 2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù($2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()?result@628.21:628.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜! ˜('2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()?entries@631.23:631.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()?entries@631.23:631.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙3 ˙(:2Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()?result@628.21:628.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(2⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()?entries@631.23:631.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(®
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()?result@628.21:628.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù("
typeParserResult"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={author @ good}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù($ê	
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()?entries@631.23:631.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜("
typeList<BibEntry>"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜6 ˜(@2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜( ˜(32“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseAcceptsEntryWithAtSymbolInBrackets()?result@628.21:628.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜! ˜('Í&
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛	 ˛(9"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesEntryWithAtSymbolInQuotationMarks</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*0parseRecognizesEntryWithAtSymbolInQuotationMarks2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ; Ç(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ- Ç(82w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ+ É(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ  É((2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(#2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ6 Ü(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá á( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá0 á(>2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà à('2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ9 â(A2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ($2€
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?result@639.21:639.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ& Ç(,2€
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?parsed@642.29:642.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ É(2€
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?parsed@642.29:642.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?entry@643.17:643.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ0 Ü(52⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?entry@643.17:643.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá* á(/2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?entry@643.17:643.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà à(2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?entry@643.17:643.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ3 â(82‚
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?result@639.21:639.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2‚
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?parsed@642.29:642.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç(#2·
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?entry@643.17:643.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ É(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(≥
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?result@639.21:639.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ("
typeParserResult"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author=\"author @ good\"}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ($±	
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?parsed@642.29:642.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ; Ç(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ- Ç(82€
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?result@639.21:639.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ& Ç(,ﬁ
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?entry@643.17:643.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ É("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parsed.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ É(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ+ É(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ  É((2€
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesEntryWithAtSymbolInQuotationMarks()?parsed@642.29:642.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ É(È'
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç	 ç(B"
isFinalfalse"®
declarationStringí<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*9parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë; ë(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë- ë(82w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí+ í(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí  í((2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(#2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï6 ï(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ ñ( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ0 ñ(>2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó ó('2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò@ ò(H2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é($2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?result@654.21:654.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë& ë(,2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?parsed@657.29:657.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?parsed@657.29:657.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?entry@658.17:658.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï0 ï(52‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?entry@658.17:658.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ* ñ(/2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?entry@658.17:658.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó ó(2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?entry@658.17:658.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò: ò(?2Ï
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?result@654.21:654.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é(2Ï
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?parsed@657.29:657.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(#2Î
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?entry@658.17:658.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(ƒ
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?result@654.21:654.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é("
typeParserResult"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author=\"Test {Ed {von} Test}\"}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é($≈	
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?parsed@657.29:657.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë; ë(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë- ë(82Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?result@654.21:654.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë& ë(,Ú
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?entry@658.17:658.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parsed.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí+ í(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí  í((2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithBracketsEnclosedInQuotationMarks()?parsed@657.29:657.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(–&
forg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú	 ú(7"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesFieldsWithEscapedQuotationMarks</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*.parseRecognizesFieldsWithEscapedQuotationMarks2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°; °(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°- °(82w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢+ ¢(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢  ¢((2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §(#2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•6 •(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶0 ¶(>2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß('2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®: ®(B2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û($2Ÿ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?result@670.21:670.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°& °(,2Ÿ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?parsed@673.29:673.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2Ÿ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?parsed@673.29:673.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §(2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?entry@674.17:674.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•0 •(52ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?entry@674.17:674.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶* ¶(/2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?entry@674.17:674.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß(2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?entry@674.17:674.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®4 ®(92‡
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?result@670.21:670.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2‡
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?parsed@673.29:673.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(#2ﬂ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?entry@674.17:674.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú(≤
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?result@670.21:670.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û("
typeParserResult"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author=\"Test {\" Test}\"}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û($≠	
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?parsed@673.29:673.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°; °(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°- °(82Ÿ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?result@670.21:670.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°& °(,⁄
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?entry@674.17:674.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parsed.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢+ ¢(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢  ¢((2Ÿ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesFieldsWithEscapedQuotationMarks()?parsed@673.29:673.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(Ä
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	 ¨(K"
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*BparseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞; ∞(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞- ∞(82y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(#2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(%2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠($2Ó
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()?result@685.21:685.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞& ∞(,2Ó
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()?parsed@688.29:688.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2Ó
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()?result@685.21:685.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2ı
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()?result@685.21:685.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠(2ı
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()?parsed@688.29:688.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(#2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨(Ã
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()?result@685.21:685.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠("
typeParserResult"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={Ed von Test} year=2005}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠($◊	
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()?parsed@688.29:688.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞; ∞(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞- ∞(82Ó
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutEntryWithFieldsThatAreNotSeperatedByComma()?result@685.21:685.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞& ∞(,Ê*
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑	 ∑(B"
isFinalfalse"®
declarationStringí<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*9parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏% ∏(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº; º(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº- º(82w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ+ Ω(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ  Ω((2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(#2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿6 ¿(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡0 ¡(>2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬('2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√ √( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√7 √(?2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ(%2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏($2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?result@696.21:696.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº& º(,2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?parsed@700.29:700.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?parsed@700.29:700.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?entry@701.17:701.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿0 ¿(52‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?entry@701.17:701.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡* ¡(/2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?entry@701.17:701.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?entry@701.17:701.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√1 √(62Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?result@696.21:696.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ(2Ï
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?result@696.21:696.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏(2Ï
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?parsed@700.29:700.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(#2Î
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?entry@701.17:701.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑(Î
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?result@696.21:696.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏("
typeParserResult"
isFinalfalse"„
declarationStringÕ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={author missing bracket}" + "@article{test,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏% ∏(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏($≈	
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?parsed@700.29:700.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº; º(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº- º(82Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?result@696.21:696.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº& º(,Ú
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?entry@701.17:701.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parsed.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ+ Ω(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ  Ω((2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresAndWarnsAboutCorruptedEntryButRecognizeOthers()?parsed@700.29:700.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(¥*
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java»	 »(5"
isFinalfalse"õ
declarationStringÖ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesMonthFieldsWithFollowingComma</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*,parseRecognizesMonthFieldsWithFollowingComma2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   (2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ; Ã(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ- Ã(82w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ+ Õ(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ  Õ((2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(#2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–6 –(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java—0 —(>2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “('2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”7 ”(?2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘. ‘(62ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …($2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?result@713.21:713.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ& Ã(,2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?parsed@716.29:716.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?parsed@716.29:716.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?entry@717.17:717.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–0 –(52÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?entry@717.17:717.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java—* —(/2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?entry@717.17:717.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?entry@717.17:717.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”1 ”(62÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?entry@717.17:717.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘( ‘(-2ﬁ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?result@713.21:713.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2ﬁ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?parsed@716.29:716.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(#2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?entry@717.17:717.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(’
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?result@713.21:713.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …("
typeParserResult"
isFinalfalse"€
declarationString≈<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={Ed von Test},month={8,}}<mark class="modifier">,</mark>"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   (2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …($©	
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?parsed@716.29:716.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(#"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = result.getDatabase().getEntries()*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ; Ã(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ- Ã(82◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?result@713.21:713.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ& Ã(,÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?entry@717.17:717.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ("
typeBibEntry"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parsed.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ+ Õ(/2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ  Õ((2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMonthFieldsWithFollowingComma()?parsed@716.29:716.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(∂
Oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreamble()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ	 ÿ( "
isFinalfalse"Ü
declarationString<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesPreamble</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesPreamble2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹( 2ë
3org.jabref.model.database.BibDatabase.getPreamble()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹P ‹([2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹B ‹(M2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ($2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreamble()?result@729.21:729.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹; ‹(A2…
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreamble()?result@729.21:729.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(ì
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreamble()?result@729.21:729.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ("
typeParserResult"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@preamble{some text and \\latex}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ($„
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercasePreamble()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡()"
isFinalfalse"è
declarationString˘<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesUppercasePreamble</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* parseRecognizesUppercasePreamble2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰( 2ë
3org.jabref.model.database.BibDatabase.getPreamble()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰P ‰([2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰B ‰(M2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·($2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercasePreamble()?result@737.21:737.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰; ‰(A2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercasePreamble()?result@737.21:737.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡ ‡(ú
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesUppercasePreamble()?result@737.21:737.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·("
typeParserResult"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@PREAMBLE{some text and \\latex}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·($¸
]org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithWhitespace()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË	 Ë(."
isFinalfalse"î
declarationString˛<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesPreambleWithWhitespace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*%parseRecognizesPreambleWithWhitespace2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï( 2ë
3org.jabref.model.database.BibDatabase.getPreamble()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏP Ï([2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏB Ï(M2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È($2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithWhitespace()?result@745.21:745.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ; Ï(A2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithWhitespace()?result@745.21:745.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË Ë(¢
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithWhitespace()?result@745.21:745.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È("
typeParserResult"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@preamble {some text and \\latex}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È($˜
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleInParenthesis()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java	 (-"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesPreambleInParenthesis</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$parseRecognizesPreambleInParenthesis2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù( 2ë
3org.jabref.model.database.BibDatabase.getPreamble()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙP Ù([2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙB Ù(M2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò($2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleInParenthesis()?result@753.21:753.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ; Ù(A2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleInParenthesis()?result@753.21:753.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (†
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleInParenthesis()?result@753.21:753.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò("
typeParserResult"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@preamble(some text and \\latex)"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò($ã
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithConcatenation()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯	 ¯(1"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesPreambleWithConcatenation</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*(parseRecognizesPreambleWithConcatenation2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸( 2ë
3org.jabref.model.database.BibDatabase.getPreamble()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸Z ¸(e2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸L ¸(W2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘($2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithConcatenation()?result@761.21:761.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸E ¸(K2⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithConcatenation()?result@761.21:761.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯ ¯(Æ
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesPreambleWithConcatenation()?result@761.21:761.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘("
typeParserResult"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@preamble{\"some text\" # \"and \\latex\"}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘($é
Morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ	 Ä("
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesString</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesString2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑP Ñ(T2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑE Ñ(M2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ3 Ñ(B2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ% Ñ(02î
6org.jabref.model.database.BibDatabase.getStringCount()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ- Ü(;2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(*2ã
-org.jabref.model.entry.BibtexString.getName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá( á(/2é
0org.jabref.model.entry.BibtexString.getContent()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà0 à(:2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å($2¿
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()?result@769.21:769.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ($2¿
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()?result@769.21:769.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2¿
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()?string@772.21:772.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá! á('2¿
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()?string@772.21:772.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà) à(/2«
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()?result@769.21:769.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å(2«
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()?string@772.21:772.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(µ
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()?result@769.21:769.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å("
typeParserResult"
isFinalfalse"“
declarationStringº<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@<mark class="modifier">string</mark>{bourdieu = {Bourdieu, Pierre}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å($•

borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()?string@772.21:772.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ("
typeBibtexString"
isFinalfalse"¬
declarationString¨<mark class="modifier"> </mark>BibtexString <mark class="class-field"><mark class="modifier">string</mark></mark> = result.getDatabase().getStringValues().iterator().next()*string2Å
#org.jabref.model.entry.BibtexStringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑP Ñ(T2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑE Ñ(M2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ3 Ñ(B2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ% Ñ(02¿
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesString()?result@769.21:769.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ($Ç 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå	 å(="
isFinalfalse"£
declarationStringç<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseSavesOneNewlineAfterStringInParsedSerialization</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*4parseSavesOneNewlineAfterStringInParsedSerialization2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaëV ë(Z2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaëK ë(S2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë9 ë(H2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë+ ë(62î
6org.jabref.model.database.BibDatabase.getStringCount()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì- ì(;2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(*2ö
<org.jabref.model.entry.BibtexString.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî* î(@2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é($2‡
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?string@781.15:781.21CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè( è(.2‡
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?result@782.21:782.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë$ ë(*2‡
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?result@782.21:782.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2‡
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?string@781.15:781.21CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(2Ê
áorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?parsedString@785.21:785.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î()2Á
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?string@781.15:781.21DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(2Á
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?result@782.21:782.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é(2Ì
áorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?parsedString@785.21:785.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(ÿ
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?string@781.15:781.21VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç("
typeString"
isFinalfalse"◊
declarationString¡<mark class="modifier"> </mark>String <mark class="class-field"><mark class="modifier">string</mark></mark> = "@<mark class="modifier">string</mark>{bourdieu = {Bourdieu, Pierre}}" + OS.NEWLINE*string2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(∞

Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?result@782.21:782.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é("
typeParserResult"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(<mark class="modifier">string</mark> + OS.NEWLINE + OS.NEWLINE))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé é($2‡
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?string@781.15:781.21CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè( è(.Ÿ

áorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?parsedString@785.21:785.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(!"
typeBibtexString"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>BibtexString <mark class="class-field">parsedString</mark> = result.getDatabase().getStringValues().iterator().next()*parsedString2Å
#org.jabref.model.entry.BibtexStringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaëV ë(Z2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaëK ë(S2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë9 ë(H2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë+ ë(62‡
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterStringInParsedSerialization()?result@782.21:782.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë$ ë(*û
[org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò	 ò(,"
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesStringWithWhitespace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*#parseRecognizesStringWithWhitespace2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaúV ú(Z2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaúK ú(S2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú9 ú(H2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú+ ú(62î
6org.jabref.model.database.BibDatabase.getStringCount()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû- û(;2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(*2ã
-org.jabref.model.entry.BibtexString.getName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü. ü(52é
0org.jabref.model.entry.BibtexString.getContent()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†6 †(@2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô($2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()?result@793.21:793.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú$ ú(*2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()?result@793.21:793.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()?parsedString@796.21:796.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü! ü(-2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()?parsedString@796.21:796.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†) †(52’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()?result@793.21:793.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô(2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()?parsedString@796.21:796.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò(ƒ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()?result@793.21:793.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô("
typeParserResult"
isFinalfalse"”
declarationStringΩ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@<mark class="modifier">string</mark> {bourdieu = {Bourdieu, Pierre}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô($µ

vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()?parsedString@796.21:796.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú(!"
typeBibtexString"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>BibtexString <mark class="class-field">parsedString</mark> = result.getDatabase().getStringValues().iterator().next()*parsedString2Å
#org.jabref.model.entry.BibtexStringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú ú(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaúV ú(Z2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaúK ú(S2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú9 ú(H2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú+ ú(62Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringWithWhitespace()?result@793.21:793.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaú$ ú(*ï
Zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§	 §(+"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesStringInParenthesis</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*"parseRecognizesStringInParenthesis2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®V ®(Z2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®K ®(S2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®9 ®(H2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®+ ®(62î
6org.jabref.model.database.BibDatabase.getStringCount()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™- ™(;2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™(*2ã
-org.jabref.model.entry.BibtexString.getName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´. ´(52é
0org.jabref.model.entry.BibtexString.getContent()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨6 ¨(@2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •($2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()?result@805.21:805.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®$ ®(*2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()?result@805.21:805.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™(2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()?parsedString@808.21:808.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´! ´(-2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()?parsedString@808.21:808.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨) ¨(52‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()?result@805.21:805.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()?parsedString@808.21:808.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §(¬
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()?result@805.21:805.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •("
typeParserResult"
isFinalfalse"“
declarationStringº<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@<mark class="modifier">string</mark>(bourdieu = {Bourdieu, Pierre})"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •($≥

uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()?parsedString@808.21:808.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(!"
typeBibtexString"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>BibtexString <mark class="class-field">parsedString</mark> = result.getDatabase().getStringValues().iterator().next()*parsedString2Å
#org.jabref.model.entry.BibtexStringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®V ®(Z2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®K ®(S2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®9 ®(H2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®+ ®(62Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringInParenthesis()?result@805.21:805.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®$ ®(*˙5
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞	 ∞('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesMultipleStrings</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesMultipleStrings2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥Q ¥(Y2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥? ¥(N2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥1 ¥(<2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ& µ(*2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂' ∂(+2á
)java.lang.String.equals(java.lang.Object)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏(2ã
-org.jabref.model.entry.BibtexString.getName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏! ∏((2î
6org.jabref.model.database.BibDatabase.getStringCount()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ- æ(;2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(*2ã
-org.jabref.model.entry.BibtexString.getName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø' ø(.2é
0org.jabref.model.entry.BibtexString.getContent()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿/ ¿(92ã
-org.jabref.model.entry.BibtexString.getName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡% ¡(,2é
0org.jabref.model.entry.BibtexString.getContent()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬- ¬(72ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±($2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?result@817.21:817.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥* ¥(02À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?iterator@820.31:820.39CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(%2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?iterator@820.31:820.39CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(&2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?first@821.21:821.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏( 2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?first@821.21:821.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π($2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?first@821.21:821.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?second@822.21:822.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?second@822.21:822.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?tmp@825.25:825.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?result@817.21:817.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?first@821.21:821.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø! ø(&2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?first@821.21:821.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿) ¿(.2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?second@822.21:822.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡($2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?second@822.21:822.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬& ¬(,2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?result@817.21:817.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?iterator@820.31:820.39DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥('2œ
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?first@821.21:821.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?second@822.21:822.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(2Õ
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?tmp@825.25:825.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(Å	
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?result@817.21:817.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±("
typeParserResult"
isFinalfalse"ï
declarationStringˇ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@<mark class="modifier">string</mark>{bourdieu = {Bourdieu, Pierre}}" + "@<mark class="modifier">string</mark>{adieu = {Adieu, Pierre}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±($Æ

morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?iterator@820.31:820.39VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥('"
typeIterator<BibtexString>"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>Iterator<BibtexString> <mark class="class-field">iterator</mark> = result.getDatabase().getStringValues().iterator()*iterator2p
java.util.IteratorTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥(2ä
#org.jabref.model.entry.BibtexStringTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥ ¥(2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥Q ¥(Y2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥? ¥(N2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥1 ¥(<2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?result@817.21:817.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¥* ¥(0¡
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?first@821.21:821.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ("
typeBibtexString"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>BibtexString <mark class="class-field">first</mark> = iterator.next()*first2Å
#org.jabref.model.entry.BibtexStringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ& µ(*2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?iterator@820.31:820.39CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(%ƒ
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?second@822.21:822.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂("
typeBibtexString"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibtexString <mark class="class-field">second</mark> = iterator.next()*second2Å
#org.jabref.model.entry.BibtexStringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂' ∂(+2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?iterator@820.31:820.39CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(&µ
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?tmp@825.25:825.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π("
typeBibtexString"
isFinalfalse"m
declarationStringX<mark class="modifier"> </mark>BibtexString <mark class="class-field">tmp</mark> = first*tmp2Å
#org.jabref.model.entry.BibtexStringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesMultipleStrings()?first@821.21:821.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π($ìG
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆	 ∆(&"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesStringAndEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesStringAndEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«% «(*2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕV Õ(Z2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕK Õ(S2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ9 Õ(H2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ+ Õ(62ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒB Œ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ4 Œ(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ8 œ(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ- œ(52î
6org.jabref.model.database.BibDatabase.getStringCount()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java—- —(;2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —(*2ã
-org.jabref.model.entry.BibtexString.getName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“. “(52é
0org.jabref.model.entry.BibtexString.getContent()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”6 ”(@2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘& ‘(*2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’9 ’(@2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷T ÷(b2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊7 ◊(?2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ< ÿ(D2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ< Ÿ(D2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄8 ⁄(@2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€I €(Q2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹6 ‹(>2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «($2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?result@839.21:839.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ$ Õ(*2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?result@839.21:839.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ- Œ(32œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntries@846.29:846.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(,2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?result@839.21:839.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —(2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedString@845.21:845.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“! “(-2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedString@845.21:845.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”) ”(52œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntries@846.29:846.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘(%2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’- ’(82Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷H ÷(S2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊+ ◊(62Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ0 ÿ(;2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ0 Ÿ(;2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄, ⁄(72Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€= €(H2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹* ‹(52œ
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?result@839.21:839.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «(2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedString@845.21:845.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(!2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntries@846.29:846.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(*2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(ˇ

jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?result@839.21:839.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «("
typeParserResult"
isFinalfalse"î
declarationString˛<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("" + "@<mark class="modifier">string</mark>{bourdieu = {Bourdieu, Pierre}}" + "@book{bourdieu-2002-questions-sociologie, " + "    Address = {Paris}<mark class="modifier">,</mark>" + "    Author = bourdieu," + "    Isbn = 2707318256," + "    Publisher = {Minuit}<mark class="modifier">,</mark>" + "    Title = {Questions de sociologie}<mark class="modifier">,</mark>" + "    Year = 2002" + "}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«% «(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «($©

porg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedString@845.21:845.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(!"
typeBibtexString"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>BibtexString <mark class="class-field">parsedString</mark> = result.getDatabase().getStringValues().iterator().next()*parsedString2Å
#org.jabref.model.entry.BibtexStringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕV Õ(Z2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕK Õ(S2ï
7org.jabref.model.database.BibDatabase.getStringValues()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ9 Õ(H2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ+ Õ(62»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?result@839.21:839.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ$ Õ(*°	
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntries@846.29:846.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒB Œ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ4 Œ(?2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?result@839.21:839.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ- Œ(3Ÿ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntry@847.17:847.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ8 œ(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ- œ(52œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesStringAndEntry()?parsedEntries@846.29:846.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(,∑
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡(:"
isFinalfalse"†
declarationStringä<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*1parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(%2î
6org.jabref.model.database.BibDatabase.getStringCount()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ- Â(;2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·($2‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne()?result@865.21:865.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(2‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne()?result@865.21:865.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â(2„
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne()?result@865.21:865.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡ ‡(è	
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseWarnsAboutStringsWithSameNameAndOnlyKeepsOne()?result@865.21:865.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·("
typeParserResult"
isFinalfalse"ê
declarationString˙<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@<mark class="modifier">string</mark>{bourdieu = {Bourdieu, Pierre}}" + "@<mark class="modifier">string</mark>{bourdieu = {Other}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·($Æ
Lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresComments()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ	 È("
isFinalfalse"É
declarationStringÌ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresComments</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseIgnoresComments2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ- Ì(72í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í($2ø
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresComments()?result@874.21:874.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì(2∆
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresComments()?result@874.21:874.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È(è
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresComments()?result@874.21:874.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í("
typeParserResult"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{some text and \\latex}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í($÷
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresUpercaseComments()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ	 Ò(%"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresUpercaseComments</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseIgnoresUpercaseComments2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı- ı(72í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú($2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresUpercaseComments()?result@882.21:882.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2Œ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresUpercaseComments()?result@882.21:882.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(ó
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresUpercaseComments()?result@882.21:882.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú("
typeParserResult"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@COMMENT{some text and \\latex}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú($¿%
Worg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘	 ˘(("
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresCommentsBeforeEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseIgnoresCommentsBeforeEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝B ˝(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝4 ˝(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛8 ˛(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛- ˛(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ& Ä(*2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ< Å(C2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ6 Ç(D2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ$ É(-2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ= Ñ(E2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙($2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?result@890.21:890.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝- ˝(32—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntries@893.29:893.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(,2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntries@893.29:893.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(%2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntry@894.17:894.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ0 Å(;2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntry@894.17:894.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ* Ç(52œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntry@894.17:894.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ É(#2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntry@894.17:894.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ1 Ñ(<2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?result@890.21:890.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntries@893.29:893.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(*2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntry@894.17:894.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(¬
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?result@890.21:890.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙("
typeParserResult"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{some text and \\latex}" + "@article{test,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙($•	
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntries@893.29:893.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝B ˝(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝4 ˝(?2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?result@890.21:890.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝- ˝(3›
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntry@894.17:894.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛8 ˛(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛- ˛(52—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsBeforeEntry()?parsedEntries@893.29:893.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(,≥%
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà	 à('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresCommentsAfterEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseIgnoresCommentsAfterEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaåB å(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå4 å(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç8 ç(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç- ç(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè& è(*2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê< ê(C2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë6 ë(D2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí$ í(-2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì= ì(E2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â($2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?result@905.21:905.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå- å(32–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntries@908.29:908.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(,2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntries@908.29:908.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(%2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntry@909.17:909.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê0 ê(;2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntry@909.17:909.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë* ë(52Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntry@909.17:909.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(#2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntry@909.17:909.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì1 ì(<2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?result@905.21:905.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntries@908.29:908.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(*2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntry@909.17:909.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà à(¡
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?result@905.21:905.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â("
typeParserResult"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={Ed von Test}}" + "@comment{some text and \\latex}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â($£	
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntries@908.29:908.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaåB å(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå4 å(?2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?result@905.21:905.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå- å(3€
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntry@909.17:909.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç8 ç(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç- ç(52–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresCommentsAfterEntry()?parsedEntries@908.29:908.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(,ö
Horg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresText()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó	 ó("
isFinalfalse"ˇ
declarationStringÈ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresText</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseIgnoresText2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ- õ(72í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò($2ª
]org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresText()?result@920.21:920.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(2¬
]org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresText()?result@920.21:920.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó ó(â
]org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresText()?result@920.21:920.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò("
typeParserResult"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("comment{some text and \\latex"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò ò($å%
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü	 ü($"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresTextBeforeEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseIgnoresTextBeforeEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£B £(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£4 £(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§8 §(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§- §(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶& ¶(*2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß< ß(C2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®6 ®(D2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©$ ©(-2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™= ™(E2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †($2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?result@928.21:928.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£- £(32Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntries@931.29:931.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §(,2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntries@931.29:931.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(%2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntry@932.17:932.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß0 ß(;2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntry@932.17:932.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®* ®(52À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntry@932.17:932.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©(#2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntry@932.17:932.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™1 ™(<2Õ
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?result@928.21:928.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †(2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntries@931.29:931.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(*2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntry@932.17:932.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(º
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?result@928.21:928.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †("
typeParserResult"
isFinalfalse"”
declarationStringΩ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("comment{some text and \\latex" + "@article{test,author={Ed von Test}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †($ù	
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntries@931.29:931.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£B £(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£4 £(?2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?result@928.21:928.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£- £(3’
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntry@932.17:932.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§8 §(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§- §(52Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextBeforeEntry()?parsedEntries@931.29:931.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §(,ˇ$
Rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ	 Æ(#"
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresTextAfterEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseIgnoresTextAfterEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤B ≤(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤4 ≤(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥8 ≥(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥- ≥(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ& µ(*2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂< ∂(C2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑6 ∑(D2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏$ ∏(-2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ= π(E2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø($2≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?result@943.21:943.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤- ≤(32Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntries@946.29:946.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(,2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntries@946.29:946.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(%2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntry@947.17:947.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂0 ∂(;2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntry@947.17:947.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑* ∑(52 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntry@947.17:947.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏(#2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntry@947.17:947.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ1 π(<2Ã
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?result@943.21:943.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø(2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntries@946.29:946.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(*2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntry@947.17:947.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(ª
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?result@943.21:943.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø("
typeParserResult"
isFinalfalse"”
declarationStringΩ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author={Ed von Test}}" + "comment{some text and \\latex"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø($õ	
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntries@946.29:946.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤B ≤(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤4 ≤(?2≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?result@943.21:943.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤- ≤(3”
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntry@947.17:947.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥8 ≥(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥- ≥(52Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresTextAfterEntry()?parsedEntries@946.29:946.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(,·
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ	 Ω($"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseConvertsNewlineToSpace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseConvertsNewlineToSpace2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡B ¡(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡4 ¡(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬8 ¬(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬- ¬(52v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ5 ƒ(=2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø('2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒB ƒ(N2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ($2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?result@958.21:958.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡- ¡(32Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?parsedEntries@961.29:961.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(,2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?parsedEntry@962.17:962.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ) ƒ(42Õ
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?result@958.21:958.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?parsedEntries@961.29:961.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡(*2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?parsedEntry@962.17:962.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(ê
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?result@958.21:958.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ("
typeParserResult"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,a = {a\nb}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ($ù	
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?parsedEntries@961.29:961.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡B ¡(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡4 ¡(?2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?result@958.21:958.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡- ¡(3’
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?parsedEntry@962.17:962.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬8 ¬(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬- ¬(52Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsNewlineToSpace()?parsedEntries@961.29:961.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(,¸%
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java»	 »(-"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseConvertsMultipleNewlinesToSpace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$parseConvertsMultipleNewlinesToSpace2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   (2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃB Ã(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ4 Ã(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ8 Õ(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ- Õ(52v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ5 œ(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–5 –(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java—5 —(=2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   ('2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœB œ(N2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–B –(N2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java—B —(N2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …($2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?result@969.21:969.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ- Ã(32÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?parsedEntries@972.29:972.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(,2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?parsedEntry@973.17:973.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ) œ(42‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?parsedEntry@973.17:973.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–) –(42‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?parsedEntry@973.17:973.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java—) —(42÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?result@969.21:969.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?parsedEntries@972.29:972.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(*2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?parsedEntry@973.17:973.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(ˇ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?result@969.21:969.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …("
typeParserResult"
isFinalfalse"ç
declarationString˜<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,a = {a\n\nb}<mark class="modifier">,</mark>" + "b = {a\n \nb}<mark class="modifier">,</mark>" + "c = {a \n \n b}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   (2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   ('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …($Ø	
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?parsedEntries@972.29:972.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃB Ã(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ4 Ã(?2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?result@969.21:969.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ- Ã(3Á
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?parsedEntry@973.17:973.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ8 Õ(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ- Õ(52÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleNewlinesToSpace()?parsedEntries@972.29:972.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(,Ω
Oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’	 ’( "
isFinalfalse"Ü
declarationString<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseConvertsTabToSpace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseConvertsTabToSpace2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸB Ÿ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ4 Ÿ(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄8 ⁄(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄- ⁄(52v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹5 ‹(=2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊('2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹B ‹(N2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷($2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?result@982.21:982.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ- Ÿ(32…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?parsedEntries@985.29:985.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄(,2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?parsedEntry@986.17:986.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹) ‹(42…
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?result@982.21:982.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?parsedEntries@985.29:985.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(*2Œ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?parsedEntry@986.17:986.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’(å
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?result@982.21:982.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷("
typeParserResult"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,a = {a\tb}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷($ï	
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?parsedEntries@985.29:985.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸB Ÿ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ4 Ÿ(?2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?result@982.21:982.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ- Ÿ(3Õ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?parsedEntry@986.17:986.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄8 ⁄(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄- ⁄(52…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsTabToSpace()?parsedEntries@985.29:985.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄ ⁄(,–%
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡()"
isFinalfalse"è
declarationString˘<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseConvertsMultipleTabsToSpace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* parseConvertsMultipleTabsToSpace2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰B ‰(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰4 ‰(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ8 Â(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ- Â(52v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ5 Á(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË Ë( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË5 Ë(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ5 È(=2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚('2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁB Á(N2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaËB Ë(N2¶
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈB È(N2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·($2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?result@993.21:993.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰- ‰(32“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?parsedEntries@996.29:996.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â(,2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?parsedEntry@997.17:997.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ) Á(42–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?parsedEntry@997.17:997.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË) Ë(42–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?parsedEntry@997.17:997.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ) È(42“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?result@993.21:993.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?parsedEntries@996.29:996.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(*2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?parsedEntry@997.17:997.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡ ‡(˚
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?result@993.21:993.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·("
typeParserResult"
isFinalfalse"ç
declarationString˜<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,a = {a\t\tb}<mark class="modifier">,</mark>" + "b = {a\t \tb}<mark class="modifier">,</mark>" + "c = {a \t \t b}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·($ß	
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?parsedEntries@996.29:996.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰B ‰(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰4 ‰(?2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?result@993.21:993.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰- ‰(3ﬂ
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?parsedEntry@997.17:997.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ8 Â(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ- Â(52“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseConvertsMultipleTabsToSpace()?parsedEntries@996.29:996.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â(,Ä!
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ	 Ì(8"
isFinalfalse"û
declarationStringà<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parsePreservesMultipleSpacesInNonWrappableField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*/parsePreservesMultipleSpacesInNonWrappableField2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ7 Ô(92•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙB Ù(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ4 Ù(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı8 ı(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı- ı(52v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜; ˜(C2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú('2∑
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ Ó($2∑
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java/ (F2‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parser@1008.21:1008.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò($2‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?result@1009.21:1009.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ- Ù(32‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parsedEntries@1012.29:1012.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(,2‚
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parsedEntry@1013.17:1013.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜/ ˜(:2„
~org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parser@1008.21:1008.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (2„
~org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?result@1009.21:1009.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2Î
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parsedEntries@1012.29:1012.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(*2È
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parsedEntry@1013.17:1013.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì(Û
~org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parser@1008.21:1008.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java ("
typeBibtexParser"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>BibtexParser <mark class="class-field">parser</mark> = new BibtexParser(importFormatPreferences)*parser2è
1org.jabref.logic.importer.fileformat.BibtexParserTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (2∑
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java/ (FÊ
~org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?result@1009.21:1009.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò("
typeParserResult"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{canh05,file = {ups  sala}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú('2‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parser@1008.21:1008.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò($ 	
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parsedEntries@1012.29:1012.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙB Ù(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ4 Ù(?2‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?result@1009.21:1009.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ- Ù(3É
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parsedEntry@1013.17:1013.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı8 ı(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı- ı(52‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesMultipleSpacesInNonWrappableField()?parsedEntries@1012.29:1012.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(,˙
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚	 ˚(*"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parsePreservesTabsInAbstractField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!parsePreservesTabsInAbstractField2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸% ¸(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛B ˛(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛4 ˛(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ8 ˇ(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ- ˇ(52v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ= Å(E2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸/ ¸(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸($2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?result@1020.21:1020.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛- ˛(32’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?parsedEntries@1022.29:1022.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(,2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?parsedEntry@1023.17:1023.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ1 Å(<2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?result@1020.21:1020.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸(2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?parsedEntries@1022.29:1022.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(*2⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?parsedEntry@1023.17:1023.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(®
porg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?result@1020.21:1020.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸("
typeParserResult"
isFinalfalse"∑
declarationString°<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{canh05,abstract = {ups  \tsala}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸% ¸(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸/ ¸(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸($≠	
worg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?parsedEntries@1022.29:1022.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛B ˛(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛4 ˛(?2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?result@1020.21:1020.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛- ˛(3Â
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?parsedEntry@1023.17:1023.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ8 ˇ(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ- ˇ(52’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesTabsInAbstractField()?parsedEntries@1022.29:1022.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(,ï
\org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ	 Ö(-"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parsePreservesNewlineInAbstractField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$parsePreservesNewlineInAbstractField2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ% Ü(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaàB à(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà4 à(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ8 â(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ- â(52v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã ã( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã< ã(D2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ/ Ü(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü($2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?result@1030.21:1030.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà- à(32ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?parsedEntries@1032.29:1032.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(,2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?parsedEntry@1033.17:1033.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã0 ã(;2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?result@1030.21:1030.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2ﬂ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?parsedEntries@1032.29:1032.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà à(*2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?parsedEntry@1033.17:1033.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(™
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?result@1030.21:1030.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü("
typeParserResult"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{canh05,abstract = {ups \nsala}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ% Ü(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ/ Ü(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü($≥	
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?parsedEntries@1032.29:1032.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà à(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà à(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà à(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaàB à(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà4 à(?2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?result@1030.21:1030.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà- à(3Î
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?parsedEntry@1033.17:1033.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ8 â(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ- â(52ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreservesNewlineInAbstractField()?parsedEntries@1032.29:1032.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(,±%
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè	 è(%"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseHandlesAccentsCorrectly</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseHandlesAccentsCorrectly2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaìB ì(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì4 ì(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî8 î(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî- î(52í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ ñ(&2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó& ó(*2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò< ò(C2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô6 ô(D2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö@ ö(H2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê($2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?result@1040.21:1040.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì- ì(32–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntries@1043.29:1043.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(,2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?result@1040.21:1040.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ ñ(2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntries@1043.29:1043.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó ó(%2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntry@1044.17:1044.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò0 ò(;2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntry@1044.17:1044.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô* ô(52Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntry@1044.17:1044.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö4 ö(?2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?result@1040.21:1040.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê(2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntries@1043.29:1043.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(*2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntry@1044.17:1044.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(¢
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?result@1040.21:1040.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê("
typeParserResult"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@article{test,author = {H'{e}lne Fiaux}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê($£	
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntries@1043.29:1043.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaìB ì(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì4 ì(?2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?result@1040.21:1040.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì- ì(3€
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntry@1044.17:1044.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî8 î(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî- î(52–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseHandlesAccentsCorrectly()?parsedEntries@1043.29:1043.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(,Ä+
[org.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°	 °(,"
isFinalfalse"í
declarationString¸<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parsePreambleAndEntryWithoutNewLine</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*#parsePreambleAndEntryWithoutNewLine2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•B •(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•4 •(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶8 ¶(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶- ¶(52í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(&2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©( 2ë
3org.jabref.model.database.BibDatabase.getPreamble()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©P ©([2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©B ©(M2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™& ™(*2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´< ´(C2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨6 ¨(D2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠@ ≠(H2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢($2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?result@1058.21:1058.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•- •(32◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntries@1061.29:1061.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(,2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?result@1058.21:1058.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?result@1058.21:1058.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©; ©(A2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntries@1061.29:1061.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™(%2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntry@1062.17:1062.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´0 ´(;2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntry@1062.17:1062.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨* ¨(52’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntry@1062.17:1062.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠4 ≠(?2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?result@1058.21:1058.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2ﬁ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntries@1061.29:1061.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(*2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntry@1062.17:1062.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(…
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?result@1058.21:1058.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢("
typeParserResult"
isFinalfalse"÷
declarationString¿<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@preamble{some text and \\latex}@article{test,author = {H'{e}lne Fiaux}}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢($±	
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntries@1061.29:1061.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•B •(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•4 •(?2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?result@1058.21:1058.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•- •(3È
worg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntry@1062.17:1062.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶8 ¶(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶- ¶(52◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePreambleAndEntryWithoutNewLine()?parsedEntries@1061.29:1061.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(,¸
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseFileHeaderAndPreambleWithoutNewLine()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±	 ±(1"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseFileHeaderAndPreambleWithoutNewLine</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*(parseFileHeaderAndPreambleWithoutNewLine2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(&2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂( 2ë
3org.jabref.model.database.BibDatabase.getPreamble()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂P ∂([2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂B ∂(M2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤($2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseFileHeaderAndPreambleWithoutNewLine()?result@1074.21:1074.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseFileHeaderAndPreambleWithoutNewLine()?result@1074.21:1074.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂; ∂(A2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseFileHeaderAndPreambleWithoutNewLine()?result@1074.21:1074.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(º
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseFileHeaderAndPreambleWithoutNewLine()?result@1074.21:1074.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤("
typeParserResult"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("\\% Encoding: US-ASCII@preamble{some text and \\latex}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤($Î 
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫	 ∫(-"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseSavesEntryInParsedSerialization</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$parseSavesEntryInParsedSerialization2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº% º(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæB æ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ4 æ(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø8 ø(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø- ø(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡& ¡(*2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬, ¬(B2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº/ º(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º($2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?testEntry@1083.15:1083.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº< º(E2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?result@1084.21:1084.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ- æ(32ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?parsedEntries@1086.29:1086.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(,2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?parsedEntries@1086.29:1086.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡(%2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?testEntry@1083.15:1083.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?parsedEntry@1087.17:1087.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬  ¬(+2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?testEntry@1083.15:1083.24DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?result@1084.21:1084.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(2ﬂ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?parsedEntries@1086.29:1086.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(*2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?parsedEntry@1087.17:1087.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(Ö
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?testEntry@1083.15:1083.24VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">testEntry</mark> = "@article{test,author={Ed von Test}}"*	testEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(ﬂ	
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?result@1084.21:1084.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º("
typeParserResult"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(testEntry))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº% º(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº/ º(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º($2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?testEntry@1083.15:1083.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº< º(E≥	
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?parsedEntries@1086.29:1086.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæB æ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ4 æ(?2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?result@1084.21:1084.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ- æ(3Î
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?parsedEntry@1087.17:1087.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø8 ø(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø- ø(52ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesEntryInParsedSerialization()?parsedEntries@1086.29:1086.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø ø(,∏"
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆	 ∆(<"
isFinalfalse"¢
declarationStringå<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseSavesOneNewlineAfterEntryInParsedSerialization</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*3parseSavesOneNewlineAfterEntryInParsedSerialization2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀB À(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ4 À(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ8 Ã(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ- Ã(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ& Œ(*2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ9 œ(O2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »($2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?testEntry@1095.15:1095.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…( …(12·
Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?result@1096.21:1096.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ- À(32Ë
âorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?parsedEntries@1099.29:1099.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(,2Ë
âorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?parsedEntries@1099.29:1099.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(%2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?testEntry@1095.15:1095.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(2Ê
áorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?parsedEntry@1100.17:1100.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ- œ(82Î
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?testEntry@1095.15:1095.24DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «(2Ë
Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?result@1096.21:1096.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2Ô
âorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?parsedEntries@1099.29:1099.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(*2Ì
áorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?parsedEntry@1100.17:1100.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(ï
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?testEntry@1095.15:1095.24VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">testEntry</mark> = "@article{test,author={Ed von Test}}"*	testEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «(ö

Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?result@1096.21:1096.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »("
typeParserResult"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(testEntry + OS.NEWLINE + OS.NEWLINE))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »($2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?testEntry@1095.15:1095.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…( …(1”	
âorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?parsedEntries@1099.29:1099.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀB À(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ4 À(?2·
Çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?result@1096.21:1096.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ- À(3ã
áorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?parsedEntry@1100.17:1100.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ8 Ã(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ- Ã(52Ë
âorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesOneNewlineAfterEntryInParsedSerialization()?parsedEntries@1099.29:1099.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(,†#
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”	 ”(D"
isFinalfalse"™
declarationStringî<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*;parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿB ÿ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ4 ÿ(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ8 Ÿ(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ- Ÿ(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€& €(*2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›F ›(\2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’($2Ï
çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?testEntry@1108.15:1108.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷O ÷(X2È
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?result@1109.21:1109.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ- ÿ(32
ëorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?parsedEntries@1112.29:1112.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(,2
ëorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?parsedEntries@1112.29:1112.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €(%2Ï
çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?testEntry@1108.15:1108.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›/ ›(82Ó
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?parsedEntry@1113.17:1113.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›: ›(E2Û
çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?testEntry@1108.15:1108.24DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘(2
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?result@1109.21:1109.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’(2˜
ëorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?parsedEntries@1112.29:1112.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(*2ı
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?parsedEntry@1113.17:1113.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(ù
çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?testEntry@1108.15:1108.24VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">testEntry</mark> = "@article{test,author={Ed von Test}}"*	testEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘(∑

äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?result@1109.21:1109.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’("
typeParserResult"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(OS.NEWLINE + OS.NEWLINE + OS.NEWLINE + testEntry))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’($2Ï
çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?testEntry@1108.15:1108.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷O ÷(X„	
ëorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?parsedEntries@1112.29:1112.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿB ÿ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ4 ÿ(?2È
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?result@1109.21:1109.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ- ÿ(3õ
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?parsedEntry@1113.17:1113.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ8 Ÿ(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ- Ÿ(52
ëorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesAllButOneNewlinesBeforeEntryInParsedSerialization()?parsedEntries@1112.29:1112.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(,Ü#
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·	 ·(B"
isFinalfalse"®
declarationStringí<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRemovesEncodingLineAndSeparatorInParsedSerialization</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*9parseRemovesEncodingLineAndSeparatorInParsedSerialization2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„% „(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊB Ê(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ4 Ê(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ8 Á(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ- Á(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ& È(*2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ, Ï(B2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „($2Í
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?testEntry@1122.15:1122.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰l ‰(u2Á
àorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?result@1123.21:1123.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ- Ê(32Ó
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?parsedEntries@1126.29:1126.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á(,2Ó
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?parsedEntries@1126.29:1126.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È(%2Í
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?testEntry@1122.15:1122.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(2Ï
çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?parsedEntry@1127.17:1127.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ  Ï(+2Ò
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?testEntry@1122.15:1122.24DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2Ó
àorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?result@1123.21:1123.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2ı
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?parsedEntries@1126.29:1126.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ Ê(*2Û
çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?parsedEntry@1127.17:1127.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(õ
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?testEntry@1122.15:1122.24VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">testEntry</mark> = "@article{test,author={Ed von Test}}"*	testEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(◊

àorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?result@1123.21:1123.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „("
typeParserResult"
isFinalfalse"‡
declarationString <mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(SaveConfiguration.ENCODING_PREFIX + OS.NEWLINE + OS.NEWLINE + OS.NEWLINE + testEntry))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„% „(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „($2Í
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?testEntry@1122.15:1122.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰l ‰(uﬂ	
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?parsedEntries@1126.29:1126.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ Ê(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ Ê(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ Ê(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊB Ê(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ4 Ê(?2Á
àorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?result@1123.21:1123.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ- Ê(3ó
çorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?parsedEntry@1127.17:1127.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ8 Á(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ- Á(52Ó
èorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRemovesEncodingLineAndSeparatorInParsedSerialization()?parsedEntries@1126.29:1126.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á(,õC
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java	 (>"
isFinalfalse"§
declarationStringé<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseSavesNewlinesBetweenEntriesInParsedSerialization</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*5parseSavesNewlinesBetweenEntriesInParsedSerialization2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆB ˆ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ4 ˆ(?2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜4 ˜(<2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯" ¯(&2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘# ˘('2â
+java.util.Optional.equals(java.lang.Object)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚# ˚()2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚( 2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚3 ˚(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ	& Å	(*2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ	6 Ç	(L2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ	7 Ñ	(M2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û($2È
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryOne@1137.15:1137.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ( Ù(42È
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryTwo@1138.15:1138.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ^ Ù(j2„
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?result@1139.21:1139.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ- ˆ(32Í
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?parsedEntries@1142.29:1142.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜& ˜(32Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?iterator@1143.27:1143.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯ ¯(!2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?iterator@1143.27:1143.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘("2‚
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?first@1144.17:1144.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2‚
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?first@1144.17:1144.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸( 2‚
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?first@1144.17:1144.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2„
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?second@1145.17:1145.23CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2„
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?second@1145.17:1145.23CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2‡
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?tmp@1148.21:1148.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2Í
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?parsedEntries@1142.29:1142.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ	 Å	(%2È
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryOne@1137.15:1137.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ	 Ç	(!2‚
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?first@1144.17:1144.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ	0 Ç	(52È
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryTwo@1138.15:1138.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ	" Ñ	(.2„
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?second@1145.17:1145.23CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ	0 Ñ	(62
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryOne@1137.15:1137.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryTwo@1138.15:1138.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(2Í
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?result@1139.21:1139.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(2Ò
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?parsedEntries@1142.29:1142.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(*2Ï
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?iterator@1143.27:1143.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜(#2È
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?first@1144.17:1144.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯ ¯(2Í
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?second@1145.17:1145.23DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2Á
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?tmp@1148.21:1148.24DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java (°
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryOne@1137.15:1137.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò("
typeString"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>String <mark class="class-field">testEntryOne</mark> = "@article{test1,author={Ed von Test}}"*testEntryOne2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(°
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryTwo@1138.15:1138.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú("
typeString"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>String <mark class="class-field">testEntryTwo</mark> = "@article{test2,author={Ed von Test}}"*testEntryTwo2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(¨
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?result@1139.21:1139.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û("
typeParserResult"
isFinalfalse"Œ
declarationString∏<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(testEntryOne + OS.NEWLINE + OS.NEWLINE + OS.NEWLINE + testEntryTwo))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û($2È
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryOne@1137.15:1137.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ( Ù(42È
äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?testEntryTwo@1138.15:1138.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ^ Ù(j◊	
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?parsedEntries@1142.29:1142.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ ˆ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆB ˆ(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ4 ˆ(?2„
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?result@1139.21:1139.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ- ˆ(3ñ
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?iterator@1143.27:1143.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜(#"
typeIterator<BibEntry>"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>Iterator<BibEntry> <mark class="class-field">iterator</mark> = parsedEntries.iterator()*iterator2p
java.util.IteratorTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜ ˜(2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜4 ˜(<2Í
ãorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?parsedEntries@1142.29:1142.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜& ˜(3Ë
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?first@1144.17:1144.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯ ¯("
typeBibEntry"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>BibEntry <mark class="class-field">first</mark> = iterator.next()*first2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯ ¯(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯" ¯(&2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?iterator@1143.27:1143.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯ ¯(!Î
Ñorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?second@1145.17:1145.23VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘("
typeBibEntry"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>BibEntry <mark class="class-field">second</mark> = iterator.next()*second2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘# ˘('2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?iterator@1143.27:1143.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘("‹
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?tmp@1148.21:1148.24VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸("
typeBibEntry"
isFinalfalse"i
declarationStringT<mark class="modifier"> </mark>BibEntry <mark class="class-field">tmp</mark> = first*tmp2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸(2‚
Éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseSavesNewlinesBetweenEntriesInParsedSerialization()?first@1144.17:1144.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸( Ì
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogue()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà		 à	()"
isFinalfalse"è
declarationString˘<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresWhitespaceInEpilogue</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* parseIgnoresWhitespaceInEpilogue2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ	% â	(*2è
1org.jabref.model.database.BibDatabase.getEpilog()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã	. ã	(72í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã	  ã	(+2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ	/ â	(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ	 â	($2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogue()?result@1161.21:1161.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã	 ã	(2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogue()?result@1161.21:1161.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ	 â	(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà	 à	(é
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogue()?result@1161.21:1161.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ	 â	("
typeParserResult"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("   " + OS.NEWLINE))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ	 â	(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ	% â	(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ	/ â	(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ	 â	($Ω%
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè		 è	(3"
isFinalfalse"ô
declarationStringÉ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseIgnoresWhitespaceInEpilogueAfterEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid**parseIgnoresWhitespaceInEpilogueAfterEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí	 í	(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	B î	(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	4 î	(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï	8 ï	(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï	- ï	(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó	& ó	(*2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò	9 ò	(O2è
1org.jabref.model.database.BibDatabase.getEpilog()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô	. ô	(72í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô	  ô	(+2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí	 í	('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë	 ë	($2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?testEntry@1168.15:1168.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí	( í	(12◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?result@1169.21:1169.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	- î	(32ﬂ
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?parsedEntries@1172.29:1172.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï	 ï	(,2ﬂ
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?parsedEntries@1172.29:1172.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó	 ó	(%2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?testEntry@1168.15:1168.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò	 ò	(2‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?parsedEntry@1173.17:1173.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò	- ò	(82◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?result@1169.21:1169.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô	 ô	(2·
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?testEntry@1168.15:1168.24DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê	 ê	(2ﬁ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?result@1169.21:1169.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë	 ë	(2Ê
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?parsedEntries@1172.29:1172.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	 î	(*2„
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?parsedEntry@1173.17:1173.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï	 ï	(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè	 è	(ã
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?testEntry@1168.15:1168.24VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê	 ê	("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">testEntry</mark> = "@article{test,author={Ed von Test}}"*	testEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê	 ê	(ß

yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?result@1169.21:1169.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë	 ë	("
typeParserResult"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(testEntry + OS.NEWLINE + OS.NEWLINE + OS.NEWLINE + "  " + OS.NEWLINE))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë	 ë	(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí	 í	(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí	 í	('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë	 ë	($2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?testEntry@1168.15:1168.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí	( í	(1¿	
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?parsedEntries@1172.29:1172.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	 î	(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	 î	(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	 î	(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	B î	(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	4 î	(?2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?result@1169.21:1169.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî	- î	(3¯
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?parsedEntry@1173.17:1173.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï	 ï	("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï	 ï	(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï	8 ï	(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï	- ï	(52ﬂ
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseIgnoresWhitespaceInEpilogueAfterEntry()?parsedEntries@1172.29:1172.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï	 ï	(,û%
`org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù		 ù	(1"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseTrimsWhitespaceInEpilogueAfterEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*(parseTrimsWhitespaceInEpilogueAfterEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†	 †	(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	B ¢	(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	4 ¢	(?2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£	8 £	(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£	- £	(52y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•	& •	(*2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶	9 ¶	(O2è
1org.jabref.model.database.BibDatabase.getEpilog()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß	6 ß	(?2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß	( ß	(32ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†	 †	('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü	 ü	($2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?testEntry@1182.15:1182.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†	( †	(12’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?result@1183.21:1183.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	- ¢	(32‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?parsedEntries@1186.29:1186.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£	 £	(,2‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?parsedEntries@1186.29:1186.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•	 •	(%2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?testEntry@1182.15:1182.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶	 ¶	(2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?parsedEntry@1187.17:1187.28CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶	- ¶	(82’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?result@1183.21:1183.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß	! ß	('2ﬂ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?testEntry@1182.15:1182.24DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû	 û	(2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?result@1183.21:1183.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü	 ü	(2„
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?parsedEntries@1186.29:1186.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	 ¢	(*2·
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?parsedEntry@1187.17:1187.28DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£	 £	(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù	 ù	(â
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?testEntry@1182.15:1182.24VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû	 û	("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">testEntry</mark> = "@article{test,author={Ed von Test}}"*	testEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû	 û	(´

worg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?result@1183.21:1183.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü	 ü	("
typeParserResult"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(testEntry + OS.NEWLINE + OS.NEWLINE + OS.NEWLINE + " epilogue " + OS.NEWLINE))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü	 ü	(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†	 †	(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†	 †	('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü	 ü	($2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?testEntry@1182.15:1182.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†	( †	(1ª	
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?parsedEntries@1186.29:1186.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	 ¢	(*"
typeCollection<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsedEntries</mark> = result.getDatabase().getEntries()*parsedEntries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	 ¢	(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	 ¢	(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	B ¢	(L2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	4 ¢	(?2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?result@1183.21:1183.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢	- ¢	(3Û
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?parsedEntry@1187.17:1187.28VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£	 £	("
typeBibEntry"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parsedEntries.iterator().next()*parsedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£	 £	(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£	8 £	(<2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£	- £	(52‹
~org.jabref.logic.importer.fileformat.BibtexParserTest.parseTrimsWhitespaceInEpilogueAfterEntry()?parsedEntries@1186.29:1186.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£	 £	(,Ÿ
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´		 ´	(-"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesSaveActionsAfterEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$parseRecognizesSaveActionsAfterEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	+ ¨	(02v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	Y ª	(\2ë
3org.jabref.model.metadata.MetaData.getSaveActions()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	H ª	(V2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	: ª	(E2ô
;org.jabref.logic.cleanup.FieldFormatterCleanups.isEnabled()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ	 Ω	((2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ	 æ	(2§
Forg.jabref.logic.cleanup.FieldFormatterCleanups.getConfiguredActions()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø	 ø	(02Î
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ	! æ	(62¨
Norg.jabref.logic.formatter.casechanger.LowerCaseFormatter.LowerCaseFormatter()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ	P æ	(b2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	$ ¨	(*2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()?parserResult@1196.21:1196.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	- ª	(92÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()?saveActions@1211.31:1211.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ	 Ω	(2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()?saveActions@1211.31:1211.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø	 ø	(2ﬁ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()?parserResult@1196.21:1196.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	 ¨	(!2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()?saveActions@1211.31:1211.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	 ª	(*2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´	 ´	(œ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()?parserResult@1196.21:1196.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	 ¨	(!"
typeParserResult"
isFinalfalse"„
declarationStringÕ<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = parser.parse(new StringReader("""
    @InProceedings{6055279,
      Title                    = {Educational session 1}<mark class="modifier">,</mark>
      Booktitle                = {Custom Integrated Circuits Conference (CICC)<mark class="modifier">,</mark> 2011 IEEE}<mark class="modifier">,</mark>
      Year                     = {2011}<mark class="modifier">,</mark>
      Month                    = {Sept}<mark class="modifier">,</mark>
      Pages                    = {1-7}<mark class="modifier">,</mark>
      Abstract                 = {Start of the above-titled section of the conference proceedings record.}<mark class="modifier">,</mark>
      DOI                      = {10.1109/CICC.2011.6055279}<mark class="modifier">,</mark>
      ISSN                     = {0886-5930}
    }
    
    @comment{jabref-meta: saveActions:enabled;title[lower_case]}"""))*parserResult2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	 ¨	(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	+ ¨	(02¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨	$ ¨	(*”	
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()?saveActions@1211.31:1211.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	 ª	(*"
typeFieldFormatterCleanups"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark>FieldFormatterCleanups <mark class="class-field">saveActions</mark> = parserResult.getMetaData().getSaveActions().get()*saveActions2ç
/org.jabref.logic.cleanup.FieldFormatterCleanupsTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	 ª	(2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	Y ª	(\2ë
3org.jabref.model.metadata.MetaData.getSaveActions()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	H ª	(V2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	: ª	(E2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesSaveActionsAfterEntry()?parserResult@1196.21:1196.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª	- ª	(9∫E
Norg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√		 √	("
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parserKeepsSaveActions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parserKeepsSaveActions2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ	+ ƒ	(02v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	Y ‹	(\2ë
3org.jabref.model.metadata.MetaData.getSaveActions()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	H ‹	(V2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	: ‹	(E2ô
;org.jabref.logic.cleanup.FieldFormatterCleanups.isEnabled()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬁ	 ﬁ	((2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·	 ·	(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚	 ‚	(2~
 java.util.List.of(E, E, E, E, E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„	  „	("2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰	 ‰	(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ	 Â	(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ	 Ê	(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ	 Á	(2§
Forg.jabref.logic.cleanup.FieldFormatterCleanups.getConfiguredActions()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ	+ È	(?2Ä
"java.util.ArrayList.ArrayList(int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	3 ‡	(>2Î
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·	 ·	(.2∑
Yorg.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter.NormalizeMonthFormatter()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·	H ·	(_2Î
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚	 ‚	(.2∑
Yorg.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter.NormalizePagesFormatter()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚	H ‚	(_2Î
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰	 ‰	(22ª
]org.jabref.logic.formatter.bibtexfields.EscapeAmpersandsFormatter.EscapeAmpersandsFormatter()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰	> ‰	(W2Î
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ	 Â	(22ª
]org.jabref.logic.formatter.bibtexfields.EscapeDollarSignFormatter.EscapeDollarSignFormatter()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ	> Â	(W2Î
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ	 Ê	(22Ω
_org.jabref.logic.formatter.bibtexfields.EscapeUnderscoresFormatter.EscapeUnderscoresFormatter()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ	> Ê	(X2Î
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ	 Á	(22≥
Uorg.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter.LatexCleanupFormatter()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ	> Á	(S2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ	$ ƒ	(*2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?parserResult@1220.21:1220.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	- ‹	(92»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?saveActions@1244.31:1244.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬁ	 ﬁ	(2≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?expected@1248.36:1248.44CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·	 ·	(2≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?expected@1248.36:1248.44CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚	 ‚	(2≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?expected@1248.36:1248.44CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰	 ‰	(2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?field@1251.19:1251.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰	3 ‰	(82≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?expected@1248.36:1248.44CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ	 Â	(2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?field@1251.19:1251.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ	3 Â	(82≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?expected@1248.36:1248.44CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ	 Ê	(2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?field@1251.19:1251.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ	3 Ê	(82≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?expected@1248.36:1248.44CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ	 Á	(2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?field@1251.19:1251.24CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ	3 Á	(82≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?expected@1248.36:1248.44CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ	 È	(2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?saveActions@1244.31:1244.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ	 È	(*2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?parserResult@1220.21:1220.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ	 ƒ	(!2œ
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?saveActions@1244.31:1244.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	 ‹	(*2Ã
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?expected@1248.36:1248.44DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	$ ‡	(,2…
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?field@1251.19:1251.24DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„	 „	(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√	 √	(è
korg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?parserResult@1220.21:1220.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ	 ƒ	(!"
typeParserResult"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = parser.parse(new StringReader("""
    @InProceedings{6055279,
      Title                    = {Educational session 1}<mark class="modifier">,</mark>
      Booktitle                = {Custom Integrated Circuits Conference (CICC)<mark class="modifier">,</mark> 2011 IEEE}<mark class="modifier">,</mark>
      Year                     = {2011}<mark class="modifier">,</mark>
      Month                    = {Sept}<mark class="modifier">,</mark>
      Pages                    = {1-7}<mark class="modifier">,</mark>
      Abstract                 = {Start of the above-titled section of the conference proceedings record.}<mark class="modifier">,</mark>
      DOI                      = {10.1109/CICC.2011.6055279}<mark class="modifier">,</mark>
      ISSN                     = {0886-5930}
    }
    
    @Comment{jabref-meta: saveActions:enabled;
    month[normalize_month]
    pages[normalize_page_numbers]
    title[escapeAmpersands,escapeDollarSign,escapeUnderscores,latex_cleanup]
    booktitle[escapeAmpersands,escapeDollarSign,escapeUnderscores,latex_cleanup]
    publisher[escapeAmpersands,escapeDollarSign,escapeUnderscores,latex_cleanup]
    journal[escapeAmpersands,escapeDollarSign,escapeUnderscores,latex_cleanup]
    abstract[escapeAmpersands,escapeDollarSign,escapeUnderscores,latex_cleanup]
    ;}
    """))*parserResult2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ	 ƒ	(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ	+ ƒ	(02¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ	$ ƒ	(*∑	
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?saveActions@1244.31:1244.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	 ‹	(*"
typeFieldFormatterCleanups"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark>FieldFormatterCleanups <mark class="class-field">saveActions</mark> = parserResult.getMetaData().getSaveActions().get()*saveActions2ç
/org.jabref.logic.cleanup.FieldFormatterCleanupsTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	 ‹	(2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	Y ‹	(\2ë
3org.jabref.model.metadata.MetaData.getSaveActions()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	H ‹	(V2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	: ‹	(E2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?parserResult@1220.21:1220.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹	- ‹	(9•
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?expected@1248.36:1248.44VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	$ ‡	(,"#
typeList<FieldFormatterCleanup>"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>List<FieldFormatterCleanup> <mark class="class-field">expected</mark> = new ArrayList<>(30)*expected2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡	(2ï
.org.jabref.logic.cleanup.FieldFormatterCleanupTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	 ‡	("2Ä
"java.util.ArrayList.ArrayList(int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡	3 ‡	(>”
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parserKeepsSaveActions()?field@1251.19:1251.24VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„	 „	("
typeField"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>Field <mark class="class-field">field</mark>*field2Ä
"org.jabref.model.entry.field.FieldTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„	 „	(„
Torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCRLFLineBreak()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ		 Ì	(%"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesCRLFLineBreak</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesCRLFLineBreak2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ	% Ó	(*2ô
;org.jabref.model.database.BibDatabase.getNewLineSeparator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ	2 ˆ	(E2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ	$ ˆ	(/2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ	 Ô	( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ	 Ó	($2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCRLFLineBreak()?result@1262.21:1262.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˆ	 ˆ	(#2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCRLFLineBreak()?result@1262.21:1262.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ	 Ó	(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ	 Ì	(ñ
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesCRLFLineBreak()?result@1262.21:1262.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ	 Ó	("
typeParserResult"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@InProceedings{6055279,\r\n" + "  Title                    = {Educational session 1}<mark class="modifier">,</mark>\r\n" + "  Booktitle                = {Custom Integrated Circuits Conference (CICC)<mark class="modifier">,</mark> 2011 IEEE}<mark class="modifier">,</mark>\r\n" + "  Year                     = {2011}<mark class="modifier">,</mark>\r\n" + "  Month                    = {Sept}<mark class="modifier">,</mark>\r\n" + "  Pages                    = {1-7}<mark class="modifier">,</mark>\r\n" + "  Abstract                 = {Start of the above-titled section of the conference proceedings record.}<mark class="modifier">,</mark>\r\n" + "  DOI                      = {10.1109/CICC.2011.6055279}<mark class="modifier">,</mark>\r\n" + "  ISSN                     = {0886-5930}\r\n" + "}\r\n"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ	 Ó	(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ	% Ó	(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ	 Ô	( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÓ	 Ó	($Ÿ
Rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesLFLineBreak()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙		 ˙	(#"
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesLFLineBreak</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesLFLineBreak2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚	% ˚	(*2ô
;org.jabref.model.database.BibDatabase.getNewLineSeparator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ
0 É
(C2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ
" É
(-2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸	 ¸	( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚	 ˚	($2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesLFLineBreak()?result@1275.21:1275.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ
 É
(!2Œ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesLFLineBreak()?result@1275.21:1275.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚	 ˚	(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙	 ˙	(Ä
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesLFLineBreak()?result@1275.21:1275.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚	 ˚	("
typeParserResult"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@InProceedings{6055279,\n" + "  Title                    = {Educational session 1}<mark class="modifier">,</mark>\n" + "  Booktitle                = {Custom Integrated Circuits Conference (CICC)<mark class="modifier">,</mark> 2011 IEEE}<mark class="modifier">,</mark>\n" + "  Year                     = {2011}<mark class="modifier">,</mark>\n" + "  Month                    = {Sept}<mark class="modifier">,</mark>\n" + "  Pages                    = {1-7}<mark class="modifier">,</mark>\n" + "  Abstract                 = {Start of the above-titled section of the conference proceedings record.}<mark class="modifier">,</mark>\n" + "  DOI                      = {10.1109/CICC.2011.6055279}<mark class="modifier">,</mark>\n" + "  ISSN                     = {0886-5930}\n" + "}\n"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚	 ˚	(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚	% ˚	(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸	 ¸	( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚	 ˚	($ù
Rorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá
	 á
(#"
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestSaveActions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestSaveActions2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ
 â
(2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
Y ã
(\2ë
3org.jabref.model.metadata.MetaData.getSaveActions()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
H ã
(V2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
: ã
(E2ô
;org.jabref.logic.cleanup.FieldFormatterCleanups.isEnabled()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç
 ç
((2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé
 é
(2§
Forg.jabref.logic.cleanup.FieldFormatterCleanups.getConfiguredActions()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè
 è
(02ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ
 â
('2Î
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé
! é
(62¨
Norg.jabref.logic.formatter.casechanger.LowerCaseFormatter.LowerCaseFormatter()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaé
P é
(b2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà
$ à
(*2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()?parserResult@1288.21:1288.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
- ã
(92Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()?saveActions@1291.31:1291.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç
 ç
(2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()?saveActions@1291.31:1291.42CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè
 è
(2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()?parserResult@1288.21:1288.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà
 à
(!2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()?saveActions@1291.31:1291.42DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
 ã
(*2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá
 á
(∆
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()?parserResult@1288.21:1288.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà
 à
(!"
typeParserResult"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = parser.parse(new StringReader("@comment{jabref-meta: saveActions:enabled;title[lower_case]}"))*parserResult2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà
 à
(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ
 â
(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ
 â
('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà
$ à
(*ø	
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()?saveActions@1291.31:1291.42VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
 ã
(*"
typeFieldFormatterCleanups"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark>FieldFormatterCleanups <mark class="class-field">saveActions</mark> = parserResult.getMetaData().getSaveActions().get()*saveActions2ç
/org.jabref.logic.cleanup.FieldFormatterCleanupsTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
 ã
(2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
Y ã
(\2ë
3org.jabref.model.metadata.MetaData.getSaveActions()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
H ã
(V2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
: ã
(E2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveActions()?parserResult@1288.21:1288.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã
- ã
(9é
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBibEntryType()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì
	 ì
($"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestBibEntryType</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestBibEntryType2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî
% î
(*2{
java.util.Arrays.asList(T...)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû
 û
(2Ä
"java.util.Collections.singleton(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£
! £
(*2î
6org.jabref.logic.importer.ParserResult.getEntryTypes()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£
F £
(S2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï
 ï
( 2Æ
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò
 ò
($2∞
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü
 ü
($2∞
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†
 †
($2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî
 î
($2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBibEntryType()?expectedEntryType@1303.21:1303.38CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£
+ £
(<2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBibEntryType()?result@1300.21:1300.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£
? £
(E2œ
jorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBibEntryType()?result@1300.21:1300.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî
 î
(2⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBibEntryType()?expectedEntryType@1303.21:1303.38DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó
 ó
(&2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì
 ì
(∆
jorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBibEntryType()?result@1300.21:1300.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî
 î
("
typeParserResult"
isFinalfalse"€
declarationString≈<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{jabref-entrytype: Lecturenotes: req[author;title] opt[language;url]}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî
 î
(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî
% î
(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï
 ï
( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî
 î
($Â
uorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBibEntryType()?expectedEntryType@1303.21:1303.38VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó
 ó
(&"
typeBibEntryType"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>BibEntryType <mark class="class-field">expectedEntryType</mark> = new BibEntryType(new UnknownEntryType("lecturenotes")<mark class="modifier">,</mark> Arrays.asList(new BibField(StandardField.AUTHOR, FieldPriority.IMPORTANT)<mark class="modifier">,</mark> new BibField(StandardField.TITLE, FieldPriority.IMPORTANT)<mark class="modifier">,</mark> new BibField(StandardField.LANGUAGE, FieldPriority.IMPORTANT)<mark class="modifier">,</mark> new BibField(StandardField.URL, FieldPriority.IMPORTANT))<mark class="modifier">,</mark> Arrays.asList(new OrFields(StandardField.AUTHOR)<mark class="modifier">,</mark> new OrFields(StandardField.TITLE)))*expectedEntryType2Å
#org.jabref.model.entry.BibEntryTypeTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaó
 ó
(2{
java.util.Arrays.asList(T...)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû
 û
(2Æ
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaò
 ò
($2∞
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü
 ü
($2∞
Rorg.jabref.model.entry.field.OrFields.OrFields(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†
 †
($Ú
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveOrderConfig()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß
	 ß
('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestSaveOrderConfig</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestSaveOrderConfig2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®
% ®
(*2è
1org.jabref.model.metadata.MetaData.getSaveOrder()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
C ¨
(O2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
5 ¨
(@2x
java.util.List.of(E, E, E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ
G Æ
(I2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤
  ≤
(#2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©
 ©
( 2˛
üorg.jabref.model.metadata.SaveOrder.SaveOrder(org.jabref.model.metadata.SaveOrder.OrderType, java.util.List<org.jabref.model.metadata.SaveOrder.SortCriterion>)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ
 Æ
("2 
lorg.jabref.model.metadata.SaveOrder.SortCriterion.SortCriterion(org.jabref.model.entry.field.Field, boolean)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ
 Ø
(32 
lorg.jabref.model.metadata.SaveOrder.SortCriterion.SortCriterion(org.jabref.model.entry.field.Field, boolean)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞
 ∞
(32 
lorg.jabref.model.metadata.SaveOrder.SortCriterion.SortCriterion(org.jabref.model.entry.field.Field, boolean)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±
 ±
(32¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®
 ®
($2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveOrderConfig()?result@1320.21:1320.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
. ¨
(42‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveOrderConfig()?saveOrderConfig@1324.28:1324.43CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤
 ≤
(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveOrderConfig()?result@1320.21:1320.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®
 ®
(2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveOrderConfig()?saveOrderConfig@1324.28:1324.43DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
 ¨
(+2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß
 ß
(è	
morg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveOrderConfig()?result@1320.21:1320.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®
 ®
("
typeParserResult"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@Comment{jabref-meta: saveOrderConfig:specified;author;<mark class="modifier">false</mark>;year;true;abstract;<mark class="modifier">false</mark>;}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®
 ®
(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®
% ®
(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©
 ©
( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®
 ®
($Æ	
vorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveOrderConfig()?saveOrderConfig@1324.28:1324.43VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
 ¨
(+"
typeOptional<SaveOrder>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<SaveOrder> <mark class="class-field">saveOrderConfig</mark> = result.getMetaData().getSaveOrder()*saveOrderConfig2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
 ¨
(2ä
#org.jabref.model.metadata.SaveOrderTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
 ¨
(2è
1org.jabref.model.metadata.MetaData.getSaveOrder()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
C ¨
(O2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
5 ¨
(@2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestSaveOrderConfig()?result@1320.21:1320.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨
. ¨
(4Í#
Worg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂
	 ∂
(("
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestCustomKeyPattern</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestCustomKeyPattern2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏
 ∏
(2–
rorg.jabref.model.metadata.MetaData.getCiteKeyPattern(org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
K º
(\2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
= º
(H2æ
`org.jabref.logic.citationkeypattern.AbstractCitationKeyPattern.setDefaultValue(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ
 æ
('2Ì
éorg.jabref.logic.citationkeypattern.AbstractCitationKeyPattern.addCitationKeyPattern(org.jabref.model.entry.types.EntryType, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø
 ø
(-2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏
 ∏
('2ˆ
óorg.jabref.logic.citationkeypattern.DatabaseCitationKeyPattern.DatabaseCitationKeyPattern(org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ
9 Ω
(S2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑
 ∑
($2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?result@1335.21:1335.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
6 º
(<2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?pattern@1339.33:1339.40CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
] º
(d2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?pattern@1339.33:1339.40CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ
T Ω
([2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?expectedPattern@1341.35:1341.50CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ
 æ
(2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?expectedPattern@1341.35:1341.50CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaø
 ø
(2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?expectedPattern@1341.35:1341.50CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡
 ¡
($2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?bibtexKeyPattern@1340.35:1340.51CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡
& ¡
(62”
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?result@1335.21:1335.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑
 ∑
(2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?pattern@1339.33:1339.40DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª
! ª
((2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?bibtexKeyPattern@1340.35:1340.51DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
# º
(32‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?expectedPattern@1341.35:1341.50DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ
# Ω
(22i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂
 ∂
(Û
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?result@1335.21:1335.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑
 ∑
("
typeParserResult"
isFinalfalse"Ñ
declarationStringÓ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{jabref-meta: keypattern_article:articleTest;}" + OS.NEWLINE + "@comment{jabref-meta: keypatterndefault:test;}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑
 ∑
(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏
 ∏
(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏
 ∏
('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑
 ∑
($À
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?pattern@1339.33:1339.40VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª
! ª
((" 
typeGlobalCitationKeyPattern"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>GlobalCitationKeyPattern <mark class="class-field">pattern</mark> = mock(GlobalCitationKeyPattern.class)*pattern2ö
<org.jabref.logic.citationkeypattern.GlobalCitationKeyPatternTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª
 ª
( ˛

xorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?bibtexKeyPattern@1340.35:1340.51VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
# º
(3""
typeAbstractCitationKeyPattern"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>AbstractCitationKeyPattern <mark class="class-field">bibtexKeyPattern</mark> = result.getMetaData().getCiteKeyPattern(pattern)*bibtexKeyPattern2ú
>org.jabref.logic.citationkeypattern.AbstractCitationKeyPatternTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
 º
("2–
rorg.jabref.model.metadata.MetaData.getCiteKeyPattern(org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
K º
(\2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
= º
(H2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?result@1335.21:1335.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
6 º
(<2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?pattern@1339.33:1339.40CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº
] º
(dµ
worg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?expectedPattern@1341.35:1341.50VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ
# Ω
(2""
typeAbstractCitationKeyPattern"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>AbstractCitationKeyPattern <mark class="class-field">expectedPattern</mark> = new DatabaseCitationKeyPattern(pattern)*expectedPattern2ú
>org.jabref.logic.citationkeypattern.AbstractCitationKeyPatternTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ
 Ω
("2ˆ
óorg.jabref.logic.citationkeypattern.DatabaseCitationKeyPattern.DatabaseCitationKeyPattern(org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ
9 Ω
(S2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestCustomKeyPattern()?pattern@1339.33:1339.40CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ
T Ω
([‡
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBiblatexMode()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈
	 ≈
($"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestBiblatexMode</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestBiblatexMode2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«
 «
(2ä
,org.jabref.model.metadata.MetaData.getMode()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
> …
(E2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
0 …
(;2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ
4 À
(72ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«
 «
('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆
 ∆
($2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBiblatexMode()?result@1350.21:1350.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
) …
(/2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBiblatexMode()?mode@1353.34:1353.38CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ
/ À
(32œ
jorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBiblatexMode()?result@1350.21:1350.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆
 ∆
(2Õ
horg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBiblatexMode()?mode@1353.34:1353.38DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
" …
(&2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈
 ≈
(¶
jorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBiblatexMode()?result@1350.21:1350.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆
 ∆
("
typeParserResult"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{jabref-meta: databaseType:biblatex;}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆
 ∆
(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«
 «
(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«
 «
('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆
 ∆
($é	
horg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBiblatexMode()?mode@1353.34:1353.38VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
" …
(&"!
typeOptional<BibDatabaseMode>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Optional<BibDatabaseMode> <mark class="class-field">mode</mark> = result.getMetaData().getMode()*mode2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
 …
(2ê
)org.jabref.model.database.BibDatabaseModeTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
 …
( 2ä
,org.jabref.model.metadata.MetaData.getMode()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
> …
(E2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
0 …
(;2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestBiblatexMode()?result@1350.21:1350.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…
) …
(/Ë%
Porg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ
	 œ
(!"
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestGroupTree</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestGroupTree2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–
% –
(*2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
> ÿ
(A2å
.org.jabref.model.metadata.MetaData.getGroups()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
2 ÿ
(;2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
$ ÿ
(/2é
0org.jabref.model.groups.GroupTreeNode.getGroup()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄
> ⁄
(F2ç
/org.jabref.model.TreeNode.getNumberOfChildren()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€
 €
(02Ö
'org.jabref.model.TreeNode.getChildren()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬁ
 ﬁ
( 2Ö
'org.jabref.model.TreeNode.getChildren()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·
 ·
( 2{
java.util.Arrays.asList(T...)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚
 ‚
("2ò
:org.jabref.model.groups.ExplicitGroup.getLegacyEntryKeys()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„
G „
(Y2Ö
'org.jabref.model.TreeNode.getChildren()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„
& „
(12ß
Iorg.jabref.model.groups.AllEntriesGroup.AllEntriesGroup(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄
 ⁄
((2ó
∏org.jabref.model.groups.RegexKeywordGroup.RegexKeywordGroup(java.lang.String, org.jabref.model.groups.GroupHierarchyType, org.jabref.model.entry.field.Field, java.lang.String, boolean)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›
 ›
(%2≥
‘org.jabref.model.groups.WordKeywordGroup.WordKeywordGroup(java.lang.String, org.jabref.model.groups.GroupHierarchyType, org.jabref.model.entry.field.Field, java.lang.String, boolean, java.lang.Character, boolean)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‡
 ‡
($2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–
 –
($2≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?result@1360.21:1360.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
 ÿ
(#2√
eorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?root@1368.22:1368.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java⁄
9 ⁄
(=2√
eorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?root@1368.22:1368.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€
 €
(2√
eorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?root@1368.22:1368.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaﬁ
 ﬁ
(2√
eorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?root@1368.22:1368.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·
 ·
(2√
eorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?root@1368.22:1368.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„
! „
(%2Ã
gorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?result@1360.21:1360.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–
 –
(2 
eorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?root@1368.22:1368.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
 ÿ
(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ
 œ
(ñ	
gorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?result@1360.21:1360.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–
 –
("
typeParserResult"
isFinalfalse"¬
declarationString¨<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("""
    @comment{jabref-meta: groupsversion:3;}
    @comment{jabref-meta: groupstree:
    0 AllEntriesGroup:;
    1 KeywordGroup:Fr√©chet\\;0\\;keywords\\;FrechetSpace\\;0\\;1\\;;
    1 KeywordGroup:Invariant theory\\;0\\;keywords\\;GIT\\;0\\;0\\;;
    1 ExplicitGroup:TestGroup\\;0\\;Key1\\;Key2\\;;}"""))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–
 –
(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–
% –
(*2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–
 –
($Û
eorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?root@1368.22:1368.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
 ÿ
("
typeGroupTreeNode"
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark>GroupTreeNode <mark class="class-field">root</mark> = result.getMetaData().getGroups().get()*root2É
%org.jabref.model.groups.GroupTreeNodeTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
 ÿ
(2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
> ÿ
(A2å
.org.jabref.model.metadata.MetaData.getGroups()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
2 ÿ
(;2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
$ ÿ
(/2≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestGroupTree()?result@1360.21:1360.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ
 ÿ
(#§
Oorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestTexGroup()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ
	 Í
( "
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestTexGroup</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestTexGroup2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ
% Î
(*2å
.java.lang.System.getProperty(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ
! Û
(,2Ä
"java.net.InetAddress.getHostName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ
5 Ù
(@2Å
#java.net.InetAddress.getLocalHost()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ
& Ù
(22å
.java.lang.System.getProperty(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜
! ˜
(,2Ä
"java.net.InetAddress.getHostName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯
5 ¯
(@2Å
#java.net.InetAddress.getLocalHost()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯
& ¯
(22v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
> ¸
(A2å
.org.jabref.model.metadata.MetaData.getGroups()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
2 ¸
(;2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
$ ¸
(/2å
.org.jabref.model.groups.TexGroup.getFilePath()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛
G ˛
(R2Ö
'org.jabref.model.TreeNode.getChildren()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛
& ˛
(12ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ
 ˇ
(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ
/ Î
(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ
 Î
($2ƒ
forg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestTexGroup()?result@1387.21:1387.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
 ¸
(#2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestTexGroup()?root@1404.22:1404.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛
! ˛
(%2À
forg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestTexGroup()?result@1387.21:1387.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ
 Î
(2…
dorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestTexGroup()?root@1404.22:1404.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
 ¸
(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ
 Í
(È
forg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestTexGroup()?result@1387.21:1387.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ
 Î
("
typeParserResult"
isFinalfalse"÷
declarationString¿<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{jabref-meta: grouping:" + OS.NEWLINE + "0 AllEntriesGroup:;" + OS.NEWLINE + "1 TexGroup:cited entries\\;0\\;paper.aux\\;1\\;0x8a8a8aff\\;\\;\\;;" + "}" + OS.NEWLINE + "@Comment{jabref-meta: databaseType:biblatex;}" + OS.NEWLINE + "@Comment{jabref-meta: fileDirectory:src/test/resources/org/jabref/model/groups;}" + OS.NEWLINE + "@Comment{jabref-meta: fileDirectory-" + System.getProperty("user.name") + "-" + InetAddress.getLocalHost().getHostName() + ":src/test/resources/org/jabref/model/groups;}" + OS.NEWLINE + "@Comment{jabref-meta: fileDirectoryLatex-" + System.getProperty("user.name") + "-" + InetAddress.getLocalHost().getHostName() + ":src/test/resources/org/jabref/model/groups;}" + OS.NEWLINE))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ
 Î
(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ
% Î
(*2å
.java.lang.System.getProperty(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ
! Û
(,2Ä
"java.net.InetAddress.getHostName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ
5 Ù
(@2Å
#java.net.InetAddress.getLocalHost()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ
& Ù
(22å
.java.lang.System.getProperty(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˜
! ˜
(,2Ä
"java.net.InetAddress.getHostName()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯
5 ¯
(@2Å
#java.net.InetAddress.getLocalHost()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯
& ¯
(22ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ
/ Î
(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ
 Î
($Ò
dorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestTexGroup()?root@1404.22:1404.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
 ¸
("
typeGroupTreeNode"
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark>GroupTreeNode <mark class="class-field">root</mark> = result.getMetaData().getGroups().get()*root2É
%org.jabref.model.groups.GroupTreeNodeTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
 ¸
(2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
> ¸
(A2å
.org.jabref.model.metadata.MetaData.getGroups()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
2 ¸
(;2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
$ ¸
(/2ƒ
forg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestTexGroup()?result@1387.21:1387.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸
 ¸
(#ÿ
Torg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestProtectedFlag()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ	 É(%"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestProtectedFlag</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestProtectedFlag2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(2é
0org.jabref.model.metadata.MetaData.isProtected()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá( á(32í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá á(%2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ($2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestProtectedFlag()?result@1412.21:1412.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá á(2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestProtectedFlag()?result@1412.21:1412.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÉ É(§
korg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestProtectedFlag()?result@1412.21:1412.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ("
typeParserResult"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{jabref-meta: protectedFlag:true;}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö('2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ($
Worg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã	 ã(("
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestContentSelectors</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestContentSelectors2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå% å(*2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2∆
horg.jabref.model.metadata.ContentSelectors.getSelectorValuesForField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaïH ï(a2ñ
8org.jabref.model.metadata.MetaData.getContentSelectors()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï2 ï(E2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï$ ï(/2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç( 2Ä
"java.util.ArrayList.ArrayList(int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè" è(-2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å($2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?values@1423.21:1423.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaê ê(2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?values@1423.21:1423.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?values@1423.21:1423.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?values@1423.21:1423.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?values@1423.21:1423.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï ï(2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?result@1420.21:1420.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï ï(#2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?result@1420.21:1420.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?values@1423.21:1423.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaã ã(»
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?result@1420.21:1420.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å("
typeParserResult"
isFinalfalse"Ÿ
declarationString√<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@Comment{jabref-meta: selector_pubstate:approved;captured;received;status;}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå% å(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å($È
norg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestContentSelectors()?values@1423.21:1423.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è("
typeList<String>"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>List<String> <mark class="class-field">values</mark> = new ArrayList<>(4)*values2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2w
java.lang.StringTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2Ä
"java.util.ArrayList.ArrayList(int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè" è(-›
Norg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô	 ô("
isFinalfalse"É
declarationStringÌ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseReallyUnknownType</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseReallyUnknownType2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü. ü(:2≠
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(2û
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢($2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†% †(-2Æ
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°" °(22¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü' ü(-2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?bibtexEntry@1434.15:1434.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü; ü(F2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?expectedEntry@1440.17:1440.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?expectedEntry@1440.17:1440.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?expectedEntry@1440.17:1440.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £(2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?expectedEntry@1440.17:1440.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(*2ƒ
forg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?entries@1439.29:1439.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•- •(42œ
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?bibtexEntry@1434.15:1434.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(2À
forg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?entries@1439.29:1439.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü($2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?expectedEntry@1440.17:1440.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô(±
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?bibtexEntry@1434.15:1434.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö("
typeString"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @ReallyUnknownType{test,
     Comment                  = {testentry}
    }"""*bibtexEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(©	
forg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?entries@1439.29:1439.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü($"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = parser.parseEntries(bibtexEntry)*entries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü. ü(:2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü' ü(-2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?bibtexEntry@1434.15:1434.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü; ü(Fâ
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReallyUnknownType()?expectedEntry@1440.17:1440.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †("
typeBibEntry"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntry</mark> = new BibEntry()*expectedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†% †(-≠
Jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©	 ©("
isFinalfalse"ˇ
declarationStringÈ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseOtherTypeTest</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseOtherTypeTest2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ. Ø(:2≠
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(2û
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤($2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞% ∞(-2Æ
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±" ±(22¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ' Ø(-2ƒ
forg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?bibtexEntry@1450.15:1450.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ; Ø(F2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?expectedEntry@1456.17:1456.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?expectedEntry@1456.17:1456.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≤ ≤(2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?expectedEntry@1456.17:1456.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≥ ≥(2∆
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?expectedEntry@1456.17:1456.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(*2¿
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?entries@1455.29:1455.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ- µ(42À
forg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?bibtexEntry@1450.15:1450.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™(2«
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?entries@1455.29:1455.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø($2Õ
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?expectedEntry@1456.17:1456.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©(°
forg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?bibtexEntry@1450.15:1450.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™("
typeString"
isFinalfalse"∑
declarationString°<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Other{test,
     Comment                  = {testentry}
    }"""*bibtexEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java™ ™(°	
borg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?entries@1455.29:1455.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø($"
typeCollection<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = parser.parseEntries(bibtexEntry)*entries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø(2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ. Ø(:2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ' Ø(-2ƒ
forg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?bibtexEntry@1450.15:1450.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ; Ø(FÖ
horg.jabref.logic.importer.fileformat.BibtexParserTest.parseOtherTypeTest()?expectedEntry@1456.17:1456.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞("
typeBibEntry"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntry</mark> = new BibEntry()*expectedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞% ∞(-ó"
Qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ	 π(""
isFinalfalse"Ü
declarationString<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRecognizesDatabaseID</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRecognizesDatabaseID2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº& º(,2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿+ ¿(02Ä
"java.lang.StringBuilder.toString()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿\ ¿(d2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡S ¡(V2ô
;org.jabref.model.database.BibDatabase.getSharedDatabaseID()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡= ¡(P2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡/ ¡(:2Ö
'java.lang.StringBuilder.StringBuilder()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª6 ª(C2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿5 ¿(A2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?expectedDatabaseID@1466.15:1466.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº- º(?2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿$ ¿(*2Ÿ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?sharedDatabaseFileContent@1467.22:1467.47CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿B ¿([2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?parserResult@1472.21:1472.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡" ¡(.2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?expectedDatabaseID@1466.15:1466.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√ √('2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?actualDatabaseID@1473.15:1473.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√) √(92Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?expectedDatabaseID@1466.15:1466.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(!2‡
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?sharedDatabaseFileContent@1467.22:1467.47DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(/2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?parserResult@1472.21:1472.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(!2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?actualDatabaseID@1473.15:1473.31DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(˝
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?expectedDatabaseID@1466.15:1466.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(!"
typeString"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>String <mark class="class-field">expectedDatabaseID</mark> = "q1w2e3r4t5z6"*expectedDatabaseID2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(®
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?sharedDatabaseFileContent@1467.22:1467.47VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(/"
typeStringBuilder"
isFinalfalse"Ï
declarationString÷<mark class="modifier"> </mark>StringBuilder <mark class="class-field">sharedDatabaseFileContent</mark> = new StringBuilder().append("\\% DBID: ").append(expectedDatabaseID).append(OS.NEWLINE).append("@Article{a}")*sharedDatabaseFileContent2u
java.lang.StringBuilderTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº& º(,2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(2Ö
'java.lang.StringBuilder.StringBuilder()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª6 ª(C2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?expectedDatabaseID@1466.15:1466.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº- º(?ä
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?parserResult@1472.21:1472.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(!"
typeParserResult"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = parser.parse(new StringReader(sharedDatabaseFileContent.toString()))*parserResult2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿+ ¿(02Ä
"java.lang.StringBuilder.toString()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿\ ¿(d2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿5 ¿(A2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿$ ¿(*2Ÿ
{org.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?sharedDatabaseFileContent@1467.22:1467.47CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿B ¿([ô	
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?actualDatabaseID@1473.15:1473.31VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡("
typeString"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>String <mark class="class-field">actualDatabaseID</mark> = parserResult.getDatabase().getSharedDatabaseID().get()*actualDatabaseID2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡ ¡(2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡S ¡(V2ô
;org.jabref.model.database.BibDatabase.getSharedDatabaseID()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡= ¡(P2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡/ ¡(:2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRecognizesDatabaseID()?parserResult@1472.21:1472.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¡" ¡(.ê!
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«	 «(5"
isFinalfalse"ô
declarationStringÉ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseDoesNotRecognizeDatabaseIDasUserComment</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*,parseDoesNotRecognizeDatabaseIDasUserComment2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java 2  (82é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   (2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…/ …(52é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ+ Õ(02Ä
"java.lang.StringBuilder.toString()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ\ Õ(d2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ< Œ(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ. Œ(92s
java.util.List.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java–  –($2Ö
'java.lang.StringBuilder.StringBuilder()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java»6 »(C2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ5 Õ(A2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ$ Õ(*2Ì
éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?sharedDatabaseFileContent@1480.22:1480.47CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕB Õ([2‡
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?parserResult@1485.21:1485.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ! Œ(-2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?entries@1486.23:1486.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –(2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?entries@1486.23:1486.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java— —( 2Ù
éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?sharedDatabaseFileContent@1480.22:1480.47DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(/2Á
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?parserResult@1485.21:1485.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(!2·
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?entries@1486.23:1486.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «(ö
éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?sharedDatabaseFileContent@1480.22:1480.47VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(/"
typeStringBuilder"
isFinalfalse"é
declarationString¯<mark class="modifier"> </mark>StringBuilder <mark class="class-field">sharedDatabaseFileContent</mark> = new StringBuilder().append("\\% Encoding: UTF-8").append(OS.NEWLINE).append("\\% DBID: q1w2e3r4t5z6").append(OS.NEWLINE).append("@Article{a}")*sharedDatabaseFileContent2u
java.lang.StringBuilderTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java 2  (82é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java   (2é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java…/ …(52é
0java.lang.StringBuilder.append(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2Ö
'java.lang.StringBuilder.StringBuilder()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java»6 »(C≤
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?parserResult@1485.21:1485.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(!"
typeParserResult"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = parser.parse(new StringReader(sharedDatabaseFileContent.toString()))*parserResult2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ Õ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ+ Õ(02Ä
"java.lang.StringBuilder.toString()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ\ Õ(d2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ5 Õ(A2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕ$ Õ(*2Ì
éorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?sharedDatabaseFileContent@1480.22:1480.47CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÕB Õ([¨	
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?entries@1486.23:1486.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ("
typeList<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = parserResult.getDatabase().getEntries()*entries2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ< Œ(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ. Œ(92‡
Åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDoesNotRecognizeDatabaseIDasUserComment()?parserResult@1485.21:1485.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ! Œ(-Ó
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestFileDirectories()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’	 ’('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">integrationTestFileDirectories</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*integrationTestFileDirectories2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷% ÷(*2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€V €(Y2ö
<org.jabref.model.metadata.MetaData.getDefaultFileDirectory()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€< €(S2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€. €(92v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹e ‹(h2ß
Iorg.jabref.model.metadata.MetaData.getUserFileDirectory(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹; ‹(O2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹- ‹(82{
java.nio.file.Path.toString()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›h ›(p2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›b ›(e2®
Jorg.jabref.model.metadata.MetaData.getLatexFileDirectory(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›7 ›(L2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›) ›(42ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷($2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestFileDirectories()?result@1494.21:1494.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€' €(-2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestFileDirectories()?result@1494.21:1494.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹& ‹(,2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestFileDirectories()?result@1494.21:1494.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java›" ›((2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestFileDirectories()?result@1494.21:1494.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’(Õ	
morg.jabref.logic.importer.fileformat.BibtexParserTest.integrationTestFileDirectories()?result@1494.21:1494.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷("
typeParserResult"
isFinalfalse"ﬂ
declarationString…<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{jabref-meta: fileDirectory:\\\\Literature\\\\;}" + "@comment{jabref-meta: fileDirectory-defaultOwner-user:D:\\\\Documents;}" + "@comment{jabref-meta: fileDirectoryLatex-defaultOwner-user:D:\\\\Latex;}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷% ÷(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java◊ ◊( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java÷ ÷($®
aorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ	 Á(""
isFinalfalse" 
declarationString¥ <br><mark class="annotation">@CsvSource({</mark> // single backslash kept
"C:\\temp\\test"<mark class="modifier"><mark class="modifier">,</mark></mark> "\\\\servername\\path\\to\\file"<mark class="modifier"><mark class="modifier">,</mark></mark> "//servername/path/to/file"<mark class="modifier"><mark class="modifier">,</mark></mark> "." }) <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fileDirectoriesUnmodified</mark>(String directory)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*fileDirectoriesUnmodified2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË% Ë(*2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍO Í(R2ö
<org.jabref.model.metadata.MetaData.getDefaultFileDirectory()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ5 Í(L2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ' Í(22ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË Ë($2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)!directoryCALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈJ È(S2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)!directoryCALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í(2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)?result@1512.21:1512.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ  Í(&2Œ
korg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)!directory	PARAMETERT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ* Á(32›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)?result@1512.21:1512.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË Ë(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ Á(â

xorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)?result@1512.21:1512.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË Ë("
typeParserResult"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{jabref-meta: fileDirectory:" + directory + "}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË Ë(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË% Ë(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaË Ë($2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)!directoryCALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈJ È(Sí
korg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoriesUnmodified(java.lang.String)!directory	PARAMETERT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ* Á(3"
typeString"
isFinalfalse"%
declarationStringString directory*	directory2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÁ# Á()°
}org.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ	 Ò(,"
isFinalfalse"¢
declarationStringå <br><mark class="annotation">@CsvSource({</mark> "C:\\temp\\test<mark class="modifier"><mark class="modifier">,</mark></mark> C:\\\\temp\\\\test"<mark class="modifier"><mark class="modifier">,</mark></mark> "\\\\servername\\path\\to\\file<mark class="modifier"><mark class="modifier">,</mark></mark> \\\\\\\\servername\\\\path\\\\to\\\\file" }) <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fileDirectoryWithDoubleEscapeIsRead</mark>(String expected<mark class="modifier"><mark class="modifier">,</mark></mark> String provided)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*#fileDirectoryWithDoubleEscapeIsRead2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ% Ú(*2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙN Ù(Q2ö
<org.jabref.model.metadata.MetaData.getDefaultFileDirectory()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ4 Ù(K2í
4org.jabref.logic.importer.ParserResult.getMetaData()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ& Ù(12ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú($2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)!providedCALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛK Û(S2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)!expectedCALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(2Û
îorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)?result@1522.21:1522.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(%2Í
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)!expected	PARAMETERT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ4 Ò(<2Í
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)!provided	PARAMETERT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒE Ò(M2˙
îorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)?result@1522.21:1522.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(¬

îorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)?result@1522.21:1522.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú("
typeParserResult"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@comment{jabref-meta: fileDirectory: " + provided + "}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ% Ú(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û( 2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú($2Â
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)!providedCALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛK Û(S¨
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)!expected	PARAMETERT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ4 Ò(<"
typeString"
isFinalfalse"$
declarationStringString expected*expected2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ- Ò(3¨
Üorg.jabref.logic.importer.fileformat.BibtexParserTest.fileDirectoryWithDoubleEscapeIsRead(java.lang.String, java.lang.String)!provided	PARAMETERT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒE Ò(M"
typeString"
isFinalfalse"$
declarationStringString provided*provided2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ> Ò(Dé8
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯	 ¯('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseReturnsEntriesInSameOrder</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseReturnsEntriesInSameOrder2≠
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2û
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2≠
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(2û
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç(2≠
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(2û
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2s
java.util.List.add(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá á(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè4 è(>2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè& è(12}
java.util.ArrayList.ArrayList()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘& ˘(12à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(%2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(&2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ(%2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?first@1530.17:1530.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?first@1530.17:1530.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸(2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?expected@1529.23:1529.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?first@1530.17:1530.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?second@1535.17:1535.23CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÄ Ä(2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?second@1535.17:1535.23CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å(2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?expected@1529.23:1529.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç(2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?second@1535.17:1535.23CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÇ Ç(2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?third@1540.17:1540.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?third@1540.17:1540.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?expected@1529.23:1529.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá á(2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?third@1540.17:1540.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaá á(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â($2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?expected@1529.23:1529.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?result@1545.21:1545.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è(%2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?expected@1529.23:1529.31DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?first@1530.17:1530.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?second@1535.17:1535.23DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?third@1540.17:1540.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?result@1545.21:1545.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¯ ¯(˛
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?expected@1529.23:1529.31VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘("
typeList<BibEntry>"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">expected</mark> = new ArrayList<>()*expected2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(2}
java.util.ArrayList.ArrayList()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘& ˘(1˘
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?first@1530.17:1530.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">first</mark> = new BibEntry()*first2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˙ ˙(%¸
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?second@1535.17:1535.23VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ("
typeBibEntry"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>BibEntry <mark class="class-field">second</mark> = new BibEntry()*second2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(&˘
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?third@1540.17:1540.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">third</mark> = new BibEntry()*third2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÑ Ñ(%•
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseReturnsEntriesInSameOrder()?result@1545.21:1545.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â("
typeParserResult"
isFinalfalse"À
declarationStringµ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("""
    @article{a}
    @article{b}
    @inProceedings{c}"""))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaä ä(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaâ â($Ê+
Morg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì	 ì("
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parsePrecedingComment</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parsePrecedingComment2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû% û(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü< ü(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü. ü(92w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†, †(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†! †()2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢  ¢($2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£ £( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£0 £(>2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §('2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •("2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶3 ¶(;2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß( ß(>2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû/ û(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û($2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?bibtexEntry@1556.15:1556.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû< û(G2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?result@1566.21:1566.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü' ü(-2√
eorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entries@1567.29:1567.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †( 2√
eorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entries@1567.29:1567.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2¡
corg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entry@1568.17:1568.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java£* £(/2¡
corg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entry@1568.17:1568.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §(2¡
corg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entry@1568.17:1568.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2¡
corg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entry@1568.17:1568.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶- ¶(22«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?bibtexEntry@1556.15:1556.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß( 2¡
corg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entry@1568.17:1568.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß" ß('2Œ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?bibtexEntry@1556.15:1556.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(2…
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?result@1566.21:1566.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2 
eorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entries@1567.29:1567.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü($2»
corg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entry@1568.17:1568.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(Œ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?bibtexEntry@1556.15:1556.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î("
typeString"
isFinalfalse"·
declarationStringÀ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    % Some random comment that should stay here
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}
    }"""*bibtexEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(∆	
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?result@1566.21:1566.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û("
typeParserResult"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(bibtexEntry))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû% û(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû/ û(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû û($2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?bibtexEntry@1556.15:1556.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaû< û(GÉ	
eorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entries@1567.29:1567.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü ü(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü< ü(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü. ü(92¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?result@1566.21:1566.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaü' ü(-Æ
corg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entry@1568.17:1568.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†, †(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java†! †()2√
eorg.jabref.logic.importer.fileformat.BibtexParserTest.parsePrecedingComment()?entries@1567.29:1567.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java† †( Ó,
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´	 ´(&"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseCommentAndEntryInOneLine</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseCommentAndEntryInOneLine2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ% µ(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂< ∂(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂. ∂(92w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑, ∑(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑! ∑()2y
java.util.Collection.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ  π($2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫( 2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫0 ∫(>2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª('2â
+org.jabref.model.entry.BibEntry.getFields()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º("2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ3 Ω(;2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ( æ(>2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ/ µ(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ($2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?bibtexEntry@1580.15:1580.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ< µ(G2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?result@1589.21:1589.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂' ∂(-2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entries@1590.29:1590.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑( 2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entries@1590.29:1590.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entry@1591.17:1591.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫* ∫(/2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entry@1591.17:1591.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entry@1591.17:1591.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaº º(2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entry@1591.17:1591.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ- Ω(22œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?bibtexEntry@1580.15:1580.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ( 2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entry@1591.17:1591.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ" æ('2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?bibtexEntry@1580.15:1580.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨(2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?result@1589.21:1589.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entries@1590.29:1590.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂($2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entry@1591.17:1591.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java´ ´(œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?bibtexEntry@1580.15:1580.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨("
typeString"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    Some random comment that should stay here @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}
    }"""*bibtexEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¨ ¨(÷	
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?result@1589.21:1589.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ("
typeParserResult"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(bibtexEntry))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ% µ(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ/ µ(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ($2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?bibtexEntry@1580.15:1580.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ< µ(Gì	
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entries@1590.29:1590.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂< ∂(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂. ∂(92 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?result@1589.21:1589.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂' ∂(-æ
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entry@1591.17:1591.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑, ∑(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑! ∑()2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentAndEntryInOneLine()?entries@1590.29:1590.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑( Á
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬	 ¬(*"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">preserveEncodingPrefixInsideEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!preserveEncodingPrefixInsideEntry2≠
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ(2û
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈(2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√  √((2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()?expected@1603.17:1603.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ(2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()?expected@1603.17:1603.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈(2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()?expected@1603.17:1603.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java»  »(&2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()?expected@1603.17:1603.25CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(%2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()?parsed@1608.23:1608.29CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ( À(.2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()?expected@1603.17:1603.25DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√ √(2’
porg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()?parsed@1608.23:1608.29DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¬ ¬(Ö
rorg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()?expected@1603.17:1603.25VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√ √("
typeBibEntry"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry()*expected2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√ √(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java√  √((ç
porg.jabref.logic.importer.fileformat.BibtexParserTest.preserveEncodingPrefixInsideEntry()?parsed@1608.23:1608.29VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »("
typeList<BibEntry>"
isFinalfalse"∆
declarationString∞<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">parsed</mark> = parser.parseEntries("@article{test,author={" + SaveConfiguration.ENCODING_PREFIX + "}}")*parsed2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java» »(2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java… …(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java»  »(&õ
Morg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ	 œ("
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseBracketedComment</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseBracketedComment2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“% “(*2è
1org.jabref.model.database.BibDatabase.getEpilog()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘7 ‘(@2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘) ‘(42ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“/ “(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “($2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()?commentText@1616.15:1616.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“< “(G2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()?commentText@1616.15:1616.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘ ‘( 2¬
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()?result@1618.21:1618.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‘" ‘((2Œ
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()?commentText@1616.15:1616.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –(2…
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()?result@1618.21:1618.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaœ œ(Ó
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()?commentText@1616.15:1616.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –("
typeString"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>String <mark class="class-field">commentText</mark> = "@Comment{someComment}"*commentText2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java– –(∆	
dorg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()?result@1618.21:1618.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “("
typeParserResult"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(commentText))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“% “(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“/ “(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “($2«
iorg.jabref.logic.importer.fileformat.BibtexParserTest.parseBracketedComment()?commentText@1616.15:1616.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“< “(Gª
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ	 ÿ('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseRegularCommentBeforeEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseRegularCommentBeforeEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚% ‚(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„< „(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„. „(92w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰, ‰(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰! ‰()2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ( Ê(>2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚/ ‚(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚($2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?bibtexEntry@1625.15:1625.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚< ‚(G2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?result@1634.21:1634.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„' „(-2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?entries@1635.29:1635.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰( 2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?bibtexEntry@1625.15:1625.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ Ê( 2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?entry@1636.17:1636.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÊ" Ê('2◊
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?bibtexEntry@1625.15:1625.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?result@1634.21:1634.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2”
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?entries@1635.29:1635.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „($2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?entry@1636.17:1636.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÿ ÿ(¡
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?bibtexEntry@1625.15:1625.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ("
typeString"
isFinalfalse"À
declarationStringµ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Comment{someComment}
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}
    }"""*bibtexEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(ÿ	
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?result@1634.21:1634.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚("
typeParserResult"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(bibtexEntry))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚% ‚(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚/ ‚(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚($2–
rorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?bibtexEntry@1625.15:1625.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚< ‚(Gï	
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?entries@1635.29:1635.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„< „(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„. „(92À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?result@1634.21:1634.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„' „(-¿
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?entry@1636.17:1636.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰, ‰(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰! ‰()2Ã
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseRegularCommentBeforeEntry()?entries@1635.29:1635.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‰ ‰( À
Sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ	 Í($"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseCommentWithoutBrackets</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseCommentWithoutBrackets2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ% Ì(*2è
1org.jabref.model.database.BibDatabase.getEpilog()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ7 Ô(@2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ) Ô(42ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ/ Ì(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì($2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()?commentText@1643.15:1643.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ< Ì(G2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()?commentText@1643.15:1643.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ Ô( 2»
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()?result@1645.21:1645.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÔ" Ô((2‘
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()?commentText@1643.15:1643.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(2œ
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()?result@1645.21:1645.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÍ Í(Û
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()?commentText@1643.15:1643.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î("
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String <mark class="class-field">commentText</mark> = "@Comment someComment"*commentText2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(“	
jorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()?result@1645.21:1645.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì("
typeParserResult"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(commentText))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ% Ì(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ/ Ì(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ Ì($2Õ
oorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBrackets()?commentText@1643.15:1643.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÌ< Ì(Gõ
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ	 Û(/"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseCommentWithoutBracketsBeforeEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*&parseCommentWithoutBracketsBeforeEntry2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝% ˝(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛< ˛(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛. ˛(92w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ, ˇ(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ! ˇ()2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ( Å(>2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝/ ˝(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝($2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?bibtexEntry@1652.15:1652.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝< ˝(G2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?result@1661.21:1661.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛' ˛(-2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?entries@1662.29:1662.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ( 2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?bibtexEntry@1652.15:1652.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ Å( 2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?entry@1663.17:1663.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ" Å('2ﬂ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?bibtexEntry@1652.15:1652.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(2⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?result@1661.21:1661.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?entries@1662.29:1662.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛($2Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?entry@1663.17:1663.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(»
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?bibtexEntry@1652.15:1652.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù("
typeString"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Comment someComment
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}
    }"""*bibtexEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÙ Ù(Ë	
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?result@1661.21:1661.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝("
typeParserResult"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(bibtexEntry))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝% ˝(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝/ ˝(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝ ˝($2ÿ
zorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?bibtexEntry@1652.15:1652.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˝< ˝(G•	
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?entries@1662.29:1662.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛ ˛(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛< ˛(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛. ˛(92”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?result@1661.21:1661.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˛' ˛(-–
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?entry@1663.17:1663.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ, ˇ(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ! ˇ()2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentWithoutBracketsBeforeEntry()?entries@1662.29:1662.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaˇ ˇ( Ø
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ	 Ö(&"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseCommentContainingEntries</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseCommentContainingEntries2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë% ë(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí< í(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí. í(92w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì, ì(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì! ì()2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï( ï(>2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë/ ë(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë($2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?bibtexEntry@1670.15:1670.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë< ë(G2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?result@1681.21:1681.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí' í(-2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?entries@1682.29:1682.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì( 2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?bibtexEntry@1670.15:1670.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï ï( 2…
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?entry@1683.17:1683.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaï" ï('2÷
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?bibtexEntry@1670.15:1670.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?result@1681.21:1681.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?entries@1682.29:1682.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í($2–
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?entry@1683.17:1683.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(ê
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?bibtexEntry@1670.15:1670.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü("
typeString"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Comment{@article{myarticle,}
    @inproceedings{blabla, title={the proceedings of blabla}; }
    }
    @Article{test,
      Author                   = {Foo Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}
    }"""*bibtexEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(÷	
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?result@1681.21:1681.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë("
typeParserResult"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(bibtexEntry))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë% ë(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë/ ë(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë ë($2œ
qorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?bibtexEntry@1670.15:1670.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaë< ë(Gì	
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?entries@1682.29:1682.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí í(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí< í(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí. í(92 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?result@1681.21:1681.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaí' í(-æ
korg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?entry@1683.17:1683.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì, ì(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì! ì()2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntries()?entries@1682.29:1682.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì( ø
aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô	 ô(2"
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseCommentContainingEntriesAndAtSymbols</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)parseCommentContainingEntriesAndAtSymbols2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•% •(*2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶< ¶(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶. ¶(92w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß, ß(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß! ß()2ñ
8org.jabref.model.entry.BibEntry.getParsedSerialization()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©( ©(>2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•/ •(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •($2€
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?bibtexEntry@1690.15:1690.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•< •(G2÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?result@1701.21:1701.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶' ¶(-2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?entries@1702.29:1702.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß( 2€
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?bibtexEntry@1690.15:1690.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©( 2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?entry@1703.17:1703.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©" ©('2‚
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?bibtexEntry@1690.15:1690.26DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(2›
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?result@1701.21:1701.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2ﬁ
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?entries@1702.29:1702.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶($2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?entry@1703.17:1703.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaô ô(ú
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?bibtexEntry@1690.15:1690.26VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö("
typeString"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>String <mark class="class-field">bibtexEntry</mark> = """
    @Comment{@article{myarticle,}
    @inproceedings{blabla, title={the proceedings of bl@bl@}; }
    }
    @Article{test,
      Author                   = {Foo@Bar}<mark class="modifier">,</mark>
      Journal                  = {International Journal of Something}<mark class="modifier">,</mark>
      Note                     = {some note}<mark class="modifier">,</mark>
      Number                   = {1}
    }"""*bibtexEntry2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(Ó	
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?result@1701.21:1701.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •("
typeParserResult"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(bibtexEntry))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•% •(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•/ •(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java• •($2€
}org.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?bibtexEntry@1690.15:1690.26CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java•< •(G´	
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?entries@1702.29:1702.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶($"
typeCollection<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = result.getDatabase().getEntries()*entries2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶ ¶(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶< ¶(F2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶. ¶(92÷
xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?result@1701.21:1701.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¶' ¶(-÷
worg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?entry@1703.17:1703.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß(2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß, ß(02}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß! ß()2◊
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseCommentContainingEntriesAndAtSymbols()?entries@1702.29:1702.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaß ß( ¬
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyPreambleLeadsToEmpty()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠	 ≠('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseEmptyPreambleLeadsToEmpty</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseEmptyPreambleLeadsToEmpty2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ% Æ(*2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(&2x
java.util.Optional.empty()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±(#2ë
3org.jabref.model.database.BibDatabase.getPreamble()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±< ±(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±. ±(92ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ/ Æ(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ($2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyPreambleLeadsToEmpty()?result@1710.21:1710.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∞ ∞(2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyPreambleLeadsToEmpty()?result@1710.21:1710.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±' ±(-2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyPreambleLeadsToEmpty()?result@1710.21:1710.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≠ ≠(á
morg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyPreambleLeadsToEmpty()?result@1710.21:1710.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ("
typeParserResult"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader("@preamble{}"))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ% Æ(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ/ Æ(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ($º
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyFileLeadsToPreamble()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ	 µ(&"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseEmptyFileLeadsToPreamble</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseEmptyFileLeadsToPreamble2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂% ∂(*2í
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏(&2x
java.util.Optional.empty()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ π(#2ë
3org.jabref.model.database.BibDatabase.getPreamble()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ< π(G2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ. π(92ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂/ ∂(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂($2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyFileLeadsToPreamble()?result@1718.21:1718.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏(2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyFileLeadsToPreamble()?result@1718.21:1718.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaπ' π(-2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyFileLeadsToPreamble()?result@1718.21:1718.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(˙
lorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEmptyFileLeadsToPreamble()?result@1718.21:1718.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂("
typeParserResult"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(""))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂% ∂(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂/ ∂(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂($•
Porg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthString()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ	 Ω(!"
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseYearWithMonthString</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseYearWithMonthString2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ+ æ(;2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿J ¿(M2í
4org.jabref.model.entry.BibEntry.getPublicationDate()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿5 ¿(G2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿/ ¿(22à
*org.jabref.model.entry.Date.Date(int, int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿ ¿(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ$ æ(*2≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthString()?result@1726.27:1726.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¿( ¿(.2Ã
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthString()?result@1726.27:1726.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(µ
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthString()?result@1726.27:1726.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(!"
typeOptional<BibEntry>"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@ARTICLE{HipKro03, year = {2003}<mark class="modifier">,</mark> month = feb }")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ æ(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ+ æ(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaæ$ æ(*·
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithIllFormattedMonthString()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ	 ƒ(-"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseYearWithIllFormattedMonthString</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$parseYearWithIllFormattedMonthString2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈+ ≈(;2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«J «(M2í
4org.jabref.model.entry.BibEntry.getPublicationDate()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«5 «(G2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«/ «(22à
*org.jabref.model.entry.Date.Date(int, int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈$ ≈(*2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithIllFormattedMonthString()?result@1733.27:1733.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«( «(.2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithIllFormattedMonthString()?result@1733.27:1733.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaƒ ƒ(√
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithIllFormattedMonthString()?result@1733.27:1733.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈(!"
typeOptional<BibEntry>"
isFinalfalse"‹
declarationString∆<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@ARTICLE{HipKro03, year = {2003}<mark class="modifier">,</mark> month = #FEB# }")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈ ≈(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈+ ≈(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java≈$ ≈(*•
Porg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthNumber()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ	 À(!"
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseYearWithMonthNumber</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseYearWithMonthNumber2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ+ Ã(;2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒJ Œ(M2í
4org.jabref.model.entry.BibEntry.getPublicationDate()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ5 Œ(G2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ/ Œ(22à
*org.jabref.model.entry.Date.Date(int, int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ Œ(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ$ Ã(*2≈
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthNumber()?result@1740.27:1740.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŒ( Œ(.2Ã
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthNumber()?result@1740.27:1740.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÀ À(≥
gorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYearWithMonthNumber()?result@1740.27:1740.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(!"
typeOptional<BibEntry>"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@ARTICLE{HipKro03, year = {2003}<mark class="modifier">,</mark> month = 2 }")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ Ã(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ+ Ã(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÃ$ Ã(*’
Aorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYear()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“	 “("
isFinalfalse"ˆ
declarationString‡<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseYear</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*	parseYear2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”+ ”(;2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’G ’(J2í
4org.jabref.model.entry.BibEntry.getPublicationDate()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’2 ’(D2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’, ’(/2É
%org.jabref.model.entry.Date.Date(int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’ ’(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”$ ”(*2∂
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYear()?result@1747.27:1747.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java’% ’(+2Ω
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYear()?result@1747.27:1747.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java“ “(˚
Xorg.jabref.logic.importer.fileformat.BibtexParserTest.parseYear()?result@1747.27:1747.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(!"
typeOptional<BibEntry>"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@ARTICLE{HipKro03, year = {2003} }")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java” ”(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”+ ”(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java”$ ”(*‘
yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ	 Ÿ(J"
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*AparseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·% ·(-2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€& €(,2ˆ
óorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant()?expectedEntry@1761.17:1761.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ Â(*2Ô
êorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant()?parsed@1755.29:1755.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÂ- Â(32ˆ
êorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant()?parsed@1755.29:1755.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €(#2˝
óorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant()?expectedEntry@1761.17:1761.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaŸ Ÿ(ñ	
êorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant()?parsed@1755.29:1755.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €(#"
typeCollection<BibEntry>"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = parser.parseEntries("@String { kopp = \"Kopp, Oliver\" }" + "@String { kubovy = \"Kubovy, Jan\" }" + "@String { et = \" and \" }" + "@Misc{m1, author = kopp # et # kubovy }")*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€ €(2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‹ ‹(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java€& €(,°	
óorg.jabref.logic.importer.fileformat.BibtexParserTest.parseEntryUsingStringConstantsForTwoAuthorsWithEtAsStringConstant()?expectedEntry@1761.17:1761.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·("
typeBibEntry"
isFinalfalse"ﬂ
declarationString…<mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntry</mark> = new BibEntry(StandardEntryType.Misc).withCitationKey("m1").withField(StandardField.AUTHOR, "#kopp##et##kubovy#")*expectedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java· ·(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java„ „(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java‚ ‚( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java·% ·(-á
norg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ	 È(?"
isFinalfalse"®
declarationStringí<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*6parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú( 2r
java.util.List.of(E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ% Ò(-2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ& Î(,2Î
åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry()?expectedEntry@1777.17:1777.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı ı(*2‰
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry()?parsed@1771.29:1771.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaı- ı(32Î
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry()?parsed@1771.29:1771.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(#2Ú
åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry()?expectedEntry@1777.17:1777.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÈ È(í	
Öorg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry()?parsed@1771.29:1771.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(#"
typeCollection<BibEntry>"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = parser.parseEntries("@String { kopp = \"Kopp, Oliver\" }" + "@String { kubovy = \"Kubovy, Jan\" }" + "@String { et = \" and \" }" + "@Misc{m2, author = kopp # \" and \" # kubovy }")*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ Î(2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÏ Ï(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÎ& Î(,ó	
åorg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthorsHasCorrectBibTeXEntry()?expectedEntry@1777.17:1777.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò("
typeBibEntry"
isFinalfalse"‡
declarationString <mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntry</mark> = new BibEntry(StandardEntryType.Misc).withCitationKey("m2").withField(StandardField.AUTHOR, "#kopp# and #kubovy#")*expectedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ Ò(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÛ Û(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÚ Ú( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÒ% Ò(-œ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthors()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘	 ˘(*"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseStringConstantsForTwoAuthors</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!parseStringConstantsForTwoAuthors2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸(2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅd Å(g2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅE Å(M2w
java.util.Iterator.next()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ> Å(B2}
java.util.Collection.iterator()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ3 Å(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚& ˚(,2Œ
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthors()?parsed@1787.29:1787.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÅ, Å(22’
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthors()?parsed@1787.29:1787.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(#2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˘ ˘(¸
porg.jabref.logic.importer.fileformat.BibtexParserTest.parseStringConstantsForTwoAuthors()?parsed@1787.29:1787.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(#"
typeCollection<BibEntry>"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">parsed</mark> = parser.parseEntries("@String { kopp = \"Kopp, Oliver\" }" + "@String { kubovy = \"Kubovy, Jan\" }" + "@String { et = \" and \" }" + "@Misc{m2, author = kopp # \" and \" # kubovy }")*parsed2r
java.util.CollectionTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚ ˚(2ù
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¸ ¸(2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java˚& ˚(,Æ
Uorg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsParsedAsMonthApril()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ	 Ö(&"
isFinalfalse"è
declarationString˘<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">textAprilIsParsedAsMonthApril</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*textAprilIsParsedAsMonthApril2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ+ Ü(;2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà: à(=2à
*org.jabref.model.entry.BibEntry.getMonth()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà/ à(72v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà) à(,2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ$ Ü(*2 
lorg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsParsedAsMonthApril()?result@1798.27:1798.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaà" à((2—
lorg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsParsedAsMonthApril()?result@1798.27:1798.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÖ Ö(á
lorg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsParsedAsMonthApril()?result@1798.27:1798.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(!"
typeOptional<BibEntry>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@Misc{m, month = \"apr\" }")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ Ü(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ+ Ü(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÜ$ Ü(*’
Vorg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsDisplayedAsConstant()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå	 å('"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">textAprilIsDisplayedAsConstant</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*textAprilIsDisplayedAsConstant2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç+ ç(;2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaèG è(J2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè) è(12v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè# è(&2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç$ ç(*2À
morg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsDisplayedAsConstant()?result@1805.27:1805.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaè è("2“
morg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsDisplayedAsConstant()?result@1805.27:1805.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaå å(à
morg.jabref.logic.importer.fileformat.BibtexParserTest.textAprilIsDisplayedAsConstant()?result@1805.27:1805.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(!"
typeOptional<BibEntry>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@Misc{m, month = \"apr\" }")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç ç(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç+ ç(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaç$ ç(*‡
_org.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsMonthApril()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì	 ì(0"
isFinalfalse"ô
declarationStringÉ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bibTeXConstantAprilIsParsedAsMonthApril</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'bibTeXConstantAprilIsParsedAsMonthApril2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî+ î(;2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ: ñ(=2à
*org.jabref.model.entry.BibEntry.getMonth()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ/ ñ(72v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ) ñ(,2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî$ î(*2‘
vorg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsMonthApril()?result@1812.27:1812.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javañ" ñ((2€
vorg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsMonthApril()?result@1812.27:1812.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaì ì(ç
vorg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsMonthApril()?result@1812.27:1812.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(!"
typeOptional<BibEntry>"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@Misc{m, month = apr }")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî î(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî+ î(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaî$ î(*á
`org.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsDisplayedAsConstant()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö	 ö(1"
isFinalfalse"ö
declarationStringÑ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bibTeXConstantAprilIsDisplayedAsConstant</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*(bibTeXConstantAprilIsDisplayedAsConstant2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ+ õ(;2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaùI ù(L2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù+ ù(32v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù% ù((2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ$ õ(*2’
worg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsDisplayedAsConstant()?result@1819.27:1819.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaù ù($2‹
worg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsDisplayedAsConstant()?result@1819.27:1819.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaö ö(é
worg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsDisplayedAsConstant()?result@1819.27:1819.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(!"
typeOptional<BibEntry>"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@Misc{m, month = apr }")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ õ(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ+ õ(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaõ$ õ(*Å
xorg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsStringMonthAprilWhenReadingTheField()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java°	 °(I"
isFinalfalse"≤
declarationStringú<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bibTeXConstantAprilIsParsedAsStringMonthAprilWhenReadingTheField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*@bibTeXConstantAprilIsParsedAsStringMonthAprilWhenReadingTheField2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢+ ¢(;2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§ §( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§8 §(@2v
java.util.Optional.get()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§2 §(52¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢$ ¢(*2Ó
èorg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsStringMonthAprilWhenReadingTheField()?result@1826.27:1826.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java§+ §(12ı
èorg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsStringMonthAprilWhenReadingTheField()?result@1826.27:1826.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(!2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java° °(ß
èorg.jabref.logic.importer.fileformat.BibtexParserTest.bibTeXConstantAprilIsParsedAsStringMonthAprilWhenReadingTheField()?result@1826.27:1826.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(!"
typeOptional<BibEntry>"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@Misc{m, month = apr }")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢ ¢(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢+ ¢(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java¢$ ¢(*ä
^org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithOnlyOneEntry()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java®	 ®(/"
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseDuplicateKeywordsWithOnlyOneEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*&parseDuplicateKeywordsWithOnlyOneEntry2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©+ ©(;2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø(2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java± ±( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ% Æ(-2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©$ ©(*2⁄
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithOnlyOneEntry()?expectedEntry@1838.17:1838.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±! ±(.2”
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithOnlyOneEntry()?result@1833.27:1833.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java±1 ±(72⁄
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithOnlyOneEntry()?result@1833.27:1833.33DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©(!2·
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithOnlyOneEntry()?expectedEntry@1838.17:1838.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java® ®(Ï
uorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithOnlyOneEntry()?result@1833.27:1833.33VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©(!"
typeOptional<BibEntry>"
isFinalfalse"É
declarationStringÌ<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">result</mark> = parser.parseSingleEntry("@Article{<mark class="modifier">,</mark>\n" + "Keywords={asdf,asdf,asdf}<mark class="modifier">,</mark>\n" + "}\n" + "")*result2p
java.util.OptionalTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java© ©(2≤
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©+ ©(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java©$ ©(*Œ
|org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithOnlyOneEntry()?expectedEntry@1838.17:1838.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ("
typeBibEntry"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntry</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.KEYWORDS, "asdf,asdf,asdf")*expectedEntry2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ Æ(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaØ Ø(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaÆ% Æ(-æ!
\org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ	 µ(-"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseDuplicateKeywordsWithTwoEntries</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$parseDuplicateKeywordsWithTwoEntries2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏( 2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆% ∆(*2u
java.util.List.of(E, E)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«\ «(f2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«N «(Y2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂* ∂(22Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫+ ∫(32ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆/ ∆(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆($2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?entries@1853.15:1853.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆< ∆(C2›
org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?expectedEntryFirst@1846.17:1846.35CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java« «(/2ﬂ
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?expectedEntrySecond@1850.17:1850.36CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«1 «(D2—
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?result@1862.21:1862.27CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java«G «(M2‰
org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?expectedEntryFirst@1846.17:1846.35DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(#2Ê
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?expectedEntrySecond@1850.17:1850.36DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫($2Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?entries@1853.15:1853.22DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(2ÿ
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?result@1862.21:1862.27DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaµ µ(é	
org.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?expectedEntryFirst@1846.17:1846.35VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(#"
typeBibEntry"
isFinalfalse"‡
declarationString <mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntryFirst</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.KEYWORDS, "bbb").withCitationKey("Test2017")*expectedEntryFirst2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂ ∂(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∏ ∏( 2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∑ ∑(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∂* ∂(2ﬂ
Äorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?expectedEntrySecond@1850.17:1850.36VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫($"
typeBibEntry"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntrySecond</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.KEYWORDS, "asdf,asdf,asdf")*expectedEntrySecond2}
org.jabref.model.entry.BibEntryTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫ ∫(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaª ª(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∫+ ∫(3Ÿ
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?entries@1853.15:1853.22VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω("
typeString"
isFinalfalse"Â
declarationStringœ<mark class="modifier"> </mark>String <mark class="class-field">entries</mark> = """
    @Article{Test2017,
      keywords = {bbb}<mark class="modifier">,</mark>
    }
    
    @Article{<mark class="modifier">,</mark>
      keywords = {asdf,asdf,asdf}<mark class="modifier">,</mark>
    }<mark class="modifier">,</mark>
    """*entries2n
java.lang.StringTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaΩ Ω(€	
sorg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?result@1862.21:1862.27VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆("
typeParserResult"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = parser.parse(new StringReader(entries))*result2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆(2•
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆% ∆(*2ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆/ ∆(;2¶
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆ ∆($2“
torg.jabref.logic.importer.fileformat.BibtexParserTest.parseDuplicateKeywordsWithTwoEntries()?entries@1853.15:1853.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.java∆< ∆(CÆ
Yorg.jabref.logic.importer.fileformat.BibtexParserTest?importFormatPreferences@78.36:78.59VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaN$ N(;"
isFinalfalse"
typeImportFormatPreferences"ã
declarationStringv<mark class="modifier">private </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2s
ImportFormatPreferencesTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaN N(#ˇ
Horg.jabref.logic.importer.fileformat.BibtexParserTest?parser@79.25:79.31VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaO O("
isFinalfalse"
typeBibtexParser"o
declarationStringZ<mark class="modifier">private </mark>BibtexParser <mark class="class-field">parser</mark>"
isStaticfalse"
accessprivate*parser2ç
1org.jabref.logic.importer.fileformat.BibtexParserTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\BibtexParserTest.javaO O(