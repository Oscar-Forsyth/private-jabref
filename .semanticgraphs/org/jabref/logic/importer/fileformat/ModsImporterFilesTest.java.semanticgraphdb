
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.javaû
:org.jabref.logic.importer.fileformat.ModsImporterFilesTestCLASSW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"m
declarationStringX<mark class="modifier"> </mark><mark class="modifier">class </mark>ModsImporterFilesTest"
accesspackage_private*ModsImporterFilesTest2Æ
Forg.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()DECLARATIONW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java" (+2™
Borg.jabref.logic.importer.fileformat.ModsImporterFilesTest.setUp()DECLARATIONW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java	 (2«
_org.jabref.logic.importer.fileformat.ModsImporterFilesTest.isRecognizedFormat(java.lang.String)DECLARATIONW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java"	 "(2¬
Zorg.jabref.logic.importer.fileformat.ModsImporterFilesTest.importEntries(java.lang.String)DECLARATIONW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java(	 ((2∫
Rorg.jabref.logic.importer.fileformat.ModsImporterFilesTest?FILE_ENDING@18.32:18.43DECLARATIONW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java  (+2∆
^org.jabref.logic.importer.fileformat.ModsImporterFilesTest?importFormatPreferences@19.36:19.59DECLARATIONW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java$ (;˜
Forg.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()METHODW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java" (+"
isFinalfalse"Ï
declarationString÷<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">fileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*	fileNames2é
-java.lang.String.startsWith(java.lang.String)CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java2 (<2å
+java.lang.String.endsWith(java.lang.String)CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.javaM (U2~
java.util.Collection.stream()CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java9 (?2’
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java" (.2∏
Worg.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()?name@22.37:22.41CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java- (12∏
Worg.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()?name@22.37:22.41CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.javaH (L2≥
Rorg.jabref.logic.importer.fileformat.ModsImporterFilesTest?FILE_ENDING@18.32:18.43CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.javaV (a2º
[org.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()?fileName@22.26:22.34CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java/ (72√
[org.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()?fileName@22.26:22.34DECLARATIONW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java ("2ø
Worg.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()?name@22.37:22.41DECLARATIONW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java% ()2
java.util.stream.StreamRETURN_TYPEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java (2Å
java.lang.StringRETURN_TYPE_ARGUMENTW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java ( Ò
[org.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()?fileName@22.26:22.34VARIABLEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java (""
typePredicate<String>"
isFinalfalse"∞
declarationStringö<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> name.startsWith("MODS") && name.endsWith(FILE_ENDING)*fileName2}
java.util.function.PredicateTYPEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java (2z
java.lang.StringTYPE_ARGUMENTW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java (2é
-java.lang.String.startsWith(java.lang.String)CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java2 (<2å
+java.lang.String.endsWith(java.lang.String)CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.javaM (U2∏
Worg.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()?name@22.37:22.41CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java- (12∏
Worg.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()?name@22.37:22.41CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.javaH (L2≥
Rorg.jabref.logic.importer.fileformat.ModsImporterFilesTest?FILE_ENDING@18.32:18.43CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.javaV (aÄ
Worg.jabref.logic.importer.fileformat.ModsImporterFilesTest.fileNames()?name@22.37:22.41VARIABLEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java% ()"
type"
isFinalfalse"
declarationString name*name2TYPEØ
Borg.jabref.logic.importer.fileformat.ModsImporterFilesTest.setUp()METHODW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java	 ("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2ø
^org.jabref.logic.importer.fileformat.ModsImporterFilesTest?importFormatPreferences@19.36:19.59CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java (2ø
^org.jabref.logic.importer.fileformat.ModsImporterFilesTest?importFormatPreferences@19.36:19.59CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java ($2l
voidRETURN_TYPEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java (ú
_org.jabref.logic.importer.fileformat.ModsImporterFilesTest.isRecognizedFormat(java.lang.String)METHODW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java"	 "("
isFinalfalse"™
declarationStringî <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormat</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*isRecognizedFormat2Ê
Ñorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java# #(12ø
^org.jabref.logic.importer.fileformat.ModsImporterFilesTest?importFormatPreferences@19.36:19.59CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java#C #(Z2…
horg.jabref.logic.importer.fileformat.ModsImporterFilesTest.isRecognizedFormat(java.lang.String)!fileNameCALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java#] #(e2Œ
horg.jabref.logic.importer.fileformat.ModsImporterFilesTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETERW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java"# "(+2l
voidRETURN_TYPEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java" "(ì
horg.jabref.logic.importer.fileformat.ModsImporterFilesTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETERW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java"# "(+"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2q
java.lang.StringTYPEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java" "("ƒ
Zorg.jabref.logic.importer.fileformat.ModsImporterFilesTest.importEntries(java.lang.String)METHODW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java(	 (("
isFinalfalse"£
declarationStringç <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">importEntries</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*importEntries2Û
ëorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java) )(,2ø
^org.jabref.logic.importer.fileformat.ModsImporterFilesTest?importFormatPreferences@19.36:19.59CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java)> )(U2ƒ
corg.jabref.logic.importer.fileformat.ModsImporterFilesTest.importEntries(java.lang.String)!fileNameCALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java)X )(`2≥
Rorg.jabref.logic.importer.fileformat.ModsImporterFilesTest?FILE_ENDING@18.32:18.43CALLW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java)b )(m2…
corg.jabref.logic.importer.fileformat.ModsImporterFilesTest.importEntries(java.lang.String)!fileName	PARAMETERW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java( ((&2l
voidRETURN_TYPEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java( ((é
corg.jabref.logic.importer.fileformat.ModsImporterFilesTest.importEntries(java.lang.String)!fileName	PARAMETERW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java( ((&"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2q
java.lang.StringTYPEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java( ((ø
Rorg.jabref.logic.importer.fileformat.ModsImporterFilesTest?FILE_ENDING@18.32:18.43VALUEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java  (+"
isFinaltrue"
typeString"¬
declarationString¨<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FILE_ENDING</mark> = ".xml";"
isStatictrue"
accessprivate*FILE_ENDING2q
java.lang.StringTYPEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java (Ω
^org.jabref.logic.importer.fileformat.ModsImporterFilesTest?importFormatPreferences@19.36:19.59VARIABLEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java$ (;"
isFinalfalse"
typeImportFormatPreferences"ã
declarationStringv<mark class="modifier">private </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2x
ImportFormatPreferencesTYPEW
Msrc\test\java\org\jabref\logic\importer\fileformat\ModsImporterFilesTest.java (#