
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java˘	
Aorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTestCLASS^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java	 	()"/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"z
declarationStringe<mark class="modifier">public </mark><mark class="modifier">class </mark>BiblioscapeImporterFilesTest"
accesspublic*BiblioscapeImporterFilesTest2º
Morg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java" (+2’
forg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.isRecognizedFormat(java.lang.String)DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java ("2–
aorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.importEntries(java.lang.String)DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (2»
Yorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest?FILE_ENDING@11.32:11.43DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java  (+Í
Morg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()METHOD^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java" (+"
isFinalfalse"Ï
declarationString÷<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">fileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*	fileNames2ï
-java.lang.String.startsWith(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java2 (<2ì
+java.lang.String.endsWith(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java ( 2ô
1java.lang.String.contains(java.lang.CharSequence)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java7 (?2Ö
java.util.Collection.stream()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java9 (?2‹
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java" (.2∆
^org.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?name@14.37:14.41CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java- (12∆
^org.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?name@14.37:14.41CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (2¡
Yorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest?FILE_ENDING@11.32:11.43CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java! (,2∆
^org.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?name@14.37:14.41CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java2 (62 
borg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?fileName@14.26:14.34CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java/ (72—
borg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?fileName@14.26:14.34DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java ("2Õ
^org.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?name@14.37:14.41DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java% ()2Ü
java.util.stream.StreamRETURN_TYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (2à
java.lang.StringRETURN_TYPE_ARGUMENT^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java ( ‹
borg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?fileName@14.26:14.34VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (""
typePredicate<String>"
isFinalfalse"‡
declarationString <mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> name.startsWith("BiblioscapeImporterTest") && name.endsWith(FILE_ENDING) && !name.contains("Corrupt")*fileName2Ñ
java.util.function.PredicateTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (2Å
java.lang.StringTYPE_ARGUMENT^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (2ï
-java.lang.String.startsWith(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java2 (<2ì
+java.lang.String.endsWith(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java ( 2ô
1java.lang.String.contains(java.lang.CharSequence)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java7 (?2∆
^org.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?name@14.37:14.41CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java- (12∆
^org.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?name@14.37:14.41CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (2¡
Yorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest?FILE_ENDING@11.32:11.43CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java! (,2∆
^org.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?name@14.37:14.41CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java2 (6é
^org.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.fileNames()?name@14.37:14.41VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java% ()"
type"
isFinalfalse"
declarationString name*name2TYPE»
forg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.isRecognizedFormat(java.lang.String)METHOD^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (""
isFinalfalse"∞
declarationStringö <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormat</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormat2Ì
Ñorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (12∂
Norg.jabref.logic.importer.fileformat.BiblioscapeImporter.BiblioscapeImporter()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java6 (I2◊
oorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.isRecognizedFormat(java.lang.String)!fileNameCALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.javaM (U2‹
oorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETER^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java* (22s
voidRETURN_TYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (®
oorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETER^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java* (2"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2x
java.lang.StringTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java# ()˛
aorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.importEntries(java.lang.String)METHOD^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java ("
isFinalfalse"©
declarationStringì <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntries</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntries2˙
ëorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (,2∂
Norg.jabref.logic.importer.fileformat.BiblioscapeImporter.BiblioscapeImporter()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java1 (D2“
jorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.importEntries(java.lang.String)!fileNameCALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.javaH (P2¡
Yorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest?FILE_ENDING@11.32:11.43CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.javaR (]2◊
jorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.importEntries(java.lang.String)!fileName	PARAMETER^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java% (-2s
voidRETURN_TYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (£
jorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest.importEntries(java.lang.String)!fileName	PARAMETER^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java% (-"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2x
java.lang.StringTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java ($‘
Yorg.jabref.logic.importer.fileformat.BiblioscapeImporterFilesTest?FILE_ENDING@11.32:11.43VALUE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java  (+"
isFinaltrue"
typeString"¬
declarationString¨<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FILE_ENDING</mark> = ".txt";"
isStatictrue"
accessprivate*FILE_ENDING2x
java.lang.StringTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\BiblioscapeImporterFilesTest.java (