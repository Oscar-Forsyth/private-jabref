
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÃQ
1org.jabref.logic.importer.fileformat.BibtexParserCLASSN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaD D("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"û
declarationStringà<mark class="modifier">public </mark><mark class="modifier">class </mark>BibtexParser<mark class="modifier"><br>implements </mark>Parser"
accesspublic*BibtexParser2k
BibtexParserDECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaS S(2k
BibtexParserDECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaY Y(2o
singleFromStringDECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javad% d(52≤
Sorg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javam m(&2≥
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaw w(.2®
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ(2Æ
Morg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaî î(,2ª
Zorg.jabref.logic.importer.fileformat.BibtexParser.initializeParserResult(java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™ ™('2§
Corg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±( 2•
Dorg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈()2†
?org.jabref.logic.importer.fileformat.BibtexParser.checkEpilog()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙ Ù(2™
Iorg.jabref.logic.importer.fileformat.BibtexParser.parseRemainingContent()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸ ¸(&2µ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ Ä(!2ÿ
worg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java£ £(#2¶
Eorg.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ("2Æ
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬁ ﬁ(,2º
[org.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û(2®
Gorg.jabref.logic.importer.fileformat.BibtexParser.getPureTextFromFile()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(&2∑
Vorg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô ô(%2£
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §(2û
=org.jabref.logic.importer.fileformat.BibtexParser.skipSpace()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(2£
Borg.jabref.logic.importer.fileformat.BibtexParser.skipOneNewline()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »(2¶
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “("2Ø
Norg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷ ÷(*2ô
8org.jabref.logic.importer.fileformat.BibtexParser.peek()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô(2¶
Eorg.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ($2ô
8org.jabref.logic.importer.fileformat.BibtexParser.read()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ Ä(2û
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(2†
?org.jabref.logic.importer.fileformat.BibtexParser.parseString()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ ñ($2¢
Aorg.jabref.logic.importer.fileformat.BibtexParser.parsePreamble()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™ ™( 2Ø
Norg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤ ≤(2æ
]org.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java⁄ ⁄(2»
gorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜($2£
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java° °(!2õ
:org.jabref.logic.importer.fileformat.BibtexParser.fixKey()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∫ ∫(2Ω
\org.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä ä(+2∏
Worg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(2ù
<org.jabref.logic.importer.fileformat.BibtexParser.parseKey()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §(2ß
Forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java   (%2©
Horg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û((2Ø
Norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÇ Ç(42ß
Forg.jabref.logic.importer.fileformat.BibtexParser.isEscapeSymbol(char)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º("2¨
Korg.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¿ ¿(12†
?org.jabref.logic.importer.fileformat.BibtexParser.consume(char)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÿ ÿ(2¨
Korg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java· ·('2¶
Eorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô(2£
Dorg.jabref.logic.importer.fileformat.BibtexParser?LOGGER@69.32:69.38DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaE  E(&2¶
Gorg.jabref.logic.importer.fileformat.BibtexParser?LOOKAHEAD@71.33:71.42DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaG! G(*2≤
Sorg.jabref.logic.importer.fileformat.BibtexParser?fieldContentFormatter@72.40:72.61DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaH( H(=2≠
Norg.jabref.logic.importer.fileformat.BibtexParser?pureTextFromFile@73.35:73.51DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaI# I(32¥
Uorg.jabref.logic.importer.fileformat.BibtexParser?importFormatPreferences@74.42:74.65DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaJ* J(A2´
Lorg.jabref.logic.importer.fileformat.BibtexParser?pushbackReader@75.27:75.41DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaK K()2•
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaL L( 2ß
Horg.jabref.logic.importer.fileformat.BibtexParser?entryTypes@77.30:77.40DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaM M((2†
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaN N(2°
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaO O(2©
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaP P(%2´
Lorg.jabref.logic.importer.fileformat.BibtexParser?metaDataParser@81.33:81.47DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaQ! Q(/2z
 org.jabref.logic.importer.ParserEXTENDN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaD% D(+√	
BibtexParserCONSTRUCTORN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaS S("Ô
declarationStringŸ<mark class="modifier">public </mark><mark class="method">BibtexParser</mark>(ImportFormatPreferences importFormatPreferences<mark class="modifier"><mark class="modifier">,</mark></mark> FileUpdateMonitor fileMonitor)*BibtexParser2Ω
eorg.jabref.logic.importer.util.MetaDataParser.MetaDataParser(org.jabref.model.util.FileUpdateMonitor)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaV" V(02≠
Uorg.jabref.logic.importer.fileformat.BibtexParser?importFormatPreferences@74.42:74.65CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaT T($2´
Sorg.jabref.logic.importer.fileformat.BibtexParser?fieldContentFormatter@72.40:72.61CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaU U("2§
Lorg.jabref.logic.importer.fileformat.BibtexParser?metaDataParser@81.33:81.47CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaV V(2ê
1org.jabref.logic.importer.fileformat.BibtexParserRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaS S(˜
importFormatPreferences	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaS0 S(G"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2o
ImportFormatPreferencesTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaS S(/◊
fileMonitor	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaS[ S(f"
typeFileUpdateMonitor"
isFinalfalse"2
declarationStringFileUpdateMonitor fileMonitor*fileMonitor2
'org.jabref.model.util.FileUpdateMonitorTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaSI S(Z¬
BibtexParserCONSTRUCTORN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaY Y("ì
declarationString~<mark class="modifier">public </mark><mark class="method">BibtexParser</mark>(ImportFormatPreferences importFormatPreferences)*BibtexParser2ù
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaZ* Z(@2ê
1org.jabref.logic.importer.fileformat.BibtexParserRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaY Y(˜
importFormatPreferences	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaY0 Y(G"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2o
ImportFormatPreferencesTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaY Y(/¿
singleFromStringMETHODN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javad% d(5"
isFinalfalse"˘
declarationString„<mark class="modifier">public </mark><mark class="modifier">static </mark>Optional&lt;BibEntry&gt; <mark class="method">singleFromString</mark>(String bibtexString<mark class="modifier"><mark class="modifier">,</mark></mark> ImportFormatPreferences importFormatPreferences)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOptional<BibEntry>*singleFromString2ó
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaeQ e(]2v
java.util.Collection.isEmpty()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaf) f(02r
java.util.Optional.empty()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javag g(!2p
java.util.Optional.of(T)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javai i(2q
java.util.Iterator.next()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javai. i(22w
java.util.Collection.iterator()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javai# i(+2q
java.util.OptionalRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javad d(2á
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javad d(#≠
bibtexString	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javad= d(I"
typeString"
isFinalfalse"(
declarationStringString bibtexString*bibtexString2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javad6 d(<˜
importFormatPreferences	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javadc d(z"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2o
ImportFormatPreferencesTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javadK d(bö
Sorg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)METHODN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javam m(&"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">parseEntries</mark>(InputStream inputStream)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*parseEntries2ô
Aorg.jabref.logic.importer.Importer.getReader(java.io.InputStream)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javap p('2ä
2org.jabref.model.database.BibDatabase.getEntries()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaq/ q(92å
4org.jabref.logic.importer.ParserResult.getDatabase()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaq! q(,2ü
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaq q(2§
Lorg.jabref.logic.importer.ParseException.ParseException(java.lang.Throwable)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javas s($2¿
horg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)?reader@110.15:110.21CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javap p(2∑
_org.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)!inputStreamCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javap( p(32¿
horg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)?reader@110.15:110.21CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaq q(2ª
corg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)?e@114.29:114.30CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javas% s(&2û
Borg.jabref.logic.importer.Parser.parseEntries(java.io.InputStream)OVERRIDEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javam m(&2º
_org.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)!inputStream	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javam3 m(>2«
horg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)?reader@110.15:110.21DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javan n(2¬
corg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)?e@114.29:114.30DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javar r(2m
java.util.ListRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javam m(2á
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javam m(∫
horg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)?reader@110.15:110.21VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javan n("
typeReader"
isFinalfalse"b
declarationStringM<mark class="modifier"> </mark>Reader <mark class="class-field">reader</mark>*reader2f
java.io.ReaderTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javan n(ã
_org.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)!inputStream	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javam3 m(>"
typeInputStream"
isFinalfalse",
declarationStringInputStream inputStream*inputStream2k
java.io.InputStreamTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javam' m(2˙
corg.jabref.logic.importer.fileformat.BibtexParser.parseEntries(java.io.InputStream)?e@114.29:114.30VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javar r("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2k
java.io.IOExceptionTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javar r(ö
Torg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)METHODN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaw w(."
isFinalfalse"Á
declarationString—<mark class="modifier">public </mark>Optional&lt;BibEntry&gt; <mark class="method">parseSingleEntry</mark>(String bibtexString)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<BibEntry>*parseSingleEntry2{
#java.util.stream.Stream.findFirst()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javax3 x(<2u
java.util.Collection.stream()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javax* x(02ó
?org.jabref.logic.importer.Parser.parseEntries(java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javax x(2π
aorg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)!bibtexStringCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javax x((2æ
aorg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)!bibtexString	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaw6 w(B2q
java.util.OptionalRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaw w(2á
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaw w(Ç
aorg.jabref.logic.importer.fileformat.BibtexParser.parseSingleEntry(java.lang.String)!bibtexString	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaw6 w(B"
typeString"
isFinalfalse"(
declarationStringString bibtexString*bibtexString2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaw/ w(5á
Gorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ("
isFinalfalse"√
declarationString≠<mark class="modifier">public </mark>ParserResult <mark class="method">parse</mark>(Reader in)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*parse2}
#java.util.Objects.requireNonNull(T)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÖ Ö(2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà" à(;2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.initializeParserResult(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(2ù
Corg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç ç(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaè è(2û
Dorg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë ë(2î
:java.io.PushbackReader.PushbackReader(java.io.Reader, int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÜ Ü(+2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)!inCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÖ Ö(!2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser?pushbackReader@75.27:75.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÜ Ü(2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)!inCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÜ, Ü(.2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)?newLineSeparator@136.15:136.31CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(/2°
Gorg.jabref.logic.importer.fileformat.BibtexParser?LOOKAHEAD@71.33:71.42CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÜ= Ü(F2©
Jorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)!in	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ% Ñ('2«
forg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)?newLineSeparator@136.15:136.31DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à(2á
&org.jabref.logic.importer.ParserResultRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ(õ
forg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)?newLineSeparator@136.15:136.31VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à("
typeString"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>String <mark class="class-field">newLineSeparator</mark> = determineNewLineSeparator()*newLineSeparator2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à(2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà" à(;Ÿ
Jorg.jabref.logic.importer.fileformat.BibtexParser.parse(java.io.Reader)!in	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ% Ñ('"
typeReader"
isFinalfalse"
declarationString	Reader in*in2h
java.io.ReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ($Ç*
Morg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaî î(,"
isFinalfalse"…
declarationString≥<mark class="modifier">private </mark>String <mark class="method">determineNewLineSeparator</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*determineNewLineSeparator2w
java.io.PushbackReader.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaö) ö(-2{
!java.io.StringWriter.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(2
%java.io.PushbackReader.unread(char[])CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(2x
java.lang.String.toCharArray()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java•6 •(A2y
java.io.StringWriter.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java•+ •(32Ä
&java.io.StringWriter.StringWriter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ( ñ(42¡
gorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?currentChar@152.12:152.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaö ö(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser?pushbackReader@75.27:75.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaö ö((2¬
horg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?stringWriter@150.21:150.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?currentChar@152.12:152.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ' õ(22∑
]org.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?i@151.12:151.13CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú ú(2∑
]org.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?i@151.12:151.13CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù ù(2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?currentChar@152.12:152.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù2 ù(=2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?currentChar@152.12:152.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaùK ù(V2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?currentChar@152.12:152.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaû û(2∆
lorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?newLineSeparator@149.15:149.31CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaü ü(2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?currentChar@152.12:152.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java† †(2∆
lorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?newLineSeparator@149.15:149.31CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java° °(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser?pushbackReader@75.27:75.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(2¬
horg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?stringWriter@150.21:150.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(*2∆
lorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?newLineSeparator@149.15:149.31CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaß ß(2°
Gorg.jabref.logic.importer.fileformat.BibtexParser?LOOKAHEAD@71.33:71.42CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañB ñ(K2°
Gorg.jabref.logic.importer.fileformat.BibtexParser?LOOKAHEAD@71.33:71.42CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù# ù(,2Õ
lorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?newLineSeparator@149.15:149.31DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï ï(2…
horg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?stringWriter@150.21:150.33DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ ñ(!2æ
]org.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?i@151.12:151.13DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaó ó(2»
gorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?currentChar@152.12:152.23DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaò ò(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaî î(Â
lorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?newLineSeparator@149.15:149.31VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï ï("
typeString"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>String <mark class="class-field">newLineSeparator</mark> = OS.NEWLINE*newLineSeparator2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï ï(∞
horg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?stringWriter@150.21:150.33VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ ñ(!"
typeStringWriter"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>StringWriter <mark class="class-field">stringWriter</mark> = new StringWriter(BibtexParser.LOOKAHEAD)*stringWriter2n
java.io.StringWriterTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ ñ(2Ä
&java.io.StringWriter.StringWriter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ( ñ(42°
Gorg.jabref.logic.importer.fileformat.BibtexParser?LOOKAHEAD@71.33:71.42CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañB ñ(K∫
]org.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?i@151.12:151.13VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaó ó("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaó ó(’
gorg.jabref.logic.importer.fileformat.BibtexParser.determineNewLineSeparator()?currentChar@152.12:152.23VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaò ò("
typeint"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">currentChar</mark>*currentChar2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaò ò(ı
Zorg.jabref.logic.importer.fileformat.BibtexParser.initializeParserResult(java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™ ™('"
isFinalfalse"™
declarationStringî<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">initializeParserResult</mark>(String newLineSeparator)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*initializeParserResult2•
Korg.jabref.model.database.BibDatabase.setNewLineSeparator(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨($2ç
3org.jabref.model.database.BibDatabase.BibDatabase()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java´ ´("2u
java.util.HashSet.HashSet()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≠ ≠("2ç
≤org.jabref.logic.importer.ParserResult.ParserResult(org.jabref.model.database.BibDatabase, org.jabref.model.metadata.MetaData, java.util.Set<org.jabref.model.entry.BibEntryType>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ Æ('2á
-org.jabref.model.metadata.MetaData.MetaData()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ6 Æ(>2†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java´ ´(2†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨(2≈
korg.jabref.logic.importer.fileformat.BibtexParser.initializeParserResult(java.lang.String)!newLineSeparatorCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨% ¨(52¢
Horg.jabref.logic.importer.fileformat.BibtexParser?entryTypes@77.30:77.40CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≠ ≠(2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ Æ(2†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ( Æ(02¢
Horg.jabref.logic.importer.fileformat.BibtexParser?entryTypes@77.30:77.40CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆB Æ(L2 
korg.jabref.logic.importer.fileformat.BibtexParser.initializeParserResult(java.lang.String)!newLineSeparator	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™/ ™(?2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™ ™(ò
korg.jabref.logic.importer.fileformat.BibtexParser.initializeParserResult(java.lang.String)!newLineSeparator	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™/ ™(?"
typeString"
isFinalfalse",
declarationStringString newLineSeparator*newLineSeparator2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™( ™(.•
Corg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±( "
isFinalfalse"€
declarationString≈<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseDatabaseID</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseDatabaseID2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥ ≥(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥( 2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∑ ∑(2q
java.lang.String.trim()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏0 ∏(42ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏ ∏(-2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∫ ∫( 2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª("2•
Korg.jabref.model.database.BibDatabase.setSharedDatabaseID(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(02q
java.lang.String.trim()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaºB º(F2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº1 º(?2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaø ø(2õ
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤ ≤(2≠
Sorg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()?c@180.17:180.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(2±
Worg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()?label@184.23:184.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∫ ∫(2†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(2≠
Sorg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()?c@180.17:180.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaæ æ(2≠
Sorg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()?c@180.17:180.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaø ø(2¥
Sorg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()?c@180.17:180.18DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥(2∏
Worg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()?label@184.23:184.28DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏ ∏(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±(∂
Sorg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()?c@180.17:180.18VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥("
typechar"
isFinalfalse"k
declarationStringV<mark class="modifier"> </mark>char <mark class="class-field">c</mark> = (char) read()*c2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥( Ÿ
Worg.jabref.logic.importer.fileformat.BibtexParser.parseDatabaseID()?label@184.23:184.28VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏ ∏("
typeString"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>String <mark class="class-field">label</mark> = parseTextToken().trim()*label2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏ ∏(2q
java.lang.String.trim()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏0 ∏(42ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏ ∏(-À7
Dorg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈()"
isFinalfalse"∆
declarationString∞<mark class="modifier">private </mark>ParserResult <mark class="method">parseFileContent</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeParserResult*parseFileContent2•
Korg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(/2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŒ Œ(2q
java.lang.String.trim()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java—I —(M2à
.java.lang.String.toLowerCase(java.util.Locale)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java—0 —(;2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —(-2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java” ”(!2ù
Corg.jabref.model.database.BibDatabase.setPreamble(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‘ ‘($2õ
Aorg.jabref.logic.importer.fileformat.BibtexParser.parsePreamble()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‘% ‘(22ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipOneNewline()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷ ÷(2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÿ ÿ()2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ  Ÿ(&2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java⁄ ⁄(!2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€! €('2—
worg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹ ‹("2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ( 2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚ ‚(2¢
Horg.jabref.logic.importer.ParserResult.addException(java.lang.Exception)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÍ Í(%2£
Iorg.jabref.logic.importer.fileformat.BibtexParser.parseRemainingContent()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÌ Ì(2ô
?org.jabref.logic.importer.fileformat.BibtexParser.checkEpilog()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô(2u
java.util.HashMap.HashMap()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∆' ∆(02õ
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »(2≤
Xorg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?found@201.20:201.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java   (2∂
\org.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?entryType@209.19:209.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java”" ”(+2†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‘ ‘(2∂
\org.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?entryType@209.19:209.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ' Ÿ(02∂
\org.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?entryType@209.19:209.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€( €(12±
Worg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?meta@198.28:198.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹# ‹('2∂
\org.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?entryType@209.19:209.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ! ﬂ(*2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÊ Ê(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser?metaDataParser@81.33:81.47CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÊ% Ê(32±
Worg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?meta@198.28:198.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÁ Á(2Ø
Uorg.jabref.logic.importer.fileformat.BibtexParser?importFormatPreferences@74.42:74.65CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaË Ë(+2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÍ Í(2∂
\org.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?exception@233.32:233.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÍ& Í(/2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÒ Ò(2∏
Worg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?meta@198.28:198.32DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∆ ∆( 2π
Xorg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?found@201.20:201.25DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(2Ω
\org.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?entryType@209.19:209.28DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —(2Ω
\org.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?exception@233.32:233.41DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÈ  È()2á
&org.jabref.logic.importer.ParserResultRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈(µ
Worg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?meta@198.28:198.32VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∆ ∆( "
typeMap<String, String>"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>Map<String, String> <mark class="class-field">meta</mark> = new HashMap<>()*meta2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∆ ∆(2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∆ ∆(2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∆ ∆(2u
java.util.HashMap.HashMap()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∆' ∆(0ä
Xorg.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?found@201.20:201.25VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …("
typeboolean"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">found</mark> = consumeUncritically('@')*found2a
booleanTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(2•
Korg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(/å
\org.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?entryType@209.19:209.28VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —("
typeString"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>String <mark class="class-field">entryType</mark> = parseTextToken().toLowerCase(Locale.ROOT).trim()*	entryType2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —(2q
java.lang.String.trim()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java—I —(M2à
.java.lang.String.toLowerCase(java.util.Locale)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java—0 —(;2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —(-£
\org.jabref.logic.importer.fileformat.BibtexParser.parseFileContent()?exception@233.32:233.41VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÈ  È()"
typeParseException"
isFinalfalse"-
declarationStringParseException exception*	exception2Ç
(org.jabref.logic.importer.ParseExceptionTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÈ È(Ò
?org.jabref.logic.importer.fileformat.BibtexParser.checkEpilog()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙ Ù("
isFinalfalse"á
declarationStringr<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">checkEpilog</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*checkEpilog2é
4org.jabref.logic.importer.ParserResult.hasWarnings()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜(%2x
java.util.regex.Matcher.find()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜i ˜(m2ë
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜K ˜(R2ã
1java.util.regex.Pattern.compile(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜3 ˜(:2ã
1org.jabref.model.database.BibDatabase.getEpilog()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜\ ˜(e2ù
Corg.jabref.logic.importer.ParserResult.addWarning(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(#2ã
1org.jabref.model.database.BibDatabase.getEpilog()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯b ¯(k2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜(2†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜S ˜([2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(2†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯Y ¯(a2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙ Ù(
Iorg.jabref.logic.importer.fileformat.BibtexParser.parseRemainingContent()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸ ¸(&"
isFinalfalse"ë
declarationString|<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseRemainingContent</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseRemainingContent2õ
Aorg.jabref.model.database.BibDatabase.setEpilog(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˝ ˝(2q
java.lang.String.trim()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˝7 ˝(;2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˝ ˝(42†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˝ ˝(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸ ¸(æ=
Torg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ Ä(!"
isFinalfalse"ò
declarationStringÇ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseAndAddEntry</mark>(String type)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseAndAddEntry2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ4 Ñ(M2á
-java.lang.String.startsWith(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà/ à(92y
java.lang.String.substring(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaâP â(Y2á
-java.lang.String.startsWith(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä6 ä(@2y
java.lang.String.substring(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaãP ã(Y2®
Norg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é('2¢
Horg.jabref.model.entry.BibEntry.setCommentsBeforeEntry(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê((2~
$java.lang.String.substring(int, int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë3 ë(<2{
!java.lang.String.lastIndexOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë_ ë(j2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaïJ ï(c2¢
Horg.jabref.model.entry.BibEntry.setParsedSerialization(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ ñ((2¨
Rorg.jabref.model.database.BibDatabase.insertEntry(org.jabref.model.entry.BibEntry)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaò ò( 2ù
Corg.jabref.logic.importer.ParserResult.addWarning(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaû û(#2®
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaû1 û(52z
 java.lang.Throwable.getMessage()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaûh û(r2®
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaü4 ü(82‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à(.2‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaâ â(.2‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaâ1 â(O2‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä ä(52‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(.2‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã1 ã(O2≥
Yorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)!typeCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé( é(,2¬
horg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?entry@270.21:270.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê(2‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë ë(22‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë@ ë(^2‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï) ï(G2¬
horg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?entry@270.21:270.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ ñ(2–
vorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?parsedSerialization@277.19:277.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ) ñ(<2†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaò ò(2¬
horg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?entry@270.21:270.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaò! ò(&2û
Dorg.jabref.logic.importer.fileformat.BibtexParser?LOGGER@69.32:69.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù ù(2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?ex@281.29:281.31CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù1 ù(32§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaû û(2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?ex@281.29:281.31CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaûe û(g2∏
Yorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)!type	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ) Ä(-2„
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ(12…
horg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?entry@270.21:270.26DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é(2◊
vorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?parsedSerialization@277.19:277.38DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï ï(&2∆
eorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?ex@281.29:281.31DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô ô(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ Ä(‘
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ(1"
typeString"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>String <mark class="class-field">commentsAndEntryTypeDefinition</mark> = dumpTextReadSoFarToString()*commentsAndEntryTypeDefinition2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ(2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ4 Ñ(M≈
horg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?entry@270.21:270.26VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é("
typeBibEntry"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parseEntry(type)*entry2y
org.jabref.model.entry.BibEntryTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é(2®
Norg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é('2≥
Yorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)!typeCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé( é(,≤
vorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?parsedSerialization@277.19:277.38VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï ï(&"
typeString"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>String <mark class="class-field">parsedSerialization</mark> = commentsAndEntryTypeDefinition + dumpTextReadSoFarToString()*parsedSerialization2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï ï(2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaïJ ï(c2‹
Åorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?commentsAndEntryTypeDefinition@260.19:260.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï) ï(GÓ
Yorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)!type	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ) Ä(-"
typeString"
isFinalfalse" 
declarationStringString type*type2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ" Ä((Ç
eorg.jabref.logic.importer.fileformat.BibtexParser.parseAndAddEntry(java.lang.String)?ex@281.29:281.31VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô ô("
typeIOException"
isFinalfalse"#
declarationStringIOException ex*ex2m
java.io.IOExceptionTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô ô(ﬁU
worg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java£ £(#"
isFinalfalse"È
declarationString”<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseJabRefComment</mark>(Map&lt;String<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; meta)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseJabRefComment2®
Norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¶ ¶(/2ô
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java±+ ±(52|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java±  ±((2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤Z ≤(`2~
$java.lang.String.substring(int, int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤ ≤(2v
java.lang.Math.min(int, int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤& ≤()2s
java.lang.String.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤2 ≤(82s
java.lang.String.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤O ≤(U2á
-java.lang.String.startsWith(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥ ≥("2y
java.lang.String.substring(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥& ¥(/2s
java.lang.String.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥C ¥(I2w
java.lang.String.indexOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(&2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaπ π(2~
$java.lang.String.substring(int, int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaπ" π(+2y
java.lang.String.substring(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaπ: π(C2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(-2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¿ ¿(!2~
$java.lang.String.substring(int, int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaø ø($2v
java.lang.Math.min(int, int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaø- ø(02s
java.lang.String.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaø9 ø(?2s
java.lang.String.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaø[ ø(a2Æ
Torg.jabref.logic.importer.util.MetaDataParser.parseCustomEntryType(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√8 √(L2x
java.util.Optional.isPresent()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaƒ ƒ(2n
java.util.Set.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈(2r
java.util.Optional.get()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈# ≈(&2ù
Corg.jabref.logic.importer.ParserResult.addWarning(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java« «('2®
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java«5 «(92ß
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ À(%2Á
åorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?buffer@292.22:292.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¶ ¶(2û
Dorg.jabref.logic.importer.fileformat.BibtexParser?LOGGER@69.32:69.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java´ ´(2Á
åorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?buffer@292.22:292.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±(2Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤ ≤(2Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤* ≤(12Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥ ≥(2Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥(%2Â
äorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?rest@308.23:308.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(2‰
âorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?pos@310.20:310.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏ ∏(2÷
|org.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)!metaCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaπ π(2Â
äorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?rest@308.23:308.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaπ π(!2‰
âorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?pos@310.20:310.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaπ/ π(22Â
äorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?rest@308.23:308.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaπ5 π(92‰
âorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?pos@310.20:310.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaπD π(G2Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaø ø(2Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaø1 ø(82Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√M √(T2‰
âorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?typ@323.35:323.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaƒ ƒ(2¢
Horg.jabref.logic.importer.fileformat.BibtexParser?entryTypes@77.30:77.40CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈(2‰
âorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?typ@323.35:323.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈("2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java« «(2Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java«o «(v2€
|org.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)!meta	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java£8 £(<2Ó
åorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?buffer@292.22:292.28DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §(2Ô
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±(2Ï
äorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?rest@308.23:308.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥(2Î
âorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?pos@310.20:310.23DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(2Î
âorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?typ@323.35:323.38DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√# √(&2È
áorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?e@295.29:295.30DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaß ß(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java£ £(˙
åorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?buffer@292.22:292.28VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §("
typeStringBuilder"
isFinalfalse"i
declarationStringT<mark class="modifier"> </mark>StringBuilder <mark class="class-field">buffer</mark>*buffer2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §(ø
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±("
typeString"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>String <mark class="class-field">comment</mark> = buffer.toString().replaceAll("[\\x0d\\x0a]"<mark class="modifier">,</mark> "")*comment2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±(2ô
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java±+ ±(52|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java±  ±((2Á
åorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?buffer@292.22:292.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±(Ï
äorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?rest@308.23:308.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥("
typeString"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>String <mark class="class-field">rest</mark> = comment.substring(MetaData.META_FLAG.length())*rest2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥(2y
java.lang.String.substring(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥& ¥(/2s
java.lang.String.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥C ¥(I2Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥(%›
âorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?pos@310.20:310.23VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂("
typeint"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">pos</mark> = rest.indexOf(':')*pos2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(2w
java.lang.String.indexOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(&2Â
äorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?rest@308.23:308.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(‘
âorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?typ@323.35:323.38VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√# √(&"
typeOptional<BibEntryType>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<BibEntryType> <mark class="class-field">typ</mark> = MetaDataParser.parseCustomEntryType(comment)*typ2l
java.util.OptionalTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√ √(2Ü
#org.jabref.model.entry.BibEntryTypeTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√ √(!2Æ
Torg.jabref.logic.importer.util.MetaDataParser.parseCustomEntryType(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√8 √(L2Ë
çorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?comment@305.15:305.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√M √(Tí
|org.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)!meta	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java£8 £(<"
typeMap<String, String>"
isFinalfalse"-
declarationStringMap<String, String> meta*meta2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java£$ £('2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java£( £(.2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java£0 £(6£
áorg.jabref.logic.importer.fileformat.BibtexParser.parseJabRefComment(java.util.Map<java.lang.String, java.lang.String>)?e@295.29:295.30VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaß ß("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2m
java.io.IOExceptionTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaß ß( 
Eorg.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ(""
isFinalfalse"›
declarationString«<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseBibtexString</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseBibtexString2ô
?org.jabref.logic.importer.fileformat.BibtexParser.parseString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java–$ –(/2¶
Lorg.jabref.model.entry.BibtexString.setParsedSerialization(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —(+2ß
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java—, —(E2Æ
Torg.jabref.model.database.BibDatabase.addString(org.jabref.model.entry.BibtexString)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java” ”(2ù
Corg.jabref.logic.importer.ParserResult.addWarning(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java’ ’(#2®
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java’1 ’(52á
-org.jabref.model.entry.BibtexString.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java’e ’(l2∫
`org.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()?bibtexString@336.21:336.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —(2†
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java” ”(2∫
`org.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()?bibtexString@336.21:336.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java” ”(+2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java’ ’(2∫
`org.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()?bibtexString@336.21:336.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java’X ’(d2¡
`org.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()?bibtexString@336.21:336.33DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java– –(!2∑
Vorg.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()?ex@340.39:340.41DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‘' ‘()2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ(è
`org.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()?bibtexString@336.21:336.33VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java– –(!"
typeBibtexString"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>BibtexString <mark class="class-field">bibtexString</mark> = parseString()*bibtexString2}
#org.jabref.model.entry.BibtexStringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java– –(2ô
?org.jabref.logic.importer.fileformat.BibtexParser.parseString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java–$ –(/§
Vorg.jabref.logic.importer.fileformat.BibtexParser.parseBibtexString()?ex@340.39:340.41VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‘' ‘()"
typeKeyCollisionException"
isFinalfalse"-
declarationStringKeyCollisionException ex*ex2â
/org.jabref.model.database.KeyCollisionExceptionTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‘ ‘(&É
Morg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬁ ﬁ(,"
isFinalfalse"y
declarationStringd<mark class="modifier">private </mark>String <mark class="method">dumpTextReadSoFarToString</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*dumpTextReadSoFarToString2°
Gorg.jabref.logic.importer.fileformat.BibtexParser.getPureTextFromFile()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ(+2Ñ
*java.lang.String.indexOf(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡(&2∞
Vorg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰ ‰(%2ã
1java.lang.String.contains(java.lang.CharSequence)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ Â("2µ
[org.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÊ Ê(2ã
1java.lang.String.contains(java.lang.CharSequence)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÁ Á("2µ
[org.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaË Ë(2º
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡(2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?indexOfAt@352.12:352.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„ „(2º
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰& ‰(,2º
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ Â(2º
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÊ Ê(2º
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÁ Á(2º
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaË Ë(2º
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÍ Í(2√
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ(2∆
eorg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?indexOfAt@352.12:352.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬁ ﬁ(ˆ
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ("
typeString"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>String <mark class="class-field">result</mark> = getPureTextFromFile()*result2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ(2°
Gorg.jabref.logic.importer.fileformat.BibtexParser.getPureTextFromFile()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ(+¨
eorg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?indexOfAt@352.12:352.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡("
typeint"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">indexOfAt</mark> = result.indexOf("@")*	indexOfAt2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡(2Ñ
*java.lang.String.indexOf(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡(&2º
borg.jabref.logic.importer.fileformat.BibtexParser.dumpTextReadSoFarToString()?result@351.15:351.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡(5
[org.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û("
isFinalfalse"∆
declarationString∞<mark class="modifier">private </mark>String <mark class="method">purge</mark>(String context<mark class="modifier"><mark class="modifier">,</mark></mark> String stringToPurge)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*purge2Ñ
*java.lang.String.indexOf(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı# ı(*2Ñ
*java.lang.String.indexOf(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ  ˆ('2v
java.lang.String.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(2v
java.lang.String.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˙ ˙(%2v
java.lang.String.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˚ ˚("2v
java.lang.String.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ( 2v
java.lang.String.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÖ! Ö('2y
java.lang.String.substring(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à( 2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı("2√
iorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!stringToPurgeCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı+ ı(82Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ(2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜(2Õ
sorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?indexOfAt@374.12:374.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜('2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(+2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˙ ˙(2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˙& ˙(22Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˚ ˚(2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˚# ˚(/2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸ ¸( 2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ Ä(2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ É(2Õ
sorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?indexOfAt@374.12:374.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ É((2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ(2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ! Ñ(-2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÖ Ö( 2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÖ( Ö(42–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÜ Ü(2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à(2–
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà! à(-2¬
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!context	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ  Û('2»
iorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!stringToPurge	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ0 Û(=2◊
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı(2‘
sorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?indexOfAt@374.12:374.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û(ï
vorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?runningIndex@373.12:373.24VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı("
typeint"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">runningIndex</mark> = context.indexOf(stringToPurge)*runningIndex2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı(2Ñ
*java.lang.String.indexOf(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı# ı(*2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı("2√
iorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!stringToPurgeCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı+ ı(8º
sorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)?indexOfAt@374.12:374.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ("
typeint"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">indexOfAt</mark> = context.indexOf("@")*	indexOfAt2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ(2Ñ
*java.lang.String.indexOf(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ  ˆ('2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!contextCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ(˛
corg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!context	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ  Û('"
typeString"
isFinalfalse"#
declarationStringString context*context2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û(ê
iorg.jabref.logic.importer.fileformat.BibtexParser.purge(java.lang.String, java.lang.String)!stringToPurge	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ0 Û(="
typeString"
isFinalfalse")
declarationStringString stringToPurge*stringToPurge2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ) Û(/Ç
Gorg.jabref.logic.importer.fileformat.BibtexParser.getPureTextFromFile()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(&"
isFinalfalse"s
declarationString^<mark class="modifier">private </mark>String <mark class="method">getPureTextFromFile</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*getPureTextFromFile2x
java.util.Collection.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç! ç((2ä
0java.lang.StringBuilder.append(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é(2u
java.util.Deque.pollFirst()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé* é(32|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë ë(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå" å(/2®
Norg.jabref.logic.importer.fileformat.BibtexParser?pureTextFromFile@73.35:73.51CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç ç( 2µ
[org.jabref.logic.importer.fileformat.BibtexParser.getPureTextFromFile()?entry@396.22:396.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é(2®
Norg.jabref.logic.importer.fileformat.BibtexParser?pureTextFromFile@73.35:73.51CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é()2µ
[org.jabref.logic.importer.fileformat.BibtexParser.getPureTextFromFile()?entry@396.22:396.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë ë(2º
[org.jabref.logic.importer.fileformat.BibtexParser.getPureTextFromFile()?entry@396.22:396.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(‡
[org.jabref.logic.importer.fileformat.BibtexParser.getPureTextFromFile()?entry@396.22:396.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å("
typeStringBuilder"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>StringBuilder <mark class="class-field">entry</mark> = new StringBuilder()*entry2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå" å(/î
Vorg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô ô(%"
isFinalfalse"~
declarationStringi<mark class="modifier">private </mark>String <mark class="method">purgeEOFCharacters</mark>(String input)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*purgeEOFCharacters2x
java.lang.String.toCharArray()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ) õ(42ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú ú(2ä
0java.lang.StringBuilder.append(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù ù($2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java° °(%2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaö* ö(72∂
\org.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)!inputCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ# õ((2»
norg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)?character@411.23:411.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú  ú()2Ã
rorg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)?remainingText@410.22:410.35CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù ù(2»
norg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)?character@411.23:411.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù% ù(.2Ã
rorg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)?remainingText@410.22:410.35CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java° °(2ª
\org.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)!input	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô- ô(22”
rorg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)?remainingText@410.22:410.35DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaö ö(#2œ
norg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)?character@411.23:411.32DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ( 2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô ô(à
rorg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)?remainingText@410.22:410.35VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaö ö(#"
typeStringBuilder"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>StringBuilder <mark class="class-field">remainingText</mark> = new StringBuilder()*remainingText2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaö ö(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaö* ö(7’
norg.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)?character@411.23:411.32VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ( "
type	Character"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>Character <mark class="class-field">character</mark>*	character2m
java.lang.CharacterTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(Û
\org.jabref.logic.importer.fileformat.BibtexParser.purgeEOFCharacters(java.lang.String)!input	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô- ô(2"
typeString"
isFinalfalse"!
declarationStringString input*input2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô& ô(,Ÿ
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §("
isFinalfalse"⁄
declarationStringƒ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">skipWhitespace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*skipWhitespace2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®(2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java© ©(2Ä
&java.lang.Character.isWhitespace(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ Æ('2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∞ ∞(2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()?character@421.12:421.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®(2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()?character@421.12:421.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java© ©((2õ
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™ ™(2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()?character@421.12:421.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ/ Æ(82¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()?character@421.12:421.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∞ ∞( 2ª
Zorg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()?character@421.12:421.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §(ƒ
Zorg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()?character@421.12:421.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •("
typeint"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark>*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(Æ
=org.jabref.logic.importer.fileformat.BibtexParser.skipSpace()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂("
isFinalfalse"’
declarationStringø<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">skipSpace</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*	skipSpace2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∫ ∫(2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª(2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¬ ¬(2Ø
Uorg.jabref.logic.importer.fileformat.BibtexParser.skipSpace()?character@439.12:439.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∫ ∫(2Ø
Uorg.jabref.logic.importer.fileformat.BibtexParser.skipSpace()?character@439.12:439.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª((2õ
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(2Ø
Uorg.jabref.logic.importer.fileformat.BibtexParser.skipSpace()?character@439.12:439.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¿ ¿( 2Ø
Uorg.jabref.logic.importer.fileformat.BibtexParser.skipSpace()?character@439.12:439.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¬ ¬( 2∂
Uorg.jabref.logic.importer.fileformat.BibtexParser.skipSpace()?character@439.12:439.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∑ ∑(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(ø
Uorg.jabref.logic.importer.fileformat.BibtexParser.skipSpace()?character@439.12:439.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∑ ∑("
typeint"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark>*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∑ ∑(ª

Borg.jabref.logic.importer.fileformat.BibtexParser.skipOneNewline()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »("
isFinalfalse"⁄
declarationStringƒ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">skipOneNewline</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*skipOneNewline2ó
=org.jabref.logic.importer.fileformat.BibtexParser.skipSpace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java   (2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ À(2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÕ Õ(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŒ Œ(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »(æ
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “(""
isFinalfalse"π
declarationString£<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">isEOFCharacter</mark>(<mark class="modifier">int</mark> character)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*isEOFCharacter2©
Oorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)!characterCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java” ”(2©
Oorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)!characterCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java”% ”(.2Æ
Oorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)!character	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“' “(02h
booleanRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “(˘
Oorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)!character	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“' “(0"
typeint"
isFinalfalse"@
declarationString+<mark class="modifier">int</mark> character*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“# “(&π%
Norg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷ ÷(*"
isFinalfalse"Ú
declarationString‹<mark class="modifier">private </mark>String <mark class="method">skipAndRecordWhitespace</mark>(<mark class="modifier">int</mark> character)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*skipAndRecordWhitespace2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ Ÿ( 2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹  ‹($2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java› ›(2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ% ﬂ(-2Ä
&java.lang.Character.isWhitespace(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚ ‚(&2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰" ‰((2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaË Ë(2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ Ï(%2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java◊* ◊(72≤
Xorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)!characterCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÿ ÿ(2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?stringBuilder@471.22:471.35CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ Ÿ(2≤
Xorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)!characterCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ( Ÿ(12ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?nextCharacter@476.16:476.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java› ›(,2õ
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬁ ﬁ(2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?stringBuilder@471.22:471.35CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ($2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?nextCharacter@476.16:476.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚. ‚(;2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?nextCharacter@476.16:476.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„ „(!2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?stringBuilder@471.22:471.35CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰ ‰(!2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?nextCharacter@476.16:476.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰0 ‰(=2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?nextCharacter@476.16:476.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaË Ë($2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?stringBuilder@471.22:471.35CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ Ï(2∑
Xorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)!character	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷/ ÷(82À
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?stringBuilder@471.22:471.35DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java◊ ◊(#2À
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?nextCharacter@476.16:476.29DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹ ‹(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷ ÷(Ä
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?stringBuilder@471.22:471.35VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java◊ ◊(#"
typeStringBuilder"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>StringBuilder <mark class="class-field">stringBuilder</mark> = new StringBuilder()*stringBuilder2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java◊ ◊(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java◊* ◊(7˙
jorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)?nextCharacter@476.16:476.29VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹ ‹("
typeint"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">nextCharacter</mark> = read()*nextCharacter2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹ ‹(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹  ‹($Ç
Xorg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)!character	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷/ ÷(8"
typeint"
isFinalfalse"@
declarationString+<mark class="modifier">int</mark> character*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷+ ÷(.È

8org.jabref.logic.importer.fileformat.BibtexParser.peek()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô("
isFinalfalse"œ
declarationStringπ<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="method">peek</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeint*peek2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java (2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÒ Ò(2™
Porg.jabref.logic.importer.fileformat.BibtexParser.peek()?character@496.12:496.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÒ Ò(2™
Porg.jabref.logic.importer.fileformat.BibtexParser.peek()?character@496.12:496.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û(2±
Porg.jabref.logic.importer.fileformat.BibtexParser.peek()?character@496.12:496.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java (2d
intRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô(ÿ
Porg.jabref.logic.importer.fileformat.BibtexParser.peek()?character@496.12:496.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java ("
typeint"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark> = read()*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java (2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java (å
Eorg.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ($"
isFinalfalse"¡
declarationString´<mark class="modifier">private </mark>char[] <mark class="method">peekTwoCharacters</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typechar[]*peekTwoCharacters2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜! ˜(%2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯! ¯(%2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘ ˘(2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˙ ˙(2∏
^org.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()?character2@504.13:504.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘ ˘(2∏
^org.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()?character1@503.13:503.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˙ ˙(2∏
^org.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()?character1@503.13:503.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸ ¸(2∏
^org.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()?character2@504.13:504.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸ ¸(&2ø
^org.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()?character1@503.13:503.23DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜(2ø
^org.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()?character2@504.13:504.23DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(2g
char[]RETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ(”
^org.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()?character1@503.13:503.23VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜("
typechar"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>char <mark class="class-field">character1</mark> = (char) read()*
character12^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜! ˜(%”
^org.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()?character2@504.13:504.23VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯("
typechar"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>char <mark class="class-field">character2</mark> = (char) read()*
character22^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯! ¯(%ö
8org.jabref.logic.importer.fileformat.BibtexParser.read()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ Ä("
isFinalfalse"œ
declarationStringπ<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="method">read</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeint*read2w
java.io.PushbackReader.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ' Å(+2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ É(2v
java.util.Deque.offerLast(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ(&2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser?pushbackReader@75.27:75.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ Å(&2™
Porg.jabref.logic.importer.fileformat.BibtexParser.read()?character@513.12:513.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ É(%2®
Norg.jabref.logic.importer.fileformat.BibtexParser?pureTextFromFile@73.35:73.51CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ Ñ(2™
Porg.jabref.logic.importer.fileformat.BibtexParser.read()?character@513.12:513.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÑ. Ñ(72™
Porg.jabref.logic.importer.fileformat.BibtexParser.read()?character@513.12:513.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÜ Ü(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaá á(2™
Porg.jabref.logic.importer.fileformat.BibtexParser.read()?character@513.12:513.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaâ â(2±
Porg.jabref.logic.importer.fileformat.BibtexParser.read()?character@513.12:513.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ Å(2d
intRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ Ä(ı
Porg.jabref.logic.importer.fileformat.BibtexParser.read()?character@513.12:513.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ Å("
typeint"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark> = pushbackReader.read()*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ Å(2w
java.io.PushbackReader.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ' Å(+2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser?pushbackReader@75.27:75.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ Å(&ˇ
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å("
isFinalfalse"˝
declarationStringÁ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">unread</mark>(<mark class="modifier">int</mark> character)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*unread2|
"java.io.PushbackReader.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê(2s
java.util.Deque.getLast()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë ë($2t
java.util.Deque.pollLast()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaí í(%2°
Gorg.jabref.logic.importer.fileformat.BibtexParser.unread(int)!characterCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç ç(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser?pushbackReader@75.27:75.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê(2°
Gorg.jabref.logic.importer.fileformat.BibtexParser.unread(int)!characterCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê('2®
Norg.jabref.logic.importer.fileformat.BibtexParser?pureTextFromFile@73.35:73.51CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë ë(2°
Gorg.jabref.logic.importer.fileformat.BibtexParser.unread(int)!characterCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaë* ë(32®
Norg.jabref.logic.importer.fileformat.BibtexParser?pureTextFromFile@73.35:73.51CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaí í(2¶
Gorg.jabref.logic.importer.fileformat.BibtexParser.unread(int)!character	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(%2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(Ò
Gorg.jabref.logic.importer.fileformat.BibtexParser.unread(int)!character	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(%"
typeint"
isFinalfalse"@
declarationString+<mark class="modifier">int</mark> character*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(ç 
?org.jabref.logic.importer.fileformat.BibtexParser.parseString()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ ñ($"
isFinalfalse"¡
declarationString´<mark class="modifier">private </mark>BibtexString <mark class="method">parseString</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibtexString*parseString2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaó ó(2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaò ò(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô ô(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ($2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù ù(2ô
?org.jabref.logic.importer.fileformat.BibtexParser.consume(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaü ü(2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java† †(*2†
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java†8 †(B2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¢ ¢(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipOneNewline()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §(2Æ
Torg.jabref.model.entry.BibtexString.BibtexString(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaß ß(2û
Dorg.jabref.logic.importer.fileformat.BibtexParser?LOGGER@69.32:69.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaö ö(2û
Dorg.jabref.logic.importer.fileformat.BibtexParser?LOGGER@69.32:69.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú ú(2û
Dorg.jabref.logic.importer.fileformat.BibtexParser?LOGGER@69.32:69.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaû û(2¨
Rorg.jabref.logic.importer.fileformat.BibtexParser.parseString()?name@539.15:539.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java†C †(G2û
Dorg.jabref.logic.importer.fileformat.BibtexParser?LOGGER@69.32:69.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java° °(2û
Dorg.jabref.logic.importer.fileformat.BibtexParser?LOGGER@69.32:69.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(2¨
Rorg.jabref.logic.importer.fileformat.BibtexParser.parseString()?name@539.15:539.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaß  ß($2Ø
Uorg.jabref.logic.importer.fileformat.BibtexParser.parseString()?content@544.15:544.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaß& ß(-2≥
Rorg.jabref.logic.importer.fileformat.BibtexParser.parseString()?name@539.15:539.19DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(2∂
Uorg.jabref.logic.importer.fileformat.BibtexParser.parseString()?content@544.15:544.22DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java† †(2Ñ
#org.jabref.model.entry.BibtexStringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javañ ñ(ÿ
Rorg.jabref.logic.importer.fileformat.BibtexParser.parseString()?name@539.15:539.19VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ("
typeString"
isFinalfalse"s
declarationString^<mark class="modifier"> </mark>String <mark class="class-field">name</mark> = parseTextToken()*name2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ($˙
Uorg.jabref.logic.importer.fileformat.BibtexParser.parseString()?content@544.15:544.22VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java† †("
typeString"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>String <mark class="class-field">content</mark> = parseFieldContent(FieldFactory.parseField(name))*content2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java† †(2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java† †(*2†
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java†8 †(B2¨
Rorg.jabref.logic.importer.fileformat.BibtexParser.parseString()?name@539.15:539.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java†C †(Gä
Aorg.jabref.logic.importer.fileformat.BibtexParser.parsePreamble()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™ ™( "
isFinalfalse"Ω
declarationStringß<mark class="modifier">private </mark>String <mark class="method">parsePreamble</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*parsePreamble2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java´ ´(2†
Forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨(*2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipOneNewline()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ Æ(2∞
Vorg.jabref.logic.importer.fileformat.BibtexParser.parsePreamble()?result@556.15:556.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaØ Ø(2∑
Vorg.jabref.logic.importer.fileformat.BibtexParser.parsePreamble()?result@556.15:556.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™ ™(Ë
Vorg.jabref.logic.importer.fileformat.BibtexParser.parsePreamble()?result@556.15:556.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨("
typeString"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>String <mark class="class-field">result</mark> = parseBracketedText()*result2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨(2†
Forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨(*¸3
Norg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤ ≤("
isFinalfalse"Ã
declarationString∂<mark class="modifier">private </mark>BibEntry <mark class="method">parseEntry</mark>(String entryType)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibEntry*
parseEntry2ü
Eorg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥8 ≥(=2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaµ µ(2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∑ ∑(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaπ π(2ñ
<org.jabref.logic.importer.fileformat.BibtexParser.parseKey()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª(2ö
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaΩ Ω(2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¿ ¿(2ô
?org.jabref.logic.importer.fileformat.BibtexParser.consume(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∆ ∆(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ À(2∑
]org.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ(2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipOneNewline()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java’ ’(2™
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥ ≥(&2≤
Xorg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)!entryTypeCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥> ≥(G2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏ ∏(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏$ ∏(-2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?result@563.17:563.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(2∫
`org.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?key@571.15:571.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(!2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¿ ¿(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡ ¡(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡' ¡(02¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ À(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÃ Ã(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÃ' Ã(02Ω
corg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?result@563.17:563.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ(2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?result@563.17:563.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java◊ ◊(2∑
Xorg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)!entryType	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤' ≤(02ƒ
corg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?result@563.17:563.23DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥ ≥(2«
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∑ ∑(2¡
`org.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?key@571.15:571.18DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª(2Ä
org.jabref.model.entry.BibEntryRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤ ≤(Ü
corg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?result@563.17:563.23VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥ ≥("
typeBibEntry"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>BibEntry <mark class="class-field">result</mark> = new BibEntry(EntryTypeFactory.parse(entryType))*result2y
org.jabref.model.entry.BibEntryTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥ ≥(2ü
Eorg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥8 ≥(=2™
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥ ≥(&2≤
Xorg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)!entryTypeCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥> ≥(GÓ
forg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?character@567.12:567.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∑ ∑("
typeint"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark> = peek()*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∑ ∑(2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∑ ∑(ÿ
`org.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)?key@571.15:571.18VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª("
typeString"
isFinalfalse"l
declarationStringW<mark class="modifier"> </mark>String <mark class="class-field">key</mark> = parseKey()*key2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª(2ñ
<org.jabref.logic.importer.fileformat.BibtexParser.parseKey()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª(˜
Xorg.jabref.logic.importer.fileformat.BibtexParser.parseEntry(java.lang.String)!entryType	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤' ≤(0"
typeString"
isFinalfalse"%
declarationStringString entryType*	entryType2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤  ≤(&≈5
]org.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java⁄ ⁄("
isFinalfalse"‰
declarationStringŒ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseField</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*
parseField2†
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€# €(-2à
.java.lang.String.toLowerCase(java.util.Locale)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€? €(J2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€. €(<2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java› ›(2ô
?org.jabref.logic.importer.fileformat.BibtexParser.consume(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬁ ﬁ(2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ(*2t
java.lang.String.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡(2¶
Lorg.jabref.model.entry.BibEntry.hasField(org.jabref.model.entry.field.Field)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java· ·(2Ç
(java.util.Set.contains(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÎ* Î(22å
2org.jabref.model.entry.field.Field.getProperties()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÎ Î('2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ Ï("2r
java.util.Optional.get()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ@ Ï(C2¶
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ0 Ï(82∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÚ Ú(2À
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ+ ﬂ(02Õ
sorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?content@607.15:607.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡(2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)!entryCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java· ·(2À
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java· ·($2À
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÎ Î(2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)!entryCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ Ï(2À
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ# Ï((2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)!entryCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ* Ï(/2À
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ9 Ï(>2Õ
sorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?content@607.15:607.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏR Ï(Y2À
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÌ5 Ì(:2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)!entryCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô(2Õ
sorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?content@607.15:607.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ% Ô(,2Ø
Uorg.jabref.logic.importer.fileformat.BibtexParser?importFormatPreferences@74.42:74.65CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ. Ô(E2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)!entryCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÚ Ú(2À
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÚ Ú($2Õ
sorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?content@607.15:607.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÚ& Ú(-2¬
corg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)!entry	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java⁄% ⁄(*2“
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€ €(2‘
sorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?content@607.15:607.22DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java⁄ ⁄(Î
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€ €("
typeField"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>Field <mark class="class-field">field</mark> = FieldFactory.parseField(parseTextToken().toLowerCase(Locale.ROOT))*field2|
"org.jabref.model.entry.field.FieldTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€ €(2†
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€# €(-2à
.java.lang.String.toLowerCase(java.util.Locale)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€? €(J2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€. €(<˙
sorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?content@607.15:607.22VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ("
typeString"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>String <mark class="class-field">content</mark> = parseFieldContent(field)*content2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ(2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ ﬂ(*2À
qorg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)?field@603.14:603.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaﬂ+ ﬂ(0ç
corg.jabref.logic.importer.fileformat.BibtexParser.parseField(org.jabref.model.entry.BibEntry)!entry	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java⁄% ⁄(*"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2y
org.jabref.model.entry.BibEntryTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java⁄ ⁄($±Q
gorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜($"
isFinalfalse"Ã
declarationString∂<mark class="modifier">private </mark>String <mark class="method">parseFieldContent</mark>(Field field)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*parseFieldContent2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸ ¸(!2•
Korg.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ% Å(<2ä
0java.lang.StringBuilder.append(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÇ Ç(2À
qorg.jabref.logic.bibtex.FieldContentFormatter.format(java.lang.StringBuilder, org.jabref.model.entry.field.Field)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÇ3 Ç(92®
Norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaá% á(?2ä
0java.lang.StringBuilder.append(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à(2À
qorg.jabref.logic.bibtex.FieldContentFormatter.format(java.lang.StringBuilder, org.jabref.model.entry.field.Field)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà3 à(92{
!java.lang.Character.isDigit(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaâ! â((2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä  ä(.2ä
0java.lang.StringBuilder.append(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(2ô
?org.jabref.logic.importer.fileformat.BibtexParser.consume(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaí# í(12t
java.lang.String.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaì ì(%2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaó[ ó(a2ä
0java.lang.StringBuilder.append(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaóI ó(O2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaó ó(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.skipWhitespace()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô ô(2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘" ˘(/2ã
1java.io.IOException.IOException(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˛ ˛(%2ã
1java.io.IOException.IOException(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaî î()2Ÿ
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?character@634.12:634.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸ ¸(2Ÿ
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?character@634.12:634.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸1 ¸(:2Ÿ
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?character@634.12:634.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¸G ¸(P2õ
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˝ ˝(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˛9 ˛(=2Ÿ
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?character@634.12:634.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÄ Ä(2’
{org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?value@633.22:633.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÇ Ç(2≠
Sorg.jabref.logic.importer.fileformat.BibtexParser?fieldContentFormatter@72.40:72.61CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÇ Ç(22‘
zorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?text@641.30:641.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÇ: Ç(>2«
morg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)!fieldCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÇ@ Ç(E2Ÿ
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?character@634.12:634.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ É( 2’
{org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?value@633.22:633.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à(2≠
Sorg.jabref.logic.importer.fileformat.BibtexParser?fieldContentFormatter@72.40:72.61CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à(22‘
zorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?text@647.30:647.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà: à(>2«
morg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)!fieldCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà@ à(E2Ÿ
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?character@634.12:634.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaâ0 â(92’
{org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?value@633.22:633.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(2÷
|org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?number@650.23:650.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(#2Ÿ
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?character@634.12:634.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å( 2Ÿ
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?textToken@658.23:658.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaì ì(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaî= î(A2’
{org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?value@633.22:633.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaó ó(2Ÿ
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?textToken@658.23:658.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaóP ó(Y2’
{org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?value@633.22:633.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(2Ã
morg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)!field	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜+ ˜(02‹
{org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?value@633.22:633.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘ ˘(2‡
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?character@634.12:634.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˙ ˙(2€
zorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?text@641.30:641.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ Å("2€
zorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?text@647.30:647.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaá á("2›
|org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?number@650.23:650.29DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä ä(2‡
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?textToken@658.23:658.32DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaí í( 2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜(Ä
{org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?value@633.22:633.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘ ˘("
typeStringBuilder"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>StringBuilder <mark class="class-field">value</mark> = new StringBuilder()*value2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘ ˘(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘" ˘(/È
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?character@634.12:634.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˙ ˙("
typeint"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark>*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˙ ˙(®
zorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?text@641.30:641.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ Å(""
typeStringBuilder"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>StringBuilder <mark class="class-field">text</mark> = parseQuotedFieldExactly()*text2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ Å(2•
Korg.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÅ% Å(<Æ
zorg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?text@647.30:647.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaá á(""
typeStringBuilder"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>StringBuilder <mark class="class-field">text</mark> = parseBracketedFieldContent()*text2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaá á(2®
Norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaá% á(?Ü
|org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?number@650.23:650.29VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä ä("
typeString"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>String <mark class="class-field">number</mark> = parseTextToken()*number2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä ä(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä  ä(.è
org.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)?textToken@658.23:658.32VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaí í( "
typeString"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>String <mark class="class-field">textToken</mark> = parseTextToken()*	textToken2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaí í(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaí# í(1î
morg.jabref.logic.importer.fileformat.BibtexParser.parseFieldContent(org.jabref.model.entry.field.Field)!field	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜+ ˜(0"
typeField"
isFinalfalse" 
declarationStringField field*field2|
"org.jabref.model.entry.field.FieldTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜% ˜(*≤
Borg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java° °(!"
isFinalfalse"æ
declarationString®<mark class="modifier">private </mark>String <mark class="method">parseTextToken</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*parseTextToken2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •( 2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®(%2É
)java.lang.Character.isLetterOrDigit(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java´ ´()2w
java.lang.String.indexOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java´K ´(R2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨(2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ Æ(2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaØ Ø(%2Ñ
*java.lang.StringBuilder.StringBuilder(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¢" ¢(/2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?character@677.16:677.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¶ ¶(2õ
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaß ß(2∞
Vorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?token@674.22:674.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®(2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?character@677.16:677.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java´1 ´(:2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?character@677.16:677.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java´S ´(\2∞
Vorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?token@674.22:674.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨(2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?character@677.16:677.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨$ ¨(-2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?character@677.16:677.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ Æ( 2∞
Vorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?token@674.22:674.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaØ Ø(2∑
Vorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?token@674.22:674.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¢ ¢(2ª
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?character@677.16:677.25DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java° °(·
Vorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?token@674.22:674.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¢ ¢("
typeStringBuilder"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>StringBuilder <mark class="class-field">token</mark> = new StringBuilder(20)*token2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¢ ¢(2Ñ
*java.lang.StringBuilder.StringBuilder(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¢" ¢(/‚
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseTextToken()?character@677.16:677.25VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •("
typeint"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark> = read()*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •( ≠s
:org.jabref.logic.importer.fileformat.BibtexParser.fixKey()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∫ ∫("
isFinalfalse"∂
declarationString†<mark class="modifier">private </mark>String <mark class="method">fixKey</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*fixKey2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡! ¡(%2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¬ ¬(2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »(2É
)java.lang.StringBuilder.deleteCharAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(2Ç
(java.lang.AbstractStringBuilder.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(#2{
!java.lang.StringBuilder.reverse()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ(!2Ç
(java.lang.AbstractStringBuilder.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“( “(.2Ö
+java.lang.AbstractStringBuilder.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java”& ”(,2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹ ‹(2Ç
(java.lang.AbstractStringBuilder.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„0 „(62Ö
+java.lang.AbstractStringBuilder.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰. ‰(42Ä
&java.lang.Character.isWhitespace(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ+ Â(72~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÊ' Ê(-2{
!java.lang.StringBuilder.reverse()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÎ% Î(,2ù
Corg.jabref.logic.importer.ParserResult.addWarning(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ% Ï(/2®
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÌ- Ì(12w
java.lang.String.valueOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÌf Ì(m2}
"java.lang.StringBuilder.toString()CALLQ
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÌy Ì(Å2ù
Corg.jabref.logic.importer.ParserResult.addWarning(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û('2®
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙ% Ù()2w
java.lang.String.valueOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙu Ù(|2~
"java.lang.StringBuilder.toString()CALLR
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙà Ù(ê2ù
Corg.jabref.logic.importer.ParserResult.addWarning(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯('2®
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘% ˘()2w
java.lang.String.valueOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘n ˘(u2~
"java.lang.StringBuilder.toString()CALLR
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘Å ˘(â2±
Worg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˇ ˇ(2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ& É(.2∂
\org.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ É( 2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª  ª(-2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚3 ‚(@2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡ ¡(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¬ ¬(2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¬ ¬("2∞
Vorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?lookaheadUsed@700.12:700.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√ √(2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaƒ ƒ(2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaƒ* ƒ(52Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaƒC ƒ(N2∞
Vorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?lookaheadUsed@700.12:700.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈(!2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÃ Ã(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ(2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?i@722.25:722.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“  “(!2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“$ “('2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?i@722.25:722.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“2 “(32Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java” ”(2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java”" ”(%2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?i@722.25:722.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java”- ”(.2Ø
Uorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?matchedAlpha@721.24:721.36CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷ ÷(%2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷* ÷(52Ø
Uorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?matchedAlpha@721.24:721.36CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ Ÿ( 2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹ ‹(&2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java› ›($2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java›1 ›(<2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?i@722.25:722.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„% „(&2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?j@739.33:739.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„( „()2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„, „(/2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?j@739.33:739.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„: „(;2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰ ‰('2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰* ‰(-2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?j@739.33:739.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰5 ‰(62Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ8 Â(C2©
Oorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?newKey@738.38:738.44CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÊ  Ê(&2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÊ. Ê(92¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÎ Î(2©
Oorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?newKey@738.38:738.44CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÎ Î($2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ Ï($2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÌn Ì(r2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÌu Ì(x2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û(2ù
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLQ
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙ} Ù(Å2®
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLR
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙÑ Ù(á2§
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘v ˘(z2ß
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLQ
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘} ˘(Ä2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˇ ˇ( 2¶
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ! É($2°
Gorg.jabref.logic.importer.fileformat.BibtexParser?LOOKAHEAD@71.33:71.42CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈1 ≈(:2≠
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª(2∑
Vorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?lookaheadUsed@700.12:700.25DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(2µ
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaΩ Ω(2∂
Uorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?matchedAlpha@721.24:721.36DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —($2´
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?i@722.25:722.26DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “(2∞
Oorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?newKey@738.38:738.44DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚& ‚(,2´
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?j@739.33:739.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„! „("2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∫ ∫(Õ
Lorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?key@699.22:699.25VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª("
typeStringBuilder"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>StringBuilder <mark class="class-field">key</mark> = new StringBuilder()*key2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª  ª(-Ã
Vorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?lookaheadUsed@700.12:700.25VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º("
typeint"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">lookaheadUsed</mark> = 0*lookaheadUsed2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(¶
Torg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?currentChar@701.13:701.24VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaΩ Ω("
typechar"
isFinalfalse"e
declarationStringP<mark class="modifier"> </mark>char <mark class="class-field">currentChar</mark>*currentChar2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaΩ Ω(¯
Uorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?matchedAlpha@721.24:721.36VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —($"
typeboolean"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">matchedAlpha</mark> = <mark class="modifier">false</mark>*matchedAlpha2a
booleanTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —(ß
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?i@722.25:722.26VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “(÷
Oorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?newKey@738.38:738.44VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚& ‚(,"
typeStringBuilder"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>StringBuilder <mark class="class-field">newKey</mark> = new StringBuilder()*newKey2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚ ‚(%2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚3 ‚(@Œ
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?j@739.33:739.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„! „(""
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">j</mark> = i*j2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„ „( 2§
Jorg.jabref.logic.importer.fileformat.BibtexParser.fixKey()?i@722.25:722.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„% „(&¯
\org.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä ä(+"
isFinalfalse"é
declarationStringy<mark class="modifier">private </mark>StringBuilder <mark class="method">removeWhitespaces</mark>(StringBuilder toRemove)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeStringBuilder*removeWhitespaces2Ç
(java.lang.AbstractStringBuilder.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç% ç(+2Ö
+java.lang.AbstractStringBuilder.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é(%2Ä
&java.lang.Character.isWhitespace(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaè è('2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã# ã(02∆
lorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?i@781.17:781.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç ç(2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)!toRemoveCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç ç($2∆
lorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?i@781.17:781.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç1 ç(22Ã
rorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?current@780.13:780.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é(2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)!toRemoveCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é(2∆
lorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?i@781.17:781.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé& é('2Ã
rorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?current@780.13:780.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaè( è(/2À
qorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?result@779.22:779.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê(2Ã
rorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?current@780.13:780.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê(%2À
qorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?result@779.22:779.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaì ì(2ƒ
eorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)!toRemove	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä: ä(B2“
qorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?result@779.22:779.28DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(2”
rorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?current@780.13:780.20DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(2Õ
lorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?i@781.17:781.18DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç ç(2x
java.lang.StringBuilderRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä ä(¯
qorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?result@779.22:779.28VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã("
typeStringBuilder"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>StringBuilder <mark class="class-field">result</mark> = new StringBuilder()*result2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã ã(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaã# ã(0º
rorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?current@780.13:780.20VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å("
typechar"
isFinalfalse"a
declarationStringL<mark class="modifier"> </mark>char <mark class="class-field">current</mark>*current2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(…
lorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)?i@781.17:781.18VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç ç("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaç ç(ó
eorg.jabref.logic.importer.fileformat.BibtexParser.removeWhitespaces(java.lang.StringBuilder)!toRemove	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä: ä(B"
typeStringBuilder"
isFinalfalse"+
declarationStringStringBuilder toRemove*toRemove2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaä, ä(9Ç
Worg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ("
isFinalfalse"Û
declarationString›<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">unreadBuffer</mark>(StringBuilder stringBuilder)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*unreadBuffer2Ç
(java.lang.AbstractStringBuilder.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú# ú()2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù ù(2Ö
+java.lang.AbstractStringBuilder.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù! ù('2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)!stringBuilderCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú ú("2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)?i@796.17:796.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú1 ú(22¡
gorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)?i@796.17:796.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú; ú(<2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)!stringBuilderCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù ù( 2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)?i@796.17:796.18CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaù( ù()2ƒ
eorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)!stringBuilder	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ, õ(92»
gorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)?i@796.17:796.18DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú ú(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(¶
gorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)?i@796.17:796.18VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú ú("
typeint"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = stringBuilder.length() - 1*i2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú ú(2Ç
(java.lang.AbstractStringBuilder.length()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú# ú()2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)!stringBuilderCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaú ú("°
eorg.jabref.logic.importer.fileformat.BibtexParser.unreadBuffer(java.lang.StringBuilder)!stringBuilder	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ, õ(9"
typeStringBuilder"
isFinalfalse"0
declarationStringStringBuilder stringBuilder*stringBuilder2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaõ õ(+›.
<org.jabref.logic.importer.fileformat.BibtexParser.parseKey()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §("
isFinalfalse"∏
declarationString¢<mark class="modifier">private </mark>String <mark class="method">parseKey</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*parseKey2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®( 2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≠ ≠(%2Ä
&java.lang.Character.isWhitespace(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∞ ∞('2É
)java.lang.Character.isLetterOrDigit(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∞H ∞(W2w
java.lang.String.indexOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java±= ±(D2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤ ≤(2Ä
&java.lang.Character.isWhitespace(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥ ¥(*2î
:org.jabref.logic.importer.fileformat.BibtexParser.fixKey()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∫# ∫()2ó
=org.jabref.logic.importer.fileformat.BibtexParser.unread(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaΩ! Ω()2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡! ¡()2Ñ
*java.lang.StringBuilder.StringBuilder(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java•" •(/2ã
1java.io.IOException.IOException(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√ √()2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java™ ™(2õ
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java´ ´(2™
Porg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?token@805.22:805.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≠ ≠(2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∞/ ∞(82Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∞_ ∞(h2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±(!2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java±E ±(N2™
Porg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?token@805.22:805.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤ ≤(2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤$ ≤(-2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¥2 ¥(;2™
Porg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?token@805.22:805.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∫ ∫( 2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª ª(%2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaª2 ª(;2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º($2™
Porg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?token@805.22:805.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaΩ Ω( 2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaæ æ($2™
Porg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?token@805.22:805.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡ ¡( 2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√= √(A2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√a √(j2±
Porg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?token@805.22:805.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(2µ
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java§ §(€
Porg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?token@805.22:805.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •("
typeStringBuilder"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>StringBuilder <mark class="class-field">token</mark> = new StringBuilder(20)*token2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •(2Ñ
*java.lang.StringBuilder.StringBuilder(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java•" •(/‹
Torg.jabref.logic.importer.fileformat.BibtexParser.parseKey()?character@808.16:808.25VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®("
typeint"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark> = read()*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®( ∏;
Forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java   (%"
isFinalfalse"¬
declarationString¨<mark class="modifier">private </mark>String <mark class="method">parseBracketedText</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*parseBracketedText2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÕ Õ(2¢
Horg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java— —(&2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “( 2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java” ”(2Ä
&java.lang.Character.isWhitespace(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡ ‡(&2®
Norg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java·, ·(C2t
java.lang.String.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„( „(/2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„= „(C2¢
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰< ‰(C2ä
0java.lang.StringBuilder.append(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ Â( 2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÁ Á( 2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÍ Í(2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÓ Ó(2|
"java.lang.StringBuilder.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java (2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ" À(/2ã
1java.io.IOException.IOException(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‘ ‘(%2∑
]org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?brackets@847.12:847.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java—. —(62∏
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java” ”((2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‘9 ‘(=2∏
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java’ ’(!2∏
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java’. ’(72∑
]org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?brackets@847.12:847.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java÷ ÷(2∏
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java◊ ◊(!2∏
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java◊. ◊(72∑
]org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?brackets@847.12:847.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÿ ÿ(2∏
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‡. ‡(72∏
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java·D ·(M2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?whitespacesReduced@865.23:865.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„ „('2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?whitespacesReduced@865.23:865.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java„D „(V2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?whitespacesReduced@865.23:865.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰ ‰(&2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?whitespacesReduced@865.23:865.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰) ‰(;2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?value@843.22:843.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ Â(2¡
gorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?whitespacesReduced@865.23:865.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ! Â(32¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?value@843.22:843.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÁ Á(2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?value@843.22:843.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÍ Í(2∏
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÍ$ Í(-2¥
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?value@843.22:843.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java (2ª
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?value@843.22:843.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ À(2æ
]org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?brackets@847.12:847.20DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ(2ø
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “(2»
gorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?whitespacesReduced@865.23:865.41DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java· ·()2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java   (ﬂ
Zorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?value@843.22:843.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ À("
typeStringBuilder"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>StringBuilder <mark class="class-field">value</mark> = new StringBuilder()*value2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ À(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ" À(/…
]org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?brackets@847.12:847.20VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ("
typeint"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">brackets</mark> = 0*brackets2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaœ œ(Ê
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “("
typeint"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark> = read()*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java“ “( „
gorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?whitespacesReduced@865.23:865.41VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java· ·()"
typeString"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>String <mark class="class-field">whitespacesReduced</mark> = skipAndRecordWhitespace(character)*whitespacesReduced2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java· ·(2®
Norg.jabref.logic.importer.fileformat.BibtexParser.skipAndRecordWhitespace(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java·, ·(C2∏
^org.jabref.logic.importer.fileformat.BibtexParser.parseBracketedText()?character@850.16:850.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java·D ·(MÆ
Horg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û(("
isFinalfalse"ì
declarationString~<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">isClosingBracketNext</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*isClosingBracketNext2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı(2µ
[org.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?peek@885.16:885.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ% ˆ()2µ
[org.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?peek@885.16:885.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜% ˜()2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?isCurlyBracket@886.20:886.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯ ¯(!2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?isRoundBracket@887.20:887.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¯% ¯(32º
[org.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?peek@885.16:885.20DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı(2∆
eorg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?isCurlyBracket@886.20:886.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ("2∆
eorg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?isRoundBracket@887.20:887.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜("2π
Xorg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?e@889.29:889.30DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘ ˘(2h
booleanRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÛ Û(Ÿ
[org.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?peek@885.16:885.20VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı("
typeint"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">peek</mark> = peek()*peek2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı(2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı(¨
eorg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?isCurlyBracket@886.20:886.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ(""
typeboolean"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">isCurlyBracket</mark> = peek == '}'*isCurlyBracket2a
booleanTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ ˆ(2µ
[org.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?peek@885.16:885.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ% ˆ()¨
eorg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?isRoundBracket@887.20:887.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜(""
typeboolean"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">isRoundBracket</mark> = peek == ')'*isRoundBracket2a
booleanTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜ ˜(2µ
[org.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?peek@885.16:885.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˜% ˜()Û
Xorg.jabref.logic.importer.fileformat.BibtexParser.isClosingBracketNext()?e@889.29:889.30VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘ ˘("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2m
java.io.IOExceptionTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java˘ ˘(Å<
Norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÇ Ç(4"
isFinalfalse"—
declarationStringª<mark class="modifier">private </mark>StringBuilder <mark class="method">parseBracketedFieldContent</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeStringBuilder*parseBracketedFieldContent2ô
?org.jabref.logic.importer.fileformat.BibtexParser.consume(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÖ Ö(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(#2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï/ ï(@2v
java.lang.String.charAt(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô^ ô(d2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ Æ(%2†
Forg.jabref.logic.importer.fileformat.BibtexParser.isEscapeSymbol(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∞/ ∞(=2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ" É(/2ã
1java.io.IOException.IOException(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaØ Ø(%2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?character@904.13:904.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaå å(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?character@904.13:904.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaè è(2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?lastCharacter@905.13:905.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaê ê(!2»
norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?nextTwoCharacters@917.27:917.44CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô ô(*2»
norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?nextTwoCharacters@917.27:917.44CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaô; ô(L2»
norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?nextTwoCharacters@917.27:917.44CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaôm ô(~2«
morg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?isClosingBracket@910.20:910.36CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java£ £((2«
morg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?isClosingBracket@910.20:910.36CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java• •((2«
morg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?isClosingBracket@910.20:910.36CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java® ®($2«
morg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?isClosingBracket@910.20:910.36CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨ ¨( 2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?brackets@903.12:903.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¨% ¨(-2º
borg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?value@899.22:899.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≠ ≠(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?character@904.13:904.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÆ& Æ(/2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaØ9 Ø(=2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?character@904.13:904.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∞ ∞(!2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?lastCharacter@905.13:905.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∞> ∞(K2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?brackets@903.12:903.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java± ±(2«
morg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?isClosingBracket@910.20:910.36CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≤ ≤('2ø
eorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?brackets@903.12:903.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≥ ≥(2º
borg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?value@899.22:899.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?character@904.13:904.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∂ ∂("2ƒ
jorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?lastCharacter@905.13:905.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏ ∏(2¿
forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?character@904.13:904.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java∏ ∏(%2√
borg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?value@899.22:899.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ É(2∆
eorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?brackets@903.12:903.20DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaá á(2«
forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?character@904.13:904.22DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à(2À
jorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?lastCharacter@905.13:905.26DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaâ â(2Œ
morg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?isClosingBracket@910.20:910.36DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é($2œ
norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?nextTwoCharacters@917.27:917.44DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï ï(,2x
java.lang.StringBuilderRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÇ Ç(Á
borg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?value@899.22:899.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ É("
typeStringBuilder"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>StringBuilder <mark class="class-field">value</mark> = new StringBuilder()*value2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ É(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÉ" É(/—
eorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?brackets@903.12:903.20VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaá á("
typeint"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">brackets</mark> = 0*brackets2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaá á(¥
forg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?character@904.13:904.22VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à("
typechar"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>char <mark class="class-field">character</mark>*	character2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaà à(«
jorg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?lastCharacter@905.13:905.26VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaâ â("
typechar"
isFinalfalse"n
declarationStringY<mark class="modifier"> </mark>char <mark class="class-field">lastCharacter</mark> = '\0'*lastCharacter2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaâ â(ò
morg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?isClosingBracket@910.20:910.36VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é($"
typeboolean"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">isClosingBracket</mark> = <mark class="modifier">false</mark>*isClosingBracket2a
booleanTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaé é(â
norg.jabref.logic.importer.fileformat.BibtexParser.parseBracketedFieldContent()?nextTwoCharacters@917.27:917.44VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï ï(,"
typechar"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>char[] <mark class="class-field">nextTwoCharacters</mark> = peekTwoCharacters()*nextTwoCharacters2`
char[]TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï ï(2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.peekTwoCharacters()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaï/ ï(@¯
Forg.jabref.logic.importer.fileformat.BibtexParser.isEscapeSymbol(char)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(""
isFinalfalse"ú
declarationStringÜ<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">isEscapeSymbol</mark>(char character)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*isEscapeSymbol2™
Porg.jabref.logic.importer.fileformat.BibtexParser.isEscapeSymbol(char)!characterCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaΩ Ω( 2Ø
Porg.jabref.logic.importer.fileformat.BibtexParser.isEscapeSymbol(char)!character	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº( º(12h
booleanRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº º(ﬂ
Porg.jabref.logic.importer.fileformat.BibtexParser.isEscapeSymbol(char)!character	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº( º(1"
typechar"
isFinalfalse"#
declarationStringchar character*	character2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaº# º('Å!
Korg.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¿ ¿(1"
isFinalfalse"Œ
declarationString∏<mark class="modifier">private </mark>StringBuilder <mark class="method">parseQuotedFieldExactly</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeStringBuilder*parseQuotedFieldExactly2ô
?org.jabref.logic.importer.fileformat.BibtexParser.consume(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java√ √(2í
8org.jabref.logic.importer.fileformat.BibtexParser.peek()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java« «(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »(2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …(2~
$java.lang.StringBuilder.append(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java– –(2ô
?org.jabref.logic.importer.fileformat.BibtexParser.consume(char)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java” ”(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡" ¡(/2ã
1java.io.IOException.IOException(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java   (%2º
borg.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?brackets@965.12:965.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java«% «(-2µ
[org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?j@968.16:968.17CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java… …( 2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java 9  (=2µ
[org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?j@968.16:968.17CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÀ À(2º
borg.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?brackets@965.12:965.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÃ Ã(2µ
[org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?j@968.16:968.17CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÕ Õ(2º
borg.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?brackets@965.12:965.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŒ Œ(2π
_org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?value@961.22:961.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java– –(2µ
[org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?j@968.16:968.17CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java–  –(!2π
_org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?value@961.22:961.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java’ ’(2¿
_org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?value@961.22:961.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡ ¡(2√
borg.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?brackets@965.12:965.20DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈(2º
[org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?j@968.16:968.17DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »(2x
java.lang.StringBuilderRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¿ ¿(‰
_org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?value@961.22:961.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡ ¡("
typeStringBuilder"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>StringBuilder <mark class="class-field">value</mark> = new StringBuilder()*value2q
java.lang.StringBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡ ¡(2Å
'java.lang.StringBuilder.StringBuilder()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java¡" ¡(/Œ
borg.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?brackets@965.12:965.20VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈("
typeint"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">brackets</mark> = 0*brackets2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java≈ ≈(”
[org.jabref.logic.importer.fileformat.BibtexParser.parseQuotedFieldExactly()?j@968.16:968.17VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »("
typeint"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">j</mark> = read()*j2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java» »(¢
?org.jabref.logic.importer.fileformat.BibtexParser.consume(char)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÿ ÿ("
isFinalfalse"‡
declarationString <mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">consume</mark>(char expected)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*consume2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ Ÿ(2ã
1java.io.IOException.IOException(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‹ ‹(!2±
Worg.jabref.logic.importer.fileformat.BibtexParser.consume(char)?character@985.12:985.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€ €(2¢
Horg.jabref.logic.importer.fileformat.BibtexParser.consume(char)!expectedCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java€ €(!2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java›' ›(+2¢
Horg.jabref.logic.importer.fileformat.BibtexParser.consume(char)!expectedCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java›> ›(F2±
Worg.jabref.logic.importer.fileformat.BibtexParser.consume(char)?character@985.12:985.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java›c ›(l2ß
Horg.jabref.logic.importer.fileformat.BibtexParser.consume(char)!expected	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÿ ÿ(&2∏
Worg.jabref.logic.importer.fileformat.BibtexParser.consume(char)?character@985.12:985.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ Ÿ(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÿ ÿ(ﬂ
Worg.jabref.logic.importer.fileformat.BibtexParser.consume(char)?character@985.12:985.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ Ÿ("
typeint"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark> = read()*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ Ÿ(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaŸ Ÿ(’
Horg.jabref.logic.importer.fileformat.BibtexParser.consume(char)!expected	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÿ ÿ(&"
typechar"
isFinalfalse""
declarationStringchar expected*expected2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÿ ÿ(™
Korg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java· ·('"
isFinalfalse"Ô
declarationStringŸ<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">consumeUncritically</mark>(char expected)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*consumeUncritically2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰ ‰(2ü
Eorg.jabref.logic.importer.fileformat.BibtexParser.isEOFCharacter(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÁ Á(2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)?character@994.12:994.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‰ ‰(2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)?character@994.12:994.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ Â(2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)!expectedCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ Â('2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)?character@994.12:994.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂ- Â(62Ω
corg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)?character@994.12:994.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÂB Â(K2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)?character@994.12:994.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÁ Á($2õ
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaË Ë(2Ω
corg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)?character@994.12:994.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ Ï(2Æ
Torg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)!expectedCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÏ Ï($2≥
Torg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)!expected	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java·- ·(52ƒ
corg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)?character@994.12:994.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚ ‚(2h
booleanRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java· ·(Õ
corg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)?character@994.12:994.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚ ‚("
typeint"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark>*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java‚ ‚(·
Torg.jabref.logic.importer.fileformat.BibtexParser.consumeUncritically(char)!expected	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java·- ·(5"
typechar"
isFinalfalse""
declarationStringchar expected*expected2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java·( ·(,˚
Eorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô("
isFinalfalse"≤
declarationStringú<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">consume</mark>(char firstOption<mark class="modifier"><mark class="modifier">,</mark></mark> char secondOption)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*consume2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÚ Ú(2ã
1java.io.IOException.IOException(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı ı(!2π
_org.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)?character@1010.12:1010.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙ Ù(2´
Qorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)!firstOptionCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙ Ù(%2π
_org.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)?character@1010.12:1010.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙ+ Ù(42¨
Rorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)!secondOptionCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÙ8 Ù(D2ú
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaı5 ı(92´
Qorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)!firstOptionCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaıL ı(W2¨
Rorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)!secondOptionCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaıc ı(o2π
_org.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)?character@1010.12:1010.21CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaˆ0 ˆ(92∞
Qorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)!firstOption	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô()2±
Rorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)!secondOption	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ0 Ô(<2¿
_org.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)?character@1010.12:1010.21DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÚ Ú(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô(Á
_org.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)?character@1010.12:1010.21VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÚ Ú("
typeint"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">character</mark> = read()*	character2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÚ Ú(2í
8org.jabref.logic.importer.fileformat.BibtexParser.read()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÚ Ú(‰
Qorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)!firstOption	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô()"
typechar"
isFinalfalse"%
declarationStringchar firstOption*firstOption2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ Ô(Á
Rorg.jabref.logic.importer.fileformat.BibtexParser.consume(char, char)!secondOption	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ0 Ô(<"
typechar"
isFinalfalse"&
declarationStringchar secondOption*secondOption2^
charTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaÔ+ Ô(/∫
Dorg.jabref.logic.importer.fileformat.BibtexParser?LOGGER@69.32:69.38VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaE  E(&"
isFinaltrue"
typeLogger"‚
declarationStringÃ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(BibtexParser.class);"
isStatictrue"
accessprivate*LOGGER2h
org.slf4j.LoggerTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaE E(ü
Gorg.jabref.logic.importer.fileformat.BibtexParser?LOOKAHEAD@71.33:71.42VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaG! G(*"
isFinaltrue"
typeInteger"ø
declarationString©<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Integer <mark class="class-field">LOOKAHEAD</mark> = 1024;"
isStatictrue"
accessprivate*	LOOKAHEAD2i
java.lang.IntegerTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaG G( –
Sorg.jabref.logic.importer.fileformat.BibtexParser?fieldContentFormatter@72.40:72.61VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaH( H(="
isFinaltrue"
typeFieldContentFormatter"¨
declarationStringñ<mark class="modifier">private </mark><mark class="modifier">final </mark>FieldContentFormatter <mark class="class-field">fieldContentFormatter</mark>"
isStaticfalse"
accessprivate*fieldContentFormatter2Ö
-org.jabref.logic.bibtex.FieldContentFormatterTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaH H('ü
Norg.jabref.logic.importer.fileformat.BibtexParser?pureTextFromFile@73.35:73.51VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaI# I(3"
isFinaltrue"
typeDeque<Character>"∏
declarationString¢<mark class="modifier">private </mark><mark class="modifier">final </mark>Deque<Character> <mark class="class-field">pureTextFromFile</mark> = new LinkedList<>();"
isStaticfalse"
accessprivate*pureTextFromFile2g
java.util.DequeTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaI I(2t
java.lang.CharacterTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaI I(!2y
!java.util.LinkedList.LinkedList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaI: I(F√
Uorg.jabref.logic.importer.fileformat.BibtexParser?importFormatPreferences@74.42:74.65VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaJ* J(A"
isFinaltrue"
typeImportFormatPreferences"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">final </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2o
ImportFormatPreferencesTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaJ J()Û
Lorg.jabref.logic.importer.fileformat.BibtexParser?pushbackReader@75.27:75.41VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaK K()"
isFinalfalse"
typePushbackReader"y
declarationStringd<mark class="modifier">private </mark>PushbackReader <mark class="class-field">pushbackReader</mark>"
isStaticfalse"
accessprivate*pushbackReader2n
java.io.PushbackReaderTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaK K(Í
Forg.jabref.logic.importer.fileformat.BibtexParser?database@76.24:76.32VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaL L( "
isFinalfalse"
typeBibDatabase"p
declarationString[<mark class="modifier">private </mark>BibDatabase <mark class="class-field">database</mark>"
isStaticfalse"
accessprivate*database2}
%org.jabref.model.database.BibDatabaseTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaL L(Î
Horg.jabref.logic.importer.fileformat.BibtexParser?entryTypes@77.30:77.40VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaM M(("
isFinalfalse"
typeSet<BibEntryType>"x
declarationStringc<mark class="modifier">private </mark>Set<BibEntryType> <mark class="class-field">entryTypes</mark>"
isStaticfalse"
accessprivate*
entryTypes2e
java.util.SetTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaM M(2Ñ
#org.jabref.model.entry.BibEntryTypeTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaM M(‘
Aorg.jabref.logic.importer.fileformat.BibtexParser?eof@78.20:78.23VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaN N("
isFinalfalse"
typeboolean"Ö
declarationStringp<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="class-field">eof</mark>"
isStaticfalse"
accessprivate*eof2_
booleanTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaN N(–
Borg.jabref.logic.importer.fileformat.BibtexParser?line@79.16:79.20VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaO O("
isFinalfalse"
typeint"á
declarationStringr<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="class-field">line</mark> = 1;"
isStaticfalse"
accessprivate*line2[
intTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaO O(˘
Jorg.jabref.logic.importer.fileformat.BibtexParser?parserResult@80.25:80.37VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaP P(%"
isFinalfalse"
typeParserResult"u
declarationString`<mark class="modifier">private </mark>ParserResult <mark class="class-field">parserResult</mark>"
isStaticfalse"
accessprivate*parserResult2~
&org.jabref.logic.importer.ParserResultTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaP P(≠
Lorg.jabref.logic.importer.fileformat.BibtexParser?metaDataParser@81.33:81.47VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaQ! Q(/"
isFinaltrue"
typeMetaDataParser"û
declarationStringà<mark class="modifier">private </mark><mark class="modifier">final </mark>MetaDataParser <mark class="class-field">metaDataParser</mark>"
isStaticfalse"
accessprivate*metaDataParser2Ö
-org.jabref.logic.importer.util.MetaDataParserTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\BibtexParser.javaQ Q( 