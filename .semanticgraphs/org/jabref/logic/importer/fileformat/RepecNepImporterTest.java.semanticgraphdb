
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java»
9org.jabref.logic.importer.fileformat.RepecNepImporterTestCLASSV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java (!"/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"r
declarationString]<mark class="modifier">public </mark><mark class="modifier">class </mark>RepecNepImporterTest"
accesspublic*RepecNepImporterTest2®
Aorg.jabref.logic.importer.fileformat.RepecNepImporterTest.setUp()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java (2¨
Eorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java!" !(+2≥
Lorg.jabref.logic.importer.fileformat.RepecNepImporterTest.invalidFileNames()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java'" '(22≈
^org.jabref.logic.importer.fileformat.RepecNepImporterTest.isRecognizedFormat(java.lang.String)DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java. .("2»
aorg.jabref.logic.importer.fileformat.RepecNepImporterTest.isNotRecognizedFormat(java.lang.String)DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java4 4(%2¿
Yorg.jabref.logic.importer.fileformat.RepecNepImporterTest.importEntries(java.lang.String)DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java: :(2∞
Iorg.jabref.logic.importer.fileformat.RepecNepImporterTest.getFormatName()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java? ?(#2´
Dorg.jabref.logic.importer.fileformat.RepecNepImporterTest.getCliId()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaD D(2Ø
Horg.jabref.logic.importer.fileformat.RepecNepImporterTest.getExtension()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaI I(2±
Jorg.jabref.logic.importer.fileformat.RepecNepImporterTest.getDescription()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaN N($2∏
Qorg.jabref.logic.importer.fileformat.RepecNepImporterTest?FILE_ENDING@21.32:21.43DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java  (+2π
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java ()π

Aorg.jabref.logic.importer.fileformat.RepecNepImporterTest.setUp()METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2≈
eorg.jabref.logic.importer.fileformat.RepecNepImporterTest.setUp()?importFormatPreferences@27.32:27.55CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java ($2≤
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java (2≈
eorg.jabref.logic.importer.fileformat.RepecNepImporterTest.setUp()?importFormatPreferences@27.32:27.55CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java, (C2Ã
eorg.jabref.logic.importer.fileformat.RepecNepImporterTest.setUp()?importFormatPreferences@27.32:27.55DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java  (72k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java (ÿ
eorg.jabref.logic.importer.fileformat.RepecNepImporterTest.setUp()?importFormatPreferences@27.32:27.55VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java  (7"
typeImportFormatPreferences"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark> = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS)*importFormatPreferences2w
ImportFormatPreferencesTYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java („
Eorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java!" !(+"
isFinalfalse"Ï
declarationString÷<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">fileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*	fileNames2ç
-java.lang.String.startsWith(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java"2 "(<2ã
+java.lang.String.endsWith(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java# #( 2}
java.util.Collection.stream()CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java$9 $(?2‘
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java$" $(.2∂
Vorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()?name@34.37:34.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java"- "(12∂
Vorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()?name@34.37:34.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java# #(2±
Qorg.jabref.logic.importer.fileformat.RepecNepImporterTest?FILE_ENDING@21.32:21.43CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java#! #(,2∫
Zorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()?fileName@34.26:34.34CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java$/ $(72¡
Zorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()?fileName@34.26:34.34DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java" "("2Ω
Vorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()?name@34.37:34.41DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java"% "()2~
java.util.stream.StreamRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java! !(2Ä
java.lang.StringRETURN_TYPE_ARGUMENTV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java! !( Ò
Zorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()?fileName@34.26:34.34VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java" "(""
typePredicate<String>"
isFinalfalse"º
declarationString¶<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> name.startsWith("RepecNepImporter") && name.endsWith(FILE_ENDING)*fileName2|
java.util.function.PredicateTYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java" "(2y
java.lang.StringTYPE_ARGUMENTV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java" "(2ç
-java.lang.String.startsWith(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java"2 "(<2ã
+java.lang.String.endsWith(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java# #( 2∂
Vorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()?name@34.37:34.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java"- "(12∂
Vorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()?name@34.37:34.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java# #(2±
Qorg.jabref.logic.importer.fileformat.RepecNepImporterTest?FILE_ENDING@21.32:21.43CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java#! #(,˛
Vorg.jabref.logic.importer.fileformat.RepecNepImporterTest.fileNames()?name@34.37:34.41VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java"% "()"
type"
isFinalfalse"
declarationString name*name2TYPEù
Lorg.jabref.logic.importer.fileformat.RepecNepImporterTest.invalidFileNames()METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java'" '(2"
isFinalfalse"Û
declarationString›<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">invalidFileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*invalidFileNames2ë
1java.lang.String.contains(java.lang.CharSequence)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java(3 ((;2}
java.util.Collection.stream()CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java)9 )(?2‘
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java)" )(.2Ω
]org.jabref.logic.importer.fileformat.RepecNepImporterTest.invalidFileNames()?name@40.37:40.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java(. ((22¡
aorg.jabref.logic.importer.fileformat.RepecNepImporterTest.invalidFileNames()?fileName@40.26:40.34CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java)/ )(72»
aorg.jabref.logic.importer.fileformat.RepecNepImporterTest.invalidFileNames()?fileName@40.26:40.34DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java( (("2ƒ
]org.jabref.logic.importer.fileformat.RepecNepImporterTest.invalidFileNames()?name@40.37:40.41DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java(% (()2~
java.util.stream.StreamRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java' '(2Ä
java.lang.StringRETURN_TYPE_ARGUMENTV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java' '( È
aorg.jabref.logic.importer.fileformat.RepecNepImporterTest.invalidFileNames()?fileName@40.26:40.34VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java( ((""
typePredicate<String>"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> !name.contains("RepecNepImporter")*fileName2|
java.util.function.PredicateTYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java( ((2y
java.lang.StringTYPE_ARGUMENTV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java( ((2ë
1java.lang.String.contains(java.lang.CharSequence)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java(3 ((;2Ω
]org.jabref.logic.importer.fileformat.RepecNepImporterTest.invalidFileNames()?name@40.37:40.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java(. ((2Ö
]org.jabref.logic.importer.fileformat.RepecNepImporterTest.invalidFileNames()?name@40.37:40.41VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java(% (()"
type"
isFinalfalse"
declarationString name*name2TYPEÑ
^org.jabref.logic.importer.fileformat.RepecNepImporterTest.isRecognizedFormat(java.lang.String)METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java. .(""
isFinalfalse"∞
declarationStringö <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormat</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormat2Â
Ñorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java/ /(12≤
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java/2 /(>2«
gorg.jabref.logic.importer.fileformat.RepecNepImporterTest.isRecognizedFormat(java.lang.String)!fileNameCALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java/@ /(H2Ã
gorg.jabref.logic.importer.fileformat.RepecNepImporterTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETERV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java.* .(22k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java. .(ê
gorg.jabref.logic.importer.fileformat.RepecNepImporterTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETERV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java.* .(2"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java.# .()ù
aorg.jabref.logic.importer.fileformat.RepecNepImporterTest.isNotRecognizedFormat(java.lang.String)METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java4 4(%"
isFinalfalse"∫
declarationString§ <br><mark class="annotation">@MethodSource("invalidFileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isNotRecognizedFormat</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isNotRecognizedFormat2Ë
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java5 5(42≤
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java55 5(A2 
jorg.jabref.logic.importer.fileformat.RepecNepImporterTest.isNotRecognizedFormat(java.lang.String)!fileNameCALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java5C 5(K2œ
jorg.jabref.logic.importer.fileformat.RepecNepImporterTest.isNotRecognizedFormat(java.lang.String)!fileName	PARAMETERV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java4- 4(52k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java4 4(ì
jorg.jabref.logic.importer.fileformat.RepecNepImporterTest.isNotRecognizedFormat(java.lang.String)!fileName	PARAMETERV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java4- 4(5"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java4& 4(,™
Yorg.jabref.logic.importer.fileformat.RepecNepImporterTest.importEntries(java.lang.String)METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java: :("
isFinalfalse"©
declarationStringì <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntries</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntries2Ú
ëorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java; ;(,2≤
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java;- ;(92¬
borg.jabref.logic.importer.fileformat.RepecNepImporterTest.importEntries(java.lang.String)!fileNameCALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java;; ;(C2±
Qorg.jabref.logic.importer.fileformat.RepecNepImporterTest?FILE_ENDING@21.32:21.43CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java;E ;(P2«
borg.jabref.logic.importer.fileformat.RepecNepImporterTest.importEntries(java.lang.String)!fileName	PARAMETERV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java:% :(-2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java: :(ã
borg.jabref.logic.importer.fileformat.RepecNepImporterTest.importEntries(java.lang.String)!fileName	PARAMETERV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java:% :(-"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java: :($±
Iorg.jabref.logic.importer.fileformat.RepecNepImporterTest.getFormatName()METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java? ?(#"
isFinaltrue"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">final </mark><mark class="modifier">void</mark> <mark class="method">getFormatName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFormatName2ü
?org.jabref.logic.importer.fileformat.RepecNepImporter.getName()CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java@E @(L2≤
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java@8 @(D2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java? ?(†
Dorg.jabref.logic.importer.fileformat.RepecNepImporterTest.getCliId()METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaD D("
isFinaltrue"“
declarationStringº<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">final </mark><mark class="modifier">void</mark> <mark class="method">getCliId</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getCliId2ù
=org.jabref.logic.importer.fileformat.RepecNepImporter.getId()CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaE. E(32≤
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaE! E(-2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaD D(è
Horg.jabref.logic.importer.fileformat.RepecNepImporterTest.getExtension()METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaI I("
isFinalfalse"≤
declarationStringú<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getExtension</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getExtension2£
Corg.jabref.logic.importer.fileformat.RepecNepImporter.getFileType()CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaJ8 J(C2≤
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaJ+ J(72k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaI I(ª
Jorg.jabref.logic.importer.fileformat.RepecNepImporterTest.getDescription()METHODV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaN N($"
isFinaltrue"ÿ
declarationString¬<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">final </mark><mark class="modifier">void</mark> <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getDescription2¶
Forg.jabref.logic.importer.fileformat.RepecNepImporter.getDescription()CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaP P(+2≤
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaP P(2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.javaN N(º
Qorg.jabref.logic.importer.fileformat.RepecNepImporterTest?FILE_ENDING@21.32:21.43VALUEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java  (+"
isFinaltrue"
typeString"¬
declarationString¨<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FILE_ENDING</mark> = ".txt";"
isStatictrue"
accessprivate*FILE_ENDING2p
java.lang.StringTYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java (©
Rorg.jabref.logic.importer.fileformat.RepecNepImporterTest?testImporter@23.29:23.41VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java ()"
isFinalfalse"
typeRepecNepImporter"y
declarationStringd<mark class="modifier">private </mark>RepecNepImporter <mark class="class-field">testImporter</mark>"
isStaticfalse"
accessprivate*testImporter2ï
5org.jabref.logic.importer.fileformat.RepecNepImporterTYPEV
Lsrc\test\java\org\jabref\logic\importer\fileformat\RepecNepImporterTest.java (