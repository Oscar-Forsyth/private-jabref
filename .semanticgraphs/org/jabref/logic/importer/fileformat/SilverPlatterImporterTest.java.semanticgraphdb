
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java‰
>org.jabref.logic.importer.fileformat.SilverPlatterImporterTestCLASS[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"q
declarationString\<mark class="modifier"> </mark><mark class="modifier">class </mark>SilverPlatterImporterTest"
accesspackage_private*SilverPlatterImporterTest2≤
Forg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.setUp()DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java	 (2∂
Jorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java" (+2Ω
Qorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.invalidFileNames()DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java "  (22œ
corg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isRecognizedFormat(java.lang.String)DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java'	 '(2“
forg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isNotRecognizedFormat(java.lang.String)DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java-	 -(2 
^org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.importEntries(java.lang.String)DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java3	 3(2ª
Oorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.sGetExtensions()DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java8	 8(2ª
Oorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.getDescription()DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java=	 =(2¬
Vorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?FILE_ENDING@18.32:18.43DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java  (+2√
Worg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?testImporter@20.21:20.33DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (!˝
Forg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.setUp()METHOD[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java	 ("
isFinalfalse"¯
declarationString‚<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2∑
Rorg.jabref.logic.importer.fileformat.SilverPlatterImporter.SilverPlatterImporter()CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (02º
Worg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?testImporter@20.21:20.33CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (…
Jorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()METHOD[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java" (+"
isFinalfalse"Ï
declarationString÷<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">fileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*	fileNames2í
-java.lang.String.startsWith(java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java2 (<2ê
+java.lang.String.endsWith(java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.javab (j2Ç
java.util.Collection.stream()CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java9 (?2Ÿ
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java" (.2¿
[org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()?name@28.37:28.41CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java- (12¿
[org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()?name@28.37:28.41CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java] (a2ª
Vorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?FILE_ENDING@18.32:18.43CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.javak (v2ƒ
_org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()?fileName@28.26:28.34CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java/ (72À
_org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()?fileName@28.26:28.34DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java ("2«
[org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()?name@28.37:28.41DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java% ()2É
java.util.stream.StreamRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (2Ö
java.lang.StringRETURN_TYPE_ARGUMENT[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java ( ∑
_org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()?fileName@28.26:28.34VARIABLE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (""
typePredicate<String>"
isFinalfalse"≈
declarationStringØ<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> name.startsWith("SilverPlatterImporterTest") && name.endsWith(FILE_ENDING)*fileName2Å
java.util.function.PredicateTYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (2~
java.lang.StringTYPE_ARGUMENT[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (2í
-java.lang.String.startsWith(java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java2 (<2ê
+java.lang.String.endsWith(java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.javab (j2¿
[org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()?name@28.37:28.41CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java- (12¿
[org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()?name@28.37:28.41CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java] (a2ª
Vorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?FILE_ENDING@18.32:18.43CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.javak (và
[org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.fileNames()?name@28.37:28.41VARIABLE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java% ()"
type"
isFinalfalse"
declarationString name*name2TYPEÊ
Qorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.invalidFileNames()METHOD[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java "  (2"
isFinalfalse"Û
declarationString›<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">invalidFileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*invalidFileNames2í
-java.lang.String.startsWith(java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java!3 !(=2Ç
java.util.Collection.stream()CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java"9 "(?2Ÿ
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java"" "(.2«
borg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.invalidFileNames()?name@33.37:33.41CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java!. !(22À
forg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.invalidFileNames()?fileName@33.26:33.34CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java"/ "(72“
forg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.invalidFileNames()?fileName@33.26:33.34DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java! !("2Œ
borg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.invalidFileNames()?name@33.37:33.41DECLARATION[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java!% !()2É
java.util.stream.StreamRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java   (2Ö
java.lang.StringRETURN_TYPE_ARGUMENT[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java   ( î
forg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.invalidFileNames()?fileName@33.26:33.34VARIABLE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java! !(""
typePredicate<String>"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> !name.startsWith("SilverPlatterImporterTest")*fileName2Å
java.util.function.PredicateTYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java! !(2~
java.lang.StringTYPE_ARGUMENT[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java! !(2í
-java.lang.String.startsWith(java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java!3 !(=2«
borg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.invalidFileNames()?name@33.37:33.41CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java!. !(2è
borg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.invalidFileNames()?name@33.37:33.41VARIABLE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java!% !()"
type"
isFinalfalse"
declarationString name*name2TYPEπ
corg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isRecognizedFormat(java.lang.String)METHOD[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java'	 '("
isFinalfalse"™
declarationStringî <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormat</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*isRecognizedFormat2Í
Ñorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java( ((12º
Worg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?testImporter@20.21:20.33CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java(2 ((>2—
lorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isRecognizedFormat(java.lang.String)!fileNameCALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java(@ ((H2÷
lorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETER[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java'# '(+2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java' '(ü
lorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETER[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java'# '(+"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2u
java.lang.StringTYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java' '("“
forg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isNotRecognizedFormat(java.lang.String)METHOD[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java-	 -("
isFinalfalse"¥
declarationStringû <br><mark class="annotation">@MethodSource("invalidFileNames")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">isNotRecognizedFormat</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*isNotRecognizedFormat2Ì
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java. .(42º
Worg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?testImporter@20.21:20.33CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java.5 .(A2‘
oorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isNotRecognizedFormat(java.lang.String)!fileNameCALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java.C .(K2Ÿ
oorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isNotRecognizedFormat(java.lang.String)!fileName	PARAMETER[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java-& -(.2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java- -(¢
oorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.isNotRecognizedFormat(java.lang.String)!fileName	PARAMETER[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java-& -(."
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2u
java.lang.StringTYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java- -(%È
^org.jabref.logic.importer.fileformat.SilverPlatterImporterTest.importEntries(java.lang.String)METHOD[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java3	 3("
isFinalfalse"£
declarationStringç <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">importEntries</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*importEntries2˜
ëorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java4 4(,2º
Worg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?testImporter@20.21:20.33CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java4- 4(92Ã
gorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.importEntries(java.lang.String)!fileNameCALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java4; 4(C2ª
Vorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?FILE_ENDING@18.32:18.43CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java4E 4(P2—
gorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.importEntries(java.lang.String)!fileName	PARAMETER[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java3 3(&2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java3 3(ö
gorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.importEntries(java.lang.String)!fileName	PARAMETER[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java3 3(&"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2u
java.lang.StringTYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java3 3(£
Oorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.sGetExtensions()METHOD[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java8	 8("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">sGetExtensions</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*sGetExtensions2ï
0org.jabref.logic.importer.Importer.getFileType()CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java9C 9(N2º
Worg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?testImporter@20.21:20.33CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java96 9(B2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java8 8(¶
Oorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest.getDescription()METHOD[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java=	 =("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getDescription2ò
3org.jabref.logic.importer.Importer.getDescription()CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java>L >(Z2º
Worg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?testImporter@20.21:20.33CALL[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java>? >(K2p
voidRETURN_TYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java= =(À
Vorg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?FILE_ENDING@18.32:18.43VALUE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java  (+"
isFinaltrue"
typeString"¬
declarationString¨<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FILE_ENDING</mark> = ".txt";"
isStatictrue"
accessprivate*FILE_ENDING2u
java.lang.StringTYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (ï
Worg.jabref.logic.importer.fileformat.SilverPlatterImporterTest?testImporter@20.21:20.33VARIABLE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (!"
isFinalfalse"
typeImporter"q
declarationString\<mark class="modifier">private </mark>Importer <mark class="class-field">testImporter</mark>"
isStaticfalse"
accessprivate*testImporter2á
"org.jabref.logic.importer.ImporterTYPE[
Qsrc\test\java\org\jabref\logic\importer\fileformat\SilverPlatterImporterTest.java (