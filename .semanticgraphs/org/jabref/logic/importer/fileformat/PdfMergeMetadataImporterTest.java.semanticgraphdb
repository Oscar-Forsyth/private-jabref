
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java†
Aorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTestCLASS^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java (""/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"¶
declarationStringê<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>PdfMergeMetadataImporterTest"
accesspackage_private*PdfMergeMetadataImporterTest2∏
Iorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java!	 !(2¡
Rorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.sGetExtensions()DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java.	 .(2¡
Rorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.getDescription()DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java3	 3(2Õ
^org.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.doesNotHandleEncryptedPdfs()DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java9	 9(#2»
Yorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaA	 A(2≈
Vorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest?importer@30.37:30.45DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java% (-î
Iorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()METHOD^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java!	 !("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2≠
Eorg.jabref.logic.importer.fetcher.GrobidPreferences.isGrobidEnabled()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java# #(.2™
Borg.jabref.logic.importer.fetcher.GrobidPreferences.getGrobidURL()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java$ $(+2œ
gorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?grobidPreferences@34.26:34.43CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java# #(2œ
gorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?grobidPreferences@34.26:34.43CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java$ $(2’
morg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?importFormatPreferences@38.32:38.55CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java' '($2’
morg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?importFormatPreferences@38.32:38.55CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java( (($2œ
gorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?grobidPreferences@34.26:34.43CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java(E ((V2æ
Vorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest?importer@30.37:30.45CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java* *(2’
morg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?importFormatPreferences@38.32:38.55CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java*0 *(G2÷
gorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?grobidPreferences@34.26:34.43DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java" "(+2‹
morg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?importFormatPreferences@38.32:38.55DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java&  &(72s
voidRETURN_TYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java! !(È
gorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?grobidPreferences@34.26:34.43VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java" "(+"
typeGrobidPreferences"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>GrobidPreferences <mark class="class-field">grobidPreferences</mark> = mock(GrobidPreferences.class, Answers.RETURNS_DEEP_STUBS)*grobidPreferences2õ
3org.jabref.logic.importer.fetcher.GrobidPreferencesTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java" "(
morg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.setUp()?importFormatPreferences@38.32:38.55VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java&  &(7"
typeImportFormatPreferences"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark> = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS)*importFormatPreferences2
ImportFormatPreferencesTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java& &(Ã
Rorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.sGetExtensions()METHOD^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java.	 .("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">sGetExtensions</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*sGetExtensions2≥
Korg.jabref.logic.importer.fileformat.PdfMergeMetadataImporter.getFileType()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java/4 /(?2æ
Vorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest?importer@30.37:30.45CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java/+ /(32s
voidRETURN_TYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java. .(œ
Rorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.getDescription()METHOD^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java3	 3("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getDescription2∂
Norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporter.getDescription()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java5 5(,2æ
Vorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest?importer@30.37:30.45CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java5 5(2s
voidRETURN_TYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java3 3(∏
^org.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.doesNotHandleEncryptedPdfs()METHOD^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java9	 9(#"
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">doesNotHandleEncryptedPdfs</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*doesNotHandleEncryptedPdfs2ã
#java.nio.file.Path.of(java.net.URI)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java: :(2|
java.net.URL.toURI()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java:^ :(c2ï
-java.lang.Class.getResource(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java:; :(F2ö
2org.jabref.model.database.BibDatabase.getEntries()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;L ;(V2ú
4org.jabref.logic.importer.ParserResult.getDatabase()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;> ;(I2»
`org.jabref.logic.importer.fileformat.PdfMergeMetadataImporter.importDatabase(java.nio.file.Path)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;) ;(72â
!java.util.Collections.emptyList()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java<! <(*2æ
Vorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest?importer@30.37:30.45CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;  ;((2◊
oorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.doesNotHandleEncryptedPdfs()?file@58.13:58.17CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;8 ;(<2Ÿ
qorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.doesNotHandleEncryptedPdfs()?result@59.23:59.29CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java<. <(42ﬁ
oorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.doesNotHandleEncryptedPdfs()?file@58.13:58.17DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java: :(2‡
qorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.doesNotHandleEncryptedPdfs()?result@59.23:59.29DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java; ;(2s
voidRETURN_TYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java9 9(ÿ
oorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.doesNotHandleEncryptedPdfs()?file@58.13:58.17VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java: :("
typePath"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(PdfMergeMetadataImporter.class.getResource("/pdfs/encrypted.pdf").toURI())*file2z
java.nio.file.PathTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java: :(2ã
#java.nio.file.Path.of(java.net.URI)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java: :(2|
java.net.URL.toURI()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java:^ :(c2ï
-java.lang.Class.getResource(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java:; :(FÂ
qorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.doesNotHandleEncryptedPdfs()?result@59.23:59.29VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java; ;("
typeList<BibEntry>"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = importer.importDatabase(file).getDatabase().getEntries()*result2v
java.util.ListTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java; ;(2ê
org.jabref.model.entry.BibEntryTYPE_ARGUMENT^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java; ;(2ö
2org.jabref.model.database.BibDatabase.getEntries()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;L ;(V2ú
4org.jabref.logic.importer.ParserResult.getDatabase()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;> ;(I2»
`org.jabref.logic.importer.fileformat.PdfMergeMetadataImporter.importDatabase(java.nio.file.Path)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;) ;(72æ
Vorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest?importer@30.37:30.45CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;  ;((2◊
oorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.doesNotHandleEncryptedPdfs()?file@58.13:58.17CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java;8 ;(<≥T
Yorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()METHOD^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaA	 A("
isFinalfalse"Ã
declarationString∂ <br><mark class="annotation">@Disabled("Switch</mark> from ottobib to OpenLibraryFetcher changed the results") <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">importWorksAsExpected</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*importWorksAsExpected2ã
#java.nio.file.Path.of(java.net.URI)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaB B(2|
java.net.URL.toURI()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaB` B(e2ï
-java.lang.Class.getResource(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaB? B(J2ö
2org.jabref.model.database.BibDatabase.getEntries()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaCL C(V2ú
4org.jabref.logic.importer.ParserResult.getDatabase()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC> C(I2»
`org.jabref.logic.importer.fileformat.PdfMergeMetadataImporter.importDatabase(java.nio.file.Path)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC) C(72®
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaG G(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaH H(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaI I(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaJ J(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaK K(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaL L(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaM M(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaP P(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaQ Q(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaR R(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaS S(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaV V(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaY Y(2∆
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaZ Z(2√
[org.jabref.model.entry.BibEntry.setFiles(java.util.List<org.jabref.model.entry.LinkedFile>)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java] ](2|
java.util.List.of(E)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java] ](!2ã
#java.nio.file.Path.toAbsolutePath()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java]: ](H2ò
0org.jabref.logic.util.StandardFileType.getName()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java]a ](h2é
&java.util.Collections.singletonList(T)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java_! _(.2∏
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaF  F((2∞
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaQ Q(*2Ã
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java]& ](02æ
Vorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest?importer@30.37:30.45CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC  C((2“
jorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?file@66.13:66.17CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC8 C(<2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaG G(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaH H(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaI I(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaJ J(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaK K(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaL L(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaM M(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaP P(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaQ Q(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaR R(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaS S(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaV V(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaY Y(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaZ Z(2÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java] ](2“
jorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?file@66.13:66.17CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java]5 ](92÷
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java_/ _(72‘
lorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?result@67.23:67.29CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java_: _(@2Ÿ
jorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?file@66.13:66.17DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaB B(2€
lorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?result@67.23:67.29DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC C(2›
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25DECLARATION^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaF F(2s
voidRETURN_TYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaA A(’
jorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?file@66.13:66.17VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaB B("
typePath"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(PdfMergeMetadataImporterTest.class.getResource("mixedMetadata.pdf").toURI())*file2z
java.nio.file.PathTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaB B(2ã
#java.nio.file.Path.of(java.net.URI)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaB B(2|
java.net.URL.toURI()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaB` B(e2ï
-java.lang.Class.getResource(java.lang.String)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaB? B(J€
lorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?result@67.23:67.29VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC C("
typeList<BibEntry>"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = importer.importDatabase(file).getDatabase().getEntries()*result2v
java.util.ListTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC C(2ê
org.jabref.model.entry.BibEntryTYPE_ARGUMENT^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC C(2ö
2org.jabref.model.database.BibDatabase.getEntries()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaCL C(V2ú
4org.jabref.logic.importer.ParserResult.getDatabase()CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC> C(I2»
`org.jabref.logic.importer.fileformat.PdfMergeMetadataImporter.importDatabase(java.nio.file.Path)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC) C(72æ
Vorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest?importer@30.37:30.45CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC  C((2“
jorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?file@66.13:66.17CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaC8 C(<›
norg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest.importWorksAsExpected()?expected@70.17:70.25VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaF F("
typeBibEntry"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Book)*expected2á
org.jabref.model.entry.BibEntryTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaF F(2∏
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALL^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.javaF  F((Õ
Vorg.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTest?importer@30.37:30.45VARIABLE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java% (-"
isFinalfalse" 
typePdfMergeMetadataImporter"}
declarationStringh<mark class="modifier">private </mark>PdfMergeMetadataImporter <mark class="class-field">importer</mark>"
isStaticfalse"
accessprivate*importer2•
=org.jabref.logic.importer.fileformat.PdfMergeMetadataImporterTYPE^
Tsrc\test\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporterTest.java ($