
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java°
7org.jabref.logic.importer.fileformat.InspecImporterTestCLASST
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"p
declarationString[<mark class="modifier">public </mark><mark class="modifier">class </mark>InspecImporterTest"
accesspublic*InspecImporterTest2®
Corg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java" (+2±
Lorg.jabref.logic.importer.fileformat.InspecImporterTest.nonInspecfileNames()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java$" $(42§
?org.jabref.logic.importer.fileformat.InspecImporterTest.setUp()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java* *(2«
borg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatAccept(java.lang.String)DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java0 0((2«
borg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatReject(java.lang.String)DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java6 6((2∆
aorg.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java; ;(72∆
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaK K(72≤
Morg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaZ Z(#2¨
Gorg.jabref.logic.importer.fileformat.InspecImporterTest.getFormatName()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javak k(2ß
Borg.jabref.logic.importer.fileformat.InspecImporterTest.getCLIId()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javap p(2≠
Horg.jabref.logic.importer.fileformat.InspecImporterTest.sGetExtensions()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javau u(2≠
Horg.jabref.logic.importer.fileformat.InspecImporterTest.getDescription()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaz z(2¥
Oorg.jabref.logic.importer.fileformat.InspecImporterTest?FILE_ENDING@26.32:26.43DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java  (+2±
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (#Å
Corg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java" (+"
isFinalfalse"Ï
declarationString÷<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">fileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*	fileNames2ã
-java.lang.String.startsWith(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java2 (<2è
1java.lang.String.contains(java.lang.CharSequence)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (!2â
+java.lang.String.endsWith(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java   ( 2{
java.util.Collection.stream()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java!9 !(?2“
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java!" !(.2≤
Torg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?name@30.37:30.41CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java- (12≤
Torg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?name@30.37:30.41CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (2≤
Torg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?name@30.37:30.41CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java   (2≠
Oorg.jabref.logic.importer.fileformat.InspecImporterTest?FILE_ENDING@26.32:26.43CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java !  (,2∂
Xorg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?fileName@30.26:30.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java!/ !(72Ω
Xorg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?fileName@30.26:30.34DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java ("2π
Torg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?name@30.37:30.41DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java% ()2|
java.util.stream.StreamRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (2~
java.lang.StringRETURN_TYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java ( ª
Xorg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?fileName@30.26:30.34VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (""
typePredicate<String>"
isFinalfalse"◊
declarationString¡<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> name.startsWith("InspecImportTest") && !name.contains("False") && name.endsWith(FILE_ENDING)*fileName2z
java.util.function.PredicateTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (2w
java.lang.StringTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (2ã
-java.lang.String.startsWith(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java2 (<2è
1java.lang.String.contains(java.lang.CharSequence)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (!2â
+java.lang.String.endsWith(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java   ( 2≤
Torg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?name@30.37:30.41CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java- (12≤
Torg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?name@30.37:30.41CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (2≤
Torg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?name@30.37:30.41CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java   (2≠
Oorg.jabref.logic.importer.fileformat.InspecImporterTest?FILE_ENDING@26.32:26.43CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java !  (,˙
Torg.jabref.logic.importer.fileformat.InspecImporterTest.fileNames()?name@30.37:30.41VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java% ()"
type"
isFinalfalse"
declarationString name*name2TYPEà
Lorg.jabref.logic.importer.fileformat.InspecImporterTest.nonInspecfileNames()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java$" $(4"
isFinalfalse"ı
declarationStringﬂ<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">nonInspecfileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*nonInspecfileNames2ã
-java.lang.String.startsWith(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java%3 %(=2{
java.util.Collection.stream()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java&9 &(?2“
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java&" &(.2ª
]org.jabref.logic.importer.fileformat.InspecImporterTest.nonInspecfileNames()?name@37.37:37.41CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java%. %(22ø
aorg.jabref.logic.importer.fileformat.InspecImporterTest.nonInspecfileNames()?fileName@37.26:37.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java&/ &(72∆
aorg.jabref.logic.importer.fileformat.InspecImporterTest.nonInspecfileNames()?fileName@37.26:37.34DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java% %("2¬
]org.jabref.logic.importer.fileformat.InspecImporterTest.nonInspecfileNames()?name@37.37:37.41DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java%% %()2|
java.util.stream.StreamRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java$ $(2~
java.lang.StringRETURN_TYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java$ $( ›
aorg.jabref.logic.importer.fileformat.InspecImporterTest.nonInspecfileNames()?fileName@37.26:37.34VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java% %(""
typePredicate<String>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> !name.startsWith("InspecImportTest")*fileName2z
java.util.function.PredicateTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java% %(2w
java.lang.StringTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java% %(2ã
-java.lang.String.startsWith(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java%3 %(=2ª
]org.jabref.logic.importer.fileformat.InspecImporterTest.nonInspecfileNames()?name@37.37:37.41CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java%. %(2É
]org.jabref.logic.importer.fileformat.InspecImporterTest.nonInspecfileNames()?name@37.37:37.41VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java%% %()"
type"
isFinalfalse"
declarationString name*name2TYPEæ
?org.jabref.logic.importer.fileformat.InspecImporterTest.setUp()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java* *("
isFinalfalse"˛
declarationStringË<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2¢
Dorg.jabref.logic.importer.fileformat.InspecImporter.InspecImporter()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java+ +(*2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java+ +(2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java* *(ä
borg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatAccept(java.lang.String)METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java0 0(("
isFinalfalse"∂
declarationString† <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormatAccept</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormatAccept2„
Ñorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java1 1(12™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java12 1(:2…
korg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatAccept(java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java1< 1(D2Œ
korg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatAccept(java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java00 0(82i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java0 0(ê
korg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatAccept(java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java00 0(8"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java0) 0(/ñ
borg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatReject(java.lang.String)METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java6 6(("
isFinalfalse"ø
declarationString© <br><mark class="annotation">@MethodSource("nonInspecfileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormatReject</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormatReject2Ê
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java7 7(42™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java75 7(=2…
korg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatReject(java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java7? 7(G2Œ
korg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatReject(java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java60 6(82i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java6 6(ê
korg.jabref.logic.importer.fileformat.InspecImporterTest.isRecognizedFormatReject(java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java60 6(8"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java6) 6(/†*
aorg.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java; ;(7"
isFinalfalse"Ï
declarationString÷<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">completeBibtexEntryOnJournalPaperImport</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*'completeBibtexEntryOnJournalPaperImport2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java= =(2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java> >(2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java? ?(2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java@ @(2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaA A(2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaB B(2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaC C(2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaD D(2ı
ñorg.jabref.logic.bibtex.BibEntryAssert.assertEquals(java.util.List<org.jabref.model.entry.BibEntry>, java.net.URL, org.jabref.logic.importer.Importer)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaF F(#2Ñ
&java.util.Collections.singletonList(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaF0 F(=2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaG) G(42Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java<% <(-2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java= =(2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java> >(2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java? ?(2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java@ @(2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaA A(2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaB B(2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaC C(2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaD D(2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaF> F(K2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaGO G(W2‡
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java< <(2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java; ;(Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.completeBibtexEntryOnJournalPaperImport()?expectedEntry@60.17:60.30VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java< <("
typeBibEntry"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntry</mark> = new BibEntry(StandardEntryType.Article)*expectedEntry2}
org.jabref.model.entry.BibEntryTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java< <(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java<% <(-µ 
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaK K(7"
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importConferencePaperGivesInproceedings</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*'importConferencePaperGivesInproceedings2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaQ Q(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaTS T(]2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaTE T(P2∏
Zorg.jabref.logic.importer.fileformat.InspecImporter.importDatabase(java.io.BufferedReader)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT. T(<2Ñ
&java.util.Collections.singletonList(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaU% U(22Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaP% P(-2ì
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaS) S(72ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaS< S(H2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?expectedEntry@80.17:80.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaQ Q(2’
worg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?testInput@76.15:76.24CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaSI S(R2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT% T(-2“
torg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?reader@83.28:83.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT= T(C2Ÿ
{org.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?expectedEntry@80.17:80.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaU3 U(@2”
uorg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?entries@84.27:84.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaUC U(J2‹
worg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?testInput@76.15:76.24DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaL L(2‡
{org.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?expectedEntry@80.17:80.30DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaP P(2Ÿ
torg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?reader@83.28:83.34DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaS S("2⁄
uorg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?entries@84.27:84.34DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT T("2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaK K(±
worg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?testInput@76.15:76.24VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaL L("
typeString"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>String <mark class="class-field">testInput</mark> = "Record.*INSPEC.*\n" + "\n" + "RT ~ Conference-Paper\n" + "AU ~ Prechelt, Lutz"*	testInput2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaL L(ﬂ
{org.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?expectedEntry@80.17:80.30VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaP P("
typeBibEntry"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntry</mark> = new BibEntry(StandardEntryType.InProceedings)*expectedEntry2}
org.jabref.model.entry.BibEntryTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaP P(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaP% P(-†
torg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?reader@83.28:83.34VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaS S(""
typeBufferedReader"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>BufferedReader <mark class="class-field">reader</mark> = new BufferedReader(new StringReader(testInput))*reader2t
java.io.BufferedReaderTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaS S(2ì
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaS) S(72ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaS< S(H2’
worg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?testInput@76.15:76.24CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaSI S(Rí
uorg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?entries@84.27:84.34VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT T(""
typeList<BibEntry>"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = importer.importDatabase(reader).getDatabase().getEntries()*entries2l
java.util.ListTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT T(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT T(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaTS T(]2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaTE T(P2∏
Zorg.jabref.logic.importer.fileformat.InspecImporter.importDatabase(java.io.BufferedReader)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT. T(<2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT% T(-2“
torg.jabref.logic.importer.fileformat.InspecImporterTest.importConferencePaperGivesInproceedings()?reader@83.28:83.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaT= T(CÄ#
Morg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaZ Z(#"
isFinalfalse"à
declarationStringÚ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importMiscGivesMisc</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importMiscGivesMisc2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java` `(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javacS c(]2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javacE c(P2∏
Zorg.jabref.logic.importer.fileformat.InspecImporter.importDatabase(java.io.BufferedReader)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac. c(<2s
java.util.List.size()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javad$ d((2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java_% _(-2ì
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javab) b(72ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javab< b(H2≈
gorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?expectedEntry@95.17:95.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java` `(2¡
corg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?testInput@91.15:91.24CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javabI b(R2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac% c(-2æ
`org.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?reader@98.28:98.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac= c(C2ø
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?entries@99.27:99.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javad d(#2ø
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?entries@99.27:99.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javae e($2≈
gorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?expectedEntry@95.17:95.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaf f(&2ø
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?entry@101.21:101.26CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaf( f(-2»
corg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?testInput@91.15:91.24DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java[ [(2Ã
gorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?expectedEntry@95.17:95.30DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java_ _(2≈
`org.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?reader@98.28:98.34DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javab b("2∆
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?entries@99.27:99.34DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac c("2∆
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?entry@101.21:101.26DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javae e(2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaZ Z(í
corg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?testInput@91.15:91.24VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java[ [("
typeString"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>String <mark class="class-field">testInput</mark> = "Record.*INSPEC.*\n" + "\n" + "AU ~ Prechelt, Lutz \n" + "RT ~ Misc"*	testInput2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java[ [(¡
gorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?expectedEntry@95.17:95.30VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java_ _("
typeBibEntry"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntry</mark> = new BibEntry(StandardEntryType.Misc)*expectedEntry2}
org.jabref.model.entry.BibEntryTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java_ _(2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java_% _(-¯
`org.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?reader@98.28:98.34VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javab b(""
typeBufferedReader"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>BufferedReader <mark class="class-field">reader</mark> = new BufferedReader(new StringReader(testInput))*reader2t
java.io.BufferedReaderTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javab b(2ì
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javab) b(72ë
3java.io.StringReader.StringReader(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javab< b(H2¡
corg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?testInput@91.15:91.24CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javabI b(RÍ
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?entries@99.27:99.34VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac c(""
typeList<BibEntry>"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = importer.importDatabase(reader).getDatabase().getEntries()*entries2l
java.util.ListTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac c(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac c(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javacS c(]2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javacE c(P2∏
Zorg.jabref.logic.importer.fileformat.InspecImporter.importDatabase(java.io.BufferedReader)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac. c(<2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac% c(-2æ
`org.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?reader@98.28:98.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javac= c(C©
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?entry@101.21:101.26VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javae e("
typeBibEntry"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.getFirst()*entry2}
org.jabref.model.entry.BibEntryTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javae e(2ø
aorg.jabref.logic.importer.fileformat.InspecImporterTest.importMiscGivesMisc()?entries@99.27:99.34CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javae e($¸
Gorg.jabref.logic.importer.fileformat.InspecImporterTest.getFormatName()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javak k("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFormatName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFormatName2õ
=org.jabref.logic.importer.fileformat.InspecImporter.getName()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javal( l(/2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javal l('2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javak k(⁄
Borg.jabref.logic.importer.fileformat.InspecImporterTest.getCLIId()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javap p("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getCLIId</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getCLIId2à
*org.jabref.logic.importer.Importer.getId()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaq( q(-2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaq q('2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javap p(É
Horg.jabref.logic.importer.fileformat.InspecImporterTest.sGetExtensions()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javau u("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sGetExtensions</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*sGetExtensions2ü
Aorg.jabref.logic.importer.fileformat.InspecImporter.getFileType()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javav4 v(?2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javav+ v(32i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javau u(Ü
Horg.jabref.logic.importer.fileformat.InspecImporterTest.getDescription()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaz z("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getDescription2¢
Dorg.jabref.logic.importer.fileformat.InspecImporter.getDescription()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java{9 {(G2™
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java{0 {(82i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.javaz z(∂
Oorg.jabref.logic.importer.fileformat.InspecImporterTest?FILE_ENDING@26.32:26.43VALUET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java  (+"
isFinaltrue"
typeString"¬
declarationString¨<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FILE_ENDING</mark> = ".txt";"
isStatictrue"
accessprivate*FILE_ENDING2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (ë
Lorg.jabref.logic.importer.fileformat.InspecImporterTest?importer@27.27:27.35VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (#"
isFinalfalse"
typeInspecImporter"s
declarationString^<mark class="modifier">private </mark>InspecImporter <mark class="class-field">importer</mark>"
isStaticfalse"
accessprivate*importer2ë
3org.jabref.logic.importer.fileformat.InspecImporterTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\InspecImporterTest.java (