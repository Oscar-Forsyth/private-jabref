
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.javaµ
=org.jabref.logic.importer.fileformat.MedlineImporterFilesTestCLASSZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java	 	(%"/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"v
declarationStringa<mark class="modifier">public </mark><mark class="modifier">class </mark>MedlineImporterFilesTest"
accesspublic*MedlineImporterFilesTest2¥
Iorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" (+2ª
Porg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.invalidFileNames()DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" (22Õ
borg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isRecognizedFormat(java.lang.String)DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java ("2–
eorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isNotRecognizedFormat(java.lang.String)DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" "(%2»
]org.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importEntries(java.lang.String)DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java( ((2Ω
Rorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java," ,(42Œ
corg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importMalfomedFiles(java.lang.String)DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java4 4(#2¿
Uorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest?FILE_ENDING@11.32:11.43DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java  (+2«
\org.jabref.logic.importer.fileformat.MedlineImporterFilesTest?MALFORMED_KEY_WORD@13.32:13.50DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java  (2—
Iorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()METHODZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" (+"
isFinalfalse"Ï
declarationString÷<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">fileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*	fileNames2ë
-java.lang.String.startsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java2 (<2è
+java.lang.String.endsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java\ (d2ï
1java.lang.String.contains(java.lang.CharSequence)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (!2Å
java.util.Collection.stream()CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java9 (?2ÿ
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" (.2æ
Zorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?name@16.37:16.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java- (12æ
Zorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?name@16.37:16.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.javaW ([2π
Uorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest?FILE_ENDING@11.32:11.43CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.javae (p2æ
Zorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?name@16.37:16.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (2¿
\org.jabref.logic.importer.fileformat.MedlineImporterFilesTest?MALFORMED_KEY_WORD@13.32:13.50CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" (42¬
^org.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?fileName@16.26:16.34CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java/ (72…
^org.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?fileName@16.26:16.34DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java ("2≈
Zorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?name@16.37:16.41DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java% ()2Ç
java.util.stream.StreamRETURN_TYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (2Ñ
java.lang.StringRETURN_TYPE_ARGUMENTZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java ( Á
^org.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?fileName@16.26:16.34VARIABLEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (""
typePredicate<String>"
isFinalfalse"Â
declarationStringœ<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> name.startsWith("MedlineImporterTest") && name.endsWith(FILE_ENDING) && !name.contains(MALFORMED_KEY_WORD)*fileName2Ä
java.util.function.PredicateTYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (2}
java.lang.StringTYPE_ARGUMENTZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (2ë
-java.lang.String.startsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java2 (<2è
+java.lang.String.endsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java\ (d2ï
1java.lang.String.contains(java.lang.CharSequence)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (!2æ
Zorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?name@16.37:16.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java- (12æ
Zorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?name@16.37:16.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.javaW ([2π
Uorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest?FILE_ENDING@11.32:11.43CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.javae (p2æ
Zorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?name@16.37:16.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (2¿
\org.jabref.logic.importer.fileformat.MedlineImporterFilesTest?MALFORMED_KEY_WORD@13.32:13.50CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" (4Ü
Zorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.fileNames()?name@16.37:16.41VARIABLEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java% ()"
type"
isFinalfalse"
declarationString name*name2TYPE◊
Porg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.invalidFileNames()METHODZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" (2"
isFinalfalse"Û
declarationString›<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">invalidFileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*invalidFileNames2ë
-java.lang.String.startsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java3 (=2Å
java.util.Collection.stream()CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java9 (?2ÿ
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" (.2≈
aorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.invalidFileNames()?name@22.37:22.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java. (22…
eorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.invalidFileNames()?fileName@22.26:22.34CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java/ (72–
eorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.invalidFileNames()?fileName@22.26:22.34DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java ("2Ã
aorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.invalidFileNames()?name@22.37:22.41DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java% ()2Ç
java.util.stream.StreamRETURN_TYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (2Ñ
java.lang.StringRETURN_TYPE_ARGUMENTZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java ( á
eorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.invalidFileNames()?fileName@22.26:22.34VARIABLEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (""
typePredicate<String>"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> !name.startsWith("MedlineImporterTest")*fileName2Ä
java.util.function.PredicateTYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (2}
java.lang.StringTYPE_ARGUMENTZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (2ë
-java.lang.String.startsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java3 (=2≈
aorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.invalidFileNames()?name@22.37:22.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java. (2ç
aorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.invalidFileNames()?name@22.37:22.41VARIABLEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java% ()"
type"
isFinalfalse"
declarationString name*name2TYPEú
borg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isRecognizedFormat(java.lang.String)METHODZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (""
isFinalfalse"∞
declarationStringö <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormat</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormat2È
Ñorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (12™
Forg.jabref.logic.importer.fileformat.MedlineImporter.MedlineImporter()CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java6 (E2œ
korg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isRecognizedFormat(java.lang.String)!fileNameCALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.javaI (Q2‘
korg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETERZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java* (22o
voidRETURN_TYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (ú
korg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isRecognizedFormat(java.lang.String)!fileName	PARAMETERZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java* (2"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2t
java.lang.StringTYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java# ()µ
eorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isNotRecognizedFormat(java.lang.String)METHODZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" "(%"
isFinalfalse"∫
declarationString§ <br><mark class="annotation">@MethodSource("invalidFileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isNotRecognizedFormat</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isNotRecognizedFormat2Ï
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java# #(42™
Forg.jabref.logic.importer.fileformat.MedlineImporter.MedlineImporter()CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java#9 #(H2“
norg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isNotRecognizedFormat(java.lang.String)!fileNameCALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java#L #(T2◊
norg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isNotRecognizedFormat(java.lang.String)!fileName	PARAMETERZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java"- "(52o
voidRETURN_TYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java" "(ü
norg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.isNotRecognizedFormat(java.lang.String)!fileName	PARAMETERZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java"- "(5"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2t
java.lang.StringTYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java"& "(, 
]org.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importEntries(java.lang.String)METHODZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java( (("
isFinalfalse"©
declarationStringì <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntries</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntries2ˆ
ëorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java) )(,2™
Forg.jabref.logic.importer.fileformat.MedlineImporter.MedlineImporter()CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java)1 )(@2 
forg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importEntries(java.lang.String)!fileNameCALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java)D )(L2π
Uorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest?FILE_ENDING@11.32:11.43CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java)N )(Y2œ
forg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importEntries(java.lang.String)!fileName	PARAMETERZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java(% ((-2o
voidRETURN_TYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java( ((ó
forg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importEntries(java.lang.String)!fileName	PARAMETERZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java(% ((-"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2t
java.lang.StringTYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java( (($¿
Rorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()METHODZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java," ,(4"
isFinalfalse"ı
declarationStringﬂ<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">malformedFileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*malformedFileNames2ë
-java.lang.String.startsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java-2 -(<2è
+java.lang.String.endsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java. .( 2Å
java.util.Collection.stream()CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java/9 /(?2ÿ
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java/" /(.2«
corg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()?name@45.37:45.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java-- -(12¿
\org.jabref.logic.importer.fileformat.MedlineImporterFilesTest?MALFORMED_KEY_WORD@13.32:13.50CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java-U -(g2«
corg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()?name@45.37:45.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java. .(2π
Uorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest?FILE_ENDING@11.32:11.43CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java.! .(,2À
gorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()?fileName@45.26:45.34CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java// /(72“
gorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()?fileName@45.26:45.34DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java- -("2Œ
corg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()?name@45.37:45.41DECLARATIONZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java-% -()2Ç
java.util.stream.StreamRETURN_TYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java, ,(2Ñ
java.lang.StringRETURN_TYPE_ARGUMENTZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java, ,( ò
gorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()?fileName@45.26:45.34VARIABLEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java- -(""
typePredicate<String>"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> name.startsWith("MedlineImporterTest" + MALFORMED_KEY_WORD) && name.endsWith(FILE_ENDING)*fileName2Ä
java.util.function.PredicateTYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java- -(2}
java.lang.StringTYPE_ARGUMENTZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java- -(2ë
-java.lang.String.startsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java-2 -(<2è
+java.lang.String.endsWith(java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java. .( 2«
corg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()?name@45.37:45.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java-- -(12¿
\org.jabref.logic.importer.fileformat.MedlineImporterFilesTest?MALFORMED_KEY_WORD@13.32:13.50CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java-U -(g2«
corg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()?name@45.37:45.41CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java. .(2π
Uorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest?FILE_ENDING@11.32:11.43CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java.! .(,è
corg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.malformedFileNames()?name@45.37:45.41VARIABLEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java-% -()"
type"
isFinalfalse"
declarationString name*name2TYPE¨
corg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importMalfomedFiles(java.lang.String)METHODZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java4 4(#"
isFinalfalse"∫
declarationString§ <br><mark class="annotation">@MethodSource("malformedFileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importMalfomedFiles</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importMalfomedFiles2Î
Üorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java5 5(32™
Forg.jabref.logic.importer.fileformat.MedlineImporter.MedlineImporter()CALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java58 5(G2–
lorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importMalfomedFiles(java.lang.String)!fileNameCALLZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java5K 5(S2’
lorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importMalfomedFiles(java.lang.String)!fileName	PARAMETERZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java4+ 4(32o
voidRETURN_TYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java4 4(ù
lorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest.importMalfomedFiles(java.lang.String)!fileName	PARAMETERZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java4+ 4(3"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2t
java.lang.StringTYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java4$ 4(*»
Uorg.jabref.logic.importer.fileformat.MedlineImporterFilesTest?FILE_ENDING@11.32:11.43VALUEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java  (+"
isFinaltrue"
typeString"¬
declarationString¨<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FILE_ENDING</mark> = ".xml";"
isStatictrue"
accessprivate*FILE_ENDING2t
java.lang.StringTYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (‚
\org.jabref.logic.importer.fileformat.MedlineImporterFilesTest?MALFORMED_KEY_WORD@13.32:13.50VALUEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java  (2"
isFinaltrue"
typeString"Œ
declarationString∏<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">MALFORMED_KEY_WORD</mark> = "Malformed";"
isStatictrue"
accessprivate*MALFORMED_KEY_WORD2t
java.lang.StringTYPEZ
Psrc\test\java\org\jabref\logic\importer\fileformat\MedlineImporterFilesTest.java (