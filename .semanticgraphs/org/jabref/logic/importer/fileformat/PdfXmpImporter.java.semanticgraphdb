
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java˜
3org.jabref.logic.importer.fileformat.PdfXmpImporterCLASSP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"ú
declarationStringÜ<mark class="modifier">public </mark><mark class="modifier">class </mark>PdfXmpImporter<mark class="modifier"> extends </mark>Importer"
accesspublic*PdfXmpImporter2»
gorg.jabref.logic.importer.fileformat.PdfXmpImporter.PdfXmpImporter(org.jabref.logic.xmp.XmpPreferences)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java (2û
=org.jabref.logic.importer.fileformat.PdfXmpImporter.getName()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java (2¢
Aorg.jabref.logic.importer.fileformat.PdfXmpImporter.getFileType()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java   ('2ª
Zorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.io.BufferedReader)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java% %(&2µ
Torg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.lang.String)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java- -(&2∑
Vorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.nio.file.Path)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java5 5(&2ø
^org.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.io.BufferedReader)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java? ?(%2ª
Zorg.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.nio.file.Path)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaI I(%2ú
;org.jabref.logic.importer.fileformat.PdfXmpImporter.getId()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaO O(2•
Dorg.jabref.logic.importer.fileformat.PdfXmpImporter.getDescription()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaT T( 2Ø
Norg.jabref.logic.importer.fileformat.PdfXmpImporter?xmpPreferences@20.33:20.47DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java! (/2~
"org.jabref.logic.importer.ImporterEXTENDP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java$ (,À
gorg.jabref.logic.importer.fileformat.PdfXmpImporter.PdfXmpImporter(org.jabref.logic.xmp.XmpPreferences)CONSTRUCTORP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java ("É
declarationStringn<mark class="modifier">public </mark><mark class="method">PdfXmpImporter</mark>(XmpPreferences xmpPreferences)*PdfXmpImporter2–
vorg.jabref.logic.importer.fileformat.PdfXmpImporter.PdfXmpImporter(org.jabref.logic.xmp.XmpPreferences)!xmpPreferencesCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java (,2®
Norg.jabref.logic.importer.fileformat.PdfXmpImporter?xmpPreferences@20.33:20.47CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java (2’
vorg.jabref.logic.importer.fileformat.PdfXmpImporter.PdfXmpImporter(org.jabref.logic.xmp.XmpPreferences)!xmpPreferences	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java) (72î
3org.jabref.logic.importer.fileformat.PdfXmpImporterRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java (¬
vorg.jabref.logic.importer.fileformat.PdfXmpImporter.PdfXmpImporter(org.jabref.logic.xmp.XmpPreferences)!xmpPreferences	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java) (7"
typeXmpPreferences"
isFinalfalse"2
declarationStringXmpPreferences xmpPreferences*xmpPreferences2}
#org.jabref.logic.xmp.XmpPreferencesTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java ((¿
=org.jabref.logic.importer.fileformat.PdfXmpImporter.getName()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java ("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2®
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java ( 2ä
,org.jabref.logic.importer.Importer.getName()OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java (2q
java.lang.StringRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java (¿
Aorg.jabref.logic.importer.fileformat.PdfXmpImporter.getFileType()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java   ('"
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>StandardFileType <mark class="method">getFileType</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeStandardFileType*getFileType2á
&org.jabref.logic.util.StandardFileTypeRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java   (ô
Zorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.io.BufferedReader)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java% %(&"
isFinalfalse"Ü
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(BufferedReader reader)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2}
#java.util.Objects.requireNonNull(T)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java& &(2±
Wjava.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java' '(/2ª
aorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.io.BufferedReader)!readerCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java& &(%2ß
Iorg.jabref.logic.importer.Importer.importDatabase(java.io.BufferedReader)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java% %(&2¿
aorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.io.BufferedReader)!reader	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java%6 %(<2á
&org.jabref.logic.importer.ParserResultRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java% %(ê
aorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.io.BufferedReader)!reader	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java%6 %(<"
typeBufferedReader"
isFinalfalse"*
declarationStringBufferedReader reader*reader2p
java.io.BufferedReaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java%' %(5Û
Torg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.lang.String)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java- -(&"
isFinalfalse"¸
declarationStringÊ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(String data)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2}
#java.util.Objects.requireNonNull(T)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java. .(2±
Wjava.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java/ /(/2≥
Yorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.lang.String)!dataCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java. .(#2°
Corg.jabref.logic.importer.Importer.importDatabase(java.lang.String)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java- -(&2∏
Yorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.lang.String)!data	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java-. -(22á
&org.jabref.logic.importer.ParserResultRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java- -(Ó
Yorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.lang.String)!data	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java-. -(2"
typeString"
isFinalfalse" 
declarationStringString data*data2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java-' -(-∫
Vorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.nio.file.Path)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java5 5(&"
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(Path filePath)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2}
#java.util.Objects.requireNonNull(T)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java6 6(2Ω
corg.jabref.logic.xmp.XmpUtilReader.readXmp(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java88 8(?2ü
Eorg.jabref.logic.importer.ParserResult.fromError(java.lang.Exception)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java:  :()2ƒ
jorg.jabref.logic.importer.ParserResult.ParserResult(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java8 8(#2å
2org.jabref.logic.xmp.XmpUtilReader.XmpUtilReader()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java8( 8(52π
_org.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java6 6('2π
_org.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java8@ 8(H2®
Norg.jabref.logic.importer.fileformat.PdfXmpImporter?xmpPreferences@20.33:20.47CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java8J 8(X2∆
lorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.nio.file.Path)?exception@57.29:57.38CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java:* :(32£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java5 5(&2æ
_org.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java5, 5(42Õ
lorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.nio.file.Path)?exception@57.29:57.38DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java9 9(&2á
&org.jabref.logic.importer.ParserResultRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java5 5(˙
_org.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java5, 5(4"
typePath"
isFinalfalse""
declarationStringPath filePath*filePath2l
java.nio.file.PathTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java5' 5(+ó
lorg.jabref.logic.importer.fileformat.PdfXmpImporter.importDatabase(java.nio.file.Path)?exception@57.29:57.38VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java9 9(&"
typeIOException"
isFinalfalse"*
declarationStringIOException exception*	exception2m
java.io.IOExceptionTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java9 9(Ò

^org.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.io.BufferedReader)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java? ?(%"
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isRecognizedFormat</mark>(BufferedReader reader)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isRecognizedFormat2}
#java.util.Objects.requireNonNull(T)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java@ @(2ø
eorg.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.io.BufferedReader)!readerCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java@ @(%2´
Morg.jabref.logic.importer.Importer.isRecognizedFormat(java.io.BufferedReader)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java? ?(%2ƒ
eorg.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.io.BufferedReader)!reader	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java?5 ?(;2h
booleanRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java? ?(î
eorg.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.io.BufferedReader)!reader	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java?5 ?(;"
typeBufferedReader"
isFinalfalse"*
declarationStringBufferedReader reader*reader2p
java.io.BufferedReaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java?& ?(4å
Zorg.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.nio.file.Path)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaI I(%"
isFinalfalse"õ
declarationStringÖ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isRecognizedFormat</mark>(Path filePath)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isRecognizedFormat2}
#java.util.Objects.requireNonNull(T)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaJ J(2¡
gorg.jabref.logic.xmp.XmpUtilShared.hasMetadata(java.nio.file.Path, org.jabref.logic.xmp.XmpPreferences)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaK K((2Ω
corg.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaJ J('2Ω
corg.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.nio.file.Path)!filePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaK) K(12®
Norg.jabref.logic.importer.fileformat.PdfXmpImporter?xmpPreferences@20.33:20.47CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaK3 K(A2ß
Iorg.jabref.logic.importer.Importer.isRecognizedFormat(java.nio.file.Path)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaI I(%2¬
corg.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaI+ I(32h
booleanRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaI I(˛
corg.jabref.logic.importer.fileformat.PdfXmpImporter.isRecognizedFormat(java.nio.file.Path)!filePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaI+ I(3"
typePath"
isFinalfalse""
declarationStringPath filePath*filePath2l
java.nio.file.PathTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaI& I(*ç
;org.jabref.logic.importer.fileformat.PdfXmpImporter.getId()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaO O("
isFinalfalse"í
declarationString}<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getId</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getId2à
*org.jabref.logic.importer.Importer.getId()OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaO O(2q
java.lang.StringRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaO O(≤
Dorg.jabref.logic.importer.fileformat.PdfXmpImporter.getDescription()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaT T( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getDescription2ë
3org.jabref.logic.importer.Importer.getDescription()OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaT T( 2q
java.lang.StringRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.javaT T(®
Norg.jabref.logic.importer.fileformat.PdfXmpImporter?xmpPreferences@20.33:20.47VALUEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java! (/"
isFinaltrue"
typeXmpPreferences"û
declarationStringà<mark class="modifier">private </mark><mark class="modifier">final </mark>XmpPreferences <mark class="class-field">xmpPreferences</mark>"
isStaticfalse"
accessprivate*xmpPreferences2}
#org.jabref.logic.xmp.XmpPreferencesTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java ( 