
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaº>
1org.jabref.logic.importer.fileformat.ModsImporterCLASSN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java2 2("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"Õ
declarationString∑<mark class="modifier">public </mark><mark class="modifier">class </mark>ModsImporter<mark class="modifier"> extends </mark>Importer<mark class="modifier"><br>implements </mark>Parser"
accesspublic*ModsImporter2k
ModsImporterDECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java: :(2ª
\org.jabref.logic.importer.fileformat.ModsImporter.isRecognizedFormat(java.io.BufferedReader)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaD D(%2∑
Xorg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaI I(&2¯
òorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaX X($2®
»org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal l(2ã
©org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ Ω(!2á
•org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊ ◊(2á
•org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ Ü(2¶
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú ú(2ä
®org.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπ π( 2©
«org.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ Î(2ä
®org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå å( 2à
¶org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠ ≠(2Ö
£org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ æ(2é
¨org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ œ($2≠
Lorg.jabref.logic.importer.fileformat.ModsImporter.mapGenre(java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÌ Ì(2p
parseIdentifierDECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜ ˜( 2Ñ
¢org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ Å(2ƒ
‚org.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java† †($2x
handleAuthorsInNamePartDECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶ ¶((2†
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒ Œ("2„
Åorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘ ‘(,2»
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄ ⁄('2ƒ
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬁ ﬁ(#2¬
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‚ ‚(!2ú
;org.jabref.logic.importer.fileformat.ModsImporter.getName()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÁ Á(2†
?org.jabref.logic.importer.fileformat.ModsImporter.getFileType()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÏ Ï('2£
Borg.jabref.logic.importer.fileformat.ModsImporter.getDescription()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÒ Ò( 2¥
Sorg.jabref.logic.importer.fileformat.ModsImporter.parseEntries(java.io.InputStream)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˆ ˆ(&2£
Dorg.jabref.logic.importer.fileformat.ModsImporter?LOGGER@52.32:52.38DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java4  4(&2©
Jorg.jabref.logic.importer.fileformat.ModsImporter?MODS_PATTERN@53.33:53.45DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java5! 5(-2≠
Norg.jabref.logic.importer.fileformat.ModsImporter?keywordSeparator@55.25:55.41DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java7 7()2¨
Morg.jabref.logic.importer.fileformat.ModsImporter?xmlInputFactory@56.34:56.49DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java8" 8(12z
 org.jabref.logic.importer.ParserEXTENDN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java26 2(<2|
"org.jabref.logic.importer.ImporterEXTENDN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java2" 2(*¸
ModsImporterCONSTRUCTORN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java: :("ì
declarationString~<mark class="modifier">public </mark><mark class="method">ModsImporter</mark>(ImportFormatPreferences importFormatPreferences)*ModsImporter2Ü
.javax.xml.stream.XMLInputFactory.newInstance()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java<* <(52¶
Norg.jabref.logic.importer.fileformat.ModsImporter?keywordSeparator@55.25:55.41CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java; ;(2•
Morg.jabref.logic.importer.fileformat.ModsImporter?xmlInputFactory@56.34:56.49CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java< <(2ê
1org.jabref.logic.importer.fileformat.ModsImporterRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java: :(˜
importFormatPreferences	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java:0 :(G"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2o
ImportFormatPreferencesTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java: :(/¡
\org.jabref.logic.importer.fileformat.ModsImporter.isRecognizedFormat(java.io.BufferedReader)METHODN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaD D(%"
isFinalfalse"¢
declarationStringå<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isRecognizedFormat</mark>(BufferedReader input)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isRecognizedFormat2°
Ijava.util.stream.Stream.anyMatch(java.util.function.Predicate<? super T>)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaE E(%2v
java.io.BufferedReader.lines()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaE E(2v
java.util.regex.Matcher.find()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaEI E(M2è
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaE; E(B2∫
borg.jabref.logic.importer.fileformat.ModsImporter.isRecognizedFormat(java.io.BufferedReader)!inputCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaE E(2¢
Jorg.jabref.logic.importer.fileformat.ModsImporter?MODS_PATTERN@53.33:53.45CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaE. E(:2≈
morg.jabref.logic.importer.fileformat.ModsImporter.isRecognizedFormat(java.io.BufferedReader)?line@69.38:69.42CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaEC E(G2©
Morg.jabref.logic.importer.Importer.isRecognizedFormat(java.io.BufferedReader)OVERRIDEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaD D(%2ø
borg.jabref.logic.importer.fileformat.ModsImporter.isRecognizedFormat(java.io.BufferedReader)!input	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaD5 D(:2Ã
morg.jabref.logic.importer.fileformat.ModsImporter.isRecognizedFormat(java.io.BufferedReader)?line@69.38:69.42DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaE& E(*2f
booleanRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaD D(ã
borg.jabref.logic.importer.fileformat.ModsImporter.isRecognizedFormat(java.io.BufferedReader)!input	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaD5 D(:"
typeBufferedReader"
isFinalfalse")
declarationStringBufferedReader input*input2n
java.io.BufferedReaderTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaD& D(4ç
morg.jabref.logic.importer.fileformat.ModsImporter.isRecognizedFormat(java.io.BufferedReader)?line@69.38:69.42VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaE& E(*"
type"
isFinalfalse"
declarationString line*line2TYPEˇ!
Xorg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)METHODN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaI I(&"
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(BufferedReader input)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2{
#java.util.Objects.requireNonNull(T)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaJ J(2û
Fjavax.xml.stream.XMLInputFactory.createXMLStreamReader(java.io.Reader)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaN5 N(J2Ò
òorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaO O(2ù
Eorg.jabref.logic.importer.ParserResult.fromError(java.lang.Exception)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaR  R()2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaL& L(12¬
jorg.jabref.logic.importer.ParserResult.ParserResult(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaU U(2∂
^org.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)!inputCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaJ J($2•
Morg.jabref.logic.importer.fileformat.ModsImporter?xmlInputFactory@56.34:56.49CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaN% N(42∂
^org.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)!inputCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaNK N(P2≈
morg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?bibItems@76.23:76.31CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaO  O((2√
korg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?reader@78.28:78.34CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaO* O(02ú
Dorg.jabref.logic.importer.fileformat.ModsImporter?LOGGER@52.32:52.38CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaQ Q(2æ
forg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?e@80.36:80.37CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaQ5 Q(62æ
forg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?e@80.36:80.37CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaR* R(+2≈
morg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?bibItems@76.23:76.31CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaU  U((2•
Iorg.jabref.logic.importer.Importer.importDatabase(java.io.BufferedReader)OVERRIDEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaI I(&2ª
^org.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)!input	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaI6 I(;2Ã
morg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?bibItems@76.23:76.31DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaL L(2 
korg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?reader@78.28:78.34DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaN N("2≈
forg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?e@80.36:80.37DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaP$ P(%2Ö
&org.jabref.logic.importer.ParserResultRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaI I(‰
morg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?bibItems@76.23:76.31VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaL L("
typeList<BibEntry>"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibItems</mark> = new ArrayList<>()*bibItems2f
java.util.ListTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaL L(2Ä
org.jabref.model.entry.BibEntryTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaL L(2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaL& L(1î
korg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?reader@78.28:78.34VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaN N(""
typeXMLStreamReader"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>XMLStreamReader <mark class="class-field">reader</mark> = xmlInputFactory.createXMLStreamReader(input)*reader2x
 javax.xml.stream.XMLStreamReaderTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaN N(2û
Fjavax.xml.stream.XMLInputFactory.createXMLStreamReader(java.io.Reader)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaN5 N(J2•
Morg.jabref.logic.importer.fileformat.ModsImporter?xmlInputFactory@56.34:56.49CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaN% N(42∂
^org.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)!inputCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaNK N(Pá
^org.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)!input	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaI6 I(;"
typeBufferedReader"
isFinalfalse")
declarationStringBufferedReader input*input2n
java.io.BufferedReaderTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaI' I(5õ
forg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)?e@80.36:80.37VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaP$ P(%"
typeXMLStreamException"
isFinalfalse")
declarationStringXMLStreamException e*e2{
#javax.xml.stream.XMLStreamExceptionTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaP P(#≈>
òorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)METHODN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaX X($"
isFinalfalse"◊
declarationString¡<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseModsCollection</mark>(List&lt;BibEntry&gt; bibItems<mark class="modifier"><mark class="modifier">,</mark></mark> XMLStreamReader reader)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseModsCollection2Ç
*javax.xml.stream.XMLStreamReader.hasNext()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaY Y(2
'javax.xml.stream.XMLStreamReader.next()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaZ Z(2ª
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java[ [(2Å
)java.lang.String.equals(java.lang.Object)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java[2 [(82Ä
(javax.xml.namespace.QName.getLocalPart()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java[J [(V2Ç
*javax.xml.stream.XMLStreamReader.getName()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java[@ [(G2Æ
Vjavax.xml.stream.XMLStreamReader.getAttributeValue(java.lang.String, java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java_# _(42ò
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaa a((2°
»org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javad d(2≈
morg.jabref.model.entry.BibEntry.setField(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaf f(2m
java.util.List.add(E)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javag g(2Ç
*org.jabref.model.entry.BibEntry.BibEntry()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java\% \(-2s
java.util.HashMap.HashMap()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java]0 ](92¯
üorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaY Y(2¯
üorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaZ Z(2¯
üorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java[  [(&2¯
üorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java[9 [(?2¯
üorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java_ _("2Ä
ßorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?id@95.23:95.25CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java` `(2É
™org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?entry@92.25:92.30CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaa a(2Ä
ßorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?id@95.23:95.25CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaa) a(+2Ñ
´org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?fields@93.35:93.41CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javad d(%2¯
üorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javad' d(-2É
™org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?entry@92.25:92.30CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javad/ d(42É
™org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?entry@92.25:92.30CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaf f(2Ñ
´org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?fields@93.35:93.41CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaf f(%2˙
°org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!bibItemsCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javag g(2É
™org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?entry@92.25:92.30CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javag g("2ˇ
°org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!bibItems	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaX4 X(<2˝
üorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!reader	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaXN X(T2ä
™org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?entry@92.25:92.30DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java\ \(2ã
´org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?fields@93.35:93.41DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java]# ]()2á
ßorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?id@95.23:95.25DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java_ _(2c
voidRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaX X(¶
™org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?entry@92.25:92.30VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java\ \("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2w
org.jabref.model.entry.BibEntryTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java\ \(2Ç
*org.jabref.model.entry.BibEntry.BibEntry()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java\% \(-ñ
´org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?fields@93.35:93.41VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java]# ]()"
typeMap<Field, String>"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>Map<Field, String> <mark class="class-field">fields</mark> = new HashMap<>()*fields2e
java.util.MapTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java] ](2É
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java] ](2q
java.lang.StringTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java] ](!2s
java.util.HashMap.HashMap()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java]0 ](9Ö
ßorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)?id@95.23:95.25VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java_ _("
typeString"
isFinalfalse"¬
declarationString¨<mark class="modifier"> </mark>String <mark class="class-field">id</mark> = reader.getAttributeValue(<mark class="modifier">null</mark><mark class="modifier">,</mark> "ID")*id2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java_ _(2Æ
Vjavax.xml.stream.XMLStreamReader.getAttributeValue(java.lang.String, java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java_# _(42¯
üorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java_ _("Ã
°org.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!bibItems	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaX4 X(<"
typeList<BibEntry>"
isFinalfalse",
declarationStringList<BibEntry> bibItems*bibItems2f
java.util.ListTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaX% X()2Ä
org.jabref.model.entry.BibEntryTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaX* X(2◊
üorg.jabref.logic.importer.fileformat.ModsImporter.parseModsCollection(java.util.List<org.jabref.model.entry.BibEntry>, javax.xml.stream.XMLStreamReader)!reader	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaXN X(T"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2x
 javax.xml.stream.XMLStreamReaderTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaX> X(Möœ
»org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)METHODN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal l("
isFinalfalse"‹
declarationString∆<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseModsGroup</mark>(Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields<mark class="modifier"><mark class="modifier">,</mark></mark> XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseModsGroup2Ç
*javax.xml.stream.XMLStreamReader.hasNext()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javas s(2
'javax.xml.stream.XMLStreamReader.next()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javat t(2ª
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javau u(2Ä
(javax.xml.namespace.QName.getLocalPart()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javav6 v(B2Ç
*javax.xml.stream.XMLStreamReader.getName()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javav, v(32
'javax.xml.stream.XMLStreamReader.next()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaz z(#2ø
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java{ {(/2ó
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java| |(-2Ç
*javax.xml.stream.XMLStreamReader.getText()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java|U |(\2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÄ Ä(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ Å(/2©
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÇ" Ç()2ü
Eorg.jabref.model.entry.types.EntryTypeFactory.parse(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÇ; Ç(@2¶
Lorg.jabref.logic.importer.fileformat.ModsImporter.mapGenre(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÇA Ç(I2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÇQ Ç(X2Å
¶org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ Ü(%2á
¨org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaâ â(+2∞
Vjavax.xml.stream.XMLStreamReader.getAttributeValue(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå- å(>2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç ç(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé é(/2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaèP è(W2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaì ì(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaî î(/2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaï" ï(%2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaï- ï(42É
®org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaô ô('2˛
£org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú ú("2¢
«org.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaü ü($2É
®org.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢ ¢('2ü
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java• •(!2Ñ
©org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java® ®((2ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠ ≠(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠0 ≠(62Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠H ≠(T2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠> ≠(E2Ω
‚org.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≤ ≤(2Ω
‚org.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≥ ≥(2Ω
‚org.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¥ ¥(2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javao! o(,2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javap$ p(/2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaq# q(.2®
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javas s(2®
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javat t(2®
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javau  u(&2®
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javav% v(+2ª
‚org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?elementName@118.23:118.34CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javax x(#2®
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaz z(2®
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java{0 {(62®
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java|. |(42®
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java|N |(T2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÄ Ä(2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ0 Å(62©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!entryCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÇ Ç(!2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÇJ Ç(P2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ& Ü(,2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ. Ü(42™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaâ, â(22™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaâ4 â(:2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå& å(,2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç ç(2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé0 é(62™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè, è(22∂
€org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?type@140.31:140.35CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaèC è(G2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaèI è(O2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!entryCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè\ è(a2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaì ì(2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaî0 î(62∑
‹org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?notes@111.21:111.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaï ï(!2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaï& ï(,2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaô( ô(.2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaô0 ô(62™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú# ú()2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú+ ú(12™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaü% ü(+2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaü- ü(32∫
ﬂorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?keywords@112.21:112.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaü5 ü(=2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢( ¢(.2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢0 ¢(62™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java•" •((2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java•* •(02π
ﬁorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?authors@113.21:113.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java•2 •(92™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java®) ®(/2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java®1 ®(72™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠ ≠($2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠7 ≠(=2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≤ ≤("2∑
‹org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?notes@111.21:111.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≤$ ≤()2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≥ ≥("2∫
ﬂorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?keywords@112.21:112.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≥$ ≥(,2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¥ ¥("2π
ﬁorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?authors@113.21:113.28CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¥$ ¥(+2®
Norg.jabref.logic.importer.fileformat.ModsImporter?keywordSeparator@55.25:55.41CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≥K ≥([2≠
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fields	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal3 l(92≠
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!reader	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javalK l(Q2¨
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!entry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal\ l(a2º
‹org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?notes@111.21:111.26DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javao o(2ø
ﬂorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?keywords@112.21:112.29DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javap p(2æ
ﬁorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?authors@113.21:113.28DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaq q(2¬
‚org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?elementName@118.23:118.34DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javav v("2Ω
€org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?type@140.31:140.35DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå å(#2c
voidRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal l(π
‹org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?notes@111.21:111.26VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javao o("
typeList<String>"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>List<String> <mark class="class-field">notes</mark> = new ArrayList<>()*notes2f
java.util.ListTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javao o(2q
java.lang.StringTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javao o(2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javao! o(,¬
ﬂorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?keywords@112.21:112.29VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javap p("
typeList<String>"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>List<String> <mark class="class-field">keywords</mark> = new ArrayList<>()*keywords2f
java.util.ListTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javap p(2q
java.lang.StringTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javap p(2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javap$ p(/ø
ﬁorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?authors@113.21:113.28VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaq q("
typeList<String>"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>List<String> <mark class="class-field">authors</mark> = new ArrayList<>()*authors2f
java.util.ListTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaq q(2q
java.lang.StringTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaq q(2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaq# q(.ó	
‚org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?elementName@118.23:118.34VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javav v(""
typeString"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>String <mark class="class-field">elementName</mark> = reader.getName().getLocalPart()*elementName2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javav v(2Ä
(javax.xml.namespace.QName.getLocalPart()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javav6 v(B2Ç
*javax.xml.stream.XMLStreamReader.getName()CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javav, v(32®
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javav% v(+˜
€org.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)?type@140.31:140.35VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå å(#"
typeString"
isFinalfalse"∆
declarationString∞<mark class="modifier"> </mark>String <mark class="class-field">type</mark> = reader.getAttributeValue(<mark class="modifier">null</mark><mark class="modifier">,</mark> "type")*type2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå å(2∞
Vjavax.xml.stream.XMLStreamReader.getAttributeValue(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå- å(>2™
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå& å(,Û
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!fields	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal3 l(9"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2e
java.util.MapTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal  l(#2É
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal$ l()2q
java.lang.StringTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal+ l(1á
œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!reader	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javalK l(Q"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2x
 javax.xml.stream.XMLStreamReaderTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal; l(Jı
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseModsGroup(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, javax.xml.stream.XMLStreamReader, org.jabref.model.entry.BibEntry)!entry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javal\ l(a"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2w
org.jabref.model.entry.BibEntryTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javalS l([Ò<
©org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ Ω(!"
isFinalfalse"í
declarationString¸<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseRelatedItem</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseRelatedItem2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ æ(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaø ø(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿ ¿(2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¡) ¡(52Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¡ ¡(&2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java√ √(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaƒ ƒ(/2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈ ≈(-2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈T ≈([2Ä
•org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java… …($2Ä
•org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÃ Ã($2ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java— —(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java—7 —(=2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java—O —([2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java—E —(L2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ æ(2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaø ø(2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿  ¿(&2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¡ ¡(2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java√ √(2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaƒ0 ƒ(62ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈. ≈(42ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈M ≈(S2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java…% …(+2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java…- …(32ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÃ% Ã(+2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÃ- Ã(32ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java— —($2ã
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java—> —(D2ê
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ2 Ω(82ê
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩM Ω(S2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ Ω(Ï
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ2 Ω(8"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ" Ω(1‹
∞org.jabref.logic.importer.fileformat.ModsImporter.parseRelatedItem(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩM Ω(S"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ: Ω(=2Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ> Ω(C2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩE Ω(K◊h
•org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊ ◊("
isFinalfalse"é
declarationString¯<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">handleExtent</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*handleExtent2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‹ ‹(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java› ›(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬂ ﬂ(2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‡6 ‡(B2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‡, ‡(32Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java· ·(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‰ ‰(/2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÂ+ Â(22¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÈ È(/2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÍ/ Í(62¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÓ Ó(/2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÔ- Ô(42ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaı ı(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaı2 ı(82Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaıJ ı(V2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaı@ ı(G2t
java.lang.String.isBlank()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙ ˙(2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˚ ˚(2t
java.lang.String.isBlank()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¸ ¸(%2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˝ ˝(2t
java.lang.String.isBlank()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˛ ˛( 2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ Å(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‹ ‹(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java› ›(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬂ  ﬂ(&2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‡% ‡(+2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java· ·(2ö
øorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?elementName@224.23:224.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‚ ‚(#2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‰0 ‰(62î
πorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?total@216.15:216.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÂ Â(!2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÂ$ Â(*2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÈ0 È(62ò
Ωorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?startPage@217.15:217.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÍ Í(%2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÍ( Í(.2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÓ0 Ó(62ñ
ªorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?endPage@218.15:218.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÔ Ô(#2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÔ& Ô(,2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaı ı($2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaı9 ı(?2î
πorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?total@216.15:216.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙ ˙(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˚ ˚($2î
πorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?total@216.15:216.20CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˚; ˚(@2ò
Ωorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?startPage@217.15:217.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¸ ¸(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˝ ˝($2ò
Ωorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?startPage@217.15:217.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˝; ˝(D2ñ
ªorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?endPage@218.15:218.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˛ ˛(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ Å(2ò
Ωorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?startPage@217.15:217.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ0 Å(92ñ
ªorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?endPage@218.15:218.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅB Å(I2å
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊. ◊(42å
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊I ◊(O2õ
πorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?total@216.15:216.20DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÿ ÿ(2ü
Ωorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?startPage@217.15:217.24DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŸ Ÿ(2ù
ªorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?endPage@218.15:218.22DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄ ⁄(2°
øorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?elementName@224.23:224.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‡ ‡("2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊ ◊(ï
πorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?total@216.15:216.20VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÿ ÿ("
typeString"
isFinalfalse"f
declarationStringQ<mark class="modifier"> </mark>String <mark class="class-field">total</mark> = ""*total2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÿ ÿ(°
Ωorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?startPage@217.15:217.24VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŸ Ÿ("
typeString"
isFinalfalse"j
declarationStringU<mark class="modifier"> </mark>String <mark class="class-field">startPage</mark> = ""*	startPage2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŸ Ÿ(õ
ªorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?endPage@218.15:218.22VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄ ⁄("
typeString"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>String <mark class="class-field">endPage</mark> = ""*endPage2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄ ⁄(€
øorg.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?elementName@224.23:224.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‡ ‡(""
typeString"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>String <mark class="class-field">elementName</mark> = reader.getName().getLocalPart()*elementName2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‡ ‡(2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‡6 ‡(B2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‡, ‡(32á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‡% ‡(+Ë
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊. ◊(4"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊ ◊(-ÿ
¨org.jabref.logic.importer.fileformat.ModsImporter.handleExtent(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊I ◊(O"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊6 ◊(92Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊: ◊(?2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊A ◊(Gœ?
•org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ Ü("
isFinalfalse"é
declarationString¯<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">handleDetail</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*handleDetail2∞
Vjavax.xml.stream.XMLStreamReader.getAttributeValue(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá á(.2s
java.util.Set.of(E, E, E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaà+ à(-2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaä ä(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaã ã(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç ç(2Ç
(java.util.Set.contains(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé% é(-2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé? é(K2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé5 é(<2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè è(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaê ê(+2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaë ë()2†
Forg.jabref.model.entry.field.FieldFactory.parseField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaë? ë(I2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaëX ë(_2ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ ñ(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ2 ñ(82Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañJ ñ(V2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ@ ñ(G2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá á(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaä ä(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaã ã(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç  ç(&2ü
ƒorg.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?detailElementSet@264.20:264.36CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé é($2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé. é(42á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè è(2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaê, ê(22á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaë* ë(02ì
∏org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?type@263.15:263.19CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaëJ ë(N2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaëQ ë(W2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ ñ($2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ9 ñ(?2å
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ. Ü(42å
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜI Ü(O2ö
∏org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?type@263.15:263.19DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá á(2¶
ƒorg.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?detailElementSet@264.20:264.36DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaà à($2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ Ü(±
∏org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?type@263.15:263.19VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá á("
typeString"
isFinalfalse"∆
declarationString∞<mark class="modifier"> </mark>String <mark class="class-field">type</mark> = reader.getAttributeValue(<mark class="modifier">null</mark><mark class="modifier">,</mark> "type")*type2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá á(2∞
Vjavax.xml.stream.XMLStreamReader.getAttributeValue(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá á(.2á
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá á(á
ƒorg.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?detailElementSet@264.20:264.36VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaà à($"
typeSet<String>"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>Set<String> <mark class="class-field">detailElementSet</mark> = Set.of("number"<mark class="modifier">,</mark> "caption"<mark class="modifier">,</mark> "title")*detailElementSet2g
java.util.SetTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaà à(2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaà à(2s
java.util.Set.of(E, E, E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaà+ à(-Ë
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ. Ü(4"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ Ü(-ÿ
¨org.jabref.logic.importer.fileformat.ModsImporter.handleDetail(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜI Ü(O"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ6 Ü(92Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ: Ü(?2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜA Ü(G÷[
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú ú("
isFinalfalse"„
declarationStringÕ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseName</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; authors)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*	parseName2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaü ü(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java† †(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢ ¢(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java£" £((2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java£: £(F2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java£0 £(72Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java§ §(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java• •(+2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶ ¶()2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶Z ¶(a2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java®& ®(,2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java®> ®(J2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java®4 ®(;2∞
Vjavax.xml.stream.XMLStreamReader.getAttributeValue(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java©) ©(:2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java™ ™(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java´ ´(+2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¨2 ¨(92ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java± ±(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java±0 ±(62Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java±H ±(T2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java±> ±(E2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaù ù(*2¢
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶6 ¶(B2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaü ü(2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java† †(2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢  ¢(&2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java£) £(/2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java§ §(2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java•, •(22¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶* ¶(02¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶S ¶(Y2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java®- ®(32¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java©" ©((2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java™ ™(2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java´, ´(22≥
ÿorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)?names@285.19:285.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¨ ¨(2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¨+ ¨(12≤
◊org.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)?type@297.27:297.31CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¨= ¨(A2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java± ±($2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java±7 ±(=2≥
ÿorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)?names@285.19:285.24CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∂  ∂(%2ß
Ãorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!authorsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∂' ∂(.2´
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú+ ú(12´
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaúF ú(L2¨
Ãorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!authors	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú[ ú(b2∫
ÿorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)?names@285.19:285.24DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaù ù(2π
◊org.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)?type@297.27:297.31DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java© ©(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú ú(∫
ÿorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)?names@285.19:285.24VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaù ù("
type
List<Name>"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>List<Name> <mark class="class-field">names</mark> = new ArrayList<>()*names2^
ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaù ù(2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaù ù(*Ô
◊org.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)?type@297.27:297.31VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java© ©("
typeString"
isFinalfalse"∆
declarationString∞<mark class="modifier"> </mark>String <mark class="class-field">type</mark> = reader.getAttributeValue(<mark class="modifier">null</mark><mark class="modifier">,</mark> "type")*type2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java© ©(2∞
Vjavax.xml.stream.XMLStreamReader.getAttributeValue(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java©) ©(:2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java©" ©((á
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú+ ú(1"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú ú(*˜
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaúF ú(L"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú3 ú(62Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú7 ú(<2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú> ú(DÁ
Ãorg.jabref.logic.importer.fileformat.ModsImporter.parseName(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!authors	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú[ ú(b"
typeList<String>"
isFinalfalse")
declarationStringList<String> authors*authors2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaúN ú(R2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaúS ú(YÊz
®org.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπ π( "
isFinalfalse"ë
declarationString˚<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseOriginInfo</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseOriginInfo2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaº º(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ Ω(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaø ø(2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿6 ¿(B2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿, ¿(32Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java√ √(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaƒ ƒ(/2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈ ≈(-2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈[ ≈(b2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java… …(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java   (/2‹
Åorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÀ À(72Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÀG À(N2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ œ(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java– –(/2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java— —(-2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java—V —(]2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java’ ’(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java÷ ÷(/2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊ ◊(-2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊T ◊([2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java€ €(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‹ ‹(/2˝
¢org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java› ›(#2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java›@ ›(G2ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java„ „(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java„6 „(<2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java„N „(Z2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java„D „(K2Ω
‚org.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaË Ë(2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∫" ∫(-2¢
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈: ≈(F2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaº º(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaΩ Ω(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaø  ø(&2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿% ¿(+2ù
¬org.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?elementName@320.23:320.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¡ ¡(#2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java√ √(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaƒ0 ƒ(62ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈. ≈(42ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈T ≈(Z2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java… …(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java 0  (62ò
Ωorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?places@314.21:314.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÀ8 À(>2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÀ@ À(F2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ œ(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java–0 –(62ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java—. —(42ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java—O —(U2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java’ ’(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java÷0 ÷(62ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊. ◊(42ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊M ◊(S2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java€ €(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‹0 ‹(62ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java›$ ›(*2ù
¬org.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?elementName@320.23:320.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java›, ›(72ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java›9 ›(?2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java„ „($2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java„= „(C2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaË Ë("2ò
Ωorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?places@314.21:314.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaË$ Ë(*2è
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπ1 π(72è
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπL π(R2ü
Ωorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?places@314.21:314.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∫ ∫(2§
¬org.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?elementName@320.23:320.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿ ¿("2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπ π(§
Ωorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?places@314.21:314.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∫ ∫("
typeList<String>"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>List<String> <mark class="class-field">places</mark> = new ArrayList<>()*places2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∫ ∫(2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∫ ∫(2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∫" ∫(-·
¬org.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?elementName@320.23:320.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿ ¿(""
typeString"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>String <mark class="class-field">elementName</mark> = reader.getName().getLocalPart()*elementName2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿ ¿(2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿6 ¿(B2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿, ¿(32ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿% ¿(+Î
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπ1 π(7"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπ! π(0€
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseOriginInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπL π(R"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπ9 π(<2Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπ= π(B2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaπD π(JáW
«org.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ Î("
isFinalfalse"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseSubject</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; keywords)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseSubject2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÏ Ï(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÌ Ì(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÔ Ô(2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java) (52Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java (&2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÚ Ú(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÛ Û(/2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÙ% Ù((2q
java.lang.String.trim()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÙ: Ù(>2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÙ0 Ù(72Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¯ ¯(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˘ ˘(/2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙ ˙(-2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙W ˙(^2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˛ ˛(#2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˇ ˇ(/2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÄ Ä(-2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÄZ Ä(a2ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ Ü(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ3 Ü(92Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜK Ü(W2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜA Ü(H2¢
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙: ˙(F2¢
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÄ: Ä(F2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÏ Ï(2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÌ Ì(2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÔ  Ô(&2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java (2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÚ Ú(2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÛ0 Û(62´
–org.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!keywordsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÙ Ù($2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÙ) Ù(/2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¯ ¯(2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˘0 ˘(62©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙. ˙(42©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙P ˙(V2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˛ ˛(2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˇ0 ˇ(62©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÄ. Ä(42©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÄS Ä(Y2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ Ü($2©
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ: Ü(@2Æ
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ. Î(42Æ
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎI Î(O2∞
–org.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!keywords	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ^ Î(f2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ Î(ä
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ. Î(4"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ Î(-˙
Œorg.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎI Î(O"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ6 Î(92Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ: Î(?2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎA Î(GÌ
–org.jabref.logic.importer.fileformat.ModsImporter.parseSubject(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>)!keywords	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎ^ Î(f"
typeList<String>"
isFinalfalse"*
declarationStringList<String> keywords*keywords2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎQ Î(U2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÎV Î(\∫_
®org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå å( "
isFinalfalse"ë
declarationString˚<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseRecordInfo</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseRecordInfo2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaë ë(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaí í(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaî î(2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaïH ï(T2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaï> ï(E2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ ñ(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaó ó(+2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaò7 ò(>2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaö* ö(02Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaöB ö(N2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaö8 ö(?2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaõ õ(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú ú(+2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaù" ù(%2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaù- ù(42ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢ ¢(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢6 ¢(<2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢N ¢(Z2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢D ¢(K2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java® ®(2Ω
‚org.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java™ ™(2¢
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java®* ®(62¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordInfoDefinition@397.19:397.39CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé& é(:2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordInfoDefinition@397.19:397.39CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè! è(52ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaë ë(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaí í(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaî  î(&2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaï7 ï(=2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ ñ(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaó, ó(22†
≈org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordContents@398.21:398.35CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaò ò(&2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaò0 ò(62ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaö1 ö(72ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaõ õ(2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaú, ú(22õ
¿org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?languages@399.21:399.30CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaù ù(!2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaù& ù(,2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢ ¢($2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢= ¢(C2†
≈org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordContents@398.21:398.35CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaß$ ß(22ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java® ®($2ü
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordContent@423.20:423.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java®B ®(O2ä
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java™ ™("2õ
¿org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?languages@399.21:399.30CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java™$ ™(-2è
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå1 å(72è
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaåL å(R2≠
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordInfoDefinition@397.19:397.39DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç ç('2ß
≈org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordContents@398.21:398.35DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé é(#2¢
¿org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?languages@399.21:399.30DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè è(2¶
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordContent@423.20:423.33DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaß ß(!2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå å(÷
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordInfoDefinition@397.19:397.39VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç ç('"
type
RecordInfo"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark>RecordInfo <mark class="class-field">recordInfoDefinition</mark> = new RecordInfo()*recordInfoDefinition2d

RecordInfoTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç ç(Ä
≈org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordContents@398.21:398.35VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé é(#"
typeList<String>"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>List<String> <mark class="class-field">recordContents</mark> = recordInfoDefinition.recordContents()*recordContents2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé é(2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé é(2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordInfoDefinition@397.19:397.39CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaé& é(:Î
¿org.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?languages@399.21:399.30VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè è("
typeList<String>"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>List<String> <mark class="class-field">languages</mark> = recordInfoDefinition.languages()*	languages2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè è(2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè è(2¶
Àorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordInfoDefinition@397.19:397.39CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaè! è(5´
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?recordContent@423.20:423.33VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaß ß(!"
typeString"
isFinalfalse"i
declarationStringT<mark class="modifier"> </mark>String <mark class="class-field">recordContent</mark>*recordContent2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaß ß(Î
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå1 å(7"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå! å(0€
Øorg.jabref.logic.importer.fileformat.ModsImporter.parseRecordInfo(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaåL å(R"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå9 å(<2Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå= å(B2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaåD å(Jå1
¶org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠ ≠("
isFinalfalse"è
declarationString˘<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseLanguage</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseLanguage2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÆ Æ(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaØ Ø(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java± ±(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java±: ±(@2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java±R ±(^2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java±H ±(O2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≤ ≤(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≥ ≥('2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¥ ¥(%2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¥M ¥(T2ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∏ ∏(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∏4 ∏(:2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∏L ∏(X2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∏B ∏(I2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÆ Æ(2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaØ Ø(2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java±  ±(&2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java±A ±(G2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≤ ≤(2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≥( ≥(.2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¥& ¥(,2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¥F ¥(L2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∏ ∏($2à
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∏; ∏(A2ç
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠/ ≠(52ç
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠J ≠(P2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠ ≠(È
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠/ ≠(5"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠ ≠(.Ÿ
≠org.jabref.logic.importer.fileformat.ModsImporter.parseLanguage(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠J ≠(P"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠7 ≠(:2Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠; ≠(@2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≠B ≠(Hﬂ0
£org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ æ("
isFinalfalse"å
declarationStringˆ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseTitle</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*
parseTitle2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaø ø(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿ ¿(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¬ ¬(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¬3 ¬(92Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¬K ¬(W2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¬A ¬(H2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java√ √(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaƒ ƒ('2ô
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈ ≈(%2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈J ≈(Q2ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java… …(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java…5 …(;2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java…M …(Y2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java…C …(J2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaø ø(2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¿ ¿(2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¬  ¬(&2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¬: ¬(@2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java√ √(2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaƒ( ƒ(.2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈& ≈(,2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈C ≈(I2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java… …($2Ö
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java…< …(B2ä
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ, æ(22ä
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæG æ(M2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ æ(Ê
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ, æ(2"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ æ(+÷
™org.jabref.logic.importer.fileformat.ModsImporter.parseTitle(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæG æ(M"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ4 æ(72Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ8 æ(=2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaæ? æ(E£W
¨org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ œ($"
isFinalfalse"ï
declarationStringˇ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseLocationAndUrl</mark>(XMLStreamReader reader<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>XMLStreamException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseLocationAndUrl2Ñ
*javax.xml.stream.XMLStreamReader.hasNext()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java” ”(2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘ ‘(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java÷ ÷(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊' ◊(-2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊? ◊(K2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊5 ◊(<2Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÿ ÿ(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŸ Ÿ(+2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄" ⁄(%2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄- ⁄(42É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‹! ‹('2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‹9 ‹(E2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‹/ ‹(62Å
'javax.xml.stream.XMLStreamReader.next()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java› ›(2¡
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬁ ﬁ(+2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬂ ﬂ( 2Ñ
*javax.xml.stream.XMLStreamReader.getText()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬂ( ﬂ(/2ª
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‰ ‰(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‰4 ‰(:2Ç
(javax.xml.namespace.QName.getLocalPart()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‰L ‰(X2Ñ
*javax.xml.stream.XMLStreamReader.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‰B ‰(I2Ω
‚org.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÈ È(2Ω
‚org.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÍ Í(2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java–% –(02y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java—  —(+2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java” ”(2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘ ‘(2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java÷  ÷(&2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java◊. ◊(42é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÿ ÿ(2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŸ, Ÿ(22ü
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?locations@464.21:464.30CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄ ⁄(!2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄& ⁄(,2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‹( ‹(.2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java› ›(2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬁ, ﬁ(22ö
øorg.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?urls@465.21:465.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬂ ﬂ(2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬂ! ﬂ('2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‰ ‰($2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‰; ‰(A2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÈ È("2ü
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?locations@464.21:464.30CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÈ$ È(-2é
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÍ Í("2ö
øorg.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?urls@465.21:465.25CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÍ$ Í((2ì
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ5 œ(;2ì
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœP œ(V2¶
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?locations@464.21:464.30DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java– –(2°
øorg.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?urls@465.21:465.25DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java— —(2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ œ(±
ƒorg.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?locations@464.21:464.30VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java– –("
typeList<String>"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>List<String> <mark class="class-field">locations</mark> = new ArrayList<>()*	locations2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java– –(2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java– –(2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java–% –(0¢
øorg.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)?urls@465.21:465.25VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java— —("
typeList<String>"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>List<String> <mark class="class-field">urls</mark> = new ArrayList<>()*urls2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java— —(2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java— —(2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java—  —(+Ô
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ5 œ(;"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ% œ(4ﬂ
≥org.jabref.logic.importer.fileformat.ModsImporter.parseLocationAndUrl(javax.xml.stream.XMLStreamReader, java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœP œ(V"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ= œ(@2Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœA œ(F2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœH œ(NÊ
Lorg.jabref.logic.importer.fileformat.ModsImporter.mapGenre(java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÌ Ì("
isFinalfalse"t
declarationString_<mark class="modifier">private </mark>String <mark class="method">mapGenre</mark>(String genre)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*mapGenre2à
.java.lang.String.toLowerCase(java.util.Locale)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÓ Ó((2¨
Rorg.jabref.logic.importer.fileformat.ModsImporter.mapGenre(java.lang.String)!genreCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÓ Ó(2±
Rorg.jabref.logic.importer.fileformat.ModsImporter.mapGenre(java.lang.String)!genre	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÌ# Ì((2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÌ Ì(È
Rorg.jabref.logic.importer.fileformat.ModsImporter.mapGenre(java.lang.String)!genre	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÌ# Ì(("
typeString"
isFinalfalse"!
declarationStringString genre*genre2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÌ Ì("ﬁ

parseIdentifierMETHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜ ˜( "
isFinalfalse"Ü
declarationString<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">parseIdentifier</mark>(Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields<mark class="modifier"><mark class="modifier">,</mark></mark> Identifier identifier<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*parseIdentifier2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˘ ˘(2v
java.util.Optional.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˘= ˘(D2ä
0org.jabref.model.entry.BibEntry.getCitationKey()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˘, ˘(:2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˚ ˚("2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˚7 ˚(=2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜ ˜(±
fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜4 ˜(:"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜! ˜($2Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜% ˜(*2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜, ˜(2≠

identifier	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜G ˜(Q"
type
Identifier"
isFinalfalse"*
declarationStringIdentifier identifier*
identifier2d

IdentifierTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜< ˜(FØ
entry	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜\ ˜(a"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2y
org.jabref.model.entry.BibEntryTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˜S ˜([ôf
¢org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ Å("
isFinalfalse"¯
declarationString‚<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">putDate</mark>(Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields<mark class="modifier"><mark class="modifier">,</mark></mark> String elementName<mark class="modifier"><mark class="modifier">,</mark></mark> String date)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*putDate2ç
3org.jabref.model.entry.Date.parse(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÉ5 É(:2û
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá á(&2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá< á(?2Ö
+org.jabref.model.entry.Date.getNormalized()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá_ á(l2û
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaä ä(&2«
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaâ' â(.2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaä6 ä(92v
java.lang.Integer.toString()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaäS ä([2û
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç ç(&2«
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå' å(.2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç7 ç(:2à
.org.jabref.model.entry.Month.getJabRefFormat()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaçV ç(e2Ø
Ujava.util.Map.computeIfAbsent(K, java.util.function.Function<? super K, ? extends V>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaë ë(*2~
$java.lang.String.substring(int, int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaëI ë(R2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaí í(2û
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ ñ(&2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ< ñ(?2Ö
+org.jabref.model.entry.Date.getNormalized()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañg ñ(t2û
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaö ö(&2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaö< ö(?2Ö
+org.jabref.model.entry.Date.getNormalized()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaök ö(x2¢
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaí# í(/2Ç
ßorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!dateCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÇ Ç(2Ç
ßorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!dateCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÉ; É(?2â
Æorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!elementNameCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÑ Ñ(2û
√org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?optionalParsedDate@515.27:515.45CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÜ Ü(&2Ñ
©org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá5 á(;2ñ
ªorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?parsedDate@519.39:519.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaáT á(^2û
√org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?optionalParsedDate@515.27:515.45CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaâ â(&2Ñ
©org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaä/ ä(52ê
µorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?year@522.39:522.43CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaäN ä(R2û
√org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?optionalParsedDate@515.27:515.45CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå å(&2Ñ
©org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç0 ç(62ë
∂org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?month@525.39:525.44CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaçP ç(U2Ñ
©org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaë ë(2Ç
ßorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!dateCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaëD ë(H2Ñ
©org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaí í(2Ç
ßorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!dateCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaí< í(@2û
√org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?optionalParsedDate@515.27:515.45CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaï ï(&2Ñ
©org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ5 ñ(;2ñ
ªorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?parsedDate@534.39:534.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ\ ñ(f2û
√org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?optionalParsedDate@515.27:515.45CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaô ô(&2Ñ
©org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaö5 ö(;2ñ
ªorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?parsedDate@538.39:538.49CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaö` ö(j2
%org.jabref.model.entry.Date.getYear()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaâ/ â(<2Ä
&org.jabref.model.entry.Date.getMonth()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaå/ å(=2â
©org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ, Å(22é
Æorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!elementName	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ; Å(F2á
ßorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!date	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅO Å(S2•
√org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?optionalParsedDate@515.27:515.45DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÉ É(-2ù
ªorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?parsedDate@519.39:519.49DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá' á(12ó
µorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?year@522.39:522.43DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaä' ä(+2ò
∂org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?month@525.39:525.44DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç' ç(,2î
≤org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?k@529.63:529.64DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaë? ë(@2ù
ªorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?parsedDate@534.39:534.49DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ' ñ(12ù
ªorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?parsedDate@538.39:538.49DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaö' ö(12e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ Å(Ô
√org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?optionalParsedDate@515.27:515.45VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÉ É(-"
typeOptional<Date>"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>Optional<Date> <mark class="class-field">optionalParsedDate</mark> = Date.parse(date)*optionalParsedDate2l
java.util.OptionalTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÉ É(2~
org.jabref.model.entry.DateTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÉ É(2ç
3org.jabref.model.entry.Date.parse(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÉ5 É(:2Ç
ßorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!dateCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÉ; É(?’
©org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ, Å(2"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ Å(2Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ Å("2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ$ Å(*“
Æorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!elementName	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ; Å(F"
typeString"
isFinalfalse"'
declarationStringString elementName*elementName2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅ4 Å(:Ω
ßorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)!date	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅO Å(S"
typeString"
isFinalfalse" 
declarationStringString date*date2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÅH Å(NÍ
ªorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?parsedDate@519.39:519.49VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaá' á(1"
type"
isFinalfalse" 
declarationString parsedDate*
parsedDate2TYPEÿ
µorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?year@522.39:522.43VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaä' ä(+"
type"
isFinalfalse"
declarationString year*year2TYPE€
∂org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?month@525.39:525.44VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaç' ç(,"
type"
isFinalfalse"
declarationString month*month2TYPEœ
≤org.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?k@529.63:529.64VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaë? ë(@"
type"
isFinalfalse"
declarationString k*k2TYPEÍ
ªorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?parsedDate@534.39:534.49VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javañ' ñ(1"
type"
isFinalfalse" 
declarationString parsedDate*
parsedDate2TYPEÍ
ªorg.jabref.logic.importer.fileformat.ModsImporter.putDate(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.lang.String, java.lang.String)?parsedDate@538.39:538.49VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaö' ö(1"
type"
isFinalfalse" 
declarationString parsedDate*
parsedDate2TYPEú$
‚org.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java† †($"
isFinalfalse"’
declarationStringø<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">putIfListIsNotEmpty</mark>(Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; list<mark class="modifier"><mark class="modifier">,</mark></mark> Field key<mark class="modifier"><mark class="modifier">,</mark></mark> String separator)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*putIfListIsNotEmpty2r
java.util.List.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java° °(2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢ ¢(2¶
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢* ¢(12w
java.util.Collection.stream()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢! ¢('2ï
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢= ¢(D2¬
Áorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!listCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java° °(2ƒ
Èorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢ ¢(2¡
Êorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!keyCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢ ¢(2¬
Áorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!listCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢ ¢( 2«
Ïorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!separatorCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¢E ¢(N2…
Èorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†8 †(>2«
Áorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!list	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†M †(Q2∆
Êorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!key	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†Y †(\2Ã
Ïorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!separator	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†e †(n2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java† †(ï
Èorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†8 †(>"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†% †((2Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†) †(.2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†0 †(6¸
Áorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!list	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†M †(Q"
typeList<String>"
isFinalfalse"&
declarationStringList<String> list*list2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†@ †(D2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†E †(Kä
Êorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!key	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†Y †(\"
typeField"
isFinalfalse"
declarationString	Field key*key2|
"org.jabref.model.entry.field.FieldTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†S †(Xå
Ïorg.jabref.logic.importer.fileformat.ModsImporter.putIfListIsNotEmpty(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, java.util.List<java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!separator	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†e †(n"
typeString"
isFinalfalse"%
declarationStringString separator*	separator2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java†^ †(dù
handleAuthorsInNamePartMETHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶ ¶(("
isFinalfalse"Ç
declarationStringÏ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">handleAuthorsInNamePart</mark>(List&lt;Name&gt; names<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; authors)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*handleAuthorsInNamePart2ô
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∞. ∞(82o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java± ±(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≤  ≤(&2r
java.util.List.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaµ µ(%2t
java.lang.String.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaµ7 µ(>2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∏ ∏(2p
java.util.List.clear()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java∫ ∫("2r
java.util.List.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaª$ ª(+2t
java.lang.String.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaª= ª(D2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaº º(2É
)java.lang.String.equals(java.lang.Object)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaø ø(%2r
java.util.List.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈ ≈(2t
java.lang.String.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java≈/ ≈(62o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java« «(2q
java.lang.String.trim()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java« «(#2p
java.util.List.clear()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java» »(2r
java.util.List.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java… …(#2t
java.lang.String.isEmpty()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java…5 …(<2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java   (2q
java.lang.String.trim()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java #  ('2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaß$ ß(/2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶ ¶(ò
names	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶4 ¶(9"
type
List<Name>"
isFinalfalse"%
declarationStringList<Name> names*names2^
ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶) ¶(-°
authors	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶H ¶(O"
typeList<String>"
isFinalfalse")
declarationStringList<String> authors*authors2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶; ¶(?2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¶@ ¶(F·
æorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒ Œ(""
isFinalfalse"¸
declarationStringÊ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">putIfValueNotNull</mark>(Map&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; fields<mark class="modifier"><mark class="modifier">,</mark></mark> Field field<mark class="modifier"><mark class="modifier">,</mark></mark> String value)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*putIfValueNotNull2q
java.util.Map.put(K, V)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java– –(2ü
ƒorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!valueCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaœ œ(2†
≈org.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!fieldsCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java– –(2ü
ƒorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!fieldCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java– –(2ü
ƒorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!valueCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java– –(#2•
≈org.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒ6 Œ(<2§
ƒorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!field	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒD Œ(I2§
ƒorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!value	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒR Œ(W2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒ Œ(Ò
≈org.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!fields	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒ6 Œ(<"
typeMap<Field, String>"
isFinalfalse".
declarationStringMap<Field, String> fields*fields2g
java.util.MapTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒ# Œ(&2Ö
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒ' Œ(,2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒ. Œ(4Ï
ƒorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!field	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒD Œ(I"
typeField"
isFinalfalse" 
declarationStringField field*field2|
"org.jabref.model.entry.field.FieldTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒ> Œ(C‹
ƒorg.jabref.logic.importer.fileformat.ModsImporter.putIfValueNotNull(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>, org.jabref.model.entry.field.Field, java.lang.String)!value	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒR Œ(W"
typeString"
isFinalfalse"!
declarationStringString value*value2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaŒK Œ(QÜ
Åorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘ ‘(,"
isFinalfalse"˘
declarationString„<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">appendIfValueNotNullOrBlank</mark>(List&lt;String&gt; list<mark class="modifier"><mark class="modifier">,</mark></mark> String value)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*appendIfValueNotNullOrBlank2t
java.lang.String.isBlank()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java’$ ’(+2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java÷ ÷(2‚
áorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)!valueCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java’ ’(2‚
áorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)!valueCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java’ ’(#2·
Üorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)!listCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java÷ ÷(2‚
áorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)!valueCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java÷ ÷(2Ê
Üorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)!list	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘: ‘(>2Á
áorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)!value	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘G ‘(L2e
voidRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘ ‘(õ
Üorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)!list	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘: ‘(>"
typeList<String>"
isFinalfalse"&
declarationStringList<String> list*list2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘- ‘(12s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘2 ‘(8ü
áorg.jabref.logic.importer.fileformat.ModsImporter.appendIfValueNotNullOrBlank(java.util.List<java.lang.String>, java.lang.String)!value	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘G ‘(L"
typeString"
isFinalfalse"!
declarationStringString value*value2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‘@ ‘(FÛ
gorg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄ ⁄('"
isFinalfalse"©
declarationStringì<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">isCharacterXMLEvent</mark>(XMLStreamReader reader)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*isCharacterXMLEvent2â
/javax.xml.stream.XMLStreamReader.getEventType()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java€ €("2»
norg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java€ €(2Õ
norg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄8 ⁄(>2h
booleanRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄ ⁄(©
norg.jabref.logic.importer.fileformat.ModsImporter.isCharacterXMLEvent(javax.xml.stream.XMLStreamReader)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄8 ⁄(>"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java⁄( ⁄(7ﬂ
corg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬁ ﬁ(#"
isFinalfalse"•
declarationStringè<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">isStartXMLEvent</mark>(XMLStreamReader reader)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*isStartXMLEvent2â
/javax.xml.stream.XMLStreamReader.getEventType()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬂ ﬂ("2ƒ
jorg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬂ ﬂ(2…
jorg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬁ4 ﬁ(:2h
booleanRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬁ ﬁ(•
jorg.jabref.logic.importer.fileformat.ModsImporter.isStartXMLEvent(javax.xml.stream.XMLStreamReader)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬁ4 ﬁ(:"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaﬁ$ ﬁ(3’
aorg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‚ ‚(!"
isFinalfalse"£
declarationStringç<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">isEndXMLEvent</mark>(XMLStreamReader reader)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*isEndXMLEvent2â
/javax.xml.stream.XMLStreamReader.getEventType()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java„ „("2¬
horg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)!readerCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java„ „(2«
horg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‚2 ‚(82h
booleanRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‚ ‚(£
horg.jabref.logic.importer.fileformat.ModsImporter.isEndXMLEvent(javax.xml.stream.XMLStreamReader)!reader	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‚2 ‚(8"
typeXMLStreamReader"
isFinalfalse"+
declarationStringXMLStreamReader reader*reader2z
 javax.xml.stream.XMLStreamReaderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java‚" ‚(1ì
;org.jabref.logic.importer.fileformat.ModsImporter.getName()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÁ Á("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2ä
,org.jabref.logic.importer.Importer.getName()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÁ Á(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÁ Á(æ
?org.jabref.logic.importer.fileformat.ModsImporter.getFileType()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÏ Ï('"
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>StandardFileType <mark class="method">getFileType</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeStandardFileType*getFileType2á
&org.jabref.logic.util.StandardFileTypeRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÏ Ï(∞
Borg.jabref.logic.importer.fileformat.ModsImporter.getDescription()METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÒ Ò( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getDescription2ë
3org.jabref.logic.importer.Importer.getDescription()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÒ Ò( 2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaÒ Ò(›
Sorg.jabref.logic.importer.fileformat.ModsImporter.parseEntries(java.io.InputStream)METHODP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˆ ˆ(&"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">parseEntries</mark>(InputStream inputStream)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*parseEntries2é
2org.jabref.model.database.BibDatabase.getEntries()CALLR
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¯Ä ¯(ä2é
4org.jabref.logic.importer.ParserResult.getDatabase()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¯r ¯(}2≤
Xorg.jabref.logic.importer.fileformat.ModsImporter.importDatabase(java.io.BufferedReader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¯ ¯(!2É
)java.lang.Throwable.getLocalizedMessage()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙ ˙(.2{
!java.util.Collections.emptyList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¸ ¸($2è
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¯& ¯(42¥
Zjava.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.nio.charset.Charset)CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¯9 ¯(J2π
_org.jabref.logic.importer.fileformat.ModsImporter.parseEntries(java.io.InputStream)!inputStreamCALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java¯K ¯(V2û
Dorg.jabref.logic.importer.fileformat.ModsImporter?LOGGER@52.32:52.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙ ˙(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.parseEntries(java.io.InputStream)?e@633.29:633.30CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙ ˙(2Ω
corg.jabref.logic.importer.fileformat.ModsImporter.parseEntries(java.io.InputStream)?e@633.29:633.30CALLP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˙2 ˙(32†
Borg.jabref.logic.importer.Parser.parseEntries(java.io.InputStream)OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˆ ˆ(&2æ
_org.jabref.logic.importer.fileformat.ModsImporter.parseEntries(java.io.InputStream)!inputStream	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˆ3 ˆ(>2ƒ
corg.jabref.logic.importer.fileformat.ModsImporter.parseEntries(java.io.InputStream)?e@633.29:633.30DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˘ ˘(2o
java.util.ListRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˆ ˆ(2â
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˆ ˆ(è
_org.jabref.logic.importer.fileformat.ModsImporter.parseEntries(java.io.InputStream)!inputStream	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˆ3 ˆ(>"
typeInputStream"
isFinalfalse",
declarationStringInputStream inputStream*inputStream2m
java.io.InputStreamTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.javaˆ' ˆ(2˛
corg.jabref.logic.importer.fileformat.ModsImporter.parseEntries(java.io.InputStream)?e@633.29:633.30VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˘ ˘("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2m
java.io.IOExceptionTYPEP
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java˘ ˘(∫
Dorg.jabref.logic.importer.fileformat.ModsImporter?LOGGER@52.32:52.38VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java4  4(&"
isFinaltrue"
typeLogger"‚
declarationStringÃ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(ModsImporter.class);"
isStatictrue"
accessprivate*LOGGER2h
org.slf4j.LoggerTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java4 4(“
Jorg.jabref.logic.importer.fileformat.ModsImporter?MODS_PATTERN@53.33:53.45VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java5! 5(-"
isFinaltrue"
typePattern"⁄
declarationStringƒ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">MODS_PATTERN</mark> = Pattern.compile("<mods .*>");"
isStatictrue"
accessprivate*MODS_PATTERN2o
java.util.regex.PatternTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java5 5( 2â
1java.util.regex.Pattern.compile(java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java58 5(?Ö
Norg.jabref.logic.importer.fileformat.ModsImporter?keywordSeparator@55.25:55.41VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java7 7()"
isFinaltrue"
typeString"ò
declarationStringÇ<mark class="modifier">private </mark><mark class="modifier">final </mark>String <mark class="class-field">keywordSeparator</mark>"
isStaticfalse"
accessprivate*keywordSeparator2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java7 7(§
Morg.jabref.logic.importer.fileformat.ModsImporter?xmlInputFactory@56.34:56.49VALUEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java8" 8(1"
isFinaltrue"
typeXMLInputFactory"†
declarationStringä<mark class="modifier">private </mark><mark class="modifier">final </mark>XMLInputFactory <mark class="class-field">xmlInputFactory</mark>"
isStaticfalse"
accessprivate*xmlInputFactory2x
 javax.xml.stream.XMLInputFactoryTYPEN
Dsrc\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java8 8(!