
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java‹
5org.jabref.logic.importer.fileformat.OvidImporterTestCLASSR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"n
declarationStringY<mark class="modifier">public </mark><mark class="modifier">class </mark>OvidImporterTest"
accesspublic*OvidImporterTest2§
Aorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java "  (+2´
Horg.jabref.logic.importer.fileformat.OvidImporterTest.invalidFileNames()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java'" '(22†
=org.jabref.logic.importer.fileformat.OvidImporterTest.setUp()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java- -(2®
Eorg.jabref.logic.importer.fileformat.OvidImporterTest.getFormatName()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java2 2(2£
@org.jabref.logic.importer.fileformat.OvidImporterTest.getCLIId()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java7 7(2©
Forg.jabref.logic.importer.fileformat.OvidImporterTest.sGetExtensions()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java< <(2©
Forg.jabref.logic.importer.fileformat.OvidImporterTest.getDescription()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaA A(2√
`org.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatAccept(java.lang.String)DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaG G((2≈
borg.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatRejected(java.lang.String)DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaM M(*2¶
Corg.jabref.logic.importer.fileformat.OvidImporterTest.importEmpty()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaR R(2©
Forg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaY Y(2´
Forg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries2()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaé é(2∞
Korg.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaï ï(#2∞
Morg.jabref.logic.importer.fileformat.OvidImporterTest?FILE_ENDING@29.32:29.43DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java  (+2≠
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java (!”
Aorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java "  (+"
isFinalfalse"Ï
declarationString÷<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">fileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*	fileNames2â
-java.lang.String.startsWith(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java!2 !(<2ç
1java.lang.String.contains(java.lang.CharSequence)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java" "(!2á
+java.lang.String.endsWith(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java# #( 2y
java.util.Collection.stream()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java$9 $(?2–
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java$" $(.2Æ
Rorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?name@33.37:33.41CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java!- !(12Æ
Rorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?name@33.37:33.41CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java" "(2Æ
Rorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?name@33.37:33.41CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java# #(2©
Morg.jabref.logic.importer.fileformat.OvidImporterTest?FILE_ENDING@29.32:29.43CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java#! #(,2≤
Vorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?fileName@33.26:33.34CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java$/ $(72π
Vorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?fileName@33.26:33.34DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java! !("2µ
Rorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?name@33.37:33.41DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java!% !()2z
java.util.stream.StreamRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java   (2|
java.lang.StringRETURN_TYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java   ( ü
Vorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?fileName@33.26:33.34VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java! !(""
typePredicate<String>"
isFinalfalse"Ÿ
declarationString√<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> name.startsWith("OvidImporterTest") && !name.contains("Invalid") && name.endsWith(FILE_ENDING)*fileName2x
java.util.function.PredicateTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java! !(2u
java.lang.StringTYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java! !(2â
-java.lang.String.startsWith(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java!2 !(<2ç
1java.lang.String.contains(java.lang.CharSequence)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java" "(!2á
+java.lang.String.endsWith(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java# #( 2Æ
Rorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?name@33.37:33.41CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java!- !(12Æ
Rorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?name@33.37:33.41CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java" "(2Æ
Rorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?name@33.37:33.41CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java# #(2©
Morg.jabref.logic.importer.fileformat.OvidImporterTest?FILE_ENDING@29.32:29.43CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java#! #(,ˆ
Rorg.jabref.logic.importer.fileformat.OvidImporterTest.fileNames()?name@33.37:33.41VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java!% !()"
type"
isFinalfalse"
declarationString name*name2TYPE‡
Horg.jabref.logic.importer.fileformat.OvidImporterTest.invalidFileNames()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java'" '(2"
isFinalfalse"Û
declarationString›<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">invalidFileNames</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*invalidFileNames2ç
1java.lang.String.contains(java.lang.CharSequence)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java(3 ((;2y
java.util.Collection.stream()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java)9 )(?2–
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java)" )(.2µ
Yorg.jabref.logic.importer.fileformat.OvidImporterTest.invalidFileNames()?name@40.37:40.41CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java(. ((22π
]org.jabref.logic.importer.fileformat.OvidImporterTest.invalidFileNames()?fileName@40.26:40.34CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java)/ )(72¿
]org.jabref.logic.importer.fileformat.OvidImporterTest.invalidFileNames()?fileName@40.26:40.34DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java( (("2º
Yorg.jabref.logic.importer.fileformat.OvidImporterTest.invalidFileNames()?name@40.37:40.41DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java(% (()2z
java.util.stream.StreamRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java' '(2|
java.lang.StringRETURN_TYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java' '( Õ
]org.jabref.logic.importer.fileformat.OvidImporterTest.invalidFileNames()?fileName@40.26:40.34VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java( ((""
typePredicate<String>"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>Predicate<String> <mark class="class-field">fileName</mark> = name -> !name.contains("OvidImporterTest")*fileName2x
java.util.function.PredicateTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java( ((2u
java.lang.StringTYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java( ((2ç
1java.lang.String.contains(java.lang.CharSequence)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java(3 ((;2µ
Yorg.jabref.logic.importer.fileformat.OvidImporterTest.invalidFileNames()?name@40.37:40.41CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java(. ((2˝
Yorg.jabref.logic.importer.fileformat.OvidImporterTest.invalidFileNames()?name@40.37:40.41VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java(% (()"
type"
isFinalfalse"
declarationString name*name2TYPE·
=org.jabref.logic.importer.fileformat.OvidImporterTest.setUp()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java- -("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2ú
@org.jabref.logic.importer.fileformat.OvidImporter.OvidImporter()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java. .(#2¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java. .(2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java- -(Ó
Eorg.jabref.logic.importer.fileformat.OvidImporterTest.getFormatName()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java2 2("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFormatName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFormatName2ó
;org.jabref.logic.importer.fileformat.OvidImporter.getName()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java3& 3(-2¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java3 3(%2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java2 2(Œ
@org.jabref.logic.importer.fileformat.OvidImporterTest.getCLIId()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java7 7("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getCLIId</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getCLIId2Ü
*org.jabref.logic.importer.Importer.getId()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java8& 8(+2¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java8 8(%2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java7 7(ı
Forg.jabref.logic.importer.fileformat.OvidImporterTest.sGetExtensions()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java< <("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sGetExtensions</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*sGetExtensions2õ
?org.jabref.logic.importer.fileformat.OvidImporter.getFileType()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java=4 =(?2¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java=+ =(32g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java< <(¯
Forg.jabref.logic.importer.fileformat.OvidImporterTest.getDescription()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaA A("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getDescription2û
Borg.jabref.logic.importer.fileformat.OvidImporter.getDescription()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaB7 B(E2¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaB. B(62g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaA A(∆
`org.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatAccept(java.lang.String)METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaG G(("
isFinalfalse"Ü
declarationString <br><mark class="annotation">@MethodSource("fileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormatAccept</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormatAccept2·
Ñorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaH H(12¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaH2 H(:2≈
iorg.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatAccept(java.lang.String)!fileNameCALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaH< H(D2 
iorg.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatAccept(java.lang.String)!fileName	PARAMETERR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaG0 G(82g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaG G(ä
iorg.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatAccept(java.lang.String)!fileName	PARAMETERR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaG0 G(8"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2l
java.lang.StringTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaG) G(/⁄
borg.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatRejected(java.lang.String)METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaM M(*"
isFinalfalse"è
declarationString˘ <br><mark class="annotation">@MethodSource("invalidFileNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormatRejected</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormatRejected2‰
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaN N(42¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaN5 N(=2«
korg.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatRejected(java.lang.String)!fileNameCALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaN? N(G2Ã
korg.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatRejected(java.lang.String)!fileName	PARAMETERR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaM2 M(:2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaM M(å
korg.jabref.logic.importer.fileformat.OvidImporterTest.isRecognizedFormatRejected(java.lang.String)!fileName	PARAMETERR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaM2 M(:"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2l
java.lang.StringTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaM+ M(1ì
Corg.jabref.logic.importer.fileformat.OvidImporterTest.importEmpty()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaR R("
isFinalfalse"–
declarationString∫<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEmpty</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEmpty2
#java.nio.file.Path.of(java.net.URI)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaS S(2p
java.net.URL.toURI()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaSH S(M2â
-java.lang.Class.getResource(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaS/ S(:2é
2org.jabref.model.database.BibDatabase.getEntries()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaTM T(W2ê
4org.jabref.logic.importer.ParserResult.getDatabase()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT? T(J2°
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT* T(82}
!java.util.Collections.emptyList()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaU! U(*2¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT! T()2∞
Torg.jabref.logic.importer.fileformat.OvidImporterTest.importEmpty()?file@83.13:83.17CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT9 T(=2≥
Worg.jabref.logic.importer.fileformat.OvidImporterTest.importEmpty()?entries@84.23:84.30CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaU. U(52∑
Torg.jabref.logic.importer.fileformat.OvidImporterTest.importEmpty()?file@83.13:83.17DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaS S(2∫
Worg.jabref.logic.importer.fileformat.OvidImporterTest.importEmpty()?entries@84.23:84.30DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT T(2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaR R(Í
Torg.jabref.logic.importer.fileformat.OvidImporterTest.importEmpty()?file@83.13:83.17VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaS S("
typePath"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(OvidImporter.class.getResource("Empty.txt").toURI())*file2n
java.nio.file.PathTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaS S(2
#java.nio.file.Path.of(java.net.URI)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaS S(2p
java.net.URL.toURI()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaSH S(M2â
-java.lang.Class.getResource(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaS/ S(:´
Worg.jabref.logic.importer.fileformat.OvidImporterTest.importEmpty()?entries@84.23:84.30VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT T("
typeList<BibEntry>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = importer.importDatabase(file).getDatabase().getEntries()*entries2j
java.util.ListTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT T(2Ñ
org.jabref.model.entry.BibEntryTYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT T(2é
2org.jabref.model.database.BibDatabase.getEntries()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaTM T(W2ê
4org.jabref.logic.importer.ParserResult.getDatabase()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT? T(J2°
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT* T(82¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT! T()2∞
Torg.jabref.logic.importer.fileformat.OvidImporterTest.importEmpty()?file@83.13:83.17CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaT9 T(=Ì¶
Forg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()METHODR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaY Y("
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntries1</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntries12
#java.nio.file.Path.of(java.net.URI)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaZ Z(2p
java.net.URL.toURI()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaZT Z(Y2â
-java.lang.Class.getResource(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaZ/ Z(:2é
2org.jabref.model.database.BibDatabase.getEntries()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[M [(W2ê
4org.jabref.logic.importer.ParserResult.getDatabase()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[? [(J2°
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[* [(82q
java.util.List.size()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java\  \($2Ö
)org.jabref.model.entry.BibEntry.getType()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java_3 _(:2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java` `( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java`E `(M2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaa a( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaa: a(B2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javab b( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javab6 b(>2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javac c( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javac6 c(>2s
java.util.List.get(int)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javae e(2Ö
)org.jabref.model.entry.BibEntry.getType()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaf< f(C2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javag g( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javag/ g(72t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javah h( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javah: h(B2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javai i( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javai; i(C2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaj j( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaj. j(62t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javak k( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javak- k(52t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javal l( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javal0 l(82t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javam m( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javam4 m(<2s
java.util.List.get(int)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javao o(2Ö
)org.jabref.model.entry.BibEntry.getType()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javap; p(B2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaq q( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaq/ q(72t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javar r( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javar0 r(82t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javas s( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javas; s(C2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javat t( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javat. t(62t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javau u( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javau- u(52t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javav v( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javav1 v(92t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaw w( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaw0 w(82t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javax x( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javax4 x(<2s
java.util.List.get(int)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaz z(2Ö
)org.jabref.model.entry.BibEntry.getType()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java{3 {(:2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java| |( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java|/ |(72t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java} }( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java}0 }(82t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java~ ~( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java~2 ~(:2t
java.util.Optional.of(T)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java ( 2®
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java; (C2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÄ Ä( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÄ4 Ä(<2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÅ Å( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÅ3 Å(;2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÇ Ç( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÇ5 Ç(=2u
java.util.List.get(int)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÑ Ñ(2á
)org.jabref.model.entry.BibEntry.getType()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÖ6 Ö(=2v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÜ Ü( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÜ0 Ü(82v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaá á( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaá. á(62v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaà à( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaà0 à(82x
java.util.Optional.empty()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaâ â(#2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaâ- â(52v
java.util.Optional.of(T)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaä ä( 2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaä9 ä(A2§
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javacC c(O2¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[! [()2≥
Worg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?file@90.13:90.17CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[9 [(=2∂
Zorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entries@91.23:91.30CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java\ \(2∂
Zorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entries@91.23:91.30CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java^ ^( 2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java_- _(22¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java`? `(D2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaa4 a(92¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javab0 b(52¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javac0 c(52¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javae e(2∂
Zorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entries@91.23:91.30CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javae e(2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaf6 f(;2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javag) g(.2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javah4 h(92¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javai5 i(:2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaj( j(-2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javak' k(,2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javal* l(/2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javam. m(32¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javao o(2∂
Zorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entries@91.23:91.30CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javao o(2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javap5 p(:2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaq) q(.2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javar* r(/2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javas5 s(:2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javat( t(-2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javau' u(,2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javav+ v(02¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaw* w(/2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javax. x(32¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaz z(2∂
Zorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entries@91.23:91.30CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaz z(2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java{- {(22¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java|) |(.2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java}* }(/2¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java~, ~(12¥
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java5 (:2∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÄ. Ä(32∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÅ- Å(22∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÇ/ Ç(42∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÑ Ñ(2∏
Zorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entries@91.23:91.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÑ Ñ(2∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÖ0 Ö(52∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaÜ* Ü(/2∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaá( á(-2∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaà* à(/2∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaâ' â(,2∂
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaä3 ä(82∫
Worg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?file@90.13:90.17DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaZ Z(2Ω
Zorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entries@91.23:91.30DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[ [(2ª
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22DECLARATIONR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java^ ^(2g
voidRETURN_TYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaY Y(˘
Worg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?file@90.13:90.17VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaZ Z("
typePath"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(OvidImporter.class.getResource("OvidImporterTest1.txt").toURI())*file2n
java.nio.file.PathTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaZ Z(2
#java.nio.file.Path.of(java.net.URI)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaZ Z(2p
java.net.URL.toURI()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaZT Z(Y2â
-java.lang.Class.getResource(java.lang.String)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaZ/ Z(:±
Zorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entries@91.23:91.30VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[ [("
typeList<BibEntry>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = importer.importDatabase(file).getDatabase().getEntries()*entries2j
java.util.ListTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[ [(2Ñ
org.jabref.model.entry.BibEntryTYPE_ARGUMENTR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[ [(2é
2org.jabref.model.database.BibDatabase.getEntries()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[M [(W2ê
4org.jabref.logic.importer.ParserResult.getDatabase()CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[? [(J2°
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[* [(82¶
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[! [()2≥
Worg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?file@90.13:90.17CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java[9 [(=ì
Xorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entry@94.17:94.22VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java^ ^("
typeBibEntry"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.getFirst()*entry2{
org.jabref.model.entry.BibEntryTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java^ ^(2∂
Zorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries1()?entries@91.23:91.30CALLR
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java^ ^( Õ
Forg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries2()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaé é("
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntries2</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntries22Å
#java.nio.file.Path.of(java.net.URI)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaè è(2r
java.net.URL.toURI()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaè[ è(`2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaè/ è(:2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaêM ê(W2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê? ê(J2£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê* ê(82
!java.util.Collections.emptyList()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaë! ë(*2®
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê! ê()2∑
Yorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries2()?file@143.13:143.17CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê9 ê(=2∫
\org.jabref.logic.importer.fileformat.OvidImporterTest.importEntries2()?entries@144.23:144.30CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaë. ë(52æ
Yorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries2()?file@143.13:143.17DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaè è(2¡
\org.jabref.logic.importer.fileformat.OvidImporterTest.importEntries2()?entries@144.23:144.30DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê ê(2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaé é(ç
Yorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries2()?file@143.13:143.17VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaè è("
typePath"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(OvidImporter.class.getResource("OvidImporterTest2Invalid.txt").toURI())*file2p
java.nio.file.PathTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaè è(2Å
#java.nio.file.Path.of(java.net.URI)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaè è(2r
java.net.URL.toURI()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaè[ è(`2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaè/ è(:≈
\org.jabref.logic.importer.fileformat.OvidImporterTest.importEntries2()?entries@144.23:144.30VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê ê("
typeList<BibEntry>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = importer.importDatabase(file).getDatabase().getEntries()*entries2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê ê(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê ê(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaêM ê(W2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê? ê(J2£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê* ê(82®
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê! ê()2∑
Yorg.jabref.logic.importer.fileformat.OvidImporterTest.importEntries2()?file@143.13:143.17CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaê9 ê(=¥#
Korg.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()METHODT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaï ï(#"
isFinalfalse"ÿ
declarationString¬<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importSingleEntries</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importSingleEntries2Å
#java.nio.file.Path.of(java.net.URI)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaò ò(2r
java.net.URL.toURI()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaò` ò(e2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaò3 ò(>2ì
5java.lang.Class.getResourceAsStream(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaô6 ô(I2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaõ2 õ(<2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaöG ö(R2£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaö2 ö(@2s
java.util.List.size()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaù( ù(,2π
[org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?n@151.17:151.18CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaó ó(2π
[org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?n@151.17:151.18CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaó  ó(!2π
[org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?n@151.17:151.18CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaòT ò(U2π
[org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?n@151.17:151.18CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaôb ô(c2®
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaö) ö(12º
^org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?file@152.17:152.21CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaöA ö(E2ø
aorg.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?entries@154.31:154.38CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaú ú(%2ø
aorg.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?entries@154.31:154.38CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaù  ù('2ª
]org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?nis@153.29:153.32CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaû, û(/2ø
aorg.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?entries@154.31:154.38CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaû1 û(82¿
[org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?n@151.17:151.18DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaó ó(2√
^org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?file@152.17:152.21DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaò ò(2¬
]org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?nis@153.29:153.32DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaô ô( 2∆
aorg.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?entries@154.31:154.38DECLARATIONT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaö ö(&2i
voidRETURN_TYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaï ï(¿
[org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?n@151.17:151.18VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaó ó("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">n</mark> = 3*n2a
intTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaó ó(œ
^org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?file@152.17:152.21VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaò ò("
typePath"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(OvidImporter.class.getResource("OvidImporterTest" + n + ".txt").toURI())*file2p
java.nio.file.PathTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaò ò(2Å
#java.nio.file.Path.of(java.net.URI)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaò ò(2r
java.net.URL.toURI()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaò` ò(e2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaò3 ò(>2π
[org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?n@151.17:151.18CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaòT ò(UÂ
]org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?nis@153.29:153.32VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaô ô( "
typeInputStream"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>InputStream <mark class="class-field">nis</mark> = OvidImporter.class.getResourceAsStream("OvidImporterTestBib" + n + ".bib")*nis2q
java.io.InputStreamTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaô ô(2ì
5java.lang.Class.getResourceAsStream(java.lang.String)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaô6 ô(I2π
[org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?n@151.17:151.18CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaôb ô(cœ
aorg.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?entries@154.31:154.38VARIABLET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaö ö(&"
typeList<BibEntry>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = importer.importDatabase(file).getDatabase().getEntries()*entries2l
java.util.ListTYPET
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaö ö(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaö ö(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaõ2 õ(<2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaöG ö(R2£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaö2 ö(@2®
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaö) ö(12º
^org.jabref.logic.importer.fileformat.OvidImporterTest.importSingleEntries()?file@152.17:152.21CALLT
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.javaöA ö(E∞
Morg.jabref.logic.importer.fileformat.OvidImporterTest?FILE_ENDING@29.32:29.43VALUER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java  (+"
isFinaltrue"
typeString"¬
declarationString¨<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FILE_ENDING</mark> = ".txt";"
isStatictrue"
accessprivate*FILE_ENDING2l
java.lang.StringTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java (Ö
Jorg.jabref.logic.importer.fileformat.OvidImporterTest?importer@30.25:30.33VARIABLER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java (!"
isFinalfalse"
typeOvidImporter"q
declarationString\<mark class="modifier">private </mark>OvidImporter <mark class="class-field">importer</mark>"
isStaticfalse"
accessprivate*importer2ç
1org.jabref.logic.importer.fileformat.OvidImporterTYPER
Hsrc\test\java\org\jabref\logic\importer\fileformat\OvidImporterTest.java (