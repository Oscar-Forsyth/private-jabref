
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaØ
6org.jabref.logic.importer.fileformat.PdfGrobidImporterCLASSS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"ü
declarationStringâ<mark class="modifier">public </mark><mark class="modifier">class </mark>PdfGrobidImporter<mark class="modifier"> extends </mark>Importer"
accesspublic*PdfGrobidImporter2u
PdfGrobidImporterDECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java (2§
@org.jabref.logic.importer.fileformat.PdfGrobidImporter.getName()DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java   (2®
Dorg.jabref.logic.importer.fileformat.PdfGrobidImporter.getFileType()DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java% %('2¡
]org.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.io.BufferedReader)DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java* *(&2ª
Worg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.lang.String)DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java2 2(&2Ω
Yorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java: :(&2≈
aorg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.io.BufferedReader)DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaF F(%2¡
]org.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaP P(%2¢
>org.jabref.logic.importer.fileformat.PdfGrobidImporter.getId()DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaW W(2´
Gorg.jabref.logic.importer.fileformat.PdfGrobidImporter.getDescription()DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java\ \( 2¥
Porg.jabref.logic.importer.fileformat.PdfGrobidImporter?grobidService@23.32:23.45DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java  (-2æ
Zorg.jabref.logic.importer.fileformat.PdfGrobidImporter?importFormatPreferences@24.42:24.65DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java* (A2Å
"org.jabref.logic.importer.ImporterEXTENDS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java' (/´
PdfGrobidImporterCONSTRUCTORS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java ("ô
declarationStringÉ<mark class="modifier">public </mark><mark class="method">PdfGrobidImporter</mark>(ImportFormatPreferences importFormatPreferences)*PdfGrobidImporter2≠
Porg.jabref.logic.importer.fileformat.PdfGrobidImporter?grobidService@23.32:23.45CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java (2∑
Zorg.jabref.logic.importer.fileformat.PdfGrobidImporter?importFormatPreferences@24.42:24.65CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java ($2ö
6org.jabref.logic.importer.fileformat.PdfGrobidImporterRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java (Å
importFormatPreferences	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java5 (L"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2t
ImportFormatPreferencesTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java (4°
@org.jabref.logic.importer.fileformat.PdfGrobidImporter.getName()METHODS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java   ("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2ç
,org.jabref.logic.importer.Importer.getName()OVERRIDES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java   (2t
java.lang.StringRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java   (…
Dorg.jabref.logic.importer.fileformat.PdfGrobidImporter.getFileType()METHODS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java% %('"
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>StandardFileType <mark class="method">getFileType</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeStandardFileType*getFileType2ä
&org.jabref.logic.util.StandardFileTypeRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java% %(∏
]org.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.io.BufferedReader)METHODS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java* *(&"
isFinalfalse"Ü
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(BufferedReader reader)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2Ä
#java.util.Objects.requireNonNull(T)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java+ +(2¥
Wjava.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java, ,(/2¡
dorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.io.BufferedReader)!readerCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java+ +(%2™
Iorg.jabref.logic.importer.Importer.importDatabase(java.io.BufferedReader)OVERRIDES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java* *(&2∆
dorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.io.BufferedReader)!reader	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java*6 *(<2ä
&org.jabref.logic.importer.ParserResultRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java* *(ô
dorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.io.BufferedReader)!reader	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java*6 *(<"
typeBufferedReader"
isFinalfalse"*
declarationStringBufferedReader reader*reader2s
java.io.BufferedReaderTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java*' *(5í
Worg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.lang.String)METHODS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java2 2(&"
isFinalfalse"¸
declarationStringÊ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(String data)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2Ä
#java.util.Objects.requireNonNull(T)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java3 3(2¥
Wjava.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java4 4(/2π
\org.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.lang.String)!dataCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java3 3(#2§
Corg.jabref.logic.importer.Importer.importDatabase(java.lang.String)OVERRIDES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java2 2(&2æ
\org.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.lang.String)!data	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java2. 2(22ä
&org.jabref.logic.importer.ParserResultRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java2 2(˜
\org.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.lang.String)!data	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java2. 2(2"
typeString"
isFinalfalse" 
declarationStringString data*data2m
java.lang.StringTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java2' 2(-ª#
Yorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)METHODS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java: :(&"
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(Path filePath)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2Ä
#java.util.Objects.requireNonNull(T)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java; ;(2ü
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java> >(2ß
Jorg.jabref.model.entry.BibEntry.addFile(org.jabref.model.entry.LinkedFile)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java>* >(12Ä
#java.nio.file.Path.toAbsolutePath()CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java>N >(\2¢
Eorg.jabref.logic.importer.ParserResult.fromError(java.lang.Exception)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaA  A()2¡
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java>6 >(@2«
jorg.jabref.logic.importer.ParserResult.ParserResult(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java? ?(#2ø
borg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)!filePathCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java; ;('2≠
Porg.jabref.logic.importer.fileformat.PdfGrobidImporter?grobidService@23.32:23.45CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java=$ =(12ø
borg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)!filePathCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java== =(E2∑
Zorg.jabref.logic.importer.fileformat.PdfGrobidImporter?importFormatPreferences@24.42:24.65CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java=G =(^2…
lorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?result@61.27:61.33CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java> >(2»
korg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?entry@62.27:62.32CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java>$ >()2ø
borg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)!filePathCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java>E >(M2…
lorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?result@61.27:61.33CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java?$ ?(*2Ã
oorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?exception@64.27:64.36CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaA* A(32¶
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)OVERRIDES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java: :(&2ƒ
borg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)!filePath	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java:, :(42–
lorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?result@61.27:61.33DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java= =(!2œ
korg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?entry@62.27:62.32DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java> >( 2”
oorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?exception@64.27:64.36DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java@ @($2ä
&org.jabref.logic.importer.ParserResultRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java: :(Ã	
lorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?result@61.27:61.33VARIABLES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java= =(!"
typeList<BibEntry>"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = grobidService.processPDF(filePath, importFormatPreferences)*result2k
java.util.ListTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java= =(2Ö
org.jabref.model.entry.BibEntryTYPE_ARGUMENTS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java= =(2≠
Porg.jabref.logic.importer.fileformat.PdfGrobidImporter?grobidService@23.32:23.45CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java=$ =(12ø
borg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)!filePathCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java== =(E2∑
Zorg.jabref.logic.importer.fileformat.PdfGrobidImporter?importFormatPreferences@24.42:24.65CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java=G =(^É
borg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)!filePath	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java:, :(4"
typePath"
isFinalfalse""
declarationStringPath filePath*filePath2o
java.nio.file.PathTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java:' :(+í
korg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?entry@62.27:62.32VARIABLES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java> >( "
type"
isFinalfalse"
declarationString entry*entry2TYPEú
oorg.jabref.logic.importer.fileformat.PdfGrobidImporter.importDatabase(java.nio.file.Path)?exception@64.27:64.36VARIABLES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java@ @($"
type	Exception"
isFinalfalse"(
declarationStringException exception*	exception2p
java.lang.ExceptionTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java@ @(ç
aorg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.io.BufferedReader)METHODS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaF F(%"
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isRecognizedFormat</mark>(BufferedReader reader)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isRecognizedFormat2Ä
#java.util.Objects.requireNonNull(T)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaG G(2≈
horg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.io.BufferedReader)!readerCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaG G(%2Æ
Morg.jabref.logic.importer.Importer.isRecognizedFormat(java.io.BufferedReader)OVERRIDES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaF F(%2 
horg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.io.BufferedReader)!reader	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaF5 F(;2k
booleanRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaF F(ù
horg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.io.BufferedReader)!reader	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaF5 F(;"
typeBufferedReader"
isFinalfalse"*
declarationStringBufferedReader reader*reader2s
java.io.BufferedReaderTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaF& F(4ë
]org.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)METHODS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaP P(%"
isFinalfalse"õ
declarationStringÖ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isRecognizedFormat</mark>(Path filePath)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isRecognizedFormat2Ä
#java.util.Objects.requireNonNull(T)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaQ Q(2£
Forg.jabref.logic.util.io.FileUtil.getFileExtension(java.nio.file.Path)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaR. R(>2{
java.util.Optional.isPresent()CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaSP S(Y2ü
Bjava.util.Optional.filter(java.util.function.Predicate<? super T>)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaS S(2Ü
)java.util.List.contains(java.lang.Object)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaSC S(K2ì
6org.jabref.logic.util.StandardFileType.getExtensions()CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaS3 S(@2°
Dorg.jabref.logic.importer.fileformat.PdfGrobidImporter.getFileType()CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaS% S(02√
forg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)!filePathCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaQ Q('2√
forg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)!filePathCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaR? R(G2–
sorg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)?extension@82.25:82.34CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaS S(2»
korg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)?s@83.32:83.33CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaSL S(M2™
Iorg.jabref.logic.importer.Importer.isRecognizedFormat(java.nio.file.Path)OVERRIDES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaP P(%2»
forg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)!filePath	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaP+ P(32◊
sorg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)?extension@82.25:82.34DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaR R("2œ
korg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)?s@83.32:83.33DECLARATIONS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaS  S(!2k
booleanRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaP P(˘
sorg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)?extension@82.25:82.34VARIABLES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaR R(""
typeOptional<String>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Optional<String> <mark class="class-field">extension</mark> = FileUtil.getFileExtension(filePath)*	extension2o
java.util.OptionalTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaR R(2v
java.lang.StringTYPE_ARGUMENTS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaR R(2£
Forg.jabref.logic.util.io.FileUtil.getFileExtension(java.nio.file.Path)CALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaR. R(>2√
forg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)!filePathCALLS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaR? R(Gá
forg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)!filePath	PARAMETERS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaP+ P(3"
typePath"
isFinalfalse""
declarationStringPath filePath*filePath2o
java.nio.file.PathTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaP& P(*ä
korg.jabref.logic.importer.fileformat.PdfGrobidImporter.isRecognizedFormat(java.nio.file.Path)?s@83.32:83.33VARIABLES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaS  S(!"
type"
isFinalfalse"
declarationString s*s2TYPEô
>org.jabref.logic.importer.fileformat.PdfGrobidImporter.getId()METHODS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaW W("
isFinalfalse"í
declarationString}<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getId</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getId2ã
*org.jabref.logic.importer.Importer.getId()OVERRIDES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaW W(2t
java.lang.StringRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.javaW W(æ
Gorg.jabref.logic.importer.fileformat.PdfGrobidImporter.getDescription()METHODS
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java\ \( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getDescription2î
3org.jabref.logic.importer.Importer.getDescription()OVERRIDES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java\ \( 2t
java.lang.StringRETURN_TYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java\ \(∂
Porg.jabref.logic.importer.fileformat.PdfGrobidImporter?grobidService@23.32:23.45VALUES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java  (-"
isFinaltrue"
typeGrobidService"ú
declarationStringÜ<mark class="modifier">private </mark><mark class="modifier">final </mark>GrobidService <mark class="class-field">grobidService</mark>"
isStaticfalse"
accessprivate*grobidService2â
,org.jabref.logic.importer.util.GrobidServiceTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java (“
Zorg.jabref.logic.importer.fileformat.PdfGrobidImporter?importFormatPreferences@24.42:24.65VALUES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java* (A"
isFinaltrue"
typeImportFormatPreferences"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">final </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2t
ImportFormatPreferencesTYPES
Isrc\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java ()