
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaΩ
3org.jabref.logic.importer.fileformat.CustomImporterCLASSP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"ú
declarationStringÜ<mark class="modifier">public </mark><mark class="modifier">class </mark>CustomImporter<mark class="modifier"> extends </mark>Importer"
accesspublic*CustomImporter2«
forg.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (2π
Xorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java& &( 2¶
Eorg.jabref.logic.importer.fileformat.CustomImporter.getAsStringList()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java. .('2£
Borg.jabref.logic.importer.fileformat.CustomImporter.getClassName()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java2 2(2¢
Aorg.jabref.logic.importer.fileformat.CustomImporter.getBasePath()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java6 6(2≠
Lorg.jabref.logic.importer.fileformat.CustomImporter.equals(java.lang.Object)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java; ;(2ø
^org.jabref.logic.importer.fileformat.CustomImporter.isRecognizedFormat(java.io.BufferedReader)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaH H(%2ª
Zorg.jabref.logic.importer.fileformat.CustomImporter.importDatabase(java.io.BufferedReader)DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaM M(&2û
=org.jabref.logic.importer.fileformat.CustomImporter.getName()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaR R(2¢
Aorg.jabref.logic.importer.fileformat.CustomImporter.getFileType()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaW W(2ú
;org.jabref.logic.importer.fileformat.CustomImporter.getId()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java\ \(2•
Dorg.jabref.logic.importer.fileformat.CustomImporter.getDescription()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaa a( 2ü
>org.jabref.logic.importer.fileformat.CustomImporter.hashCode()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaf f(2ü
>org.jabref.logic.importer.fileformat.CustomImporter.toString()DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javak k(2™
Iorg.jabref.logic.importer.fileformat.CustomImporter?className@23.25:23.34DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java ("2©
Horg.jabref.logic.importer.fileformat.CustomImporter?basePath@24.23:24.31DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (2©
Horg.jabref.logic.importer.fileformat.CustomImporter?importer@26.27:26.35DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (#2~
"org.jabref.logic.importer.ImporterEXTENDP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java$ (,ó
forg.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)CONSTRUCTORP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java ("ó
declarationStringÅ<mark class="modifier">public </mark><mark class="method">CustomImporter</mark>(String basePath<mark class="modifier"><mark class="modifier">,</mark></mark> String className)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ImportException*CustomImporter2ñ
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (2≤
Xorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java   (2n
java.net.URI.toURL()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java 2  (72t
java.nio.file.Path.toUri()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java *  (/2®
Norg.jabref.logic.importer.ImportException.ImportException(java.lang.Exception)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java" "(%2…
oorg.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)!basePathCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java  ((2 
porg.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)!classNameCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java ("2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?importer@26.27:26.35CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java   (2÷
|org.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)?exception@33.60:33.69CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java"& "(/2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?basePath@24.23:24.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (2£
Iorg.jabref.logic.importer.fileformat.CustomImporter?className@23.25:23.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?basePath@24.23:24.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java !  ()2£
Iorg.jabref.logic.importer.fileformat.CustomImporter?className@23.25:23.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java @  (I2Œ
oorg.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)!basePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java! ()2œ
porg.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)!className	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java2 (;2›
|org.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)?exception@33.60:33.69DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java!< !(E2î
3org.jabref.logic.importer.fileformat.CustomImporterRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaD (Så
oorg.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)!basePath	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java! ()"
typeString"
isFinalfalse"$
declarationStringString basePath*basePath2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java ( è
porg.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)!className	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java2 (;"
typeString"
isFinalfalse"%
declarationStringString className*	className2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java+ (1è
|org.jabref.logic.importer.fileformat.CustomImporter.CustomImporter(java.lang.String, java.lang.String)?exception@33.60:33.69VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java!< !(E"2
type*IOException | ReflectiveOperationException"
isFinalfalse"I
declarationString4IOException | ReflectiveOperationException exception*	exception2ñ
<java.io.IOException | java.lang.ReflectiveOperationExceptionTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java! !(;Ë
Xorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java& &( "
isFinalfalse"í
declarationString¸<mark class="modifier">private </mark><mark class="modifier">static </mark>Importer <mark class="method">load</mark>(URL basePathURL<mark class="modifier"><mark class="modifier">,</mark></mark> String className)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> ReflectiveOperationException"
isStatictrue"
accessprivate"

isAbstractfalse"
typeImporter*load2£
Ijava.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java)# )(*2ò
>java.lang.reflect.Constructor.newInstance(java.lang.Object...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java*= *(H2∞
Vjava.lang.Class.getDeclaredConstructor(java.lang.Class<? extends java.lang.Object>...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java*$ *(:2ê
6java.net.URLClassLoader.URLClassLoader(java.net.URL[])CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java(% ((32æ
dorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)!basePathURLCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java(> ((I2º
borg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)!classNameCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java)+ )(42¡
gorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)?cl@40.28:40.30CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java)< )(>2ƒ
jorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)?clazz@41.21:41.26CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java* *(#2√
dorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)!basePathURL	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java&% &(02¡
borg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)!className	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java&9 &(B2»
gorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)?cl@40.28:40.30DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java( ((2À
jorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)?clazz@41.21:41.26DECLARATIONP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java) )(2É
"org.jabref.logic.importer.ImporterRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java& &(‘
gorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)?cl@40.28:40.30VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java( (("
typeURLClassLoader"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>URLClassLoader <mark class="class-field">cl</mark> = new URLClassLoader(new URL[] { basePathURL })*cl2q
java.net.URLClassLoaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java( ((2ê
6java.net.URLClassLoader.URLClassLoader(java.net.URL[])CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java(% ((32æ
dorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)!basePathURLCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java(> ((Ií
jorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)?clazz@41.21:41.26VARIABLEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java) )("
typeClass<?>"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>Class<?> <mark class="class-field">clazz</mark> = Class.forName(className, true, cl)*clazz2i
java.lang.ClassTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java) )(2£
Ijava.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java)# )(*2º
borg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)!classNameCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java)+ )(42¡
gorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)?cl@40.28:40.30CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java)< )(>˝
dorg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)!basePathURL	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java&% &(0"
typeURL"
isFinalfalse"$
declarationStringURL basePathURL*basePathURL2f
java.net.URLTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java&! &($Å
borg.jabref.logic.importer.fileformat.CustomImporter.load(java.net.URL, java.lang.String)!className	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java&9 &(B"
typeString"
isFinalfalse"%
declarationStringString className*	className2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java&2 &(8∫

Eorg.jabref.logic.importer.fileformat.CustomImporter.getAsStringList()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java. .('"
isFinalfalse"z
declarationStringe<mark class="modifier">public </mark>List&lt;String&gt; <mark class="method">getAsStringList</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<String>*getAsStringList2w
java.util.Arrays.asList(T...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java/ /(2~
$java.lang.String.replace(char, char)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java/1 /(82w
java.nio.file.Path.toString()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java/& /(.2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?basePath@24.23:24.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java/ /(%2£
Iorg.jabref.logic.importer.fileformat.CustomImporter?className@23.25:23.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java/E /(N2o
java.util.ListRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java. .(2z
java.lang.StringRETURN_TYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java. .(é
Borg.jabref.logic.importer.fileformat.CustomImporter.getClassName()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java2 2("
isFinalfalse"k
declarationStringV<mark class="modifier">public </mark>String <mark class="method">getClassName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getClassName2£
Iorg.jabref.logic.importer.fileformat.CustomImporter?className@23.25:23.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java3 3(2q
java.lang.StringRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java2 2(à
Aorg.jabref.logic.importer.fileformat.CustomImporter.getBasePath()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java6 6("
isFinalfalse"h
declarationStringS<mark class="modifier">public </mark>Path <mark class="method">getBasePath</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typePath*getBasePath2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?basePath@24.23:24.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java7 7(2s
java.nio.file.PathRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java6 6(‰
Lorg.jabref.logic.importer.fileformat.CustomImporter.equals(java.lang.Object)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java; ;("
isFinalfalse"ø
declarationString©<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">equals</mark>(Object other)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*equals2ñ
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaD D(2ñ
<java.util.Objects.equals(java.lang.Object, java.lang.Object)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaDM D(S2¨
Rorg.jabref.logic.importer.fileformat.CustomImporter.equals(java.lang.Object)!otherCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java< <(2¨
Rorg.jabref.logic.importer.fileformat.CustomImporter.equals(java.lang.Object)!otherCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java@ @(2£
Iorg.jabref.logic.importer.fileformat.CustomImporter?className@23.25:23.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaD D('2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?basePath@24.23:24.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaDT D(\2ô
;org.jabref.logic.importer.Importer.equals(java.lang.Object)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java; ;(2±
Rorg.jabref.logic.importer.fileformat.CustomImporter.equals(java.lang.Object)!other	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java;! ;(&2h
booleanRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java; ;(È
Rorg.jabref.logic.importer.fileformat.CustomImporter.equals(java.lang.Object)!other	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java;! ;(&"
typeObject"
isFinalfalse"!
declarationStringObject other*other2j
java.lang.ObjectTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java; ;( æ
^org.jabref.logic.importer.fileformat.CustomImporter.isRecognizedFormat(java.io.BufferedReader)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaH H(%"
isFinalfalse"¢
declarationStringå<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isRecognizedFormat</mark>(BufferedReader input)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isRecognizedFormat2ß
Morg.jabref.logic.importer.Importer.isRecognizedFormat(java.io.BufferedReader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaI I(*2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?importer@26.27:26.35CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaI I(2æ
dorg.jabref.logic.importer.fileformat.CustomImporter.isRecognizedFormat(java.io.BufferedReader)!inputCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaI+ I(02´
Morg.jabref.logic.importer.Importer.isRecognizedFormat(java.io.BufferedReader)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaH H(%2√
dorg.jabref.logic.importer.fileformat.CustomImporter.isRecognizedFormat(java.io.BufferedReader)!input	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaH5 H(:2h
booleanRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaH H(ë
dorg.jabref.logic.importer.fileformat.CustomImporter.isRecognizedFormat(java.io.BufferedReader)!input	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaH5 H(:"
typeBufferedReader"
isFinalfalse")
declarationStringBufferedReader input*input2p
java.io.BufferedReaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaH& H(4Æ
Zorg.jabref.logic.importer.fileformat.CustomImporter.importDatabase(java.io.BufferedReader)METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaM M(&"
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(BufferedReader input)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2£
Iorg.jabref.logic.importer.Importer.importDatabase(java.io.BufferedReader)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaN N(&2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?importer@26.27:26.35CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaN N(2∫
`org.jabref.logic.importer.fileformat.CustomImporter.importDatabase(java.io.BufferedReader)!inputCALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaN' N(,2ß
Iorg.jabref.logic.importer.Importer.importDatabase(java.io.BufferedReader)OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaM M(&2ø
`org.jabref.logic.importer.fileformat.CustomImporter.importDatabase(java.io.BufferedReader)!input	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaM6 M(;2á
&org.jabref.logic.importer.ParserResultRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaM M(ç
`org.jabref.logic.importer.fileformat.CustomImporter.importDatabase(java.io.BufferedReader)!input	PARAMETERP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaM6 M(;"
typeBufferedReader"
isFinalfalse")
declarationStringBufferedReader input*input2p
java.io.BufferedReaderTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaM' M(5√
=org.jabref.logic.importer.fileformat.CustomImporter.getName()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaR R("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2Ü
,org.jabref.logic.importer.Importer.getName()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaS S(2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?importer@26.27:26.35CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaS S(2ä
,org.jabref.logic.importer.Importer.getName()OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaR R(2q
java.lang.StringRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaR R(Í
Aorg.jabref.logic.importer.fileformat.CustomImporter.getFileType()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaW W("
isFinalfalse"õ
declarationStringÖ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>FileType <mark class="method">getFileType</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeFileType*getFileType2ä
0org.jabref.logic.importer.Importer.getFileType()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaX X(#2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?importer@26.27:26.35CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaX X(2é
0org.jabref.logic.importer.Importer.getFileType()OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaW W(2
org.jabref.logic.util.FileTypeRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaW W(π
;org.jabref.logic.importer.fileformat.CustomImporter.getId()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java\ \("
isFinalfalse"í
declarationString}<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getId</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getId2Ñ
*org.jabref.logic.importer.Importer.getId()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java] ](2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?importer@26.27:26.35CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java] ](2à
*org.jabref.logic.importer.Importer.getId()OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java\ \(2q
java.lang.StringRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java\ \(Á
Dorg.jabref.logic.importer.fileformat.CustomImporter.getDescription()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaa a( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getDescription2ç
3org.jabref.logic.importer.Importer.getDescription()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javab b(&2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?importer@26.27:26.35CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javab b(2ë
3org.jabref.logic.importer.Importer.getDescription()OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaa a( 2q
java.lang.StringRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaa a(¯
>org.jabref.logic.importer.fileformat.CustomImporter.hashCode()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaf f("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">int</mark> <mark class="method">hashCode</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeint*hashCode2Ö
+java.util.Objects.hash(java.lang.Object...)CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javag g(2£
Iorg.jabref.logic.importer.fileformat.CustomImporter?className@23.25:23.34CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javag g(%2¢
Horg.jabref.logic.importer.fileformat.CustomImporter?basePath@24.23:24.31CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javag' g(/2ã
-org.jabref.logic.importer.Importer.hashCode()OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaf f(2d
intRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javaf f(¥
>org.jabref.logic.importer.fileformat.CustomImporter.toString()METHODP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javak k("
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">toString</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*toString2ó
=org.jabref.logic.importer.fileformat.CustomImporter.getName()CALLP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javal l(2ã
-org.jabref.logic.importer.Importer.toString()OVERRIDEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javak k(2q
java.lang.StringRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.javak k(ı
Iorg.jabref.logic.importer.fileformat.CustomImporter?className@23.25:23.34VALUEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (""
isFinaltrue"
typeString"ê
declarationString{<mark class="modifier">private </mark><mark class="modifier">final </mark>String <mark class="class-field">className</mark>"
isStaticfalse"
accessprivate*	className2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (
Horg.jabref.logic.importer.fileformat.CustomImporter?basePath@24.23:24.31VALUEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java ("
isFinaltrue"
typePath"ç
declarationStringx<mark class="modifier">private </mark><mark class="modifier">final </mark>Path <mark class="class-field">basePath</mark>"
isStaticfalse"
accessprivate*basePath2l
java.nio.file.PathTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (à
Horg.jabref.logic.importer.fileformat.CustomImporter?importer@26.27:26.35VALUEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (#"
isFinaltrue"
typeImporter"ë
declarationString|<mark class="modifier">private </mark><mark class="modifier">final </mark>Importer <mark class="class-field">importer</mark>"
isStaticfalse"
accessprivate*importer2|
"org.jabref.logic.importer.ImporterTYPEP
Fsrc\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java (