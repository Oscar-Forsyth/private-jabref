
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaØ
;org.jabref.logic.importer.fileformat.PdfContentImporterTestCLASSX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"n
declarationStringY<mark class="modifier"> </mark><mark class="modifier">class </mark>PdfContentImporterTest"
accesspackage_private*PdfContentImporterTest2¨
Corg.jabref.logic.importer.fileformat.PdfContentImporterTest.setUp()DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java	 (2µ
Lorg.jabref.logic.importer.fileformat.PdfContentImporterTest.sGetExtensions()DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java	 (2µ
Lorg.jabref.logic.importer.fileformat.PdfContentImporterTest.getDescription()DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java!	 !(2¡
Xorg.jabref.logic.importer.fileformat.PdfContentImporterTest.doesNotHandleEncryptedPdfs()DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java'	 '(#2¡
Xorg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java.	 .(#2”
jorg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java=	 =(52ƒ
[org.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingWithoutActualDOINumber()DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaX	 X(&2π
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java ('î
Corg.jabref.logic.importer.fileformat.PdfContentImporterTest.setUp()METHODX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java	 ("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2Æ
Lorg.jabref.logic.importer.fileformat.PdfContentImporter.PdfContentImporter()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java ()2≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java (2m
voidRETURN_TYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java (¢
Lorg.jabref.logic.importer.fileformat.PdfContentImporterTest.sGetExtensions()METHODX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java	 ("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">sGetExtensions</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*sGetExtensions2ß
Eorg.jabref.logic.importer.fileformat.PdfContentImporter.getFileType()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java4 (?2≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java+ (32m
voidRETURN_TYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java (•
Lorg.jabref.logic.importer.fileformat.PdfContentImporterTest.getDescription()METHODX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java!	 !("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getDescription2™
Horg.jabref.logic.importer.fileformat.PdfContentImporter.getDescription()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java# #(,2≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java# #(2m
voidRETURN_TYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java! !(∫
Xorg.jabref.logic.importer.fileformat.PdfContentImporterTest.doesNotHandleEncryptedPdfs()METHODX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java'	 '(#"
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">doesNotHandleEncryptedPdfs</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*doesNotHandleEncryptedPdfs2Ö
#java.nio.file.Path.of(java.net.URI)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java( ((2v
java.net.URL.toURI()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java(X ((]2è
-java.lang.Class.getResource(java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java(5 ((@2î
2org.jabref.model.database.BibDatabase.getEntries()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)L )(V2ñ
4org.jabref.logic.importer.ParserResult.getDatabase()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)> )(I2º
Zorg.jabref.logic.importer.fileformat.PdfContentImporter.importDatabase(java.nio.file.Path)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)) )(72É
!java.util.Collections.emptyList()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java*! *(*2≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)  )((2À
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.doesNotHandleEncryptedPdfs()?file@40.13:40.17CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)8 )(<2Õ
korg.jabref.logic.importer.fileformat.PdfContentImporterTest.doesNotHandleEncryptedPdfs()?result@41.23:41.29CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java*. *(42“
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.doesNotHandleEncryptedPdfs()?file@40.13:40.17DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java( ((2‘
korg.jabref.logic.importer.fileformat.PdfContentImporterTest.doesNotHandleEncryptedPdfs()?result@41.23:41.29DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java) )(2m
voidRETURN_TYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java' '(Æ
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.doesNotHandleEncryptedPdfs()?file@40.13:40.17VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java( (("
typePath"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(PdfContentImporter.class.getResource("/pdfs/encrypted.pdf").toURI())*file2t
java.nio.file.PathTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java( ((2Ö
#java.nio.file.Path.of(java.net.URI)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java( ((2v
java.net.URL.toURI()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java(X ((]2è
-java.lang.Class.getResource(java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java(5 ((@ù
korg.jabref.logic.importer.fileformat.PdfContentImporterTest.doesNotHandleEncryptedPdfs()?result@41.23:41.29VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java) )("
typeList<BibEntry>"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = importer.importDatabase(file).getDatabase().getEntries()*result2p
java.util.ListTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java) )(2ä
org.jabref.model.entry.BibEntryTYPE_ARGUMENTX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java) )(2î
2org.jabref.model.database.BibDatabase.getEntries()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)L )(V2ñ
4org.jabref.logic.importer.ParserResult.getDatabase()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)> )(I2º
Zorg.jabref.logic.importer.fileformat.PdfContentImporter.importDatabase(java.nio.file.Path)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)) )(72≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)  )((2À
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.doesNotHandleEncryptedPdfs()?file@40.13:40.17CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java)8 )(<ì6
Xorg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()METHODX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java.	 .(#"
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">importTwiceWorksAsExpected</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*importTwiceWorksAsExpected2Ö
#java.nio.file.Path.of(java.net.URI)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java/ /(2v
java.net.URL.toURI()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java/V /([2è
-java.lang.Class.getResource(java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java/5 /(@2î
2org.jabref.model.database.BibDatabase.getEntries()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0L 0(V2ñ
4org.jabref.logic.importer.ParserResult.getDatabase()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0> 0(I2º
Zorg.jabref.logic.importer.fileformat.PdfContentImporter.importDatabase(java.nio.file.Path)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0) 0(72¿
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java3 3(2¿
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java4 4(2Ω
[org.jabref.model.entry.BibEntry.setFiles(java.util.List<org.jabref.model.entry.LinkedFile>)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java5 5(2à
&java.util.Collections.singletonList(T)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java5& 5(32Ö
#java.nio.file.Path.toAbsolutePath()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java5L 5(Z2î
2org.jabref.model.database.BibDatabase.getEntries()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7X 7(b2ñ
4org.jabref.logic.importer.ParserResult.getDatabase()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7J 7(U2º
Zorg.jabref.logic.importer.fileformat.PdfContentImporter.importDatabase(java.nio.file.Path)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java75 7(C2à
&java.util.Collections.singletonList(T)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java8! 8(.2à
&java.util.Collections.singletonList(T)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java9! 9(.2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java2  2((2∆
dorg.jabref.model.entry.LinkedFile.LinkedFile(java.lang.String, java.nio.file.Path, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java58 5(B2≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0  0((2À
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?file@47.13:47.17CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java08 0(<2œ
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?expected@50.17:50.25CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java3 3(2œ
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?expected@50.17:50.25CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java4 4(2œ
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?expected@50.17:50.25CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java5 5(2À
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?file@47.13:47.17CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java5G 5(K2≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7, 7(42À
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?file@47.13:47.17CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7D 7(H2œ
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?expected@50.17:50.25CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java8/ 8(72Õ
korg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?result@48.23:48.29CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java8: 8(@2œ
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?expected@50.17:50.25CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java9/ 9(72Ÿ
worg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?resultSecondImport@55.23:55.41CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java9: 9(L2“
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?file@47.13:47.17DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java/ /(2‘
korg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?result@48.23:48.29DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0 0(2÷
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?expected@50.17:50.25DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java2 2(2‡
worg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?resultSecondImport@55.23:55.41DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7 7()2m
voidRETURN_TYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java. .(¨
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?file@47.13:47.17VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java/ /("
typePath"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(PdfContentImporter.class.getResource("/pdfs/minimal.pdf").toURI())*file2t
java.nio.file.PathTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java/ /(2Ö
#java.nio.file.Path.of(java.net.URI)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java/ /(2v
java.net.URL.toURI()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java/V /([2è
-java.lang.Class.getResource(java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java/5 /(@ù
korg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?result@48.23:48.29VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0 0("
typeList<BibEntry>"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = importer.importDatabase(file).getDatabase().getEntries()*result2p
java.util.ListTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0 0(2ä
org.jabref.model.entry.BibEntryTYPE_ARGUMENTX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0 0(2î
2org.jabref.model.database.BibDatabase.getEntries()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0L 0(V2ñ
4org.jabref.logic.importer.ParserResult.getDatabase()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0> 0(I2º
Zorg.jabref.logic.importer.fileformat.PdfContentImporter.importDatabase(java.nio.file.Path)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0) 0(72≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java0  0((2À
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?file@47.13:47.17CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java08 0(<‘
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?expected@50.17:50.25VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java2 2("
typeBibEntry"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.InProceedings)*expected2Å
org.jabref.model.entry.BibEntryTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java2 2(2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java2  2((¡
worg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?resultSecondImport@55.23:55.41VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7 7()"
typeList<BibEntry>"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">resultSecondImport</mark> = importer.importDatabase(file).getDatabase().getEntries()*resultSecondImport2p
java.util.ListTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7 7(2ä
org.jabref.model.entry.BibEntryTYPE_ARGUMENTX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7 7(2î
2org.jabref.model.database.BibDatabase.getEntries()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7X 7(b2ñ
4org.jabref.logic.importer.ParserResult.getDatabase()CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7J 7(U2º
Zorg.jabref.logic.importer.fileformat.PdfContentImporter.importDatabase(java.nio.file.Path)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java75 7(C2≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7, 7(42À
iorg.jabref.logic.importer.fileformat.PdfContentImporterTest.importTwiceWorksAsExpected()?file@47.13:47.17CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java7D 7(Hñ
jorg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()METHODX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java=	 =(5"
isFinalfalse"Ã
declarationString∂<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parsingEditorWithoutPagesorSeriesInformation</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*,parsingEditorWithoutPagesorSeriesInformation2¿
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java? ?(2¿
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java@ @(2¿
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaA A(2¿
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaB B(2z
java.util.Optional.of(T)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaT T( 2‘
rorg.jabref.logic.importer.fileformat.PdfContentImporter.getEntryFromPDFContent(java.lang.String, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaT2 T(H2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java> >(%2ﬁ
|org.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?entry@62.17:62.22CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java? ?(2ﬁ
|org.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?entry@62.17:62.22CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java@ @(2ﬁ
|org.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?entry@62.17:62.22CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaA A(2ﬁ
|org.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?entry@62.17:62.22CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaB B(2ﬁ
|org.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?entry@62.17:62.22CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaT! T(&2≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaT) T(12Î
àorg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?firstPageContents@68.15:68.32CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaTI T(Z2Â
|org.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?entry@62.17:62.22DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java> >(2Ú
àorg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?firstPageContents@68.15:68.32DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaD D( 2m
voidRETURN_TYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java= =(‹
|org.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?entry@62.17:62.22VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java> >("
typeBibEntry"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.InProceedings)*entry2Å
org.jabref.model.entry.BibEntryTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java> >(2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java> >(%≤	
àorg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingEditorWithoutPagesorSeriesInformation()?firstPageContents@68.15:68.32VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaD D( "
typeString"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>String <mark class="class-field">firstPageContents</mark> = "Corpus Linguistics ‚Äì An International Handbook ‚Äì L√ºdeling, Anke,\n" + "Kyt√∂<mark class="modifier">,</mark> Merja (Eds.)\n" + "\n" + "Anke L√ºdeling, Merja Kyt√∂ (Eds.)\n" + "\n" + "VOLUME 2\n" + "\n" + "This handbook provides an up-to-date survey of the field of corpus linguistics, a Handb√ºcher zur Sprach- und\n" + "field whose methodology has revolutionized much of the empirical work done in Kommunikationswissenschaft / Handbooks\n" + "\n" + "of Linguistics and Communication Science\n" + "most fields of linguistic study over the past decade. (HSK) 29/2\n" + "\n" + "vii, 578 pages\n" + "Corpus linguistics investigates human language by starting out from large\n"*firstPageContents2r
java.lang.StringTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaD D(π
[org.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingWithoutActualDOINumber()METHODX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaX	 X(&"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parsingWithoutActualDOINumber</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parsingWithoutActualDOINumber2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java\ \(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java[ [(2¡
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaZ Z(2z
java.util.Optional.of(T)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javai i( 2‘
rorg.jabref.logic.importer.fileformat.PdfContentImporter.getEntryFromPDFContent(java.lang.String, java.lang.String)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javai2 i(H2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaY Y(%2œ
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingWithoutActualDOINumber()?entry@89.17:89.22CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaZ Z(2œ
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingWithoutActualDOINumber()?entry@89.17:89.22CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javai! i(&2≤
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javai) i(12€
yorg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingWithoutActualDOINumber()?firstPageContents@94.15:94.32CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaiI i(Z2÷
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingWithoutActualDOINumber()?entry@89.17:89.22DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaY Y(2‚
yorg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingWithoutActualDOINumber()?firstPageContents@94.15:94.32DECLARATIONX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java^ ^( 2m
voidRETURN_TYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaX X(Õ
morg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingWithoutActualDOINumber()?entry@89.17:89.22VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaY Y("
typeBibEntry"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.InProceedings)*entry2Å
org.jabref.model.entry.BibEntryTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaY Y(2≤
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.javaY Y(%ë
yorg.jabref.logic.importer.fileformat.PdfContentImporterTest.parsingWithoutActualDOINumber()?firstPageContents@94.15:94.32VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java^ ^( "
typeString"
isFinalfalse"Ü
declarationString<mark class="modifier"> </mark>String <mark class="class-field">firstPageContents</mark> = "Kent Academic Repository Full text document (pdf)\n" + "Citation for published version\n" + "Smith, Lucy Anna (2014) Mortality in the Ornamental Fish Retail Sector: an Analysis of Stock\n" + "Losses and Stakeholder Opinions.\n" + "DOI\n\n\n" + "Link to record in KAR\n" + "http://kar.kent.ac.uk/51043/\n" + "Document Version\n" + "UNSPECIFIED\n" + "Master of Research (MRes) thesis, University of Kent,."*firstPageContents2r
java.lang.StringTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java^ ^(©
Porg.jabref.logic.importer.fileformat.PdfContentImporterTest?importer@20.31:20.39VARIABLEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java ('"
isFinalfalse"
typePdfContentImporter"w
declarationStringb<mark class="modifier">private </mark>PdfContentImporter <mark class="class-field">importer</mark>"
isStaticfalse"
accessprivate*importer2ô
7org.jabref.logic.importer.fileformat.PdfContentImporterTYPEX
Nsrc\test\java\org\jabref\logic\importer\fileformat\PdfContentImporterTest.java (