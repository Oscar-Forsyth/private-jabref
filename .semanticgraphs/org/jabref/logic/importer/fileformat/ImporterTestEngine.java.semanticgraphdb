
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java±
7org.jabref.logic.importer.fileformat.ImporterTestEngineCLASST
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"p
declarationString[<mark class="modifier">public </mark><mark class="modifier">class </mark>ImporterTestEngine"
accesspublic*ImporterTestEngine2Ÿ
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java %  (12Í
Ñorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java) )(-2Ì
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java- -(02˜
ëorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1 1((2∂
Qorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java; ;(2Ï
Üorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaC C(/2∑
Rorg.jabref.logic.importer.fileformat.ImporterTestEngine?TEST_RESOURCES@25.32:25.46DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java  (. 
torg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java %  (1"
isFinalfalse"õ
declarationStringÖ<mark class="modifier">public </mark><mark class="modifier">static </mark>Collection&lt;String&gt; <mark class="method">getTestFiles</mark>(Predicate&lt;String&gt; fileNamePredicate)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accesspublic"

isAbstractfalse"
typeCollection<String>*getTestFiles2ä
,java.nio.file.Files.list(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java!) !(-2ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java!3 !(52™
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java% %(2•
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java$ $(2Æ
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java# #(2{
java.nio.file.Path.toString()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java#4 #(<2~
 java.nio.file.Path.getFileName()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java#& #(12Ç
$java.util.stream.Collectors.toList()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java%( %(.2∞
Rorg.jabref.logic.importer.fileformat.ImporterTestEngine?TEST_RESOURCES@25.32:25.46CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java!6 !(D2Ê
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)?stream@33.26:33.32CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java" "(2‰
Öorg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)?path@35.25:35.29CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java#! #(%2Â
Üorg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)!fileNamePredicateCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java$ $(-2Í
Üorg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)!fileNamePredicate	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java D  (U2Ì
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)?stream@33.26:33.32DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java! !( 2Î
Öorg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)?path@35.25:35.29DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java# #(2y
java.util.CollectionRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java   (2~
java.lang.StringRETURN_TYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java   (#˙
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)?stream@33.26:33.32VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java! !( "
typeStream<Path>"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>Stream<Path> <mark class="class-field">stream</mark> = Files.list(Path.of(TEST_RESOURCES))*stream2u
java.util.stream.StreamTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java! !(2y
java.nio.file.PathTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java! !(2ä
,java.nio.file.Files.list(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java!) !(-2ö
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java!3 !(52∞
Rorg.jabref.logic.importer.fileformat.ImporterTestEngine?TEST_RESOURCES@25.32:25.46CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java!6 !(DŸ
Üorg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)!fileNamePredicate	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java D  (U"
typePredicate<String>"
isFinalfalse"8
declarationString#Predicate<String> fileNamePredicate*fileNamePredicate2z
java.util.function.PredicateTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java 2  (;2w
java.lang.StringTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java <  (B¨
Öorg.jabref.logic.importer.fileformat.ImporterTestEngine.getTestFiles(java.util.function.Predicate<java.lang.String>)?path@35.25:35.29VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java# #("
type"
isFinalfalse"
declarationString path*path2TYPE 
Ñorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java) )(-"
isFinalfalse"‰
declarationStringŒ<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">testIsRecognizedFormat</mark>(Importer importer<mark class="modifier"><mark class="modifier">,</mark></mark> String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*testIsRecognizedFormat2ß
Iorg.jabref.logic.importer.Importer.isRecognizedFormat(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java*' *(92Ø
Qorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java*: *(A2Ï
çorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!importerCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java* *(&2Ï
çorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java*B *(J2Ò
çorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!importer	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java)7 )(?2Ò
çorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java)H )(P2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java) )( 
çorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!importer	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java)7 )(?"
typeImporter"
isFinalfalse"&
declarationStringImporter importer*importer2Ä
"org.jabref.logic.importer.ImporterTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java). )(6≥
çorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java)H )(P"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java)A )(Gﬂ
áorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java- -(0"
isFinalfalse"Á
declarationString—<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">testIsNotRecognizedFormat</mark>(Importer importer<mark class="modifier"><mark class="modifier">,</mark></mark> String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*testIsNotRecognizedFormat2ß
Iorg.jabref.logic.importer.Importer.isRecognizedFormat(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java.( .(:2Ø
Qorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java.; .(B2Ô
êorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!importerCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java. .('2Ô
êorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java.C .(K2Ù
êorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!importer	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java-: -(B2Ù
êorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java-K -(S2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java- -(Õ
êorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!importer	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java-: -(B"
typeImporter"
isFinalfalse"&
declarationStringImporter importer*importer2Ä
"org.jabref.logic.importer.ImporterTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java-1 -(9∂
êorg.jabref.logic.importer.fileformat.ImporterTestEngine.testIsNotRecognizedFormat(org.jabref.logic.importer.Importer, java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java-K -(S"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java-D -(JË-
ëorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1 1(("
isFinalfalse"˘
declarationString„<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">testImportEntries</mark>(Importer importer<mark class="modifier"><mark class="modifier">,</mark></mark> String fileName<mark class="modifier"><mark class="modifier">,</mark></mark> String fileType)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> ImportException"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*testImportEntries2£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2- 2(;2Ø
Qorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2< 2(C2ê
2org.jabref.logic.importer.ParserResult.isInvalid()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java3 3("2ñ
8org.jabref.logic.importer.ParserResult.getErrorMessage()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java43 4(B2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java7. 7(82í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java6. 6(92È
äorg.jabref.logic.bibtex.BibEntryAssert.assertEquals(java.lang.Class<?>, java.lang.String, java.util.List<org.jabref.model.entry.BibEntry>)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java8 8(#2ù
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java8G 8(Q2©
Korg.jabref.logic.importer.ImportException.ImportException(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java4 4(%2˘
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!importerCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2$ 2(,2˘
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2D 2(L2â
™org.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)?parserResult@50.21:50.33CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java3 3(2â
™org.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)?parserResult@50.21:50.33CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java4& 4(22â
™org.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)?parserResult@50.21:50.33CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java6! 6(-2˘
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java8> 8(F2˘
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!fileTypeCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java8R 8(Z2Ñ
•org.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)?entries@54.23:54.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java8e 8(l2˛
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!importer	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java12 1(:2˛
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1C 1(K2˛
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!fileType	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1T 1(\2ê
™org.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)?parserResult@50.21:50.33DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2 2(!2ã
•org.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)?entries@54.23:54.30DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java6 6(2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1 1(π
™org.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)?parserResult@50.21:50.33VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2 2(!"
typeParserResult"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = importer.importDatabase(getPath(fileName))*parserResult2Ñ
&org.jabref.logic.importer.ParserResultTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2 2(2£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2- 2(;2Ø
Qorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2< 2(C2˘
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!importerCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2$ 2(,2˘
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java2D 2(Lˇ	
•org.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)?entries@54.23:54.30VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java6 6("
typeList<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = parserResult.getDatabase().getEntries()*entries2l
java.util.ListTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java6 6(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java6 6(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java7. 7(82í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java6. 6(92â
™org.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)?parserResult@50.21:50.33CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java6! 6(-◊
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!importer	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java12 1(:"
typeImporter"
isFinalfalse"&
declarationStringImporter importer*importer2Ä
"org.jabref.logic.importer.ImporterTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1) 1(1¿
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1C 1(K"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1< 1(B¿
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportEntries(org.jabref.logic.importer.Importer, java.lang.String, java.lang.String)!fileType	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1T 1(\"
typeString"
isFinalfalse"$
declarationStringString fileType*fileType2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java1M 1(Sñ
Qorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java; ;("
isFinalfalse"È
declarationString”<mark class="modifier">private </mark><mark class="modifier">static </mark>Path <mark class="method">getPath</mark>(String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accessprivate"

isAbstractfalse"
typePath*getPath2Å
#java.nio.file.Path.of(java.net.URI)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java= =(2r
java.net.URL.toURI()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java=J =(O2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java=4 =(?2í
4java.io.IOException.IOException(java.lang.Throwable)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java? ?(!2∏
Zorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java=@ =(H2Ω
_org.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)?e@62.36:62.37CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java?" ?(#2Ω
Zorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java;' ;(/2ƒ
_org.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)?e@62.36:62.37DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java>$ >(%2w
java.nio.file.PathRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java; ;(ˇ
Zorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java;' ;(/"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java;  ;(&ò
_org.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)?e@62.36:62.37VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java>$ >(%"
typeURISyntaxException"
isFinalfalse")
declarationStringURISyntaxException e*e2y
java.net.URISyntaxExceptionTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java> >(#˙
Üorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaC C(/"
isFinalfalse"Ê
declarationString–<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">testImportMalformedFiles</mark>(Importer importer<mark class="modifier"><mark class="modifier">,</mark></mark> String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accesspublic"

isAbstractfalse"
typevoid*testImportMalformedFiles2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaE* E(42í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaDL D(W2£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD* D(82Ø
Qorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD9 D(@2}
java.util.ArrayList.ArrayList()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaF" F(52Ó
èorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)!importerCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD! D()2Ó
èorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaDA D(I2˘
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)?entries@68.23:68.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaF F(2Û
èorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)!importer	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaC9 C(A2Û
èorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaCJ C(R2Ä
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)?entries@68.23:68.30DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD D(2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaC C(¿
öorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)?entries@68.23:68.30VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD D("
typeList<BibEntry>"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = importer.importDatabase(getPath(fileName)).getDatabase().getEntries()*entries2l
java.util.ListTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD D(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD D(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaE* E(42í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaDL D(W2£
Eorg.jabref.logic.importer.Importer.importDatabase(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD* D(82Ø
Qorg.jabref.logic.importer.fileformat.ImporterTestEngine.getPath(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD9 D(@2Ó
èorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)!importerCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaD! D()2Ó
èorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)!fileNameCALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaDA D(IÃ
èorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)!importer	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaC9 C(A"
typeImporter"
isFinalfalse"&
declarationStringImporter importer*importer2Ä
"org.jabref.logic.importer.ImporterTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaC0 C(8µ
èorg.jabref.logic.importer.fileformat.ImporterTestEngine.testImportMalformedFiles(org.jabref.logic.importer.Importer, java.lang.String)!fileName	PARAMETERT
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaCJ C(R"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.javaCC C(IÚ
Rorg.jabref.logic.importer.fileformat.ImporterTestEngine?TEST_RESOURCES@25.32:25.46VALUET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java  (."
isFinaltrue"
typeString"¯
declarationString‚<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">TEST_RESOURCES</mark> = "src/test/resources/org/jabref/logic/importer/fileformat";"
isStatictrue"
accessprivate*TEST_RESOURCES2n
java.lang.StringTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\ImporterTestEngine.java (