
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê
8org.jabref.logic.importer.fileformat.ACMPortalParserTestCLASSU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java ( "/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"£
declarationStringç<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>ACMPortalParserTest"
accesspublic*ACMPortalParserTest2¶
@org.jabref.logic.importer.fileformat.ACMPortalParserTest.setUp()DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java%	 %(2≠
Gorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseEntries()DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaG	 G(2≥
Morg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseDoiSearchPage()DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaQ	 Q(2π
Sorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaZ	 Z(!2≤
Lorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javad	 d(2Æ
Horg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntry()DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javam	 m(2¬
\org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javat	 t(*2Ø
Gorg.jabref.logic.importer.fileformat.ACMPortalParserTest.noEntryFound()DECLARATIONW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaç	 ç(2±
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java (2∫
Torg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchEntryList@31.19:31.34DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java ("2≥
Morg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchUrl@32.8:32.17DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java   (2∂
Porg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchQuery@33.11:33.22DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java! !(2≤
Lorg.jabref.logic.importer.fileformat.ACMPortalParserTest?jsonStr@34.11:34.18DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java" "(Ì2
@org.jabref.logic.importer.fileformat.ACMPortalParserTest.setUp()METHODU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java%	 %("
isFinalfalse"‘
declarationStringæ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2v
java.util.List.of(E, E)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java) )(!2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java: :("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java9 9("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java8 8("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java7 7("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java6 6("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java5 5("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java4 4("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java3 3("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java2 2("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java1 1("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java0 0("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java/ /("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java. .("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java- -("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java, ,("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java+ +("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaB B("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaA A("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java@ @("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java? ?("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java> >("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java= =("2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java< <("2•
Forg.jabref.logic.importer.fileformat.ACMPortalParser.ACMPortalParser()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java& &($2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java* *(2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java; ;(2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java& &(2¨
Morg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchUrl@32.8:32.17CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java' '(2Ø
Porg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchQuery@33.11:33.22CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java(* ((52≥
Torg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchEntryList@31.19:31.34CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java) )(2j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java% %(Á
Gorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseEntries()METHODU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaG	 G("
isFinalfalse"«
declarationString±<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseEntries</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseEntries2ò
9java.net.CookieHandler.setDefault(java.net.CookieHandler)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaH H( 2µ
Vorg.jabref.logic.importer.fileformat.ACMPortalParser.parseEntries(java.io.InputStream)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI+ I(72è
0org.jabref.logic.net.URLDownload.asInputStream()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaIS I(`2≠
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaK K(2Ç
#java.util.stream.Stream.findFirst()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaMR M([2|
java.util.Collection.stream()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaMI M(O2Ö
&java.net.CookieManager.CookieManager()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaH% H(22ô
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI< I(G2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI$ I(*2¨
Morg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchUrl@32.8:32.17CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaIH I(Q2Ω
^org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseEntries()?bibEntries@73.23:73.33CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaJ! J(+2ª
\org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseEntries()?bibEntry@74.22:74.30CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaK K(2≥
Torg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchEntryList@31.19:31.34CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaM! M(02Ω
^org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseEntries()?bibEntries@73.23:73.33CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaM> M(H2ƒ
^org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseEntries()?bibEntries@73.23:73.33DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI I(!2¬
\org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseEntries()?bibEntry@74.22:74.30DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaJ J(2j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaG G(Ê
^org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseEntries()?bibEntries@73.23:73.33VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI I(!"
typeList<BibEntry>"
isFinalfalse"±
declarationStringõ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = parser.parseEntries(new URLDownload(searchUrl).asInputStream())*
bibEntries2m
java.util.ListTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI I(2á
org.jabref.model.entry.BibEntryTYPE_ARGUMENTU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI I(2µ
Vorg.jabref.logic.importer.fileformat.ACMPortalParser.parseEntries(java.io.InputStream)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI+ I(72è
0org.jabref.logic.net.URLDownload.asInputStream()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaIS I(`2ô
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI< I(G2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaI$ I(*2¨
Morg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchUrl@32.8:32.17CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaIH I(Q’
\org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseEntries()?bibEntry@74.22:74.30VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaJ J("
typeBibEntry"
isFinalfalse"f
declarationStringQ<mark class="modifier"> </mark>BibEntry <mark class="class-field">bibEntry</mark>*bibEntry2~
org.jabref.model.entry.BibEntryTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaJ J(¢
Morg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseDoiSearchPage()METHODU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaQ	 Q("
isFinalfalse"Õ
declarationString∑<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseDoiSearchPage</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException<mark class="modifier"><mark class="modifier">,</mark></mark> IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseDoiSearchPage2ò
9java.net.CookieHandler.setDefault(java.net.CookieHandler)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaS S( 2ª
\org.jabref.logic.importer.fileformat.ACMPortalParser.parseDoiSearchPage(java.io.InputStream)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT& T(82è
0org.jabref.logic.net.URLDownload.asInputStream()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaTT T(a2w
java.util.List.isEmpty()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaU U(#2Ö
&java.net.CookieManager.CookieManager()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaS% S(22ô
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT= T(H2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT T(%2¨
Morg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchUrl@32.8:32.17CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaTI T(R2¿
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseDoiSearchPage()?doiList@84.21:84.28CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaU U(2¿
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseDoiSearchPage()?testDoi@82.15:82.22CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaV V(2¿
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseDoiSearchPage()?doiList@84.21:84.28CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaV V(%2«
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseDoiSearchPage()?testDoi@82.15:82.22DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaR R(2«
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseDoiSearchPage()?doiList@84.21:84.28DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT T(2j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaQ Q(·
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseDoiSearchPage()?testDoi@82.15:82.22VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaR R("
typeString"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>String <mark class="class-field">testDoi</mark> = "10.1145/3129790.3129810"*testDoi2o
java.lang.StringTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaR R(€
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseDoiSearchPage()?doiList@84.21:84.28VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT T("
typeList<String>"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>List<String> <mark class="class-field">doiList</mark> = parser.parseDoiSearchPage(new URLDownload(searchUrl).asInputStream())*doiList2m
java.util.ListTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT T(2x
java.lang.StringTYPE_ARGUMENTU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT T(2ª
\org.jabref.logic.importer.fileformat.ACMPortalParser.parseDoiSearchPage(java.io.InputStream)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT& T(82è
0org.jabref.logic.net.URLDownload.asInputStream()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaTT T(a2ô
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT= T(H2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaT T(%2¨
Morg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchUrl@32.8:32.17CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaTI T(RØ
Sorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()METHODU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaZ	 Z(!"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getBibEntriesFromDoiList</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getBibEntriesFromDoiList2v
java.util.List.of(E, E)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java[( [(*2Œ
oorg.jabref.logic.importer.fileformat.ACMPortalParser.getBibEntriesFromDoiList(java.util.List<java.lang.String>)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\+ \(C2≠
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java^ ^(2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\$ \(*2 
korg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?testDoiList@91.21:91.32CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\D \(O2…
jorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?bibEntries@92.23:92.33CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java]! ](+2«
horg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?bibEntry@93.22:93.30CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java^ ^(2≥
Torg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchEntryList@31.19:31.34CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java` `($2…
jorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?bibEntries@92.23:92.33CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java`& `(02—
korg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?testDoiList@91.21:91.32DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java[ [( 2–
jorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?bibEntries@92.23:92.33DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\ \(!2Œ
horg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?bibEntry@93.22:93.30DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java] ](2j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaZ Z(´
korg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?testDoiList@91.21:91.32VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java[ [( "
typeList<String>"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier"> </mark>List<String> <mark class="class-field">testDoiList</mark> = List.of("10.1145/3129790.3129810"<mark class="modifier">,</mark> "10.1145/2950290")*testDoiList2m
java.util.ListTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java[ [(2x
java.lang.StringTYPE_ARGUMENTU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java[ [(2v
java.util.List.of(E, E)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java[( [(*Ë	
jorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?bibEntries@92.23:92.33VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\ \(!"
typeList<BibEntry>"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = parser.getBibEntriesFromDoiList(testDoiList)*
bibEntries2m
java.util.ListTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\ \(2á
org.jabref.model.entry.BibEntryTYPE_ARGUMENTU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\ \(2Œ
oorg.jabref.logic.importer.fileformat.ACMPortalParser.getBibEntriesFromDoiList(java.util.List<java.lang.String>)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\+ \(C2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\$ \(*2 
korg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?testDoiList@91.21:91.32CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java\D \(O·
horg.jabref.logic.importer.fileformat.ACMPortalParserTest.getBibEntriesFromDoiList()?bibEntry@93.22:93.30VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java] ]("
typeBibEntry"
isFinalfalse"f
declarationStringQ<mark class="modifier"> </mark>BibEntry <mark class="class-field">bibEntry</mark>*bibEntry2~
org.jabref.model.entry.BibEntryTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java] ](ˆ
Lorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()METHODU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javad	 d("
isFinalfalse"⁄
declarationStringƒ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getUrlFromDoiList</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getUrlFromDoiList2v
java.util.List.of(E, E)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javag$ g(&2«
horg.jabref.logic.importer.fileformat.ACMPortalParser.getUrlFromDoiList(java.util.List<java.lang.String>)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javah h(*2v
java.net.URL.toString()CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javai! i()2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javah h(2¡
borg.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?doiList@103.21:103.28CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javah+ h(22¿
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?target@101.15:101.21CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javai i(2Ω
^org.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?url@104.12:104.15CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javai i( 2«
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?target@101.15:101.21DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javae e(2»
borg.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?doiList@103.21:103.28DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javag g(2ƒ
^org.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?url@104.12:104.15DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javah h(2j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javad d(‘
aorg.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?target@101.15:101.21VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javae e("
typeString"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>String <mark class="class-field">target</mark> = "https://dl.acm.org/action/exportCiteProcCitation?targetFile=custom-bibtex&format=bibTex&dois=10.1145%2F3129790.3129810%2C10.1145%2F2950290"*target2o
java.lang.StringTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javae e(ö
borg.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?doiList@103.21:103.28VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javag g("
typeList<String>"
isFinalfalse"¿
declarationString™<mark class="modifier"> </mark>List<String> <mark class="class-field">doiList</mark> = List.of("10.1145/3129790.3129810"<mark class="modifier">,</mark> "10.1145/2950290")*doiList2m
java.util.ListTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javag g(2x
java.lang.StringTYPE_ARGUMENTU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javag g(2v
java.util.List.of(E, E)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javag$ g(&ê
^org.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?url@104.12:104.15VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javah h("
typeURL"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>URL <mark class="class-field">url</mark> = parser.getUrlFromDoiList(doiList)*url2k
java.net.URLTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javah h(2«
horg.jabref.logic.importer.fileformat.ACMPortalParser.getUrlFromDoiList(java.util.List<java.lang.String>)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javah h(*2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javah h(2¡
borg.jabref.logic.importer.fileformat.ACMPortalParserTest.getUrlFromDoiList()?doiList@103.21:103.28CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javah+ h(2¯
Horg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntry()METHODU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javam	 m("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseBibEntry</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseBibEntry2≥
Torg.jabref.logic.importer.fileformat.ACMPortalParser.parseBibEntry(java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javan# n(02≠
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javao o(2™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javan n("2´
Lorg.jabref.logic.importer.fileformat.ACMPortalParserTest?jsonStr@34.11:34.18CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javan1 n(82æ
_org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntry()?bibEntry@110.17:110.25CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javao o(2≥
Torg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchEntryList@31.19:31.34CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javap p($2æ
_org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntry()?bibEntry@110.17:110.25CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javap1 p(92≈
_org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntry()?bibEntry@110.17:110.25DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javan n(2j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javam m(ä
_org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntry()?bibEntry@110.17:110.25VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javan n("
typeBibEntry"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>BibEntry <mark class="class-field">bibEntry</mark> = parser.parseBibEntry(jsonStr)*bibEntry2~
org.jabref.model.entry.BibEntryTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javan n(2≥
Torg.jabref.logic.importer.fileformat.ACMPortalParser.parseBibEntry(java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javan# n(02™
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javan n("2´
Lorg.jabref.logic.importer.fileformat.ACMPortalParserTest?jsonStr@34.11:34.18CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javan1 n(8Õ+
\org.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()METHODU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javat	 t(*"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseBibEntryWithFamilyAuthorOnly</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!parseBibEntryWithFamilyAuthorOnly2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÜ Ü(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÖ Ö(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÑ Ñ(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÉ É(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÇ Ç(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÅ Å(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÄ Ä(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java (2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java~ ~(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java} }(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java| |(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java{ {(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaz z(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javay y(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javax x(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaw w(2µ
Torg.jabref.logic.importer.fileformat.ACMPortalParser.parseBibEntry(java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaà& à(32Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javav% v(-2¨
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaà à(%2–
oorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?json@117.15:117.19CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaà4 à(82Ÿ
xorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?expectedEntry@118.17:118.30CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaâ â("2◊
vorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?parsedEntry@136.17:136.28CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaâ$ â(/2’
oorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?json@117.15:117.19DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javau u(2ﬁ
xorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?expectedEntry@118.17:118.30DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javav v(2ﬁ
vorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?parsedEntry@136.17:136.28DECLARATIONW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaà à(2j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javat t(¯
oorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?json@117.15:117.19VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javau u("
typeString"
isFinalfalse"ä
declarationStringÙ<mark class="modifier"> </mark>String <mark class="class-field">json</mark> = "{\"id\":\"10.1145/3011077.3011113\"<mark class="modifier">,</mark>\"type\":\"PAPER_CONFERENCE\"<mark class="modifier">,</mark>\"author\":[{\"family\":\"Ngo-Thi-Thu-Trang\"}<mark class="modifier">,</mark>{\"family\":\"Bui\"<mark class="modifier">,</mark>\"given\":\"Hieu T.\"}<mark class="modifier">,</mark>{\"family\":\"Nguyen\"<mark class="modifier">,</mark>\"given\":\"Nhan D.\"}]<mark class="modifier">,</mark>\"accessed\":{\"date-parts\":[[2023,8,4]]}<mark class="modifier">,</mark>\"issued\":{\"date-parts\":[[2016,12,8]]}<mark class="modifier">,</mark>\"original-date\":{\"date-parts\":[[2016,12,8]]}<mark class="modifier">,</mark>\"abstract\":\"\"<mark class="modifier">,</mark>\"call-number\":\"10.1145/3011077.3011113\"<mark class="modifier">,</mark>\"collection-title\":\"SoICT '16\"<mark class="modifier">,</mark>\"container-title\":\"Proceedings of the 7th Symposium on Information and Communication Technology\"<mark class="modifier">,</mark>\"DOI\":\"10.1145/3011077.3011113\"<mark class="modifier">,</mark>\"event-place\":\"Ho Chi Minh City, Vietnam\"<mark class="modifier">,</mark>\"ISBN\":\"9781450348157\"<mark class="modifier">,</mark>\"keyword\":\"orthogonal frequency division multiplexing (OFDM)<mark class="modifier">,</mark> <mark class="modifier">long</mark>-range passive optical network (LR PON)<mark class="modifier">,</mark> four-wave mixing (FWM)<mark class="modifier">,</mark> wavelength division multiplexing (WDM)\"<mark class="modifier">,</mark>\"number-of-pages\":\"6\"<mark class="modifier">,</mark>\"page\":\"216‚Äì221\"<mark class="modifier">,</mark>\"publisher\":\"Association for Computing Machinery\"<mark class="modifier">,</mark>\"publisher-place\":\"New York, NY, USA\"<mark class="modifier">,</mark>\"title\":\"A simple performance analysis of IM-DD OFDM WDM systems in <mark class="modifier">long</mark> range PON application\"<mark class="modifier">,</mark>\"URL\":\"https://doi.org/10.1145/3011077.3011113\"}"*json2o
java.lang.StringTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javau u(ı'
xorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?expectedEntry@118.17:118.30VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javav v("
typeBibEntry"
isFinalfalse"î
declarationString˛
<mark class="modifier"> </mark>BibEntry <mark class="class-field">expectedEntry</mark> = new BibEntry(StandardEntryType.Conference).withField(StandardField.AUTHOR, "Ngo-Thi-Thu-Trang and Bui, Hieu T. and Nguyen, Nhan D.").withField(StandardField.TITLE, "A simple performance analysis of IM-DD OFDM WDM systems in <mark class="modifier">long</mark> range PON application").withField(StandardField.BOOKTITLE, "Proceedings of the 7th Symposium on Information and Communication Technology").withField(StandardField.YEAR, "2016").withField(StandardField.SERIES, "SoICT '16").withField(StandardField.PAGES, "216‚Äì221").withField(StandardField.ADDRESS, "New York, NY, USA").withField(StandardField.MONTH, "12").withField(StandardField.PUBLISHER, "Association for Computing Machinery").withField(StandardField.LOCATION, "Ho Chi Minh City, Vietnam").withField(StandardField.ISBN, "9781450348157").withField(StandardField.DAY, "8").withField(StandardField.PAGETOTAL, "6").withField(StandardField.DOI, "10.1145/3011077.3011113").withField(StandardField.KEYWORDS, "four-wave mixing (FWM)<mark class="modifier">,</mark> <mark class="modifier">long</mark>-range passive optical network (LR PON)<mark class="modifier">,</mark> orthogonal frequency division multiplexing (OFDM)<mark class="modifier">,</mark> wavelength division multiplexing (WDM)").withField(StandardField.URL, "https://doi.org/10.1145/3011077.3011113")*expectedEntry2~
org.jabref.model.entry.BibEntryTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javav v(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÜ Ü(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÖ Ö(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÑ Ñ(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÉ É(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÇ Ç(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÅ Å(2¿
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaÄ Ä(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java (2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java~ ~(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java} }(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java| |(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java{ {(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaz z(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javay y(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javax x(2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaw w(2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javav% v(-“
vorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?parsedEntry@136.17:136.28VARIABLEW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaà à("
typeBibEntry"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>BibEntry <mark class="class-field">parsedEntry</mark> = parser.parseBibEntry(json)*parsedEntry2Ä
org.jabref.model.entry.BibEntryTYPEW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaà à(2µ
Torg.jabref.logic.importer.fileformat.ACMPortalParser.parseBibEntry(java.lang.String)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaà& à(32¨
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaà à(%2–
oorg.jabref.logic.importer.fileformat.ACMPortalParserTest.parseBibEntryWithFamilyAuthorOnly()?json@117.15:117.19CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaà4 à(8˙
Gorg.jabref.logic.importer.fileformat.ACMPortalParserTest.noEntryFound()METHODW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaç	 ç("
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">noEntryFound</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> IOException<mark class="modifier"><mark class="modifier">,</mark></mark> ParseException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*noEntryFound2ö
9java.net.CookieHandler.setDefault(java.net.CookieHandler)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaé é( 2∑
Vorg.jabref.logic.importer.fileformat.ACMPortalParser.parseEntries(java.io.InputStream)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê+ ê(72ë
0org.jabref.logic.net.URLDownload.asInputStream()CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaêM ê(Z2Ç
!java.util.Collections.emptyList()CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaë! ë(*2á
&java.net.CookieManager.CookieManager()CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaé% é(22õ
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê< ê(G2¨
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê$ ê(*2∫
Yorg.jabref.logic.importer.fileformat.ACMPortalParserTest.noEntryFound()?url@143.12:143.15CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaêH ê(K2¡
`org.jabref.logic.importer.fileformat.ACMPortalParserTest.noEntryFound()?bibEntries@144.23:144.33CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaë. ë(82¡
Yorg.jabref.logic.importer.fileformat.ACMPortalParserTest.noEntryFound()?url@143.12:143.15DECLARATIONW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaè è(2»
`org.jabref.logic.importer.fileformat.ACMPortalParserTest.noEntryFound()?bibEntries@144.23:144.33DECLARATIONW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê ê(!2l
voidRETURN_TYPEW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaç ç(ó
Yorg.jabref.logic.importer.fileformat.ACMPortalParserTest.noEntryFound()?url@143.12:143.15VARIABLEW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaè è("
typeURL"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>URL <mark class="class-field">url</mark> = new URIBuilder("https://dl.acm.org/action/doSearch?AllField=10.1145/3129790.31298").build().toURL()*url2m
java.net.URLTYPEW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaè è(˛
`org.jabref.logic.importer.fileformat.ACMPortalParserTest.noEntryFound()?bibEntries@144.23:144.33VARIABLEW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê ê(!"
typeList<BibEntry>"
isFinalfalse"´
declarationStringï<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = parser.parseEntries(new URLDownload(url).asInputStream())*
bibEntries2o
java.util.ListTYPEW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê ê(2â
org.jabref.model.entry.BibEntryTYPE_ARGUMENTW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê ê(2∑
Vorg.jabref.logic.importer.fileformat.ACMPortalParser.parseEntries(java.io.InputStream)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê+ ê(72ë
0org.jabref.logic.net.URLDownload.asInputStream()CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaêM ê(Z2õ
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê< ê(G2¨
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaê$ ê(*2∫
Yorg.jabref.logic.importer.fileformat.ACMPortalParserTest.noEntryFound()?url@143.12:143.15CALLW
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.javaêH ê(Kí
Korg.jabref.logic.importer.fileformat.ACMPortalParserTest?parser@30.20:30.26VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java ("
isFinalfalse"
typeACMPortalParser"k
declarationStringV<mark class="modifier"> </mark>ACMPortalParser <mark class="class-field">parser</mark>"
isStaticfalse"
accesspackage_private*parser2ì
4org.jabref.logic.importer.fileformat.ACMPortalParserTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java (é
Torg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchEntryList@31.19:31.34VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java (""
isFinalfalse"
typeList<BibEntry>"s
declarationString^<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">searchEntryList</mark>"
isStaticfalse"
accesspackage_private*searchEntryList2m
java.util.ListTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java (2á
org.jabref.model.entry.BibEntryTYPE_ARGUMENTU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java	 (Ÿ
Morg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchUrl@32.8:32.17VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java   ("
isFinalfalse"
typeURL"b
declarationStringM<mark class="modifier"> </mark>URL <mark class="class-field">searchUrl</mark>"
isStaticfalse"
accesspackage_private*	searchUrl2k
java.net.URLTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java   (–
Porg.jabref.logic.importer.fileformat.ACMPortalParserTest?searchQuery@33.11:33.22VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java! !("
isFinalfalse"
typeString"Ã
declarationString∂<mark class="modifier"> </mark>String <mark class="class-field">searchQuery</mark> = "The relationship of code churn and architectural violations in the open source software JabRef";"
isStaticfalse"
accesspackage_private*searchQuery2o
java.lang.StringTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java! !(
Ø
Lorg.jabref.logic.importer.fileformat.ACMPortalParserTest?jsonStr@34.11:34.18VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java" "("
isFinalfalse"
typeString"≥
declarationStringù<mark class="modifier"> </mark>String <mark class="class-field">jsonStr</mark> = "{\"id\":\"10.1145/3129790.3129810\"<mark class="modifier">,</mark>\"type\":\"PAPER_CONFERENCE\"<mark class="modifier">,</mark>\"author\":[{\"family\":\"Olsson\"<mark class="modifier">,</mark>\"given\":\"Tobias\"}<mark class="modifier">,</mark>{\"family\":\"Ericsson\"<mark class="modifier">,</mark>\"given\":\"Morgan\"}<mark class="modifier">,</mark>{\"family\":\"Wingkvist\"<mark class="modifier">,</mark>\"given\":\"Anna\"}]<mark class="modifier">,</mark>\"accessed\":{\"date-parts\":[[2021,5,12]]}<mark class="modifier">,</mark>\"issued\":{\"date-parts\":[[2017,9,11]]}<mark class="modifier">,</mark>\"original-date\":{\"date-parts\":[[2017,9,11]]}<mark class="modifier">,</mark>\"abstract\":\"The open source application JabRef has existed since 2003. In 2015, the developers decided to make an architectural refactoring as continued development was deemed too demanding. The developers also introduced Static Architecture Conformance Checking (SACC) to prevent violations to the intended architecture. Measurements mined from source code repositories such as code churn and code ownership has been linked to several problems, for example fault proneness, security vulnerabilities, code smells, and degraded maintainability. The root cause of such problems can be architectural. To determine the impact of the refactoring of JabRef, we measure the code churn and code ownership before and after the refactoring and find that large files with violations had a significantly higher code churn than large files without violations before the refactoring. After the refactoring, the files that had violations show a more normal code churn. We find no such effect on code ownership. We conclude that files that contain violations detectable by SACC methods are connected to higher than normal code churn.\"<mark class="modifier">,</mark>\"call-number\":\"10.1145/3129790.3129810\"<mark class="modifier">,</mark>\"collection-title\":\"ECSA '17\"<mark class="modifier">,</mark>\"container-title\":\"Proceedings of the 11th European Conference on Software Architecture: Companion Proceedings\"<mark class="modifier">,</mark>\"DOI\":\"10.1145/3129790.3129810\"<mark class="modifier">,</mark>\"event-place\":\"Canterbury, United Kingdom\"<mark class="modifier">,</mark>\"ISBN\":\"9781450352178\"<mark class="modifier">,</mark>\"keyword\":\"software architecture, conformance checking, repository data mining\"<mark class="modifier">,</mark>\"number-of-pages\":\"7\"<mark class="modifier">,</mark>\"page\":\"152‚Äì158\"<mark class="modifier">,</mark>\"publisher\":\"Association for Computing Machinery\"<mark class="modifier">,</mark>\"publisher-place\":\"New York, NY, USA\"<mark class="modifier">,</mark>\"title\":\"The relationship of code churn and architectural violations in the open source software JabRef\"<mark class="modifier">,</mark>\"URL\":\"https://doi.org/10.1145/3129790.3129810\"}";"
isStaticfalse"
accesspackage_private*jsonStr2o
java.lang.StringTYPEU
Ksrc\test\java\org\jabref\logic\importer\fileformat\ACMPortalParserTest.java" "(
