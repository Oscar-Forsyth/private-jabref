
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java´
0org.jabref.logic.importer.fileformat.CoinsParserCLASSM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"ù
declarationStringá<mark class="modifier">public </mark><mark class="modifier">class </mark>CoinsParser<mark class="modifier"><br>implements </mark>Parser"
accesspublic*CoinsParser2∞
Rorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java$ $(&2ä
´org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH H(2û
@org.jabref.logic.importer.fileformat.CoinsParser?DOI@25.26:25.29DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2†
Borg.jabref.logic.importer.fileformat.CoinsParser?TITLE@26.26:26.31DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2¢
Dorg.jabref.logic.importer.fileformat.CoinsParser?JOURNAL@27.26:27.33DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (!2ü
Aorg.jabref.logic.importer.fileformat.CoinsParser?YEAR@28.26:28.30DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2°
Corg.jabref.logic.importer.fileformat.CoinsParser?VOLUME@29.26:29.32DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java ( 2†
Borg.jabref.logic.importer.fileformat.CoinsParser?PAGES@30.26:30.31DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2†
Borg.jabref.logic.importer.fileformat.CoinsParser?ISSUE@31.26:31.31DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2ü
Aorg.jabref.logic.importer.fileformat.CoinsParser?TYPE@32.26:32.30DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java   (2°
Corg.jabref.logic.importer.fileformat.CoinsParser?AUTHOR@33.26:33.32DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java! !( 2y
 org.jabref.logic.importer.ParserEXTENDM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java$ (*«j
Rorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)METHODM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java$ $(&"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">parseEntries</mark>(InputStream inputStream)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*parseEntries2£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%U %(\2u
java.io.BufferedReader.lines()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%M %(R2í
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%h %(o2É
´org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java( ((2É
´org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java) )(2É
´org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java* *(2É
´org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java+ +(2É
´org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java, ,(2É
´org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java- -(2É
´org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java. .(2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java0# 0(*2u
java.util.regex.Matcher.find()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java1 1(2y
"java.util.regex.Matcher.group(int)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java2  2(%2¶
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java4 4(!2¶
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java8 8(!2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java>( >(/2u
java.util.regex.Matcher.find()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java? ?("2y
"java.util.regex.Matcher.group(int)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java@+ @(02l
java.util.List.add(E)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaA A(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaC C(2∫
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaC4 C(82}
&java.util.Collections.singletonList(T)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaE E((2å
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java% %((2ó
@java.io.InputStreamReader.InputStreamReader(java.io.InputStream)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%- %(>2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java& &(%2v
java.util.ArrayList.ArrayList()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java=# =(.2µ
^org.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)!inputStreamCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%? %(J2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java( ((2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java( ((2ó
@org.jabref.logic.importer.fileformat.CoinsParser?DOI@25.26:25.29CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java(  ((#2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java) )(2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java) )(2ô
Borg.jabref.logic.importer.fileformat.CoinsParser?TITLE@26.26:26.31CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java)  )(%2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java* *(2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java* *(2õ
Dorg.jabref.logic.importer.fileformat.CoinsParser?JOURNAL@27.26:27.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java*  *('2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java+ +(2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java+ +(2ò
Aorg.jabref.logic.importer.fileformat.CoinsParser?YEAR@28.26:28.30CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java+  +($2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java, ,(2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java, ,(2ö
Corg.jabref.logic.importer.fileformat.CoinsParser?VOLUME@29.26:29.32CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java,  ,(&2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java- -(2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java- -(2ô
Borg.jabref.logic.importer.fileformat.CoinsParser?PAGES@30.26:30.31CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java-  -(%2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java. .(2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java. .(2ô
Borg.jabref.logic.importer.fileformat.CoinsParser?ISSUE@31.26:31.31CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java.  .(%2ò
Aorg.jabref.logic.importer.fileformat.CoinsParser?TYPE@32.26:32.30CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java0 0("2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java0+ 0(/2¡
jorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?matcherType@48.16:48.27CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java1 1(2¡
jorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?matcherType@48.16:48.27CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java2 2(2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java4 4(2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java8 8(2ö
Corg.jabref.logic.importer.fileformat.CoinsParser?AUTHOR@33.26:33.32CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java>! >('2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java>0 >(42ƒ
morg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?matcherAuthors@62.16:62.30CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java? ?(2ƒ
morg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?matcherAuthors@62.16:62.30CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java@ @(*2Ω
forg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?authors@61.21:61.28CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaA A(2º
eorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?author@64.19:64.25CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaA A(2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaC C(2Ω
forg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?authors@61.21:61.28CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaCB C(I2ª
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaE) E(.2ù
Borg.jabref.logic.importer.Parser.parseEntries(java.io.InputStream)OVERRIDEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java$ $(&2∫
^org.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)!inputStream	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java$3 $(>2¡
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java% %(2¬
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java& &(2»
jorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?matcherType@48.16:48.27DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java0 0(2ƒ
forg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?authors@61.21:61.28DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java= =(2À
morg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?matcherAuthors@62.16:62.30DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java> >(2√
eorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?author@64.19:64.25DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java@ @(2l
java.util.ListRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java$ $(2Ü
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java$ $(Ø
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java% %("
typeString"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>String <mark class="class-field">data</mark> = new BufferedReader(new InputStreamReader(inputStream)).lines().collect(Collectors.joining(OS.NEWLINE))*data2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java% %(2£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%U %(\2u
java.io.BufferedReader.lines()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%M %(R2í
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%h %(o2å
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java% %((2ó
@java.io.InputStreamReader.InputStreamReader(java.io.InputStream)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%- %(>2µ
^org.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)!inputStreamCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java%? %(J‹
dorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?entry@38.17:38.22VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java& &("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java& &(2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java& &(%Õ
jorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?matcherType@48.16:48.27VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java0 0("
typeMatcher"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Matcher <mark class="class-field">matcherType</mark> = TYPE.matcher(data)*matcherType2n
java.util.regex.MatcherTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java0 0(2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java0# 0(*2ò
Aorg.jabref.logic.importer.fileformat.CoinsParser?TYPE@32.26:32.30CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java0 0("2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java0+ 0(/¬
forg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?authors@61.21:61.28VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java= =("
typeList<String>"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>List<String> <mark class="class-field">authors</mark> = new ArrayList<>()*authors2e
java.util.ListTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java= =(2p
java.lang.StringTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java= =(2v
java.util.ArrayList.ArrayList()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java=# =(.€
morg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?matcherAuthors@62.16:62.30VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java> >("
typeMatcher"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>Matcher <mark class="class-field">matcherAuthors</mark> = AUTHOR.matcher(data)*matcherAuthors2n
java.util.regex.MatcherTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java> >(2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java>( >(/2ö
Corg.jabref.logic.importer.fileformat.CoinsParser?AUTHOR@33.26:33.32CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java>! >('2∫
corg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?data@37.15:37.19CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java>0 >(4ì
eorg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?author@64.19:64.25VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java@ @("
typeString"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>String <mark class="class-field">author</mark> = matcherAuthors.group(1)*author2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java@ @(2y
"java.util.regex.Matcher.group(int)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java@+ @(02ƒ
morg.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)?matcherAuthors@62.16:62.30CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java@ @(*à
^org.jabref.logic.importer.fileformat.CoinsParser.parseEntries(java.io.InputStream)!inputStream	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java$3 $(>"
typeInputStream"
isFinalfalse",
declarationStringInputStream inputStream*inputStream2j
java.io.InputStreamTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java$' $(2Õ"
´org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)METHODM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH H("
isFinalfalse"Ù
declarationStringﬁ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">appendData</mark>(String data<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> Pattern pattern<mark class="modifier"><mark class="modifier">,</mark></mark> Field field)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*
appendData2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaI" I()2u
java.util.regex.Matcher.find()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaJ J(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaK K(2y
"java.util.regex.Matcher.group(int)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaK* K(/2ã
≥org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!patternCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaI I(!2à
∞org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!dataCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaI* I(.2ó
øorg.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)?matcher@73.16:73.23CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaJ J(2â
±org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!entryCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaK K(2â
±org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!fieldCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaK K( 2ó
øorg.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)?matcher@73.16:73.23CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaK" K()2ç
∞org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!data	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH# H('2é
±org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!entry	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH2 H(72ê
≥org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!pattern	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaHA H(H2é
±org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!field	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaHP H(U2û
øorg.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)?matcher@73.16:73.23DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaI I(2b
voidRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH H(ﬂ	
øorg.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)?matcher@73.16:73.23VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaI I("
typeMatcher"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>Matcher <mark class="class-field">matcher</mark> = pattern.matcher(data)*matcher2n
java.util.regex.MatcherTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaI I(2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaI" I()2ã
≥org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!patternCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaI I(!2à
∞org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!dataCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaI* I(.¿
∞org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!data	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH# H('"
typeString"
isFinalfalse" 
declarationStringString data*data2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH H("÷
±org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!entry	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH2 H(7"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH) H(1“
≥org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!pattern	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaHA H(H"
typePattern"
isFinalfalse"$
declarationStringPattern pattern*pattern2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaH9 H(@”
±org.jabref.logic.importer.fileformat.CoinsParser.appendData(java.lang.String, org.jabref.model.entry.BibEntry, java.util.regex.Pattern, org.jabref.model.entry.field.Field)!field	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaHP H(U"
typeField"
isFinalfalse" 
declarationStringField field*field2y
"org.jabref.model.entry.field.FieldTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.javaHJ H(Oñ
@org.jabref.logic.importer.fileformat.CoinsParser?DOI@25.26:25.29VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java ("
isFinaltrue"
typePattern"≥
declarationStringù<mark class="modifier">private </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">DOI</mark> = Pattern.compile("%3Fdoi%3D([^&]+)");"
isStaticfalse"
accessprivate*DOI2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2à
1java.util.regex.Pattern.compile(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java( (/£
Borg.jabref.logic.importer.fileformat.CoinsParser?TITLE@26.26:26.31VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java ("
isFinaltrue"
typePattern"º
declarationString¶<mark class="modifier">private </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">TITLE</mark> = Pattern.compile("&amp;rft.atitle=([^&]+)");"
isStaticfalse"
accessprivate*TITLE2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2à
1java.util.regex.Pattern.compile(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java* (1©
Dorg.jabref.logic.importer.fileformat.CoinsParser?JOURNAL@27.26:27.33VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (!"
isFinaltrue"
typePattern"æ
declarationString®<mark class="modifier">private </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">JOURNAL</mark> = Pattern.compile("&amp;rft.jtitle=([^&]+)");"
isStaticfalse"
accessprivate*JOURNAL2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2à
1java.util.regex.Pattern.compile(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java, (3û
Aorg.jabref.logic.importer.fileformat.CoinsParser?YEAR@28.26:28.30VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java ("
isFinaltrue"
typePattern"π
declarationString£<mark class="modifier">private </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">YEAR</mark> = Pattern.compile("&amp;rft.date=([^&]+)");"
isStaticfalse"
accessprivate*YEAR2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2à
1java.util.regex.Pattern.compile(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java) (0¶
Corg.jabref.logic.importer.fileformat.CoinsParser?VOLUME@29.26:29.32VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java ( "
isFinaltrue"
typePattern"Ω
declarationStringß<mark class="modifier">private </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">VOLUME</mark> = Pattern.compile("&amp;rft.volume=([^&]+)");"
isStaticfalse"
accessprivate*VOLUME2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2à
1java.util.regex.Pattern.compile(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java+ (2¢
Borg.jabref.logic.importer.fileformat.CoinsParser?PAGES@30.26:30.31VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java ("
isFinaltrue"
typePattern"ª
declarationString•<mark class="modifier">private </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">PAGES</mark> = Pattern.compile("&amp;rft.pages=([^&]+)");"
isStaticfalse"
accessprivate*PAGES2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2à
1java.util.regex.Pattern.compile(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java* (1¢
Borg.jabref.logic.importer.fileformat.CoinsParser?ISSUE@31.26:31.31VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java ("
isFinaltrue"
typePattern"ª
declarationString•<mark class="modifier">private </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">ISSUE</mark> = Pattern.compile("&amp;rft.issue=([^&]+)");"
isStaticfalse"
accessprivate*ISSUE2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java (2à
1java.util.regex.Pattern.compile(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java* (1ü
Aorg.jabref.logic.importer.fileformat.CoinsParser?TYPE@32.26:32.30VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java   ("
isFinaltrue"
typePattern"∫
declarationString§<mark class="modifier">private </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">TYPE</mark> = Pattern.compile("&amp;rft.genre=([^&]+)");"
isStaticfalse"
accessprivate*TYPE2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java   (2à
1java.util.regex.Pattern.compile(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java )  (0¢
Corg.jabref.logic.importer.fileformat.CoinsParser?AUTHOR@33.26:33.32VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java! !( "
isFinaltrue"
typePattern"π
declarationString£<mark class="modifier">private </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">AUTHOR</mark> = Pattern.compile("&amp;rft.au=([^&]+)");"
isStaticfalse"
accessprivate*AUTHOR2n
java.util.regex.PatternTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java! !(2à
1java.util.regex.Pattern.compile(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java!+ !(2