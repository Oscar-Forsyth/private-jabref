
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java 
7org.jabref.logic.importer.fileformat.BibtexImporterTestCLASST
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java' '("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"p
declarationString[<mark class="modifier">public </mark><mark class="modifier">class </mark>BibtexImporterTest"
accesspublic*BibtexImporterTest2§
?org.jabref.logic.importer.fileformat.BibtexImporterTest.setUp()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java, ,(2±
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest.isRecognizedFormat()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java1 1("2¨
Gorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java7 7(2¨
Gorg.jabref.logic.importer.fileformat.BibtexImporterTest.getFormatName()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javar r(2≠
Horg.jabref.logic.importer.fileformat.BibtexImporterTest.sGetExtensions()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaw w(2≠
Horg.jabref.logic.importer.fileformat.BibtexImporterTest.getDescription()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java| |(2µ
Norg.jabref.logic.importer.fileformat.BibtexImporterTest.recognizesDatabaseID()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÉ É($2ø
Xorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaâ â(;2Í
Çorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaï ï(.2Ó
Üorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly(java.lang.String)DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaù ù(L2⁄
sorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingFilesReadsUmlautCharacterCorrectly(java.lang.String)DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java® ®(92Œ
gorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java∞% ∞(R2Ë
Äorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaª ª(=2∂
Oorg.jabref.logic.importer.fileformat.BibtexImporterTest.wrongEncodingSupplied()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java¬ ¬(%2¥
Morg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingNotSupplied()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÕ Õ(#2±
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java) )(#Û
?org.jabref.logic.importer.fileformat.BibtexImporterTest.setUp()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java, ,("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2§
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLU
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java-k -(Å2™
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java- -(2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java, ,(ø
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest.isRecognizedFormat()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java1 1(""
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormat</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*isRecognizedFormat2Å
#java.nio.file.Path.of(java.net.URI)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java2 2(2r
java.net.URL.toURI()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java2` 2(e2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java25 2(@2ß
Iorg.jabref.logic.importer.Importer.isRecognizedFormat(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java3 3(.2™
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java3 3(2ª
]org.jabref.logic.importer.fileformat.BibtexImporterTest.isRecognizedFormat()?file@50.13:50.17CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java3/ 3(32¬
]org.jabref.logic.importer.fileformat.BibtexImporterTest.isRecognizedFormat()?file@50.13:50.17DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java2 2(2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java1 1(ñ
]org.jabref.logic.importer.fileformat.BibtexImporterTest.isRecognizedFormat()?file@50.13:50.17VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java2 2("
typePath"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(BibtexImporterTest.class.getResource("BibtexImporter.examples.bib").toURI())*file2p
java.nio.file.PathTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java2 2(2Å
#java.nio.file.Path.of(java.net.URI)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java2 2(2r
java.net.URL.toURI()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java2` 2(e2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java25 2(@Èã
Gorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java7 7("
isFinalfalse"“
declarationStringº<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importEntries</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> URISyntaxException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*importEntries2Å
#java.nio.file.Path.of(java.net.URI)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java8 8(2r
java.net.URL.toURI()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java8` 8(e2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java85 8(@2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9P 9(Z2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9B 9(M2¥
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9- 9(;2s
java.util.List.size()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java;# ;('2á
)java.lang.String.equals(java.lang.Object)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java> >(2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java>6 >(92é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java>% >(32v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java@! @(#2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaC C(&2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaD& D((2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaD9 D(G2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaE& E((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaE8 E(@2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaF& F((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaFi F(q2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaG& G((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaG; G(C2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaH& H((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaH6 H(>2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaI& I((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaI= I(E2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaK! K(#2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaM M(&2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaN& N((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaN7 N(?2á
)java.lang.String.equals(java.lang.Object)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaO" O((2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaO@ O(C2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaO/ O(=2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaQ! Q(#2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaT T(&2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaU& U((2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaU< U(J2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaV& V((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaVJ V(R2á
)java.lang.String.equals(java.lang.Object)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaW W(#2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaW; W(>2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaW* W(82v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaY! Y(#2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java\ \(&2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java]& ]((2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java]7 ](E2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java^& ^((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java^G ^(O2á
)java.lang.String.equals(java.lang.Object)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java_& _(,2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java_D _(G2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java_3 _(A2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java`& `((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java`> `(F2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaa& a((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaaA a(I2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javab& b((2é
0org.jabref.model.entry.BibEntry.getCitationKey()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javab@ b(N2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javac& c((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javad d(&2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javae& e((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaeE e(M2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaf& f((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javafF f(N2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javag& g((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javagB g(J2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javah& h((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javahA h(I2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javai& i((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaj j(&2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javak& k((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javakO k(W2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javal& l((2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javal8 l(@2ß
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLU
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaFv F(Ç2™
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9$ 9(,2∂
Xorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?file@56.13:56.17CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9< 9(@2º
^org.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?bibEntries@57.23:57.33CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java; ;("2º
^org.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?bibEntries@57.23:57.33CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java= =((2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java> >($2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaC C(2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaD3 D(82∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaE2 E(72∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaFc F(h2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaG5 G(:2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaH0 H(52∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaI7 I(<2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaM M(2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaN1 N(62∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaO) O(.2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaT T(2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaU6 U(;2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaVD V(I2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaW$ W()2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java\ \(2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java]1 ](62∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java^A ^(F2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java_- _(22∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java`8 `(=2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaa; a(@2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javab: b(?2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javad d(2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javae? e(D2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaf@ f(E2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javag< g(A2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javah; h(@2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaj j(2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javakI k(N2∑
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javal2 l(72Ω
Xorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?file@56.13:56.17DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java8 8(2√
^org.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?bibEntries@57.23:57.33DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9 9(!2æ
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java= =(2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java7 7(ë
Xorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?file@56.13:56.17VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java8 8("
typePath"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(BibtexImporterTest.class.getResource("BibtexImporter.examples.bib").toURI())*file2p
java.nio.file.PathTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java8 8(2Å
#java.nio.file.Path.of(java.net.URI)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java8 8(2r
java.net.URL.toURI()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java8` 8(e2ã
-java.lang.Class.getResource(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java85 8(@ﬂ
^org.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?bibEntries@57.23:57.33VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9 9(!"
typeList<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntries</mark> = importer.importDatabase(file).getDatabase().getEntries()*
bibEntries2l
java.util.ListTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9 9(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9 9(2ê
2org.jabref.model.database.BibDatabase.getEntries()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9P 9(Z2í
4org.jabref.logic.importer.ParserResult.getDatabase()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9B 9(M2¥
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9- 9(;2™
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9$ 9(,2∂
Xorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?file@56.13:56.17CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java9< 9(@ 
Yorg.jabref.logic.importer.fileformat.BibtexImporterTest.importEntries()?entry@61.22:61.27VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java= =("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2}
org.jabref.model.entry.BibEntryTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java= =(¸
Gorg.jabref.logic.importer.fileformat.BibtexImporterTest.getFormatName()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javar r("
isFinalfalse"≥
declarationStringù<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFormatName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFormatName2õ
=org.jabref.logic.importer.fileformat.BibtexImporter.getName()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javas( s(/2™
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javas s('2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javar r(É
Horg.jabref.logic.importer.fileformat.BibtexImporterTest.sGetExtensions()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaw w("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">sGetExtensions</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*sGetExtensions2ü
Aorg.jabref.logic.importer.fileformat.BibtexImporter.getFileType()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javax: x(E2™
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javax1 x(92i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaw w(Ü
Horg.jabref.logic.importer.fileformat.BibtexImporterTest.getDescription()METHODT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java| |("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getDescription2¢
Dorg.jabref.logic.importer.fileformat.BibtexImporter.getDescription()CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java ('2™
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLT
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java (2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java| |(
Norg.jabref.logic.importer.fileformat.BibtexImporterTest.recognizesDatabaseID()METHODV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÉ É($"
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">recognizesDatabaseID</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*recognizesDatabaseID2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÑ Ñ(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÑ` Ñ(e2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÑ5 Ñ(@2x
java.util.Optional.get()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖd Ö(g2õ
;org.jabref.model.database.BibDatabase.getSharedDatabaseID()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖN Ö(a2î
4org.jabref.logic.importer.ParserResult.getDatabase()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ@ Ö(K2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ+ Ö(92¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ" Ö(*2¡
aorg.jabref.logic.importer.fileformat.BibtexImporterTest.recognizesDatabaseID()?file@132.13:132.17CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ: Ö(>2Õ
morg.jabref.logic.importer.fileformat.BibtexImporterTest.recognizesDatabaseID()?sharedDatabaseID@133.15:133.31CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÜ3 Ü(C2»
aorg.jabref.logic.importer.fileformat.BibtexImporterTest.recognizesDatabaseID()?file@132.13:132.17DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÑ Ñ(2‘
morg.jabref.logic.importer.fileformat.BibtexImporterTest.recognizesDatabaseID()?sharedDatabaseID@133.15:133.31DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ Ö(2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÉ É(§
aorg.jabref.logic.importer.fileformat.BibtexImporterTest.recognizesDatabaseID()?file@132.13:132.17VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÑ Ñ("
typePath"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = Path.of(BibtexImporterTest.class.getResource("AutosavedSharedDatabase.bib").toURI())*file2r
java.nio.file.PathTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÑ Ñ(2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÑ Ñ(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÑ` Ñ(e2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÑ5 Ñ(@å
morg.jabref.logic.importer.fileformat.BibtexImporterTest.recognizesDatabaseID()?sharedDatabaseID@133.15:133.31VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ Ö("
typeString"
isFinalfalse"∑
declarationString°<mark class="modifier"> </mark>String <mark class="class-field">sharedDatabaseID</mark> = importer.importDatabase(file).getDatabase().getSharedDatabaseID().get()*sharedDatabaseID2p
java.lang.StringTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ Ö(2x
java.util.Optional.get()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖd Ö(g2õ
;org.jabref.model.database.BibDatabase.getSharedDatabaseID()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖN Ö(a2î
4org.jabref.logic.importer.ParserResult.getDatabase()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ@ Ö(K2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ+ Ö(92¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ" Ö(*2¡
aorg.jabref.logic.importer.fileformat.BibtexImporterTest.recognizesDatabaseID()?file@132.13:132.17CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÖ: Ö(>≠
Xorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader()METHODV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaâ â(;"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">parsingOfEncodedFileWithHeader</mark>()"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typeStream<Arguments>*parsingOfEncodedFileWithHeader2í
2java.nio.charset.Charset.forName(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaç% ç(,2~
java.util.stream.StreamRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaâ â(2õ
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaâ â(Æ
Çorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)METHODV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaï ï(."
isFinalfalse"˙
declarationString‰ <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parsingOfEncodedFileWithHeader</mark>(Charset charset<mark class="modifier"><mark class="modifier">,</mark></mark> String fileName)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*parsingOfEncodedFileWithHeader2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javañ- ñ(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaó ó(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaóG ó(L2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaó1 ó(<2x
java.util.Optional.of(T)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaò ò( 2ê
0org.jabref.model.metadata.MetaData.getEncoding()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaòF ò(Q2î
4org.jabref.logic.importer.ParserResult.getMetaData()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaò8 ò(C2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javañ$ ñ(,2Ï
ãorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)!fileNameCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaó= ó(E2Î
äorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)!charsetCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaò! ò((2˛
ùorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)?parserResult@150.21:150.33CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaò+ ò(72
äorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)!charset	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaï7 ï(>2Ò
ãorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)!fileName	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaïG ï(O2Ö
ùorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)?parserResult@150.21:150.33DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javañ ñ(!2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaï ï(Ò
ùorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)?parserResult@150.21:150.33VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javañ ñ(!"
typeParserResult"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = importer.importDatabase(Path.of(BibtexImporterTest.class.getResource(fileName).toURI()))*parserResult2Ü
&org.jabref.logic.importer.ParserResultTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javañ ñ(2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javañ- ñ(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaó ó(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaóG ó(L2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaó1 ó(<2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javañ$ ñ(,2Ï
ãorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)!fileNameCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaó= ó(Eº
äorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)!charset	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaï7 ï(>"
typeCharset"
isFinalfalse"$
declarationStringCharset charset*charset2x
java.nio.charset.CharsetTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaï/ ï(6µ
ãorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfEncodedFileWithHeader(java.nio.charset.Charset, java.lang.String)!fileName	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaïG ï(O"
typeString"
isFinalfalse"$
declarationStringString fileName*fileName2p
java.lang.StringTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaï@ ï(F’
Üorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly(java.lang.String)METHODV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaù ù(L"
isFinalfalse"›
declarationString« <br><mark class="annotation">@CsvSource({</mark> "encoding-windows-1252-with-header.bib"<mark class="modifier"><mark class="modifier">,</mark></mark> "encoding-windows-1252-without-header.bib" }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly</mark>(String filename)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*<parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaû- û(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaü ü(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaüG ü(L2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaü1 ü(<2t
java.util.List.of(E)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java° °(2ø
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java°@ °(I2í
2org.jabref.model.database.BibDatabase.getEntries()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java¢+ ¢(52î
4org.jabref.logic.importer.ParserResult.getDatabase()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java¢ ¢((2∞
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java° °($2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaû$ û(,2
èorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly(java.lang.String)!filenameCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaü= ü(E2Ç
°org.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly(java.lang.String)?parserResult@158.21:158.33CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java¢ ¢(2ı
èorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly(java.lang.String)!filename	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaùT ù(\2â
°org.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly(java.lang.String)?parserResult@158.21:158.33DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaû û(!2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaù ù(˘
°org.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly(java.lang.String)?parserResult@158.21:158.33VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaû û(!"
typeParserResult"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = importer.importDatabase(Path.of(BibtexImporterTest.class.getResource(filename).toURI()))*parserResult2Ü
&org.jabref.logic.importer.ParserResultTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaû û(2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaû- û(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaü ü(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaüG ü(L2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaü1 ü(<2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaû$ û(,2
èorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly(java.lang.String)!filenameCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaü= ü(Eπ
èorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingOfWindows1252EncodedFileReadsDegreeCharacterCorrectly(java.lang.String)!filename	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaùT ù(\"
typeString"
isFinalfalse"$
declarationStringString filename*filename2p
java.lang.StringTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaùM ù(SÑ
sorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingFilesReadsUmlautCharacterCorrectly(java.lang.String)METHODV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java® ®(9"
isFinalfalse"Å
declarationStringÎ <br><mark class="annotation">@CsvSource({</mark> "encoding-utf-8-with-header.bib"<mark class="modifier"><mark class="modifier">,</mark></mark> "encoding-utf-8-without-header.bib"<mark class="modifier"><mark class="modifier">,</mark></mark> "encoding-utf-16BE-with-header.bib"<mark class="modifier"><mark class="modifier">,</mark></mark> "encoding-utf-16BE-without-header.bib" }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">parsingFilesReadsUmlautCharacterCorrectly</mark>(String filename)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*)parsingFilesReadsUmlautCharacterCorrectly2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java©- ©(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java™ ™(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java™G ™(L2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java™1 ™(<2t
java.util.List.of(E)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java¨ ¨(2ø
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java¨@ ¨(I2í
2org.jabref.model.database.BibDatabase.getEntries()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java≠+ ≠(52î
4org.jabref.logic.importer.ParserResult.getDatabase()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java≠ ≠((2∞
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java¨ ¨($2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java©$ ©(,2‹
|org.jabref.logic.importer.fileformat.BibtexImporterTest.parsingFilesReadsUmlautCharacterCorrectly(java.lang.String)!filenameCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java™= ™(E2Ô
éorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingFilesReadsUmlautCharacterCorrectly(java.lang.String)?parserResult@169.21:169.33CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java≠ ≠(2·
|org.jabref.logic.importer.fileformat.BibtexImporterTest.parsingFilesReadsUmlautCharacterCorrectly(java.lang.String)!filename	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java®A ®(I2ˆ
éorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingFilesReadsUmlautCharacterCorrectly(java.lang.String)?parserResult@169.21:169.33DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java© ©(!2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java® ®(“
éorg.jabref.logic.importer.fileformat.BibtexImporterTest.parsingFilesReadsUmlautCharacterCorrectly(java.lang.String)?parserResult@169.21:169.33VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java© ©(!"
typeParserResult"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = importer.importDatabase(Path.of(BibtexImporterTest.class.getResource(filename).toURI()))*parserResult2Ü
&org.jabref.logic.importer.ParserResultTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java© ©(2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java©- ©(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java™ ™(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java™G ™(L2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java™1 ™(<2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java©$ ©(,2‹
|org.jabref.logic.importer.fileformat.BibtexImporterTest.parsingFilesReadsUmlautCharacterCorrectly(java.lang.String)!filenameCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java™= ™(E•
|org.jabref.logic.importer.fileformat.BibtexImporterTest.parsingFilesReadsUmlautCharacterCorrectly(java.lang.String)!filename	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java®A ®(I"
typeString"
isFinalfalse"$
declarationStringString filename*filename2p
java.lang.StringTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java®: ®(@ƒ
gorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined()METHODV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java∞% ∞(R"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">encodingExplicitlySuppliedCorrectlyDetermined</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*-encodingExplicitlySuppliedCorrectlyDetermined2~
java.util.stream.StreamRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java∞ ∞(2õ
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java∞ ∞(#≠
Äorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)METHODV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaª ª(="
isFinalfalse"∫
declarationString§ <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">encodingExplicitlySuppliedCorrectlyDetermined</mark>(String filename<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> encodingExplicitlySupplied)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*-encodingExplicitlySuppliedCorrectlyDetermined2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaº- º(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaΩ Ω(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaΩG Ω(L2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaΩ1 Ω(<2¢
Borg.jabref.model.metadata.MetaData.getEncodingExplicitlySupplied()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaæL æ(i2î
4org.jabref.logic.importer.ParserResult.getMetaData()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaæ> æ(I2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaº$ º(,2Í
âorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)!filenameCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaΩ= Ω(E2¸
õorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)!encodingExplicitlySuppliedCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaæ æ(/2¸
õorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)?parserResult@188.21:188.33CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaæ1 æ(=2Ô
âorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)!filename	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaªE ª(M2Å
õorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)!encodingExplicitlySupplied	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaªW ª(q2É
õorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)?parserResult@188.21:188.33DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaº º(!2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaª ª(Ì
õorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)?parserResult@188.21:188.33VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaº º(!"
typeParserResult"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = importer.importDatabase(Path.of(BibtexImporterTest.class.getResource(filename).toURI()))*parserResult2Ü
&org.jabref.logic.importer.ParserResultTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaº º(2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaº- º(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaΩ Ω(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaΩG Ω(L2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaΩ1 Ω(<2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaº$ º(,2Í
âorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)!filenameCALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaΩ= Ω(E≥
âorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)!filename	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaªE ª(M"
typeString"
isFinalfalse"$
declarationStringString filename*filename2p
java.lang.StringTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaª> ª(DÄ
õorg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingExplicitlySuppliedCorrectlyDetermined(java.lang.String, boolean)!encodingExplicitlySupplied	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaªW ª(q"
typeboolean"
isFinalfalse"U
declarationString@<mark class="modifier">boolean</mark> encodingExplicitlySupplied*encodingExplicitlySupplied2g
booleanTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaªO ª(V«
Oorg.jabref.logic.importer.fileformat.BibtexImporterTest.wrongEncodingSupplied()METHODV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java¬ ¬(%"
isFinalfalse"à
declarationStringÚ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">wrongEncodingSupplied</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*wrongEncodingSupplied2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java√- √(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaƒ ƒ(2u
java.net.URL.toURI()CALLW
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaƒ} ƒ(Ç2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaƒ1 ƒ(<2t
java.util.List.of(E)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java» »(2ø
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java»@ »(I2í
2org.jabref.model.database.BibDatabase.getEntries()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java…+ …(52î
4org.jabref.logic.importer.ParserResult.getDatabase()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java… …((2∞
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java» »($2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java√$ √(,2 
jorg.jabref.logic.importer.fileformat.BibtexImporterTest.wrongEncodingSupplied()?parserResult@195.21:195.33CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java… …(2—
jorg.jabref.logic.importer.fileformat.BibtexImporterTest.wrongEncodingSupplied()?parserResult@195.21:195.33DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java√ √(!2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java¬ ¬(Ö
jorg.jabref.logic.importer.fileformat.BibtexImporterTest.wrongEncodingSupplied()?parserResult@195.21:195.33VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java√ √(!"
typeParserResult"
isFinalfalse"Ä
declarationStringÍ<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = importer.importDatabase(Path.of(BibtexImporterTest.class.getResource("encoding-windows-1252-but-utf-8-declared--decoding-fails.bib").toURI()))*parserResult2Ü
&org.jabref.logic.importer.ParserResultTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java√ √(2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java√- √(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaƒ ƒ(2u
java.net.URL.toURI()CALLW
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaƒ} ƒ(Ç2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaƒ1 ƒ(<2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java√$ √(,·
Morg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingNotSupplied()METHODV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÕ Õ(#"
isFinalfalse"Ü
declarationString<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">encodingNotSupplied</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*encodingNotSupplied2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaŒ- Œ(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaœ œ(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaœb œ(g2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaœ1 œ(<2¢
Borg.jabref.model.metadata.MetaData.getEncodingExplicitlySupplied()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java–/ –(L2î
4org.jabref.logic.importer.ParserResult.getMetaData()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java–! –(,2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaŒ$ Œ(,2»
horg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingNotSupplied()?parserResult@206.21:206.33CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java– –( 2œ
horg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingNotSupplied()?parserResult@206.21:206.33DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaŒ Œ(!2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaÕ Õ(Á

horg.jabref.logic.importer.fileformat.BibtexImporterTest.encodingNotSupplied()?parserResult@206.21:206.33VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaŒ Œ(!"
typeParserResult"
isFinalfalse"Â
declarationStringœ<mark class="modifier"> </mark>ParserResult <mark class="class-field">parserResult</mark> = importer.importDatabase(Path.of(BibtexImporterTest.class.getResource("encoding-utf-8-without-header.bib").toURI()))*parserResult2Ü
&org.jabref.logic.importer.ParserResultTYPEV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaŒ Œ(2∂
Vorg.jabref.logic.importer.fileformat.BibtexImporter.importDatabase(java.nio.file.Path)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaŒ- Œ(;2É
#java.nio.file.Path.of(java.net.URI)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaœ œ(2t
java.net.URL.toURI()CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaœb œ(g2ç
-java.lang.Class.getResource(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaœ1 œ(<2¨
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35CALLV
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.javaŒ$ Œ(,ë
Lorg.jabref.logic.importer.fileformat.BibtexImporterTest?importer@41.27:41.35VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java) )(#"
isFinalfalse"
typeBibtexImporter"s
declarationString^<mark class="modifier">private </mark>BibtexImporter <mark class="class-field">importer</mark>"
isStaticfalse"
accessprivate*importer2ë
3org.jabref.logic.importer.fileformat.BibtexImporterTYPET
Jsrc\test\java\org\jabref\logic\importer\fileformat\BibtexImporterTest.java) )(