
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÊ
0org.jabref.logic.importer.fileformat.CffImporterCLASSM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java ("/
package$org.jabref.logic.importer.fileformat"
isFinalfalse"
inner classfalse"

isAbstractfalse"ô
declarationStringÉ<mark class="modifier">public </mark><mark class="modifier">class </mark>CffImporter<mark class="modifier"> extends </mark>Importer"
accesspublic*CffImporter2ò
:org.jabref.logic.importer.fileformat.CffImporter.getName()DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java (2ú
>org.jabref.logic.importer.fileformat.CffImporter.getFileType()DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java# #('2ñ
8org.jabref.logic.importer.fileformat.CffImporter.getId()DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java( ((2ü
Aorg.jabref.logic.importer.fileformat.CffImporter.getDescription()DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java- -( 2µ
Worg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java[ [(&2ª
[org.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¢ ¢(%2£
Corg.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaØ# Ø(32§
Dorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaæ æ(*2{
"org.jabref.logic.importer.ImporterEXTENDM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java! ()â
:org.jabref.logic.importer.fileformat.CffImporter.getName()METHODM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java ("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2á
,org.jabref.logic.importer.Importer.getName()OVERRIDEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java (2n
java.lang.StringRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java (∑
>org.jabref.logic.importer.fileformat.CffImporter.getFileType()METHODM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java# #('"
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>StandardFileType <mark class="method">getFileType</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeStandardFileType*getFileType2Ñ
&org.jabref.logic.util.StandardFileTypeRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java# #(Å
8org.jabref.logic.importer.fileformat.CffImporter.getId()METHODM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java( (("
isFinalfalse"í
declarationString}<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getId</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getId2Ö
*org.jabref.logic.importer.Importer.getId()OVERRIDEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java( ((2n
java.lang.StringRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java( ((¶
Aorg.jabref.logic.importer.fileformat.CffImporter.getDescription()METHODM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java- -( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getDescription</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getDescription2é
3org.jabref.logic.importer.Importer.getDescription()OVERRIDEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java- -( 2n
java.lang.StringRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java- -(ãÀ
Worg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)METHODM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java[ [(&"
isFinalfalse"Ü
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>ParserResult <mark class="method">importDatabase</mark>(BufferedReader reader)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParserResult*importDatabase2ö
Corg.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javab* b(:2s
java.util.HashMap.entrySet()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javacB c(J2Ü
/java.util.HashMap.containsKey(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javad d($2s
java.util.Map.Entry.getKey()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javad. d(42r
java.util.HashMap.put(K, V)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javae e(2~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javae& e()2s
java.util.Map.Entry.getKey()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javae3 e(92u
java.util.Map.Entry.getValue()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaeG e(O2Ä
)java.lang.String.equals(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaf f($2s
java.util.Map.Entry.getKey()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaf. f(42Ä
)java.lang.String.equals(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javag g($2u
java.util.Map.Entry.getValue()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javag. g(62Ä
)java.util.List.contains(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaj+ j(32õ
Dorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaj j((2s
java.util.Map.Entry.getKey()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaj= j(C2r
java.util.HashMap.put(K, V)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javak k(2s
java.util.Map.Entry.getKey()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javak7 k(=2u
java.util.Map.Entry.getValue()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javakK k(S2ï
>org.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaw w(32£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javav v( 2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javar r(2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaq q(2t
java.util.Collection.stream()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javap, p(22~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javar* r(-2~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javas0 s(32~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javat0 t(32~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javatO t(R2~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javau- u(02~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javauG u(J2Ç
+org.jabref.model.entry.AuthorList.collect()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javav, v(32r
java.util.HashMap.put(K, V)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javax x(2~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java{ {(2£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java~ ~($2û
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java} }(#2t
java.util.Collection.stream()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java|6 |(<2Ä
)java.lang.String.equals(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java}0 }(62{
$java.util.stream.Collectors.toList()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java~0 ~(62l
java.util.List.size()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java (2•
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaâ, â(32©
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaà, à(/2†
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaá, á(22v
java.util.Collection.stream()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ/ Ü(52Ç
)java.lang.String.equals(java.lang.Object)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaá? á(E2}
$java.util.stream.Collectors.toList()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaâ? â(E2n
java.util.List.size()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaã ã(2n
java.util.List.size()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaç ç("2•
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaë0 ë(72†
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaê0 ê(62†
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaè0 è(62v
java.util.Collection.stream()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaé0 é(62Å
(java.lang.String.split(java.lang.String)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaè@ è(E2Ç
)java.lang.String.equals(java.lang.Object)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaêC ê(I2Å
(java.lang.String.split(java.lang.String)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaêM ê(R2}
$java.util.stream.Collectors.toList()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaëC ë(I2n
java.util.List.size()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaí í("2∆
morg.jabref.model.entry.BibEntry.setField(java.util.Map<org.jabref.model.entry.field.Field, java.lang.String>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaô ô(2n
java.util.List.add(E)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaú ú(2r
java.util.HashMap.HashMap()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java^. ^(72ü
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javak! k(-2’
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javas$ s(*2’
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javat$ t(*2©
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaò ò(%2x
java.util.ArrayList.ArrayList()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaõ) õ(42√
jorg.jabref.logic.importer.ParserResult.ParserResult(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaû û(2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?mapper@92.21:92.27CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java] ](#2µ
^org.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)!readerCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java]. ](42√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javac2 c(:2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?fieldMap@98.31:98.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javad d(2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javad% d(-2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javae e(2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?fieldMap@98.31:98.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javae e(%2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javae* e(22√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javae> e(F2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaf% f(-2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javag% g(-2ƒ
morg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryType@95.26:95.35CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javah h(2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaj4 j(<2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javak k(2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javak. k(62√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javakB k(J2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javap p(#2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?author@113.29:113.35CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaq' q(-2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javar% r()2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javas+ s(/2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javat+ t(/2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javatJ t(N2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javau( u(,2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javauB u(F2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javax x(2∆
oorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?authorStr@112.15:112.24CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javax+ x(42√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java{ {(2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java{: {(B2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java|) |(12ø
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@125.36:125.38CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java}7 }(92√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?doiIds@124.32:124.38CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java (2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÄ Ä(2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?doiIds@124.32:124.38CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÄ0 Ä(62≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÖ Ö(2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ" Ü(*2¡
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@135.51:135.53CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaáF á(H2¡
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@136.48:136.50CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaà6 à(82≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?swhIds@134.25:134.31CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaã ã(2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaå å(2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?swhIds@134.25:134.31CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaå: å(@2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?swhIds@134.25:134.31CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaç ç(2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?swhIds@134.25:134.31CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaé) é(/2¡
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@143.55:143.57CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaè= è(?2¡
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@144.55:144.57CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaêJ ê(L2»
oorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?relSwhIds@142.29:142.38CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaí í(2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaì ì(2»
oorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?relSwhIds@142.29:142.38CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaì> ì(G2∆
morg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryType@95.26:95.35CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaò& ò(/2ƒ
korg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entry@152.17:152.22CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaô ô(2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaô ô(2 
qorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entriesList@155.23:155.34CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaú ú(2ƒ
korg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entry@152.17:152.22CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaú ú(2 
qorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entriesList@155.23:155.34CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaû  û(+2§
Morg.jabref.logic.importer.fileformat.CffImporter.CffFormat?values@51.46:51.52CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javac; c(A2•
Norg.jabref.logic.importer.fileformat.CffImporter.CffFormat?authors@54.32:54.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javap$ p(+2§
Morg.jabref.logic.importer.fileformat.CffImporter.CffAuthor?values@69.46:69.52CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaq. q(42°
Jorg.jabref.logic.importer.fileformat.CffImporter.CffFormat?ids@57.36:57.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java{C {(F2°
Jorg.jabref.logic.importer.fileformat.CffImporter.CffFormat?ids@57.36:57.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java|2 |(52¶
Oorg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?type@82.23:82.27CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java}: }(>2£
Jorg.jabref.logic.importer.fileformat.CffImporter.CffFormat?ids@57.36:57.39CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÖ Ö(2£
Jorg.jabref.logic.importer.fileformat.CffImporter.CffFormat?ids@57.36:57.39CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ+ Ü(.2®
Oorg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?type@82.23:82.27CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaáI á(M2©
Porg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?value@84.23:84.28CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaà9 à(>2§
Iorg.jabref.logic.importer.Importer.importDatabase(java.io.BufferedReader)OVERRIDEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java[ [(&2∫
^org.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)!reader	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java[6 [(<2»
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?mapper@92.21:92.27DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java\ \(2 
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java] ](2 
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java^ ^('2À
morg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryType@95.26:95.35DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java_ _(#2 
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?fieldMap@98.31:98.39DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javab b('2 
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javac' c(/2Õ
oorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?authorStr@112.15:112.24DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javap p(2 
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?doiIds@124.32:124.38DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java|  |(&2Ã
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?swhIds@134.25:134.31DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ Ü(2œ
oorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?relSwhIds@142.29:142.38DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaé é(&2À
korg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entry@152.17:152.22DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaò ò(2—
qorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entriesList@155.23:155.34DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaõ õ("2 
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?author@113.29:113.35DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaq q(#2»
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javar r(!2∆
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@125.36:125.38DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java}$ }(&2»
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@135.51:135.53DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaá3 á(52»
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@136.48:136.50DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaà0 à(22»
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@143.55:143.57DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaè7 è(92»
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@144.55:144.57DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaê7 ê(92Ñ
&org.jabref.logic.importer.ParserResultRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java[ [(ã
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?mapper@92.21:92.27VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java\ \("
typeObjectMapper"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>ObjectMapper <mark class="class-field">mapper</mark> = new ObjectMapper(new YAMLFactory())*mapper2Ç
+com.fasterxml.jackson.databind.ObjectMapperTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java\ \(ú
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java] ]("
type	CffFormat"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>CffFormat <mark class="class-field">citation</mark> = mapper.readValue(reader, CffFormat.class)*citation2ë
:org.jabref.logic.importer.fileformat.CffImporter.CffFormatTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java] ](2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?mapper@92.21:92.27CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java] ](#2µ
^org.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)!readerCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java]. ](4·
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryMap@94.31:94.39VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java^ ^('"
typeHashMap<Field, String>"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>HashMap<Field, String> <mark class="class-field">entryMap</mark> = new HashMap<>()*entryMap2h
java.util.HashMapTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java^ ^(2p
java.lang.StringTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java^ ^(2Ç
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java^ ^(2r
java.util.HashMap.HashMap()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java^. ^(7ò
morg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryType@95.26:95.35VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java_ _(#"
typeStandardEntryType"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>StandardEntryType <mark class="class-field">entryType</mark> = StandardEntryType.Software*	entryType2Ö
.org.jabref.model.entry.types.StandardEntryTypeTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java_ _(ç
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?fieldMap@98.31:98.39VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javab b('"
typeHashMap<String, Field>"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>HashMap<String, Field> <mark class="class-field">fieldMap</mark> = getFieldMappings()*fieldMap2h
java.util.HashMapTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javab b(2Ç
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javab b(2p
java.lang.StringTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javab b(2ö
Corg.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javab* b(:œ
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?property@99.39:99.47VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javac' c(/"!
typeMap.Entry<String, String>"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>Map.Entry<String, String> <mark class="class-field">property</mark>*property2j
java.util.Map.EntryTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javac c(2p
java.lang.StringTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javac c(2p
java.lang.StringTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javac c(Ë'
oorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?authorStr@112.15:112.24VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javap p("
typeString"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>String <mark class="class-field">authorStr</mark> = citation.authors.stream().map(author -> author.values).map(vals -> vals.get("name") != <mark class="modifier">null</mark> ? new Author(vals.get("name")<mark class="modifier">,</mark> ""<mark class="modifier">,</mark> ""<mark class="modifier">,</mark> ""<mark class="modifier">,</mark> "") : new Author(vals.get("given-names")<mark class="modifier">,</mark> <mark class="modifier">null</mark><mark class="modifier">,</mark> vals.get("name-particle")<mark class="modifier">,</mark> vals.get("family-names")<mark class="modifier">,</mark> vals.get("name-suffix"))).collect(AuthorList.collect()).getAsFirstLastNamesWithAnd()*	authorStr2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javap p(2ï
>org.jabref.model.entry.AuthorList.getAsFirstLastNamesWithAnd()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaw w(32£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javav v( 2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javar r(2ß
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaq q(2t
java.util.Collection.stream()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javap, p(22~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javar* r(-2~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javas0 s(32~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javat0 t(32~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javatO t(R2~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javau- u(02~
'java.util.HashMap.get(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javauG u(J2Ç
+org.jabref.model.entry.AuthorList.collect()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javav, v(32’
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javas$ s(*2’
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javat$ t(*2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javap p(#2√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?author@113.29:113.35CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaq' q(-2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javar% r()2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javas+ s(/2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javat+ t(/2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javatJ t(N2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javau( u(,2¡
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javauB u(F2•
Norg.jabref.logic.importer.fileformat.CffImporter.CffFormat?authors@54.32:54.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javap$ p(+2§
Morg.jabref.logic.importer.fileformat.CffImporter.CffAuthor?values@69.46:69.52CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaq. q(4‰
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?doiIds@124.32:124.38VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java|  |(&"
typeList<CffIdentifier>"
isFinalfalse"…
declarationString≥<mark class="modifier"> </mark>List<CffIdentifier> <mark class="class-field">doiIds</mark> = citation.ids.stream().filter(id -> "doi".equals(id.type)).collect(Collectors.toList())*doiIds2e
java.util.ListTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java| |(2û
>org.jabref.logic.importer.fileformat.CffImporter.CffIdentifierTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java| |(2£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java~ ~($2û
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java} }(#2t
java.util.Collection.stream()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java|6 |(<2Ä
)java.lang.String.equals(java.lang.Object)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java}0 }(62{
$java.util.stream.Collectors.toList()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java~0 ~(62√
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java|) |(12ø
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@125.36:125.38CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java}7 }(92°
Jorg.jabref.logic.importer.fileformat.CffImporter.CffFormat?ids@57.36:57.39CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java|2 |(52¶
Oorg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?type@82.23:82.27CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java}: }(>Ô
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?swhIds@134.25:134.31VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ Ü("
typeList<String>"
isFinalfalse"÷
declarationString¿<mark class="modifier"> </mark>List<String> <mark class="class-field">swhIds</mark> = citation.ids.stream().filter(id -> "swh".equals(id.type)).map(id -> id.value).collect(Collectors.toList())*swhIds2g
java.util.ListTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ Ü(2r
java.lang.StringTYPE_ARGUMENTO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ Ü(2•
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaâ, â(32©
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaà, à(/2†
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaá, á(22v
java.util.Collection.stream()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ/ Ü(52Ç
)java.lang.String.equals(java.lang.Object)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaá? á(E2}
$java.util.stream.Collectors.toList()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaâ? â(E2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?citation@93.18:93.26CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ" Ü(*2¡
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@135.51:135.53CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaáF á(H2¡
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@136.48:136.50CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaà6 à(82£
Jorg.jabref.logic.importer.fileformat.CffImporter.CffFormat?ids@57.36:57.39CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaÜ+ Ü(.2®
Oorg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?type@82.23:82.27CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaáI á(M2©
Porg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?value@84.23:84.28CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaà9 à(>¥
oorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?relSwhIds@142.29:142.38VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaé é(&"
typeList<String>"
isFinalfalse"ì
declarationString˝<mark class="modifier"> </mark>List<String> <mark class="class-field">relSwhIds</mark> = swhIds.stream().filter(// quick filter for invalid swhids
id -> id.split(":").length > 3).filter(id -> "rel".equals(id.split(":")[2])).collect(Collectors.toList())*	relSwhIds2g
java.util.ListTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaé é(2r
java.lang.StringTYPE_ARGUMENTO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaé é(2•
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaë0 ë(72†
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaê0 ê(62†
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaè0 è(62v
java.util.Collection.stream()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaé0 é(62Å
(java.lang.String.split(java.lang.String)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaè@ è(E2Ç
)java.lang.String.equals(java.lang.Object)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaêC ê(I2Å
(java.lang.String.split(java.lang.String)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaêM ê(R2}
$java.util.stream.Collectors.toList()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaëC ë(I2≈
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?swhIds@134.25:134.31CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaé) é(/2¡
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@143.55:143.57CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaè= è(?2¡
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@144.55:144.57CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaêJ ê(L·
korg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entry@152.17:152.22VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaò ò("
typeBibEntry"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(entryType)*entry2x
org.jabref.model.entry.BibEntryTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaò ò(2©
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaò ò(%2∆
morg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entryType@95.26:95.35CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaò& ò(/Ú
qorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?entriesList@155.23:155.34VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaõ õ(""
typeList<BibEntry>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entriesList</mark> = new ArrayList<>()*entriesList2g
java.util.ListTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaõ õ(2Å
org.jabref.model.entry.BibEntryTYPE_ARGUMENTO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaõ õ(2x
java.util.ArrayList.ArrayList()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaõ) õ(4á
^org.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)!reader	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java[6 [(<"
typeBufferedReader"
isFinalfalse"*
declarationStringBufferedReader reader*reader2m
java.io.BufferedReaderTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java[' [(5è
lorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?author@113.29:113.35VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaq q(#"
type"
isFinalfalse"
declarationString author*author2TYPEâ
jorg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?vals@114.29:114.33VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javar r(!"
type"
isFinalfalse"
declarationString vals*vals2TYPEÉ
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@125.36:125.38VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java}$ }(&"
type"
isFinalfalse"
declarationString id*id2TYPEÖ
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@135.51:135.53VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaá3 á(5"
type"
isFinalfalse"
declarationString id*id2TYPEÖ
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@136.48:136.50VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaà0 à(2"
type"
isFinalfalse"
declarationString id*id2TYPEÖ
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@143.55:143.57VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaè7 è(9"
type"
isFinalfalse"
declarationString id*id2TYPEÖ
horg.jabref.logic.importer.fileformat.CffImporter.importDatabase(java.io.BufferedReader)?id@144.55:144.57VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaê7 ê(9"
type"
isFinalfalse"
declarationString id*id2TYPEº
[org.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)METHODO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¢ ¢(%"
isFinalfalse"£
declarationStringç<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">boolean</mark> <mark class="method">isRecognizedFormat</mark>(BufferedReader reader)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeboolean*isRecognizedFormat2Ä
'java.util.HashMap.get(java.lang.Object)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java©: ©(=2À
rorg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?citation@165.18:165.26CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java® ®(2…
porg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?mapper@164.21:164.27CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java® ®(2ª
borg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)!readerCALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java®( ®(.2À
rorg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?citation@165.18:165.26CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java© ©(2À
rorg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?citation@165.18:165.26CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java©* ©(22¶
Morg.jabref.logic.importer.fileformat.CffImporter.CffFormat?values@51.46:51.52CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java©3 ©(92™
Morg.jabref.logic.importer.Importer.isRecognizedFormat(java.io.BufferedReader)OVERRIDEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¢ ¢(%2¿
borg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)!reader	PARAMETERO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¢5 ¢(;2–
porg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?mapper@164.21:164.27DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java§ §(2“
rorg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?citation@165.18:165.26DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java• •(2À
korg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?e@170.29:170.30DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java™ ™(2g
booleanRETURN_TYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¢ ¢(ï
porg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?mapper@164.21:164.27VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java§ §("
typeObjectMapper"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>ObjectMapper <mark class="class-field">mapper</mark> = new ObjectMapper(new YAMLFactory())*mapper2Ñ
+com.fasterxml.jackson.databind.ObjectMapperTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java§ §(˝
rorg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?citation@165.18:165.26VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java• •("
type	CffFormat"
isFinalfalse"g
declarationStringR<mark class="modifier"> </mark>CffFormat <mark class="class-field">citation</mark>*citation2ì
:org.jabref.logic.importer.fileformat.CffImporter.CffFormatTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java• •(è
borg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)!reader	PARAMETERO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¢5 ¢(;"
typeBufferedReader"
isFinalfalse"*
declarationStringBufferedReader reader*reader2o
java.io.BufferedReaderTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¢& ¢(4Ñ
korg.jabref.logic.importer.fileformat.CffImporter.isRecognizedFormat(java.io.BufferedReader)?e@170.29:170.30VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java™ ™("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2l
java.io.IOExceptionTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java™ ™(ª"
Corg.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()METHODO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaØ# Ø(3"
isFinalfalse"¬
declarationString¨<mark class="modifier">private </mark>HashMap&lt;String<mark class="modifier"><mark class="modifier">,</mark></mark>Field&gt; <mark class="method">getFieldMappings</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeHashMap<String, Field>*getFieldMappings2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java± ±(2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java≤ ≤(2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java≥ ≥(2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¥ ¥(2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaµ µ(2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∂ ∂(2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∑ ∑(2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∏ ∏(2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaπ π(2t
java.util.HashMap.put(K, V)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∫ ∫(2t
java.util.HashMap.HashMap()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∞3 ∞(<2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java± ±(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java≤ ≤(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java≥ ≥(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¥ ¥(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaµ µ(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∂ ∂(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∑ ∑(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∏ ∏(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaπ π(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∫ ∫(2∏
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaª ª(2ø
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∞ ∞(,2q
java.util.HashMapRETURN_TYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaØ Ø(2ã
"org.jabref.model.entry.field.FieldRETURN_TYPE_ARGUMENTO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaØ Ø(2y
java.lang.StringRETURN_TYPE_ARGUMENTO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaØ Ø(!Ë
_org.jabref.logic.importer.fileformat.CffImporter.getFieldMappings()?fieldMappings@176.31:176.44VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∞ ∞(,"
typeHashMap<String, Field>"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>HashMap<String, Field> <mark class="class-field">fieldMappings</mark> = new HashMap<>()*fieldMappings2j
java.util.HashMapTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∞ ∞(2Ñ
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∞ ∞(2r
java.lang.StringTYPE_ARGUMENTO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∞ ∞(2t
java.util.HashMap.HashMap()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∞3 ∞(<˛
Dorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()METHODO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaæ æ(*"
isFinalfalse"}
declarationStringh<mark class="modifier">private </mark>List&lt;String&gt; <mark class="method">getUnmappedFields</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeList<String>*getUnmappedFields2n
java.util.List.add(E)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¡ ¡(2n
java.util.List.add(E)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¬ ¬(2n
java.util.List.add(E)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java√ √(2n
java.util.List.add(E)CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaƒ ƒ(2x
java.util.ArrayList.ArrayList()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaø" ø(-2≤
Yorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()?fields@191.21:191.27CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¡ ¡(2≤
Yorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()?fields@191.21:191.27CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java¬ ¬(2≤
Yorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()?fields@191.21:191.27CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java√ √(2≤
Yorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()?fields@191.21:191.27CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaƒ ƒ(2≤
Yorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()?fields@191.21:191.27CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java∆ ∆(2π
Yorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()?fields@191.21:191.27DECLARATIONO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaø ø(2n
java.util.ListRETURN_TYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaæ æ(2y
java.lang.StringRETURN_TYPE_ARGUMENTO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaæ æ(ª
Yorg.jabref.logic.importer.fileformat.CffImporter.getUnmappedFields()?fields@191.21:191.27VARIABLEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaø ø("
typeList<String>"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>List<String> <mark class="class-field">fields</mark> = new ArrayList<>()*fields2g
java.util.ListTYPEO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaø ø(2r
java.lang.StringTYPE_ARGUMENTO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaø ø(2x
java.util.ArrayList.ArrayList()CALLO
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaø" ø(-å

:org.jabref.logic.importer.fileformat.CffImporter.CffFormatCLASSM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java2 2("";
package0org.jabref.logic.importer.fileformat.CffImporter"
isFinalfalse"
inner classfalse"

isAbstractfalse"h
declarationStringS<mark class="modifier">private </mark><mark class="modifier">class </mark>CffFormat"
accessprivate*	CffFormat2§
Forg.jabref.logic.importer.fileformat.CffImporter.CffFormat.CffFormat()DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java; ;(2∆
horg.jabref.logic.importer.fileformat.CffImporter.CffFormat.setValues(java.lang.String, java.lang.String)DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java? ?(2´
Morg.jabref.logic.importer.fileformat.CffImporter.CffFormat?values@51.46:51.52DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java3. 3(42¨
Norg.jabref.logic.importer.fileformat.CffImporter.CffFormat?authors@54.32:54.39DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java6  6('2®
Jorg.jabref.logic.importer.fileformat.CffImporter.CffFormat?ids@57.36:57.39DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java9$ 9('≠
Forg.jabref.logic.importer.fileformat.CffImporter.CffFormat.CffFormat()CONSTRUCTORM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java; ;("a
declarationStringL<mark class="modifier">public </mark><mark class="method">CffFormat</mark>()*	CffFormat2ò
:org.jabref.logic.importer.fileformat.CffImporter.CffFormatRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java; ;(‹
horg.jabref.logic.importer.fileformat.CffImporter.CffFormat.setValues(java.lang.String, java.lang.String)METHODM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java? ?("
isFinalfalse"ç
declarationString˜<mark class="annotation">@JsonAnySetter</mark> <br><mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">setValues</mark>(String key<mark class="modifier"><mark class="modifier">,</mark></mark> String value)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*	setValues2r
java.util.HashMap.put(K, V)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java@ @(2§
Morg.jabref.logic.importer.fileformat.CffImporter.CffFormat?values@51.46:51.52CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java@ @(2√
lorg.jabref.logic.importer.fileformat.CffImporter.CffFormat.setValues(java.lang.String, java.lang.String)!keyCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java@ @(2≈
norg.jabref.logic.importer.fileformat.CffImporter.CffFormat.setValues(java.lang.String, java.lang.String)!valueCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java@ @(!2»
lorg.jabref.logic.importer.fileformat.CffImporter.CffFormat.setValues(java.lang.String, java.lang.String)!key	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java?& ?()2 
norg.jabref.logic.importer.fileformat.CffImporter.CffFormat.setValues(java.lang.String, java.lang.String)!value	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java?2 ?(72b
voidRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java? ?(˘
lorg.jabref.logic.importer.fileformat.CffImporter.CffFormat.setValues(java.lang.String, java.lang.String)!key	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java?& ?()"
typeString"
isFinalfalse"
declarationString
String key*key2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java? ?(%ˇ
norg.jabref.logic.importer.fileformat.CffImporter.CffFormat.setValues(java.lang.String, java.lang.String)!value	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java?2 ?(7"
typeString"
isFinalfalse"!
declarationStringString value*value2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java?+ ?(1¸
Morg.jabref.logic.importer.fileformat.CffImporter.CffFormat?values@51.46:51.52VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java3. 3(4"
isFinaltrue"
typeHashMap<String, String>"≤
declarationStringú<mark class="modifier">private </mark><mark class="modifier">final </mark>HashMap<String, String> <mark class="class-field">values</mark> = new HashMap<>();"
isStaticfalse"
accessprivate*values2h
java.util.HashMapTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java3 3(2p
java.lang.StringTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java3 3($2p
java.lang.StringTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java3& 3(,2r
java.util.HashMap.HashMap()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java3; 3(D¸
Norg.jabref.logic.importer.fileformat.CffImporter.CffFormat?authors@54.32:54.39VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java6  6('"
isFinalfalse"
typeList<CffAuthor>"s
declarationString^<mark class="modifier">private </mark>List<CffAuthor> <mark class="class-field">authors</mark>"
isStaticfalse"
accessprivate*authors2e
java.util.ListTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java6 6(2ö
:org.jabref.logic.importer.fileformat.CffImporter.CffAuthorTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java6 6(¸
Jorg.jabref.logic.importer.fileformat.CffImporter.CffFormat?ids@57.36:57.39VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java9$ 9('"
isFinalfalse"
typeList<CffIdentifier>"s
declarationString^<mark class="modifier">private </mark>List<CffIdentifier> <mark class="class-field">ids</mark>"
isStaticfalse"
accessprivate*ids2e
java.util.ListTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java9 9(2û
>org.jabref.logic.importer.fileformat.CffImporter.CffIdentifierTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.java9 9("≤
:org.jabref.logic.importer.fileformat.CffImporter.CffAuthorCLASSM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaD D("";
package0org.jabref.logic.importer.fileformat.CffImporter"
isFinalfalse"
inner classfalse"

isAbstractfalse"h
declarationStringS<mark class="modifier">private </mark><mark class="modifier">class </mark>CffAuthor"
accessprivate*	CffAuthor2§
Forg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.CffAuthor()DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaG G(2∆
horg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.setValues(java.lang.String, java.lang.String)DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaK K(2´
Morg.jabref.logic.importer.fileformat.CffImporter.CffAuthor?values@69.46:69.52DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaE. E(4≠
Forg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.CffAuthor()CONSTRUCTORM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaG G("a
declarationStringL<mark class="modifier">public </mark><mark class="method">CffAuthor</mark>()*	CffAuthor2ò
:org.jabref.logic.importer.fileformat.CffImporter.CffAuthorRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaG G(‹
horg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.setValues(java.lang.String, java.lang.String)METHODM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaK K("
isFinalfalse"ç
declarationString˜<mark class="annotation">@JsonAnySetter</mark> <br><mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">setValues</mark>(String key<mark class="modifier"><mark class="modifier">,</mark></mark> String value)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*	setValues2r
java.util.HashMap.put(K, V)CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaL L(2§
Morg.jabref.logic.importer.fileformat.CffImporter.CffAuthor?values@69.46:69.52CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaL L(2√
lorg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.setValues(java.lang.String, java.lang.String)!keyCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaL L(2≈
norg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.setValues(java.lang.String, java.lang.String)!valueCALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaL L(!2»
lorg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.setValues(java.lang.String, java.lang.String)!key	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaK& K()2 
norg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.setValues(java.lang.String, java.lang.String)!value	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaK2 K(72b
voidRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaK K(˘
lorg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.setValues(java.lang.String, java.lang.String)!key	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaK& K()"
typeString"
isFinalfalse"
declarationString
String key*key2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaK K(%ˇ
norg.jabref.logic.importer.fileformat.CffImporter.CffAuthor.setValues(java.lang.String, java.lang.String)!value	PARAMETERM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaK2 K(7"
typeString"
isFinalfalse"!
declarationStringString value*value2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaK+ K(1¸
Morg.jabref.logic.importer.fileformat.CffImporter.CffAuthor?values@69.46:69.52VALUEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaE. E(4"
isFinaltrue"
typeHashMap<String, String>"≤
declarationStringú<mark class="modifier">private </mark><mark class="modifier">final </mark>HashMap<String, String> <mark class="class-field">values</mark> = new HashMap<>();"
isStaticfalse"
accessprivate*values2h
java.util.HashMapTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaE E(2p
java.lang.StringTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaE E($2p
java.lang.StringTYPE_ARGUMENTM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaE& E(,2r
java.util.HashMap.HashMap()CALLM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaE; E(D∞
>org.jabref.logic.importer.fileformat.CffImporter.CffIdentifierCLASSM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaP P(&";
package0org.jabref.logic.importer.fileformat.CffImporter"
isFinalfalse"
inner classfalse"

isAbstractfalse"l
declarationStringW<mark class="modifier">private </mark><mark class="modifier">class </mark>CffIdentifier"
accessprivate*CffIdentifier2¨
Norg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier.CffIdentifier()DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaV V(2≠
Oorg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?type@82.23:82.27DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaR R(2Æ
Porg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?value@84.23:84.28DECLARATIONM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaT T(¡
Norg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier.CffIdentifier()CONSTRUCTORM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaV V("e
declarationStringP<mark class="modifier">public </mark><mark class="method">CffIdentifier</mark>()*CffIdentifier2ú
>org.jabref.logic.importer.fileformat.CffImporter.CffIdentifierRETURN_TYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaV V( 
Oorg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?type@82.23:82.27VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaR R("
isFinalfalse"
typeString"g
declarationStringR<mark class="modifier">private </mark>String <mark class="class-field">type</mark>"
isStaticfalse"
accessprivate*type2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaR R(Õ
Porg.jabref.logic.importer.fileformat.CffImporter.CffIdentifier?value@84.23:84.28VARIABLEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaT T("
isFinalfalse"
typeString"h
declarationStringS<mark class="modifier">private </mark>String <mark class="class-field">value</mark>"
isStaticfalse"
accessprivate*value2g
java.lang.StringTYPEM
Csrc\main\java\org\jabref\logic\importer\fileformat\CffImporter.javaT T(