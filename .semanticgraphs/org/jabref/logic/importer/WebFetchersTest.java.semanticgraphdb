
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java…
)org.jabref.logic.importer.WebFetchersTestCLASSF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java" "("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"g
declarationStringR<mark class="modifier"> </mark><mark class="modifier">class </mark>WebFetchersTest"
accesspackage_private*WebFetchersTest2à
1org.jabref.logic.importer.WebFetchersTest.setUp()DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java,	 ,(2†
Iorg.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java1 1(72¿
iorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java?	 ?(F2∆
oorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java]	 ](L2»
qorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javao	 o(N2ƒ
korg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaã	 ã(H2∏
_org.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaû	 û(<2¶
Morg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java∞$ ∞(.2ì
<org.jabref.logic.importer.WebFetchersTest?LOGGER@36.32:36.38DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java$  $(&2™
Sorg.jabref.logic.importer.WebFetchersTest?IGNORED_INACCESSIBLE_FETCHERS@37.37:37.66DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java%% %(B2§
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java'$ '(;2†
Iorg.jabref.logic.importer.WebFetchersTest?importerPreferences@40.32:40.51DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java(  ((32ó
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java) )('¥
1org.jabref.logic.importer.WebFetchersTest.setUp()METHODF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java,	 ,("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2ù
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java- -(2ô
Iorg.jabref.logic.importer.WebFetchersTest?importerPreferences@40.32:40.51CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java. .(2[
voidRETURN_TYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java, ,(…
Iorg.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()METHODF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java1 1(7"
isFinalfalse"ê
declarationString{<mark class="modifier">private </mark>Set&lt;Class&lt;?&gt;&gt; <mark class="method">getIgnoredInaccessibleClasses</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeSet<Class<?>>*getIgnoredInaccessibleClasses2ú
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java;1 ;(82ó
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java; ;(2†
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java4 4(2†
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java3 3(2m
java.util.Collection.stream()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java2- 2(32y
)java.lang.Class.forName(java.lang.String)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java6* 6(12s
#java.util.stream.Collectors.toSet()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java;D ;(I2£
Sorg.jabref.logic.importer.WebFetchersTest?IGNORED_INACCESSIBLE_FETCHERS@37.37:37.66CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java2 2(,2Ø
_org.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()?className@51.26:51.35CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java3N 3(W2Ø
_org.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()?classPath@52.26:52.35CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java62 6(;2å
<org.jabref.logic.importer.WebFetchersTest?LOGGER@36.32:36.38CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java8 8(#2ß
Worg.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()?e@55.57:55.58CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java8X 8(Y2{
+java.util.Objects.nonNull(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java; ;(/2∂
_org.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()?className@51.26:51.35DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java3 3(#2∂
_org.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()?classPath@52.26:52.35DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java4 4(#2Æ
Worg.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()?e@55.57:55.58DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java79 7(:2d
java.util.SetRETURN_TYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java1 1(2o
java.lang.ClassRETURN_TYPE_ARGUMENTF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java1 1(Å
_org.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()?className@51.26:51.35VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java3 3(#"
type"
isFinalfalse"
declarationString
 className*	className2TYPEÅ
_org.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()?classPath@52.26:52.35VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java4 4(#"
type"
isFinalfalse"
declarationString
 classPath*	classPath2TYPEÅ
Worg.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()?e@55.57:55.58VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java79 7(:"
typeClassNotFoundException"
isFinalfalse"-
declarationStringClassNotFoundException e*e2p
 java.lang.ClassNotFoundExceptionTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java7" 7(8û6
iorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()METHODF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java?	 ?(F"
isFinalfalse"›
declarationString«<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*=getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher2r
"java.lang.Class.getCanonicalName()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaCb C(r2ô
Ijava.util.Set.removeAll(java.util.Collection<? extends java.lang.Object>)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaG G(2ô
Iorg.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaG G(<2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaI I(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaJ J(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaM M(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaN N(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaO O(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaP P(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaR R(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaT T(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaU U(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaV V(2ù
Morg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaX# X(-2ù
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java@H @(_2ô
Iorg.jabref.logic.importer.WebFetchersTest?importerPreferences@40.32:40.51CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java@a @(t2ê
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaB% B(/2—
Äorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?scanResult@66.24:66.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaC+ C(52’
Ñorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?controlClasses@67.26:67.40CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaD3 D(A2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaG G(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaI I(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaJ J(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaM M(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaN N(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaO O(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaP P(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaR R(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaT T(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaU U(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaV V(2Œ
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaX X(!2—
Äorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?idFetchers@64.28:64.38CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaX. X(82ÿ
Äorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?idFetchers@64.28:64.38DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java@ @(&2ÿ
Äorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?scanResult@66.24:66.34DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaB B("2‹
Ñorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?controlClasses@67.26:67.40DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaC C((2’
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaD D("2[
voidRETURN_TYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java? ?(ı
Äorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?idFetchers@64.28:64.38VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java@ @(&"
typeSet<IdBasedFetcher>"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>Set<IdBasedFetcher> <mark class="class-field">idFetchers</mark> = WebFetchers.getIdBasedFetchers(importFormatPreferences, importerPreferences)*
idFetchers2]
java.util.SetTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java@ @(2Å
(org.jabref.logic.importer.IdBasedFetcherTYPE_ARGUMENTF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java@ @(2ù
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java@H @(_2ô
Iorg.jabref.logic.importer.WebFetchersTest?importerPreferences@40.32:40.51CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java@a @(tã
Äorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?scanResult@66.24:66.34VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaB B(""
type
ScanResult"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>ScanResult <mark class="class-field">scanResult</mark> = classGraph.scan()*
scanResult2o
io.github.classgraph.ScanResultTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaB B(2ê
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaB% B(/ê
Ñorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?controlClasses@67.26:67.40VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaC C(("
typeClassInfoList"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>ClassInfoList <mark class="class-field">controlClasses</mark> = scanResult.getClassesImplementing(IdBasedFetcher.class.getCanonicalName())*controlClasses2r
"io.github.classgraph.ClassInfoListTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaC C(2r
"java.lang.Class.getCanonicalName()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaCb C(r2—
Äorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?scanResult@66.24:66.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaC+ C(5√
~org.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?expected@68.26:68.34VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaD D(""
typeSet<Class<?>>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Set<Class<?>> <mark class="class-field">expected</mark> = new HashSet<>(controlClasses.loadClasses())*expected2]
java.util.SetTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaD D(2h
java.lang.ClassTYPE_ARGUMENTF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaD D(2’
Ñorg.jabref.logic.importer.WebFetchersTest.getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher()?controlClasses@67.26:67.40CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaD3 D(Aì
oorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()METHODF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java]	 ](L"
isFinalfalse"„
declarationStringÕ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*CgetEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher2r
"java.lang.Class.getCanonicalName()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaee e(u2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javah h(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javai i(2ù
Morg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaj# j(-2ù
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java` `('2ê
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javad% d(/2Ÿ
àorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?scanResult@100.24:100.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javae+ e(52›
åorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?controlClasses@101.26:101.40CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaf3 f(A2◊
Üorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?expected@102.26:102.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javah h(2◊
Üorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?expected@102.26:102.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javai i(2◊
Üorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?expected@102.26:102.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaj j(!2◊
Üorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?idFetchers@94.31:94.41CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaj. j(82ﬁ
Üorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?idFetchers@94.31:94.41DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java^ ^()2‡
àorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?scanResult@100.24:100.34DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javad d("2‰
åorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?controlClasses@101.26:101.40DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javae e((2ﬁ
Üorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?expected@102.26:102.34DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaf f("2[
voidRETURN_TYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java] ](
Üorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?idFetchers@94.31:94.41VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java^ ^()"
typeSet<EntryBasedFetcher>"
isFinalfalse"Œ
declarationString∏<mark class="modifier"> </mark>Set<EntryBasedFetcher> <mark class="class-field">idFetchers</mark> = WebFetchers.getEntryBasedFetchers(mock(ImporterPreferences.class)<mark class="modifier">,</mark> importFormatPreferences, mock(FilePreferences.class)<mark class="modifier">,</mark> mock(BibDatabaseContext.class))*
idFetchers2]
java.util.SetTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java^ ^(2Ñ
+org.jabref.logic.importer.EntryBasedFetcherTYPE_ARGUMENTF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java^ ^(2ù
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java` `('ì
àorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?scanResult@100.24:100.34VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javad d(""
type
ScanResult"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>ScanResult <mark class="class-field">scanResult</mark> = classGraph.scan()*
scanResult2o
io.github.classgraph.ScanResultTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javad d(2ê
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javad% d(/£
åorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?controlClasses@101.26:101.40VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javae e(("
typeClassInfoList"
isFinalfalse"¬
declarationString¨<mark class="modifier"> </mark>ClassInfoList <mark class="class-field">controlClasses</mark> = scanResult.getClassesImplementing(EntryBasedFetcher.class.getCanonicalName())*controlClasses2r
"io.github.classgraph.ClassInfoListTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javae e(2r
"java.lang.Class.getCanonicalName()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaee e(u2Ÿ
àorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?scanResult@100.24:100.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javae+ e(5‘
Üorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?expected@102.26:102.34VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaf f(""
typeSet<Class<?>>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Set<Class<?>> <mark class="class-field">expected</mark> = new HashSet<>(controlClasses.loadClasses())*expected2]
java.util.SetTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaf f(2h
java.lang.ClassTYPE_ARGUMENTF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaf f(2›
åorg.jabref.logic.importer.WebFetchersTest.getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher()?controlClasses@101.26:101.40CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaf3 f(A™0
qorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()METHODF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javao	 o(N"
isFinalfalse"Â
declarationStringœ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*EgetSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher2r
"java.lang.Class.getCanonicalName()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javarf r(v2ô
Ijava.util.Set.removeAll(java.util.Collection<? extends java.lang.Object>)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javav v(2ô
Iorg.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javav v(<2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javay y(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java| |(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java} }(2v
&java.util.Set.remove(java.lang.Object)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java~ ~(2x
&java.util.Set.remove(java.lang.Object)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaÄ Ä(2x
&java.util.Set.remove(java.lang.Object)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaÅ Å(2x
&java.util.Set.remove(java.lang.Object)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaÑ Ñ(2ü
Morg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaÜ# Ü(-2ù
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javapY p(p2ö
Iorg.jabref.logic.importer.WebFetchersTest?importerPreferences@40.32:40.51CALLG
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javapr p(Ö2ê
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaq% q(/2€
äorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?scanResult@113.24:113.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javar+ r(52ﬂ
éorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?controlClasses@114.26:114.40CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javas3 s(A2Ÿ
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javav v(2Ÿ
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javay y(2Ÿ
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java| |(2Ÿ
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java} }(2Ÿ
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java~ ~(2€
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaÄ Ä(2€
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaÅ Å(2€
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaÑ Ñ(2€
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaÜ Ü(!2Ê
ìorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?searchBasedFetchers@112.32:112.51CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaÜ. Ü(A2Î
ìorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?searchBasedFetchers@112.32:112.51DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javap  p(32‚
äorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?scanResult@113.24:113.34DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaq q("2Ê
éorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?controlClasses@114.26:114.40DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javar r((2‡
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34DECLARATIONF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javas s("2[
voidRETURN_TYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javao o(´
ìorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?searchBasedFetchers@112.32:112.51VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javap  p(3"
typeSet<SearchBasedFetcher>"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>Set<SearchBasedFetcher> <mark class="class-field">searchBasedFetchers</mark> = WebFetchers.getSearchBasedFetchers(importFormatPreferences, importerPreferences)*searchBasedFetchers2]
java.util.SetTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javap p(2Ö
,org.jabref.logic.importer.SearchBasedFetcherTYPE_ARGUMENTF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javap p(2ù
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javapY p(p2ö
Iorg.jabref.logic.importer.WebFetchersTest?importerPreferences@40.32:40.51CALLG
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javapr p(Öï
äorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?scanResult@113.24:113.34VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaq q(""
type
ScanResult"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>ScanResult <mark class="class-field">scanResult</mark> = classGraph.scan()*
scanResult2o
io.github.classgraph.ScanResultTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaq q(2ê
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaq% q(/®
éorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?controlClasses@114.26:114.40VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javar r(("
typeClassInfoList"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>ClassInfoList <mark class="class-field">controlClasses</mark> = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName())*controlClasses2r
"io.github.classgraph.ClassInfoListTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javar r(2r
"java.lang.Class.getCanonicalName()CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javarf r(v2€
äorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?scanResult@113.24:113.34CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javar+ r(5ÿ
àorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?expected@115.26:115.34VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javas s(""
typeSet<Class<?>>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Set<Class<?>> <mark class="class-field">expected</mark> = new HashSet<>(controlClasses.loadClasses())*expected2]
java.util.SetTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javas s(2h
java.lang.ClassTYPE_ARGUMENTF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javas s(2ﬂ
éorg.jabref.logic.importer.WebFetchersTest.getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher()?controlClasses@114.26:114.40CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javas3 s(A≈"
korg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()METHODH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaã	 ã(H"
isFinalfalse"ﬂ
declarationString…<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*?getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher2t
"java.lang.Class.getCanonicalName()CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaèc è(s2õ
Ijava.util.Set.removeAll(java.util.Collection<? extends java.lang.Object>)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaì ì(2õ
Iorg.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaì ì(<2x
&java.util.Set.remove(java.lang.Object)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javañ ñ(2x
&java.util.Set.remove(java.lang.Object)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaó ó(2ü
Morg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaô# ô(-2ü
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaåP å(g2õ
Iorg.jabref.logic.importer.WebFetchersTest?importerPreferences@40.32:40.51CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaåi å(|2í
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaé% é(/2◊
Ñorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?scanResult@142.24:142.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaè+ è(52€
àorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?controlClasses@143.26:143.40CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaê3 ê(A2’
Çorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?expected@144.26:144.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaì ì(2’
Çorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?expected@144.26:144.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javañ ñ(2’
Çorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?expected@144.26:144.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaó ó(2’
Çorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?expected@144.26:144.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaô ô(!2›
äorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?fullTextFetchers@140.29:140.45CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaô. ô(>2‰
äorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?fullTextFetchers@140.29:140.45DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaå å(-2ﬁ
Ñorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?scanResult@142.24:142.34DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaé é("2‚
àorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?controlClasses@143.26:143.40DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaè è((2‹
Çorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?expected@144.26:144.34DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaê ê("2]
voidRETURN_TYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaã ã(ô
äorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?fullTextFetchers@140.29:140.45VARIABLEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaå å(-"
typeSet<FulltextFetcher>"
isFinalfalse"À
declarationStringµ<mark class="modifier"> </mark>Set<FulltextFetcher> <mark class="class-field">fullTextFetchers</mark> = WebFetchers.getFullTextFetchers(importFormatPreferences, importerPreferences)*fullTextFetchers2_
java.util.SetTYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaå å(2Ñ
)org.jabref.logic.importer.FulltextFetcherTYPE_ARGUMENTH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaå å(2ü
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaåP å(g2õ
Iorg.jabref.logic.importer.WebFetchersTest?importerPreferences@40.32:40.51CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaåi å(|ï
Ñorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?scanResult@142.24:142.34VARIABLEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaé é(""
type
ScanResult"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>ScanResult <mark class="class-field">scanResult</mark> = classGraph.scan()*
scanResult2q
io.github.classgraph.ScanResultTYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaé é(2í
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaé% é(/°
àorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?controlClasses@143.26:143.40VARIABLEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaè è(("
typeClassInfoList"
isFinalfalse"¿
declarationString™<mark class="modifier"> </mark>ClassInfoList <mark class="class-field">controlClasses</mark> = scanResult.getClassesImplementing(FulltextFetcher.class.getCanonicalName())*controlClasses2t
"io.github.classgraph.ClassInfoListTYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaè è(2t
"java.lang.Class.getCanonicalName()CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaèc è(s2◊
Ñorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?scanResult@142.24:142.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaè+ è(5‘
Çorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?expected@144.26:144.34VARIABLEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaê ê(""
typeSet<Class<?>>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Set<Class<?>> <mark class="class-field">expected</mark> = new HashSet<>(controlClasses.loadClasses())*expected2_
java.util.SetTYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaê ê(2j
java.lang.ClassTYPE_ARGUMENTH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaê ê(2€
àorg.jabref.logic.importer.WebFetchersTest.getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher()?controlClasses@143.26:143.40CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaê3 ê(AË
_org.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()METHODH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaû	 û(<"
isFinalfalse"”
declarationStringΩ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getIdFetchersReturnsAllFetcherDerivingFromIdFetcher</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*3getIdFetchersReturnsAllFetcherDerivingFromIdFetcher2t
"java.lang.Class.getCanonicalName()CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¢] ¢(m2õ
Ijava.util.Set.removeAll(java.util.Collection<? extends java.lang.Object>)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¶ ¶(2õ
Iorg.jabref.logic.importer.WebFetchersTest.getIgnoredInaccessibleClasses()CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¶ ¶(<2x
&java.util.Set.remove(java.lang.Object)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java® ®(2x
&java.util.Set.remove(java.lang.Object)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java™ ™(2ü
Morg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¨# ¨(-2ü
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaüA ü(X2í
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java°% °(/2 
xorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?scanResult@161.24:161.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¢+ ¢(52Œ
|org.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?controlClasses@162.26:162.40CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java£3 £(A2»
vorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?expected@163.26:163.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¶ ¶(2»
vorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?expected@163.26:163.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java® ®(2»
vorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?expected@163.26:163.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java™ ™(2»
vorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?expected@163.26:163.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¨ ¨(!2 
xorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?idFetchers@159.26:159.36CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¨. ¨(82—
xorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?idFetchers@159.26:159.36DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaü ü($2—
xorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?scanResult@161.24:161.34DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java° °("2’
|org.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?controlClasses@162.26:162.40DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¢ ¢((2œ
vorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?expected@163.26:163.34DECLARATIONH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java£ £("2]
voidRETURN_TYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaû û(¥
xorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?idFetchers@159.26:159.36VARIABLEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaü ü($"
typeSet<IdFetcher<?>>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Set<IdFetcher<?>> <mark class="class-field">idFetchers</mark> = WebFetchers.getIdFetchers(importFormatPreferences)*
idFetchers2_
java.util.SetTYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaü ü(2~
#org.jabref.logic.importer.IdFetcherTYPE_ARGUMENTH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaü ü(2ü
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.javaüA ü(Xà
xorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?scanResult@161.24:161.34VARIABLEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java° °(""
type
ScanResult"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>ScanResult <mark class="class-field">scanResult</mark> = classGraph.scan()*
scanResult2q
io.github.classgraph.ScanResultTYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java° °(2í
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java°% °(/Å
|org.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?controlClasses@162.26:162.40VARIABLEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¢ ¢(("
typeClassInfoList"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>ClassInfoList <mark class="class-field">controlClasses</mark> = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName())*controlClasses2t
"io.github.classgraph.ClassInfoListTYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¢ ¢(2t
"java.lang.Class.getCanonicalName()CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¢] ¢(m2 
xorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?scanResult@161.24:161.34CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java¢+ ¢(5∫
vorg.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?expected@163.26:163.34VARIABLEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java£ £(""
typeSet<Class<?>>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Set<Class<?>> <mark class="class-field">expected</mark> = new HashSet<>(controlClasses.loadClasses())*expected2_
java.util.SetTYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java£ £(2j
java.lang.ClassTYPE_ARGUMENTH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java£ £(2Œ
|org.jabref.logic.importer.WebFetchersTest.getIdFetchersReturnsAllFetcherDerivingFromIdFetcher()?controlClasses@162.26:162.40CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java£3 £(Aü
Morg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)METHODH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java∞$ ∞(."
isFinalfalse"£
declarationStringç<mark class="modifier">private </mark>Set&lt;? extends Class&lt;?&gt;&gt; <mark class="method">getClasses</mark>(Collection&lt;?&gt; objects)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeSet<? extends Class<?>>*
getClasses2û
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java±6 ±(=2¢
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java±  ±(#2o
java.util.Collection.stream()CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java± ±(2u
#java.util.stream.Collectors.toSet()CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java±I ±(N2ß
Uorg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)!objectsCALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java± ±(2m
java.lang.Object.getClass()CALLH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java±$ ±(42¨
Uorg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)!objects	PARAMETERH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java∞= ∞(D2f
java.util.SetRETURN_TYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java∞ ∞(Ú
Uorg.jabref.logic.importer.WebFetchersTest.getClasses(java.util.Collection<?>)!objects	PARAMETERH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java∞= ∞(D"
typeCollection<?>"
isFinalfalse"*
declarationStringCollection<?> objects*objects2f
java.util.CollectionTYPEH
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java∞/ ∞(9•
<org.jabref.logic.importer.WebFetchersTest?LOGGER@36.32:36.38VALUEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java$  $(&"
isFinaltrue"
typeLogger"Â
declarationStringœ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(WebFetchersTest.class);"
isStatictrue"
accessprivate*LOGGER2`
org.slf4j.LoggerTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java$ $(Ø
Sorg.jabref.logic.importer.WebFetchersTest?IGNORED_INACCESSIBLE_FETCHERS@37.37:37.66VALUEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java%% %(B"
isFinaltrue"
typeSet<String>"Ô
declarationStringŸ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Set<String> <mark class="class-field">IGNORED_INACCESSIBLE_FETCHERS</mark> = Set.of("ArXivFetcher$ArXiv");"
isStatictrue"
accessprivate*IGNORED_INACCESSIBLE_FETCHERS2]
java.util.SetTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java% %(2i
java.lang.StringTYPE_ARGUMENTF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java% %(#2c
java.util.Set.of(E)CALLF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java%I %(Kä
Morg.jabref.logic.importer.WebFetchersTest?importFormatPreferences@39.36:39.59VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java'$ '(;"
isFinalfalse"
typeImportFormatPreferences"ã
declarationStringv<mark class="modifier">private </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2g
ImportFormatPreferencesTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java' '(#å
Iorg.jabref.logic.importer.WebFetchersTest?importerPreferences@40.32:40.51VARIABLEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java(  ((3"
isFinalfalse"
typeImporterPreferences"É
declarationStringn<mark class="modifier">private </mark>ImporterPreferences <mark class="class-field">importerPreferences</mark>"
isStaticfalse"
accessprivate*importerPreferences2}
-org.jabref.logic.importer.ImporterPreferencesTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java( ((≥
@org.jabref.logic.importer.WebFetchersTest?classGraph@41.29:41.39VALUEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java) )('"
isFinaltrue"
type
ClassGraph"◊
declarationString¡<mark class="modifier">private </mark><mark class="modifier">final </mark>ClassGraph <mark class="class-field">classGraph</mark> = new ClassGraph().enableAllInfo().acceptPackages("org.jabref");"
isStaticfalse"
accessprivate*
classGraph2o
io.github.classgraph.ClassGraphTYPEF
<src\test\java\org\jabref\logic\importer\WebFetchersTest.java) )(