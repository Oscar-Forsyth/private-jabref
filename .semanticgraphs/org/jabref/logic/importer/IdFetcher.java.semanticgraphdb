
6src\main\java\org\jabref\logic\importer\IdFetcher.java≠
#org.jabref.logic.importer.IdFetcherTRAIT@
6src\main\java\org\jabref\logic\importer\IdFetcher.java
 
("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"ù
declarationStringá<mark class="modifier">public </mark><mark class="modifier">interface </mark>IdFetcher<mark class="modifier"> extends </mark>WebFetcher"
accesspublic*	IdFetcher2§
Sorg.jabref.logic.importer.IdFetcher.findIdentifier(org.jabref.model.entry.BibEntry)DECLARATION@
6src\main\java\org\jabref\logic\importer\IdFetcher.java (2à
7org.jabref.logic.importer.IdFetcher.getIdentifierName()DECLARATION@
6src\main\java\org\jabref\logic\importer\IdFetcher.java (2p
$org.jabref.logic.importer.WebFetcherEXTEND@
6src\main\java\org\jabref\logic\importer\IdFetcher.java
9 
(C2y
%org.jabref.logic.importer.IdFetcher.TTYPE_PARAMETER@
6src\main\java\org\jabref\logic\importer\IdFetcher.java
 
(·
Sorg.jabref.logic.importer.IdFetcher.findIdentifier(org.jabref.model.entry.BibEntry)METHOD@
6src\main\java\org\jabref\logic\importer\IdFetcher.java ("
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>&lt;<mark class="modifier"><mark class="type-parameter">T extends Identifier</mark></mark>&gt; Optional&lt;T&gt; <mark class="method">findIdentifier</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeOptional<T>*findIdentifier2®
Yorg.jabref.logic.importer.IdFetcher.findIdentifier(org.jabref.model.entry.BibEntry)!entry	PARAMETER@
6src\main\java\org\jabref\logic\importer\IdFetcher.java( (-2c
java.util.OptionalRETURN_TYPE@
6src\main\java\org\jabref\logic\importer\IdFetcher.java (2
%org.jabref.logic.importer.IdFetcher.TRETURN_TYPE_ARGUMENT@
6src\main\java\org\jabref\logic\importer\IdFetcher.java („
Yorg.jabref.logic.importer.IdFetcher.findIdentifier(org.jabref.model.entry.BibEntry)!entry	PARAMETER@
6src\main\java\org\jabref\logic\importer\IdFetcher.java( (-"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2i
org.jabref.model.entry.BibEntryTYPE@
6src\main\java\org\jabref\logic\importer\IdFetcher.java ('´
7org.jabref.logic.importer.IdFetcher.getIdentifierName()METHOD@
6src\main\java\org\jabref\logic\importer\IdFetcher.java ("
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>&lt;<mark class="modifier"><mark class="type-parameter">T extends Identifier</mark></mark>&gt; String <mark class="method">getIdentifierName</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeString*getIdentifierName2a
java.lang.StringRETURN_TYPE@
6src\main\java\org\jabref\logic\importer\IdFetcher.java (
ˆ
%org.jabref.logic.importer.IdFetcher.TTYPE_PARAMETER@
6src\main\java\org\jabref\logic\importer\IdFetcher.java
 
(*T2x
,org.jabref.model.entry.identifier.IdentifierEXTEND@
6src\main\java\org\jabref\logic\importer\IdFetcher.java
% 
(/