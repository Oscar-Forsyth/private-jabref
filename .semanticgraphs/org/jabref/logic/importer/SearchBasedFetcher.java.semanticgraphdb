
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java™
,org.jabref.logic.importer.SearchBasedFetcherTRAITI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java (#"$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"¶
declarationStringê<mark class="modifier">public </mark><mark class="modifier">interface </mark>SearchBasedFetcher<mark class="modifier"> extends </mark>WebFetcher"
accesspublic*SearchBasedFetcher2—
worg.jabref.logic.importer.SearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)DECLARATIONI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java ( 2¶
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)DECLARATIONI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java% %((2y
$org.jabref.logic.importer.WebFetcherEXTENDI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java, (6˜
worg.jabref.logic.importer.SearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)METHODI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java ( "
isFinalfalse"ﬁ
declarationString»<mark class="modifier"> </mark>List&lt;BibEntry&gt; <mark class="method">performSearch</mark>(QueryNode luceneQuery)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeList<BibEntry>*performSearch2‹
Éorg.jabref.logic.importer.SearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java+ (62h
java.util.ListRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java (2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java	 (À
Éorg.jabref.logic.importer.SearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java+ (6"
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2é
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java! (*•
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)METHODI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java% %(("
isFinalfalse"€
declarationString≈<mark class="modifier"> </mark>List&lt;BibEntry&gt; <mark class="method">performSearch</mark>(String searchQuery)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeList<BibEntry>*performSearch2m
java.lang.String.isBlank()CALLI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java& &(2t
!java.util.Collections.emptyList()CALLI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java' '((2 
worg.jabref.logic.importer.SearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)CALLI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java2 2(!2†
Morg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java/ /(&2´
Xorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)!searchQueryCALLI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java& &(2µ
borg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)?queryNode@43.18:43.27CALLI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java- -(2≤
_org.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)?parser@42.21:42.27CALLI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java- -(2´
Xorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)!searchQueryCALLI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java-% -(02µ
borg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)?queryNode@43.18:43.27CALLI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java2" 2(+2∞
Xorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)!searchQuery	PARAMETERI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java%0 %(;2π
_org.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)?parser@42.21:42.27DECLARATIONI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java* *(2º
borg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)?queryNode@43.18:43.27DECLARATIONI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java+ +(2¥
Zorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)?e@46.41:46.42DECLARATIONI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java.) .(*2h
java.util.ListRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java% %(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java% %(É
_org.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)?parser@42.21:42.27VARIABLEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java* *("
typeSyntaxParser"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>SyntaxParser <mark class="class-field">parser</mark> = new StandardSyntaxParser()*parser2í
?org.apache.lucene.queryparser.flexible.core.parser.SyntaxParserTYPEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java* *(‰
borg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)?queryNode@43.18:43.27VARIABLEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java+ +("
type	QueryNode"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>QueryNode <mark class="class-field">queryNode</mark>*	queryNode2é
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java+ +(Ì
Xorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)!searchQuery	PARAMETERI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java%0 %(;"
typeString"
isFinalfalse"'
declarationStringString searchQuery*searchQuery2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java%) %(/∞
Zorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)?e@46.41:46.42VARIABLEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java.) .(*"
typeQueryNodeParseException"
isFinalfalse".
declarationStringQueryNodeParseException e*e2ñ
Corg.apache.lucene.queryparser.flexible.core.QueryNodeParseExceptionTYPEI
?src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java. .((