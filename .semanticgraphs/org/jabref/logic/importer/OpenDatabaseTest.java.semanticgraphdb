
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java¯
*org.jabref.logic.importer.OpenDatabaseTestCLASSG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java ("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"h
declarationStringS<mark class="modifier"> </mark><mark class="modifier">class </mark>OpenDatabaseTest"
accesspackage_private*OpenDatabaseTest2ï
=org.jabref.logic.importer.OpenDatabaseTest.OpenDatabaseTest()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java$ $(2ä
2org.jabref.logic.importer.OpenDatabaseTest.setUp()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java-	 -(2¢
Jorg.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfNoHeader()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java3	 3(&2ß
Oorg.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfUnknownHeader()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java9	 9(+2ô
Aorg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncoding()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java?	 ?(2¶
Norg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncodingWithSignature()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaE	 E(*2ù
Eorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaK	 K(!2õ
Corg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaU	 U(2ß
Oorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java_	 _(+2©
Qorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javal	 l(-2û
Forg.jabref.logic.importer.OpenDatabaseTest?defaultEncoding@26.26:26.41DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java ()2°
Iorg.jabref.logic.importer.OpenDatabaseTest?libraryPreferences@27.31:27.49DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (12¶
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java$ (;2ö
Borg.jabref.logic.importer.OpenDatabaseTest?bibNoHeader@29.23:29.34DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java ("2ù
Eorg.jabref.logic.importer.OpenDatabaseTest?bibWrongHeader@30.23:30.37DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (%2ò
@org.jabref.logic.importer.OpenDatabaseTest?bibHeader@31.23:31.32DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java ( 2§
Lorg.jabref.logic.importer.OpenDatabaseTest?bibHeaderAndSignature@32.23:32.44DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java   (,2®
Porg.jabref.logic.importer.OpenDatabaseTest?bibEncodingWithoutNewline@33.23:33.48DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java! !(02ö
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java"$ "(/¿
=org.jabref.logic.importer.OpenDatabaseTest.OpenDatabaseTest()CONSTRUCTORG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java$ $("π
declarationString£<mark class="modifier"> </mark><mark class="method">OpenDatabaseTest</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException*OpenDatabaseTest2t
#java.nio.file.Path.of(java.net.URI)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java% %(2e
java.net.URL.toURI()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java%S %(X2~
-java.lang.Class.getResource(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java%5 %(@2t
#java.nio.file.Path.of(java.net.URI)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java& &( 2e
java.net.URL.toURI()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java&X &(]2~
-java.lang.Class.getResource(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java&8 &(C2t
#java.nio.file.Path.of(java.net.URI)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java' '(2e
java.net.URL.toURI()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java'V '([2~
-java.lang.Class.getResource(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java'3 '(>2t
#java.nio.file.Path.of(java.net.URI)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java(% (('2e
java.net.URL.toURI()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java(` ((e2~
-java.lang.Class.getResource(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java(? ((J2t
#java.nio.file.Path.of(java.net.URI)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java)) )(+2e
java.net.URL.toURI()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java)m )(r2~
-java.lang.Class.getResource(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java)C )(N2ì
Borg.jabref.logic.importer.OpenDatabaseTest?bibNoHeader@29.23:29.34CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java% %(2ñ
Eorg.jabref.logic.importer.OpenDatabaseTest?bibWrongHeader@30.23:30.37CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java& &(2ë
@org.jabref.logic.importer.OpenDatabaseTest?bibHeader@31.23:31.32CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java' '(2ù
Lorg.jabref.logic.importer.OpenDatabaseTest?bibHeaderAndSignature@32.23:32.44CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java( ((2°
Porg.jabref.logic.importer.OpenDatabaseTest?bibEncodingWithoutNewline@33.23:33.48CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java) )(!2Ç
*org.jabref.logic.importer.OpenDatabaseTestRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java$ $(0∫
2org.jabref.logic.importer.OpenDatabaseTest.setUp()METHODG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java-	 -("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2ö
Iorg.jabref.logic.importer.OpenDatabaseTest?libraryPreferences@27.31:27.49CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java. .(2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java/ /(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java- -(‘
Jorg.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfNoHeader()METHODG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java3	 3(&"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">useFallbackEncodingIfNoHeader</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*useFallbackEncodingIfNoHeader2i
java.util.Optional.get()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java5I 5(L2Å
0org.jabref.model.metadata.MetaData.getEncoding()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java5; 5(F2Ö
4org.jabref.logic.importer.ParserResult.getMetaData()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java5- 5(82ì
Borg.jabref.logic.importer.OpenDatabaseTest?bibNoHeader@29.23:29.34CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java48 4(C2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java4E 4(\2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java4^ 4(i2ó
Forg.jabref.logic.importer.OpenDatabaseTest?defaultEncoding@26.26:26.41CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java5 5($2Æ
]org.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfNoHeader()?result@52.21:52.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java5& 5(,2µ
]org.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfNoHeader()?result@52.21:52.27DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java4 4(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java3 3(‰
]org.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfNoHeader()?result@52.21:52.27VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java4 4("
typeParserResult"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor)*result2w
&org.jabref.logic.importer.ParserResultTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java4 4(2ì
Borg.jabref.logic.importer.OpenDatabaseTest?bibNoHeader@29.23:29.34CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java48 4(C2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java4E 4(\2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java4^ 4(i
Oorg.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfUnknownHeader()METHODG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java9	 9(+"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">useFallbackEncodingIfUnknownHeader</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*"useFallbackEncodingIfUnknownHeader2i
java.util.Optional.get()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java;I ;(L2Å
0org.jabref.model.metadata.MetaData.getEncoding()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java;; ;(F2Ö
4org.jabref.logic.importer.ParserResult.getMetaData()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java;- ;(82ñ
Eorg.jabref.logic.importer.OpenDatabaseTest?bibWrongHeader@30.23:30.37CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java:8 :(F2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java:H :(_2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java:a :(l2ó
Forg.jabref.logic.importer.OpenDatabaseTest?defaultEncoding@26.26:26.41CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java; ;($2≥
borg.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfUnknownHeader()?result@58.21:58.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java;& ;(,2∫
borg.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfUnknownHeader()?result@58.21:58.27DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java: :(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java9 9(Ô
borg.jabref.logic.importer.OpenDatabaseTest.useFallbackEncodingIfUnknownHeader()?result@58.21:58.27VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java: :("
typeParserResult"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = OpenDatabase.loadDatabase(bibWrongHeader, importFormatPreferences, fileMonitor)*result2w
&org.jabref.logic.importer.ParserResultTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java: :(2ñ
Eorg.jabref.logic.importer.OpenDatabaseTest?bibWrongHeader@30.23:30.37CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java:8 :(F2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java:H :(_2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java:a :(l•
Aorg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncoding()METHODG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java?	 ?("
isFinalfalse"É
declarationStringÌ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">useSpecifiedEncoding</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*useSpecifiedEncoding2i
java.util.Optional.get()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaAI A(L2Å
0org.jabref.model.metadata.MetaData.getEncoding()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaA; A(F2Ö
4org.jabref.logic.importer.ParserResult.getMetaData()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaA- A(82ë
@org.jabref.logic.importer.OpenDatabaseTest?bibHeader@31.23:31.32CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java@8 @(A2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java@C @(Z2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java@\ @(g2ó
Forg.jabref.logic.importer.OpenDatabaseTest?defaultEncoding@26.26:26.41CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaA A($2•
Torg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncoding()?result@64.21:64.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaA& A(,2¨
Torg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncoding()?result@64.21:64.27DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java@ @(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java? ?(◊
Torg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncoding()?result@64.21:64.27VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java@ @("
typeParserResult"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = OpenDatabase.loadDatabase(bibHeader, importFormatPreferences, fileMonitor)*result2w
&org.jabref.logic.importer.ParserResultTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java@ @(2ë
@org.jabref.logic.importer.OpenDatabaseTest?bibHeader@31.23:31.32CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java@8 @(A2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java@C @(Z2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java@\ @(gÚ
Norg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncodingWithSignature()METHODG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaE	 E(*"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">useSpecifiedEncodingWithSignature</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*!useSpecifiedEncodingWithSignature2i
java.util.Optional.get()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaGI G(L2Å
0org.jabref.model.metadata.MetaData.getEncoding()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaG; G(F2Ö
4org.jabref.logic.importer.ParserResult.getMetaData()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaG- G(82ù
Lorg.jabref.logic.importer.OpenDatabaseTest?bibHeaderAndSignature@32.23:32.44CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaF8 F(M2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaFO F(f2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaFh F(s2ó
Forg.jabref.logic.importer.OpenDatabaseTest?defaultEncoding@26.26:26.41CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaG G($2≤
aorg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncodingWithSignature()?result@70.21:70.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaG& G(,2π
aorg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncodingWithSignature()?result@70.21:70.27DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaF F(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaE E(¸
aorg.jabref.logic.importer.OpenDatabaseTest.useSpecifiedEncodingWithSignature()?result@70.21:70.27VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaF F("
typeParserResult"
isFinalfalse"¬
declarationString¨<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor)*result2w
&org.jabref.logic.importer.ParserResultTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaF F(2ù
Lorg.jabref.logic.importer.OpenDatabaseTest?bibHeaderAndSignature@32.23:32.44CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaF8 F(M2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaFO F(f2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaFh F(s—
Eorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()METHODG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaK	 K(!"
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">entriesAreParsedNoHeader</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*entriesAreParsedNoHeader2Ö
4org.jabref.logic.importer.ParserResult.getDatabase()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaM  M(+2Ü
5org.jabref.model.database.BibDatabase.getEntryCount()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaP P((2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaQ Q( 2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaQN Q(V2i
java.util.Optional.get()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaQH Q(K2û
Morg.jabref.model.database.BibDatabase.getEntryByCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaQ- Q(B2ì
Borg.jabref.logic.importer.OpenDatabaseTest?bibNoHeader@29.23:29.34CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaL8 L(C2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaLE L(\2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaL^ L(i2©
Xorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()?result@76.21:76.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaM M(2•
Torg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()?db@77.20:77.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaP P(2•
Torg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()?db@77.20:77.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaQ* Q(,2∞
Xorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()?result@76.21:76.27DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaL L(2¨
Torg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()?db@77.20:77.22DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaM M(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaK K(ﬂ
Xorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()?result@76.21:76.27VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaL L("
typeParserResult"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor)*result2w
&org.jabref.logic.importer.ParserResultTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaL L(2ì
Borg.jabref.logic.importer.OpenDatabaseTest?bibNoHeader@29.23:29.34CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaL8 L(C2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaLE L(\2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaL^ L(i¸
Torg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()?db@77.20:77.22VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaM M("
typeBibDatabase"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibDatabase <mark class="class-field">db</mark> = result.getDatabase()*db2v
%org.jabref.model.database.BibDatabaseTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaM M(2Ö
4org.jabref.logic.importer.ParserResult.getDatabase()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaM  M(+2©
Xorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedNoHeader()?result@76.21:76.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaM M(ø
Corg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()METHODG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaU	 U("
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">entriesAreParsedHeader</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*entriesAreParsedHeader2Ö
4org.jabref.logic.importer.ParserResult.getDatabase()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaW  W(+2Ü
5org.jabref.model.database.BibDatabase.getEntryCount()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaZ Z((2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java[ [( 2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java[N [(V2i
java.util.Optional.get()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java[H [(K2û
Morg.jabref.model.database.BibDatabase.getEntryByCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java[- [(B2ë
@org.jabref.logic.importer.OpenDatabaseTest?bibHeader@31.23:31.32CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaV8 V(A2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaVC V(Z2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaV\ V(g2ß
Vorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()?result@86.21:86.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaW W(2£
Rorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()?db@87.20:87.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaZ Z(2£
Rorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()?db@87.20:87.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java[* [(,2Æ
Vorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()?result@86.21:86.27DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaV V(2™
Rorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()?db@87.20:87.22DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaW W(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaU U(Ÿ
Vorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()?result@86.21:86.27VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaV V("
typeParserResult"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = OpenDatabase.loadDatabase(bibHeader, importFormatPreferences, fileMonitor)*result2w
&org.jabref.logic.importer.ParserResultTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaV V(2ë
@org.jabref.logic.importer.OpenDatabaseTest?bibHeader@31.23:31.32CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaV8 V(A2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaVC V(Z2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaV\ V(g¯
Rorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()?db@87.20:87.22VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaW W("
typeBibDatabase"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibDatabase <mark class="class-field">db</mark> = result.getDatabase()*db2v
%org.jabref.model.database.BibDatabaseTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaW W(2Ö
4org.jabref.logic.importer.ParserResult.getDatabase()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaW  W(+2ß
Vorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeader()?result@86.21:86.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaW W(´
Oorg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()METHODG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java_	 _(+"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">entriesAreParsedHeaderAndSignature</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*"entriesAreParsedHeaderAndSignature2Ö
4org.jabref.logic.importer.ParserResult.getDatabase()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaa  a(+2Ü
5org.jabref.model.database.BibDatabase.getEntryCount()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javad d((2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javae e( 2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaeN e(V2i
java.util.Optional.get()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaeH e(K2û
Morg.jabref.model.database.BibDatabase.getEntryByCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javae- e(B2ù
Lorg.jabref.logic.importer.OpenDatabaseTest?bibHeaderAndSignature@32.23:32.44CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java`8 `(M2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java`O `(f2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java`h `(s2≥
borg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()?result@96.21:96.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaa a(2Ø
^org.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()?db@97.20:97.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javad d(2Ø
^org.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()?db@97.20:97.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javae* e(,2∫
borg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()?result@96.21:96.27DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java` `(2∂
^org.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()?db@97.20:97.22DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaa a(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java_ _(˝
borg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()?result@96.21:96.27VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java` `("
typeParserResult"
isFinalfalse"¬
declarationString¨<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor)*result2w
&org.jabref.logic.importer.ParserResultTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java` `(2ù
Lorg.jabref.logic.importer.OpenDatabaseTest?bibHeaderAndSignature@32.23:32.44CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java`8 `(M2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java`O `(f2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java`h `(sê
^org.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()?db@97.20:97.22VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaa a("
typeBibDatabase"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibDatabase <mark class="class-field">db</mark> = result.getDatabase()*db2v
%org.jabref.model.database.BibDatabaseTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaa a(2Ö
4org.jabref.logic.importer.ParserResult.getDatabase()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaa  a(+2≥
borg.jabref.logic.importer.OpenDatabaseTest.entriesAreParsedHeaderAndSignature()?result@96.21:96.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaa a(æ$
Qorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()METHODG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javal	 l(-"
isFinalfalse"ì
declarationString˝<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">correctlyParseEncodingWithoutNewline</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$correctlyParseEncodingWithoutNewline2i
java.util.Optional.get()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javanS n(V2Å
0org.jabref.model.metadata.MetaData.getEncoding()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javanE n(P2Ö
4org.jabref.logic.importer.ParserResult.getMetaData()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javan7 n(B2Ö
4org.jabref.logic.importer.ParserResult.getDatabase()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javap  p(+2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaq q( 2Ñ
3org.jabref.model.database.BibDatabase.getPreamble()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaq5 q(@2É
2org.jabref.model.database.BibDatabase.getEntries()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javas* s(42l
java.util.Collection.size()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javat  t($2j
java.util.Iterator.next()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javav, v(02p
java.util.Collection.iterator()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javav! v()2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaw w( 2Å
0org.jabref.model.entry.BibEntry.getCitationKey()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaw7 w(E2°
Porg.jabref.logic.importer.OpenDatabaseTest?bibEncodingWithoutNewline@33.23:33.48CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javam8 m(Q2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javamS m(j2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaml m(w2∑
forg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?result@109.21:109.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javan0 n(62∑
forg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?result@109.21:109.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javap p(2≥
borg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?db@112.20:112.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaq2 q(42≥
borg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?db@112.20:112.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javas' s()2∏
gorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?entries@115.29:115.36CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javat t(2∏
gorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?entries@115.29:115.36CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javav v( 2∂
eorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?entry@118.17:118.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaw1 w(62æ
forg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?result@109.21:109.27DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javam m(2∫
borg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?db@112.20:112.22DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javap p(2ø
gorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?entries@115.29:115.36DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javas s($2Ω
eorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?entry@118.17:118.22DECLARATIONG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javav v(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javal l(â
forg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?result@109.21:109.27VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javam m("
typeParserResult"
isFinalfalse"∆
declarationString∞<mark class="modifier"> </mark>ParserResult <mark class="class-field">result</mark> = OpenDatabase.loadDatabase(bibEncodingWithoutNewline, importFormatPreferences, fileMonitor)*result2w
&org.jabref.logic.importer.ParserResultTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javam m(2°
Porg.jabref.logic.importer.OpenDatabaseTest?bibEncodingWithoutNewline@33.23:33.48CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javam8 m(Q2ü
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javamS m(j2ì
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javaml m(wò
borg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?db@112.20:112.22VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javap p("
typeBibDatabase"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibDatabase <mark class="class-field">db</mark> = result.getDatabase()*db2v
%org.jabref.model.database.BibDatabaseTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javap p(2Ö
4org.jabref.logic.importer.ParserResult.getDatabase()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javap  p(+2∑
forg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?result@109.21:109.27CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javap p(ô
gorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?entries@115.29:115.36VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javas s($"
typeCollection<BibEntry>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Collection<BibEntry> <mark class="class-field">entries</mark> = db.getEntries()*entries2e
java.util.CollectionTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javas s(2y
org.jabref.model.entry.BibEntryTYPE_ARGUMENTG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javas s(2É
2org.jabref.model.database.BibDatabase.getEntries()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javas* s(42≥
borg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?db@112.20:112.22CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javas' s()Ò
eorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?entry@118.17:118.22VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javav v("
typeBibEntry"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = entries.iterator().next()*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javav v(2j
java.util.Iterator.next()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javav, v(02p
java.util.Collection.iterator()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javav! v()2∏
gorg.jabref.logic.importer.OpenDatabaseTest.correctlyParseEncodingWithoutNewline()?entries@115.29:115.36CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.javav v( ë
Forg.jabref.logic.importer.OpenDatabaseTest?defaultEncoding@26.26:26.41VALUEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java ()"
isFinaltrue"
typeCharset"≤
declarationStringú<mark class="modifier">private </mark><mark class="modifier">final </mark>Charset <mark class="class-field">defaultEncoding</mark> = StandardCharsets.UTF_8;"
isStaticfalse"
accessprivate*defaultEncoding2i
java.nio.charset.CharsetTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (Ü
Iorg.jabref.logic.importer.OpenDatabaseTest?libraryPreferences@27.31:27.49VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (1"
isFinalfalse"
typeLibraryPreferences"Å
declarationStringl<mark class="modifier">private </mark>LibraryPreferences <mark class="class-field">libraryPreferences</mark>"
isStaticfalse"
accessprivate*libraryPreferences2z
)org.jabref.preferences.LibraryPreferencesTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (ç
Norg.jabref.logic.importer.OpenDatabaseTest?importFormatPreferences@28.36:28.59VARIABLEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java$ (;"
isFinalfalse"
typeImportFormatPreferences"ã
declarationStringv<mark class="modifier">private </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2h
ImportFormatPreferencesTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (#ﬁ
Borg.jabref.logic.importer.OpenDatabaseTest?bibNoHeader@29.23:29.34VALUEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (""
isFinaltrue"
typePath"ê
declarationString{<mark class="modifier">private </mark><mark class="modifier">final </mark>Path <mark class="class-field">bibNoHeader</mark>"
isStaticfalse"
accessprivate*bibNoHeader2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (Á
Eorg.jabref.logic.importer.OpenDatabaseTest?bibWrongHeader@30.23:30.37VALUEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (%"
isFinaltrue"
typePath"ì
declarationString~<mark class="modifier">private </mark><mark class="modifier">final </mark>Path <mark class="class-field">bibWrongHeader</mark>"
isStaticfalse"
accessprivate*bibWrongHeader2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (ÿ
@org.jabref.logic.importer.OpenDatabaseTest?bibHeader@31.23:31.32VALUEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java ( "
isFinaltrue"
typePath"é
declarationStringy<mark class="modifier">private </mark><mark class="modifier">final </mark>Path <mark class="class-field">bibHeader</mark>"
isStaticfalse"
accessprivate*	bibHeader2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java (˝
Lorg.jabref.logic.importer.OpenDatabaseTest?bibHeaderAndSignature@32.23:32.44VALUEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java   (,"
isFinaltrue"
typePath"õ
declarationStringÖ<mark class="modifier">private </mark><mark class="modifier">final </mark>Path <mark class="class-field">bibHeaderAndSignature</mark>"
isStaticfalse"
accessprivate*bibHeaderAndSignature2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java   (â
Porg.jabref.logic.importer.OpenDatabaseTest?bibEncodingWithoutNewline@33.23:33.48VALUEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java! !(0"
isFinaltrue"
typePath"ü
declarationStringâ<mark class="modifier">private </mark><mark class="modifier">final </mark>Path <mark class="class-field">bibEncodingWithoutNewline</mark>"
isStaticfalse"
accessprivate*bibEncodingWithoutNewline2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java! !(«
Borg.jabref.logic.importer.OpenDatabaseTest?fileMonitor@34.36:34.47VALUEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java"$ "(/"
isFinaltrue"
typeFileUpdateMonitor"æ
declarationString®<mark class="modifier">private </mark><mark class="modifier">final </mark>FileUpdateMonitor <mark class="class-field">fileMonitor</mark> = new DummyFileUpdateMonitor();"
isStaticfalse"
accessprivate*fileMonitor2x
'org.jabref.model.util.FileUpdateMonitorTYPEG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java" "(#2ñ
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLG
=src\test\java\org\jabref\logic\importer\OpenDatabaseTest.java"6 "(L