
8src\main\java\org\jabref\logic\importer\QueryParser.javaç
%org.jabref.logic.importer.QueryParserCLASSB
8src\main\java\org\jabref\logic\importer\QueryParser.java ("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"i
declarationStringT<mark class="modifier">public </mark><mark class="modifier">class </mark>QueryParser"
accesspublic*QueryParser2´
Xorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)DECLARATIONB
8src\main\java\org\jabref\logic\importer\QueryParser.java( (H˛"
Xorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)METHODB
8src\main\java\org\jabref\logic\importer\QueryParser.java( (H"
isFinalfalse"®
declarationStringí<mark class="modifier">public </mark>Optional&lt;ComplexSearchQuery&gt; <mark class="method">parseQueryStringIntoComplexQuery</mark>(String query)"
isStaticfalse"
accesspublic"

isAbstractfalse"$
typeOptional<ComplexSearchQuery>* parseQueryStringIntoComplexQuery2k
java.util.Comparator.reversed()CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java*> *(F2ü
Sjava.util.Comparator.comparing(java.util.function.Function<? super T, ? extends U>)CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java*( *(12d
java.util.Optional.of(T)CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java+ +(2∏
lorg.jabref.logic.importer.fetcher.ComplexSearchQuery.fromTerms(java.util.List<org.apache.lucene.index.Term>)CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java+2 +(;2f
java.util.Optional.empty()CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java- -(!2g
java.util.HashSet.HashSet()CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java#" #(+2å
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java)) )(42∑
korg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?parser@33.32:33.38CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java"  "(&2™
^org.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)!queryCALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java"- "(22∂
jorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?terms@35.22:35.27CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java&> &(C2º
porg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?luceneQuery@34.18:34.29CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java' '(2∏
lorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?visitor@38.25:38.32CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java' '(%2∂
jorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?terms@35.22:35.27CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java)5 )(:2º
porg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?sortedTerms@41.23:41.34CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java* *(2º
porg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?sortedTerms@41.23:41.34CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java+< +(G2Ø
^org.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)!query	PARAMETERB
8src\main\java\org\jabref\logic\importer\QueryParser.javaP (U2æ
korg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?parser@33.32:33.38DECLARATIONB
8src\main\java\org\jabref\logic\importer\QueryParser.java!  !(&2√
porg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?luceneQuery@34.18:34.29DECLARATIONB
8src\main\java\org\jabref\logic\importer\QueryParser.java" "(2Ω
jorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?terms@35.22:35.27DECLARATIONB
8src\main\java\org\jabref\logic\importer\QueryParser.java# #(2ø
lorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?visitor@38.25:38.32DECLARATIONB
8src\main\java\org\jabref\logic\importer\QueryParser.java& &( 2√
porg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?sortedTerms@41.23:41.34DECLARATIONB
8src\main\java\org\jabref\logic\importer\QueryParser.java) )("2∫
gorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?ex@44.87:44.89DECLARATIONB
8src\main\java\org\jabref\logic\importer\QueryParser.java,W ,(Y2e
java.util.OptionalRETURN_TYPEB
8src\main\java\org\jabref\logic\importer\QueryParser.java (2ê
4org.jabref.logic.importer.fetcher.ComplexSearchQueryRETURN_TYPE_ARGUMENTB
8src\main\java\org\jabref\logic\importer\QueryParser.java (&í
korg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?parser@33.32:33.38VARIABLEB
8src\main\java\org\jabref\logic\importer\QueryParser.java!  !(&"
typeStandardQueryParser"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>StandardQueryParser <mark class="class-field">parser</mark> = new StandardQueryParser()*parser2è
Corg.apache.lucene.queryparser.flexible.standard.StandardQueryParserTYPEB
8src\main\java\org\jabref\logic\importer\QueryParser.java! !(Í
porg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?luceneQuery@34.18:34.29VARIABLEB
8src\main\java\org\jabref\logic\importer\QueryParser.java" "("
typeQuery"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>Query <mark class="class-field">luceneQuery</mark> = parser.parse(query, "<mark class="modifier">default</mark>")*luceneQuery2j
org.apache.lucene.search.QueryTYPEB
8src\main\java\org\jabref\logic\importer\QueryParser.java" "(2∑
korg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?parser@33.32:33.38CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java"  "(&2™
^org.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)!queryCALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java"- "(2ï
jorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?terms@35.22:35.27VARIABLEB
8src\main\java\org\jabref\logic\importer\QueryParser.java# #("
type	Set<Term>"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>Set<Term> <mark class="class-field">terms</mark> = new HashSet<>()*terms2Y
java.util.SetTYPEB
8src\main\java\org\jabref\logic\importer\QueryParser.java# #(2q
org.apache.lucene.index.TermTYPE_ARGUMENTB
8src\main\java\org\jabref\logic\importer\QueryParser.java# #(2g
java.util.HashSet.HashSet()CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java#" #(+©
lorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?visitor@38.25:38.32VARIABLEB
8src\main\java\org\jabref\logic\importer\QueryParser.java& &( "
typeQueryVisitor"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>QueryVisitor <mark class="class-field">visitor</mark> = QueryVisitor.termCollector(terms)*visitor2q
%org.apache.lucene.search.QueryVisitorTYPEB
8src\main\java\org\jabref\logic\importer\QueryParser.java& &(2∂
jorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?terms@35.22:35.27CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java&> &(Cë
porg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?sortedTerms@41.23:41.34VARIABLEB
8src\main\java\org\jabref\logic\importer\QueryParser.java) )(""
type
List<Term>"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>List<Term> <mark class="class-field">sortedTerms</mark> = new ArrayList<>(terms)*sortedTerms2Z
java.util.ListTYPEB
8src\main\java\org\jabref\logic\importer\QueryParser.java) )(2q
org.apache.lucene.index.TermTYPE_ARGUMENTB
8src\main\java\org\jabref\logic\importer\QueryParser.java) )(2å
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java)) )(42∂
jorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?terms@35.22:35.27CALLB
8src\main\java\org\jabref\logic\importer\QueryParser.java)5 )(:Ÿ
^org.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)!query	PARAMETERB
8src\main\java\org\jabref\logic\importer\QueryParser.javaP (U"
typeString"
isFinalfalse"!
declarationStringString query*query2\
java.lang.StringTYPEB
8src\main\java\org\jabref\logic\importer\QueryParser.javaI (O–
gorg.jabref.logic.importer.QueryParser.parseQueryStringIntoComplexQuery(java.lang.String)?ex@44.87:44.89VARIABLEB
8src\main\java\org\jabref\logic\importer\QueryParser.java,W ,(Y"M
typeEQueryNodeException | IllegalStateException | IllegalArgumentException"
isFinalfalse"]
declarationStringHQueryNodeException | IllegalStateException | IllegalArgumentException ex*ex2“
Öorg.apache.lucene.queryparser.flexible.core.QueryNodeException | java.lang.IllegalStateException | java.lang.IllegalArgumentExceptionTYPEB
8src\main\java\org\jabref\logic\importer\QueryParser.java, ,(V