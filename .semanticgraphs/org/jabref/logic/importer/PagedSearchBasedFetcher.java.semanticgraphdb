
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java¸

1org.jabref.logic.importer.PagedSearchBasedFetcherTRAITN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"≥
declarationStringù<mark class="modifier">public </mark><mark class="modifier">interface </mark>PagedSearchBasedFetcher<mark class="modifier"> extends </mark>SearchBasedFetcher"
accesspublic*PagedSearchBasedFetcher2Ê
Üorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (%2∫
[org.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (-2û
?org.jabref.logic.importer.PagedSearchBasedFetcher.getPageSize()DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java, ,(2€
|org.jabref.logic.importer.PagedSearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java7 7((2Ü
,org.jabref.logic.importer.SearchBasedFetcherEXTENDN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java1 (Cû
Üorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)METHODN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (%"
isFinalfalse"Õ
declarationString∑<mark class="modifier"> </mark>Page&lt;BibEntry&gt; <mark class="method">performSearchPaged</mark>(QueryNode luceneQuery<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> pageNumber)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typePage<BibEntry>*performSearchPaged2
íorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQuery	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java0 (;2Ô
ëorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumber	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.javaA (K2{
org.jabref.model.paging.PageRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (2á
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java	 (‰
íorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQuery	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java0 (;"
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2ì
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java& (/∫
ëorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumber	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.javaA (K"
typeint"
isFinalfalse"A
declarationString,<mark class="modifier">int</mark> pageNumber*
pageNumber2[
intTYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java= (@µ
[org.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)METHODN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (-"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>Page&lt;BibEntry&gt; <mark class="method">performSearchPaged</mark>(String searchQuery<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> pageNumber)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typePage<BibEntry>*performSearchPaged2r
java.lang.String.isBlank()CALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (2y
!java.util.Collections.emptyList()CALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.javaC (L2©
Qorg.jabref.model.paging.Page.Page(java.lang.String, int, java.util.Collection<T>)CALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (2•
Morg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java% %(&2ø
gorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)!searchQueryCALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (2ø
gorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)!searchQueryCALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java ()2æ
forg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)!pageNumberCALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java+ (52∆
norg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)?parser@32.21:32.27CALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java#+ #(12ø
gorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)!searchQueryCALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java#8 #(C2—
yorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)?NO_EXPLICIT_FIELD@33.21:33.38CALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java#E #(V2æ
forg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)!pageNumberCALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java#Y #(c2ƒ
gorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)!searchQuery	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java5 (@2√
forg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)!pageNumber	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.javaF (P2Õ
norg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)?parser@32.21:32.27DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java   (2ÿ
yorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)?NO_EXPLICIT_FIELD@33.21:33.38DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java! !(&2»
iorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)?e@36.41:36.42DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java$) $(*2{
org.jabref.model.paging.PageRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (2á
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java (ú
norg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)?parser@32.21:32.27VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java   ("
typeSyntaxParser"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>SyntaxParser <mark class="class-field">parser</mark> = new StandardSyntaxParser()*parser2ó
?org.apache.lucene.queryparser.flexible.core.parser.SyntaxParserTYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java   (Ø
yorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)?NO_EXPLICIT_FIELD@33.21:33.38VALUEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java! !(&"
typeString"
isFinaltrue"º
declarationString¶<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">NO_EXPLICIT_FIELD</mark> = "<mark class="modifier">default</mark>"*NO_EXPLICIT_FIELD2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java! !(Ü
gorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)!searchQuery	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java5 (@"
typeString"
isFinalfalse"'
declarationStringString searchQuery*searchQuery2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java. (4é
forg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)!pageNumber	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.javaF (P"
typeint"
isFinalfalse"A
declarationString,<mark class="modifier">int</mark> pageNumber*
pageNumber2[
intTYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.javaB (E…
iorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(java.lang.String, int)?e@36.41:36.42VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java$) $(*"
typeQueryNodeParseException"
isFinalfalse".
declarationStringQueryNodeParseException e*e2õ
Corg.apache.lucene.queryparser.flexible.core.QueryNodeParseExceptionTYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java$ $((Ì
?org.jabref.logic.importer.PagedSearchBasedFetcher.getPageSize()METHODN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java, ,("
isFinalfalse"
declarationStringj<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="method">getPageSize</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeint*getPageSize2b
intRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java, ,(˛
|org.jabref.logic.importer.PagedSearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)METHODN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java7 7(("
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Override</mark> <br><mark class="modifier"> </mark>List&lt;BibEntry&gt; <mark class="method">performSearch</mark>(QueryNode luceneQuery)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeList<BibEntry>*performSearch2Å
)org.jabref.model.paging.Page.getContent()CALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java8B 8(L2ﬂ
Üorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearchPaged(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)CALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java8 8(12ò
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java8 8(2·
àorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQueryCALLN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java82 8(=2”
worg.jabref.logic.importer.SearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)OVERRIDEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java7 7((2Ê
àorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java73 7(>2m
java.util.ListRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java7 7(2á
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java7 7(⁄
àorg.jabref.logic.importer.PagedSearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java73 7(>"
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2ì
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEN
Dsrc\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java7) 7(2