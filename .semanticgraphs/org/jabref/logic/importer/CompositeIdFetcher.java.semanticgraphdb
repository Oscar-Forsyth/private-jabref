
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javaÅ	
,org.jabref.logic.importer.CompositeIdFetcherCLASSI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java ("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"p
declarationString[<mark class="modifier">public </mark><mark class="modifier">class </mark>CompositeIdFetcher"
accesspublic*CompositeIdFetcher2l
CompositeIdFetcherDECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2™
Porg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (/2ê
6org.jabref.logic.importer.CompositeIdFetcher.getName()DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java. .(2®
Norg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java2 2()2™
Porg.jabref.logic.importer.CompositeIdFetcher?importFormatPreferences@15.42:15.65DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java* (AÃ
CompositeIdFetcherCONSTRUCTORI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java ("ö
declarationStringÑ<mark class="modifier">public </mark><mark class="method">CompositeIdFetcher</mark>(ImportFormatPreferences importFormatPreferences)*CompositeIdFetcher2£
Porg.jabref.logic.importer.CompositeIdFetcher?importFormatPreferences@15.42:15.65CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java ($2Ü
,org.jabref.logic.importer.CompositeIdFetcherRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (Ì
importFormatPreferences	PARAMETERI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java6 (M"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2j
ImportFormatPreferencesTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (5Â-
Porg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)METHODI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (/"
isFinalfalse"Ë
declarationString“<mark class="modifier">public </mark>Optional&lt;BibEntry&gt; <mark class="method">performSearchById</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<BibEntry>*performSearchById2ï
Borg.jabref.model.entry.identifier.DOI.findInText(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java  (*2q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2£
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java; (L2à
5org.jabref.model.entry.identifier.DOI.getNormalized()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javaW (d2k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javaQ (T2ú
Iorg.jabref.model.entry.identifier.ArXivIdentifier.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javaD (I2q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (%2•
Rorg.jabref.logic.importer.fetcher.ArXivFetcher.performSearchById(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java= (N2î
Aorg.jabref.model.entry.identifier.ArXivIdentifier.getNormalized()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javae (r2k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java_ (b2ë
>org.jabref.model.entry.identifier.ISBN.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java# ((2q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2±
^org.jabref.logic.importer.fetcher.isbntobibtex.IsbnFetcher.performSearchById(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java# #(&2â
6org.jabref.model.entry.identifier.ISBN.getNormalized()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java#2 #(?2k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java#, #(/2m
java.util.Optional.empty()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java+ +(2Æ
[org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java+ (52≥
`org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?doi@22.22:22.25CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2£
Porg.jabref.logic.importer.CompositeIdFetcher?importFormatPreferences@15.42:15.65CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java" (92≥
`org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?doi@22.22:22.25CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javaM (P2Æ
[org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javaJ (T2ø
lorg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?arXivIdentifier@26.34:26.49CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2£
Porg.jabref.logic.importer.CompositeIdFetcher?importFormatPreferences@15.42:15.65CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java$ (;2ø
lorg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?arXivIdentifier@26.34:26.49CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javaO (^2Æ
[org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java) (32¥
aorg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?isbn@30.23:30.27CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2£
Porg.jabref.logic.importer.CompositeIdFetcher?importFormatPreferences@15.42:15.65CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java #  (:2¥
aorg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?isbn@30.23:30.27CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java#' #(+2≥
[org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java7 (A2∫
`org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?doi@22.22:22.25DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2∆
lorg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?arXivIdentifier@26.34:26.49DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java" (12ª
aorg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?isbn@30.23:30.27DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2l
java.util.OptionalRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (ü
`org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?doi@22.22:22.25VARIABLEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java ("
typeOptional<DOI>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = DOI.findInText(identifier)*doi2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2Å
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2ï
Borg.jabref.model.entry.identifier.DOI.findInText(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java  (*2Æ
[org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java+ (5ˆ
lorg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?arXivIdentifier@26.34:26.49VARIABLEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java" (1"!
typeOptional<ArXivIdentifier>"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>Optional<ArXivIdentifier> <mark class="class-field">arXivIdentifier</mark> = ArXivIdentifier.parse(identifier)*arXivIdentifier2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2ç
1org.jabref.model.entry.identifier.ArXivIdentifierTYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java ( 2ú
Iorg.jabref.model.entry.identifier.ArXivIdentifier.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javaD (I2Æ
[org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.javaJ (Tù
aorg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)?isbn@30.23:30.27VARIABLEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java ("
typeOptional<ISBN>"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>Optional<ISBN> <mark class="class-field">isbn</mark> = ISBN.parse(identifier)*isbn2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2Ç
&org.jabref.model.entry.identifier.ISBNTYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java (2ë
>org.jabref.model.entry.identifier.ISBN.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java# ((2Æ
[org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java) (3Ó
[org.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java7 (A"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java0 (6ƒ
6org.jabref.logic.importer.CompositeIdFetcher.getName()METHODI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java. .("
isFinalfalse"f
declarationStringQ<mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2j
java.lang.StringRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java. .(¥
Norg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)METHODI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java2 2()"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">boolean</mark> <mark class="method">containsValidId</mark>(String identifier)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeboolean*containsValidId2ï
Borg.jabref.model.entry.identifier.DOI.findInText(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java3  3(*2ú
Iorg.jabref.model.entry.identifier.ArXivIdentifier.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java4D 4(I2ë
>org.jabref.model.entry.identifier.ISBN.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java5# 5((2ú
Ijava.util.stream.Stream.anyMatch(java.util.function.Predicate<? super T>)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java75 7(=2s
 java.util.stream.Stream.of(T...)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java7 7(2¨
Yorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java3+ 3(52¨
Yorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java4J 4(T2¨
Yorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java5) 5(32±
^org.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)?doi@51.22:51.25CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java7 7(2Ω
jorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)?arXivIdentifier@52.34:52.49CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java7 7(-2≤
_org.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)?isbn@53.23:53.27CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java7/ 7(32q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java7> 7(Q2±
Yorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java21 2(;2∏
^org.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)?doi@51.22:51.25DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java3 3(2ƒ
jorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)?arXivIdentifier@52.34:52.49DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java4" 4(12π
_org.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)?isbn@53.23:53.27DECLARATIONI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java5 5(2a
booleanRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java2 2(õ
^org.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)?doi@51.22:51.25VARIABLEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java3 3("
typeOptional<DOI>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = DOI.findInText(identifier)*doi2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java3 3(2Å
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java3 3(2ï
Borg.jabref.model.entry.identifier.DOI.findInText(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java3  3(*2¨
Yorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java3+ 3(5Ú
jorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)?arXivIdentifier@52.34:52.49VARIABLEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java4" 4(1"!
typeOptional<ArXivIdentifier>"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>Optional<ArXivIdentifier> <mark class="class-field">arXivIdentifier</mark> = ArXivIdentifier.parse(identifier)*arXivIdentifier2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java4 4(2ç
1org.jabref.model.entry.identifier.ArXivIdentifierTYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java4 4( 2ú
Iorg.jabref.model.entry.identifier.ArXivIdentifier.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java4D 4(I2¨
Yorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java4J 4(Tô
_org.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)?isbn@53.23:53.27VARIABLEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java5 5("
typeOptional<ISBN>"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>Optional<ISBN> <mark class="class-field">isbn</mark> = ISBN.parse(identifier)*isbn2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java5 5(2Ç
&org.jabref.model.entry.identifier.ISBNTYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java5 5(2ë
>org.jabref.model.entry.identifier.ISBN.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java5# 5((2¨
Yorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java5) 5(3Ï
Yorg.jabref.logic.importer.CompositeIdFetcher.containsValidId(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java21 2(;"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java2* 2(0¥
Porg.jabref.logic.importer.CompositeIdFetcher?importFormatPreferences@15.42:15.65VALUEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java* (A"
isFinaltrue"
typeImportFormatPreferences"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">final </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2j
ImportFormatPreferencesTYPEI
?src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java ()