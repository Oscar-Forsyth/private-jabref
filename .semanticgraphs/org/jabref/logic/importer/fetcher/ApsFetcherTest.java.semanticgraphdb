
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java±
0org.jabref.logic.importer.fetcher.ApsFetcherTestCLASSM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"ò
declarationStringÇ<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>ApsFetcherTest"
accesspackage_private*ApsFetcherTest2ñ
8org.jabref.logic.importer.fetcher.ApsFetcherTest.setUp()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java	 (2§
Forg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromDoi()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java	 (2≠
Oorg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromLowercaseDoi()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java	 (%2Ø
Qorg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnauthorized()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java%	 %('2Ø
Qorg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnknownEntry()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java+	 +('2°
Corg.jabref.logic.importer.fetcher.ApsFetcherTest?finder@17.23:17.29DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (Ω
8org.jabref.logic.importer.fetcher.ApsFetcherTest.setUp()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java	 ("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2ê
9org.jabref.logic.importer.fetcher.ApsFetcher.ApsFetcher()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (2ö
Corg.jabref.logic.importer.fetcher.ApsFetcherTest?finder@17.23:17.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (Ê
Forg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromDoi()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java	 ("
isFinalfalse"Ä
declarationStringÍ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">findFullTextFromDoi</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*findFullTextFromDoi2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java( (12o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java ( 2≤
Zorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLN
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.javau (Å2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (%2y
"java.net.URL.URL(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java% ((2ö
Corg.jabref.logic.importer.fetcher.ApsFetcherTest?finder@17.23:17.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.javan (t2±
Xorg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromDoi()?entry@26.17:26.22CALLO
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.javaÇ (á2∂
Xorg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromDoi()?entry@26.17:26.22DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java ( 
Xorg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromDoi()?entry@26.17:26.22VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java ("
typeBibEntry"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry().withField(StandardField.DOI, "10.1103/PhysRevLett.116.061102")*entry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java( (12Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (%ì
Oorg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromLowercaseDoi()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java	 (%"
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">findFullTextFromLowercaseDoi</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*findFullTextFromLowercaseDoi2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (  (12o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java! !( 2≤
Zorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLN
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java!u !(Å2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java   (%2y
"java.net.URL.URL(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java!% !((2ö
Corg.jabref.logic.importer.fetcher.ApsFetcherTest?finder@17.23:17.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java!n !(t2∫
aorg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromLowercaseDoi()?entry@32.17:32.22CALLO
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java!Ç !(á2ø
aorg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromLowercaseDoi()?entry@32.17:32.22DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java   (2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (”
aorg.jabref.logic.importer.fetcher.ApsFetcherTest.findFullTextFromLowercaseDoi()?entry@32.17:32.22VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java   ("
typeBibEntry"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry().withField(StandardField.DOI, "10.1103/physrevlett.124.029002")*entry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java   (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (  (12Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java   (%°
Qorg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnauthorized()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java%	 %('"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">notFindFullTextForUnauthorized</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*notFindFullTextForUnauthorized2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java&( &(12q
java.util.Optional.empty()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java' '(#2±
Zorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java'. '(:2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java& &(%2ö
Corg.jabref.logic.importer.fetcher.ApsFetcherTest?finder@17.23:17.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java'' '(-2∫
corg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnauthorized()?entry@38.17:38.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java'; '(@2¡
corg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnauthorized()?entry@38.17:38.22DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java& &(2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java% %(‘
corg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnauthorized()?entry@38.17:38.22VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java& &("
typeBibEntry"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry().withField(StandardField.DOI, "10.1103/PhysRevLett.89.127401")*entry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java& &(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java&( &(12Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java& &(%°
Qorg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnknownEntry()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java+	 +('"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">notFindFullTextForUnknownEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*notFindFullTextForUnknownEntry2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java,( ,(12q
java.util.Optional.empty()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java- -(#2±
Zorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java-. -(:2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java, ,(%2ö
Corg.jabref.logic.importer.fetcher.ApsFetcherTest?finder@17.23:17.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java-' -(-2∫
corg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnknownEntry()?entry@44.17:44.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java-; -(@2¡
corg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnknownEntry()?entry@44.17:44.22DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java, ,(2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java+ +(‘
corg.jabref.logic.importer.fetcher.ApsFetcherTest.notFindFullTextForUnknownEntry()?entry@44.17:44.22VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java, ,("
typeBibEntry"
isFinalfalse"≥
declarationStringù<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry().withField(StandardField.DOI, "10.1016/j.aasri.2014.0559.002")*entry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java, ,(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java,( ,(12Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java, ,(%Á
Corg.jabref.logic.importer.fetcher.ApsFetcherTest?finder@17.23:17.29VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java ("
isFinalfalse"
type
ApsFetcher"m
declarationStringX<mark class="modifier">private </mark>ApsFetcher <mark class="class-field">finder</mark>"
isStaticfalse"
accessprivate*finder2É
,org.jabref.logic.importer.fetcher.ApsFetcherTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\ApsFetcherTest.java (