
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˜!
&org.jabref.logic.importer.fetcher.IEEECLASSC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java/ /(",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"÷
declarationString¿<mark class="modifier">public </mark><mark class="modifier">class </mark>IEEE<mark class="modifier"><br>implements </mark>FulltextFetcher, PagedSearchBasedParserFetcher, CustomizableKeyFetcher"
accesspublic*IEEE2X
IEEEDECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaD D(2ø
korg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaL L(-2™
Torg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ â(%2å
6org.jabref.logic.importer.fetcher.IEEE.getTrustLevel()DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java» »(#2à
2org.jabref.logic.importer.fetcher.IEEE.getParser()DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÕ Õ(2Ü
0org.jabref.logic.importer.fetcher.IEEE.getName()DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÒ Ò(2ä
4org.jabref.logic.importer.fetcher.IEEE.getHelpPage()DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˆ ˆ()2à
2org.jabref.logic.importer.fetcher.IEEE.getApiKey()DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˙ ˙(2â
3org.jabref.logic.importer.fetcher.IEEE.getTestUrl()DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˇ ˇ(2Õ
worg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ Ñ(2ì
?org.jabref.logic.importer.fetcher.IEEE?FETCHER_NAME@49.31:49.43DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java1 1(+2ç
9org.jabref.logic.importer.fetcher.IEEE?LOGGER@51.32:51.38DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java3  3(&2°
Morg.jabref.logic.importer.fetcher.IEEE?STAMP_BASE_STRING_DOCUMENT@53.32:53.58DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java5  5(:2î
@org.jabref.logic.importer.fetcher.IEEE?STAMP_PATTERN@54.33:54.46DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java6! 6(.2ó
Corg.jabref.logic.importer.fetcher.IEEE?DOCUMENT_PATTERN@55.33:55.49DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java7! 7(12í
>org.jabref.logic.importer.fetcher.IEEE?PDF_PATTERN@57.33:57.44DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java9! 9(,2è
;org.jabref.logic.importer.fetcher.IEEE?IEEE_DOI@58.32:58.40DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java:  :((2è
;org.jabref.logic.importer.fetcher.IEEE?BASE_URL@59.32:59.40DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java;  ;((2é
:org.jabref.logic.importer.fetcher.IEEE?API_KEY@60.32:60.39DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java<  <('2ü
Korg.jabref.logic.importer.fetcher.IEEE?TEST_URL_WITHOUT_API_KEY@61.32:61.56DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java=  =(82û
Jorg.jabref.logic.importer.fetcher.IEEE?importFormatPreferences@63.42:63.65DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java?* ?(A2ö
Forg.jabref.logic.importer.fetcher.IEEE?importerPreferences@64.38:64.57DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java@& @(92í
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaB! B(,2x
)org.jabref.logic.importer.FulltextFetcherEXTENDC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java/ /(,2Ü
7org.jabref.logic.importer.PagedSearchBasedParserFetcherEXTENDC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java/. /(K2á
8org.jabref.logic.importer.fetcher.CustomizableKeyFetcherEXTENDC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java/M /(c
IEEECONSTRUCTORC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaD D("Ò
declarationString€<mark class="modifier">public </mark><mark class="method">IEEE</mark>(ImportFormatPreferences importFormatPreferences<mark class="modifier"><mark class="modifier">,</mark></mark> ImporterPreferences importerPreferences)*IEEE2p
#java.util.Objects.requireNonNull(T)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaF+ F(92ó
Jorg.jabref.logic.importer.fetcher.IEEE?importFormatPreferences@63.42:63.65CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaE E($2ì
Forg.jabref.logic.importer.fetcher.IEEE?importerPreferences@64.38:64.57CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaF F( 2z
&org.jabref.logic.importer.fetcher.IEEERETURN_TYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaD D(·
importFormatPreferences	PARAMETERC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaD( D(?"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2d
ImportFormatPreferencesTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaD D('„
importerPreferences	PARAMETERC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaDU D(h"
typeImporterPreferences"
isFinalfalse"<
declarationString'ImporterPreferences importerPreferences*importerPreferences2z
-org.jabref.logic.importer.ImporterPreferencesTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaDA D(Tå
korg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)METHODC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaL L(-"
isFinalfalse"Ö
declarationStringÔ<mark class="modifier">private </mark><mark class="modifier">static </mark>BibEntry <mark class="method">parseJsonResponse</mark>(JSONObject jsonEntry<mark class="modifier"><mark class="modifier">,</mark></mark> Character keywordSeparator)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeBibEntry*parseJsonResponse2´
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java_ _(2∞
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java_4 _(82û
Qorg.jabref.model.entry.BibEntry.addKeyword(java.lang.String, java.lang.Character)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaj j($2û
Qorg.jabref.model.entry.BibEntry.addKeyword(java.lang.String, java.lang.Character)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javap p($2ó
Jorg.jabref.model.entry.BibEntry.addFile(org.jabref.model.entry.LinkedFile)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javay y(2w
*org.jabref.model.entry.BibEntry.BibEntry()CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaM M(%2l
java.util.ArrayList.ArrayList()CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaY) Y(42ô
Lorg.jabref.model.entry.LinkedFile.LinkedFile(java.net.URL, java.lang.String)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javay y((2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaO O(2 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaV V(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaV/ V(82¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaZ& Z(/2÷
àorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authorsContainer@90.19:90.35CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java[ [(2–
Çorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authorPure@91.57:91.67CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java\- \(72Ã
org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authors@89.27:89.34CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java] ](2À
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?author@92.23:92.29CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java] ](2 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java_ _(2Ã
org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authors@89.27:89.34CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java_B _(I2 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java` `(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java`/ `(82 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaa a(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaa* a(32 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javab b(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javab+ b(42 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javac c(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javac, c(52¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javacW c(`2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javae' e(02Ÿ
ãorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keywordsContainer@101.19:101.36CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaf f(2Ÿ
ãorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keywordsContainer@101.19:101.36CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javag g(!2Ÿ
ãorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keywordsContainer@101.19:101.36CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javah h(!2À
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?data@104.92:104.96CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javai. i(22 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaj j(2œ
Åorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keyword@105.27:105.34CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaj% j(,2…
|org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!keywordSeparatorCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaj. j(>2Ÿ
ãorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keywordsContainer@101.19:101.36CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javam m(!2Ÿ
ãorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keywordsContainer@101.19:101.36CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javan n(!2À
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?data@110.94:110.98CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javao. o(22 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javap p(2œ
Åorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keyword@111.27:111.34CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javap% p(,2…
|org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!keywordSeparatorCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javap. p(>2 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javau u(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javau+ u(42 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javav v(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javav+ v(42 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaw w(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaw, w(52 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javay y(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javay1 y(:2Ü
9org.jabref.logic.importer.fetcher.IEEE?LOGGER@51.32:51.38CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java{ {(2 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java} }(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java}3 }(<2 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java~ ~(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java~+ ~(42 
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java (2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java6 (?2Ã
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÄ Ä(2ƒ
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÄ0 Ä(92Ã
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÅ Å(2ƒ
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÅ0 Å(92Ã
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÇ Ç(2ƒ
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÇ, Ç(52Ã
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÉ É(2ƒ
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÉ- É(62Ã
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÖ Ö(2«
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntry	PARAMETERC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaL9 L(B2Œ
|org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!keywordSeparator	PARAMETERC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaLN L(^2—
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaM M(2”
org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authors@89.27:89.34DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaY Y("2›
àorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authorsContainer@90.19:90.35DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaZ Z(#2“
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?author@92.23:92.29DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java\ \(2‡
ãorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keywordsContainer@101.19:101.36DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javae e($2÷
Åorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keyword@105.27:105.34DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javai i("2÷
Åorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keyword@111.27:111.34DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javao o("2◊
Çorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authorPure@91.57:91.67DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java[9 [(C2“
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?data@104.92:104.96DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javah\ h(`2“
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?data@110.94:110.98DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javan^ n(b2œ
{org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?e@122.39:122.40DECLARATIONC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaz' z((2s
org.jabref.model.entry.BibEntryRETURN_TYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaL L(÷
}org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?entry@77.17:77.22VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaM M("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2l
org.jabref.model.entry.BibEntryTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaM M(2w
*org.jabref.model.entry.BibEntry.BibEntry()CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaM M(%’
org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authors@89.27:89.34VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaY Y(""
typeList<String>"
isFinaltrue"¢
declarationStringå<mark class="modifier"> </mark><mark class="modifier">final </mark>List<String> <mark class="class-field">authors</mark> = new ArrayList<>()*authors2[
java.util.ListTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaY Y(2f
java.lang.StringTYPE_ARGUMENTC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaY Y(2l
java.util.ArrayList.ArrayList()CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaY) Y(4€
àorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authorsContainer@90.19:90.35VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaZ Z(#"
type
JSONObject"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>JSONObject <mark class="class-field">authorsContainer</mark> = jsonEntry.optJSONObject("authors")*authorsContainer2i
kong.unirest.json.JSONObjectTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaZ Z(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaZ& Z(/æ
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?author@92.23:92.29VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java\ \("
type
JSONObject"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>JSONObject <mark class="class-field">author</mark> = (JSONObject) authorPure*author2i
kong.unirest.json.JSONObjectTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java\ \(2–
Çorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authorPure@91.57:91.67CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java\- \(7‰
ãorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keywordsContainer@101.19:101.36VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javae e($"
type
JSONObject"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>JSONObject <mark class="class-field">keywordsContainer</mark> = jsonEntry.optJSONObject("index_terms")*keywordsContainer2i
kong.unirest.json.JSONObjectTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javae e(2¬
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntryCALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javae' e(0†
Åorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keyword@105.27:105.34VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javai i(""
typeString"
isFinalfalse"s
declarationString^<mark class="modifier"> </mark>String <mark class="class-field">keyword</mark> = (String) data*keyword2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javai i(2À
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?data@104.92:104.96CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javai. i(2†
Åorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?keyword@111.27:111.34VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javao o(""
typeString"
isFinalfalse"s
declarationString^<mark class="modifier"> </mark>String <mark class="class-field">keyword</mark> = (String) data*keyword2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javao o(2À
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?data@110.94:110.98CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javao. o(2é
uorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!jsonEntry	PARAMETERC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaL9 L(B"
type
JSONObject"
isFinalfalse")
declarationStringJSONObject jsonEntry*	jsonEntry2i
kong.unirest.json.JSONObjectTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaL. L(8ò
|org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)!keywordSeparator	PARAMETERC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaLN L(^"
type	Character"
isFinalfalse"/
declarationStringCharacter keywordSeparator*keywordSeparator2`
java.lang.CharacterTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaLD L(M§
Çorg.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?authorPure@91.57:91.67VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java[9 [(C"
type"
isFinalfalse" 
declarationString authorPure*
authorPure2TYPEì
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?data@104.92:104.96VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javah\ h(`"
type"
isFinalfalse"
declarationString data*data2TYPEì
~org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?data@110.94:110.98VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javan^ n(b"
type"
isFinalfalse"
declarationString data*data2TYPEõ
{org.jabref.logic.importer.fetcher.IEEE.parseJsonResponse(kong.unirest.json.JSONObject, java.lang.Character)?e@122.39:122.40VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaz' z(("
typeMalformedURLException"
isFinalfalse",
declarationStringMalformedURLException e*e2k
java.net.MalformedURLExceptionTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaz z(&Ñ{
Torg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)METHODE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ â(%"
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;URL&gt; <mark class="method">findFullText</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<URL>*findFullText2r
#java.util.Objects.requireNonNull(T)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaä ä(2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaè+ è(32m
java.util.Optional.isPresent()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaê ê(2Ü
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaë: ë(A2g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaëL ë(O2m
java.util.regex.Matcher.find()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaí# í('2q
"java.util.regex.Matcher.group(int)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaì2 ì(72Ü
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaò1 ò(82g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaòC ò(F2m
java.util.regex.Matcher.find()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaô ô(!2q
"java.util.regex.Matcher.group(int)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaõ+ õ(02i
java.lang.String.isEmpty()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java† †(2º
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java°B °(I2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java°& °(.2m
java.util.Optional.isPresent()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢ ¢(2|
-java.lang.String.startsWith(java.lang.String)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢6 ¢(@2}
.org.jabref.model.entry.identifier.DOI.getDOI()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢- ¢(32g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢' ¢(*2m
java.util.Optional.isPresent()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢i ¢(r2Ö
6org.jabref.model.entry.identifier.DOI.getExternalURI()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢X ¢(f2g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢R ¢(U2c
java.net.URI.toURL()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§[ §(`2g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§U §(X2Ö
6org.jabref.model.entry.identifier.DOI.getExternalURI()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§D §(R2g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§> §(A2Ç
3org.jabref.logic.net.URLDownload.getCookieFromUrl()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¶ ¶(,2z
+org.jabref.logic.net.URLDownload.asString()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java®5 ®(=2Ü
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java™0 ™(72m
java.util.regex.Matcher.find()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java´ ´( 2q
"java.util.regex.Matcher.group(int)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java≠* ≠(/2i
java.lang.String.isEmpty()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java≥ ≥(2i
java.util.Optional.empty()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¥ ¥(!2Ç
3org.jabref.logic.net.URLDownload.getCookieFromUrl()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∫ ∫($2z
+org.jabref.logic.net.URLDownload.asString()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaº' º(/2Ü
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaæ& æ(-2m
java.util.regex.Matcher.find()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaø ø(2g
java.util.Optional.of(T)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¬ ¬(2q
"java.util.regex.Matcher.group(int)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¬/ ¬(42i
java.util.Optional.empty()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaƒ ƒ(2â
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§. §(92ç
>org.jabref.logic.net.URLDownload.URLDownload(java.lang.String)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∏& ∏(12q
"java.net.URL.URL(java.lang.String)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¬# ¬(&2©
Zorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)!entryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaä ä($2©
Zorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)!entryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaè% è(*2ª
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlString@143.25:143.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaê ê(2í
Corg.jabref.logic.importer.fetcher.IEEE?DOCUMENT_PATTERN@55.33:55.49CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaë) ë(92ª
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlString@143.25:143.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaëB ë(K2ƒ
uorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?documentUrlMatcher@145.20:145.38CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaí í("2ƒ
uorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?documentUrlMatcher@145.20:145.38CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaì ì(12Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampString@140.15:140.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaî î(2ú
Morg.jabref.logic.importer.fetcher.IEEE?STAMP_BASE_STRING_DOCUMENT@53.32:53.58CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaî î(82∑
horg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?docId@147.23:147.28CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaî; î(@2è
@org.jabref.logic.importer.fetcher.IEEE?STAMP_PATTERN@54.33:54.46CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaò# ò(02ª
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlString@143.25:143.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaò9 ò(B2æ
oorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampMatcher@152.20:152.32CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaô ô(2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampString@140.15:140.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaõ õ(2æ
oorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampMatcher@152.20:152.32CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaõ õ(*2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampString@140.15:140.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java† †(2©
Zorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)!entryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java°  °(%2µ
forg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?doi@161.26:161.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢ ¢(2µ
forg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?doi@161.26:161.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢# ¢(&2ä
;org.jabref.logic.importer.fetcher.IEEE?IEEE_DOI@58.32:58.40CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢A ¢(I2µ
forg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?doi@161.26:161.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¢N ¢(Q2µ
forg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?doi@161.26:161.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§: §(=2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@164.28:164.39CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¶ ¶(2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@164.28:164.39CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java®) ®(42è
@org.jabref.logic.importer.fetcher.IEEE?STAMP_PATTERN@54.33:54.46CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java™" ™(/2¡
rorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?resolvedDOIPage@168.23:168.38CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java™8 ™(G2π
jorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?matcher@170.24:170.31CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java´ ´(2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampString@140.15:140.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java≠ ≠(2π
jorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?matcher@170.24:170.31CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java≠" ≠()2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampString@140.15:140.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java≥ ≥(2ä
;org.jabref.logic.importer.fetcher.IEEE?BASE_URL@59.32:59.40CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∏2 ∏(:2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampString@140.15:140.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∏= ∏(H2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@184.20:184.31CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∫ ∫(2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@184.20:184.31CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaº º(&2ç
>org.jabref.logic.importer.fetcher.IEEE?PDF_PATTERN@57.33:57.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaæ æ(%2ª
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?framePage@188.15:188.24CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaæ. æ(72π
jorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?matcher@190.16:190.23CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaø ø(2à
9org.jabref.logic.importer.fetcher.IEEE?LOGGER@51.32:51.38CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¡ ¡(2π
jorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?matcher@190.16:190.23CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java¬' ¬(.2å
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java°J °(T2™
Worg.jabref.logic.importer.FulltextFetcher.findFullText(org.jabref.model.entry.BibEntry)OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ â(%2Æ
Zorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ/ â(42ƒ
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampString@140.15:140.26DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaå å(2¬
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlString@143.25:143.34DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaè è("2À
uorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?documentUrlMatcher@145.20:145.38DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaë ë(&2æ
horg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?docId@147.23:147.28DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaì ì(2≈
oorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampMatcher@152.20:152.32DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaò ò( 2º
forg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?doi@161.26:161.29DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java° °(2ƒ
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@164.28:164.39DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§ §('2»
rorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?resolvedDOIPage@168.23:168.38DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java® ®(&2¿
jorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?matcher@170.24:170.31DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java™ ™(2ƒ
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@184.20:184.31DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∏ ∏(2¬
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?framePage@188.15:188.24DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaº º(2¿
jorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?matcher@190.16:190.23DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaæ æ(2h
java.util.OptionalRETURN_TYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ â(2k
java.net.URLRETURN_TYPE_ARGUMENTE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ â(ø
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampString@140.15:140.26VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaå å("
typeString"
isFinalfalse"l
declarationStringW<mark class="modifier"> </mark>String <mark class="class-field">stampString</mark> = ""*stampString2_
java.lang.StringTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaå å(£
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlString@143.25:143.34VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaè è(""
typeOptional<String>"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>Optional<String> <mark class="class-field">urlString</mark> = entry.getField(StandardField.URL)*	urlString2a
java.util.OptionalTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaè è(2h
java.lang.StringTYPE_ARGUMENTE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaè è(2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaè+ è(32©
Zorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)!entryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaè% è(*À
uorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?documentUrlMatcher@145.20:145.38VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaë ë(&"
typeMatcher"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Matcher <mark class="class-field">documentUrlMatcher</mark> = DOCUMENT_PATTERN.matcher(urlString.get())*documentUrlMatcher2f
java.util.regex.MatcherTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaë ë(2Ü
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaë: ë(A2g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaëL ë(O2í
Corg.jabref.logic.importer.fetcher.IEEE?DOCUMENT_PATTERN@55.33:55.49CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaë) ë(92ª
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlString@143.25:143.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaëB ë(KÄ
horg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?docId@147.23:147.28VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaì ì("
typeString"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>String <mark class="class-field">docId</mark> = documentUrlMatcher.group(1)*docId2_
java.lang.StringTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaì ì(2q
"java.util.regex.Matcher.group(int)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaì2 ì(72ƒ
uorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?documentUrlMatcher@145.20:145.38CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaì ì(1≤
oorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampMatcher@152.20:152.32VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaò ò( "
typeMatcher"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>Matcher <mark class="class-field">stampMatcher</mark> = STAMP_PATTERN.matcher(urlString.get())*stampMatcher2f
java.util.regex.MatcherTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaò ò(2Ü
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaò1 ò(82g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaòC ò(F2è
@org.jabref.logic.importer.fetcher.IEEE?STAMP_PATTERN@54.33:54.46CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaò# ò(02ª
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlString@143.25:143.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaò9 ò(BÉ

forg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?doi@161.26:161.29VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java° °("
typeOptional<DOI>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = entry.getField(StandardField.DOI).flatMap(DOI::parse)*doi2a
java.util.OptionalTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java° °(2}
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java° °(2º
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java°B °(I2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java°& °(.2©
Zorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)!entryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java°  °(%2å
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java°J °(Tï

norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@164.28:164.39VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§ §('"
typeURLDownload"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>URLDownload <mark class="class-field">urlDownload</mark> = new URLDownload(doi.get().getExternalURI().get().toURL())*urlDownload2o
 org.jabref.logic.net.URLDownloadTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§ §(2c
java.net.URI.toURL()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§[ §(`2g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§U §(X2Ö
6org.jabref.model.entry.identifier.DOI.getExternalURI()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§D §(R2g
java.util.Optional.get()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§> §(A2â
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§. §(92µ
forg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?doi@161.26:161.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java§: §(=ú
rorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?resolvedDOIPage@168.23:168.38VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java® ®(&"
typeString"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>String <mark class="class-field">resolvedDOIPage</mark> = urlDownload.asString()*resolvedDOIPage2_
java.lang.StringTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java® ®(2z
+org.jabref.logic.net.URLDownload.asString()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java®5 ®(=2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@164.28:164.39CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java®) ®(4¿
jorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?matcher@170.24:170.31VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java™ ™("
typeMatcher"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>Matcher <mark class="class-field">matcher</mark> = STAMP_PATTERN.matcher(resolvedDOIPage)*matcher2f
java.util.regex.MatcherTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java™ ™(2Ü
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java™0 ™(72è
@org.jabref.logic.importer.fetcher.IEEE?STAMP_PATTERN@54.33:54.46CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java™" ™(/2¡
rorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?resolvedDOIPage@168.23:168.38CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java™8 ™(G›
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@184.20:184.31VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∏ ∏("
typeURLDownload"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>URLDownload <mark class="class-field">urlDownload</mark> = new URLDownload(BASE_URL + stampString)*urlDownload2o
 org.jabref.logic.net.URLDownloadTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∏ ∏(2ç
>org.jabref.logic.net.URLDownload.URLDownload(java.lang.String)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∏& ∏(12ä
;org.jabref.logic.importer.fetcher.IEEE?BASE_URL@59.32:59.40CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∏2 ∏(:2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?stampString@140.15:140.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java∏= ∏(Hâ
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?framePage@188.15:188.24VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaº º("
typeString"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>String <mark class="class-field">framePage</mark> = urlDownload.asString()*	framePage2_
java.lang.StringTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaº º(2z
+org.jabref.logic.net.URLDownload.asString()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaº' º(/2Ω
norg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?urlDownload@184.20:184.31CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaº º(&∞
jorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?matcher@190.16:190.23VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaæ æ("
typeMatcher"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>Matcher <mark class="class-field">matcher</mark> = PDF_PATTERN.matcher(framePage)*matcher2f
java.util.regex.MatcherTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaæ æ(2Ü
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaæ& æ(-2ç
>org.jabref.logic.importer.fetcher.IEEE?PDF_PATTERN@57.33:57.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaæ æ(%2ª
lorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)?framePage@188.15:188.24CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaæ. æ(7Ó
Zorg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ/ â(4"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2n
org.jabref.model.entry.BibEntryTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ& â(.¨
6org.jabref.logic.importer.fetcher.IEEE.getTrustLevel()METHODE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java» »(#"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>TrustLevel <mark class="method">getTrustLevel</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
TrustLevel*getTrustLevel2å
9org.jabref.logic.importer.FulltextFetcher.getTrustLevel()OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java» »(#2Ç
,org.jabref.logic.importer.fetcher.TrustLevelRETURN_TYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java» »(üA
2org.jabref.logic.importer.fetcher.IEEE.getParser()METHODE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÕ Õ("
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Parser <mark class="method">getParser</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParser*	getParser2õ
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœ] œ(d2m
java.io.BufferedReader.lines()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœU œ(Z2ä
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœp œ(w2õ
Lorg.jabref.model.entry.BibEntry.hasField(org.jabref.model.entry.field.Field)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‹ ‹(&2m
java.util.Optional.isPresent()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‚ ‚($2ë
Bjava.util.Optional.filter(java.util.function.Predicate<? super T>)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java›F ›(L2õ
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java›) ›(12{
,java.lang.Integer.parseInt(java.lang.String)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaﬁ8 ﬁ(@2d
java.util.List.add(E)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÁ  Á(#2Ñ
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœ" œ(02è
@java.io.InputStreamReader.InputStreamReader(java.io.InputStream)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœ5 œ(F2n
java.util.ArrayList.ArrayList()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java“) “(42õ
Lorg.jabref.logic.importer.fetcher.IEEE.getParser()?inputStream@206.15:206.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœG œ(R2ò
Iorg.jabref.logic.importer.fetcher.IEEE.getParser()?response@207.19:207.27CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java–3 –(;2ö
Korg.jabref.logic.importer.fetcher.IEEE.getParser()?jsonObject@208.23:208.33CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java” ”(2ö
Korg.jabref.logic.importer.fetcher.IEEE.getParser()?jsonObject@208.23:208.33CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‘$ ‘(.2ë
Borg.jabref.logic.importer.fetcher.IEEE.getParser()?i@213.25:213.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java’  ’(!2ó
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?results@212.26:212.33CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java’$ ’(+2ë
Borg.jabref.logic.importer.fetcher.IEEE.getParser()?i@213.25:213.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java’6 ’(72ó
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?results@212.26:212.33CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java÷+ ÷(22ë
Borg.jabref.logic.importer.fetcher.IEEE.getParser()?i@213.25:213.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java÷A ÷(B2ô
Jorg.jabref.logic.importer.fetcher.IEEE.getParser()?jsonEntry@214.31:214.40CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java◊7 ◊(@2ô
Jorg.jabref.logic.importer.fetcher.IEEE?importFormatPreferences@63.42:63.65CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java◊B ◊(Y2ï
Forg.jabref.logic.importer.fetcher.IEEE.getParser()?entry@215.29:215.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‹ ‹(2ò
Iorg.jabref.logic.importer.fetcher.IEEE.getParser()?addEntry@216.28:216.36CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java› ›( 2ï
Forg.jabref.logic.importer.fetcher.IEEE.getParser()?entry@215.29:215.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java›# ›((2î
Eorg.jabref.logic.importer.fetcher.IEEE.getParser()?year@221.77:221.81CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaﬁA ﬁ(E2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‡$ ‡(/2ù
Norg.jabref.logic.importer.fetcher.IEEE.getParser()?yearAsInteger@222.32:222.45CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‡P ‡(]2ô
Jorg.jabref.logic.importer.fetcher.IEEE.getParser()?startYear@224.67:224.76CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‡a ‡(j2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java·, ·(72ù
Norg.jabref.logic.importer.fetcher.IEEE.getParser()?yearAsInteger@222.32:222.45CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java·T ·(a2ó
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?endYear@225.73:225.80CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java·e ·(l2ò
Iorg.jabref.logic.importer.fetcher.IEEE.getParser()?addEntry@216.28:216.36CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‰ ‰( 2ò
Iorg.jabref.logic.importer.fetcher.IEEE.getParser()?addEntry@216.28:216.36CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÊ Ê( 2ó
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?entries@210.27:210.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÁ Á(2ï
Forg.jabref.logic.importer.fetcher.IEEE.getParser()?entry@215.29:215.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÁ$ Á()2ó
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?entries@210.27:210.34CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÏ Ï(2ë
>org.jabref.logic.importer.SearchBasedParserFetcher.getParser()OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÕ Õ(2ü
Iorg.jabref.logic.importer.fetcher.IEEE.getParser()?response@207.19:207.27DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœ œ(2°
Korg.jabref.logic.importer.fetcher.IEEE.getParser()?jsonObject@208.23:208.33DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java– –(!2û
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?entries@210.27:210.34DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java“ “("2û
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?results@212.26:212.33DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‘ ‘(!2ò
Borg.jabref.logic.importer.fetcher.IEEE.getParser()?i@213.25:213.26DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java’ ’(2†
Jorg.jabref.logic.importer.fetcher.IEEE.getParser()?jsonEntry@214.31:214.40DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java÷ ÷((2ú
Forg.jabref.logic.importer.fetcher.IEEE.getParser()?entry@215.29:215.34DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java◊ ◊("2ü
Iorg.jabref.logic.importer.fetcher.IEEE.getParser()?addEntry@216.28:216.36DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÿ ÿ($2§
Norg.jabref.logic.importer.fetcher.IEEE.getParser()?yearAsInteger@222.32:222.45DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaﬁ  ﬁ(-2¢
Lorg.jabref.logic.importer.fetcher.IEEE.getParser()?inputStream@206.15:206.26DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaŒ Œ(2õ
Eorg.jabref.logic.importer.fetcher.IEEE.getParser()?year@221.77:221.81DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java›M ›(Q2†
Jorg.jabref.logic.importer.fetcher.IEEE.getParser()?startYear@224.67:224.76DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‡C ‡(L2û
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?endYear@225.73:225.80DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java·I ·(P2v
 org.jabref.logic.importer.ParserRETURN_TYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÕ Õ(À

Iorg.jabref.logic.importer.fetcher.IEEE.getParser()?response@207.19:207.27VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœ œ("
typeString"
isFinalfalse"Œ
declarationString∏<mark class="modifier"> </mark>String <mark class="class-field">response</mark> = new BufferedReader(new InputStreamReader(inputStream)).lines().collect(Collectors.joining(OS.NEWLINE))*response2_
java.lang.StringTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœ œ(2õ
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœ] œ(d2m
java.io.BufferedReader.lines()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœU œ(Z2ä
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœp œ(w2Ñ
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœ" œ(02è
@java.io.InputStreamReader.InputStreamReader(java.io.InputStream)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœ5 œ(F2õ
Lorg.jabref.logic.importer.fetcher.IEEE.getParser()?inputStream@206.15:206.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaœG œ(R‡
Korg.jabref.logic.importer.fetcher.IEEE.getParser()?jsonObject@208.23:208.33VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java– –(!"
type
JSONObject"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>JSONObject <mark class="class-field">jsonObject</mark> = new JSONObject(response)*
jsonObject2k
kong.unirest.json.JSONObjectTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java– –(2ò
Iorg.jabref.logic.importer.fetcher.IEEE.getParser()?response@207.19:207.27CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java–3 –(;ó
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?entries@210.27:210.34VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java“ “(""
typeList<BibEntry>"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = new ArrayList<>()*entries2]
java.util.ListTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java“ “(2w
org.jabref.model.entry.BibEntryTYPE_ARGUMENTE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java“ “(2n
java.util.ArrayList.ArrayList()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java“) “(4·
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?results@212.26:212.33VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‘ ‘(!"
type	JSONArray"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>JSONArray <mark class="class-field">results</mark> = jsonObject.getJSONArray("articles")*results2j
kong.unirest.json.JSONArrayTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‘ ‘(2ö
Korg.jabref.logic.importer.fetcher.IEEE.getParser()?jsonObject@208.23:208.33CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‘$ ‘(.â
Borg.jabref.logic.importer.fetcher.IEEE.getParser()?i@213.25:213.26VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java’ ’("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2R
intTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java’ ’(
Jorg.jabref.logic.importer.fetcher.IEEE.getParser()?jsonEntry@214.31:214.40VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java÷ ÷(("
type
JSONObject"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>JSONObject <mark class="class-field">jsonEntry</mark> = results.getJSONObject(i)*	jsonEntry2k
kong.unirest.json.JSONObjectTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java÷ ÷(2ó
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?results@212.26:212.33CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java÷+ ÷(22ë
Borg.jabref.logic.importer.fetcher.IEEE.getParser()?i@213.25:213.26CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java÷A ÷(B∑
Forg.jabref.logic.importer.fetcher.IEEE.getParser()?entry@215.29:215.34VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java◊ ◊(""
typeBibEntry"
isFinalfalse"»
declarationString≤<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parseJsonResponse(jsonEntry, importFormatPreferences.bibEntryPreferences().getKeywordSeparator())*entry2n
org.jabref.model.entry.BibEntryTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java◊ ◊(2ô
Jorg.jabref.logic.importer.fetcher.IEEE.getParser()?jsonEntry@214.31:214.40CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java◊7 ◊(@2ô
Jorg.jabref.logic.importer.fetcher.IEEE?importFormatPreferences@63.42:63.65CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java◊B ◊(Yß
Iorg.jabref.logic.importer.fetcher.IEEE.getParser()?addEntry@216.28:216.36VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÿ ÿ($"
typeboolean"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">addEntry</mark>*addEntry2V
booleanTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÿ ÿ(ÿ
Norg.jabref.logic.importer.fetcher.IEEE.getParser()?yearAsInteger@222.32:222.45VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaﬁ  ﬁ(-"
typeint"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">yearAsInteger</mark> = Integer.parseInt(year)*yearAsInteger2R
intTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaﬁ ﬁ(2{
,java.lang.Integer.parseInt(java.lang.String)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaﬁ8 ﬁ(@2î
Eorg.jabref.logic.importer.fetcher.IEEE.getParser()?year@221.77:221.81CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaﬁA ﬁ(EÒ
Lorg.jabref.logic.importer.fetcher.IEEE.getParser()?inputStream@206.15:206.26VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaŒ Œ("
type"
isFinalfalse"!
declarationString inputStream*inputStream2TYPE‹
Eorg.jabref.logic.importer.fetcher.IEEE.getParser()?year@221.77:221.81VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java›M ›(Q"
type"
isFinalfalse"
declarationString year*year2TYPEÎ
Jorg.jabref.logic.importer.fetcher.IEEE.getParser()?startYear@224.67:224.76VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java‡C ‡(L"
type"
isFinalfalse"
declarationString
 startYear*	startYear2TYPEÂ
Horg.jabref.logic.importer.fetcher.IEEE.getParser()?endYear@225.73:225.80VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java·I ·(P"
type"
isFinalfalse"
declarationString endYear*endYear2TYPEÇ
0org.jabref.logic.importer.fetcher.IEEE.getName()METHODE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÒ Ò("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2é
?org.jabref.logic.importer.fetcher.IEEE?FETCHER_NAME@49.31:49.43CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÚ Ú(2Å
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÒ Ò(2Å
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÒ Ò(2Å
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÒ Ò(2f
java.lang.StringRETURN_TYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÒ Ò(í	
4org.jabref.logic.importer.fetcher.IEEE.getHelpPage()METHODE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˆ ˆ()"
isFinalfalse"´
declarationStringï<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;HelpFile&gt; <mark class="method">getHelpPage</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<HelpFile>*getHelpPage2g
java.util.Optional.of(T)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˜ ˜(2Ö
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˆ ˆ()2Ö
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˆ ˆ()2Ö
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˆ ˆ()2h
java.util.OptionalRETURN_TYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˆ ˆ(2}
org.jabref.logic.help.HelpFileRETURN_TYPE_ARGUMENTE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˆ ˆ(Î
2org.jabref.logic.importer.fetcher.IEEE.getApiKey()METHODE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˙ ˙("
isFinalfalse"i
declarationStringT<mark class="modifier">private </mark>String <mark class="method">getApiKey</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*	getApiKey2k
java.util.Optional.orElse(T)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˚8 ˚(>2ò
Iorg.jabref.logic.importer.ImporterPreferences.getApiKey(java.lang.String)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˚# ˚(,2
0org.jabref.logic.importer.fetcher.IEEE.getName()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˚- ˚(42ï
Forg.jabref.logic.importer.fetcher.IEEE?importerPreferences@64.38:64.57CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˚ ˚("2â
:org.jabref.logic.importer.fetcher.IEEE?API_KEY@60.32:60.39CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˚? ˚(F2f
java.lang.StringRETURN_TYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java˙ ˙(ß
3org.jabref.logic.importer.fetcher.IEEE.getTestUrl()METHODE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˇ ˇ("
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getTestUrl</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*
getTestUrl2ö
Korg.jabref.logic.importer.fetcher.IEEE?TEST_URL_WITHOUT_API_KEY@61.32:61.56CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÄ Ä('2ò
Eorg.jabref.logic.importer.fetcher.CustomizableKeyFetcher.getTestUrl()OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˇ ˇ(2f
java.lang.StringRETURN_TYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaˇ ˇ(∆9
worg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)METHODE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ Ñ("
isFinalfalse"è
declarationString˘<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URL <mark class="method">getURLForQuery</mark>(QueryNode luceneQuery<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> pageNumber)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURL*getURLForQuery2Å
2org.jabref.logic.importer.fetcher.IEEE.getApiKey()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaä* ä(32i
java.lang.String.isBlank()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaã ã(%2l
java.lang.String.valueOf(int)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaé6 é(=2é
?org.jabref.logic.importer.PagedSearchBasedFetcher.getPageSize()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaé> é(I2l
java.lang.String.valueOf(int)CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaù7 ù(>2é
?org.jabref.logic.importer.PagedSearchBasedFetcher.getPageSize()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaù? ù(J2©
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.IEEEQueryTransformer()CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaá á(.2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaá á(2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaà" à(-2”
Éorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQueryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaàC à(N2‡
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaä ä(2Ê
ñorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?transformedQuery@264.15:264.31CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaã ã(2‡
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaå å(2Ê
ñorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?transformedQuery@264.15:264.31CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaå1 å(A2‡
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaé é(2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaê ê(2‡
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaë ë(2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaë9 ë(D2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaì ì(2‡
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaî î(2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaîA î(L2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javañ ñ(2‡
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaó ó(2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaó? ó(J2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaô ô(2‡
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaö ö(2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaö6 ö(A2‡
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaù ù(2“
Çorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumberCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaùO ù(Y2‡
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaü ü(2‹
àorg.jabref.logic.importer.PagedSearchBasedParserFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)OVERRIDEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ Ñ(2ÿ
Éorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQuery	PARAMETERE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ( Ñ(32◊
Çorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumber	PARAMETERE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ9 Ñ(C2Ì
ñorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?transformedQuery@264.15:264.31DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaà à(2Á
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29DECLARATIONE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ â(2b
java.net.URLRETURN_TYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ Ñ(ê
ñorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?transformedQuery@264.15:264.31VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaà à("
typeString"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>String <mark class="class-field">transformedQuery</mark> = transformer.transformLuceneQuery(luceneQuery).orElse("")*transformedQuery2_
java.lang.StringTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaà à(2ç
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44CALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaà" à(-2”
Éorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQueryCALLE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaàC à(N∆
êorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@265.19:265.29VARIABLEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ â("
type
URIBuilder"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>URIBuilder <mark class="class-field">uriBuilder</mark> = new URIBuilder("https://ieeexploreapi.ieee.org/api/v1/search/articles")*
uriBuilder2v
'org.apache.http.client.utils.URIBuilderTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaâ â(√
Éorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQuery	PARAMETERE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ( Ñ(3"
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2ä
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ Ñ('ô
Çorg.jabref.logic.importer.fetcher.IEEE.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumber	PARAMETERE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ9 Ñ(C"
typeint"
isFinalfalse"A
declarationString,<mark class="modifier">int</mark> pageNumber*
pageNumber2R
intTYPEE
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaÑ5 Ñ(8ä
?org.jabref.logic.importer.fetcher.IEEE?FETCHER_NAME@49.31:49.43VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java1 1(+"
isFinaltrue"
typeString"»
declarationString≤<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FETCHER_NAME</mark> = "IEEEXplore";"
isStatictrue"
accesspublic*FETCHER_NAME2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java1 1(ë
9org.jabref.logic.importer.fetcher.IEEE?LOGGER@51.32:51.38VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java3  3(&"
isFinaltrue"
typeLogger"⁄
declarationStringƒ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(IEEE.class);"
isStatictrue"
accessprivate*LOGGER2]
org.slf4j.LoggerTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java3 3( 
Morg.jabref.logic.importer.fetcher.IEEE?STAMP_BASE_STRING_DOCUMENT@53.32:53.58VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java5  5(:"
isFinaltrue"
typeString"Î
declarationString’<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">STAMP_BASE_STRING_DOCUMENT</mark> = "/stamp/stamp.jsp?tp=&arnumber=";"
isStatictrue"
accessprivate*STAMP_BASE_STRING_DOCUMENT2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java5 5(À
@org.jabref.logic.importer.fetcher.IEEE?STAMP_PATTERN@54.33:54.46VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java6! 6(."
isFinaltrue"
typePattern"˛
declarationStringË<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">STAMP_PATTERN</mark> = Pattern.compile("(/stamp/stamp.jsp\\?t?p?=?&?arnumber=[0-9]+)");"
isStatictrue"
accessprivate*STAMP_PATTERN2d
java.util.regex.PatternTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java6 6( 2~
1java.util.regex.Pattern.compile(java.lang.String)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java69 6(@∫
Corg.jabref.logic.importer.fetcher.IEEE?DOCUMENT_PATTERN@55.33:55.49VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java7! 7(1"
isFinaltrue"
typePattern"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">DOCUMENT_PATTERN</mark> = Pattern.compile("document/([0-9]+)/");"
isStatictrue"
accessprivate*DOCUMENT_PATTERN2d
java.util.regex.PatternTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java7 7( 2~
1java.util.regex.Pattern.compile(java.lang.String)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java7< 7(C“
>org.jabref.logic.importer.fetcher.IEEE?PDF_PATTERN@57.33:57.44VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java9! 9(,"
isFinaltrue"
typePattern"â
declarationStringÛ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">PDF_PATTERN</mark> = Pattern.compile("\"(https://ieeexplore.ieee.org/ielx[0-9/]+\\.pdf[^\"]+)\"");"
isStatictrue"
accessprivate*PDF_PATTERN2d
java.util.regex.PatternTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java9 9( 2~
1java.util.regex.Pattern.compile(java.lang.String)CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java97 9(>˝
;org.jabref.logic.importer.fetcher.IEEE?IEEE_DOI@58.32:58.40VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java:  :(("
isFinaltrue"
typeString"¬
declarationString¨<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">IEEE_DOI</mark> = "10.1109";"
isStatictrue"
accessprivate*IEEE_DOI2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java: :(ë
;org.jabref.logic.importer.fetcher.IEEE?BASE_URL@59.32:59.40VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java;  ;(("
isFinaltrue"
typeString"÷
declarationString¿<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">BASE_URL</mark> = "https://ieeexplore.ieee.org";"
isStatictrue"
accessprivate*BASE_URL2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java; ;(Ö
:org.jabref.logic.importer.fetcher.IEEE?API_KEY@60.32:60.39VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java<  <('"
isFinaltrue"
typeString"“
declarationStringº<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">API_KEY</mark> = new BuildInfo().ieeeAPIKey;"
isStatictrue"
accessprivate*API_KEY2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java< <(2x
+org.jabref.logic.util.BuildInfo.BuildInfo()CALLC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java<. <(7Ò
Korg.jabref.logic.importer.fetcher.IEEE?TEST_URL_WITHOUT_API_KEY@61.32:61.56VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java=  =(8"
isFinaltrue"
typeString"ñ
declarationStringÄ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">TEST_URL_WITHOUT_API_KEY</mark> = "https://ieeexploreapi.ieee.org/api/v1/search/articles?max_records=0&apikey=";"
isStatictrue"
accessprivate*TEST_URL_WITHOUT_API_KEY2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java= =(¢
Jorg.jabref.logic.importer.fetcher.IEEE?importFormatPreferences@63.42:63.65VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java?* ?(A"
isFinaltrue"
typeImportFormatPreferences"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">final </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2d
ImportFormatPreferencesTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java? ?()§
Forg.jabref.logic.importer.fetcher.IEEE?importerPreferences@64.38:64.57VALUEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java@& @(9"
isFinaltrue"
typeImporterPreferences"®
declarationStringí<mark class="modifier">private </mark><mark class="modifier">final </mark>ImporterPreferences <mark class="class-field">importerPreferences</mark>"
isStaticfalse"
accessprivate*importerPreferences2z
-org.jabref.logic.importer.ImporterPreferencesTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.java@ @(%É
>org.jabref.logic.importer.fetcher.IEEE?transformer@66.33:66.44VARIABLEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaB! B(,"
isFinalfalse"
typeIEEEQueryTransformer"|
declarationStringg<mark class="modifier">private </mark>IEEEQueryTransformer <mark class="class-field">transformer</mark>"
isStaticfalse"
accessprivate*transformer2ê
Corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTYPEC
9src\main\java\org\jabref\logic\importer\fetcher\IEEE.javaB B( 