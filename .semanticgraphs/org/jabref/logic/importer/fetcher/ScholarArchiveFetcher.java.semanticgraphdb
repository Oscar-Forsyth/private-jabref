
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÚ
7org.jabref.logic.importer.fetcher.ScholarArchiveFetcherCLASST
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java   ("",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"æ
declarationString®<mark class="modifier">public </mark><mark class="modifier">class </mark>ScholarArchiveFetcher<mark class="modifier"><br>implements </mark>PagedSearchBasedParserFetcher"
accesspublic*ScholarArchiveFetcher2Ó
àorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java0 0(2π
Torg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java< <(%2®
Corg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaH H(2¶
Aorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getName()DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaZ Z(2Ã
gorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java^ ^(&2µ
Porg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?FETCHER_NAME@34.31:34.43DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java" "(+2Ø
Jorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?LOGGER@36.32:36.38DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java$  $(&2∞
Korg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?API_URL@38.32:38.39DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java&  &('2ó
7org.jabref.logic.importer.PagedSearchBasedParserFetcherEXTENDT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java .  (Kì(
àorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)METHODT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java0 0("
isFinalfalse"è
declarationString˘<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URL <mark class="method">getURLForQuery</mark>(QueryNode luceneQuery<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> pageNumber)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURL*getURLForQuery2{
java.lang.String.valueOf(int)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java3/ 3(62ù
?org.jabref.logic.importer.PagedSearchBasedFetcher.getPageSize()CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java37 3(B2{
java.lang.String.valueOf(int)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java4/ 4(62ù
?org.jabref.logic.importer.PagedSearchBasedFetcher.getPageSize()CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java47 4(B2Ã
norg.jabref.logic.importer.fetcher.transformers.ScholarArchiveQueryTransformer.ScholarArchiveQueryTransformer()CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java2) 2(G2©
Korg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?API_URL@38.32:38.39CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java1/ 1(62˛
üorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@49.19:49.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java2 2(2Û
îorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQueryCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java2_ 2(j2˛
üorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@49.19:49.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java3 3(2Ú
ìorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumberCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java3G 3(Q2˛
üorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@49.19:49.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java4 4(2˛
üorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@49.19:49.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java5 5(2®
Jorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?LOGGER@36.32:36.38CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java7 7(2˛
üorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@49.19:49.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java70 7(:2˛
üorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@49.19:49.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java8 8(2Î
àorg.jabref.logic.importer.PagedSearchBasedParserFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)OVERRIDET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java0 0(2¯
îorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQuery	PARAMETERT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java0( 0(32˜
ìorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumber	PARAMETERT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java09 0(C2Ö
üorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@49.19:49.29DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java1 1(2q
java.net.URLRETURN_TYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java0 0(Ô
üorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@49.19:49.29VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java1 1("
type
URIBuilder"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>URIBuilder <mark class="class-field">uriBuilder</mark> = new URIBuilder(API_URL)*
uriBuilder2Ö
'org.apache.http.client.utils.URIBuilderTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java1 1(2©
Korg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?API_URL@38.32:38.39CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java1/ 1(6Ú
îorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQuery	PARAMETERT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java0( 0(3"
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2ô
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java0 0('»
ìorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumber	PARAMETERT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java09 0(C"
typeint"
isFinalfalse"A
declarationString,<mark class="modifier">int</mark> pageNumber*
pageNumber2a
intTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java05 0(8õ
Torg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)METHODT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java< <(%"
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URLDownload <mark class="method">getUrlDownload</mark>(URL url)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURLDownload*getUrlDownload2ò
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java=# =(.2∂
Xorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)!urlCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java=/ =(22«
iorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)?download@61.20:61.28CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java> >(2«
iorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)?download@61.20:61.28CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java? ?(2£
Aorg.jabref.logic.importer.WebFetcher.getUrlDownload(java.net.URL)OVERRIDET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java< <(%2£
Aorg.jabref.logic.importer.WebFetcher.getUrlDownload(java.net.URL)OVERRIDET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java< <(%2ª
Xorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)!url	PARAMETERT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java<* <(-2Œ
iorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)?download@61.20:61.28DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java= =(2Ö
 org.jabref.logic.net.URLDownloadRETURN_TYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java< <(”
iorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)?download@61.20:61.28VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java= =("
typeURLDownload"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>URLDownload <mark class="class-field">download</mark> = new URLDownload(url)*download2~
 org.jabref.logic.net.URLDownloadTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java= =(2ò
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java=# =(.2∂
Xorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)!urlCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java=/ =(2È
Xorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getUrlDownload(java.net.URL)!url	PARAMETERT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java<* <(-"
typeURL"
isFinalfalse"
declarationStringURL url*url2j
java.net.URLTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java<& <()É&
Corg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()METHODT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaH H("
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Parser <mark class="method">getParser</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParser*	getParser2©
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaJ- J(92≈
gorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaP% P(62s
java.util.List.add(E)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaQ Q(2}
java.util.ArrayList.ArrayList()CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaK) K(42π
[org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?inputStream@73.15:73.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaJ: J(E2∂
Xorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?response@74.23:74.31CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaL L(2∂
Xorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?response@74.23:74.31CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaM$ M(,2Ø
Qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?i@78.25:78.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaN  N(!2µ
Worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?results@77.26:77.33CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaN$ N(+2Ø
Qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?i@78.25:78.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaN6 N(72µ
Worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?results@77.26:77.33CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaO+ O(22Ø
Qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?i@78.25:78.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaOA O(B2∑
Yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?jsonEntry@79.31:79.40CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaP7 P(@2µ
Worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?entries@75.27:75.34CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaQ Q(2≥
Uorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?entry@80.29:80.34CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaQ  Q(%2µ
Worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?entries@75.27:75.34CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaU U(2†
>org.jabref.logic.importer.SearchBasedParserFetcher.getParser()OVERRIDET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaH H(2Ω
Xorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?response@74.23:74.31DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaJ J(2º
Worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?entries@75.27:75.34DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaK K("2º
Worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?results@77.26:77.33DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaM M(!2∂
Qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?i@78.25:78.26DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaN N(2æ
Yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?jsonEntry@79.31:79.40DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaO O((2∫
Uorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?entry@80.29:80.34DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaP P("2¿
[org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?inputStream@73.15:73.26DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaI I(2Ö
 org.jabref.logic.importer.ParserRETURN_TYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaH H(‡
Xorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?response@74.23:74.31VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaJ J("
type
JSONObject"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>JSONObject <mark class="class-field">response</mark> = JsonReader.toJsonObject(inputStream)*response2z
kong.unirest.json.JSONObjectTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaJ J(2©
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaJ- J(92π
[org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?inputStream@73.15:73.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaJ: J(E„
Worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?entries@75.27:75.34VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaK K(""
typeList<BibEntry>"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = new ArrayList<>()*entries2l
java.util.ListTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaK K(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaK K(2}
java.util.ArrayList.ArrayList()CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaK) K(4ß
Worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?results@77.26:77.33VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaM M(!"
type	JSONArray"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>JSONArray <mark class="class-field">results</mark> = response.getJSONArray("results")*results2y
kong.unirest.json.JSONArrayTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaM M(2∂
Xorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?response@74.23:74.31CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaM$ M(,∂
Qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?i@78.25:78.26VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaN N("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2a
intTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaN N(Ÿ
Yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?jsonEntry@79.31:79.40VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaO O(("
type
JSONObject"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>JSONObject <mark class="class-field">jsonEntry</mark> = results.getJSONObject(i)*	jsonEntry2z
kong.unirest.json.JSONObjectTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaO O(2µ
Worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?results@77.26:77.33CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaO+ O(22Ø
Qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?i@78.25:78.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaOA O(BË
Uorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?entry@80.29:80.34VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaP P(""
typeBibEntry"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parseJSONtoBibtex(jsonEntry)*entry2}
org.jabref.model.entry.BibEntryTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaP P(2≈
gorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaP% P(62∑
Yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?jsonEntry@79.31:79.40CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaP7 P(@è
[org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getParser()?inputStream@73.15:73.26VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaI I("
type"
isFinalfalse"!
declarationString inputStream*inputStream2TYPEÎ
Aorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.getName()METHODT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaZ Z("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2Æ
Porg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?FETCHER_NAME@34.31:34.43CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java[ [(2ê
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaZ Z(2ê
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaZ Z(2u
java.lang.StringRETURN_TYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaZ Z(∆ß
gorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)METHODT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java^ ^(&"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier">private </mark>BibEntry <mark class="method">parseJSONtoBibtex</mark>(JSONObject jsonEntry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibEntry*parseJSONtoBibtex2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javan n(2è
1java.lang.String.contains(java.lang.CharSequence)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javao# o(+2|
java.lang.String.toLowerCase()CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javao o( 2è
1java.lang.String.contains(java.lang.CharSequence)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaq* q(22|
java.lang.String.toLowerCase()CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaq q('2≠
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javat t(2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java (2æ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÄ Ä(2æ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÉ É(2ô
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaå6 å(;2√
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaåC å(G2æ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaç ç(2•
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaçC ç(]2æ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javañ ñ(2√
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javañ: ñ(>2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java`! `()2
java.util.ArrayList.ArrayList()CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaà. à(92
java.util.ArrayList.ArrayList()CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaí, í(72œ
qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)!jsonEntryCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javab  b()2œ
qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)!jsonEntryCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javad" d(+2›
org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?abstracts@100.22:100.31CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javae6 e(?2⁄
|org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?object@103.49:103.55CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javag; g(A2œ
qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)!jsonEntryCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaj- j(62‹
~org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?fullText@106.86:106.94CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javajb j(j2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javam m( 2◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javan n(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?type@109.19:109.23CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javan/ n(32ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?type@109.19:109.23CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javao o(2€
}org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entryType@97.22:97.31CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javap p(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?type@109.19:109.23CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaq q(2€
}org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entryType@97.22:97.31CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javar r(2◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javat t(2€
}org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entryType@97.22:97.31CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javat t(#2◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javav v(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javav0 v(62◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaw w(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaw2 w(82◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javax x(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javax. x(42◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javay y(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javay0 y(62◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaz z(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaz3 z(92◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java{ {(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java{4 {(:2◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java} }(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java}> }(D2◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java~ ~(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java~@ ~(F2◊
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java (2‚
Éorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?foundAbstract@101.19:101.32CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java3 (@2Ÿ
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÄ Ä(2Ÿ
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?url@106.19:106.22CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÄ. Ä(12⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÇ  Ç(&2Ÿ
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÉ É(2·
Äorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?dateString@130.19:130.29CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÉ/ É(92⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÜ Ü(2⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaá$ á(*2◊
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@137.25:137.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaâ  â(!2›
}org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?authors@135.26:135.33CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaâ$ â(+2◊
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@137.25:137.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaâ6 â(72·
Äorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?authorList@136.29:136.39CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaä ä(2›
}org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?authors@135.26:135.33CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaä# ä(*2◊
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@137.25:137.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaä5 ä(62·
Äorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?authorList@136.29:136.39CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaåQ å([2Ÿ
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaç ç(2‰
Éorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?parsedAuthors@140.27:140.40CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaç5 ç(B2⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaê ê(2⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaë! ë('2◊
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@147.25:147.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaì  ì(!2⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?issn@145.26:145.30CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaì$ ì((2◊
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@147.25:147.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaì3 ì(42ﬁ
~org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?issnList@146.29:146.37CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaî î(2⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?issn@145.26:145.30CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaî! î(%2◊
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@147.25:147.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaî0 î(12Ÿ
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javañ ñ(2ﬁ
~org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?issnList@146.29:146.37CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javañD ñ(L2Ÿ
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaò ò(2ﬂ
org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?exception@153.31:153.40CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaöS ö(\2‘
qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)!jsonEntry	PARAMETERT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java^2 ^(;2ﬁ
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java` `(2‚
}org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entryType@97.22:97.31DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaa a(2ﬂ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javab b(2‰
org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?abstracts@100.22:100.31DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javad d(2È
Éorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?foundAbstract@101.19:101.32DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javae e( 2ﬁ
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?url@106.19:106.22DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaj j(2ﬂ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?type@109.19:109.23DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javam m(2Ë
Äorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?dateString@130.19:130.29DECLARATIONV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÇ Ç(2‰
}org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?authors@135.26:135.33DECLARATIONV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaá á(!2Ë
Äorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?authorList@136.29:136.39DECLARATIONV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaà à('2ﬁ
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@137.25:137.26DECLARATIONV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaâ â(2Î
Éorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?parsedAuthors@140.27:140.40DECLARATIONV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaå å((2·
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?issn@145.26:145.30DECLARATIONV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaë ë(2Â
~org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?issnList@146.29:146.37DECLARATIONV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaí í(%2ﬁ
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@147.25:147.26DECLARATIONV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaì ì(2·
|org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?object@103.49:103.55DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javag1 g(72„
~org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?fullText@106.86:106.94DECLARATIONT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javajV j(^2Ê
org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?exception@153.31:153.40DECLARATIONV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaô ô((2Ñ
org.jabref.model.entry.BibEntryRETURN_TYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java^ ^(Ü
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entry@96.21:96.26VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java` `("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2}
org.jabref.model.entry.BibEntryTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java` `(2à
*org.jabref.model.entry.BibEntry.BibEntry()CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java`! `()¢
}org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?entryType@97.22:97.31VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaa a("
type	EntryType"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>EntryType <mark class="class-field">entryType</mark> = StandardEntryType.InCollection*	entryType2Ñ
&org.jabref.model.entry.types.EntryTypeTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaa a(Â
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javab b("
type
JSONObject"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>JSONObject <mark class="class-field">biblio</mark> = jsonEntry.optJSONObject("biblio")*biblio2z
kong.unirest.json.JSONObjectTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javab b(2œ
qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)!jsonEntryCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javab  b()Ô
org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?abstracts@100.22:100.31VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javad d("
type	JSONArray"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>JSONArray <mark class="class-field">abstracts</mark> = jsonEntry.getJSONArray("abstracts")*	abstracts2y
kong.unirest.json.JSONArrayTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javad d(2œ
qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)!jsonEntryCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javad" d(+º
Éorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?foundAbstract@101.19:101.32VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javae e( "
typeString"
isFinalfalse"ı
declarationStringﬂ<mark class="modifier"> </mark>String <mark class="class-field">foundAbstract</mark> = IntStream.range(0, abstracts.length()).mapToObj(abstracts::getJSONObject).map(object -> object.optString("body")).findFirst().orElse("")*foundAbstract2n
java.lang.StringTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javae e(2›
org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?abstracts@100.22:100.31CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javae6 e(?2⁄
|org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?object@103.49:103.55CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javag; g(A˛
yorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?url@106.19:106.22VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaj j("
typeString"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>String <mark class="class-field">url</mark> = Optional.ofNullable(jsonEntry.optJSONObject("fulltext")).map(fullText -> fullText.optString("access_url")).orElse("")*url2n
java.lang.StringTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaj j(2œ
qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)!jsonEntryCALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaj- j(62‹
~org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?fullText@106.86:106.94CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javajb j(j’
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?type@109.19:109.23VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javam m("
typeString"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>String <mark class="class-field">type</mark> = biblio.optString("release_type")*type2n
java.lang.StringTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javam m(2ÿ
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javam m( Ê
Äorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?dateString@130.19:130.29VARIABLEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÇ Ç("
typeString"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>String <mark class="class-field">dateString</mark> = biblio.optString("date")*
dateString2p
java.lang.StringTYPEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÇ Ç(2⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaÇ  Ç(&˘
}org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?authors@135.26:135.33VARIABLEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaá á(!"
type	JSONArray"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>JSONArray <mark class="class-field">authors</mark> = biblio.getJSONArray("contrib_names")*authors2{
kong.unirest.json.JSONArrayTYPEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaá á(2⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaá$ á(*à
Äorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?authorList@136.29:136.39VARIABLEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaà à('"
typeList<String>"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>List<String> <mark class="class-field">authorList</mark> = new ArrayList<>()*
authorList2n
java.util.ListTYPEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaà à(2y
java.lang.StringTYPE_ARGUMENTV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaà à(2
java.util.ArrayList.ArrayList()CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaà. à(9‡
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@137.25:137.26VARIABLEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaâ â("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2c
intTYPEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaâ â(´	
Éorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?parsedAuthors@140.27:140.40VARIABLEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaå å(("
type
AuthorList"
isFinalfalse"¡
declarationString´<mark class="modifier"> </mark>AuthorList <mark class="class-field">parsedAuthors</mark> = AuthorList.parse(String.join(" and "<mark class="modifier">,</mark> authorList))*parsedAuthors2Å
!org.jabref.model.entry.AuthorListTYPEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaå å(2ô
9org.jabref.model.entry.AuthorList.parse(java.lang.String)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaå6 å(;2√
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaåC å(G2·
Äorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?authorList@136.29:136.39CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaåQ å([Ë
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?issn@145.26:145.30VARIABLEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaë ë("
type	JSONArray"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>JSONArray <mark class="class-field">issn</mark> = biblio.getJSONArray("issns")*issn2{
kong.unirest.json.JSONArrayTYPEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaë ë(2⁄
zorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?biblio@98.23:98.29CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaë! ë('Ä
~org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?issnList@146.29:146.37VARIABLEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaí í(%"
typeList<String>"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>List<String> <mark class="class-field">issnList</mark> = new ArrayList<>()*issnList2n
java.util.ListTYPEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaí í(2y
java.lang.StringTYPE_ARGUMENTV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaí í(2
java.util.ArrayList.ArrayList()CALLV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaí, í(7‡
worg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?i@147.25:147.26VARIABLEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaì ì("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2c
intTYPEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaì ì(¨
qorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)!jsonEntry	PARAMETERT
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java^2 ^(;"
type
JSONObject"
isFinalfalse")
declarationStringJSONObject jsonEntry*	jsonEntry2z
kong.unirest.json.JSONObjectTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java^' ^(1¶
|org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?object@103.49:103.55VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javag1 g(7"
type"
isFinalfalse"
declarationString object*object2TYPE¨
~org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?fullText@106.86:106.94VARIABLET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javajV j(^"
type"
isFinalfalse"
declarationString	 fullText*fullText2TYPE∆
org.jabref.logic.importer.fetcher.ScholarArchiveFetcher.parseJSONtoBibtex(kong.unirest.json.JSONObject)?exception@153.31:153.40VARIABLEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaô ô(("
typeJSONException"
isFinalfalse",
declarationStringJSONException exception*	exception2
kong.unirest.json.JSONExceptionTYPEV
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.javaô ô(¡
Porg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?FETCHER_NAME@34.31:34.43VALUET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java" "(+"
isFinaltrue"
typeString"Ã
declarationString∂<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FETCHER_NAME</mark> = "ScholarArchive";"
isStatictrue"
accesspublic*FETCHER_NAME2n
java.lang.StringTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java" "(’
Jorg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?LOGGER@36.32:36.38VALUET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java$  $(&"
isFinaltrue"
typeLogger"Î
declarationString’<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(ScholarArchiveFetcher.class);"
isStatictrue"
accessprivate*LOGGER2n
org.slf4j.LoggerTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java$ $(»
Korg.jabref.logic.importer.fetcher.ScholarArchiveFetcher?API_URL@38.32:38.39VALUET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java&  &('"
isFinaltrue"
typeString"‹
declarationString∆<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">API_URL</mark> = "https://scholar.archive.org/search";"
isStatictrue"
accessprivate*API_URL2n
java.lang.StringTYPET
Jsrc\main\java\org\jabref\logic\importer\fetcher\ScholarArchiveFetcher.java& &(