
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java∞
,org.jabref.logic.importer.fetcher.ZbMATHTestCLASSI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"ì
declarationString~<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>ZbMATHTest"
accesspackage_private*
ZbMATHTest2é
4org.jabref.logic.importer.fetcher.ZbMATHTest.setUp()DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java	 (2†
Forg.jabref.logic.importer.fetcher.ZbMATHTest.searchByQueryFindsEntry()DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java3	 3( 2ù
Corg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdFindsEntry()DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java9	 9(2†
Forg.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java?	 ?( 2¶
Lorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaI	 I(&2§
Jorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaS	 S($2ö
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (2°
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (#1
4org.jabref.logic.importer.fetcher.ZbMATHTest.setUp()METHODI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java	 ("
isFinalfalse"¯
declarationString‚<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2¢
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java" "(2ì
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java# #(%2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java$ $(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java% %(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java& &(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java' '(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java( ((2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java) )(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java* *(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java+ +(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java, ,(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java- -(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java. .(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java/ /(2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java! !(%2õ
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java/$ /(02´
Xorg.jabref.logic.importer.fetcher.ZbMATHTest.setUp()?importFormatPreferences@28.32:28.55CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java ($2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (2´
Xorg.jabref.logic.importer.fetcher.ZbMATHTest.setUp()?importFormatPreferences@28.32:28.55CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (42ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java! !(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java" "(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java# #(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java$ $(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java% %(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java& &(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java' '(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java( ((2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java) )(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java* *(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java+ +(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java, ,(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java- -(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java. .(2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java/ /(2≤
Xorg.jabref.logic.importer.fetcher.ZbMATHTest.setUp()?importFormatPreferences@28.32:28.55DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java  (72^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (±
Xorg.jabref.logic.importer.fetcher.ZbMATHTest.setUp()?importFormatPreferences@28.32:28.55VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java  (7"
typeImportFormatPreferences"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark> = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS)*importFormatPreferences2j
ImportFormatPreferencesTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (√
Forg.jabref.logic.importer.fetcher.ZbMATHTest.searchByQueryFindsEntry()METHODI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java3	 3( "
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByQueryFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByQueryFindsEntry2ü
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java40 4(=2y
&java.util.Collections.singletonList(T)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java5! 5(.2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java4( 4(/2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java5/ 5(=2¥
aorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByQueryFindsEntry()?fetchedEntries@52.23:52.37CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java5@ 5(N2ª
aorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByQueryFindsEntry()?fetchedEntries@52.23:52.37DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java4 4(%2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java3 3(©
aorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByQueryFindsEntry()?fetchedEntries@52.23:52.37VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java4 4(%"
typeList<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch("an:0507.57010")*fetchedEntries2a
java.util.ListTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java4 4(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java4 4(2ü
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java40 4(=2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java4( 4(/®
Corg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdFindsEntry()METHODI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java9	 9("
isFinalfalse"Å
declarationStringÎ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByIdFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByIdFindsEntry2•
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java:2 :(C2k
java.util.Optional.of(T)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java; ;( 2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java:* :(12ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java;! ;(/2Ø
\org.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdFindsEntry()?fetchedEntry@58.27:58.39CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java;2 ;(>2∂
\org.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdFindsEntry()?fetchedEntry@58.27:58.39DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java: :('2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java9 9(≥
\org.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdFindsEntry()?fetchedEntry@58.27:58.39VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java: :('"
typeOptional<BibEntry>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("0507.57010")*fetchedEntry2e
java.util.OptionalTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java: :(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java: :(2•
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java:2 :(C2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java:* :(1ï
Forg.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()METHODI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java?	 ?( "
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByEntryFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByEntryFindsEntry2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaA A(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaB B(2≥
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD0 D(=2y
&java.util.Collections.singletonList(T)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaE! E(.2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java@# @(+2±
^org.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()?searchEntry@64.17:64.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaA A(2±
^org.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()?searchEntry@64.17:64.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaB B(2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD( D(/2±
^org.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()?searchEntry@64.17:64.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD> D(I2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaE/ E(=2¥
aorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()?fetchedEntries@68.23:68.37CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaE@ E(N2∏
^org.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()?searchEntry@64.17:64.28DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java@ @(2ª
aorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()?fetchedEntries@68.23:68.37DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD D(%2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java? ?(’
^org.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()?searchEntry@64.17:64.28VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java@ @("
typeBibEntry"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibEntry <mark class="class-field">searchEntry</mark> = new BibEntry()*searchEntry2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java@ @(2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java@# @(+Ì
aorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()?fetchedEntries@68.23:68.37VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD D(%"
typeList<BibEntry>"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch(searchEntry)*fetchedEntries2a
java.util.ListTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD D(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD D(2≥
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD0 D(=2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD( D(/2±
^org.jabref.logic.importer.fetcher.ZbMATHTest.searchByEntryFindsEntry()?searchEntry@64.17:64.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaD> D(I©
Lorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()METHODI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaI	 I(&"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByNoneEntryFindsNothing</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByNoneEntryFindsNothing2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaK K(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaL L(2≥
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN0 N(=2t
!java.util.Collections.emptyList()CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaO! O(*2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaJ# J(+2∑
dorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()?searchEntry@74.17:74.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaK K(2∑
dorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()?searchEntry@74.17:74.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaL L(2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN( N(/2∑
dorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()?searchEntry@74.17:74.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN> N(I2∫
gorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()?fetchedEntries@78.23:78.37CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaO. O(<2æ
dorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()?searchEntry@74.17:74.28DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaJ J(2¡
gorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()?fetchedEntries@78.23:78.37DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN N(%2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaI I(€
dorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()?searchEntry@74.17:74.28VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaJ J("
typeBibEntry"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibEntry <mark class="class-field">searchEntry</mark> = new BibEntry()*searchEntry2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaJ J(2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaJ# J(+˘
gorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()?fetchedEntries@78.23:78.37VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN N(%"
typeList<BibEntry>"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch(searchEntry)*fetchedEntries2a
java.util.ListTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN N(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN N(2≥
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN0 N(=2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN( N(/2∑
dorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByNoneEntryFindsNothing()?searchEntry@74.17:74.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaN> N(IÕ
Jorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()METHODI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaS	 S($"
isFinalfalse"à
declarationStringÚ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByIdInEntryFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByIdInEntryFindsEntry2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaU U(2≥
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW0 W(=2y
&java.util.Collections.singletonList(T)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaX! X(.2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaT# T(+2µ
borg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()?searchEntry@84.17:84.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaU U(2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW( W(/2µ
borg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()?searchEntry@84.17:84.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW> W(I2ö
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaX/ X(=2∏
eorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()?fetchedEntries@87.23:87.37CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaX@ X(N2º
borg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()?searchEntry@84.17:84.28DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaT T(2ø
eorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()?fetchedEntries@87.23:87.37DECLARATIONI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW W(%2^
voidRETURN_TYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaS S(Ÿ
borg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()?searchEntry@84.17:84.28VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaT T("
typeBibEntry"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibEntry <mark class="class-field">searchEntry</mark> = new BibEntry()*searchEntry2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaT T(2}
*org.jabref.model.entry.BibEntry.BibEntry()CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaT# T(+ı
eorg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()?fetchedEntries@87.23:87.37VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW W(%"
typeList<BibEntry>"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch(searchEntry)*fetchedEntries2a
java.util.ListTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW W(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW W(2≥
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW0 W(=2ì
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW( W(/2µ
borg.jabref.logic.importer.fetcher.ZbMATHTest.searchByIdInEntryFindsEntry()?searchEntry@84.17:84.28CALLI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.javaW> W(I—
@org.jabref.logic.importer.fetcher.ZbMATHTest?fetcher@23.19:23.26VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java ("
isFinalfalse"
typeZbMATH"j
declarationStringU<mark class="modifier">private </mark>ZbMATH <mark class="class-field">fetcher</mark>"
isStaticfalse"
accessprivate*fetcher2{
(org.jabref.logic.importer.fetcher.ZbMATHTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (·
Gorg.jabref.logic.importer.fetcher.ZbMATHTest?donaldsonEntry@24.21:24.35VARIABLEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (#"
isFinalfalse"
typeBibEntry"s
declarationString^<mark class="modifier">private </mark>BibEntry <mark class="class-field">donaldsonEntry</mark>"
isStaticfalse"
accessprivate*donaldsonEntry2r
org.jabref.model.entry.BibEntryTYPEI
?src\test\java\org\jabref\logic\importer\fetcher\ZbMATHTest.java (