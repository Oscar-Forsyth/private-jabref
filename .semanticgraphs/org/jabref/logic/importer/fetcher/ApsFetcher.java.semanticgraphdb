
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java¯
,org.jabref.logic.importer.fetcher.ApsFetcherCLASSI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"•
declarationStringè<mark class="modifier">public </mark><mark class="modifier">class </mark>ApsFetcher<mark class="modifier"><br>implements </mark>FulltextFetcher"
accesspublic*
ApsFetcher2¥
Zorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java (%2ñ
<org.jabref.logic.importer.fetcher.ApsFetcher.getTrustLevel()DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java; ;(#2û
Dorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaE E("2ô
?org.jabref.logic.importer.fetcher.ApsFetcher?LOGGER@24.32:24.38DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java  (&2ö
@org.jabref.logic.importer.fetcher.ApsFetcher?DOI_URL@27.32:27.39DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java  ('2ö
@org.jabref.logic.importer.fetcher.ApsFetcher?PDF_URL@28.32:28.39DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java  ('2~
)org.jabref.logic.importer.FulltextFetcherEXTENDI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java# (2Ï/
Zorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)METHODI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java (%"
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;URL&gt; <mark class="method">findFullText</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<URL>*findFullText2v
#java.util.Objects.requireNonNull(T)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java   (2¿
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java"> "(E2ü
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java"" "(*2q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java$ $(2m
java.util.Optional.empty()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java% %(!2ó
Dorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java( ((#2Å
.org.jabref.model.entry.identifier.DOI.getDOI()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java(. ((42k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java(( ((+2q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java* *(2k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java+0 +(32k
java.util.Optional.of(T)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java1$ 1(&2m
java.util.Optional.empty()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java7 7(2u
"java.net.URL.URL(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java1+ 1(.2≥
`org.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)!entryCALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java   ($2≥
`org.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)!entryCALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java" "(!2Ω
jorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?doi@34.22:34.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java$ $(2Ω
jorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?doi@34.22:34.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java($ (('2º
iorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?id@40.25:40.27CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java* *(2ì
@org.jabref.logic.importer.fetcher.ApsFetcher?PDF_URL@28.32:28.39CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java+# +(*2º
iorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?id@40.25:40.27CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java+- +(/2«
torg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?pdfRequestUrl@43.19:43.32CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java,$ ,(12æ
korg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?code@44.16:44.20CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java. .(2í
?org.jabref.logic.importer.fetcher.ApsFetcher?LOGGER@24.32:24.38CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java/ /(2«
torg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?pdfRequestUrl@43.19:43.32CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java1/ 1(<2í
?org.jabref.logic.importer.fetcher.ApsFetcher?LOGGER@24.32:24.38CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java3 3(2ê
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java"F "(P2Æ
Worg.jabref.logic.importer.FulltextFetcher.findFullText(org.jabref.model.entry.BibEntry)OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java (%2∏
`org.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java/ (42ƒ
jorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?doi@34.22:34.25DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java" "(2√
iorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?id@40.25:40.27DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java( ((2Œ
torg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?pdfRequestUrl@43.19:43.32DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java+ +( 2≈
korg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?code@44.16:44.20DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java, ,(2¬
horg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?e@50.47:50.48DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java2/ 2(02l
java.util.OptionalRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java (2o
java.net.URLRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java (™

jorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?doi@34.22:34.25VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java" "("
typeOptional<DOI>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = entry.getField(StandardField.DOI).flatMap(DOI::parse)*doi2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java" "(2Å
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java" "(2¿
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java"> "(E2ü
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java"" "(*2≥
`org.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)!entryCALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java" "(!2ê
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java"F "(Pó	
iorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?id@40.25:40.27VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java( (("
typeOptional<String>"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>Optional<String> <mark class="class-field">id</mark> = getId(doi.get().getDOI())*id2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java( ((2l
java.lang.StringTYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java( ((2ó
Dorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java( ((#2Å
.org.jabref.model.entry.identifier.DOI.getDOI()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java(. ((42k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java(( ((+2Ω
jorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?doi@34.22:34.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java($ (('£
torg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?pdfRequestUrl@43.19:43.32VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java+ +( "
typeString"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>String <mark class="class-field">pdfRequestUrl</mark> = PDF_URL + id.get()*pdfRequestUrl2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java+ +(2k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java+0 +(32ì
@org.jabref.logic.importer.fetcher.ApsFetcher?PDF_URL@28.32:28.39CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java+# +(*2º
iorg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?id@40.25:40.27CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java+- +(/ª
korg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?code@44.16:44.20VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java, ,("
typeint"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">code</mark> = Unirest.head(pdfRequestUrl).asJson().getStatus()*code2V
intTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java, ,(2«
torg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?pdfRequestUrl@43.19:43.32CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java,$ ,(1¸
`org.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java/ (4"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2r
org.jabref.model.entry.BibEntryTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java& (.î
horg.jabref.logic.importer.fetcher.ApsFetcher.findFullText(org.jabref.model.entry.BibEntry)?e@50.47:50.48VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java2/ 2(0"
typeMalformedURLException"
isFinalfalse",
declarationStringMalformedURLException e*e2q
java.net.MalformedURLExceptionTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java2 2(.æ
<org.jabref.logic.importer.fetcher.ApsFetcher.getTrustLevel()METHODI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java; ;(#"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>TrustLevel <mark class="method">getTrustLevel</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
TrustLevel*getTrustLevel2ê
9org.jabref.logic.importer.FulltextFetcher.getTrustLevel()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java; ;(#2Ü
,org.jabref.logic.importer.fetcher.TrustLevelRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java; ;(ó"
Dorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)METHODI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaE E(""
isFinalfalse"
declarationStringj<mark class="modifier">private </mark>Optional&lt;String&gt; <mark class="method">getId</mark>(String doi)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeOptional<String>*getId2p
java.net.URL.openConnection()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaN& N(42s
 java.net.URLConnection.connect()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaO O(2z
'java.net.URLConnection.getInputStream()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaP P(2{
(java.lang.String.split(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ8 Q(=2j
java.net.URL.toString()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ- Q(52r
java.net.URLConnection.getURL()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ$ Q(*2k
java.util.Optional.of(T)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaS  S("2m
java.util.Optional.empty()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaX X(2u
"java.net.URL.URL(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaN N(2ì
@org.jabref.logic.importer.fetcher.ApsFetcher?DOI_URL@27.32:27.39CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaJ J(#2õ
Horg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)!doiCALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaJ& J()2ß
Torg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?con@76.22:76.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaN N(2Æ
[org.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?doiRequest@74.15:74.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaN N($2ß
Torg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?con@76.22:76.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaO O(2ß
Torg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?con@76.22:76.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaP P(2ß
Torg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?con@76.22:76.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ  Q(#2¨
Yorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?urlParts@81.21:81.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaR R(2¨
Yorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?urlParts@81.21:81.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaS# S(+2í
?org.jabref.logic.importer.fetcher.ApsFetcher?LOGGER@24.32:24.38CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaV V(2•
Rorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?e@85.29:85.30CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaV3 V(42†
Horg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)!doi	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaE* E(-2µ
[org.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?doiRequest@74.15:74.25DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaJ J(2Æ
Torg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?con@76.22:76.25DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaL L(2≥
Yorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?urlParts@81.21:81.29DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ Q(2¨
Rorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?e@85.29:85.30DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaU U(2l
java.util.OptionalRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaE E(2s
java.lang.StringRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaE E(Ò
[org.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?doiRequest@74.15:74.25VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaJ J("
typeString"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>String <mark class="class-field">doiRequest</mark> = DOI_URL + doi*
doiRequest2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaJ J(2ì
@org.jabref.logic.importer.fetcher.ApsFetcher?DOI_URL@27.32:27.39CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaJ J(#2õ
Horg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)!doiCALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaJ& J()¨
Torg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?con@76.22:76.25VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaL L("
typeURLConnection"
isFinalfalse"f
declarationStringQ<mark class="modifier"> </mark>URLConnection <mark class="class-field">con</mark>*con2i
java.net.URLConnectionTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaL L(‡
Yorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?urlParts@81.21:81.29VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ Q("
typeString"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>String[] <mark class="class-field">urlParts</mark> = con.getURL().toString().split("abstract/")*urlParts2e
java.lang.String[]TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ Q(2{
(java.lang.String.split(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ8 Q(=2j
java.net.URL.toString()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ- Q(52r
java.net.URLConnection.getURL()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ$ Q(*2ß
Torg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?con@76.22:76.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaQ  Q(#Õ
Horg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)!doi	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaE* E(-"
typeString"
isFinalfalse"
declarationString
String doi*doi2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaE# E()ﬂ
Rorg.jabref.logic.importer.fetcher.ApsFetcher.getId(java.lang.String)?e@85.29:85.30VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaU U("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2f
java.io.IOExceptionTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.javaU U(©
?org.jabref.logic.importer.fetcher.ApsFetcher?LOGGER@24.32:24.38VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java  (&"
isFinaltrue"
typeLogger"‡
declarationString <mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(ApsFetcher.class);"
isStatictrue"
accessprivate*LOGGER2c
org.slf4j.LoggerTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java (ô
@org.jabref.logic.importer.fetcher.ApsFetcher?DOI_URL@27.32:27.39VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java  ('"
isFinaltrue"
typeString"Œ
declarationString∏<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">DOI_URL</mark> = "https://www.doi.org/";"
isStatictrue"
accessprivate*DOI_URL2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java (¶
@org.jabref.logic.importer.fetcher.ApsFetcher?PDF_URL@28.32:28.39VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java  ('"
isFinaltrue"
typeString"€
declarationString≈<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">PDF_URL</mark> = "https://journals.aps.org/prl/pdf/";"
isStatictrue"
accessprivate*PDF_URL2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java (