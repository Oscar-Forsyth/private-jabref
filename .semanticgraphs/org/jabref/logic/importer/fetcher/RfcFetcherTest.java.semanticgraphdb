
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java 
0org.jabref.logic.importer.fetcher.RfcFetcherTestCLASSM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"û
declarationStringà<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>RfcFetcherTest"
accesspublic*RfcFetcherTest2™
Lorg.jabref.logic.importer.fetcher.RfcFetcherTest.getNameReturnsEqualIdName()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java) )()2ø
aorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntryWithDraftIdentifier()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java. .(>2º
^org.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntry(java.lang.String)DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaE E(+2ø
aorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsNothingWithoutIdentifier()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaJ J(>2÷
xorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsNothingWithValidDraftIdentifier(java.lang.String)DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaU U(E2¢
Dorg.jabref.logic.importer.fetcher.RfcFetcherTest?fetcher@24.23:24.30DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (2£
Eorg.jabref.logic.importer.fetcher.RfcFetcherTest?bibEntry@25.21:25.29DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (Ó
Lorg.jabref.logic.importer.fetcher.RfcFetcherTest.getNameReturnsEqualIdName()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java) )()"
isFinalfalse"ø
declarationString©<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getNameReturnsEqualIdName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getNameReturnsEqualIdName2ç
6org.jabref.logic.importer.fetcher.RfcFetcher.getName()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java*$ *(+2õ
Dorg.jabref.logic.importer.fetcher.RfcFetcherTest?fetcher@24.23:24.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java* *(#2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java) )(˜$
aorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntryWithDraftIdentifier()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java. .(>"
isFinalfalse"°
declarationStringã<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchByIdFindsEntryWithDraftIdentifier</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*.performSearchByIdFindsEntryWithDraftIdentifier2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java= =(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java< <(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java; ;(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java: :(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java9 9(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java8 8(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java7 7(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java6 6(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java5 5(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java4 4(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java3 3(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java2 2(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java1 1(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java0 0(2ü
Horg.jabref.model.entry.BibEntry.setCommentsBeforeEntry(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java> >(,2o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java@ @( 2©
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java@9 @(J2ß
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java/% /(-2“
{org.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntryWithDraftIdentifier()?bibDraftEntry@47.17:47.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java> >(2“
{org.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntryWithDraftIdentifier()?bibDraftEntry@47.17:47.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java@! @(.2õ
Dorg.jabref.logic.importer.fetcher.RfcFetcherTest?fetcher@24.23:24.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java@1 @(82Ÿ
{org.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntryWithDraftIdentifier()?bibDraftEntry@47.17:47.30DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java/ /(2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java. .(‹&
{org.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntryWithDraftIdentifier()?bibDraftEntry@47.17:47.30VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java/ /("
typeBibEntry"
isFinalfalse"ê
declarationString˙<mark class="modifier"> </mark>BibEntry <mark class="class-field">bibDraftEntry</mark> = new BibEntry(StandardEntryType.TechReport).withField(InternalField.KEY_FIELD, "fielding-http-spec-01").withField(StandardField.AUTHOR, "Henrik Nielsen and Roy T. Fielding and Tim Berners-Lee").withField(StandardField.DAY, "20").withField(StandardField.INSTITUTION, "Internet Engineering Task Force").withField(StandardField.MONTH, "#dec#").withField(StandardField.NOTE, "Work in Progress").withField(StandardField.NUMBER, "draft-fielding-http-spec-01").withField(StandardField.PAGETOTAL, "41").withField(StandardField.PUBLISHER, "Internet Engineering Task Force").withField(StandardField.TITLE, "{Hypertext Transfer Protocol -- HTTP/1.0}").withField(StandardField.TYPE, "Internet-Draft").withField(StandardField.URL, "https://datatracker.ietf.org/doc/draft-fielding-http-spec/01/").withField(StandardField.YEAR, "1994").withField(StandardField.ABSTRACT, "The Hypertext Transfer Protocol (HTTP) is an application-level protocol with the lightness and speed necessary for distributed, collaborative, hypermedia information systems. It is a generic, stateless, object-oriented protocol which can be used for many tasks, such as name servers and distributed object management systems, through extension of its request methods (commands). A feature of HTTP is the typing and negotiation of data representation, allowing systems to be built independently of the data being transferred. HTTP has been in use by the World-Wide Web global information initiative since 1990. This specification reflects preferred usage of the protocol referred to as 'HTTP/1.0'<mark class="modifier">,</mark> and is compatible with the most commonly used HTTP server and client programs implemented prior to November 1994.")*bibDraftEntry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java/ /(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java= =(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java< <(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java; ;(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java: :(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java9 9(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java8 8(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java7 7(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java6 6(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java5 5(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java4 4(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java3 3(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java2 2(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java1 1(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java0 0(2ß
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java/% /(-Ω
^org.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntry(java.lang.String)METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaE E(+"
isFinalfalse"√
declarationString≠ <br><mark class="annotation">@CsvSource({</mark> "rfc1945"<mark class="modifier"><mark class="modifier">,</mark></mark> "RFC1945"<mark class="modifier"><mark class="modifier">,</mark></mark> "1945" }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchByIdFindsEntry</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearchByIdFindsEntry2o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaF F( 2©
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaF4 F(E2ú
Eorg.jabref.logic.importer.fetcher.RfcFetcherTest?bibEntry@25.21:25.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaF! F()2õ
Dorg.jabref.logic.importer.fetcher.RfcFetcherTest?fetcher@24.23:24.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaF, F(32¿
iorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntry(java.lang.String)!identifierCALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaFF F(P2≈
iorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntry(java.lang.String)!identifier	PARAMETERM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaE3 E(=2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaE E(Ñ
iorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsEntry(java.lang.String)!identifier	PARAMETERM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaE3 E(="
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2g
java.lang.StringTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaE, E(2â	
aorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsNothingWithoutIdentifier()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaJ J(>"
isFinalfalse"°
declarationStringã<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchByIdFindsNothingWithoutIdentifier</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*.performSearchByIdFindsNothingWithoutIdentifier2q
java.util.Optional.empty()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaK K(#2©
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaK/ K(@2õ
Dorg.jabref.logic.importer.fetcher.RfcFetcherTest?fetcher@24.23:24.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaK' K(.2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaJ J(˚
xorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsNothingWithValidDraftIdentifier(java.lang.String)METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaU U(E"
isFinalfalse"ß
declarationStringë <br><mark class="annotation">@CsvSource({</mark> // syntactically valid identifier
"draft-test-draft-spec"<mark class="modifier"><mark class="modifier">,</mark></mark> "RFC9999"<mark class="modifier"><mark class="modifier">,</mark></mark> // invalid identifier
"banana" }) <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchByIdFindsNothingWithValidDraftIdentifier</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*5performSearchByIdFindsNothingWithValidDraftIdentifier2©
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaVA V(R2õ
Dorg.jabref.logic.importer.fetcher.RfcFetcherTest?fetcher@24.23:24.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaV9 V(@2€
Éorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsNothingWithValidDraftIdentifier(java.lang.String)!identifierCALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaVS V(]2‡
Éorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsNothingWithValidDraftIdentifier(java.lang.String)!identifier	PARAMETERM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaUM U(W2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaU U(ü
Éorg.jabref.logic.importer.fetcher.RfcFetcherTest.performSearchByIdFindsNothingWithValidDraftIdentifier(java.lang.String)!identifier	PARAMETERM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaUM U(W"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2g
java.lang.StringTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.javaUF U(Lø
Dorg.jabref.logic.importer.fetcher.RfcFetcherTest?fetcher@24.23:24.30VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java ("
isFinalfalse"
type
RfcFetcher"¬
declarationString¨<mark class="modifier">private </mark>RfcFetcher <mark class="class-field">fetcher</mark> = new RfcFetcher(mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS));"
isStaticfalse"
accessprivate*fetcher2É
,org.jabref.logic.importer.fetcher.RfcFetcherTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (∂
Eorg.jabref.logic.importer.fetcher.RfcFetcherTest?bibEntry@25.21:25.29VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java ("
isFinalfalse"
typeBibEntry"÷
declarationString¿<mark class="modifier">private </mark>BibEntry <mark class="class-field">bibEntry</mark> = new BibEntry(StandardEntryType.Misc).withCitationKey("rfc1945").withField(StandardField.SERIES, "Request for Comments").withField(StandardField.NUMBER, "1945").withField(StandardField.HOWPUBLISHED, "RFC 1945").withField(StandardField.PUBLISHER, "RFC Editor").withField(StandardField.DOI, "10.17487/RFC1945").withField(StandardField.URL, "https://www.rfc-editor.org/info/rfc1945").withField(StandardField.AUTHOR, "Henrik Nielsen and Roy T. Fielding and Tim Berners-Lee").withField(StandardField.TITLE, "{Hypertext Transfer Protocol -- HTTP/1.0}").withField(StandardField.PAGETOTAL, "60").withField(StandardField.YEAR, "1996").withField(StandardField.MONTH, "#may#").withField(StandardField.ABSTRACT, "The Hypertext Transfer Protocol (HTTP) is an application-level protocol with the lightness and speed necessary for distributed, collaborative, hypermedia information systems. This memo provides information for the Internet community. This memo does not specify an Internet standard of any kind.");"
isStaticfalse"
accessprivate*bibEntry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java& &(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java% %(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java$ $(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java# #(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java" "(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java! !(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java   (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (2ò
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java (2ß
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\RfcFetcherTest.java$ (,