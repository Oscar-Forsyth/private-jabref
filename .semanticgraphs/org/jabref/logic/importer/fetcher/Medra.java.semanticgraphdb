
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java´
'org.jabref.logic.importer.fetcher.MedraCLASSD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java# #(",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"•
declarationStringè<mark class="modifier">public </mark><mark class="modifier">class </mark>Medra<mark class="modifier"><br>implements </mark>IdBasedParserFetcher"
accesspublic*Medra2Ü
1org.jabref.logic.importer.fetcher.Medra.getName()DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java( ((2à
3org.jabref.logic.importer.fetcher.Medra.getParser()DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java- -(2≠
Xorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java7 7('2ö
Eorg.jabref.logic.importer.fetcher.Medra.convertType(java.lang.String)DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaO O(!2£
Norg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaS S(2ô
Dorg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javab b(%2¢
Morg.jabref.logic.importer.fetcher.Medra.getUrlForIdentifier(java.lang.String)DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javai i("2´
Vorg.jabref.logic.importer.fetcher.Medra.doPostCleanup(org.jabref.model.entry.BibEntry)DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javan n(2ê
;org.jabref.logic.importer.fetcher.Medra?API_URL@37.31:37.38DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java% %(&2~
.org.jabref.logic.importer.IdBasedParserFetcherEXTENDD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java# #(2Á
1org.jabref.logic.importer.fetcher.Medra.getName()METHODD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java( (("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2Ä
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java( ((2e
java.lang.StringRETURN_TYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java( ((«
3org.jabref.logic.importer.fetcher.Medra.getParser()METHODD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java- -("
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Parser <mark class="method">getParser</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParser*	getParser2ô
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java/- /(92o
!java.util.Collections.emptyList()CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java1# 1(,2t
&java.util.Collections.singletonList(T)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java3 3(,2¶
Xorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java3- 3(?2ô
Korg.jabref.logic.importer.fetcher.Medra.getParser()?inputStream@46.15:46.26CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java/: /(E2ñ
Horg.jabref.logic.importer.fetcher.Medra.getParser()?response@47.23:47.31CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java0 0(2ñ
Horg.jabref.logic.importer.fetcher.Medra.getParser()?response@47.23:47.31CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java3@ 3(H2å
:org.jabref.logic.importer.IdBasedParserFetcher.getParser()OVERRIDED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java- -(2ù
Horg.jabref.logic.importer.fetcher.Medra.getParser()?response@47.23:47.31DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java/ /(2†
Korg.jabref.logic.importer.fetcher.Medra.getParser()?inputStream@46.15:46.26DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java. .(2u
 org.jabref.logic.importer.ParserRETURN_TYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java- -(Ä
Horg.jabref.logic.importer.fetcher.Medra.getParser()?response@47.23:47.31VARIABLED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java/ /("
type
JSONObject"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>JSONObject <mark class="class-field">response</mark> = JsonReader.toJsonObject(inputStream)*response2j
kong.unirest.json.JSONObjectTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java/ /(2ô
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java/- /(92ô
Korg.jabref.logic.importer.fetcher.Medra.getParser()?inputStream@46.15:46.26CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java/: /(EÔ
Korg.jabref.logic.importer.fetcher.Medra.getParser()?inputStream@46.15:46.26VARIABLED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java. .("
type"
isFinalfalse"!
declarationString inputStream*inputStream2TYPEé$
Xorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)METHODD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java7 7('"
isFinalfalse"÷
declarationString¿<mark class="modifier">private </mark>BibEntry <mark class="method">jsonItemToBibEntry</mark>(JSONObject item)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibEntry*jsonItemToBibEntry2´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java:, :(02´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java;4 ;(82´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java<? <(C2´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java>0 >(42∏
jorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@63.41:63.46CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java?2 ?(72∏
jorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@64.41:64.46CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java@2 @(72∏
jorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@65.41:65.46CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaA2 A(72∑
iorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?year@66.41:66.45CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaBB B(F2´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaC2 C(62´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaD4 D(82´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaE3 E(72´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaF6 F(:2´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaG8 G(<2´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaH2 H(62´
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaI5 I(92º
norg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?exception@74.31:74.40CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaKJ K(S2∞
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!item	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java73 7(72ø
jorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@63.41:63.46DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java?) ?(.2ø
jorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@64.41:64.46DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java@) @(.2ø
jorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@65.41:65.46DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaA) A(.2æ
iorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?year@66.41:66.45DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaB) B(-2√
norg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?exception@74.31:74.40DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaJ J((2t
org.jabref.model.entry.BibEntryRETURN_TYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java7 7(Ó
]org.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)!item	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java73 7(7"
type
JSONObject"
isFinalfalse"$
declarationStringJSONObject item*item2j
kong.unirest.json.JSONObjectTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java7( 7(2Ç
jorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@63.41:63.46VARIABLED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java?) ?(."
type"
isFinalfalse"
declarationString array*array2TYPEÇ
jorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@64.41:64.46VARIABLED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java@) @(."
type"
isFinalfalse"
declarationString array*array2TYPEÇ
jorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@65.41:65.46VARIABLED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaA) A(."
type"
isFinalfalse"
declarationString array*array2TYPEˇ
iorg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?year@66.41:66.45VARIABLED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaB) B(-"
type"
isFinalfalse"
declarationString year*year2TYPEë
norg.jabref.logic.importer.fetcher.Medra.jsonItemToBibEntry(kong.unirest.json.JSONObject)?exception@74.31:74.40VARIABLED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaJ J(("
typeJSONException"
isFinalfalse",
declarationStringJSONException exception*	exception2m
kong.unirest.json.JSONExceptionTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaJ J(Æ
Eorg.jabref.logic.importer.fetcher.Medra.convertType(java.lang.String)METHODD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaO O(!"
isFinalfalse"y
declarationStringd<mark class="modifier">private </mark>EntryType <mark class="method">convertType</mark>(String type)"
isStaticfalse"
accessprivate"

isAbstractfalse"
type	EntryType*convertType2w
)java.lang.String.equals(java.lang.Object)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaP! P('2ò
Jorg.jabref.logic.importer.fetcher.Medra.convertType(java.lang.String)!typeCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaP( P(,2ù
Jorg.jabref.logic.importer.fetcher.Medra.convertType(java.lang.String)!type	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaO) O(-2{
&org.jabref.model.entry.types.EntryTypeRETURN_TYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaO O(«
Jorg.jabref.logic.importer.fetcher.Medra.convertType(java.lang.String)!type	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaO) O(-"
typeString"
isFinalfalse" 
declarationStringString type*type2^
java.lang.StringTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaO" O((ﬂ
Norg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)METHODD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaS S("
isFinalfalse"z
declarationStringe<mark class="modifier">private </mark>String <mark class="method">toAuthors</mark>(JSONArray authors)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*	toAuthors2y
+org.jabref.model.entry.AuthorList.collect()CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java], ](32§
Vorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)!authorsCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaT T(2§
Vorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)!authorsCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaX" X()2Ø
aorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)?author@90.29:90.35CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaZ' Z(-2Ø
aorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)?author@90.29:90.35CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java[+ [(12Ø
aorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)?author@90.29:90.35CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java\+ \(12Ø
aorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)?author@90.29:90.35CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java\R \(X2©
Vorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)!authors	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaS' S(.2∂
aorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)?author@90.29:90.35DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaZ Z(#2e
java.lang.StringRETURN_TYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaS S(Í
Vorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)!authors	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaS' S(."
type	JSONArray"
isFinalfalse"&
declarationStringJSONArray authors*authors2i
kong.unirest.json.JSONArrayTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaS S(&˚
aorg.jabref.logic.importer.fetcher.Medra.toAuthors(kong.unirest.json.JSONArray)?author@90.29:90.35VARIABLED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaZ Z(#"
type"
isFinalfalse"
declarationString author*author2TYPE£
Dorg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)METHODD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javab b(%"
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URLDownload <mark class="method">getUrlDownload</mark>(URL url)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURLDownload*getUrlDownload2ú
Norg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javad d(2à
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javac# c(.2ñ
Horg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)!urlCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javac/ c(22ß
Yorg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)?download@99.20:99.28CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javad d(2ß
Yorg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)?download@99.20:99.28CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javae e(2ì
Aorg.jabref.logic.importer.WebFetcher.getUrlDownload(java.net.URL)OVERRIDED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javab b(%2õ
Horg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)!url	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javab* b(-2Æ
Yorg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)?download@99.20:99.28DECLARATIOND
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javac c(2u
 org.jabref.logic.net.URLDownloadRETURN_TYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javab b(Û
Yorg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)?download@99.20:99.28VARIABLED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javac c("
typeURLDownload"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>URLDownload <mark class="class-field">download</mark> = new URLDownload(url)*download2n
 org.jabref.logic.net.URLDownloadTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javac c(2à
:org.jabref.logic.net.URLDownload.URLDownload(java.net.URL)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javac# c(.2ñ
Horg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)!urlCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javac/ c(2π
Horg.jabref.logic.importer.fetcher.Medra.getUrlDownload(java.net.URL)!url	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javab* b(-"
typeURL"
isFinalfalse"
declarationStringURL url*url2Z
java.net.URLTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javab& b()ï
Morg.jabref.logic.importer.fetcher.Medra.getUrlForIdentifier(java.lang.String)METHODD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javai i(""
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URL <mark class="method">getUrlForIdentifier</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURL*getUrlForIdentifier2p
"java.net.URL.URL(java.lang.String)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaj j(2â
;org.jabref.logic.importer.fetcher.Medra?API_URL@37.31:37.38CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaj j(2¶
Xorg.jabref.logic.importer.fetcher.Medra.getUrlForIdentifier(java.lang.String)!identifierCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javaj' j(12¶
Torg.jabref.logic.importer.IdBasedParserFetcher.getUrlForIdentifier(java.lang.String)OVERRIDED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javai i("2´
Xorg.jabref.logic.importer.fetcher.Medra.getUrlForIdentifier(java.lang.String)!identifier	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javai* i(42a
java.net.URLRETURN_TYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javai i(·
Xorg.jabref.logic.importer.fetcher.Medra.getUrlForIdentifier(java.lang.String)!identifier	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javai* i(4"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2^
java.lang.StringTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javai# i()‡

Vorg.jabref.logic.importer.fetcher.Medra.doPostCleanup(org.jabref.model.entry.BibEntry)METHODD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javan n("
isFinalfalse"≈
declarationStringØ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">doPostCleanup</mark>(BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*doPostCleanup2ö
Lorg.jabref.logic.cleanup.DoiCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javao o( 2~
0org.jabref.logic.cleanup.DoiCleanup.DoiCleanup()CALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javao o(2™
\org.jabref.logic.importer.fetcher.Medra.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javao! o(&2Ø
]org.jabref.logic.importer.IdBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)OVERRIDED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javan n(2Ø
\org.jabref.logic.importer.fetcher.Medra.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javan' n(,2Y
voidRETURN_TYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javan n(Ó
\org.jabref.logic.importer.fetcher.Medra.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERD
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javan' n(,"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2m
org.jabref.model.entry.BibEntryTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.javan n(&ä
;org.jabref.logic.importer.fetcher.Medra?API_URL@37.31:37.38VALUED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java% %(&"
isFinaltrue"
typeString"œ
declarationStringπ<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">API_URL</mark> = "https://data.medra.org";"
isStatictrue"
accesspublic*API_URL2^
java.lang.StringTYPED
:src\main\java\org\jabref\logic\importer\fetcher\Medra.java% %(