
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaü
Eorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcherCLASSb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java( ((#"9
package.org.jabref.logic.importer.fetcher.isbntobibtex"
isFinalfalse"
inner classfalse"

isAbstractfalse"Ø
declarationStringô<mark class="modifier">public </mark><mark class="modifier">class </mark>OpenLibraryIsbnFetcher<mark class="modifier"> extends </mark>AbstractIsbnFetcher"
accesspublic*OpenLibraryIsbnFetcher2â
OpenLibraryIsbnFetcherDECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java- -(!2¬
Oorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getName()DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java2 2(2ﬁ
korg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getUrlForIdentifier(java.lang.String)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java7 7("2ƒ
Qorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java@ @(2Á
torg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaR R(2È
vorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaU U('2ﬂ
lorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthors(kong.unirest.json.JSONArray)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javat t(2”
`org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java (2Í
uorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaê ê(%2ﬁ
iorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaû û(,2À
Xorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?LOGGER@42.32:42.38DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java*  *(&2Õ
Zorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?BASE_URL@43.32:43.40DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java+  +((2£
5org.jabref.logic.importer.fetcher.AbstractIsbnFetcherEXTENDb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java(, ((?˝
OpenLibraryIsbnFetcherCONSTRUCTORb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java- -(!"û
declarationStringà<mark class="modifier">public </mark><mark class="method">OpenLibraryIsbnFetcher</mark>(ImportFormatPreferences importFormatPreferences)*OpenLibraryIsbnFetcher2∏
Eorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcherRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java- -(!†
importFormatPreferences	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java-: -(Q"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2É
ImportFormatPreferencesTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java-" -(9‡
Oorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getName()METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java2 2("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2û
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java2 2(2É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java2 2(Å
korg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getUrlForIdentifier(java.lang.String)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java7 7(""
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URL <mark class="method">getUrlForIdentifier</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURL*getUrlForIdentifier2…
]org.jabref.logic.importer.fetcher.AbstractIsbnFetcher.ensureThatIsbnIsValid(java.lang.String)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java8 8("2‚
vorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getUrlForIdentifier(java.lang.String)!identifierCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java8# 8(-2∆
Zorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?BASE_URL@43.32:43.40CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java9 9(&2‚
vorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getUrlForIdentifier(java.lang.String)!identifierCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java:) :(32ƒ
Torg.jabref.logic.importer.IdBasedParserFetcher.getUrlForIdentifier(java.lang.String)OVERRIDEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java7 7("2Á
vorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getUrlForIdentifier(java.lang.String)!identifier	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java7* 7(42
java.net.URLRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java7 7(ª
vorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getUrlForIdentifier(java.lang.String)!identifier	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java7* 7(4"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java7# 7()ä"
Qorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java@ @("
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Parser <mark class="method">getParser</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParser*	getParser2∑
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaB- B(92ç
!java.util.Collections.emptyList()CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaD# D(,2¨
@org.jabref.model.strings.StringUtil.isNotBlank(java.lang.String)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaH H(%2‚
vorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaL L(/2Ä
java.util.List.of(E)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaM M(2µ
Iorg.jabref.logic.importer.ParseException.ParseException(java.lang.String)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaI I((2’
iorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?inputStream@65.15:65.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaB: B(E2“
forg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?response@66.23:66.31CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaC C(2“
forg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?response@66.23:66.31CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaG G(#2œ
corg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?error@71.19:71.24CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaH& H(+2œ
corg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?error@71.19:71.24CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaI) I(.2“
forg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?response@66.23:66.31CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaL0 L(82œ
corg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?entry@76.21:76.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaM M( 2±
Aorg.jabref.logic.importer.fetcher.AbstractIsbnFetcher.getParser()OVERRIDEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java@ @(2™
:org.jabref.logic.importer.IdBasedParserFetcher.getParser()OVERRIDEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java@ @(2Ÿ
forg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?response@66.23:66.31DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaB B(2÷
corg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?error@71.19:71.24DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaG G(2÷
corg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?entry@76.21:76.26DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaL L(2‹
iorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?inputStream@65.15:65.26DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaA A(2ì
 org.jabref.logic.importer.ParserRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java@ @(µ
forg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?response@66.23:66.31VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaB B("
type
JSONObject"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>JSONObject <mark class="class-field">response</mark> = JsonReader.toJsonObject(inputStream)*response2à
kong.unirest.json.JSONObjectTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaB B(2∑
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaB- B(92’
iorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?inputStream@65.15:65.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaB: B(E–
corg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?error@71.19:71.24VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaG G("
typeString"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>String <mark class="class-field">error</mark> = response.optString("error")*error2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaG G(2“
forg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?response@66.23:66.31CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaG G(#À
corg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?entry@76.21:76.26VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaL L("
typeBibEntry"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = jsonItemToBibEntry(response)*entry2ã
org.jabref.model.entry.BibEntryTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaL L(2‚
vorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaL L(/2“
forg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?response@66.23:66.31CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaL0 L(8´
iorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.getParser()?inputStream@65.15:65.26VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaA A("
type"
isFinalfalse"!
declarationString inputStream*inputStream2TYPE 
torg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaR R("
isFinalfalse"≈
declarationStringØ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">doPostCleanup</mark>(BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*doPostCleanup2Õ
]org.jabref.logic.importer.IdBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)OVERRIDEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaR R(2Î
zorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaR' R(,2w
voidRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaR R(…
zorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaR' R(,"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2ã
org.jabref.model.entry.BibEntryTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaR R(&⁄W
vorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaU U('"
isFinalfalse"÷
declarationString¿<mark class="modifier">private </mark>BibEntry <mark class="method">jsonItemToBibEntry</mark>(JSONObject item)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>ParseException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibEntry*jsonItemToBibEntry2Ü
java.lang.String.isEmpty()CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaY Y(2·
uorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java[ [(,2 
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java] ](2∞
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaj j(2 
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaj, j(42º
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaW! W()2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaX' X(+2˜
äorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?authors@88.19:88.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaY Y(2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaZ" Z(&2˜
äorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?authors@88.19:88.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java[ [(2ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?works@90.26:90.31CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java[- [(22ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java] ](2˜
äorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?authors@88.19:88.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java]1 ](82ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java^ ^(2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java^0 ^(42ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java_ _(2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java`( `(,2ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@96.74:96.79CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java`S `(X2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaa: a(>2ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@97.92:97.97CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaae a(j2ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javac c(2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javad( d(,2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javae: e(>2ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javag g(2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javag3 g(72Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javah2 h(62˘
åorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?yearOpt@104.29:104.36CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaj j(2ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaj& j(+2ˆ
âorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?year@106.30:106.34CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javajI j(M2ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javak k(2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javal( l(,2˜
äorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@108.77:108.82CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javalV l([2ı
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javan n(2˚
éorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?exception@111.31:111.40CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javapM p(V2Ï
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!item	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaU3 U(72¸
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaW W(2˛
äorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?authors@88.19:88.26DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaX X(2¸
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?works@90.26:90.31DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaZ Z(2Ä
åorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?yearOpt@104.29:104.36DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javah h($2¸
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@96.74:96.79DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java`J `(O2¸
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@97.92:97.97DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaa\ a(a2˝
âorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?year@106.30:106.34DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaj j("2˛
äorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@108.77:108.82DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javalM l(R2Ç
éorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?exception@111.31:111.40DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javao o((2í
org.jabref.model.entry.BibEntryRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaU U(˛
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?entry@87.21:87.26VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaW W("
typeBibEntry"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Book)*entry2ã
org.jabref.model.entry.BibEntryTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaW W(2º
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaW! W()û
äorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?authors@88.19:88.26VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaX X("
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">authors</mark> = toAuthors(item.optJSONArray("authors"))*authors2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaX X(2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaX' X(+ù
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?works@90.26:90.31VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaZ Z("
type	JSONArray"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>JSONArray <mark class="class-field">works</mark> = item.optJSONArray("works")*works2á
kong.unirest.json.JSONArrayTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaZ Z(2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaZ" Z(&Ô
åorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?yearOpt@104.29:104.36VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javah h($"
typeOptional<String>"
isFinalfalse"»
declarationString≤<mark class="modifier"> </mark>Optional<String> <mark class="class-field">yearOpt</mark> = Date.parse(item.optString("publish_date")).flatMap(Date::getYear).map(Object::toString)*yearOpt2~
java.util.OptionalTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javah h(2Ö
java.lang.StringTYPE_ARGUMENTb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javah h(2Á
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!itemCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javah2 h(6…
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)!item	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaU3 U(7"
type
JSONObject"
isFinalfalse"$
declarationStringJSONObject item*item2à
kong.unirest.json.JSONObjectTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaU( U(2ø
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@96.74:96.79VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java`J `(O"
type"
isFinalfalse"
declarationString array*array2TYPEø
àorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@97.92:97.97VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaa\ a(a"
type"
isFinalfalse"
declarationString array*array2TYPEæ
âorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?year@106.30:106.34VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaj j(""
type"
isFinalfalse"
declarationString year*year2TYPE¡
äorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?array@108.77:108.82VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javalM l(R"
type"
isFinalfalse"
declarationString array*array2TYPEÔ
éorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.jsonItemToBibEntry(kong.unirest.json.JSONObject)?exception@111.31:111.40VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javao o(("
typeJSONException"
isFinalfalse",
declarationStringJSONException exception*	exception2ã
kong.unirest.json.JSONExceptionTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javao o(Å
lorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthors(kong.unirest.json.JSONArray)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javat t("
isFinalfalse"z
declarationStringe<mark class="modifier">private </mark>String <mark class="method">toAuthors</mark>(JSONArray authors)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*	toAuthors2ó
+org.jabref.model.entry.AuthorList.collect()CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java{, {(32‡
torg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthors(kong.unirest.json.JSONArray)!authorsCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javau u(2‡
torg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthors(kong.unirest.json.JSONArray)!authorsCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javax" x()2Ù
áorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthors(kong.unirest.json.JSONArray)?authorObject@122.29:122.41CALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaz6 z(B2Â
torg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthors(kong.unirest.json.JSONArray)!authors	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javat' t(.2˚
áorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthors(kong.unirest.json.JSONArray)?authorObject@122.29:122.41DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaz z()2É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javat t(≈
torg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthors(kong.unirest.json.JSONArray)!authors	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javat' t(."
type	JSONArray"
isFinalfalse"&
declarationStringJSONArray authors*authors2á
kong.unirest.json.JSONArrayTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javat t(&Ã
áorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthors(kong.unirest.json.JSONArray)?authorObject@122.29:122.41VARIABLEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaz z()"
type"
isFinalfalse""
declarationString authorObject*authorObject2TYPE’.
`org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java ("
isFinalfalse"r
declarationString]<mark class="modifier">private </mark>Author <mark class="method">toAuthor</mark>(String key)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeAuthor*toAuthor2ä
java.util.Optional.isEmpty()CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaá á( 2∞
Borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaå1 å(62Ü
java.util.Optional.get()CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaåD å(G2û
0org.jabref.model.entry.AuthorList.getAuthor(int)CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaç ç(#2Ï
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÉ É(2Ï
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaâ â(2´
=org.jabref.logic.importer.AuthorListParser.AuthorListParser()CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaã0 ã(@2»
Zorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?BASE_URL@43.32:43.40CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÄ. Ä(62“
dorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)!keyCALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÄ9 Ä(<2Î
}org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorResponse@128.17:128.31CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÅ Å(2∆
Xorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?LOGGER@42.32:42.38CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÇ Ç(2Î
}org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorResponse@128.17:128.31CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÖ Ö(*2„
uorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?result@133.19:133.25CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÜ< Ü(B2Â
uorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?result@133.19:133.25CALLf
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÜÇ Ü(à2È
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?nameOptional@134.25:134.37CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaá á(2∆
Xorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?LOGGER@42.32:42.38CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaà à(2Ì
org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorListParser@139.25:139.41CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaå  å(02È
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?nameOptional@134.25:134.37CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaå7 å(C2Á
yorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorList@140.19:140.29CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaç ç(2’
dorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)!key	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java# (&2Ú
}org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorResponse@128.17:128.31DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÄ Ä(2Í
uorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?result@133.19:133.25DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÖ Ö(2
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?nameOptional@134.25:134.37DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÜ Ü(%2Ù
org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorListParser@139.25:139.41DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaã ã()2Ó
yorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorList@140.19:140.29DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaå å(2ê
org.jabref.model.entry.AuthorRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java (Ù
}org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorResponse@128.17:128.31VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÄ Ä("
typeJsonNode"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>JsonNode <mark class="class-field">authorResponse</mark> = Unirest.get(BASE_URL + key + ".json").asJson().getBody()*authorResponse2É
kong.unirest.JsonNodeTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÄ Ä(2»
Zorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?BASE_URL@43.32:43.40CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÄ. Ä(62“
dorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)!keyCALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÄ9 Ä(<ñ
uorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?result@133.19:133.25VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÖ Ö("
type
JSONObject"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>JSONObject <mark class="class-field">result</mark> = authorResponse.getObject()*result2ä
kong.unirest.json.JSONObjectTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÖ Ö(2Î
}org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorResponse@128.17:128.31CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÖ Ö(*Ì

{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?nameOptional@134.25:134.37VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÜ Ü(%"
typeOptional<String>"
isFinalfalse"Ë
declarationString“<mark class="modifier"> </mark>Optional<String> <mark class="class-field">nameOptional</mark> = Optional.ofNullable(result.optString("personal_name"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)).or(() -> Optional.ofNullable(result.optString("name"<mark class="modifier">,</mark> <mark class="modifier">null</mark>)))*nameOptional2Ä
java.util.OptionalTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÜ Ü(2á
java.lang.StringTYPE_ARGUMENTd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÜ Ü(2„
uorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?result@133.19:133.25CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÜ< Ü(B2Â
uorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?result@133.19:133.25CALLf
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaÜÇ Ü(àä
org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorListParser@139.25:139.41VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaã ã()"
typeAuthorListParser"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>AuthorListParser <mark class="class-field">authorListParser</mark> = new AuthorListParser()*authorListParser2ò
*org.jabref.logic.importer.AuthorListParserTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaã ã(2´
=org.jabref.logic.importer.AuthorListParser.AuthorListParser()CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaã0 ã(@‚

yorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorList@140.19:140.29VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaå å("
type
AuthorList"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>AuthorList <mark class="class-field">authorList</mark> = authorListParser.parse(nameOptional.get())*
authorList2è
!org.jabref.model.entry.AuthorListTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaå å(2∞
Borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaå1 å(62Ü
java.util.Optional.get()CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaåD å(G2Ì
org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?authorListParser@139.25:139.41CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaå  å(02È
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)?nameOptional@134.25:134.37CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaå7 å(Cõ
dorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.toAuthor(java.lang.String)!key	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java# (&"
typeString"
isFinalfalse"
declarationString
String key*key2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java ("Ñ
uorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)METHODd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaê ê(%"
isFinalfalse"Å
declarationStringl<mark class="modifier">private </mark>String <mark class="method">fromWorksToAuthors</mark>(JSONArray works)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*fromWorksToAuthors2í
$java.util.stream.Collectors.toList()CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaö> ö(D2≥
Eorg.jabref.model.entry.AuthorList.getAsLastFirstNamesWithAnd(boolean)CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaõ& õ(@2¡
Sorg.jabref.model.entry.AuthorList.of(java.util.List<org.jabref.model.entry.Author>)CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaõ õ(2È
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)!worksCALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaë ë(2È
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)!worksCALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaï2 ï(72ˆ
áorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?obj@151.47:151.50CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaó6 ó(92»
Zorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?BASE_URL@43.32:43.40CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaò< ò(D2¸
çorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?worksLink@152.47:152.56CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaòG ò(P2˙
ãorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?authors@149.21:149.28CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaõ õ($2Ó
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)!works	PARAMETERd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaê0 ê(52Å
ãorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?authors@149.21:149.28DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaï ï(2˝
áorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?obj@151.47:151.50DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaó/ ó(22É
çorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?worksLink@152.47:152.56DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaò/ ò(82Ö
java.lang.StringRETURN_TYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaê ê(Á
ãorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?authors@149.21:149.28VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaï ï("
typeList<Author>"
isFinalfalse"‹
declarationString∆<mark class="modifier"> </mark>List<Author> <mark class="class-field">authors</mark> = IntStream.range(0, works.length()).mapToObj(works::getJSONObject).map(obj -> obj.getString("key")).map(worksLink -> BASE_URL + worksLink + ".json").flatMap(<mark class="modifier">this</mark>::fromWorkToAuthors).collect(Collectors.toList())*authors2|
java.util.ListTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaï ï(2î
org.jabref.model.entry.AuthorTYPE_ARGUMENTd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaï ï(2í
$java.util.stream.Collectors.toList()CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaö> ö(D2È
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)!worksCALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaï2 ï(72ˆ
áorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?obj@151.47:151.50CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaó6 ó(92»
Zorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?BASE_URL@43.32:43.40CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaò< ò(D2¸
çorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?worksLink@152.47:152.56CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaòG ò(PÃ
{org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)!works	PARAMETERd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaê0 ê(5"
type	JSONArray"
isFinalfalse"$
declarationStringJSONArray works*works2â
kong.unirest.json.JSONArrayTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaê& ê(/º
áorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?obj@151.47:151.50VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaó/ ó(2"
type"
isFinalfalse"
declarationString obj*obj2TYPEŒ
çorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorksToAuthors(kong.unirest.json.JSONArray)?worksLink@152.47:152.56VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaò/ ò(8"
type"
isFinalfalse"
declarationString
 worksLink*	worksLink2TYPEâ
iorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)METHODd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaû û(,"
isFinalfalse"ä
declarationStringu<mark class="modifier">private </mark>Stream&lt;Author&gt; <mark class="method">fromWorkToAuthors</mark>(String link)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeStream<Author>*fromWorkToAuthors2ç
java.util.stream.Stream.empty()CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java¢ ¢(2‹
norg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)!linkCALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaü$ ü((2Í
|org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?body@159.17:159.21CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java† †( 2Ì
org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?authors@160.18:160.25CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java° °(2Ì
org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?authors@160.18:160.25CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java•" •()2Û
Ñorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?authorObject@167.29:167.41CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaß6 ß(B2·
norg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)!link	PARAMETERd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaû4 û(82Ò
|org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?body@159.17:159.21DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaü ü(2Ù
org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?authors@160.18:160.25DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java† †(2˙
Ñorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?authorObject@167.29:167.41DECLARATIONd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaß ß()2å
java.util.stream.StreamRETURN_TYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaû û(2õ
org.jabref.model.entry.AuthorRETURN_TYPE_ARGUMENTd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaû û(â
|org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?body@159.17:159.21VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaü ü("
typeJsonNode"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>JsonNode <mark class="class-field">body</mark> = Unirest.get(link).asJson().getBody()*body2É
kong.unirest.JsonNodeTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaü ü(2‹
norg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)!linkCALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaü$ ü((¨
org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?authors@160.18:160.25VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java† †("
type	JSONArray"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>JSONArray <mark class="class-field">authors</mark> = body.getObject().optJSONArray("authors")*authors2â
kong.unirest.json.JSONArrayTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java† †(2Í
|org.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?body@159.17:159.21CALLd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java† †( ´
norg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)!link	PARAMETERd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaû4 û(8"
typeString"
isFinalfalse" 
declarationStringString link*link2~
java.lang.StringTYPEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaû- û(3À
Ñorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher.fromWorkToAuthors(java.lang.String)?authorObject@167.29:167.41VARIABLEd
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.javaß ß()"
type"
isFinalfalse""
declarationString authorObject*authorObject2TYPEÄ
Xorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?LOGGER@42.32:42.38VALUEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java*  *(&"
isFinaltrue"
typeLogger"Ï
declarationString÷<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(OpenLibraryIsbnFetcher.class);"
isStatictrue"
accessprivate*LOGGER2|
org.slf4j.LoggerTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java* *(Í
Zorg.jabref.logic.importer.fetcher.isbntobibtex.OpenLibraryIsbnFetcher?BASE_URL@43.32:43.40VALUEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java+  +(("
isFinaltrue"
typeString"“
declarationStringº<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">BASE_URL</mark> = "https://openlibrary.org";"
isStatictrue"
accessprivate*BASE_URL2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java+ +(