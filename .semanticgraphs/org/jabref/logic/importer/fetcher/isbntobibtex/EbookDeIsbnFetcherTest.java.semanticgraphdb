
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaé
Eorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTestCLASSb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java (#"9
package.org.jabref.logic.importer.fetcher.isbntobibtex"
isFinalfalse"
inner classfalse"

isAbstractfalse"í
declarationString¸<mark class="annotation">@Disabled</mark> <br><mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>EbookDeIsbnFetcherTest<mark class="modifier"> extends </mark>AbstractIsbnFetcherTest"
accesspublic*EbookDeIsbnFetcherTest2¿
Morg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.setUp()DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java (2√
Porg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.testName()DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java- -(2‹
iorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithShortISBN()DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java3 3(12€
horg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java: :(02◊
dorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.authorsAreCorrectlyFormatted()DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaA A(,2ÿ
eorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchForValidButNotFoundISBN()DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaW W(-2ß
9org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTestEXTENDb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java, (Cﬂ
Morg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.setUp()METHODb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java& &(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java% %(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java$ $(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java# #(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java" "(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java! !(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java   (2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java (2≠
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java ( 2º
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java$ (,2¥
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java$ $(+2w
voidRETURN_TYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java (©
Porg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.testName()METHODb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java- -("
isFinalfalse"∑
declarationString° <br><mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">testName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*testName2ö
.org.jabref.logic.importer.WebFetcher.getName()CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java.0 .(72¥
Dorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.testName()OVERRIDEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java- -(2w
voidRETURN_TYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java- -(˜
iorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithShortISBN()METHODb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java3 3(1"
isFinalfalse"§
declarationStringé <br><mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdSuccessfulWithShortISBN</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!searchByIdSuccessfulWithShortISBN2æ
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java42 4(C2Ñ
java.util.Optional.of(T)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java5 5( 2Ô
Çorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithShortISBN()?fetchedEntry@52.27:52.39CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java59 5(E2Õ
]org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdSuccessfulWithShortISBN()OVERRIDEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java3 3(12ˆ
Çorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithShortISBN()?fetchedEntry@52.27:52.39DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java4 4('2w
voidRETURN_TYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java3 3(©
Çorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithShortISBN()?fetchedEntry@52.27:52.39VARIABLEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java4 4('"
typeOptional<BibEntry>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("0134685997")*fetchedEntry2~
java.util.OptionalTYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java4 4(2î
org.jabref.model.entry.BibEntryTYPE_ARGUMENTb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java4 4(2æ
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java42 4(CÒ
horg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()METHODb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java: :(0"
isFinalfalse"£
declarationStringç <br><mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdSuccessfulWithLongISBN</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* searchByIdSuccessfulWithLongISBN2æ
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java;2 ;(C2Ñ
java.util.Optional.of(T)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java< <( 2Ó
Åorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()?fetchedEntry@59.27:59.39CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java<9 <(E2Ã
\org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()OVERRIDEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java: :(02ı
Åorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()?fetchedEntry@59.27:59.39DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java; ;('2w
voidRETURN_TYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java: :(´
Åorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()?fetchedEntry@59.27:59.39VARIABLEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java; ;('"
typeOptional<BibEntry>"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("9780134685991")*fetchedEntry2~
java.util.OptionalTYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java; ;(2î
org.jabref.model.entry.BibEntryTYPE_ARGUMENTb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java; ;(2æ
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.java;2 ;(Cã$
dorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.authorsAreCorrectlyFormatted()METHODb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaA A(,"
isFinalfalse"ò
declarationStringÇ <br><mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">authorsAreCorrectlyFormatted</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*authorsAreCorrectlyFormatted2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaL L(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaK K(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaJ J(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaI I(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaH H(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaG G(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaF F(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaE E(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaD D(2≠
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaC C( 2æ
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaN2 N(C2Ñ
java.util.Optional.of(T)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaO O( 2º
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaB  B((2¥
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaJ J(+2Â
yorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.authorsAreCorrectlyFormatted()?bibEntry@66.17:66.25CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaO! O()2È
}org.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.authorsAreCorrectlyFormatted()?fetchedEntry@78.27:78.39CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaO, O(82»
Xorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.authorsAreCorrectlyFormatted()OVERRIDEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaA A(,2Ï
yorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.authorsAreCorrectlyFormatted()?bibEntry@66.17:66.25DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaB B(2
}org.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.authorsAreCorrectlyFormatted()?fetchedEntry@78.27:78.39DECLARATIONb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaN N('2w
voidRETURN_TYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaA A(Ê
yorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.authorsAreCorrectlyFormatted()?bibEntry@66.17:66.25VARIABLEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaB B("
typeBibEntry"
isFinalfalse"⁄
declarationStringƒ<mark class="modifier"> </mark>BibEntry <mark class="class-field">bibEntry</mark> = new BibEntry(StandardEntryType.Book).withCitationKey("9783662585856").withField(StandardField.TITLE, "Fundamentals of Business Process Management").withField(StandardField.PUBLISHER, "Springer Berlin Heidelberg").withField(StandardField.YEAR, "2019").withField(StandardField.AUTHOR, "Dumas, Marlon and Rosa, Marcello La and Mendling, Jan and Reijers, Hajo A.").withField(StandardField.DATE, "2019-02-01").withField(StandardField.PAGETOTAL, "560").withField(new UnknownField("ean")<mark class="modifier">,</mark> "9783662585856").withField(StandardField.ISBN, "3662585855").withField(StandardField.URL, "https://www.ebook.de/de/product/35805105/marlon_dumas_marcello_la_rosa_jan_mendling_hajo_a_reijers_fundamentals_of_business_process_management.html")*bibEntry2ã
org.jabref.model.entry.BibEntryTYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaB B(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaL L(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaK K(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaJ J(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaI I(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaH H(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaG G(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaF F(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaE E(2À
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaD D(2≠
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaC C( 2º
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaB  B((2¥
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaJ J(+£
}org.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.authorsAreCorrectlyFormatted()?fetchedEntry@78.27:78.39VARIABLEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaN N('"
typeOptional<BibEntry>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("3662585855")*fetchedEntry2~
java.util.OptionalTYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaN N(2î
org.jabref.model.entry.BibEntryTYPE_ARGUMENTb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaN N(2æ
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaN2 N(Cô
eorg.jabref.logic.importer.fetcher.isbntobibtex.EbookDeIsbnFetcherTest.searchForValidButNotFoundISBN()METHODb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaW W(-"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchForValidButNotFoundISBN</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*searchForValidButNotFoundISBN2æ
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaXA X(R2w
voidRETURN_TYPEb
Xsrc\test\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcherTest.javaW W(