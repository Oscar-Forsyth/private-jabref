
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaê
1org.jabref.logic.importer.fetcher.SpringerFetcherCLASSN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java' '(",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"–
declarationString∫<mark class="modifier">public </mark><mark class="modifier">class </mark>SpringerFetcher<mark class="modifier"><br>implements </mark>PagedSearchBasedParserFetcher, CustomizableKeyFetcher"
accesspublic*SpringerFetcher2œ
porg.jabref.logic.importer.fetcher.SpringerFetcher.SpringerFetcher(org.jabref.logic.importer.ImporterPreferences)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java4 4(2»
iorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java> >(42ú
;org.jabref.logic.importer.fetcher.SpringerFetcher.getName()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java§ §(2†
?org.jabref.logic.importer.fetcher.SpringerFetcher.getHelpPage()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java© ©()2ü
>org.jabref.logic.importer.fetcher.SpringerFetcher.getTestUrl()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÆ Æ(2‰
Çorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫ ∫(2Â
Éorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaƒ ƒ(.2û
=org.jabref.logic.importer.fetcher.SpringerFetcher.getParser()DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java– –(2©
Jorg.jabref.logic.importer.fetcher.SpringerFetcher?FETCHER_NAME@41.31:41.43DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java) )(+2£
Dorg.jabref.logic.importer.fetcher.SpringerFetcher?LOGGER@43.32:43.38DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java+  +(&2§
Eorg.jabref.logic.importer.fetcher.SpringerFetcher?API_URL@45.32:45.39DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java-  -('2§
Eorg.jabref.logic.importer.fetcher.SpringerFetcher?API_KEY@46.32:46.39DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java.  .('2µ
Vorg.jabref.logic.importer.fetcher.SpringerFetcher?TEST_URL_WITHOUT_API_KEY@48.32:48.56DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java0  0(82∞
Qorg.jabref.logic.importer.fetcher.SpringerFetcher?importerPreferences@50.38:50.57DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java2& 2(92ë
7org.jabref.logic.importer.PagedSearchBasedParserFetcherEXTENDN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java'( '(E2í
8org.jabref.logic.importer.fetcher.CustomizableKeyFetcherEXTENDN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java'G '(]ı
porg.jabref.logic.importer.fetcher.SpringerFetcher.SpringerFetcher(org.jabref.logic.importer.ImporterPreferences)CONSTRUCTORN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java4 4("é
declarationStringy<mark class="modifier">public </mark><mark class="method">SpringerFetcher</mark>(ImporterPreferences importerPreferences)*SpringerFetcher2›
Ñorg.jabref.logic.importer.fetcher.SpringerFetcher.SpringerFetcher(org.jabref.logic.importer.ImporterPreferences)!importerPreferencesCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java5# 5(62©
Qorg.jabref.logic.importer.fetcher.SpringerFetcher?importerPreferences@50.38:50.57CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java5 5( 2‚
Ñorg.jabref.logic.importer.fetcher.SpringerFetcher.SpringerFetcher(org.jabref.logic.importer.ImporterPreferences)!importerPreferences	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java4/ 4(B2ê
1org.jabref.logic.importer.fetcher.SpringerFetcherRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java4 4(Ï
Ñorg.jabref.logic.importer.fetcher.SpringerFetcher.SpringerFetcher(org.jabref.logic.importer.ImporterPreferences)!importerPreferences	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java4/ 4(B"
typeImporterPreferences"
isFinalfalse"<
declarationString'ImporterPreferences importerPreferences*importerPreferences2Ö
-org.jabref.logic.importer.ImporterPreferencesTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java4 4(.ä∏
iorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)METHODN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java> >(4"
isFinalfalse"º
declarationString¶<mark class="modifier">public </mark><mark class="modifier">static </mark>BibEntry <mark class="method">parseSpringerJSONtoBibtex</mark>(JSONObject springerJsonEntry)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeBibEntry*parseSpringerJSONtoBibtex2ß
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaJ J(2ß
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaN N(2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaP P(2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java^ ^(2ª
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java^8 ^(<2Ñ
,org.jabref.model.entry.field.Field.getName()CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javae, e(32Ñ
,org.jabref.model.entry.field.Field.getName()CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaf@ f(G2r
java.lang.String.isEmpty()CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javag g(!2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javah h("2§
Jorg.jabref.model.entry.BibEntry.addFile(org.jabref.model.entry.LinkedFile)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÜ" Ü()2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaí í(2Ç
(java.lang.String.split(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaì& ì(+2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaî î(2å
2org.jabref.model.entry.Month.getMonthByNumber(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaï* ï(:2Ü
,java.lang.Integer.parseInt(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaïC ï(K2û
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javañ ñ(2û
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaö/ ö(82¶
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaö ö(2á
-java.lang.String.startsWith(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaõ! õ(+2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaú ú(2y
java.lang.String.substring(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaúH ú(Q2Ç
*org.jabref.model.entry.BibEntry.BibEntry()CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaC C(%2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaV* V(52¶
Lorg.jabref.model.entry.LinkedFile.LinkedFile(java.net.URL, java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÜ. Ü(82”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaG G('2“
zorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?isbn@71.15:71.19CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaH9 H(=2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaJ J(2÷
~org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?nametype@68.14:68.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaK K(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaN N(2÷
~org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?nametype@68.14:68.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaO O(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaP P(2“
zorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?isbn@71.15:71.19CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaP/ P(32”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaT T(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaU  U(12œ
worg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?i@87.21:87.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaW W(2’
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?authors@85.22:85.29CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaW  W('2œ
worg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?i@87.21:87.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaW2 W(32’
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?authors@85.22:85.29CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaX X(2œ
worg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?i@87.21:87.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaX* X(+2Ÿ
Äorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?authorList@86.25:86.35CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaY Y(2’
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?authors@85.22:85.29CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaY# Y(*2œ
worg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?i@87.21:87.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaY9 Y(:2ú
Dorg.jabref.logic.importer.fetcher.SpringerFetcher?LOGGER@43.32:43.38CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java[ [(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java^ ^(2Ÿ
Äorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?authorList@86.25:86.35CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java^F ^(P2ú
Dorg.jabref.logic.importer.fetcher.SpringerFetcher?LOGGER@43.32:43.38CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java` `(2·
àorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?singleFieldStrings@64.16:64.34CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javad d(-2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javae e(!2’
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?field@100.19:100.24CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javae& e(+2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaf f(/2’
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?field@100.19:100.24CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaf: f(?2‘
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?text@102.23:102.27CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javag g(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javah h(2’
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?field@100.19:100.24CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javah# h((2‘
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?text@102.23:102.27CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javah* h(.2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javan n(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javan6 n(G2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javao o(!2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javao8 o(I2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javap p(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaq q()2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaqM q(^2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javas s(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javas4 s(E2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javax x(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javay y(2÷
~org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?nametype@68.14:68.22CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javay y(#2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javay% y(62”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java} }(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java~ ~(.2‘
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?urls@126.22:126.26CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java (2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÄ Ä(2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÄ2 Ä(C2÷
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?urls@126.22:126.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÇ Ç(2÷
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?data@130.29:130.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÉ2 É(62’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?url@131.31:131.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÑ Ñ(2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÜ Ü(!2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?url@131.31:131.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÜA Ü(D2û
Dorg.jabref.logic.importer.fetcher.SpringerFetcher?LOGGER@43.32:43.38CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaà à("2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?url@131.31:131.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaà= à(@2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaê ê(2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaë ë(+2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaí í(2÷
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?date@145.19:145.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaí/ í(32÷
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?date@145.19:145.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaì! ì(%2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaî î(2‹
Åorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?dateparts@147.21:147.30CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaî/ î(82‹
Åorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?dateparts@147.21:147.30CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaïL ï(U2◊
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?month@149.28:149.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javañ ñ(2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaö ö(2„
àorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?abstractContents@154.57:154.73CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaõ õ( 2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaú ú(2„
àorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?abstractContents@154.57:154.73CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaú7 ú(G2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java† †(2†
Forg.jabref.model.entry.BibEntry.setMonth(org.jabref.model.entry.Month)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javañ ñ(+2ÿ
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java>@ >(Q2Ë
àorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?singleFieldStrings@64.16:64.34DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java@ @("2⁄
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaC C(2›
~org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?nametype@68.14:68.22DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaD D(2Ÿ
zorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?isbn@71.15:71.19DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaG G(2‹
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?authors@85.22:85.29DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaU U(2‡
Äorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?authorList@86.25:86.35DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaV V(#2÷
worg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?i@87.21:87.22DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaW W(2‹
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?field@100.19:100.24DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javad d(2€
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?text@102.23:102.27DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaf f(2€
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?urls@126.22:126.26DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java~ ~(2‹
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?url@131.31:131.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÉ É("2›
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?date@145.19:145.23DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaë ë(2„
Åorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?dateparts@147.21:147.30DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaì ì(2ﬁ
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?month@149.28:149.33DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaï ï(!2›
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?data@130.29:130.33DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÇ Ç(!2⁄
yorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?e@135.55:135.56DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaá7 á(82Í
àorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?abstractContents@154.57:154.73DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaö9 ö(I2~
org.jabref.model.entry.BibEntryRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java> >(©
àorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?singleFieldStrings@64.16:64.34VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java@ @(""
typeField"
isFinalfalse"é
declarationString¯<mark class="modifier"> </mark>Field[] <mark class="class-field">singleFieldStrings</mark> = { StandardField.ISSN, StandardField.VOLUME, StandardField.ABSTRACT, StandardField.DOI, StandardField.TITLE, StandardField.NUMBER, StandardField.PUBLISHER }*singleFieldStrings2|
$org.jabref.model.entry.field.Field[]TYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java@ @(ˆ
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?entry@67.17:67.22VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaC C("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2w
org.jabref.model.entry.BibEntryTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaC C(2Ç
*org.jabref.model.entry.BibEntry.BibEntry()CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaC C(%Ê
~org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?nametype@68.14:68.22VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaD D("
typeField"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>Field <mark class="class-field">nametype</mark>*nametype2z
"org.jabref.model.entry.field.FieldTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaD D(«
zorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?isbn@71.15:71.19VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaG G("
typeString"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>String <mark class="class-field">isbn</mark> = springerJsonEntry.optString("isbn")*isbn2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaG G(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaG G('Ë
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?authors@85.22:85.29VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaU U("
type	JSONArray"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>JSONArray <mark class="class-field">authors</mark> = springerJsonEntry.getJSONArray("creators")*authors2s
kong.unirest.json.JSONArrayTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaU U(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaU  U(1Ë
Äorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?authorList@86.25:86.35VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaV V(#"
typeList<String>"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>List<String> <mark class="class-field">authorList</mark> = new ArrayList<>()*
authorList2f
java.util.ListTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaV V(2q
java.lang.StringTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaV V(2w
java.util.ArrayList.ArrayList()CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaV* V(5–
worg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?i@87.21:87.22VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaW W("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2[
intTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaW W(ﬂ
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?field@100.19:100.24VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javad d("
typeField"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>Field <mark class="class-field">field</mark>*field2z
"org.jabref.model.entry.field.FieldTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javad d(±
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?text@102.23:102.27VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaf f("
typeString"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>String <mark class="class-field">text</mark> = springerJsonEntry.getString(field.getName())*text2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaf f(2Ñ
,org.jabref.model.entry.field.Field.getName()CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaf@ f(G2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaf f(/2’
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?field@100.19:100.24CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaf: f(?‹
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?urls@126.22:126.26VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java~ ~("
type	JSONArray"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>JSONArray <mark class="class-field">urls</mark> = springerJsonEntry.optJSONArray("url")*urls2s
kong.unirest.json.JSONArrayTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java~ ~(2”
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java~ ~(.Œ
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?url@131.31:131.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÉ É(""
type
JSONObject"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>JSONObject <mark class="class-field">url</mark> = (JSONObject) data*url2v
kong.unirest.json.JSONObjectTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÉ É(2÷
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?data@130.29:130.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÉ2 É(6⁄
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?date@145.19:145.23VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaë ë("
typeString"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>String <mark class="class-field">date</mark> = springerJsonEntry.getString("publicationDate")*date2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaë ë(2’
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaë ë(+‘
Åorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?dateparts@147.21:147.30VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaì ì("
typeString"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>String[] <mark class="class-field">dateparts</mark> = date.split("-")*	dateparts2l
java.lang.String[]TYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaì ì(2Ç
(java.lang.String.split(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaì& ì(+2÷
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?date@145.19:145.23CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaì! ì(%ö	
}org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?month@149.28:149.33VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaï ï(!"
typeOptional<Month>"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>Optional<Month> <mark class="class-field">month</mark> = Month.getMonthByNumber(Integer.parseInt(dateparts[1]))*month2l
java.util.OptionalTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaï ï(2
org.jabref.model.entry.MonthTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaï ï(2å
2org.jabref.model.entry.Month.getMonthByNumber(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaï* ï(:2Ü
,java.lang.Integer.parseInt(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaïC ï(K2‹
Åorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?dateparts@147.21:147.30CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaïL ï(U∫
{org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)!springerJsonEntry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java>@ >(Q"
type
JSONObject"
isFinalfalse"1
declarationStringJSONObject springerJsonEntry*springerJsonEntry2t
kong.unirest.json.JSONObjectTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java>5 >(?û
|org.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?data@130.29:130.33VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÇ Ç(!"
type"
isFinalfalse"
declarationString data*data2TYPE≥
yorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?e@135.55:135.56VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaá7 á(8"
typeMalformedURLException"
isFinalfalse",
declarationStringMalformedURLException e*e2x
java.net.MalformedURLExceptionTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaá! á(6√
àorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)?abstractContents@154.57:154.73VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaö9 ö(I"
type"
isFinalfalse"&
declarationString abstractContents*abstractContents2TYPE⁄
;org.jabref.logic.importer.fetcher.SpringerFetcher.getName()METHODP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java§ §("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2§
Jorg.jabref.logic.importer.fetcher.SpringerFetcher?FETCHER_NAME@41.31:41.43CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java• •(2å
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java§ §(2å
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java§ §(2å
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java§ §(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java§ §(Î	
?org.jabref.logic.importer.fetcher.SpringerFetcher.getHelpPage()METHODP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java© ©()"
isFinalfalse"´
declarationStringï<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;HelpFile&gt; <mark class="method">getHelpPage</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<HelpFile>*getHelpPage2r
java.util.Optional.of(T)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java™ ™(2ê
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java© ©()2ê
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java© ©()2ê
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java© ©()2s
java.util.OptionalRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java© ©(2à
org.jabref.logic.help.HelpFileRETURN_TYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java© ©(È
>org.jabref.logic.importer.fetcher.SpringerFetcher.getTestUrl()METHODP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÆ Æ("
isFinalfalse"ò
declarationStringÇ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getTestUrl</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*
getTestUrl2∞
Vorg.jabref.logic.importer.fetcher.SpringerFetcher?TEST_URL_WITHOUT_API_KEY@48.32:48.56CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaØ Ø('2£
Eorg.jabref.logic.importer.fetcher.CustomizableKeyFetcher.getTestUrl()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÆ Æ(2q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÆ Æ(Ÿ)
Çorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)METHODP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫ ∫("
isFinalfalse"è
declarationString˘<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URL <mark class="method">getURLForQuery</mark>(QueryNode luceneQuery<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> pageNumber)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURL*getURLForQuery2v
java.util.Optional.orElse(T)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaæT æ(Z2£
Iorg.jabref.logic.importer.ImporterPreferences.getApiKey(java.lang.String)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaæ? æ(H2ï
;org.jabref.logic.importer.fetcher.SpringerFetcher.getName()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaæI æ(P2w
java.lang.String.valueOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaø, ø(32ô
?org.jabref.logic.importer.PagedSearchBasedFetcher.getPageSize()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaø4 ø(?2w
java.lang.String.valueOf(int)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java¿, ¿(32ô
?org.jabref.logic.importer.PagedSearchBasedFetcher.getPageSize()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java¿4 ¿(?2º
borg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformer.SpringerQueryTransformer()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaΩ) Ω(A2ü
Eorg.jabref.logic.importer.fetcher.SpringerFetcher?API_URL@45.32:45.39CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaº/ º(62ˆ
õorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@188.19:188.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaΩ Ω(2È
éorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQueryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaΩY Ω(d2ˆ
õorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@188.19:188.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaæ æ(2´
Qorg.jabref.logic.importer.fetcher.SpringerFetcher?importerPreferences@50.38:50.57CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaæ+ æ(>2ü
Eorg.jabref.logic.importer.fetcher.SpringerFetcher?API_KEY@46.32:46.39CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaæ[ æ(b2ˆ
õorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@188.19:188.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaø ø(2Ë
çorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumberCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaøD ø(N2ˆ
õorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@188.19:188.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java¿ ¿(2ˆ
õorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@188.19:188.29CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java¡ ¡(2Á
àorg.jabref.logic.importer.PagedSearchBasedParserFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫ ∫(2Ó
éorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQuery	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫( ∫(32Ì
çorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumber	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫9 ∫(C2˝
õorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@188.19:188.29DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaº º(2m
java.net.URLRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫ ∫(Ÿ
õorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)?uriBuilder@188.19:188.29VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaº º("
type
URIBuilder"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>URIBuilder <mark class="class-field">uriBuilder</mark> = new URIBuilder(API_URL)*
uriBuilder2Å
'org.apache.http.client.utils.URIBuilderTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaº º(2ü
Eorg.jabref.logic.importer.fetcher.SpringerFetcher?API_URL@45.32:45.39CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaº/ º(6‰
éorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!luceneQuery	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫( ∫(3"
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2ï
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫ ∫('∫
çorg.jabref.logic.importer.fetcher.SpringerFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, int)!pageNumber	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫9 ∫(C"
typeint"
isFinalfalse"A
declarationString,<mark class="modifier">int</mark> pageNumber*
pageNumber2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∫5 ∫(8ò@
Éorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)METHODP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaƒ ƒ(."
isFinalfalse"°
declarationStringã<mark class="modifier">private </mark>String <mark class="method">constructComplexQueryString</mark>(ComplexSearchQuery complexSearchQuery)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*constructComplexQueryString2ú
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∆( ∆(/2õ
Aorg.jabref.logic.importer.fetcher.ComplexSearchQuery.getAuthors()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∆ ∆(%2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∆F ∆(I2ú
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java«- «(42†
Forg.jabref.logic.importer.fetcher.ComplexSearchQuery.getTitlePhrases()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java« «(*2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java«J «(M2û
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java»( »(12õ
Aorg.jabref.logic.importer.fetcher.ComplexSearchQuery.getJournal()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java» »(%2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java»I »(L2û
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java +  (42û
Dorg.jabref.logic.importer.fetcher.ComplexSearchQuery.getSingleYear()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java   ((2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java I  (L2í
8java.util.List.addAll(java.util.Collection<? extends E>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÀ À(2ß
Morg.jabref.logic.importer.fetcher.ComplexSearchQuery.getDefaultFieldPhrases()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÀ. À(D2Ω
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÃ Ã(2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java≈' ≈(22Ò
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)!complexSearchQueryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∆ ∆(2¯
ùorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?searchTerms@197.21:197.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∆: ∆(E2Û
òorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?author@198.48:198.54CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∆T ∆(Z2Ò
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)!complexSearchQueryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java« «(2¯
ùorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?searchTerms@197.21:197.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java«> «(I2Ú
óorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?title@199.53:199.58CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java«Y «(^2Ò
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)!complexSearchQueryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java» »(2¯
ùorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?searchTerms@197.21:197.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java»= »(H2Ù
ôorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?journal@200.50:200.57CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java»Z »(a2Ò
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)!complexSearchQueryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java   (2¯
ùorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?searchTerms@197.21:197.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java =  (H2Ò
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?year@202.53:202.57CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java W  ([2¯
ùorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?searchTerms@197.21:197.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÀ À(2Ò
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)!complexSearchQueryCALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÀ À(-2¯
ùorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?searchTerms@197.21:197.32CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÃ$ Ã(/2ˆ
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)!complexSearchQuery	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaƒB ƒ(T2ˇ
ùorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?searchTerms@197.21:197.32DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java≈ ≈( 2˙
òorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?author@198.48:198.54DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∆0 ∆(62˘
óorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?title@199.53:199.58DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java«5 «(:2˚
ôorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?journal@200.50:200.57DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java»2 »(92¯
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?year@202.53:202.57DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java 5  (92q
java.lang.StringRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaƒ ƒ(è
ùorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?searchTerms@197.21:197.32VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java≈ ≈( "
typeList<String>"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>List<String> <mark class="class-field">searchTerms</mark> = new ArrayList<>()*searchTerms2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java≈ ≈(2s
java.lang.StringTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java≈ ≈(2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java≈' ≈(2Ö
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)!complexSearchQuery	PARAMETERP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaƒB ƒ(T"
typeComplexSearchQuery"
isFinalfalse":
declarationString%ComplexSearchQuery complexSearchQuery*complexSearchQuery2é
4org.jabref.logic.importer.fetcher.ComplexSearchQueryTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaƒ/ ƒ(Aø
òorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?author@198.48:198.54VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java∆0 ∆(6"
type"
isFinalfalse"
declarationString author*author2TYPEº
óorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?title@199.53:199.58VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java«5 «(:"
type"
isFinalfalse"
declarationString title*title2TYPE¬
ôorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?journal@200.50:200.57VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java»2 »(9"
type"
isFinalfalse"
declarationString journal*journal2TYPEπ
ñorg.jabref.logic.importer.fetcher.SpringerFetcher.constructComplexQueryString(org.jabref.logic.importer.fetcher.ComplexSearchQuery)?year@202.53:202.57VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java 5  (9"
type"
isFinalfalse"
declarationString year*year2TYPE¸+
=org.jabref.logic.importer.fetcher.SpringerFetcher.getParser()METHODP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java– –("
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Parser <mark class="method">getParser</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParser*	getParser2¶
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“] “(d2x
java.io.BufferedReader.lines()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“U “(Z2ï
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“p “(w2√
iorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java⁄% ⁄(>2o
java.util.List.add(E)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java€ €(2è
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“" “(02ö
@java.io.InputStreamReader.InputStreamReader(java.io.InputStream)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“5 “(F2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java’) ’(42±
Worg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?inputStream@209.15:209.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“G “(R2Æ
Torg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?response@210.19:210.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java”3 ”(;2∞
Vorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?jsonObject@211.23:211.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java÷ ÷(2∞
Vorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?jsonObject@211.23:211.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java◊$ ◊(.2ß
Morg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?i@216.25:216.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÿ  ÿ(!2≠
Sorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?results@215.26:215.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÿ$ ÿ(+2ß
Morg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?i@216.25:216.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÿ6 ÿ(72≠
Sorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?results@215.26:215.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaŸ+ Ÿ(22ß
Morg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?i@216.25:216.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaŸA Ÿ(B2Ø
Uorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?jsonEntry@217.31:217.40CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java⁄? ⁄(H2≠
Sorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?entries@213.27:213.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java€ €(2´
Qorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?entry@218.29:218.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java€  €(%2≠
Sorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?entries@213.27:213.34CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaﬂ ﬂ(2ú
>org.jabref.logic.importer.SearchBasedParserFetcher.getParser()OVERRIDEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java– –(2µ
Torg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?response@210.19:210.27DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“ “(2∑
Vorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?jsonObject@211.23:211.33DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java” ”(!2¥
Sorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?entries@213.27:213.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java’ ’("2¥
Sorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?results@215.26:215.33DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java◊ ◊(!2Æ
Morg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?i@216.25:216.26DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÿ ÿ(2∂
Uorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?jsonEntry@217.31:217.40DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaŸ Ÿ((2≤
Qorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?entry@218.29:218.34DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java⁄ ⁄("2∏
Worg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?inputStream@209.15:209.26DECLARATIONP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java— —(2Å
 org.jabref.logic.importer.ParserRETURN_TYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java– –(π
Torg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?response@210.19:210.27VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“ “("
typeString"
isFinalfalse"Œ
declarationString∏<mark class="modifier"> </mark>String <mark class="class-field">response</mark> = new BufferedReader(new InputStreamReader(inputStream)).lines().collect(Collectors.joining(OS.NEWLINE))*response2j
java.lang.StringTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“ “(2¶
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“] “(d2x
java.io.BufferedReader.lines()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“U “(Z2ï
;java.util.stream.Collectors.joining(java.lang.CharSequence)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“p “(w2è
5java.io.BufferedReader.BufferedReader(java.io.Reader)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“" “(02ö
@java.io.InputStreamReader.InputStreamReader(java.io.InputStream)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“5 “(F2±
Worg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?inputStream@209.15:209.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java“G “(Ró
Vorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?jsonObject@211.23:211.33VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java” ”(!"
type
JSONObject"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>JSONObject <mark class="class-field">jsonObject</mark> = new JSONObject(response)*
jsonObject2v
kong.unirest.json.JSONObjectTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java” ”(2Æ
Torg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?response@210.19:210.27CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java”3 ”(;œ
Sorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?entries@213.27:213.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java’ ’(""
typeList<BibEntry>"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = new ArrayList<>()*entries2h
java.util.ListTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java’ ’(2Ç
org.jabref.model.entry.BibEntryTYPE_ARGUMENTP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java’ ’(2y
java.util.ArrayList.ArrayList()CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java’) ’(4ó
Sorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?results@215.26:215.33VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java◊ ◊(!"
type	JSONArray"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>JSONArray <mark class="class-field">results</mark> = jsonObject.getJSONArray("records")*results2u
kong.unirest.json.JSONArrayTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java◊ ◊(2∞
Vorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?jsonObject@211.23:211.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java◊$ ◊(.™
Morg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?i@216.25:216.26VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÿ ÿ("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2]
intTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaÿ ÿ(Ω
Uorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?jsonEntry@217.31:217.40VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaŸ Ÿ(("
type
JSONObject"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>JSONObject <mark class="class-field">jsonEntry</mark> = results.getJSONObject(i)*	jsonEntry2v
kong.unirest.json.JSONObjectTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaŸ Ÿ(2≠
Sorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?results@215.26:215.33CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaŸ+ Ÿ(22ß
Morg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?i@216.25:216.26CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.javaŸA Ÿ(B⁄
Qorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?entry@218.29:218.34VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java⁄ ⁄(""
typeBibEntry"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = parseSpringerJSONtoBibtex(jsonEntry)*entry2y
org.jabref.model.entry.BibEntryTYPEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java⁄ ⁄(2√
iorg.jabref.logic.importer.fetcher.SpringerFetcher.parseSpringerJSONtoBibtex(kong.unirest.json.JSONObject)CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java⁄% ⁄(>2Ø
Uorg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?jsonEntry@217.31:217.40CALLP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java⁄? ⁄(Há
Worg.jabref.logic.importer.fetcher.SpringerFetcher.getParser()?inputStream@209.15:209.26VARIABLEP
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java— —("
type"
isFinalfalse"!
declarationString inputStream*inputStream2TYPE©
Jorg.jabref.logic.importer.fetcher.SpringerFetcher?FETCHER_NAME@41.31:41.43VALUEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java) )(+"
isFinaltrue"
typeString"∆
declarationString∞<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FETCHER_NAME</mark> = "Springer";"
isStatictrue"
accesspublic*FETCHER_NAME2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java) )(Ω
Dorg.jabref.logic.importer.fetcher.SpringerFetcher?LOGGER@43.32:43.38VALUEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java+  +(&"
isFinaltrue"
typeLogger"Â
declarationStringœ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(SpringerFetcher.class);"
isStatictrue"
accessprivate*LOGGER2h
org.slf4j.LoggerTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java+ +(ø
Eorg.jabref.logic.importer.fetcher.SpringerFetcher?API_URL@45.32:45.39VALUEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java-  -('"
isFinaltrue"
typeString"Â
declarationStringœ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">API_URL</mark> = "https://api.springernature.com/meta/v1/json";"
isStatictrue"
accessprivate*API_URL2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java- -(º
Eorg.jabref.logic.importer.fetcher.SpringerFetcher?API_KEY@46.32:46.39VALUEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java.  .('"
isFinaltrue"
typeString"‹
declarationString∆<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">API_KEY</mark> = new BuildInfo().springerNatureAPIKey;"
isStatictrue"
accessprivate*API_KEY2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java. .(2É
+org.jabref.logic.util.BuildInfo.BuildInfo()CALLN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java.. .(7è
Vorg.jabref.logic.importer.fetcher.SpringerFetcher?TEST_URL_WITHOUT_API_KEY@48.32:48.56VALUEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java0  0(8"
isFinaltrue"
typeString"ì
declarationString˝<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">TEST_URL_WITHOUT_API_KEY</mark> =doi:10.1007/s11276-008-0131-4s=1' will respond faster
private static final String TEST_URL_WITHOUT_API_KEY = "https://api.springernature.com/meta/v1/json?q=doi:10.1007/s11276-008-0131-4s=1&p=1&api_key=";"
isStatictrue"
accessprivate*TEST_URL_WITHOUT_API_KEY2h
java.lang.StringTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java0 0(∆
Qorg.jabref.logic.importer.fetcher.SpringerFetcher?importerPreferences@50.38:50.57VALUEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java2& 2(9"
isFinaltrue"
typeImporterPreferences"®
declarationStringí<mark class="modifier">private </mark><mark class="modifier">final </mark>ImporterPreferences <mark class="class-field">importerPreferences</mark>"
isStaticfalse"
accessprivate*importerPreferences2Ö
-org.jabref.logic.importer.ImporterPreferencesTYPEN
Dsrc\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java2 2(%