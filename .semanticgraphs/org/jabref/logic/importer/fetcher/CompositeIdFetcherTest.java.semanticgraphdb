
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaç
8org.jabref.logic.importer.fetcher.CompositeIdFetcherTestCLASSU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"†
declarationStringä<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>CompositeIdFetcherTest"
accesspackage_private*CompositeIdFetcherTest2“
lorg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier()DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java#$ #(U2¶
@org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.setUp()DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javao	 o(2⁄
torg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsEmptyForInvalidId(java.lang.String)DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javax	 x(22ñ
Øorg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~	 ~(:2Ω
Worg.jabref.logic.importer.fetcher.CompositeIdFetcherTest?compositeIdFetcher@33.31:33.49DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java! !(1ˇG
lorg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier()METHODU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java#$ #(U"
isFinalfalse"«
declarationString±<mark class="modifier">public </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">performSearchByIdReturnsCorrectEntryForIdentifier</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeStream<Arguments>*1performSearchByIdReturnsCorrectEntryForIdentifier2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java<! <(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java;! ;(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java:! :(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java9! 9(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java8! 8(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java7! 7(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java6! 6(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java5! 5(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java4! 4(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java3! 3(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java2! 2(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java1! 1(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java0! 0(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java/! /(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java.! .(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java-! -(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java,! ,(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java+! +(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java*! *(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java)! )(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java(! ((*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java[! [(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaZ! Z(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaY! Y(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaX! X(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaW! W(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaV! V(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaU! U(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaT! T(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaS! S(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaR! R(*2†
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javah! h(02æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javag! g(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaf! f(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javae! e(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javad! d(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javac! c(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javab! b(*2æ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaa! a(*2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java' '($2ß
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java</ <(;2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaQ Q($2ß
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaY/ Y(;2Ø
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java` `($2}
java.util.stream.StreamRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java# #(2ö
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java# #("ä
@org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.setUp()METHODU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javao	 o("
isFinalfalse"¯
declarationString‚<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2≈
forg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.setUp()?importFormatPreferences@112.32:112.55CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javar r($2∂
Worg.jabref.logic.importer.fetcher.CompositeIdFetcherTest?compositeIdFetcher@33.31:33.49CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javas s(2≈
forg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.setUp()?importFormatPreferences@112.32:112.55CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javas4 s(K2Ã
forg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.setUp()?importFormatPreferences@112.32:112.55DECLARATIONU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javap  p(72j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javao o(◊
forg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.setUp()?importFormatPreferences@112.32:112.55VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javap  p(7"
typeImportFormatPreferences"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark> = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS)*importFormatPreferences2v
ImportFormatPreferencesTYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javap p(˜
torg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsEmptyForInvalidId(java.lang.String)METHODU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javax	 x(2"
isFinalfalse"‚
declarationStringÃ <br><mark class="annotation">@ValueSource(strings</mark> = "arZiv:2110.02957") <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">performSearchByIdReturnsEmptyForInvalidId</mark>(String groundInvalidArXivId)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*)performSearchByIdReturnsEmptyForInvalidId2y
java.util.Optional.empty()CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javay y(#2Ø
Porg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javay: y(K2∂
Worg.jabref.logic.importer.fetcher.CompositeIdFetcherTest?compositeIdFetcher@33.31:33.49CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javay' y(92È
âorg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsEmptyForInvalidId(java.lang.String)!groundInvalidArXivIdCALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javayL y(`2Ó
âorg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsEmptyForInvalidId(java.lang.String)!groundInvalidArXivId	PARAMETERU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javax: x(N2j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javax x(…
âorg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsEmptyForInvalidId(java.lang.String)!groundInvalidArXivId	PARAMETERU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javax: x(N"
typeString"
isFinalfalse"0
declarationStringString groundInvalidArXivId*groundInvalidArXivId2o
java.lang.StringTYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javax3 x(9¸
Øorg.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)METHODU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~	 ~(:"
isFinalfalse"Ï
declarationString÷ = "{index} {0}") <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">performSearchByIdReturnsCorrectEntryForIdentifier</mark>(String name<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry bibEntry<mark class="modifier"><mark class="modifier">,</mark></mark> String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*1performSearchByIdReturnsCorrectEntryForIdentifier2w
java.util.Optional.of(T)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java ( 2Ø
Porg.jabref.logic.importer.CompositeIdFetcher.performSearchById(java.lang.String)CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java? (P2ò
∏org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)!bibEntryCALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java! ()2∂
Worg.jabref.logic.importer.fetcher.CompositeIdFetcherTest?compositeIdFetcher@33.31:33.49CALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java, (>2ö
∫org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)!identifierCALLU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.javaQ ([2ô
¥org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)!name	PARAMETERU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~B ~(F2ù
∏org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)!bibEntry	PARAMETERU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~Q ~(Y2ü
∫org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)!identifier	PARAMETERU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~b ~(l2j
voidRETURN_TYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~ ~(‘
¥org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)!name	PARAMETERU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~B ~(F"
typeString"
isFinalfalse" 
declarationStringString name*name2o
java.lang.StringTYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~; ~(AÛ
∏org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)!bibEntry	PARAMETERU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~Q ~(Y"
typeBibEntry"
isFinalfalse"&
declarationStringBibEntry bibEntry*bibEntry2~
org.jabref.model.entry.BibEntryTYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~H ~(PÊ
∫org.jabref.logic.importer.fetcher.CompositeIdFetcherTest.performSearchByIdReturnsCorrectEntryForIdentifier(java.lang.String, org.jabref.model.entry.BibEntry, java.lang.String)!identifier	PARAMETERU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~b ~(l"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2o
java.lang.StringTYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java~[ ~(a¥
Worg.jabref.logic.importer.fetcher.CompositeIdFetcherTest?compositeIdFetcher@33.31:33.49VARIABLEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java! !(1"
isFinalfalse"
typeCompositeIdFetcher"Å
declarationStringl<mark class="modifier">private </mark>CompositeIdFetcher <mark class="class-field">compositeIdFetcher</mark>"
isStaticfalse"
accessprivate*compositeIdFetcher2ã
,org.jabref.logic.importer.CompositeIdFetcherTYPEU
Ksrc\test\java\org\jabref\logic\importer\fetcher\CompositeIdFetcherTest.java! !(