
8src\main\java\org\jabref\logic\importer\fetcher\ACS.javaﬁ
%org.jabref.logic.importer.fetcher.ACSCLASSB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"û
declarationStringà<mark class="modifier">public </mark><mark class="modifier">class </mark>ACS<mark class="modifier"><br>implements </mark>FulltextFetcher"
accesspublic*ACS2¶
Sorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)DECLARATIONB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java% %(%2à
5org.jabref.logic.importer.fetcher.ACS.getTrustLevel()DECLARATIONB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java< <(#2ã
8org.jabref.logic.importer.fetcher.ACS?LOGGER@22.32:22.38DECLARATIONB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java  (&2ã
8org.jabref.logic.importer.fetcher.ACS?SOURCE@24.32:24.38DECLARATIONB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java  (&2w
)org.jabref.logic.importer.FulltextFetcherEXTENDB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java (+ë(
Sorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)METHODB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java% %(%"
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;URL&gt; <mark class="method">findFullText</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<URL>*findFullText2o
#java.util.Objects.requireNonNull(T)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java& &(2π
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java)> )(E2ò
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java)" )(*2j
java.util.Optional.isPresent()CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java+ +(2f
java.util.Optional.empty()CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java, ,(!2{
/java.lang.String.formatted(java.lang.Object...)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/ /((2z
.org.jabref.model.entry.identifier.DOI.getDOI()CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/3 /(92d
java.util.Optional.get()CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/- /(02d
java.util.Optional.of(T)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java6 6(2ç
Ajava.lang.String.replaceFirst(java.lang.String, java.lang.String)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java6. 6(:2f
java.util.Optional.empty()CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java8 8(2n
"java.net.URL.URL(java.lang.String)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java6# 6(&2•
Yorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)!entryCALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java& &($2•
Yorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)!entryCALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java) )(!2Ø
corg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?doi@41.22:41.25CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java+ +(2Ñ
8org.jabref.logic.importer.fetcher.ACS?SOURCE@24.32:24.38CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/ /(2Ø
corg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?doi@41.22:41.25CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/) /(,2≤
forg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?source@47.15:47.21CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java1& 1(,2∞
dorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?html@49.17:49.21CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java2 2(2∞
dorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?link@50.16:50.20CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java4 4(2Ñ
8org.jabref.logic.importer.fetcher.ACS?LOGGER@22.32:22.38CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java5 5(2≤
forg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?source@47.15:47.21CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java6' 6(-2â
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java)F )(P2ß
Worg.jabref.logic.importer.FulltextFetcher.findFullText(org.jabref.model.entry.BibEntry)OVERRIDEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java% %(%2™
Yorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java%/ %(42∂
corg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?doi@41.22:41.25DECLARATIONB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java) )(2π
forg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?source@47.15:47.21DECLARATIONB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/ /(2∑
dorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?html@49.17:49.21DECLARATIONB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java1 1(2∑
dorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?link@50.16:50.20DECLARATIONB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java2 2(2e
java.util.OptionalRETURN_TYPEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java% %(2h
java.net.URLRETURN_TYPE_ARGUMENTB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java% %(Í	
corg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?doi@41.22:41.25VARIABLEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java) )("
typeOptional<DOI>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = entry.getField(StandardField.DOI).flatMap(DOI::parse)*doi2^
java.util.OptionalTYPEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java) )(2z
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java) )(2π
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java)> )(E2ò
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java)" )(*2•
Yorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)!entryCALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java) )(!2â
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java)F )(P‚
forg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?source@47.15:47.21VARIABLEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/ /("
typeString"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>String <mark class="class-field">source</mark> = SOURCE.formatted(doi.get().getDOI())*source2\
java.lang.StringTYPEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/ /(2{
/java.lang.String.formatted(java.lang.Object...)CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/ /((2z
.org.jabref.model.entry.identifier.DOI.getDOI()CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/3 /(92d
java.util.Optional.get()CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/- /(02Ñ
8org.jabref.logic.importer.fetcher.ACS?SOURCE@24.32:24.38CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/ /(2Ø
corg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?doi@41.22:41.25CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java/) /(,î
dorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?html@49.17:49.21VARIABLEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java1 1("
typeDocument"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>Document <mark class="class-field">html</mark> = Jsoup.connect(source).ignoreHttpErrors(true).get()*html2d
org.jsoup.nodes.DocumentTYPEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java1 1(2≤
forg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?source@47.15:47.21CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java1& 1(,É
dorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?link@50.16:50.20VARIABLEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java2 2("
typeElement"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>Element <mark class="class-field">link</mark> = html.select("a.button_primary").first()*link2c
org.jsoup.nodes.ElementTYPEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java2 2(2∞
dorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)?html@49.17:49.21CALLB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java2 2(Á
Yorg.jabref.logic.importer.fetcher.ACS.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java%/ %(4"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2k
org.jabref.model.entry.BibEntryTYPEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java%& %(.°
5org.jabref.logic.importer.fetcher.ACS.getTrustLevel()METHODB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java< <(#"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>TrustLevel <mark class="method">getTrustLevel</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
TrustLevel*getTrustLevel2â
9org.jabref.logic.importer.FulltextFetcher.getTrustLevel()OVERRIDEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java< <(#2
,org.jabref.logic.importer.fetcher.TrustLevelRETURN_TYPEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java< <(ç
8org.jabref.logic.importer.fetcher.ACS?LOGGER@22.32:22.38VALUEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java  (&"
isFinaltrue"
typeLogger"Ÿ
declarationString√<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(ACS.class);"
isStatictrue"
accessprivate*LOGGER2\
org.slf4j.LoggerTYPEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java (å
8org.jabref.logic.importer.fetcher.ACS?SOURCE@24.32:24.38VALUEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java  (&"
isFinaltrue"
typeString"ÿ
declarationString¬<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">SOURCE</mark> = "https://pubs.acs.org/doi/abs/%s";"
isStatictrue"
accessprivate*SOURCE2\
java.lang.StringTYPEB
8src\main\java\org\jabref\logic\importer\fetcher\ACS.java (