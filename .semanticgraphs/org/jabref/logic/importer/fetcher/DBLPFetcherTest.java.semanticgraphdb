
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java•
1org.jabref.logic.importer.fetcher.DBLPFetcherTestCLASSN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"ü
declarationStringâ<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>DBLPFetcherTest"
accesspublic*DBLPFetcherTest2ò
9org.jabref.logic.importer.fetcher.DBLPFetcherTest.setUp()DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (2¢
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntry()DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java/ /(2∑
Xorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntryUsingComplexOperators()DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java8 8(42û
?org.jabref.logic.importer.fetcher.DBLPFetcherTest.findNothing()DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java@ @(2®
Iorg.jabref.logic.importer.fetcher.DBLPFetcherTest?dblpFetcher@23.24:23.35DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (#2¢
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (™'
9org.jabref.logic.importer.fetcher.DBLPFetcherTest.setUp()METHODN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2ß
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (2ò
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java   (2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java! !(2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java# #(2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java$ $(2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java% %(2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java& &(2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java' '(2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java( ((2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java* *(2∂
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java+ +(2Ç
*org.jabref.model.entry.BibEntry.BibEntry()CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (2†
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java* *('2†
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java+ +('2°
Iorg.jabref.logic.importer.fetcher.DBLPFetcherTest?dblpFetcher@23.24:23.35CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java   (2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java! !(2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java# #(2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java$ $(2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java% %(2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java& &(2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java' '(2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java( ((2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java* *(2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java+ +(2c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (≤
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntry()METHODN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java/ /("
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">findSingleEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*findSingleEntry2§
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2, 2(92~
&java.util.Collections.singletonList(T)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java4! 4(.2°
Iorg.jabref.logic.importer.fetcher.DBLPFetcherTest?dblpFetcher@23.24:23.35CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2  2(+2≠
Uorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntry()?query@49.15:49.20CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2: 2(?2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java4/ 4(42Æ
Vorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntry()?result@50.23:50.29CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java47 4(=2¥
Uorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntry()?query@49.15:49.20DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java1 1(2µ
Vorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntry()?result@50.23:50.29DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2 2(2c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java/ /(Ü
Uorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntry()?query@49.15:49.20VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java1 1("
typeString"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>String <mark class="class-field">query</mark> = "Process Engine Benchmarking with Betsy in the Context of \"{ISO/IEC}\" Quality Standards"*query2h
java.lang.StringTYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java1 1(⁄
Vorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntry()?result@50.23:50.29VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2 2("
typeList<BibEntry>"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = dblpFetcher.performSearch(query)*result2f
java.util.ListTYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2 2(2Ä
org.jabref.model.entry.BibEntryTYPE_ARGUMENTN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2 2(2§
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2, 2(92°
Iorg.jabref.logic.importer.fetcher.DBLPFetcherTest?dblpFetcher@23.24:23.35CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2  2(+2≠
Uorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntry()?query@49.15:49.20CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java2: 2(?≈
Xorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntryUsingComplexOperators()METHODN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java8 8(4"
isFinalfalse"û
declarationStringà<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">findSingleEntryUsingComplexOperators</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*$findSingleEntryUsingComplexOperators2§
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java:, :(92~
&java.util.Collections.singletonList(T)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java<! <(.2°
Iorg.jabref.logic.importer.fetcher.DBLPFetcherTest?dblpFetcher@23.24:23.35CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java:  :(+2¬
jorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntryUsingComplexOperators()?query@57.15:57.20CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java:: :(?2õ
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java</ <(42√
korg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntryUsingComplexOperators()?result@58.23:58.29CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java<7 <(=2…
jorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntryUsingComplexOperators()?query@57.15:57.20DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java9 9(2 
korg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntryUsingComplexOperators()?result@58.23:58.29DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java: :(2c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java8 8(„
jorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntryUsingComplexOperators()?query@57.15:57.20VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java9 9("
typeString"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark>String <mark class="class-field">query</mark> = "geiger harrer betsy$ softw.trends"*query2h
java.lang.StringTYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java9 9(Ñ	
korg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntryUsingComplexOperators()?result@58.23:58.29VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java: :("
typeList<BibEntry>"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">result</mark> = dblpFetcher.performSearch(query)*result2f
java.util.ListTYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java: :(2Ä
org.jabref.model.entry.BibEntryTYPE_ARGUMENTN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java: :(2§
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java:, :(92°
Iorg.jabref.logic.importer.fetcher.DBLPFetcherTest?dblpFetcher@23.24:23.35CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java:  :(+2¬
jorg.jabref.logic.importer.fetcher.DBLPFetcherTest.findSingleEntryUsingComplexOperators()?query@57.15:57.20CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java:: :(?¨
?org.jabref.logic.importer.fetcher.DBLPFetcherTest.findNothing()METHODN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java@ @("
isFinalfalse"˛
declarationStringË<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">findNothing</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*findNothing2y
!java.util.Collections.emptyList()CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.javaA! A(*2§
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.javaA: A(G2°
Iorg.jabref.logic.importer.fetcher.DBLPFetcherTest?dblpFetcher@23.24:23.35CALLN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.javaA. A(92c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java@ @(¸
Iorg.jabref.logic.importer.fetcher.DBLPFetcherTest?dblpFetcher@23.24:23.35VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (#"
isFinalfalse"
typeDBLPFetcher"s
declarationString^<mark class="modifier">private </mark>DBLPFetcher <mark class="class-field">dblpFetcher</mark>"
isStaticfalse"
accessprivate*dblpFetcher2Ö
-org.jabref.logic.importer.fetcher.DBLPFetcherTYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (’
Corg.jabref.logic.importer.fetcher.DBLPFetcherTest?entry@24.21:24.26VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java ("
isFinalfalse"
typeBibEntry"j
declarationStringU<mark class="modifier">private </mark>BibEntry <mark class="class-field">entry</mark>"
isStaticfalse"
accessprivate*entry2w
org.jabref.model.entry.BibEntryTYPEN
Dsrc\test\java\org\jabref\logic\importer\fetcher\DBLPFetcherTest.java (