
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÎ
*org.jabref.logic.importer.fetcher.IEEETestCLASSG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"˜
declarationString·<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>IEEETest<mark class="modifier"><br>implements </mark>SearchBasedFetcherCapabilityTest, PagedSearchFetcherTest"
accesspackage_private*IEEETest2ä
2org.jabref.logic.importer.fetcher.IEEETest.setUp()DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java2	 2(2é
6org.jabref.logic.importer.fetcher.IEEETest.findByDOI()DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java>	 >(2ñ
>org.jabref.logic.importer.fetcher.IEEETest.findByDocumentUrl()DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaE	 E(2é
6org.jabref.logic.importer.fetcher.IEEETest.findByURL()DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaL	 L(2ë
9org.jabref.logic.importer.fetcher.IEEETest.findByOldURL()DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaS	 S(2ó
?org.jabref.logic.importer.fetcher.IEEETest.findByDOIButNotURL()DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaZ	 Z(2í
:org.jabref.logic.importer.fetcher.IEEETest.notFoundByURL()DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javab	 b(2í
:org.jabref.logic.importer.fetcher.IEEETest.notFoundByDOI()DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javah	 h(2¢
Jorg.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javan	 n(&2£
Iorg.jabref.logic.importer.fetcher.IEEETest.searchByPlainQueryFindsEntry()DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÑ	 Ñ(%2§
Jorg.jabref.logic.importer.fetcher.IEEETest.searchByQuotedQueryFindsEntry()DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaå	 å(&2ë
7org.jabref.logic.importer.fetcher.IEEETest.getFetcher()DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaî î((2ï
;org.jabref.logic.importer.fetcher.IEEETest.getTestAuthors()DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaô ô(&2ï
;org.jabref.logic.importer.fetcher.IEEETest.getTestJournal()DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaû û( 2ñ
<org.jabref.logic.importer.fetcher.IEEETest.getPagedFetcher()DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java£# £(22ù
Eorg.jabref.logic.importer.fetcher.IEEETest?IGOR_NEWCOMERS@29.27:29.41DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java ()2ñ
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java. .(2î
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java/ /(2ï
Borg.jabref.logic.importer.fetcher.SearchBasedFetcherCapabilityTestEXTENDG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java (:2ã
8org.jabref.logic.importer.fetcher.PagedSearchFetcherTestEXTENDG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java< (R¶
2org.jabref.logic.importer.fetcher.IEEETest.setUp()METHODG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java2	 2("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2ã
:org.jabref.logic.importer.ImporterPreferences.getApiKeys()CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java7! 7(+2{
*org.jabref.model.entry.BibEntry.BibEntry()CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java: :(2ß
Vorg.jabref.logic.importer.fetcher.IEEETest.setUp()?importFormatPreferences@51.32:51.55CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java4 4($2£
Rorg.jabref.logic.importer.fetcher.IEEETest.setUp()?importerPreferences@54.28:54.47CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java7 7( 2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java9 9(2ß
Vorg.jabref.logic.importer.fetcher.IEEETest.setUp()?importFormatPreferences@51.32:51.55CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java9 9(22£
Rorg.jabref.logic.importer.fetcher.IEEETest.setUp()?importerPreferences@54.28:54.47CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java94 9(G2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java: :(2Æ
Vorg.jabref.logic.importer.fetcher.IEEETest.setUp()?importFormatPreferences@51.32:51.55DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java3  3(72™
Rorg.jabref.logic.importer.fetcher.IEEETest.setUp()?importerPreferences@54.28:54.47DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java6 6(/2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java2 2(´
Vorg.jabref.logic.importer.fetcher.IEEETest.setUp()?importFormatPreferences@51.32:51.55VARIABLEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java3  3(7"
typeImportFormatPreferences"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark> = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS)*importFormatPreferences2h
ImportFormatPreferencesTYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java3 3(ç
Rorg.jabref.logic.importer.fetcher.IEEETest.setUp()?importerPreferences@54.28:54.47VARIABLEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java6 6(/"
typeImporterPreferences"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>ImporterPreferences <mark class="class-field">importerPreferences</mark> = mock(ImporterPreferences.class)*importerPreferences2~
-org.jabref.logic.importer.ImporterPreferencesTYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java6 6(∫
6org.jabref.logic.importer.fetcher.IEEETest.findByDOI()METHODG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java>	 >("
isFinalfalse"ˆ
declarationString‡<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">findByDOI</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*	findByDOI2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java? ?(2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java@ @( 2•
Torg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaA A($2s
"java.net.URL.URL(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java@% @((2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java? ?(2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaA A(2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaA% A(*2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java> >(“
>org.jabref.logic.importer.fetcher.IEEETest.findByDocumentUrl()METHODG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaE	 E("
isFinalfalse"˛
declarationStringË<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">findByDocumentUrl</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*findByDocumentUrl2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaF F(2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaG G( 2•
Torg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaH H($2s
"java.net.URL.URL(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaG% G((2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaF F(2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaH H(2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaH% H(*2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaE E(∫
6org.jabref.logic.importer.fetcher.IEEETest.findByURL()METHODG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaL	 L("
isFinalfalse"ˆ
declarationString‡<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">findByURL</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*	findByURL2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaM M(2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaN N( 2•
Torg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaO O($2s
"java.net.URL.URL(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaN% N((2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaM M(2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaO O(2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaO% O(*2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaL L(√
9org.jabref.logic.importer.fetcher.IEEETest.findByOldURL()METHODG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaS	 S("
isFinalfalse"˘
declarationString„<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">findByOldURL</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*findByOldURL2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaT T(2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaU U( 2•
Torg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaV V($2s
"java.net.URL.URL(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaU% U((2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaT T(2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaV V(2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaV% V(*2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaS S(ó
?org.jabref.logic.importer.fetcher.IEEETest.findByDOIButNotURL()METHODG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaZ	 Z("
isFinalfalse"ˇ
declarationStringÈ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">findByDOIButNotURL</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*findByDOIButNotURL2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java[ [(2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java\ \(2i
java.util.Optional.of(T)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java] ]( 2•
Torg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java^ ^($2s
"java.net.URL.URL(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java]% ]((2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java[ [(2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java\ \(2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java^ ^(2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java^% ^(*2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaZ Z(”
:org.jabref.logic.importer.fetcher.IEEETest.notFoundByURL()METHODG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javab	 b("
isFinalfalse"˙
declarationString‰<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">notFoundByURL</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*notFoundByURL2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javac c(2k
java.util.Optional.empty()CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javad d(#2•
Torg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javad/ d(;2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javac c(2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javad' d(.2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javad< d(A2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javab b(”
:org.jabref.logic.importer.fetcher.IEEETest.notFoundByDOI()METHODG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javah	 h("
isFinalfalse"˙
declarationString‰<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">notFoundByDOI</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*notFoundByDOI2Ø
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javai i(2k
java.util.Optional.empty()CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaj j(#2•
Torg.jabref.logic.importer.fetcher.IEEE.findFullText(org.jabref.model.entry.BibEntry)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaj/ j(;2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javai i(2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaj' j(.2ç
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaj< j(A2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javah h(¬(
Jorg.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()METHODG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javan	 n(&"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchResultHasNoKeywordTerms</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchResultHasNoKeywordTerms2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java| |(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java{ {(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaz z(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javay y(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javax x(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaw w(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javav v(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javau u(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javat t(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javas s(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javar r(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaq q(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javap p(2ù
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java~0 ~(=2ì
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java (2ü
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java. (82y
&java.util.Collections.singletonList(T)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÄ! Ä(.2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javao  o((2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java~( ~(/2∏
gorg.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?fetchedEntries@126.23:126.37CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java (2Ø
^org.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?entry@127.31:127.36CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java( (-2¥
aorg.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?expected@111.17:111.25CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÄ/ Ä(72∫
gorg.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?fetchedEntries@126.23:126.37CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÄ: Ä(H2π
aorg.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?expected@111.17:111.25DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javao o(2ø
gorg.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?fetchedEntries@126.23:126.37DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java~ ~(%2∂
^org.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?entry@127.31:127.36DECLARATIONG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java ($2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javan n(ø
aorg.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?expected@111.17:111.25VARIABLEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javao o("
typeBibEntry"
isFinalfalse"´	
declarationStringï	<mark class="modifier"> </mark>BibEntry <mark class="class-field">expected</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Shatakshi Sharma and Bhim Singh and Sukumar Mishra").withField(StandardField.DATE, "April 2020").withField(StandardField.YEAR, "2020").withField(StandardField.DOI, "10.1109/TII.2019.2935531").withField(StandardField.FILE, ":https\\://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8801912:PDF").withField(StandardField.ISSUE, "4").withField(StandardField.ISSN, "1941-0050").withField(StandardField.JOURNALTITLE, "IEEE Transactions on Industrial Informatics").withField(StandardField.PAGES, "2346--2356").withField(StandardField.PUBLISHER, "IEEE").withField(StandardField.TITLE, "Economic Operation and Quality Control in PV-BES-DG-Based Autonomous System").withField(StandardField.VOLUME, "16").withField(StandardField.KEYWORDS, "Batteries, Generators, Economics, Power quality, State of charge, Harmonic analysis, Control systems, Battery, diesel generator (DG)<mark class="modifier">,</mark> distributed generation, power quality, photovoltaic (PV)<mark class="modifier">,</mark> voltage source converter (VSC)")*expected2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javao o(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java| |(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java{ {(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaz z(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javay y(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javax x(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaw w(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javav v(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javau u(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javat t(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javas s(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javar r(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaq q(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javap p(2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javao  o((¨
gorg.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?fetchedEntries@126.23:126.37VARIABLEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java~ ~(%"
typeList<BibEntry>"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch("article_number:8801912")*fetchedEntries2_
java.util.ListTYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java~ ~(2y
org.jabref.model.entry.BibEntryTYPE_ARGUMENTG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java~ ~(2ù
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java~0 ~(=2è
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java~( ~(/˘
^org.jabref.logic.importer.fetcher.IEEETest.searchResultHasNoKeywordTerms()?entry@127.31:127.36VARIABLEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java ($"
type"
isFinalfalse"
declarationString entry*entry2TYPEª
Iorg.jabref.logic.importer.fetcher.IEEETest.searchByPlainQueryFindsEntry()METHODI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÑ	 Ñ(%"
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByPlainQueryFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByPlainQueryFindsEntry2ü
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÖ0 Ö(=2ï
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaá á(2°
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaá. á(82y
&java.util.Collections.singletonList(T)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaà! à(.2ë
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÖ( Ö(/2π
forg.jabref.logic.importer.fetcher.IEEETest.searchByPlainQueryFindsEntry()?fetchedEntries@133.23:133.37CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaá á(2∞
]org.jabref.logic.importer.fetcher.IEEETest.searchByPlainQueryFindsEntry()?entry@135.31:135.36CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaá( á(-2ò
Eorg.jabref.logic.importer.fetcher.IEEETest?IGOR_NEWCOMERS@29.27:29.41CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaà/ à(=2π
forg.jabref.logic.importer.fetcher.IEEETest.searchByPlainQueryFindsEntry()?fetchedEntries@133.23:133.37CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaà@ à(N2¿
forg.jabref.logic.importer.fetcher.IEEETest.searchByPlainQueryFindsEntry()?fetchedEntries@133.23:133.37DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÖ Ö(%2∑
]org.jabref.logic.importer.fetcher.IEEETest.searchByPlainQueryFindsEntry()?entry@135.31:135.36DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaá á($2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÑ Ñ(Ë
forg.jabref.logic.importer.fetcher.IEEETest.searchByPlainQueryFindsEntry()?fetchedEntries@133.23:133.37VARIABLEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÖ Ö(%"
typeList<BibEntry>"
isFinalfalse"ÿ
declarationString¬<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch("Overcoming Open Source Project Entry Barriers with a Portal for Newcomers")*fetchedEntries2a
java.util.ListTYPEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÖ Ö(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÖ Ö(2ü
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÖ0 Ö(=2ë
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaÖ( Ö(/˙
]org.jabref.logic.importer.fetcher.IEEETest.searchByPlainQueryFindsEntry()?entry@135.31:135.36VARIABLEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaá á($"
type"
isFinalfalse"
declarationString entry*entry2TYPE√
Jorg.jabref.logic.importer.fetcher.IEEETest.searchByQuotedQueryFindsEntry()METHODI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaå	 å(&"
isFinalfalse"ä
declarationStringÙ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByQuotedQueryFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByQuotedQueryFindsEntry2ü
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaç0 ç(=2ï
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaè è(2°
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaè. è(82y
&java.util.Collections.singletonList(T)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaê! ê(.2ë
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaç( ç(/2∫
gorg.jabref.logic.importer.fetcher.IEEETest.searchByQuotedQueryFindsEntry()?fetchedEntries@141.23:141.37CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaè è(2±
^org.jabref.logic.importer.fetcher.IEEETest.searchByQuotedQueryFindsEntry()?entry@143.31:143.36CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaè( è(-2ò
Eorg.jabref.logic.importer.fetcher.IEEETest?IGOR_NEWCOMERS@29.27:29.41CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaê/ ê(=2∫
gorg.jabref.logic.importer.fetcher.IEEETest.searchByQuotedQueryFindsEntry()?fetchedEntries@141.23:141.37CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaê@ ê(N2¡
gorg.jabref.logic.importer.fetcher.IEEETest.searchByQuotedQueryFindsEntry()?fetchedEntries@141.23:141.37DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaç ç(%2∏
^org.jabref.logic.importer.fetcher.IEEETest.searchByQuotedQueryFindsEntry()?entry@143.31:143.36DECLARATIONI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaè è($2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaå å(Ì
gorg.jabref.logic.importer.fetcher.IEEETest.searchByQuotedQueryFindsEntry()?fetchedEntries@141.23:141.37VARIABLEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaç ç(%"
typeList<BibEntry>"
isFinalfalse"‹
declarationString∆<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch("\"Overcoming Open Source Project Entry Barriers with a Portal for Newcomers\"")*fetchedEntries2a
java.util.ListTYPEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaç ç(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaç ç(2ü
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaç0 ç(=2ë
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaç( ç(/˚
^org.jabref.logic.importer.fetcher.IEEETest.searchByQuotedQueryFindsEntry()?entry@143.31:143.36VARIABLEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaè è($"
type"
isFinalfalse"
declarationString entry*entry2TYPEÌ
7org.jabref.logic.importer.fetcher.IEEETest.getFetcher()METHODI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaî î(("
isFinalfalse"§
declarationStringé<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>SearchBasedFetcher <mark class="method">getFetcher</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeSearchBasedFetcher*
getFetcher2ë
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaï ï(2¶
Oorg.jabref.logic.importer.fetcher.SearchBasedFetcherCapabilityTest.getFetcher()OVERRIDEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaî î((2Ü
,org.jabref.logic.importer.SearchBasedFetcherRETURN_TYPEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaî î(´
;org.jabref.logic.importer.fetcher.IEEETest.getTestAuthors()METHODI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaô ô(&"
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;String&gt; <mark class="method">getTestAuthors</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<String>*getTestAuthors2p
java.util.List.of(E, E, E, E)CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaö ö(2™
Sorg.jabref.logic.importer.fetcher.SearchBasedFetcherCapabilityTest.getTestAuthors()OVERRIDEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaô ô(&2h
java.util.ListRETURN_TYPEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaô ô(2s
java.lang.StringRETURN_TYPE_ARGUMENTI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaô ô(¥
;org.jabref.logic.importer.fetcher.IEEETest.getTestJournal()METHODI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaû û( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getTestJournal</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getTestJournal2™
Sorg.jabref.logic.importer.fetcher.SearchBasedFetcherCapabilityTest.getTestJournal()OVERRIDEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaû û( 2j
java.lang.StringRETURN_TYPEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.javaû û(Ü
<org.jabref.logic.importer.fetcher.IEEETest.getPagedFetcher()METHODI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java£# £(2"
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>PagedSearchBasedFetcher <mark class="method">getPagedFetcher</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typePagedSearchBasedFetcher*getPagedFetcher2ë
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24CALLI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java§ §(2°
Jorg.jabref.logic.importer.fetcher.PagedSearchFetcherTest.getPagedFetcher()OVERRIDEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java£# £(22ã
1org.jabref.logic.importer.PagedSearchBasedFetcherRETURN_TYPEI
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java£ £("Í#
Eorg.jabref.logic.importer.fetcher.IEEETest?IGOR_NEWCOMERS@29.27:29.41VALUEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java ()"
isFinaltrue"
typeBibEntry"‰

declarationStringŒ
<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">IGOR_NEWCOMERS</mark> = new BibEntry(StandardEntryType.InProceedings).withField(StandardField.AUTHOR, "Igor Steinmacher and Tayana Uchoa Conte and Christoph Treude and Marco Aur√©lio Gerosa").withField(StandardField.DATE, "14-22 May 2016").withField(StandardField.YEAR, "2016").withField(StandardField.EVENTDATE, "14-22 May 2016").withField(StandardField.EVENTTITLEADDON, "Austin, TX, USA").withField(StandardField.LOCATION, "Austin, TX, USA").withField(StandardField.DOI, "10.1145/2884781.2884806").withField(StandardField.JOURNALTITLE, "2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)").withField(StandardField.PAGES, "273--284").withField(StandardField.ISBN, "978-1-5090-2071-3").withField(StandardField.ISSN, "1558-1225").withField(StandardField.PUBLISHER, "IEEE").withField(StandardField.KEYWORDS, "Portals, Documentation, Computer bugs, Joining processes, Industries, Open source software, Newcomers, Newbies, Novices, Beginners, Open Source Software, Barriers, Obstacles, Onboarding, Joining Process").withField(StandardField.TITLE, "Overcoming Open Source Project Entry Barriers with a Portal for Newcomers").withField(StandardField.FILE, ":https\\://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7886910:PDF");"
isStaticfalse"
accessprivate*IGOR_NEWCOMERS2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java (2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java, ,(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java+ +(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java* *(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java) )(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java( ((2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java' '(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java& &(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java% %(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java$ $(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java# #(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java" "(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java! !(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java   (2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java (2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java (2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java0 (8≈
>org.jabref.logic.importer.fetcher.IEEETest?fetcher@46.17:46.24VARIABLEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java. .("
isFinalfalse"
typeIEEE"h
declarationStringS<mark class="modifier">private </mark>IEEE <mark class="class-field">fetcher</mark>"
isStaticfalse"
accessprivate*fetcher2w
&org.jabref.logic.importer.fetcher.IEEETYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java. .(¿
<org.jabref.logic.importer.fetcher.IEEETest?entry@47.21:47.26VARIABLEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java/ /("
isFinalfalse"
typeBibEntry"j
declarationStringU<mark class="modifier">private </mark>BibEntry <mark class="class-field">entry</mark>"
isStaticfalse"
accessprivate*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\importer\fetcher\IEEETest.java/ /(