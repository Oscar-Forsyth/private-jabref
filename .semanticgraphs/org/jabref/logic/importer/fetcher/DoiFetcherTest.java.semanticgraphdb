
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaó
0org.jabref.logic.importer.fetcher.DoiFetcherTestCLASSM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"û
declarationStringà<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>DoiFetcherTest"
accesspublic*DoiFetcherTest2ò
:org.jabref.logic.importer.fetcher.DoiFetcherTest.getName()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaI I(2¶
Horg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchBurd2011()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaN N(%2®
Jorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchDecker2007()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaT T('2¨
Norg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchIannarelli2019()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaZ Z(+2¶
Horg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchEmptyDOI()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java` `(%2®
Jorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchInvalidDOI()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javae e('2Õ
oorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchInvalidDOIClientResultsinFetcherClientException()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaj j(L2Œ
porg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchInvalidDOIClientResultsinFetcherClientException2()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javao o(M2´
Morg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchNonTrimmedDOI()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javat t(*2µ
Worg.jabref.logic.importer.fetcher.DoiFetcherTest.aPSJournalCopiesArticleIdToPageField()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaz z(42¢
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java ($2´
Morg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryBurd2011@23.27:23.43DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (+2≠
Oorg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryDecker2007@32.27:32.45DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java   (-2±
Sorg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryIannarelli2019@41.27:41.49DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java) )(12Æ
Porg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryStenzel2020@58.27:58.46DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java: :(.∏
:org.jabref.logic.importer.fetcher.DoiFetcherTest.getName()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaI I("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getName2ç
6org.jabref.logic.importer.fetcher.DoiFetcher.getName()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaJ$ J(+2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaJ J(#2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaI I(Â
Horg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchBurd2011()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaN N(%"
isFinalfalse"è
declarationString˘<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchBurd2011</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearchBurd20112ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaO2 O(C2o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaP P( 2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaO* O(12§
Morg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryBurd2011@23.27:23.43CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaP! P(12∏
aorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchBurd2011()?fetchedEntry@79.27:79.39CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaP4 P(@2ø
aorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchBurd2011()?fetchedEntry@79.27:79.39DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaO O('2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaN N(Ÿ
aorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchBurd2011()?fetchedEntry@79.27:79.39VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaO O('"
typeOptional<BibEntry>"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("10.1002/9781118257517")*fetchedEntry2i
java.util.OptionalTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaO O(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaO O(2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaO2 O(C2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaO* O(1Ò
Jorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchDecker2007()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaT T('"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchDecker2007</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearchDecker20072ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaU2 U(C2o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaV V( 2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaU* U(12¶
Oorg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryDecker2007@32.27:32.45CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaV! V(32∫
corg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchDecker2007()?fetchedEntry@85.27:85.39CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaV6 V(B2¡
corg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchDecker2007()?fetchedEntry@85.27:85.39DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaU U('2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaT T(⁄
corg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchDecker2007()?fetchedEntry@85.27:85.39VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaU U('"
typeOptional<BibEntry>"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("10.1109/ICWS.2007.59")*fetchedEntry2i
java.util.OptionalTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaU U(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaU U(2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaU2 U(C2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaU* U(1â
Norg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchIannarelli2019()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaZ Z(+"
isFinalfalse"ï
declarationStringˇ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchIannarelli2019</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearchIannarelli20192ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java[2 [(C2o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java\ \( 2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java[* [(12™
Sorg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryIannarelli2019@41.27:41.49CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java\! \(72æ
gorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchIannarelli2019()?fetchedEntry@91.27:91.39CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java\: \(F2≈
gorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchIannarelli2019()?fetchedEntry@91.27:91.39DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java[ [('2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaZ Z(‹
gorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchIannarelli2019()?fetchedEntry@91.27:91.39VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java[ [('"
typeOptional<BibEntry>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("10.3303/CET1977146")*fetchedEntry2i
java.util.OptionalTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java[ [(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java[ [(2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java[2 [(C2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java[* [(1¸
Horg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchEmptyDOI()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java` `(%"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchEmptyDOI</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearchEmptyDOI2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaa; a(L2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaa3 a(:2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java` `(Ç
Jorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchInvalidDOI()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javae e('"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchInvalidDOI</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearchInvalidDOI2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaf; f(L2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaf3 f(:2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javae e(Ò
oorg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchInvalidDOIClientResultsinFetcherClientException()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaj j(L"
isFinalfalse"‚
declarationStringÃ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchInvalidDOIClientResultsinFetcherClientException</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*<performSearchInvalidDOIClientResultsinFetcherClientException2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javak; k(L2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javak3 k(:2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaj j(Ù
porg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchInvalidDOIClientResultsinFetcherClientException2()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javao o(M"
isFinalfalse"„
declarationStringÕ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchInvalidDOIClientResultsinFetcherClientException2</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*=performSearchInvalidDOIClientResultsinFetcherClientException22ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javap; p(L2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javap3 p(:2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javao o(Ñ
Morg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchNonTrimmedDOI()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javat t(*"
isFinalfalse"î
declarationString˛<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchNonTrimmedDOI</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearchNonTrimmedDOI2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javau2 u(C2o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javav v( 2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javau* u(12¶
Oorg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryDecker2007@32.27:32.45CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javav! v(32ø
horg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchNonTrimmedDOI()?fetchedEntry@117.27:117.39CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javav6 v(B2∆
horg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchNonTrimmedDOI()?fetchedEntry@117.27:117.39DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javau u('2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javat t(Ù
horg.jabref.logic.importer.fetcher.DoiFetcherTest.performSearchNonTrimmedDOI()?fetchedEntry@117.27:117.39VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javau u('"
typeOptional<BibEntry>"
isFinalfalse"æ
declarationString®<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("http s://doi.org/ 10.1109 /ICWS .2007.59 ")*fetchedEntry2i
java.util.OptionalTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javau u(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javau u(2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javau2 u(C2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javau* u(1∑
Worg.jabref.logic.importer.fetcher.DoiFetcherTest.aPSJournalCopiesArticleIdToPageField()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaz z(4"
isFinalfalse"û
declarationStringà<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">aPSJournalCopiesArticleIdToPageField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*$aPSJournalCopiesArticleIdToPageField2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java{2 {(C2o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java| |( 2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java{* {(12ß
Porg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryStenzel2020@58.27:58.46CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java|! |(42…
rorg.jabref.logic.importer.fetcher.DoiFetcherTest.aPSJournalCopiesArticleIdToPageField()?fetchedEntry@123.27:123.39CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java|7 |(C2–
rorg.jabref.logic.importer.fetcher.DoiFetcherTest.aPSJournalCopiesArticleIdToPageField()?fetchedEntry@123.27:123.39DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java{ {('2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaz z(
rorg.jabref.logic.importer.fetcher.DoiFetcherTest.aPSJournalCopiesArticleIdToPageField()?fetchedEntry@123.27:123.39VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java{ {('"
typeOptional<BibEntry>"
isFinalfalse"∞
declarationStringö<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("10.1103/physreva.102.023315")*fetchedEntry2i
java.util.OptionalTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java{ {(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java{ {(2ß
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java{2 {(C2õ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java{* {(1ﬂ
Dorg.jabref.logic.importer.fetcher.DoiFetcherTest?fetcher@21.29:21.36VALUEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java ($"
isFinaltrue"
type
DoiFetcher"Ê
declarationString–<mark class="modifier">private </mark><mark class="modifier">final </mark>DoiFetcher <mark class="class-field">fetcher</mark> = new DoiFetcher(mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS));"
isStaticfalse"
accessprivate*fetcher2É
,org.jabref.logic.importer.fetcher.DoiFetcherTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (Û
Morg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryBurd2011@23.27:23.43VALUEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (+"
isFinaltrue"
typeBibEntry"§
declarationStringé<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">bibEntryBurd2011</mark> = new BibEntry(StandardEntryType.Book).withCitationKey("Burd_2011").withField(StandardField.TITLE, "Java¬Æ For Dummies¬Æ").withField(StandardField.PUBLISHER, "Wiley").withField(StandardField.YEAR, "2011").withField(StandardField.AUTHOR, "Burd, Barry").withField(StandardField.MONTH, "#jul#").withField(StandardField.DOI, "10.1002/9781118257517").withField(StandardField.ISBN, "9781118257517");"
isStaticfalse"
accessprivate*bibEntryBurd20112v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (2ò
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java (2ß
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java2 (:å
Oorg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryDecker2007@32.27:32.45VALUEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java   (-"
isFinaltrue"
typeBibEntry"π
declarationString£<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">bibEntryDecker2007</mark> = new BibEntry(StandardEntryType.InProceedings).withCitationKey("Decker_2007").withField(StandardField.AUTHOR, "Decker, Gero and Kopp, Oliver and Leymann, Frank and Weske, Mathias").withField(StandardField.BOOKTITLE, "IEEE International Conference on Web Services (ICWS 2007)").withField(StandardField.MONTH, "#jul#").withField(StandardField.PUBLISHER, "IEEE").withField(StandardField.TITLE, "BPEL4Chor: Extending BPEL for Modeling Choreographies").withField(StandardField.YEAR, "2007").withField(StandardField.DOI, "10.1109/icws.2007.59");"
isStaticfalse"
accessprivate*bibEntryDecker20072v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java   (2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java( ((2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java' '(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java& &(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java% %(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java$ $(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java# #(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java" "(2ò
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java! !(2ß
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java 4  (<„
Sorg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryIannarelli2019@41.27:41.49VALUEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java) )(1"
isFinaltrue"
typeBibEntry"Í
declarationString‘<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">bibEntryIannarelli2019</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "" + "Iannarelli Riccardo  and " + "Novello Anna  and " + "Stricker Damien  and " + "Cisternino Marco  and " + "Gallizio Federico  and " + "Telib Haysam  and " + "Meyer Thierry ").withField(StandardField.PUBLISHER, "AIDIC: Italian Association of Chemical Engineering").withField(StandardField.TITLE, "Safety in research institutions: how to better communicate the risks using numerical simulations").withField(StandardField.YEAR, "2019").withField(StandardField.DOI, "10.3303/CET1977146").withField(StandardField.JOURNAL, "Chemical Engineering Transactions").withField(StandardField.PAGES, "871-876").withField(StandardField.VOLUME, "77");"
isStaticfalse"
accessprivate*bibEntryIannarelli20192v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java) )(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java9 9(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java8 8(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java7 7(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java6 6(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java5 5(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java4 4(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java3 3(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java* *(2ß
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java)8 )(@¨
Porg.jabref.logic.importer.fetcher.DoiFetcherTest?bibEntryStenzel2020@58.27:58.46VALUEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java: :(."
isFinaltrue"
typeBibEntry"Û
declarationString›<mark class="modifier">private </mark><mark class="modifier">final </mark>BibEntry <mark class="class-field">bibEntryStenzel2020</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("Stenzel_2020").withField(StandardField.AUTHOR, "Stenzel, L. and Hayward, A. L. C. and Schollw√∂ck, U. and Heidrich-Meisner, F.").withField(StandardField.JOURNAL, "Physical Review A").withField(StandardField.TITLE, "Topological phases in the Fermi-Hofstadter-Hubbard model on hybrid-space ladders").withField(StandardField.YEAR, "2020").withField(StandardField.MONTH, "#aug#").withField(StandardField.VOLUME, "102").withField(StandardField.DOI, "10.1103/physreva.102.023315").withField(StandardField.ISSN, "2469-9934").withField(StandardField.PUBLISHER, "American Physical Society (APS)").withField(StandardField.PAGES, "023315").withField(StandardField.NUMBER, "2");"
isStaticfalse"
accessprivate*bibEntryStenzel20202v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java: :(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaF F(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaE E(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaD D(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaC C(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaB B(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.javaA A(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java@ @(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java? ?(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java> >(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java= =(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java< <(2ò
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java; ;(2ß
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\DoiFetcherTest.java:5 :(=