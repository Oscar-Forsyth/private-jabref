
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaû(
7org.jabref.logic.importer.fetcher.IacrEprintFetcherTestCLASST
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java$ $("",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"∏
declarationString¢<mark class="annotation">@FetcherTest</mark> <br><mark class="annotation">@DisabledOnCIServer("eprint.iacr.org blocks with 500 when there are too many calls from the same IP address.")</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>IacrEprintFetcherTest"
accesspublic*IacrEprintFetcherTest2§
?org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.setUp()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java- -(2µ
Porg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId1()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javab b(&2µ
Porg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId2()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaj j(&2ƒ
_org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidIdAndNonAsciiChars()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javar r(52π
Torg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithEmptyIdFails()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaz z(*2≈
`org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithInvalidReportNumberFails()DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java (62ø
Xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithInvalidYearFails()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÑ Ñ(.2Ω
Vorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithInvalidIdFails()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaâ â(,2º
Uorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchForNonexistentIdFails()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaé é(+2®
Aorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getName()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaì ì(2¡
Zorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdForWithdrawnPaperFails()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaò ò(02»
aorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatAndCheckDate()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaù ù(72‹
uorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¶ ¶(;2≤
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ  µ()2ƒ
]org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaø" ø(E2∑
Porg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithVersion()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÀ À(&2∫
Sorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutVersion()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java— —()2∂
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java◊ ◊(%2∫
Sorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithNonIACRUrl()DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaﬂ ﬂ()2∞
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java& &(%2≤
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java' '(2ª
Vorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017noVersion@40.21:40.39DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java( (('2¥
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?beierle2016@41.21:41.32DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java) )( 2¥
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?delgado2017@42.21:42.32DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java* *( ‹K
?org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.setUp()METHODT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java- -("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java: :(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java9 9(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java8 8(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java7 7(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java6 6(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java5 5(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java4 4(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java3 3(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java2 2(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java1 1( 2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaE E(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaD D(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaC C(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaB B(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaA A(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java@ @(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java? ?(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java> >(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java= =( 2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaR R(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaQ Q(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaP P(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaO O(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaN N(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaM M(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaL L(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaK K(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaJ J(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaI I(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaH H( 2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java^ ^(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java] ](2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java\ \(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java[ [(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaZ Z(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaY Y(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaX X(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaW W(2Ω
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaV V(2ü
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaU U( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java0 0( 2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java<! <()2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaG G("2Æ
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaT T("2©
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java. .(2´
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java0 0(2¥
Vorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017noVersion@40.21:40.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java< <(2≠
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?beierle2016@41.21:41.32CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaG G(2≠
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?delgado2017@42.21:42.32CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaT T(2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java- -(ß
Porg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId1()METHODT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javab b(&"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdWithValidId1</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*searchByIdWithValidId12µ
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javac2 c(C2x
java.lang.String.isEmpty()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javadN d(U2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javadH d(K2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javad' d(/2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javad! d($2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javae e(#2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javae e(2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaf f( 2©
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javac* c(12«
iorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId1()?fetchedEntry@99.27:99.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javad d( 2«
iorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId1()?fetchedEntry@99.27:99.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javae e(2´
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaf! f(*2«
iorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId1()?fetchedEntry@99.27:99.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaf- f(92Œ
iorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId1()?fetchedEntry@99.27:99.39DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javac c('2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javab b(è
iorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId1()?fetchedEntry@99.27:99.39VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javac c('"
typeOptional<BibEntry>"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("Report 2017/1118 ")*fetchedEntry2p
java.util.OptionalTYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javac c(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javac c(2µ
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javac2 c(C2©
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javac* c(1±
Porg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId2()METHODT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaj j(&"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdWithValidId2</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*searchByIdWithValidId22µ
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javak2 k(C2x
java.lang.String.isEmpty()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javalN l(U2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javalH l(K2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javal' l(/2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javal! l($2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javam m(#2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javam m(2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javan n( 2©
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javak* k(12…
korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId2()?fetchedEntry@107.27:107.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javal l( 2…
korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId2()?fetchedEntry@107.27:107.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javam m(2≠
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?beierle2016@41.21:41.32CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javan! n(,2…
korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId2()?fetchedEntry@107.27:107.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javan/ n(;2–
korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId2()?fetchedEntry@107.27:107.39DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javak k('2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaj j(î
korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidId2()?fetchedEntry@107.27:107.39VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javak k('"
typeOptional<BibEntry>"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("iacr ePrint 2016/119")*fetchedEntry2p
java.util.OptionalTYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javak k(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javak k(2µ
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javak2 k(C2©
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javak* k(1ö
_org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidIdAndNonAsciiChars()METHODT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javar r(5"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdWithValidIdAndNonAsciiChars</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*%searchByIdWithValidIdAndNonAsciiChars2µ
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javas2 s(C2x
java.lang.String.isEmpty()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javatN t(U2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javatH t(K2™
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javat' t(/2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javat! t($2º
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javau u(#2v
java.util.Optional.get()CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javau u(2v
java.util.Optional.of(T)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javav v( 2©
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javas* s(12ÿ
zorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidIdAndNonAsciiChars()?fetchedEntry@115.27:115.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javat t( 2ÿ
zorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidIdAndNonAsciiChars()?fetchedEntry@115.27:115.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javau u(2≠
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?delgado2017@42.21:42.32CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javav! v(,2ÿ
zorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidIdAndNonAsciiChars()?fetchedEntry@115.27:115.39CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javav/ v(;2ﬂ
zorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidIdAndNonAsciiChars()?fetchedEntry@115.27:115.39DECLARATIONT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javas s('2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javar r(∏
zorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithValidIdAndNonAsciiChars()?fetchedEntry@115.27:115.39VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javas s('"
typeOptional<BibEntry>"
isFinalfalse"æ
declarationString®<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("some random 2017/1095 stuff around the id")*fetchedEntry2p
java.util.OptionalTYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javas s(2Ü
org.jabref.model.entry.BibEntryTYPE_ARGUMENTT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javas s(2µ
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javas2 s(C2©
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javas* s(1º
Torg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithEmptyIdFails()METHODT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaz z(*"
isFinalfalse"¿
declarationString™<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdWithEmptyIdFails</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*searchByIdWithEmptyIdFails2µ
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java{; {(L2©
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java{3 {(:2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaz z(‰
`org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithInvalidReportNumberFails()METHODT
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java (6"
isFinalfalse"Ã
declarationString∂<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdWithInvalidReportNumberFails</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*&searchByIdWithInvalidReportNumberFails2∑
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÄ; Ä(L2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÄ3 Ä(:2i
voidRETURN_TYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java (–
Xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithInvalidYearFails()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÑ Ñ(."
isFinalfalse"ƒ
declarationStringÆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdWithInvalidYearFails</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*searchByIdWithInvalidYearFails2∑
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÖ; Ö(L2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÖ3 Ö(:2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÑ Ñ( 
Vorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithInvalidIdFails()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaâ â(,"
isFinalfalse"¬
declarationString¨<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdWithInvalidIdFails</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*searchByIdWithInvalidIdFails2∑
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaä; ä(L2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaä3 ä(:2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaâ â(«
Uorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchForNonexistentIdFails()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaé é(+"
isFinalfalse"¡
declarationString´<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchForNonexistentIdFails</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*searchForNonexistentIdFails2∑
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaè; è(L2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaè3 è(:2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaé é(Ò
Aorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getName()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaì ì("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getName2ù
=org.jabref.logic.importer.fetcher.IacrEprintFetcher.getName()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaî5 î(<2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaî- î(42k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaì ì(÷
Zorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdForWithdrawnPaperFails()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaò ò(0"
isFinalfalse"∆
declarationString∞<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdForWithdrawnPaperFails</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* searchByIdForWithdrawnPaperFails2∑
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaô; ô(L2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaô3 ô(:2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaò ò(ß
aorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatAndCheckDate()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaù ù(7"
isFinalfalse"°
declarationStringã<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdWithOldHtmlFormatAndCheckDate</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*'searchByIdWithOldHtmlFormatAndCheckDate2∑
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaû2 û(C2x
java.util.Optional.of(T)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaü ü( 2¨
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaüC ü(K2x
java.util.Optional.get()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaü= ü(@2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaû* û(12‹
|org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatAndCheckDate()?fetchedEntry@158.27:158.39CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaü0 ü(<2„
|org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatAndCheckDate()?fetchedEntry@158.27:158.39DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaû û('2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaù ù(£
|org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatAndCheckDate()?fetchedEntry@158.27:158.39VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaû û('"
typeOptional<BibEntry>"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("1997/006")*fetchedEntry2r
java.util.OptionalTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaû û(2à
org.jabref.model.entry.BibEntryTYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaû û(2∑
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaû2 û(C2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaû* û(1”,
uorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¶ ¶(;"
isFinalfalse"Ô
declarationStringŸ <br><mark class="annotation">@Disabled("Takes</mark> a lot of time - should only be called manually") <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdWithOldHtmlFormatWithoutDateCheck</mark>(String id)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*+searchByIdWithOldHtmlFormatWithoutDateCheck2∑
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaß2 ß(C2~
java.util.Optional.isPresent()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java®  ®()2z
java.util.Optional.empty()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java©! ©(&2¨
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java©= ©(E2x
java.util.Optional.get()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java©7 ©(:2
java.util.Optional.toString()CALLX
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java©ñ ©(û2y
java.lang.String.length()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java™O ™(U2x
java.util.Optional.get()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java™I ™(L2¨
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java™, ™(42x
java.util.Optional.get()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java™& ™()2
java.util.Optional.toString()CALLX
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java™ñ ™(û2z
java.util.Optional.empty()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java´! ´(&2¨
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java´= ´(E2x
java.util.Optional.get()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java´7 ´(:2
java.util.Optional.toString()CALLX
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java´û ´(¶2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaß* ß(12ÿ
xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)!idCALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaßD ß(F2Ò
êorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)?fetchedEntry@167.27:167.39CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java® ®(2ÿ
xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)!idCALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java®R ®(T2Ò
êorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)?fetchedEntry@167.27:167.39CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java©* ©(62Û
êorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)?fetchedEntry@167.27:167.39CALLX
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java©â ©(ï2Ò
êorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)?fetchedEntry@167.27:167.39CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java™ ™(%2Û
êorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)?fetchedEntry@167.27:167.39CALLX
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java™â ™(ï2Ò
êorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)?fetchedEntry@167.27:167.39CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java´* ´(62Û
êorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)?fetchedEntry@167.27:167.39CALLX
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java´ë ´(ù2›
xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)!id	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¶C ¶(E2¯
êorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)?fetchedEntry@167.27:167.39DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaß ß('2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¶ ¶(ä

êorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)?fetchedEntry@167.27:167.39VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaß ß('"
typeOptional<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById(id)*fetchedEntry2r
java.util.OptionalTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaß ß(2à
org.jabref.model.entry.BibEntryTYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaß ß(2∑
Worg.jabref.logic.importer.fetcher.IacrEprintFetcher.performSearchById(java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaß2 ß(C2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaß* ß(12ÿ
xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)!idCALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaßD ß(Fï
xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.searchByIdWithOldHtmlFormatWithoutDateCheck(java.lang.String)!id	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¶C ¶(E"
typeString"
isFinalfalse"
declarationString	String id*id2p
java.lang.StringTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¶< ¶(BÓ
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ  µ()"
isFinalfalse"¶
declarationStringê<mark class="modifier">private </mark><mark class="modifier">static </mark>List&lt;String&gt; <mark class="method">getIdsFor</mark>(<mark class="modifier">int</mark> year<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> maxId)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeList<String>*	getIdsFor2u
java.util.List.add(E)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∏ ∏(2è
/java.lang.String.formatted(java.lang.Object...)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∏# ∏(,2
java.util.ArrayList.ArrayList()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∂" ∂(-2ª
[org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)?i@183.17:183.18CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∑ ∑(2±
Qorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)!maxIdCALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∑ ∑("2ª
[org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)?i@183.17:183.18CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∑$ ∑(%2¿
`org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)?result@182.21:182.27CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∏ ∏(2∞
Porg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)!yearCALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∏- ∏(12ª
[org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)?i@183.17:183.18CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∏3 ∏(42¿
`org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)?result@182.21:182.27CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∫ ∫(2µ
Porg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)!year	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ. µ(22∂
Qorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)!maxId	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ8 µ(=2«
`org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)?result@182.21:182.27DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∂ ∂(2¬
[org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)?i@183.17:183.18DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∑ ∑(2u
java.util.ListRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ µ(2Ä
java.lang.StringRETURN_TYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ µ(ﬁ
`org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)?result@182.21:182.27VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∂ ∂("
typeList<String>"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>List<String> <mark class="class-field">result</mark> = new ArrayList<>()*result2n
java.util.ListTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∂ ∂(2y
java.lang.StringTYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∂ ∂(2
java.util.ArrayList.ArrayList()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∂" ∂(-ƒ
[org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)?i@183.17:183.18VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∑ ∑("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 1*i2c
intTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∑ ∑(¸
Porg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)!year	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ. µ(2"
typeint"
isFinalfalse";
declarationString&<mark class="modifier">int</mark> year*year2c
intTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ* µ(-ˇ
Qorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)!maxId	PARAMETERV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ8 µ(="
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> maxId*maxId2c
intTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaµ4 µ(7ó$
]org.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaø" ø(E"
isFinalfalse"˜
declarationString·<mark class="annotation">@SuppressWarnings("unused")</mark> <br><mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">allNonWithdrawnIdsWithOldHtmlFormat</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*#allNonWithdrawnIdsWithOldHtmlFormat2}
java.util.Arrays.asList(T...)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¿1 ¿(72ò
8java.util.List.addAll(java.util.Collection<? extends E>)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¬ ¬(2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¬ ¬(2ò
8java.util.List.addAll(java.util.Collection<? extends E>)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java√ √(2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java√ √(2ò
8java.util.List.addAll(java.util.Collection<? extends E>)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaƒ ƒ(2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaƒ ƒ(2ò
8java.util.List.addAll(java.util.Collection<? extends E>)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java≈ ≈(2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getIdsFor(int, int)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java≈ ≈(2™
Jjava.util.List.removeAll(java.util.Collection<? extends java.lang.Object>)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∆ ∆(2}
java.util.Collection.stream()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java« «(2
java.util.ArrayList.ArrayList()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¡ ¡(*2œ
oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?ids@193.21:193.24CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¬ ¬(2œ
oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?ids@193.21:193.24CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java√ √(2œ
oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?ids@193.21:193.24CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaƒ ƒ(2œ
oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?ids@193.21:193.24CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java≈ ≈(2œ
oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?ids@193.21:193.24CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∆ ∆(2ÿ
xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?withdrawnIds@192.27:192.39CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java∆ ∆("2œ
oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?ids@193.21:193.24CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java« «(2ﬂ
xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?withdrawnIds@192.27:192.39DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¿ ¿('2÷
oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?ids@193.21:193.24DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¡ ¡(2~
java.util.stream.StreamRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaø ø(2Ä
java.lang.StringRETURN_TYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaø ø( ∆
xorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?withdrawnIds@192.27:192.39VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¿ ¿('"
typeCollection<String>"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>Collection<String> <mark class="class-field">withdrawnIds</mark> = Arrays.asList("1998/016"<mark class="modifier">,</mark> "1999/006")*withdrawnIds2t
java.util.CollectionTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¿ ¿(2y
java.lang.StringTYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¿ ¿(2}
java.util.Arrays.asList(T...)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¿1 ¿(7Á
oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.allNonWithdrawnIdsWithOldHtmlFormat()?ids@193.21:193.24VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¡ ¡("
typeList<String>"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>List<String> <mark class="class-field">ids</mark> = new ArrayList<>()*ids2n
java.util.ListTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¡ ¡(2y
java.lang.StringTYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¡ ¡(2
java.util.ArrayList.ArrayList()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java¡ ¡(*«
Porg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithVersion()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÀ À(&"
isFinalfalse"Ÿ
declarationString√<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFulltextWithVersion</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException<mark class="modifier"><mark class="modifier">,</mark></mark> IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFulltextWithVersion2¡
aorg.jabref.logic.importer.fetcher.IacrEprintFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ' Ã(32x
java.util.Optional.of(T)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÕ Õ( 2´
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÕe Õ(h2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ Ã(&2≠
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ4 Ã(=2≈
eorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithVersion()?pdfUrl@204.22:204.28CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÕ^ Õ(d2w
java.net.URL.toString()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÕi Õ(v2Ã
eorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithVersion()?pdfUrl@204.22:204.28DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ Ã(2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÀ À(ï	
eorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithVersion()?pdfUrl@204.22:204.28VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ Ã("
typeOptional<URL>"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>Optional<URL> <mark class="class-field">pdfUrl</mark> = fetcher.findFullText(abram2017)*pdfUrl2r
java.util.OptionalTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ Ã(2u
java.net.URLTYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ Ã(2¡
aorg.jabref.logic.importer.fetcher.IacrEprintFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ' Ã(32´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ Ã(&2≠
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÃ4 Ã(=ﬂ
Sorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutVersion()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java— —()"
isFinalfalse"‹
declarationString∆<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFulltextWithoutVersion</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException<mark class="modifier"><mark class="modifier">,</mark></mark> IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFulltextWithoutVersion2¡
aorg.jabref.logic.importer.fetcher.IacrEprintFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“' “(32x
java.util.Optional.of(T)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java” ”( 2´
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java”R ”(U2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“ “(&2∂
Vorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017noVersion@40.21:40.39CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“4 “(F2»
horg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutVersion()?pdfUrl@210.22:210.28CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java”K ”(Q2w
java.net.URL.toString()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java”V ”(c2œ
horg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutVersion()?pdfUrl@210.22:210.28DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“ “(2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java— —(™	
horg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutVersion()?pdfUrl@210.22:210.28VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“ “("
typeOptional<URL>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Optional<URL> <mark class="class-field">pdfUrl</mark> = fetcher.findFullText(abram2017noVersion)*pdfUrl2r
java.util.OptionalTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“ “(2u
java.net.URLTYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“ “(2¡
aorg.jabref.logic.importer.fetcher.IacrEprintFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“' “(32´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“ “(&2∂
Vorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017noVersion@40.21:40.39CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java“4 “(F—
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java◊ ◊(%"
isFinalfalse"ÿ
declarationString¬<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFulltextWithoutUrl</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException<mark class="modifier"><mark class="modifier">,</mark></mark> IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFulltextWithoutUrl2Æ
Norg.jabref.model.entry.BibEntry.clearField(org.jabref.model.entry.field.Field)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaŸ Ÿ(&2¡
aorg.jabref.logic.importer.fetcher.IacrEprintFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄' ⁄(32z
java.util.Optional.empty()CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java€ €(#2≠
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÿ' ÿ(02—
qorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()?abram2017WithoutUrl@216.17:216.36CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaŸ Ÿ(2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄ ⁄(&2—
qorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()?abram2017WithoutUrl@216.17:216.36CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄4 ⁄(G2ƒ
dorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()?pdfUrl@218.22:218.28CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java€' €(-2ÿ
qorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()?abram2017WithoutUrl@216.17:216.36DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÿ ÿ($2À
dorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()?pdfUrl@218.22:218.28DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄ ⁄(2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java◊ ◊(æ
qorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()?abram2017WithoutUrl@216.17:216.36VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÿ ÿ($"
typeBibEntry"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>BibEntry <mark class="class-field">abram2017WithoutUrl</mark> = abram2017*abram2017WithoutUrl2
org.jabref.model.entry.BibEntryTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÿ ÿ(2≠
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaÿ' ÿ(0√	
dorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()?pdfUrl@218.22:218.28VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄ ⁄("
typeOptional<URL>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>Optional<URL> <mark class="class-field">pdfUrl</mark> = fetcher.findFullText(abram2017WithoutUrl)*pdfUrl2r
java.util.OptionalTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄ ⁄(2u
java.net.URLTYPE_ARGUMENTV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄ ⁄(2¡
aorg.jabref.logic.importer.fetcher.IacrEprintFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄' ⁄(32´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄ ⁄(&2—
qorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithoutUrl()?abram2017WithoutUrl@216.17:216.36CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java⁄4 ⁄(G¶
Sorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithNonIACRUrl()METHODV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaﬂ ﬂ()"
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFulltextWithNonIACRUrl</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFulltextWithNonIACRUrl2æ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java·  ·((2¡
aorg.jabref.logic.importer.fetcher.IacrEprintFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java‚; ‚(G2≠
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java‡+ ‡(42Ÿ
yorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithNonIACRUrl()?abram2017WithNonIACRUrl@224.17:224.40CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java· ·(2´
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java‚3 ‚(:2Ÿ
yorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithNonIACRUrl()?abram2017WithNonIACRUrl@224.17:224.40CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java‚H ‚(_2‡
yorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithNonIACRUrl()?abram2017WithNonIACRUrl@224.17:224.40DECLARATIONV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java‡ ‡((2k
voidRETURN_TYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.javaﬂ ﬂ(œ
yorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest.getFulltextWithNonIACRUrl()?abram2017WithNonIACRUrl@224.17:224.40VARIABLEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java‡ ‡(("
typeBibEntry"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>BibEntry <mark class="class-field">abram2017WithNonIACRUrl</mark> = abram2017*abram2017WithNonIACRUrl2
org.jabref.model.entry.BibEntryTYPEV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java‡ ‡(2≠
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30CALLV
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java‡+ ‡(4î
Korg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?fetcher@38.30:38.37VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java& &(%"
isFinalfalse"
typeIacrEprintFetcher"u
declarationString`<mark class="modifier">private </mark>IacrEprintFetcher <mark class="class-field">fetcher</mark>"
isStaticfalse"
accessprivate*fetcher2ë
3org.jabref.logic.importer.fetcher.IacrEprintFetcherTYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java& &(Û
Morg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017@39.21:39.30VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java' '("
isFinalfalse"
typeBibEntry"n
declarationStringY<mark class="modifier">private </mark>BibEntry <mark class="class-field">abram2017</mark>"
isStaticfalse"
accessprivate*	abram20172}
org.jabref.model.entry.BibEntryTYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java' '(é
Vorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?abram2017noVersion@40.21:40.39VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java( (('"
isFinalfalse"
typeBibEntry"w
declarationStringb<mark class="modifier">private </mark>BibEntry <mark class="class-field">abram2017noVersion</mark>"
isStaticfalse"
accessprivate*abram2017noVersion2}
org.jabref.model.entry.BibEntryTYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java( ((˘
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?beierle2016@41.21:41.32VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java) )( "
isFinalfalse"
typeBibEntry"p
declarationString[<mark class="modifier">private </mark>BibEntry <mark class="class-field">beierle2016</mark>"
isStaticfalse"
accessprivate*beierle20162}
org.jabref.model.entry.BibEntryTYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java) )(˘
Oorg.jabref.logic.importer.fetcher.IacrEprintFetcherTest?delgado2017@42.21:42.32VARIABLET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java* *( "
isFinalfalse"
typeBibEntry"p
declarationString[<mark class="modifier">private </mark>BibEntry <mark class="class-field">delgado2017</mark>"
isStaticfalse"
accessprivate*delgado20172}
org.jabref.model.entry.BibEntryTYPET
Jsrc\test\java\org\jabref\logic\importer\fetcher\IacrEprintFetcherTest.java* *(