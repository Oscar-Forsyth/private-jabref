
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java´
*org.jabref.logic.importer.fetcher.CiteSeerCLASSG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"∑
declarationString°<mark class="modifier">public </mark><mark class="modifier">class </mark>CiteSeer<mark class="modifier"><br>implements </mark>SearchBasedFetcher, FulltextFetcher"
accesspublic*CiteSeer2ç
5org.jabref.logic.importer.fetcher.CiteSeer.CiteSeer()DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java" "(2å
4org.jabref.logic.importer.fetcher.CiteSeer.getName()DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java& &(2ê
8org.jabref.logic.importer.fetcher.CiteSeer.getHelpPage()DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java+ +()2Õ
uorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java0 0('2Œ
vorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaN N(&2∞
Xorg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaU U(%2ó
?org.jabref.logic.importer.fetcher.CiteSeer?BASE_URL@26.32:26.40DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java  ((2ñ
>org.jabref.logic.importer.fetcher.CiteSeer?API_URL@28.32:28.39DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java  ('2ñ
>org.jabref.logic.importer.fetcher.CiteSeer?PDF_URL@30.32:30.39DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java  ('2ö
Borg.jabref.logic.importer.fetcher.CiteSeer?transformer@32.37:32.48DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java %  (02
,org.jabref.logic.importer.SearchBasedFetcherEXTENDG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java! (32|
)org.jabref.logic.importer.FulltextFetcherEXTENDG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java5 (D˛
5org.jabref.logic.importer.fetcher.CiteSeer.CiteSeer()CONSTRUCTORG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java" "("`
declarationStringK<mark class="modifier">public </mark><mark class="method">CiteSeer</mark>()*CiteSeer2Ç
*org.jabref.logic.importer.fetcher.CiteSeerRETURN_TYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java" "(Û
4org.jabref.logic.importer.fetcher.CiteSeer.getName()METHODG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java& &("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2É
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java& &(2h
java.lang.StringRETURN_TYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java& &(ê
8org.jabref.logic.importer.fetcher.CiteSeer.getHelpPage()METHODG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java+ +()"
isFinalfalse"´
declarationStringï<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;HelpFile&gt; <mark class="method">getHelpPage</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<HelpFile>*getHelpPage2i
java.util.Optional.of(T)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java, ,(2á
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java+ +()2j
java.util.OptionalRETURN_TYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java+ +(2
org.jabref.logic.help.HelpFileRETURN_TYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java+ +(û7
uorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)METHODG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java0 0('"
isFinalfalse"í
declarationString¸<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">performSearch</mark>(QueryNode luceneQuery)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*performSearch2«
vorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java3" 3(02ú
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java?5 ?(82ì
Bjava.util.Optional.filter(java.util.function.Predicate<? super T>)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java>5 >(;2ú
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java=5 =(82i
java.util.Optional.of(T)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java<8 <(:2o
java.util.Optional.isPresent()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaB B('2d
java.util.List.of()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaC C(2∑
forg.jabref.logic.importer.fileformat.CiteSeerParser.parseCiteSeerResponse(kong.unirest.json.JSONArray)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaG3 G(H2m
java.util.Optional.orElse(T)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaGV G(\2ï
Dorg.jabref.logic.importer.fileformat.CiteSeerParser.CiteSeerParser()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaF( F(62≥
borg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String, java.lang.Throwable)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaJ J(&2”
Åorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQueryCALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java31 3(<2è
>org.jabref.logic.importer.fetcher.CiteSeer?API_URL@28.32:28.39CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java44 4(;2ê
?org.jabref.logic.importer.fetcher.CiteSeer?BASE_URL@26.32:26.40CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java5C 5(K2ê
?org.jabref.logic.importer.fetcher.CiteSeer?BASE_URL@26.32:26.40CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java8M 8(U2€
âorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?payload@51.24:51.31CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java94 9(;2„
ëorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?requestResponse@52.21:52.36CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java<; <(J2‹
äorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?response@63.57:63.65CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java?E ?(M2‡
éorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?jsonResponse@60.32:60.44CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaB B(2⁄
àorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?parser@70.27:70.33CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaG, G(22‡
éorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?jsonResponse@60.32:60.44CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaGI G(U2‚
êorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?fetchedEntries@71.27:71.41CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaH H(!2÷
Ñorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?ex@73.32:73.34CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaJm J(o2|
+java.util.Objects.nonNull(java.lang.Object)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java>< >(L2Ã
worg.jabref.logic.importer.SearchBasedFetcher.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)OVERRIDEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java0 0('2ÿ
Åorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java02 0(=2‚
âorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?payload@51.24:51.31DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java3 3(2Í
ëorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?requestResponse@52.21:52.36DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java4 4($2Á
éorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?jsonResponse@60.32:60.44DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java<  <(,2·
àorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?parser@70.27:70.33DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaF F(!2È
êorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?fetchedEntries@71.27:71.41DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaG G()2„
äorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?response@63.57:63.65DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java?9 ?(A2›
Ñorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?ex@73.32:73.34DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaI  I("2f
java.util.ListRETURN_TYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java0 0(2Ä
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java0 0(®
âorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?payload@51.24:51.31VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java3 3("
typeJSONElement"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>JSONElement <mark class="class-field">payload</mark> = getPayloadJSON(luceneQuery)*payload2n
kong.unirest.json.JSONElementTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java3 3(2«
vorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java3" 3(02”
Åorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQueryCALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java31 3(<Ò
ëorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?requestResponse@52.21:52.36VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java4 4($"
typeJsonNode"
isFinalfalse"‘
declarationStringæ<mark class="modifier"> </mark>JsonNode <mark class="class-field">requestResponse</mark> = Unirest.post(API_URL).header("authority"<mark class="modifier">,</mark> BASE_URL).header("accept"<mark class="modifier">,</mark> "application/json, text/plain, */*").header("content-type"<mark class="modifier">,</mark> "application/json;charset=UTF-8").header("origin"<mark class="modifier">,</mark> "https://" + BASE_URL).body(payload).asJson().getBody()*requestResponse2f
kong.unirest.JsonNodeTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java4 4(2è
>org.jabref.logic.importer.fetcher.CiteSeer?API_URL@28.32:28.39CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java44 4(;2ê
?org.jabref.logic.importer.fetcher.CiteSeer?BASE_URL@26.32:26.40CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java5C 5(K2ê
?org.jabref.logic.importer.fetcher.CiteSeer?BASE_URL@26.32:26.40CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java8M 8(U2€
âorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?payload@51.24:51.31CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java94 9(;©
éorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?jsonResponse@60.32:60.44VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java<  <(,"
typeOptional<JSONArray>"
isFinalfalse"ì
declarationString˝<mark class="modifier"> </mark>Optional<JSONArray> <mark class="class-field">jsonResponse</mark> = Optional.of(requestResponse).map(JsonNode::getObject).filter(Objects::nonNull).map(response -> response.optJSONArray("response")).filter(Objects::nonNull)*jsonResponse2c
java.util.OptionalTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java< <(2u
kong.unirest.json.JSONArrayTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java< <(2ì
Bjava.util.Optional.filter(java.util.function.Predicate<? super T>)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java@5 @(;2ú
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java?5 ?(82ì
Bjava.util.Optional.filter(java.util.function.Predicate<? super T>)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java>5 >(;2ú
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java=5 =(82i
java.util.Optional.of(T)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java<8 <(:2„
ëorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?requestResponse@52.21:52.36CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java<; <(J2‹
äorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?response@63.57:63.65CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java?E ?(M2|
+java.util.Objects.nonNull(java.lang.Object)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java>< >(L2|
+java.util.Objects.nonNull(java.lang.Object)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java@< @(L≥
àorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?parser@70.27:70.33VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaF F(!"
typeCiteSeerParser"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>CiteSeerParser <mark class="class-field">parser</mark> = new CiteSeerParser()*parser2Ñ
3org.jabref.logic.importer.fileformat.CiteSeerParserTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaF F(2ï
Dorg.jabref.logic.importer.fileformat.CiteSeerParser.CiteSeerParser()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaF( F(6†
êorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?fetchedEntries@71.27:71.41VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaG G()"
typeList<BibEntry>"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = parser.parseCiteSeerResponse(jsonResponse.orElse(new JSONArray()))*fetchedEntries2_
java.util.ListTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaG G(2y
org.jabref.model.entry.BibEntryTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaG G(2∑
forg.jabref.logic.importer.fileformat.CiteSeerParser.parseCiteSeerResponse(kong.unirest.json.JSONArray)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaG3 G(H2m
java.util.Optional.orElse(T)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaGV G(\2⁄
àorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?parser@70.27:70.33CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaG, G(22‡
éorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?jsonResponse@60.32:60.44CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaGI G(U≈
Åorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java02 0(="
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2å
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java0( 0(1¨
äorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?response@63.57:63.65VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java?9 ?(A"
type"
isFinalfalse"
declarationString	 response*response2TYPE´
Ñorg.jabref.logic.importer.fetcher.CiteSeer.performSearch(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?ex@73.32:73.34VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaI  I(""
typeParseException"
isFinalfalse"&
declarationStringParseException ex*ex2y
(org.jabref.logic.importer.ParseExceptionTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaI I(É
vorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)METHODG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaN N(&"
isFinalfalse"à
declarationStrings<mark class="modifier">private </mark>JSONElement <mark class="method">getPayloadJSON</mark>(QueryNode luceneQuery)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeJSONElement*getPayloadJSON2©
Xorg.jabref.logic.importer.fetcher.transformers.CiteSeerQueryTransformer.getJSONPayload()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaQ Q()2≥
borg.jabref.logic.importer.fetcher.transformers.CiteSeerQueryTransformer.CiteSeerQueryTransformer()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaO O(22ì
Borg.jabref.logic.importer.fetcher.CiteSeer?transformer@32.37:32.48CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaO O(2ì
Borg.jabref.logic.importer.fetcher.CiteSeer?transformer@32.37:32.48CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaP" P(-2‘
Çorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQueryCALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaPC P(N2ì
Borg.jabref.logic.importer.fetcher.CiteSeer?transformer@32.37:32.48CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaQ Q(2Ÿ
Çorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaN1 N(<2Ï
ìorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?transformedQuery@80.15:80.31DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaP P(2u
kong.unirest.json.JSONElementRETURN_TYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaN N(ò
ìorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?transformedQuery@80.15:80.31VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaP P("
typeString"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>String <mark class="class-field">transformedQuery</mark> = transformer.transformLuceneQuery(luceneQuery).orElse("")*transformedQuery2a
java.lang.StringTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaP P(2ì
Borg.jabref.logic.importer.fetcher.CiteSeer?transformer@32.37:32.48CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaP" P(-2‘
Çorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQueryCALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaPC P(N∆
Çorg.jabref.logic.importer.fetcher.CiteSeer.getPayloadJSON(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaN1 N(<"
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2å
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaN' N(0Ç'
Xorg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)METHODG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaU U(%"
isFinalfalse"“
declarationStringº<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;URL&gt; <mark class="method">findFullText</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<URL>*findFullText2t
#java.util.Objects.requireNonNull(T)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaV V(2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaY$ Y(,2o
java.util.Optional.isPresent()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaZ Z(2Ä
/java.lang.String.formatted(java.lang.Object...)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[$ [(-2i
java.util.Optional.get()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[1 [(42i
java.util.Optional.of(T)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java\ \(2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java`+ `(32o
java.util.Optional.isPresent()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaa a(2i
java.util.Optional.of(T)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javab b(2i
java.util.Optional.get()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javab1 b(42k
java.util.Optional.empty()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javae e(2s
"java.net.URL.URL(java.lang.String)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java\# \(&2s
"java.net.URL.URL(java.lang.String)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javab# b(&2Ø
^org.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)!entryCALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaV V($2Ø
^org.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)!entryCALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaY Y(#2∏
gorg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?id@89.25:89.27CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaZ Z(2è
>org.jabref.logic.importer.fetcher.CiteSeer?PDF_URL@30.32:30.39CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[ [(#2∏
gorg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?id@89.25:89.27CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[. [(02º
korg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?source@91.19:91.25CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java\' \(-2Ø
^org.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)!entryCALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java`% `(*2ø
norg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?urlString@96.25:96.34CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaa a(2ø
norg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?urlString@96.25:96.34CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javab' b(02¨
Worg.jabref.logic.importer.FulltextFetcher.findFullText(org.jabref.model.entry.BibEntry)OVERRIDEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaU U(%2¥
^org.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaU/ U(42ø
gorg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?id@89.25:89.27DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaY Y(2√
korg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?source@91.19:91.25DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[ [(2∆
norg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?urlString@96.25:96.34DECLARATIONG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java` `("2j
java.util.OptionalRETURN_TYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaU U(2m
java.net.URLRETURN_TYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaU U(û
gorg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?id@89.25:89.27VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaY Y("
typeOptional<String>"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>Optional<String> <mark class="class-field">id</mark> = entry.getField(StandardField.DOI)*id2c
java.util.OptionalTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaY Y(2j
java.lang.StringTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaY Y(2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaY$ Y(,2Ø
^org.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)!entryCALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaY Y(#ã
korg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?source@91.19:91.25VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[ [("
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String <mark class="class-field">source</mark> = PDF_URL.formatted(id.get())*source2a
java.lang.StringTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[ [(2Ä
/java.lang.String.formatted(java.lang.Object...)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[$ [(-2i
java.util.Optional.get()CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[1 [(42è
>org.jabref.logic.importer.fetcher.CiteSeer?PDF_URL@30.32:30.39CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[ [(#2∏
gorg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?id@89.25:89.27CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java[. [(0≥
norg.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)?urlString@96.25:96.34VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java` `(""
typeOptional<String>"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>Optional<String> <mark class="class-field">urlString</mark> = entry.getField(StandardField.URL)*	urlString2c
java.util.OptionalTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java` `(2j
java.lang.StringTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java` `(2ù
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java`+ `(32Ø
^org.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)!entryCALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java`% `(*ˆ
^org.jabref.logic.importer.fetcher.CiteSeer.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaU/ U(4"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.javaU& U(.ó
?org.jabref.logic.importer.fetcher.CiteSeer?BASE_URL@26.32:26.40VALUEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java  (("
isFinaltrue"
typeString"–
declarationString∫<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">BASE_URL</mark> = "citeseerx.ist.psu.edu";"
isStatictrue"
accessprivate*BASE_URL2a
java.lang.StringTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java (ß
>org.jabref.logic.importer.fetcher.CiteSeer?API_URL@28.32:28.39VALUEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java  ('"
isFinaltrue"
typeString"‚
declarationStringÃ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">API_URL</mark> = "https://citeseerx.ist.psu.edu/api/search";"
isStatictrue"
accessprivate*API_URL2a
java.lang.StringTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java (Œ
>org.jabref.logic.importer.fetcher.CiteSeer?PDF_URL@30.32:30.39VALUEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java  ('"
isFinaltrue"
typeString"ˆ
declarationString‡<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">PDF_URL</mark> = "https://" + BASE_URL + "/document?repid=rep1&type=pdf&doi=%s";"
isStatictrue"
accessprivate*PDF_URL2a
java.lang.StringTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java (2ê
?org.jabref.logic.importer.fetcher.CiteSeer?BASE_URL@26.32:26.40CALLG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java7 (?ú
Borg.jabref.logic.importer.fetcher.CiteSeer?transformer@32.37:32.48VARIABLEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java %  (0"
isFinalfalse" 
typeCiteSeerQueryTransformer"Ä
declarationStringk<mark class="modifier">private </mark>CiteSeerQueryTransformer <mark class="class-field">transformer</mark>"
isStaticfalse"
accessprivate*transformer2ò
Gorg.jabref.logic.importer.fetcher.transformers.CiteSeerQueryTransformerTYPEG
=src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java   ($