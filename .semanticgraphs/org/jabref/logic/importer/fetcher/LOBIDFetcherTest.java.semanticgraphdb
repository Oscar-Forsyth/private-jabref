
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaØ
2org.jabref.logic.importer.fetcher.LOBIDFetcherTestCLASSO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"ˇ
declarationStringÈ<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>LOBIDFetcherTest<mark class="modifier"><br>implements </mark>SearchBasedFetcherCapabilityTest, PagedSearchFetcherTest"
accesspackage_private*LOBIDFetcherTest2ö
:org.jabref.logic.importer.fetcher.LOBIDFetcherTest.setUp()DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java	 (2±
Qorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.queryForUniqueResultsPerPage()DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java   (.2¨
Lorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java&	 &( 2≥
Sorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByEmptyQueryFindsNothing()DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaU	 U('2ß
Gorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.supportsYearSearch()DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java\ \("2§
Dorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.getPagedFetcher()DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java`# `(22ü
?org.jabref.logic.importer.fetcher.LOBIDFetcherTest.getFetcher()DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javae e((2£
Corg.jabref.logic.importer.fetcher.LOBIDFetcherTest.getTestAuthors()DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaj j(&2£
Corg.jabref.logic.importer.fetcher.LOBIDFetcherTest.getTestJournal()DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javao o( 2≤
Rorg.jabref.logic.importer.fetcher.LOBIDFetcherTest?importerPreferences@23.24:23.43DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java (+2¶
Forg.jabref.logic.importer.fetcher.LOBIDFetcherTest?fetcher@24.17:24.24DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java (2ù
Borg.jabref.logic.importer.fetcher.SearchBasedFetcherCapabilityTestEXTENDO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java" (B2ì
8org.jabref.logic.importer.fetcher.PagedSearchFetcherTestEXTENDO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaD (Z©
:org.jabref.logic.importer.fetcher.LOBIDFetcherTest.setUp()METHODO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java	 ("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2√
jorg.jabref.logic.importer.fetcher.LOBIDFetcher.LOBIDFetcher(org.jabref.logic.importer.ImporterPreferences)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java ("2ü
Forg.jabref.logic.importer.fetcher.LOBIDFetcherTest?fetcher@24.17:24.24CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java (2´
Rorg.jabref.logic.importer.fetcher.LOBIDFetcherTest?importerPreferences@23.24:23.43CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java# (62d
voidRETURN_TYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java (¸
Qorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.queryForUniqueResultsPerPage()METHODO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java   (."
isFinalfalse"™
declarationStringî<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">queryForUniqueResultsPerPage</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*queryForUniqueResultsPerPage2¥
Worg.jabref.logic.importer.fetcher.PagedSearchFetcherTest.queryForUniqueResultsPerPage()OVERRIDEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java   (.2p
java.lang.StringRETURN_TYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java   (éL
Lorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()METHODO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java&	 &( "
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByQueryFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByQueryFindsEntry2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java3 3(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java2 2(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java1 1(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java0 0(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java/ /(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java. .(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java- -(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java, ,(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java+ +(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java* *(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java) )(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java( ((2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java> >(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java= =(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java< <(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java; ;(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java: :(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java9 9(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java8 8(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java7 7(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java6 6(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaN N(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaM M(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaL L(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaK K(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaJ J(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaI I(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaH H(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaG G(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaF F(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaE E(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaD D(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaC C(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaB B(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaA A(2•
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaP0 P(=2s
java.util.List.of(E, E, E)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaQ Q(2©
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java'$ '(,2©
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java5% 5(-2©
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java@$ @(,2ü
Forg.jabref.logic.importer.fetcher.LOBIDFetcherTest?fetcher@24.17:24.24CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaP( P(/2æ
eorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?firstArticle@39.17:39.29CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaQ Q()2ø
forg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?secondArticle@53.17:53.30CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaQ+ Q(82æ
eorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?thirdArticle@64.17:64.29CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaQ: Q(F2¿
gorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?fetchedEntries@80.23:80.37CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaQI Q(W2≈
eorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?firstArticle@39.17:39.29DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java' '(2∆
forg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?secondArticle@53.17:53.30DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java5 5(2≈
eorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?thirdArticle@64.17:64.29DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java@ @(2«
gorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?fetchedEntries@80.23:80.37DECLARATIONO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaP P(%2d
voidRETURN_TYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java& &(´
eorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?firstArticle@39.17:39.29VARIABLEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java' '("
typeBibEntry"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>BibEntry <mark class="class-field">firstArticle</mark> = new BibEntry(StandardEntryType.Book).withField(StandardField.AUTHOR, "Nichols, Cathrine and Blume, Eugen and DruckVerlag Kettler GmbH").withField(StandardField.PUBLISHER, "Verlag Kettler").withField(StandardField.DATE, "2016").withField(StandardField.ISBN, "9783862065752").withField(StandardField.KEYWORDS, "(Produktform)Hardback, Cathrine Nichols, Eugen Blume, Staatliche Museen zu Berlin, (Produktgruppe)Ausst: Ausstellungskatalog, (VLB-WN)1580: Hardcover, Softcover / Kunst").withField(StandardField.LANGUAGE, "Deutsch").withField(StandardField.LOCATION, "Dortmund").withField(StandardField.TITLE, "Das Kapital").withField(StandardField.TITLEADDON, "Schuld, Territorium, Utopie").withField(StandardField.TYPE, "BibliographicResource, Book").withField(StandardField.URL, "http://lobid.org/resources/991002500969706485").withField(StandardField.YEAR, "2016")*firstArticle2x
org.jabref.model.entry.BibEntryTYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java' '(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java3 3(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java2 2(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java1 1(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java0 0(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java/ /(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java. .(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java- -(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java, ,(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java+ +(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java* *(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java) )(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java( ((2©
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java'$ '(,Ô
forg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?secondArticle@53.17:53.30VARIABLEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java5 5("
typeBibEntry"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>BibEntry <mark class="class-field">secondArticle</mark> = new BibEntry(StandardEntryType.Article).withField(StandardField.AUTHOR, "Nielsen, Cathrin").withField(StandardField.TITLE, "\"... und die Substanz ist nat√ºrlich allein schon ein seelischer Proze√ü\"").withField(StandardField.JOURNAL, "Beuys. Die Revolution sind wir").withField(StandardField.DATE, "2008").withField(StandardField.KEYWORDS, "Beuys, Joseph, Physis").withField(StandardField.LANGUAGE, "Deutsch").withField(StandardField.TYPE, "BibliographicResource, Article").withField(StandardField.URL, "http://lobid.org/resources/990173112890206441").withField(StandardField.YEAR, "2008")*secondArticle2x
org.jabref.model.entry.BibEntryTYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java5 5(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java> >(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java= =(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java< <(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java; ;(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java: :(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java9 9(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java8 8(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java7 7(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java6 6(2©
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java5% 5(-≥#
eorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?thirdArticle@64.17:64.29VARIABLEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java@ @("
typeBibEntry"
isFinalfalse"‹

declarationString∆
<mark class="modifier"> </mark>BibEntry <mark class="class-field">thirdArticle</mark> = new BibEntry(StandardEntryType.Book).withField(StandardField.AUTHOR, "Nichols, Catherine and Blume, Eugen and Hamburger Bahnhof - Museum f√ºr Gegenwart - Berlin and Nationalgalerie (Berlin) and DruckVerlag Kettler GmbH").withField(StandardField.ABSTRACT, "Impresum: \"Diese Publikation erscheint anl√§sslich der Ausstellung Das Kapital. Schuld-Territorium-Utopie. Eine Ausstellung der Nationalgalerie im Hamburger Bahnhof - Museum f√ºr Gegenwart - Berlin, 2. Juli-6. November 2016\"").withField(StandardField.PUBLISHER, "Verlag Kettler").withField(StandardField.DATE, "2016").withField(StandardField.EDITION, "1. Auflage").withField(StandardField.ISBN, "9783862065752").withField(StandardField.KEYWORDS, "Cathrine Nichols, Eugen Blume, Staatliche Museen zu Berlin, Beuys, Joseph: Das Kapital Raum 1970-1977, Kunst, Kapitalismus (Motiv)<mark class="modifier">,</mark> Geschichte").withField(StandardField.LANGUAGE, "Deutsch").withField(StandardField.LOCATION, "Dortmund").withField(StandardField.TITLE, "Das Kapital").withField(StandardField.TITLEADDON, "Schuld - Territorium - Utopie").withField(StandardField.TYPE, "BibliographicResource, Book").withField(StandardField.URL, "http://lobid.org/resources/990212549810206441").withField(StandardField.YEAR, "2016")*thirdArticle2x
org.jabref.model.entry.BibEntryTYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java@ @(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaN N(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaM M(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaL L(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaK K(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaJ J(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaI I(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaH H(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaG G(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaF F(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaE E(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaD D(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaC C(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaB B(2∏
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaA A(2©
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java@$ @(,◊
gorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByQueryFindsEntry()?fetchedEntries@80.23:80.37VARIABLEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaP P(%"
typeList<BibEntry>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch("Cathrine Nichols")*fetchedEntries2g
java.util.ListTYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaP P(2Å
org.jabref.model.entry.BibEntryTYPE_ARGUMENTO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaP P(2•
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaP0 P(=2ü
Forg.jabref.logic.importer.fetcher.LOBIDFetcherTest?fetcher@24.17:24.24CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaP( P(/Î
Sorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.searchByEmptyQueryFindsNothing()METHODO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaU	 U('"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByEmptyQueryFindsNothing</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByEmptyQueryFindsNothing2z
!java.util.Collections.emptyList()CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaV! V(*2•
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaV6 V(C2ü
Forg.jabref.logic.importer.fetcher.LOBIDFetcherTest?fetcher@24.17:24.24CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaV. V(52d
voidRETURN_TYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaU U(æ
Gorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.supportsYearSearch()METHODO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java\ \(""
isFinalfalse"é
declarationString¯ <br><mark class="annotation">@Disabled("Results</mark> returned contain a few incorrect years. The majority are accurate") <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">supportsYearSearch</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*supportsYearSearch2¥
Worg.jabref.logic.importer.fetcher.SearchBasedFetcherCapabilityTest.supportsYearSearch()OVERRIDEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java\ \("2d
voidRETURN_TYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java\ \(Æ
Dorg.jabref.logic.importer.fetcher.LOBIDFetcherTest.getPagedFetcher()METHODO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java`# `(2"
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>PagedSearchBasedFetcher <mark class="method">getPagedFetcher</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typePagedSearchBasedFetcher*getPagedFetcher2ü
Forg.jabref.logic.importer.fetcher.LOBIDFetcherTest?fetcher@24.17:24.24CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaa a(2ß
Jorg.jabref.logic.importer.fetcher.PagedSearchFetcherTest.getPagedFetcher()OVERRIDEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java`# `(22ë
1org.jabref.logic.importer.PagedSearchBasedFetcherRETURN_TYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java` `("ï
?org.jabref.logic.importer.fetcher.LOBIDFetcherTest.getFetcher()METHODO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javae e(("
isFinalfalse"§
declarationStringé<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>SearchBasedFetcher <mark class="method">getFetcher</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeSearchBasedFetcher*
getFetcher2ü
Forg.jabref.logic.importer.fetcher.LOBIDFetcherTest?fetcher@24.17:24.24CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaf f(2¨
Oorg.jabref.logic.importer.fetcher.SearchBasedFetcherCapabilityTest.getFetcher()OVERRIDEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javae e((2å
,org.jabref.logic.importer.SearchBasedFetcherRETURN_TYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javae e(À
Corg.jabref.logic.importer.fetcher.LOBIDFetcherTest.getTestAuthors()METHODO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaj j(&"
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;String&gt; <mark class="method">getTestAuthors</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<String>*getTestAuthors2p
java.util.List.of(E, E)CALLO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javak k(2∞
Sorg.jabref.logic.importer.fetcher.SearchBasedFetcherCapabilityTest.getTestAuthors()OVERRIDEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaj j(&2n
java.util.ListRETURN_TYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaj j(2y
java.lang.StringRETURN_TYPE_ARGUMENTO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javaj j(Œ
Corg.jabref.logic.importer.fetcher.LOBIDFetcherTest.getTestJournal()METHODO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javao o( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getTestJournal</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getTestJournal2∞
Sorg.jabref.logic.importer.fetcher.SearchBasedFetcherCapabilityTest.getTestJournal()OVERRIDEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javao o( 2p
java.lang.StringRETURN_TYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.javao o(Õ
Rorg.jabref.logic.importer.fetcher.LOBIDFetcherTest?importerPreferences@23.24:23.43VARIABLEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java (+"
isFinalfalse"
typeImporterPreferences"†
declarationStringä<mark class="modifier"> </mark>ImporterPreferences <mark class="class-field">importerPreferences</mark> = mock(ImporterPreferences.class);"
isStaticfalse"
accesspackage_private*importerPreferences2Ü
-org.jabref.logic.importer.ImporterPreferencesTYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java (˜
Forg.jabref.logic.importer.fetcher.LOBIDFetcherTest?fetcher@24.17:24.24VARIABLEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java ("
isFinalfalse"
typeLOBIDFetcher"i
declarationStringT<mark class="modifier"> </mark>LOBIDFetcher <mark class="class-field">fetcher</mark>"
isStaticfalse"
accesspackage_private*fetcher2á
.org.jabref.logic.importer.fetcher.LOBIDFetcherTYPEO
Esrc\test\java\org\jabref\logic\importer\fetcher\LOBIDFetcherTest.java (