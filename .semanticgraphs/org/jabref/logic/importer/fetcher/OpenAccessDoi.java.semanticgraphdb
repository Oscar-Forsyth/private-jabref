
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java•
/org.jabref.logic.importer.fetcher.OpenAccessDoiCLASSL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"®
declarationStringí<mark class="modifier">public </mark><mark class="modifier">class </mark>OpenAccessDoi<mark class="modifier"><br>implements </mark>FulltextFetcher"
accesspublic*OpenAccessDoi2∫
]org.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java (%2ú
?org.jabref.logic.importer.fetcher.OpenAccessDoi.getTrustLevel()DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java1 1(#2¿
corg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java5 5(%2ü
Borg.jabref.logic.importer.fetcher.OpenAccessDoi?LOGGER@26.32:26.38DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java  (&2†
Corg.jabref.logic.importer.fetcher.OpenAccessDoi?API_URL@28.32:28.39DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java  ('2Å
)org.jabref.logic.importer.FulltextFetcherEXTENDL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java& (5˜
]org.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)METHODL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java (%"
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;URL&gt; <mark class="method">findFullText</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<URL>*findFullText2y
#java.util.Objects.requireNonNull(T)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java   (2√
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java#" #()2¢
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java"" "(*2t
java.util.Optional.isPresent()CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java% %(2p
java.util.Optional.empty()CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java& &(!2π
corg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java* *(2n
java.util.Optional.get()CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java*$ *('2π
corg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)!entryCALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java   ($2π
corg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)!entryCALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java" "(!2√
morg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)?doi@34.22:34.25CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java% %(2√
morg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)?doi@34.22:34.25CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java*  *(#2¡
korg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)?e@43.34:43.35CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java," ,(#2ì
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java#* #(42±
Worg.jabref.logic.importer.FulltextFetcher.findFullText(org.jabref.model.entry.BibEntry)OVERRIDEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java (%2æ
corg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java/ (42 
morg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)?doi@34.22:34.25DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java" "(2»
korg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)?e@43.34:43.35DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java+" +(#2o
java.util.OptionalRETURN_TYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java (2r
java.net.URLRETURN_TYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java (≈

morg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)?doi@34.22:34.25VARIABLEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java" "("
typeOptional<DOI>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = entry.getField(StandardField.DOI).flatMap(DOI::parse)*doi2h
java.util.OptionalTYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java" "(2Ñ
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java" "(2√
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java#" #()2¢
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java"" "(*2π
corg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)!entryCALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java" "(!2ì
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java#* #(4Ö
corg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java/ (4"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2u
org.jabref.model.entry.BibEntryTYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java& (.í
korg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.BibEntry)?e@43.34:43.35VARIABLEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java+" +(#"
typeUnirestException"
isFinalfalse"'
declarationStringUnirestException e*e2s
kong.unirest.UnirestExceptionTYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java+ +(! 
?org.jabref.logic.importer.fetcher.OpenAccessDoi.getTrustLevel()METHODL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java1 1(#"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>TrustLevel <mark class="method">getTrustLevel</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
TrustLevel*getTrustLevel2ì
9org.jabref.logic.importer.FulltextFetcher.getTrustLevel()OVERRIDEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java1 1(#2â
,org.jabref.logic.importer.fetcher.TrustLevelRETURN_TYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java1 1(÷(
corg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)METHODL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java5 5(%"
isFinalfalse"‘
declarationStringæ<mark class="modifier">public </mark>Optional&lt;URL&gt; <mark class="method">findFullText</mark>(DOI doi)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>UnirestException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<URL>*findFullText2Ñ
.org.jabref.model.entry.identifier.DOI.getDOI()CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java6C 6(I2°
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java? ?(2ò
Bjava.util.Optional.filter(java.util.function.Predicate<? super T>)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java> >(2°
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java= =(2ò
Bjava.util.Optional.filter(java.util.function.Predicate<? super T>)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java< <(2°
Kjava.util.Optional.map(java.util.function.Function<? super T, ? extends U>)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java; ;(2n
java.util.Optional.of(T)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java: :(2n
java.util.Optional.of(T)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaD/ D(12p
java.util.Optional.empty()CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaG/ G(42ô
Corg.jabref.logic.importer.fetcher.OpenAccessDoi?API_URL@28.32:28.39CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java65 6(<2Ω
gorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)!doiCALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java6? 6(B2Õ
worg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?request@54.31:54.38CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java: :("2 
torg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?root@63.28:63.32CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java?$ ?((2Œ
xorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?location@65.28:65.36CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaA( A(02…
sorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?url@66.32:66.35CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaD: D(=2ò
Borg.jabref.logic.importer.fetcher.OpenAccessDoi?LOGGER@26.32:26.38CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaF F(%2«
qorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?e@69.58:69.59CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaF_ F(`2Å
+java.util.Objects.nonNull(java.lang.Object)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java< <(/2Å
+java.util.Objects.nonNull(java.lang.Object)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java> >(/2Å
+java.util.Objects.nonNull(java.lang.Object)CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java@ @(/2¬
gorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)!doi	PARAMETERL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java5* 5(-2‘
worg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?request@54.31:54.38DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java6 6(&2—
torg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?root@63.28:63.32DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java? ?( 2’
xorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?location@65.28:65.36DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaA A($2–
sorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?url@66.32:66.35DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaB  B(#2Œ
qorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?e@69.58:69.59DECLARATIONL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaE: E(;2o
java.util.OptionalRETURN_TYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java5 5(2r
java.net.URLRETURN_TYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java5 5(‡	
worg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?request@54.31:54.38VARIABLEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java6 6(&"
typeHttpResponse<JsonNode>"
isFinalfalse"á
declarationStringÒ<mark class="modifier"> </mark>HttpResponse<JsonNode> <mark class="class-field">request</mark> = Unirest.get(API_URL + doi.getDOI() + "?email=developers@jabref.org").header("accept"<mark class="modifier">,</mark> "application/json").asJson()*request2o
kong.unirest.HttpResponseTYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java6 6(2t
kong.unirest.JsonNodeTYPE_ARGUMENTL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java6 6(2Ñ
.org.jabref.model.entry.identifier.DOI.getDOI()CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java6C 6(I2ô
Corg.jabref.logic.importer.fetcher.OpenAccessDoi?API_URL@28.32:28.39CALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java65 6(<2Ω
gorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)!doiCALLL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java6? 6(BÅ
gorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)!doi	PARAMETERL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java5* 5(-"
typeDOI"
isFinalfalse"
declarationStringDOI doi*doi2{
%org.jabref.model.entry.identifier.DOITYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java5& 5()í
torg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?root@63.28:63.32VARIABLEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java? ?( "
type"
isFinalfalse"
declarationString root*root2TYPEû
xorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?location@65.28:65.36VARIABLEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaA A($"
type"
isFinalfalse"
declarationString	 location*location2TYPEè
sorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?url@66.32:66.35VARIABLEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaB  B(#"
type"
isFinalfalse"
declarationString url*url2TYPE£
qorg.jabref.logic.importer.fetcher.OpenAccessDoi.findFullText(org.jabref.model.entry.identifier.DOI)?e@69.58:69.59VARIABLEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaE: E(;"
typeMalformedURLException"
isFinalfalse",
declarationStringMalformedURLException e*e2t
java.net.MalformedURLExceptionTYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.javaE$ E(9∑
Borg.jabref.logic.importer.fetcher.OpenAccessDoi?LOGGER@26.32:26.38VALUEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java  (&"
isFinaltrue"
typeLogger"Â
declarationStringœ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(FulltextFetcher.class);"
isStatictrue"
accessprivate*LOGGER2f
org.slf4j.LoggerTYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java (ß
Corg.jabref.logic.importer.fetcher.OpenAccessDoi?API_URL@28.32:28.39VALUEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java  ('"
isFinaltrue"
typeString"”
declarationStringΩ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">API_URL</mark> = "https://api.oadoi.org/v2/";"
isStatictrue"
accessprivate*API_URL2f
java.lang.StringTYPEL
Bsrc\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java (