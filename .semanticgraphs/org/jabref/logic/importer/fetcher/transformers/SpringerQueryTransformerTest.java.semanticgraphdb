
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java∫
Korg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTestCLASSh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java	 	(""9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstractfalse" 
declarationString¥<mark class="modifier"> </mark><mark class="modifier">class </mark>SpringerQueryTransformerTest<mark class="modifier"> extends </mark>InfixTransformerTest<SpringerQueryTransformer>"
accesspackage_private*SpringerQueryTransformerTest2÷
]org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getAuthorPrefix()DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java (!2’
\org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getTransformer()DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java$ (22Ÿ
`org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getUnFieldedPrefix()DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java ($2◊
^org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getJournalPrefix()DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java ("2’
\org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getTitlePrefix()DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java   ( 2◊
^org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java% %( 2‹
corg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java/ /(%2∑
Corg.jabref.logic.importer.fetcher.transformers.InfixTransformerTestEXTENDh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java	+ 	(?2…
Gorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerEXTEND_TYPE_ARGUMENTh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java	@ 	(X∏
]org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getAuthorPrefix()METHODh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java (!"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getAuthorPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAuthorPrefix2À
Uorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getAuthorPrefix()OVERRIDEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java (!2â
java.lang.StringRETURN_TYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java (ô
\org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getTransformer()METHODh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java$ (2"
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>SpringerQueryTransformer <mark class="method">getTransformer</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse" 
typeSpringerQueryTransformer*getTransformer2‘
borg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformer.SpringerQueryTransformer()CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java (+2¿
Gorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerRETURN_TYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java (#ƒ
`org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getUnFieldedPrefix()METHODh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java ($"
isFinalfalse"†
declarationStringä<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getUnFieldedPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getUnFieldedPrefix2Œ
Xorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getUnFieldedPrefix()OVERRIDEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java ($2â
java.lang.StringRETURN_TYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java (º
^org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getJournalPrefix()METHODh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java (""
isFinalfalse"û
declarationStringà<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getJournalPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getJournalPrefix2Ã
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getJournalPrefix()OVERRIDEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java ("2â
java.lang.StringRETURN_TYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java (¥
\org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getTitlePrefix()METHODh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java   ( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getTitlePrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getTitlePrefix2 
Torg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getTitlePrefix()OVERRIDEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java   ( 2â
java.lang.StringRETURN_TYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java   (‚
^org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()METHODh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java% %( "
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearField2Œ
\org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getTransformer()CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java(' ((52ä
java.util.Optional.of(T)CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java*- *(/2Ë
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?queryString@38.15:38.26CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java'A '(L2Ë
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java(M ((X2Â
sorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?expected@42.25:42.33CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java+ +(2Ë
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?searchQuery@40.25:40.36CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java+ +(*2Ã
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearField()OVERRIDEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java% %( 2Ô
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?queryString@38.15:38.26DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java& &(2Ô
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java' '(2Ô
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?searchQuery@40.25:40.36DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java( (($2Ï
sorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?expected@42.25:42.33DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java* *(!2}
voidRETURN_TYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java% %(ó
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?queryString@38.15:38.26VARIABLEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java& &("
typeString"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year:2015"*queryString2Ç
java.lang.StringTYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java& &(É
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29VARIABLEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java' '("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2≠
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java' '(2Ë
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?queryString@38.15:38.26CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java'A '(L†	
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?searchQuery@40.25:40.36VARIABLEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java( (($"
typeOptional<String>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Optional<String> <mark class="class-field">searchQuery</mark> = getTransformer().transformLuceneQuery(luceneQuery)*searchQuery2Ñ
java.util.OptionalTYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java( ((2ã
java.lang.StringTYPE_ARGUMENTh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java( ((2Œ
\org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getTransformer()CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java(' ((52Ë
vorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java(M ((XŒ
sorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearField()?expected@42.25:42.33VARIABLEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java* *(!"
typeOptional<String>"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>Optional<String> <mark class="class-field">expected</mark> = Optional.of("date:2015*")*expected2Ñ
java.util.OptionalTYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java* *(2ã
java.lang.StringTYPE_ARGUMENTh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java* *(2ä
java.util.Optional.of(T)CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java*- *(/û
corg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()METHODh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java/ /(%"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearRangeField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearRangeField2Œ
\org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getTransformer()CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java2' 2(52ä
java.util.Optional.of(T)CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java4- 4(/2Ì
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?queryString@48.15:48.26CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java1A 1(L2Ì
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?luceneQuery@49.18:49.29CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java2M 2(X2Í
xorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?expected@52.25:52.33CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java5 5(2Ì
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?searchQuery@50.25:50.36CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java5 5(*2—
[org.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearRangeField()OVERRIDEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java/ /(%2Ù
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?queryString@48.15:48.26DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java0 0(2Ù
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?luceneQuery@49.18:49.29DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java1 1(2Ù
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?searchQuery@50.25:50.36DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java2 2($2Ò
xorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?expected@52.25:52.33DECLARATIONh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java4 4(!2}
voidRETURN_TYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java/ /(®
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?queryString@48.15:48.26VARIABLEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java0 0("
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year-range:2012-2015"*queryString2Ç
java.lang.StringTYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java0 0(ç
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?luceneQuery@49.18:49.29VARIABLEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java1 1("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2≠
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java1 1(2Ì
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?queryString@48.15:48.26CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java1A 1(L™	
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?searchQuery@50.25:50.36VARIABLEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java2 2($"
typeOptional<String>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Optional<String> <mark class="class-field">searchQuery</mark> = getTransformer().transformLuceneQuery(luceneQuery)*searchQuery2Ñ
java.util.OptionalTYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java2 2(2ã
java.lang.StringTYPE_ARGUMENTh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java2 2(2Œ
\org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.getTransformer()CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java2' 2(52Ì
{org.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?luceneQuery@49.18:49.29CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java2M 2(X˛
xorg.jabref.logic.importer.fetcher.transformers.SpringerQueryTransformerTest.convertYearRangeField()?expected@52.25:52.33VARIABLEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java4 4(!"
typeOptional<String>"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>Optional<String> <mark class="class-field">expected</mark> = Optional.of("date:2012* OR date:2013* OR date:2014* OR date:2015*")*expected2Ñ
java.util.OptionalTYPEh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java4 4(2ã
java.lang.StringTYPE_ARGUMENTh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java4 4(2ä
java.util.Optional.of(T)CALLh
^src\test\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformerTest.java4- 4(/