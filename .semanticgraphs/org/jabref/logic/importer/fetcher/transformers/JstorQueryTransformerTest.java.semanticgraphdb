
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java¯
Horg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTestCLASSe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java	 	("9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstractfalse"ƒ
declarationStringÆ<mark class="modifier"> </mark><mark class="modifier">class </mark>JstorQueryTransformerTest<mark class="modifier"> extends </mark>InfixTransformerTest<JstorQueryTransformer>"
accesspackage_private*JstorQueryTransformerTest2œ
Yorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getTransformer()DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java! (/2–
Zorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getAuthorPrefix()DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java (!2”
]org.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getUnFieldedPrefix()DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java ($2—
[org.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getJournalPrefix()DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java ("2œ
Yorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getTitlePrefix()DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java   ( 2—
[org.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java% %( 2÷
`org.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java- -(%2¥
Corg.jabref.logic.importer.fetcher.transformers.InfixTransformerTestEXTENDe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java	( 	(<2√
Dorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerEXTEND_TYPE_ARGUMENTe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java	= 	(R˛
Yorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getTransformer()METHODe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java! (/"
isFinalfalse"´
declarationStringï<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>JstorQueryTransformer <mark class="method">getTransformer</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeJstorQueryTransformer*getTransformer2À
\org.jabref.logic.importer.fetcher.transformers.JstorQueryTransformer.JstorQueryTransformer()CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java ((2∫
Dorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerRETURN_TYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java ( ¨
Zorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getAuthorPrefix()METHODe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java (!"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getAuthorPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAuthorPrefix2»
Uorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getAuthorPrefix()OVERRIDEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java (!2Ü
java.lang.StringRETURN_TYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java (∏
]org.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getUnFieldedPrefix()METHODe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java ($"
isFinalfalse"†
declarationStringä<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getUnFieldedPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getUnFieldedPrefix2À
Xorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getUnFieldedPrefix()OVERRIDEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java ($2Ü
java.lang.StringRETURN_TYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java (∞
[org.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getJournalPrefix()METHODe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java (""
isFinalfalse"û
declarationStringà<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getJournalPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getJournalPrefix2…
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getJournalPrefix()OVERRIDEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java ("2Ü
java.lang.StringRETURN_TYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java (®
Yorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getTitlePrefix()METHODe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java   ( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getTitlePrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getTitlePrefix2«
Torg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getTitlePrefix()OVERRIDEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java   ( 2Ü
java.lang.StringRETURN_TYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java   (∆
[org.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()METHODe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java% %( "
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearField2»
Yorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getTransformer()CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java(! ((/2á
java.util.Optional.of(T)CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java) )( 2‚
sorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?queryString@38.15:38.26CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java'A '(L2‚
sorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java(G ((R2‹
morg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?query@40.25:40.30CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java)9 )(>2…
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearField()OVERRIDEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java% %( 2È
sorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?queryString@38.15:38.26DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java& &(2È
sorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java' '(2„
morg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?query@40.25:40.30DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java( ((2z
voidRETURN_TYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java% %(ç
sorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?queryString@38.15:38.26VARIABLEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java& &("
typeString"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year:2018"*queryString2
java.lang.StringTYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java& &(Ù
sorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29VARIABLEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java' '("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2™
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java' '(2‚
sorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?queryString@38.15:38.26CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java'A '(Lˆ
morg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?query@40.25:40.30VARIABLEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java( (("
typeOptional<String>"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>Optional<String> <mark class="class-field">query</mark> = getTransformer().transformLuceneQuery(luceneQuery)*query2Å
java.util.OptionalTYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java( ((2à
java.lang.StringTYPE_ARGUMENTe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java( ((2»
Yorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getTransformer()CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java(! ((/2‚
sorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java(G ((R¯
`org.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()METHODe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java- -(%"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearRangeField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearRangeField2»
Yorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getTransformer()CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java0! 0(/2á
java.util.Optional.of(T)CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java1 1( 2Á
xorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?queryString@46.15:46.26CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java/A /(L2Á
xorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?luceneQuery@47.18:47.29CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java0G 0(R2·
rorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?query@48.25:48.30CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java19 1(>2Œ
[org.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearRangeField()OVERRIDEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java- -(%2Ó
xorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?queryString@46.15:46.26DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java. .(2Ó
xorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?luceneQuery@47.18:47.29DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java/ /(2Ë
rorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?query@48.25:48.30DECLARATIONe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java0 0(2z
voidRETURN_TYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java- -(û
xorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?queryString@46.15:46.26VARIABLEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java. .("
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year-range:2018-2021"*queryString2
java.lang.StringTYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java. .(˛
xorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?luceneQuery@47.18:47.29VARIABLEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java/ /("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2™
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java/ /(2Á
xorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?queryString@46.15:46.26CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java/A /(LÄ	
rorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?query@48.25:48.30VARIABLEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java0 0("
typeOptional<String>"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>Optional<String> <mark class="class-field">query</mark> = getTransformer().transformLuceneQuery(luceneQuery)*query2Å
java.util.OptionalTYPEe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java0 0(2à
java.lang.StringTYPE_ARGUMENTe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java0 0(2»
Yorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.getTransformer()CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java0! 0(/2Á
xorg.jabref.logic.importer.fetcher.transformers.JstorQueryTransformerTest.convertYearRangeField()?luceneQuery@47.18:47.29CALLe
[src\test\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformerTest.java0G 0(R