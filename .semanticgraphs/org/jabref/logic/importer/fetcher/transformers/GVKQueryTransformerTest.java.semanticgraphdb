
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.javaÃ
Forg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTestCLASSc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java
 
("9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstractfalse"¿
declarationString™<mark class="modifier"> </mark><mark class="modifier">class </mark>GVKQueryTransformerTest<mark class="modifier"> extends </mark>InfixTransformerTest<GVKQueryTransformer>"
accesspackage_private*GVKQueryTransformerTest2À
Worg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getTransformer()DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (-2Ã
Xorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getAuthorPrefix()DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (!2œ
[org.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getUnFieldedPrefix()DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java ($2Õ
Yorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getJournalPrefix()DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java ("2À
Worg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getTitlePrefix()DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java! !( 2Õ
Yorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java& &( 2“
^org.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearRangeField()DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java1 1(%2≤
Corg.jabref.logic.importer.fetcher.transformers.InfixTransformerTestEXTENDc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java
& 
(:2ø
Borg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerEXTEND_TYPE_ARGUMENTc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java
; 
(NÏ
Worg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getTransformer()METHODc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (-"
isFinalfalse"©
declarationStringì<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>GVKQueryTransformer <mark class="method">getTransformer</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeGVKQueryTransformer*getTransformer2≈
Xorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformer.GVKQueryTransformer()CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (&2∂
Borg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerRETURN_TYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (§
Xorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getAuthorPrefix()METHODc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (!"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getAuthorPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAuthorPrefix2∆
Uorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getAuthorPrefix()OVERRIDEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (!2Ñ
java.lang.StringRETURN_TYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (∞
[org.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getUnFieldedPrefix()METHODc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java ($"
isFinalfalse"†
declarationStringä<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getUnFieldedPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getUnFieldedPrefix2…
Xorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getUnFieldedPrefix()OVERRIDEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java ($2Ñ
java.lang.StringRETURN_TYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (®
Yorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getJournalPrefix()METHODc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (""
isFinalfalse"û
declarationStringà<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getJournalPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getJournalPrefix2«
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getJournalPrefix()OVERRIDEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java ("2Ñ
java.lang.StringRETURN_TYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java (†
Worg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getTitlePrefix()METHODc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java! !( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getTitlePrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getTitlePrefix2≈
Torg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getTitlePrefix()OVERRIDEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java! !( 2Ñ
java.lang.StringRETURN_TYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java! !(„
Yorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()METHODc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java& &( "
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearField2ƒ
Worg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getTransformer()CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java)! )(/2Ö
java.util.Optional.of(T)CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java+- +(/2ﬁ
qorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?queryString@39.15:39.26CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java(A ((L2ﬁ
qorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?luceneQuery@40.18:40.29CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java)G )(R2€
norg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?expected@43.25:43.33CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java, ,(2ÿ
korg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?query@41.25:41.30CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java, ,($2«
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearField()OVERRIDEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java& &( 2Â
qorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?queryString@39.15:39.26DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java' '(2Â
qorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?luceneQuery@40.18:40.29DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java( ((2ﬂ
korg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?query@41.25:41.30DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java) )(2‚
norg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?expected@43.25:43.33DECLARATIONc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java+ +(!2x
voidRETURN_TYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java& &(á
qorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?queryString@39.15:39.26VARIABLEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java' '("
typeString"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year:2018"*queryString2}
java.lang.StringTYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java' '(Í
qorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?luceneQuery@40.18:40.29VARIABLEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java( (("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2®
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java( ((2ﬁ
qorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?queryString@39.15:39.26CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java(A ((LÂ
korg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?query@41.25:41.30VARIABLEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java) )("
typeOptional<String>"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>Optional<String> <mark class="class-field">query</mark> = getTransformer().transformLuceneQuery(luceneQuery)*query2
java.util.OptionalTYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java) )(2Ü
java.lang.StringTYPE_ARGUMENTc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java) )(2ƒ
Worg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.getTransformer()CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java)! )(/2ﬁ
qorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?luceneQuery@40.18:40.29CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java)G )(R≤
norg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearField()?expected@43.25:43.33VARIABLEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java+ +(!"
typeOptional<String>"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>Optional<String> <mark class="class-field">expected</mark> = Optional.of("ver:2018")*expected2
java.util.OptionalTYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java+ +(2Ü
java.lang.StringTYPE_ARGUMENTc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java+ +(2Ö
java.util.Optional.of(T)CALLc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java+- +(/Æ
^org.jabref.logic.importer.fetcher.transformers.GVKQueryTransformerTest.convertYearRangeField()METHODc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java1 1(%"
isFinalfalse"§
declarationStringé supported by GVK") <br><mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearRangeField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearRangeField2Ã
[org.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearRangeField()OVERRIDEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java1 1(%2x
voidRETURN_TYPEc
Ysrc\test\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformerTest.java1 1(