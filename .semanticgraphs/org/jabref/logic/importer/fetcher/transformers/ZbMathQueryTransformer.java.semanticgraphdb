
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java∞
Eorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformerCLASSb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (#"9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstractfalse"¥
declarationStringû<mark class="modifier">public </mark><mark class="modifier">class </mark>ZbMathQueryTransformer<mark class="modifier"> extends </mark>AbstractQueryTransformer"
accesspublic*ZbMathQueryTransformer2–
]org.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.getLogicalAndOperator()DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (*2œ
\org.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.getLogicalOrOperator()DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java ()2–
]org.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.getLogicalNotOperator()DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (*2◊
dorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleAuthor(java.lang.String)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (!2÷
corg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleTitle(java.lang.String)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java ( 2ÿ
eorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleJournal(java.lang.String)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java   ("2’
borg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYear(java.lang.String)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java% %(2⁄
gorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYearRange(java.lang.String)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java* *($2ﬁ
korg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleUnFieldedTerm(java.lang.String)DECLARATIONb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java/ /(22Ü
AbstractQueryTransformerEXTENDb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java, (D
]org.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.getLogicalAndOperator()METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (*"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalAndOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalAndOperator2É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (Ì
\org.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.getLogicalOrOperator()METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java ()"
isFinalfalse"•
declarationStringè<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalOrOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalOrOperator2É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (
]org.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.getLogicalNotOperator()METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (*"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalNotOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalNotOperator2É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (´
dorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleAuthor(java.lang.String)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (!"
isFinalfalse"™
declarationStringî<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleAuthor</mark>(String author)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleAuthor2◊
korg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleAuthor(java.lang.String)!authorCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java( (.2‹
korg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleAuthor(java.lang.String)!author	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java) (/2É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (®
korg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleAuthor(java.lang.String)!author	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java) (/"
typeString"
isFinalfalse""
declarationStringString author*author2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java" ((£
corg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleTitle(java.lang.String)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java ( "
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleTitle</mark>(String title)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleTitle2’
iorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleTitle(java.lang.String)!titleCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java( (-2⁄
iorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleTitle(java.lang.String)!title	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java( (-2É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java (§
iorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleTitle(java.lang.String)!title	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java( (-"
typeString"
isFinalfalse"!
declarationStringString title*title2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java! ('¬
eorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleJournal(java.lang.String)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java   (""
isFinalfalse"±
declarationStringõ<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleJournal</mark>(String journalTitle)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleJournal2ﬁ
rorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleJournal(java.lang.String)!journalTitleCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java!( !(42„
rorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleJournal(java.lang.String)!journalTitle	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java *  (62É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java   (ª
rorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleJournal(java.lang.String)!journalTitle	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java *  (6"
typeString"
isFinalfalse"(
declarationStringString journalTitle*journalTitle2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java #  ()õ
borg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYear(java.lang.String)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java% %("
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleYear</mark>(String year)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*
handleYear2”
gorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYear(java.lang.String)!yearCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java& &(2ÿ
gorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYear(java.lang.String)!year	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java%' %(+2É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java% %(†
gorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYear(java.lang.String)!year	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java%' %(+"
typeString"
isFinalfalse" 
declarationStringString year*year2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java%  %(&√
gorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYearRange(java.lang.String)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java* *($"
isFinalfalse"∞
declarationStringö<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleYearRange</mark>(String yearRange)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleYearRange2›
qorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYearRange(java.lang.String)!yearRangeCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java+ +( 2‚
qorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYearRange(java.lang.String)!yearRange	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java*, *(52É
java.lang.StringRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java* *(¥
qorg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleYearRange(java.lang.String)!yearRange	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java*, *(5"
typeString"
isFinalfalse"%
declarationStringString yearRange*	yearRange2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java*% *(+Û	
korg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleUnFieldedTerm(java.lang.String)METHODb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java/ /(2"
isFinalfalse"ø
declarationString©<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>Optional&lt;String&gt; <mark class="method">handleUnFieldedTerm</mark>(String term)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeOptional<String>*handleUnFieldedTerm2‹
porg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleUnFieldedTerm(java.lang.String)!termCALLb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java05 0(92·
porg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleUnFieldedTerm(java.lang.String)!term	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java/: /(>2Ö
java.util.OptionalRETURN_TYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java/ /(2å
java.lang.StringRETURN_TYPE_ARGUMENTb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java/ /(©
porg.jabref.logic.importer.fetcher.transformers.ZbMathQueryTransformer.handleUnFieldedTerm(java.lang.String)!term	PARAMETERb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java/: /(>"
typeString"
isFinalfalse" 
declarationStringString term*term2|
java.lang.StringTYPEb
Xsrc\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java/3 /(9