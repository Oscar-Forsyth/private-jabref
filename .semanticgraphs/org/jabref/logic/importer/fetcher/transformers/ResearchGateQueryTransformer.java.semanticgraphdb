
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java‰
Korg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformerCLASSh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java ()"9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstractfalse"∫
declarationString§<mark class="modifier">public </mark><mark class="modifier">class </mark>ResearchGateQueryTransformer<mark class="modifier"> extends </mark>AbstractQueryTransformer"
accesspublic*ResearchGateQueryTransformer2‹
corg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.getLogicalAndOperator()DECLARATIONh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (*2€
borg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.getLogicalOrOperator()DECLARATIONh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java ()2‹
corg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.getLogicalNotOperator()DECLARATIONh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (*2„
jorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleAuthor(java.lang.String)DECLARATIONh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (!2‚
iorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleTitle(java.lang.String)DECLARATIONh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java ( 2‰
korg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleJournal(java.lang.String)DECLARATIONh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java   ("2·
horg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleYear(java.lang.String)DECLARATIONh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java% %(2å
AbstractQueryTransformerEXTENDh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java2 (JÇ
corg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.getLogicalAndOperator()METHODh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (*"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalAndOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalAndOperator2â
java.lang.StringRETURN_TYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (ˇ
borg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.getLogicalOrOperator()METHODh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java ()"
isFinalfalse"•
declarationStringè<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalOrOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalOrOperator2â
java.lang.StringRETURN_TYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (Ç
corg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.getLogicalNotOperator()METHODh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (*"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalNotOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalNotOperator2â
java.lang.StringRETURN_TYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (ù

jorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleAuthor(java.lang.String)METHODh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (!"
isFinalfalse"™
declarationStringî<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleAuthor</mark>(String author)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleAuthor2≈
Sorg.jabref.model.strings.StringUtil.quoteStringIfSpaceIsContained(java.lang.String)CALLh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (72„
qorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleAuthor(java.lang.String)!authorCALLh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java8 (>2Ë
qorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleAuthor(java.lang.String)!author	PARAMETERh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java) (/2â
java.lang.StringRETURN_TYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (ª
qorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleAuthor(java.lang.String)!author	PARAMETERh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java) (/"
typeString"
isFinalfalse""
declarationStringString author*author2Ç
java.lang.StringTYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java" ((ï

iorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleTitle(java.lang.String)METHODh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java ( "
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleTitle</mark>(String title)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleTitle2≈
Sorg.jabref.model.strings.StringUtil.quoteStringIfSpaceIsContained(java.lang.String)CALLh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (72·
oorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleTitle(java.lang.String)!titleCALLh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java8 (=2Ê
oorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleTitle(java.lang.String)!title	PARAMETERh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java( (-2â
java.lang.StringRETURN_TYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java (∑
oorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleTitle(java.lang.String)!title	PARAMETERh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java( (-"
typeString"
isFinalfalse"!
declarationStringString title*title2Ç
java.lang.StringTYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java! ('¥

korg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleJournal(java.lang.String)METHODh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java   (""
isFinalfalse"±
declarationStringõ<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleJournal</mark>(String journalTitle)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleJournal2≈
Sorg.jabref.model.strings.StringUtil.quoteStringIfSpaceIsContained(java.lang.String)CALLh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java! !(72Í
xorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleJournal(java.lang.String)!journalTitleCALLh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java!8 !(D2Ô
xorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleJournal(java.lang.String)!journalTitle	PARAMETERh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java *  (62â
java.lang.StringRETURN_TYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java   (Œ
xorg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleJournal(java.lang.String)!journalTitle	PARAMETERh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java *  (6"
typeString"
isFinalfalse"(
declarationStringString journalTitle*journalTitle2Ç
java.lang.StringTYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java #  ()ç

horg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleYear(java.lang.String)METHODh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java% %("
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleYear</mark>(String year)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*
handleYear2≈
Sorg.jabref.model.strings.StringUtil.quoteStringIfSpaceIsContained(java.lang.String)CALLh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java& &(72ﬂ
morg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleYear(java.lang.String)!yearCALLh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java&8 &(<2‰
morg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleYear(java.lang.String)!year	PARAMETERh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java%' %(+2â
java.lang.StringRETURN_TYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java% %(≥
morg.jabref.logic.importer.fetcher.transformers.ResearchGateQueryTransformer.handleYear(java.lang.String)!year	PARAMETERh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java%' %(+"
typeString"
isFinalfalse" 
declarationStringString year*year2Ç
java.lang.StringTYPEh
^src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java%  %(&