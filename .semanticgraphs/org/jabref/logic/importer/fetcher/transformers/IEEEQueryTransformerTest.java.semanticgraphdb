
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaÇ
Gorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTestCLASSd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java ("9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstractfalse"¬
declarationString¨<mark class="modifier"> </mark><mark class="modifier">class </mark>IEEEQueryTransformerTest<mark class="modifier"> extends </mark>InfixTransformerTest<IEEEQueryTransformer>"
accesspackage_private*IEEEQueryTransformerTest2Õ
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java  (.2Œ
Yorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getAuthorPrefix()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java (!2—
\org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getUnFieldedPrefix()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java ($2œ
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getJournalPrefix()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java ("2Õ
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTitlePrefix()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java$ $( 2ÿ
corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java) )()2œ
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java4 4( 2‘
_org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaC C(%2œ
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTitleTestData()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaN% N(52
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaX X(2≥
Corg.jabref.logic.importer.fetcher.transformers.InfixTransformerTestEXTENDd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java' (;2¡
Corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerEXTEND_TYPE_ARGUMENTd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java< (Pı
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java  (."
isFinalfalse"™
declarationStringî<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>IEEEQueryTransformer <mark class="method">getTransformer</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeIEEEQueryTransformer*getTransformer2»
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.IEEEQueryTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java ('2∏
Corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java (®
Yorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getAuthorPrefix()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java (!"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getAuthorPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAuthorPrefix2«
Uorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getAuthorPrefix()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java (!2Ö
java.lang.StringRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java (¥
\org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getUnFieldedPrefix()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java ($"
isFinalfalse"†
declarationStringä<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getUnFieldedPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getUnFieldedPrefix2 
Xorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getUnFieldedPrefix()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java ($2Ö
java.lang.StringRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java (¨
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getJournalPrefix()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java (""
isFinalfalse"û
declarationStringà<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getJournalPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getJournalPrefix2»
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getJournalPrefix()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java ("2Ö
java.lang.StringRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java (§
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTitlePrefix()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java$ $( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getTitlePrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getTitlePrefix2∆
Torg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getTitlePrefix()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java$ $( 2Ö
java.lang.StringRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java$ $(Ö
corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java) )()"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertJournalFieldPrefix</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertJournalFieldPrefix2∆
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java*+ *(92Ü
java.util.Optional.of(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java0 0( 2È
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?queryString@44.15:44.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java-A -(L2È
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?transformer@42.29:42.40CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java. .(2È
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?luceneQuery@45.18:45.29CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java.) .(42È
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?transformer@42.29:42.40CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java0, 0(72—
_org.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertJournalFieldPrefix()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java) )()2
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?transformer@42.29:42.40DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java* *((2
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?queryString@44.15:44.26DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java, ,(2
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?luceneQuery@45.18:45.29DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java- -(2y
voidRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java) )(≤
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?transformer@42.29:42.40VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java* *(("
typeIEEEQueryTransformer"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>IEEEQueryTransformer <mark class="class-field">transformer</mark> = getTransformer()*transformer2±
Corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java* *(2∆
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java*+ *(9ò
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?queryString@44.15:44.26VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java, ,("
typeString"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "journal:Nature"*queryString2~
java.lang.StringTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java, ,(Å
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?luceneQuery@45.18:45.29VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java- -("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2©
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java- -(2È
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertJournalFieldPrefix()?queryString@44.15:44.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java-A -(Lé
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java4 4( "
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearField2∆
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java8+ 8(92Ü
java.util.Optional.of(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java> >( 2Ü
java.util.Optional.of(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java? ?( 2‡
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?queryString@58.15:58.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java;A ;(L2‡
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?transformer@56.29:56.40CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java< <(2‡
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?luceneQuery@59.18:59.29CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java<) <(42‡
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?transformer@56.29:56.40CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java>( >(32‡
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?transformer@56.29:56.40CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java?( ?(32»
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearField()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java4 4( 2Á
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?transformer@56.29:56.40DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java8 8((2Á
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?queryString@58.15:58.26DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java: :(2Á
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?luceneQuery@59.18:59.29DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java; ;(2y
voidRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java4 4(©
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?transformer@56.29:56.40VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java8 8(("
typeIEEEQueryTransformer"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>IEEEQueryTransformer <mark class="class-field">transformer</mark> = getTransformer()*transformer2±
Corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java8 8(2∆
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java8+ 8(9ä
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?queryString@58.15:58.26VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java: :("
typeString"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year:2021"*queryString2~
java.lang.StringTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java: :(Ô
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?luceneQuery@59.18:59.29VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java; ;("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2©
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java; ;(2‡
rorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearField()?queryString@58.15:58.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java;A ;(L 
_org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaC C(%"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearRangeField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearRangeField2∆
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaD+ D(92Ü
java.util.Optional.of(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaJ J( 2Ü
java.util.Optional.of(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaK K( 2Â
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?queryString@70.15:70.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaGA G(L2Â
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?transformer@68.29:68.40CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaH H(2Â
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?luceneQuery@71.18:71.29CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaH) H(42Â
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?transformer@68.29:68.40CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaJ( J(32Â
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?transformer@68.29:68.40CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaK( K(32Õ
[org.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearRangeField()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaC C(%2Ï
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?transformer@68.29:68.40DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaD D((2Ï
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?queryString@70.15:70.26DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaF F(2Ï
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?luceneQuery@71.18:71.29DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaG G(2y
voidRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaC C(Æ
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?transformer@68.29:68.40VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaD D(("
typeIEEEQueryTransformer"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>IEEEQueryTransformer <mark class="class-field">transformer</mark> = getTransformer()*transformer2±
Corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaD D(2∆
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaD+ D(9õ
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?queryString@70.15:70.26VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaF F("
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year-range:2018-2021"*queryString2~
java.lang.StringTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaF F(˘
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?luceneQuery@71.18:71.29VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaG G("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2©
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaG G(2Â
worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.convertYearRangeField()?queryString@70.15:70.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaGA G(L®
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTitleTestData()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaN% N(5"
isFinalfalse"ß
declarationStringë<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">getTitleTestData</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<Arguments>*getTitleTestData2å
java.util.stream.StreamRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaN N(2©
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaN N(#∞
{org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaX X("
isFinalfalse"Ç
declarationStringÏ <br><mark class="annotation">@MethodSource("getTitleTestData")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">stopWordRemoval</mark>(String expected<mark class="modifier"><mark class="modifier">,</mark></mark> String queryString)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*stopWordRemoval2∆
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaZ" Z(02é
 java.util.Optional.ofNullable(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java[ [((2ˆ
áorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)!queryStringCALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaYA Y(L2Ç
ìorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)?luceneQuery@89.18:89.29CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaZH Z(S2Û
Ñorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)!expectedCALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java[) [(12˝
éorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)?result@90.25:90.31CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.java[4 [(:2¯
Ñorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)!expected	PARAMETERd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaX' X(/2˚
áorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)!queryString	PARAMETERd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaX8 X(C2â
ìorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)?luceneQuery@89.18:89.29DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaY Y(2Ñ
éorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)?result@90.25:90.31DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaZ Z(2y
voidRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaX X(ß
ìorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)?luceneQuery@89.18:89.29VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaY Y("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2©
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaY Y(2ˆ
áorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)!queryStringCALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaYA Y(Lµ	
éorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)?result@90.25:90.31VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaZ Z("
typeOptional<String>"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>Optional<String> <mark class="class-field">result</mark> = getTransformer().transformLuceneQuery(luceneQuery)*result2Ä
java.util.OptionalTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaZ Z(2á
java.lang.StringTYPE_ARGUMENTd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaZ Z(2∆
Xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaZ" Z(02Ç
ìorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)?luceneQuery@89.18:89.29CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaZH Z(S 
Ñorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)!expected	PARAMETERd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaX' X(/"
typeString"
isFinalfalse"$
declarationStringString expected*expected2~
java.lang.StringTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaX  X(&”
áorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerTest.stopWordRemoval(java.lang.String, java.lang.String)!queryString	PARAMETERd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaX8 X(C"
typeString"
isFinalfalse"'
declarationStringString queryString*queryString2~
java.lang.StringTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformerTest.javaX1 X(7