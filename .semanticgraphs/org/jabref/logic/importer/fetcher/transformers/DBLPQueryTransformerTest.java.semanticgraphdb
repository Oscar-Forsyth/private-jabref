
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java‚
Gorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTestCLASSd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java	 	("9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstractfalse"¬
declarationString¨<mark class="modifier"> </mark><mark class="modifier">class </mark>DBLPQueryTransformerTest<mark class="modifier"> extends </mark>InfixTransformerTest<DBLPQueryTransformer>"
accesspackage_private*DBLPQueryTransformerTest2Õ
Xorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getTransformer()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java  (.2Œ
Yorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getAuthorPrefix()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java (!2—
\org.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getUnFieldedPrefix()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java ($2œ
Zorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getJournalPrefix()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java ("2Õ
Xorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getTitlePrefix()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java   ( 2œ
Zorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java% %( 2‘
_org.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java. .(%2≥
Corg.jabref.logic.importer.fetcher.transformers.InfixTransformerTestEXTENDd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java	' 	(;2¡
Corg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerEXTEND_TYPE_ARGUMENTd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java	< 	(Pı
Xorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getTransformer()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java  (."
isFinalfalse"™
declarationStringî<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>DBLPQueryTransformer <mark class="method">getTransformer</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeDBLPQueryTransformer*getTransformer2»
Zorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.DBLPQueryTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java ('2∏
Corg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java (®
Yorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getAuthorPrefix()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java (!"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getAuthorPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getAuthorPrefix2«
Uorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getAuthorPrefix()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java (!2Ö
java.lang.StringRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java (¥
\org.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getUnFieldedPrefix()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java ($"
isFinalfalse"†
declarationStringä<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getUnFieldedPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getUnFieldedPrefix2 
Xorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getUnFieldedPrefix()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java ($2Ö
java.lang.StringRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java (¨
Zorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getJournalPrefix()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java (""
isFinalfalse"û
declarationStringà<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getJournalPrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getJournalPrefix2»
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getJournalPrefix()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java ("2Ö
java.lang.StringRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java (§
Xorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getTitlePrefix()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java   ( "
isFinalfalse"ú
declarationStringÜ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getTitlePrefix</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getTitlePrefix2∆
Torg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getTitlePrefix()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java   ( 2Ö
java.lang.StringRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java   (Ü
Zorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java% %( "
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearField2∆
Xorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java(' ((52Ü
java.util.Optional.of(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java)- )(/2‡
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?queryString@38.15:38.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java'A '(L2‡
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java(M ((X2›
oorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?expected@41.25:41.33CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java* *(2‡
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?searchQuery@40.25:40.36CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java* *(*2»
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearField()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java% %( 2Á
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?queryString@38.15:38.26DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java& &(2Á
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java' '(2Á
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?searchQuery@40.25:40.36DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java( (($2‰
oorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?expected@41.25:41.33DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java) )(!2y
voidRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java% %(ä
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?queryString@38.15:38.26VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java& &("
typeString"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year:2015"*queryString2~
java.lang.StringTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java& &(Ô
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java' '("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2©
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java' '(2‡
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?queryString@38.15:38.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java'A '(LÄ	
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?searchQuery@40.25:40.36VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java( (($"
typeOptional<String>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Optional<String> <mark class="class-field">searchQuery</mark> = getTransformer().transformLuceneQuery(luceneQuery)*searchQuery2Ä
java.util.OptionalTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java( ((2á
java.lang.StringTYPE_ARGUMENTd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java( ((2∆
Xorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java(' ((52‡
rorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?luceneQuery@39.18:39.29CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java(M ((X¥
oorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearField()?expected@41.25:41.33VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java) )(!"
typeOptional<String>"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>Optional<String> <mark class="class-field">expected</mark> = Optional.of("2015")*expected2Ä
java.util.OptionalTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java) )(2á
java.lang.StringTYPE_ARGUMENTd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java) )(2Ü
java.util.Optional.of(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java)- )(/¬
_org.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()METHODd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java. .(%"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">convertYearRangeField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearRangeField2∆
Xorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java1' 1(52Ü
java.util.Optional.of(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java2- 2(/2Â
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?queryString@47.15:47.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java0A 0(L2Â
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?luceneQuery@48.18:48.29CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java1M 1(X2‚
torg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?expected@50.25:50.33CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java3 3(2Â
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?searchQuery@49.25:49.36CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java3 3(*2Õ
[org.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearRangeField()OVERRIDEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java. .(%2Ï
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?queryString@47.15:47.26DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java/ /(2Ï
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?luceneQuery@48.18:48.29DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java0 0(2Ï
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?searchQuery@49.25:49.36DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java1 1($2È
torg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?expected@50.25:50.33DECLARATIONd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java2 2(!2y
voidRETURN_TYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java. .(õ
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?queryString@47.15:47.26VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java/ /("
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year-range:2012-2015"*queryString2~
java.lang.StringTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java/ /(˘
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?luceneQuery@48.18:48.29VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java0 0("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2©
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java0 0(2Â
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?queryString@47.15:47.26CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java0A 0(Lä	
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?searchQuery@49.25:49.36VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java1 1($"
typeOptional<String>"
isFinalfalse"ß
declarationStringë<mark class="modifier"> </mark>Optional<String> <mark class="class-field">searchQuery</mark> = getTransformer().transformLuceneQuery(luceneQuery)*searchQuery2Ä
java.util.OptionalTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java1 1(2á
java.lang.StringTYPE_ARGUMENTd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java1 1(2∆
Xorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.getTransformer()CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java1' 1(52Â
worg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?luceneQuery@48.18:48.29CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java1M 1(X»
torg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerTest.convertYearRangeField()?expected@50.25:50.33VARIABLEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java2 2(!"
typeOptional<String>"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>Optional<String> <mark class="class-field">expected</mark> = Optional.of("2012|2013|2014|2015")*expected2Ä
java.util.OptionalTYPEd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java2 2(2á
java.lang.StringTYPE_ARGUMENTd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java2 2(2Ü
java.util.Optional.of(T)CALLd
Zsrc\test\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformerTest.java2- 2(/