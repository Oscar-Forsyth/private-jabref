
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java„
Corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformerCLASS`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (!"9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstractfalse"æ
declarationString®<mark class="modifier">public </mark><mark class="modifier">class </mark>IEEEQueryTransformer<mark class="modifier"> extends </mark>YearRangeByFilteringQueryTransformer"
accesspublic*IEEEQueryTransformer2Ã
[org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getLogicalAndOperator()DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (*2À
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getLogicalOrOperator()DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java ()2Ã
[org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getLogicalNotOperator()DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (*2”
borg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleAuthor(java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java" "(!2“
aorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleTitle(java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java' '( 2‘
corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleJournal(java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java, ,("2—
`org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleYear(java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java2 2(2È
xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleOtherField(java.lang.String, java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java9 9(/2⁄
iorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleUnFieldedTerm(java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaA A(22⁄
iorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleArticleNumber(java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaH H(02¡
Porg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getJournal()DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaM M(&2«
Vorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getArticleNumber()DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaQ Q(,2»
Worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?journal@15.19:15.26DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (2Œ
]org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?articleNumber@16.19:16.32DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java ( 2ø
Sorg.jabref.logic.importer.fetcher.transformers.YearRangeByFilteringQueryTransformerEXTEND`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java* (NÍ
[org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getLogicalAndOperator()METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (*"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalAndOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalAndOperator2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (Á
Zorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getLogicalOrOperator()METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java ()"
isFinalfalse"•
declarationStringè<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalOrOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalOrOperator2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (Í
[org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getLogicalNotOperator()METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (*"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalNotOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalNotOperator2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (ù
borg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleAuthor(java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java" "(!"
isFinalfalse"™
declarationStringî<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleAuthor</mark>(String author)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleAuthor2”
iorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleAuthor(java.lang.String)!authorCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java#, #(22ÿ
iorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleAuthor(java.lang.String)!author	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java") "(/2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java" "(¢
iorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleAuthor(java.lang.String)!author	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java") "(/"
typeString"
isFinalfalse""
declarationStringString author*author2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java"" "((ï
aorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleTitle(java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java' '( "
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleTitle</mark>(String title)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleTitle2—
gorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleTitle(java.lang.String)!titleCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java(3 ((82÷
gorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleTitle(java.lang.String)!title	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java'( '(-2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java' '(û
gorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleTitle(java.lang.String)!title	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java'( '(-"
typeString"
isFinalfalse"!
declarationStringString title*title2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java'! '('Å
corg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleJournal(java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java, ,(""
isFinalfalse"¨
declarationStringñ<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleJournal</mark>(String journal)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleJournal2Ω
Sorg.jabref.model.strings.StringUtil.quoteStringIfSpaceIsContained(java.lang.String)CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java. .(72’
korg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleJournal(java.lang.String)!journalCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java- -(2’
korg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleJournal(java.lang.String)!journalCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java.8 .(?2¡
Worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?journal@15.19:15.26CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java- -(2⁄
korg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleJournal(java.lang.String)!journal	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java,* ,(12Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java, ,(¶
korg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleJournal(java.lang.String)!journal	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java,* ,(1"
typeString"
isFinalfalse"#
declarationStringString journal*journal2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java,# ,()ë
`org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleYear(java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java2 2("
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleYear</mark>(String year)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*
handleYear2ñ
,java.lang.Integer.parseInt(java.lang.String)CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java30 3(82ñ
,java.lang.Integer.parseInt(java.lang.String)CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java4, 4(42œ
eorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleYear(java.lang.String)!yearCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java39 3(=2œ
eorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleYear(java.lang.String)!yearCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java45 4(92‘
eorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleYear(java.lang.String)!year	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java2' 2(+2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java2 2(ö
eorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleYear(java.lang.String)!year	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java2' 2(+"
typeString"
isFinalfalse" 
declarationStringString year*year2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java2  2(&ﬂ
xorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleOtherField(java.lang.String, java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java9 9(/"
isFinalfalse"é
declarationString¯<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>Optional&lt;String&gt; <mark class="method">handleOtherField</mark>(String fieldAsString<mark class="modifier"><mark class="modifier">,</mark></mark> String term)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeOptional<String>*handleOtherField2Ò
Üorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleOtherField(java.lang.String, java.lang.String)!fieldAsStringCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java: :($2ˆ
Üorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleOtherField(java.lang.String, java.lang.String)!fieldAsString	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java97 9(D2Ï
}org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleOtherField(java.lang.String, java.lang.String)!term	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java9M 9(Q2É
java.util.OptionalRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java9 9(2ä
java.lang.StringRETURN_TYPE_ARGUMENT`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java9 9(Œ
Üorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleOtherField(java.lang.String, java.lang.String)!fieldAsString	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java97 9(D"
typeString"
isFinalfalse")
declarationStringString fieldAsString*fieldAsString2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java90 9(6≤
}org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleOtherField(java.lang.String, java.lang.String)!term	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java9M 9(Q"
typeString"
isFinalfalse" 
declarationStringString term*term2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java9F 9(L⁄
iorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleUnFieldedTerm(java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaA A(2"
isFinalfalse"ø
declarationString©<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>Optional&lt;String&gt; <mark class="method">handleUnFieldedTerm</mark>(String term)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeOptional<String>*handleUnFieldedTerm2í
(java.util.Set.contains(java.lang.Object)CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaB B('2Ñ
java.util.Optional.empty()CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaC C(!2ÿ
norg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleUnFieldedTerm(java.lang.String)!termCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaB( B(,2ÿ
norg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleUnFieldedTerm(java.lang.String)!termCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaE) E(-2›
norg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleUnFieldedTerm(java.lang.String)!term	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaA: A(>2É
java.util.OptionalRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaA A(2ä
java.lang.StringRETURN_TYPE_ARGUMENT`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaA A(£
norg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleUnFieldedTerm(java.lang.String)!term	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaA: A(>"
typeString"
isFinalfalse" 
declarationStringString term*term2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaA3 A(9Å
iorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleArticleNumber(java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaH H(0"
isFinalfalse"é
declarationStringy<mark class="modifier">private </mark>Optional&lt;String&gt; <mark class="method">handleArticleNumber</mark>(String term)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeOptional<String>*handleArticleNumber2Ñ
java.util.Optional.empty()CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaJ J(2«
]org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?articleNumber@16.19:16.32CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaI I(2ÿ
norg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleArticleNumber(java.lang.String)!termCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaI I(2›
norg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleArticleNumber(java.lang.String)!term	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaH8 H(<2É
java.util.OptionalRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaH H(2ä
java.lang.StringRETURN_TYPE_ARGUMENT`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaH H(£
norg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.handleArticleNumber(java.lang.String)!term	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaH8 H(<"
typeString"
isFinalfalse" 
declarationStringString term*term2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaH1 H(7–

Porg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getJournal()METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaM M(&"
isFinalfalse"y
declarationStringd<mark class="modifier">public </mark>Optional&lt;String&gt; <mark class="method">getJournal</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<String>*
getJournal2Ñ
java.util.Optional.empty()CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaN* N(/2Ç
java.util.Optional.of(T)CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaN= N(?2¡
Worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?journal@15.19:15.26CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaN N(2¡
Worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?journal@15.19:15.26CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaN@ N(G2É
java.util.OptionalRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaM M(2ä
java.lang.StringRETURN_TYPE_ARGUMENT`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaM M(Ó

Vorg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer.getArticleNumber()METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaQ Q(,"
isFinalfalse"
declarationStringj<mark class="modifier">public </mark>Optional&lt;String&gt; <mark class="method">getArticleNumber</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<String>*getArticleNumber2Ñ
java.util.Optional.empty()CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaR0 R(52Ç
java.util.Optional.of(T)CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaRC R(E2«
]org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?articleNumber@16.19:16.32CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaR R(2«
]org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?articleNumber@16.19:16.32CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaRF R(S2É
java.util.OptionalRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaQ Q(2ä
java.lang.StringRETURN_TYPE_ARGUMENT`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.javaQ Q(˛
Worg.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?journal@15.19:15.26VARIABLE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java ("
isFinalfalse"
typeString"j
declarationStringU<mark class="modifier">private </mark>String <mark class="class-field">journal</mark>"
isStaticfalse"
accessprivate*journal2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (ê
]org.jabref.logic.importer.fetcher.transformers.IEEEQueryTransformer?articleNumber@16.19:16.32VARIABLE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java ( "
isFinalfalse"
typeString"p
declarationString[<mark class="modifier">private </mark>String <mark class="class-field">articleNumber</mark>"
isStaticfalse"
accessprivate*articleNumber2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java (