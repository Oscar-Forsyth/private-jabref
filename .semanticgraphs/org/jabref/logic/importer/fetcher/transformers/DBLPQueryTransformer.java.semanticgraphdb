
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.javaó
Corg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformerCLASS`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java
 
(!"9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstractfalse"≈
declarationStringØ<mark class="modifier">public </mark><mark class="modifier">class </mark>DBLPQueryTransformer<mark class="modifier"> extends </mark>YearAndYearRangeByFilteringQueryTransformer"
accesspublic*DBLPQueryTransformer2Ã
[org.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.getLogicalAndOperator()DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (*2À
Zorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.getLogicalOrOperator()DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java ()2Ã
[org.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.getLogicalNotOperator()DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (*2”
borg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleAuthor(java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (!2“
aorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleTitle(java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java$ $( 2‘
corg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleJournal(java.lang.String)DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java* *("2«
Vorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer?LOGGER@11.32:11.38DECLARATION`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java  (&2∆
Zorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerEXTEND`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java
* 
(UÍ
[org.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.getLogicalAndOperator()METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (*"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalAndOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalAndOperator2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (Á
Zorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.getLogicalOrOperator()METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java ()"
isFinalfalse"•
declarationStringè<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalOrOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalOrOperator2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (≠
[org.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.getLogicalNotOperator()METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (*"
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">getLogicalNotOperator</mark>()"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*getLogicalNotOperator2¿
Vorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer?LOGGER@11.32:11.38CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (›	
borg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleAuthor(java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (!"
isFinalfalse"™
declarationStringî<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleAuthor</mark>(String author)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleAuthor2Ω
Sorg.jabref.model.strings.StringUtil.quoteStringIfSpaceIsContained(java.lang.String)CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java   (72”
iorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleAuthor(java.lang.String)!authorCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java 8  (>2ÿ
iorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleAuthor(java.lang.String)!author	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java) (/2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (¢
iorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleAuthor(java.lang.String)!author	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java) (/"
typeString"
isFinalfalse""
declarationStringString author*author2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java" ((’	
aorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleTitle(java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java$ $( "
isFinalfalse"®
declarationStringí<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleTitle</mark>(String title)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleTitle2Ω
Sorg.jabref.model.strings.StringUtil.quoteStringIfSpaceIsContained(java.lang.String)CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java& &(72—
gorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleTitle(java.lang.String)!titleCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java&8 &(=2÷
gorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleTitle(java.lang.String)!title	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java$( $(-2Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java$ $(û
gorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleTitle(java.lang.String)!title	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java$( $(-"
typeString"
isFinalfalse"!
declarationStringString title*title2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java$! $('Ù	
corg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleJournal(java.lang.String)METHOD`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java* *(""
isFinalfalse"±
declarationStringõ<mark class="annotation">@Override</mark> <br><mark class="modifier">protected </mark>String <mark class="method">handleJournal</mark>(String journalTitle)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeString*handleJournal2Ω
Sorg.jabref.model.strings.StringUtil.quoteStringIfSpaceIsContained(java.lang.String)CALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java, ,(72⁄
porg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleJournal(java.lang.String)!journalTitleCALL`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java,8 ,(D2ﬂ
porg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleJournal(java.lang.String)!journalTitle	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java** *(62Å
java.lang.StringRETURN_TYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java* *(µ
porg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.handleJournal(java.lang.String)!journalTitle	PARAMETER`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java** *(6"
typeString"
isFinalfalse"(
declarationStringString journalTitle*journalTitle2z
java.lang.StringTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java*# *()¯
Vorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer?LOGGER@11.32:11.38VALUE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java  (&"
isFinaltrue"
typeLogger"Í
declarationString‘<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(DBLPQueryTransformer.class);"
isStatictrue"
accessprivate*LOGGER2z
org.slf4j.LoggerTYPE`
Vsrc\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java (