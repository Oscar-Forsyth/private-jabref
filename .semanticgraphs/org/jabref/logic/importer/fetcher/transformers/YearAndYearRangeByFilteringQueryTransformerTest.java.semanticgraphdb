
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java˜
^org.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTestCLASS{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java	 	(E"9
package.org.jabref.logic.importer.fetcher.transformers"
isFinalfalse"
inner classfalse"

isAbstracttrue"á
declarationStringÒ<mark class="modifier">public </mark><mark class="modifier">abstract </mark><mark class="modifier">class </mark>YearAndYearRangeByFilteringQueryTransformerTest<mark class="modifier"> extends </mark>YearRangeByFilteringQueryTransformerTest<T>"
accesspublic*/YearAndYearRangeByFilteringQueryTransformerTest2˝
qorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()DECLARATION{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java ( 2‡
Worg.jabref.logic.importer.fetcher.transformers.YearRangeByFilteringQueryTransformerTestEXTEND}
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java	Ö 	(≠2Ô
`org.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.TTYPE_PARAMETER{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java	F 	(G2˜
`org.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.TEXTEND_TYPE_ARGUMENT}
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java	Æ 	(Ø£!
qorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()METHOD{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java ( "
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>&lt;<mark class="modifier"><mark class="type-parameter">T extends YearAndYearRangeByFilteringQueryTransformer</mark></mark>&gt; <mark class="modifier">void</mark> <mark class="method">convertYearField</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*convertYearField2Ÿ
Torg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getTransformer()CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.javaB (P2ù
java.util.Optional.of(T)CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java ( 2è
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?queryString@13.15:13.26CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.javaA (L2è
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?transformer@12.52:12.63CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java! (,2è
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?luceneQuery@14.18:14.29CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.javaB (M2â
Éorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?query@15.25:15.30CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java& (+2è
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?transformer@12.52:12.63CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (&2è
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?transformer@12.52:12.63CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (&2ﬂ
Vorg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.convertYearField()OVERRIDE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java ( 2ñ
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?transformer@12.52:12.63DECLARATION{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java4 (?2ñ
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?queryString@13.15:13.26DECLARATION{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (2ñ
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?luceneQuery@14.18:14.29DECLARATION{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (2ê
Éorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?query@15.25:15.30DECLARATION{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (2ê
voidRETURN_TYPE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (»
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?transformer@12.52:12.63VARIABLE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java4 (?"3
type+YearAndYearRangeByFilteringQueryTransformer"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>YearAndYearRangeByFilteringQueryTransformer <mark class="class-field">transformer</mark> = getTransformer()*transformer2ﬂ
Zorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTYPE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (32Ÿ
Torg.jabref.logic.importer.fetcher.transformers.InfixTransformerTest.getTransformer()CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.javaB (P—
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?queryString@13.15:13.26VARIABLE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java ("
typeString"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>String <mark class="class-field">queryString</mark> = "year:2021"*queryString2ï
java.lang.StringTYPE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (‰
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?luceneQuery@14.18:14.29VARIABLE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java ("
type	QueryNode"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2¿
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (2è
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?queryString@13.15:13.26CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.javaA (Læ

Éorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?query@15.25:15.30VARIABLE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java ("
typeOptional<String>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Optional<String> <mark class="class-field">query</mark> = transformer.transformLuceneQuery(luceneQuery)*query2ó
java.util.OptionalTYPE{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (2û
java.lang.StringTYPE_ARGUMENT{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java (2è
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?transformer@12.52:12.63CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java! (,2è
âorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.convertYearField()?luceneQuery@14.18:14.29CALL{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.javaB (M÷
`org.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerTest.TTYPE_PARAMETER{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java	F 	(G*T2·
Zorg.jabref.logic.importer.fetcher.transformers.YearAndYearRangeByFilteringQueryTransformerEXTEND{
qsrc\test\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformerTest.java	P 	({