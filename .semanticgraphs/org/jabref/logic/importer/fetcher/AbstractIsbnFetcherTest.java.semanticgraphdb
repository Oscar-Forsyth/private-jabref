
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java±
9org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTestCLASSV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (-",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstracttrue"Œ
declarationString∏<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">abstract </mark><mark class="modifier">class </mark>AbstractIsbnFetcherTest"
accesspublic*AbstractIsbnFetcherTest2´
Dorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.testName()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (!2ø
Xorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.authorsAreCorrectlyFormatted()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (52ƒ
]org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdSuccessfulWithShortISBN()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (:2√
\org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (02∆
_org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdReturnsEmptyWithEmptyISBN()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java   (32œ
horg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdThrowsExceptionForShortInvalidISBN()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java& &(<2Õ
forg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdThrowsExceptionForLongInvalidISB()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java+ +(:2 
corg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdThrowsExceptionForInvalidISBN()DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java0 0(72¥
Morg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?fetcher@16.34:16.41DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java" ()2¬
[org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?bibEntryEffectiveJava@17.23:17.44DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (,§
Dorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.testName()METHODV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (!"
isFinalfalse"´
declarationStringï<mark class="modifier">public </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">testName</mark>()"
isStaticfalse"
accesspublic"

isAbstracttrue"
typevoid*testName2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (≠
Xorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.authorsAreCorrectlyFormatted()METHODV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (5"
isFinalfalse"å
declarationStringˆ<mark class="modifier">public </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">authorsAreCorrectlyFormatted</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstracttrue"
typevoid*authorsAreCorrectlyFormatted2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (√
]org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdSuccessfulWithShortISBN()METHODV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (:"
isFinalfalse"ò
declarationStringÇ<mark class="modifier">public </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">searchByIdSuccessfulWithShortISBN</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstracttrue"
typevoid*!searchByIdSuccessfulWithShortISBN2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (ò
\org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()METHODV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (0"
isFinalfalse"ö
declarationStringÑ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdSuccessfulWithLongISBN</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid* searchByIdSuccessfulWithLongISBN2≤
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java2 (C2x
java.util.Optional.of(T)CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java ( 2≠
Morg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?fetcher@16.34:16.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java* (12ª
[org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?bibEntryEffectiveJava@17.23:17.44CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java! (62’
uorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()?fetchedEntry@27.27:27.39CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java9 (E2‹
uorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()?fetchedEntry@27.27:27.39DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java ('2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (ü
uorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdSuccessfulWithLongISBN()?fetchedEntry@27.27:27.39VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java ('"
typeOptional<BibEntry>"
isFinalfalse"£
declarationStringç<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("978-0321356680")*fetchedEntry2r
java.util.OptionalTYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (2à
org.jabref.model.entry.BibEntryTYPE_ARGUMENTV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (2≤
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java2 (C2≠
Morg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?fetcher@16.34:16.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java* (1Î
_org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdReturnsEmptyWithEmptyISBN()METHODV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java   (3"
isFinalfalse"ù
declarationStringá<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdReturnsEmptyWithEmptyISBN</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*#searchByIdReturnsEmptyWithEmptyISBN2≤
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java!2 !(C2z
java.util.Optional.empty()CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java" "(#2≠
Morg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?fetcher@16.34:16.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java!* !(12ÿ
xorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdReturnsEmptyWithEmptyISBN()?fetchedEntry@33.27:33.39CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java"' "(32ﬂ
xorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdReturnsEmptyWithEmptyISBN()?fetchedEntry@33.27:33.39DECLARATIONV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java! !('2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java   (ì
xorg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdReturnsEmptyWithEmptyISBN()?fetchedEntry@33.27:33.39VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java! !('"
typeOptional<BibEntry>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("")*fetchedEntry2r
java.util.OptionalTYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java! !(2à
org.jabref.model.entry.BibEntryTYPE_ARGUMENTV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java! !(2≤
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java!2 !(C2≠
Morg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?fetcher@16.34:16.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java!* !(1˘
horg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdThrowsExceptionForShortInvalidISBN()METHODV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java& &(<"
isFinalfalse"“
declarationStringº<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdThrowsExceptionForShortInvalidISBN</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*,searchByIdThrowsExceptionForShortInvalidISBN2≤
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java'; '(L2≠
Morg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?fetcher@16.34:16.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java'3 '(:2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java& &(Û
forg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdThrowsExceptionForLongInvalidISB()METHODV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java+ +(:"
isFinalfalse"–
declarationString∫<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdThrowsExceptionForLongInvalidISB</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid**searchByIdThrowsExceptionForLongInvalidISB2≤
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java,; ,(L2≠
Morg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?fetcher@16.34:16.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java,3 ,(:2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java+ +(Í
corg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest.searchByIdThrowsExceptionForInvalidISBN()METHODV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java0 0(7"
isFinalfalse"Õ
declarationString∑<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">searchByIdThrowsExceptionForInvalidISBN</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*'searchByIdThrowsExceptionForInvalidISBN2≤
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java1; 1(L2≠
Morg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?fetcher@16.34:16.41CALLV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java13 1(:2k
voidRETURN_TYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java0 0(§
Morg.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?fetcher@16.34:16.41VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java" ()"
isFinalfalse"
typeAbstractIsbnFetcher"y
declarationStringd<mark class="modifier">protected </mark>AbstractIsbnFetcher <mark class="class-field">fetcher</mark>"
isStaticfalse"
access	protected*fetcher2ï
5org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (!°
[org.jabref.logic.importer.fetcher.AbstractIsbnFetcherTest?bibEntryEffectiveJava@17.23:17.44VARIABLEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (,"
isFinalfalse"
typeBibEntry"|
declarationStringg<mark class="modifier">protected </mark>BibEntry <mark class="class-field">bibEntryEffectiveJava</mark>"
isStaticfalse"
access	protected*bibEntryEffectiveJava2
org.jabref.model.entry.BibEntryTYPEV
Lsrc\test\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcherTest.java (