
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaë 
,org.jabref.logic.importer.fetcher.DoiFetcherCLASSI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java' '(",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"∑
declarationString°<mark class="modifier">public </mark><mark class="modifier">class </mark>DoiFetcher<mark class="modifier"><br>implements </mark>IdBasedFetcher, EntryBasedFetcher"
accesspublic*
DoiFetcher2d

DoiFetcherDECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java? ?(2ê
6org.jabref.logic.importer.fetcher.DoiFetcher.getName()DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaD D(2î
:org.jabref.logic.importer.fetcher.DoiFetcher.getHelpPage()DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaI I()2¶
Lorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaM M(2Ø
Uorg.jabref.logic.importer.fetcher.DoiFetcher.asyncPerformSearchById(java.lang.String)DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javad4 d(J2™
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javap p(/2∑
[org.jabref.logic.importer.fetcher.DoiFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∞ ∞(2∂
Zorg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaµ µ(&2∑
[org.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java… …('2π
]org.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java◊ ◊(%2”
worg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÁ Á((2»
lorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÌ Ì( 2ó
=org.jabref.logic.importer.fetcher.DoiFetcher?NAME@41.31:41.35DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java) )(#2©
Oorg.jabref.logic.importer.fetcher.DoiFetcher?APS_JOURNAL_ORG_DOI_ID@43.32:43.54DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java+  +(62ù
Corg.jabref.logic.importer.fetcher.DoiFetcher?APS_SUFFIX@44.32:44.42DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java,  ,(*2•
Korg.jabref.logic.importer.fetcher.DoiFetcher?APS_SUFFIX_PATTERN@45.33:45.51DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java-! -(32ô
?org.jabref.logic.importer.fetcher.DoiFetcher?LOGGER@47.32:47.38DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java/  /(&2≠
Sorg.jabref.logic.importer.fetcher.DoiFetcher?DATA_CITE_DCN_RATE_LIMITER@50.37:50.63DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java2% 2(?2¨
Rorg.jabref.logic.importer.fetcher.DoiFetcher?CROSSREF_DCN_RATE_LIMITER@59.37:59.62DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java;% ;(>2û
Dorg.jabref.logic.importer.fetcher.DoiFetcher?preferences@61.42:61.53DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java=* =(52}
(org.jabref.logic.importer.IdBasedFetcherEXTENDI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java'# '(12Ä
+org.jabref.logic.importer.EntryBasedFetcherEXTENDI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java'3 '(Dõ

DoiFetcherCONSTRUCTORI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java? ?("Ö
declarationStringp<mark class="modifier">public </mark><mark class="method">DoiFetcher</mark>(ImportFormatPreferences preferences)*
DoiFetcher2ó
Dorg.jabref.logic.importer.fetcher.DoiFetcher?preferences@61.42:61.53CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java@ @(2Ü
,org.jabref.logic.importer.fetcher.DoiFetcherRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java? ?(…
preferences	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java?. ?(9"
typeImportFormatPreferences"
isFinalfalse"8
declarationString#ImportFormatPreferences preferences*preferences2j
ImportFormatPreferencesTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java? ?(-ñ
6org.jabref.logic.importer.fetcher.DoiFetcher.getName()METHODI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaD D("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2ê
=org.jabref.logic.importer.fetcher.DoiFetcher?NAME@41.31:41.35CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaE E(2Ö
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaD D(2Ö
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaD D(2j
java.lang.StringRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaD D(©
:org.jabref.logic.importer.fetcher.DoiFetcher.getHelpPage()METHODI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaI I()"
isFinalfalse"´
declarationStringï<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;HelpFile&gt; <mark class="method">getHelpPage</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<HelpFile>*getHelpPage2k
java.util.Optional.of(T)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaJ J(2â
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaI I()2â
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaI I()2l
java.util.OptionalRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaI I(2Å
org.jabref.logic.help.HelpFileRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaI I(ÿ)
Lorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)METHODI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaM M("
isFinalfalse"õ
declarationStringÖ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">doAPILimiting</mark>(String identifier)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*doAPILimiting2ê
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaP  P(%2q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaT T(2q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaTC T(L2∞
]org.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaT- T(62k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaT; T(>2Ü
3java.lang.String.equalsIgnoreCase(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaV V(/2k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaV7 V(:2Ü
3java.lang.String.equalsIgnoreCase(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaX& X(62k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaX> X(A2s
 java.lang.Thread.currentThread()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java] ](,2™
Worg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaP& P(02Ø
\org.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?doi@80.22:80.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaT T(2≤
_org.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?agency@83.29:83.35CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaT$ T(*2Ø
\org.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?doi@80.22:80.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaT7 T(:2≤
_org.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?agency@83.29:83.35CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaV0 V(62∑
dorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?waitingTime@85.23:85.34CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaW W(2¶
Sorg.jabref.logic.importer.fetcher.DoiFetcher?DATA_CITE_DCN_RATE_LIMITER@50.37:50.63CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaW" W(<2≤
_org.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?agency@83.29:83.35CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaX7 X(=2∑
dorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?waitingTime@85.23:85.34CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaY Y(2•
Rorg.jabref.logic.importer.fetcher.DoiFetcher?CROSSREF_DCN_RATE_LIMITER@59.37:59.62CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaY" Y(;2í
?org.jabref.logic.importer.fetcher.DoiFetcher?LOGGER@47.32:47.38CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java\ \(2™
Worg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java]; ](E2∑
dorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?waitingTime@85.23:85.34CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java]G ](R2í
?org.jabref.logic.importer.fetcher.DoiFetcher?LOGGER@47.32:47.38CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java` `(2≠
Zorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?e@95.29:95.30CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java`? `(@2Ø
Worg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaM& M(02∂
\org.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?doi@80.22:80.25DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaP P(2π
_org.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?agency@83.29:83.35DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaS S(#2æ
dorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?waitingTime@85.23:85.34DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaU U("2¥
Zorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?e@95.29:95.30DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java_ _(2^
voidRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaM M(å
\org.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?doi@80.22:80.25VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaP P("
typeOptional<DOI>"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = DOI.parse(identifier)*doi2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaP P(2Å
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaP P(2ê
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaP  P(%2™
Worg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaP& P(0≠
_org.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?agency@83.29:83.35VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaS S(#"
typeOptional<String>"
isFinalfalse"l
declarationStringW<mark class="modifier"> </mark>Optional<String> <mark class="class-field">agency</mark>*agency2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaS S(2l
java.lang.StringTYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaS S(”
dorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?waitingTime@85.23:85.34VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaU U(""
typedouble"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark><mark class="modifier">double</mark> <mark class="class-field">waitingTime</mark> = 0.0*waitingTime2Y
doubleTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaU U(Í
Worg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaM& M(0"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaM M(%Á
Zorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)?e@95.29:95.30VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java_ _("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2f
java.io.IOExceptionTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java_ _(≤
Uorg.jabref.logic.importer.fetcher.DoiFetcher.asyncPerformSearchById(java.lang.String)METHODI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javad4 d(J"
isFinalfalse"µ
declarationStringü<mark class="modifier">protected </mark>CompletableFuture&lt;Optional&lt;BibEntry&gt;&gt; <mark class="method">asyncPerformSearchById</mark>(String identifier)"
isStaticfalse"
access	protected"

isAbstractfalse"-
type%CompletableFuture<Optional<BibEntry>>*asyncPerformSearchById2ü
Lorg.jabref.logic.importer.fetcher.DoiFetcher.doAPILimiting(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javae e(2•
Rjava.util.concurrent.CompletableFuture.supplyAsync(java.util.function.Supplier<U>)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaf! f(,2£
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javah h((2§
Qjava.util.concurrent.CompletionException.CompletionException(java.lang.Throwable)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaj j(-2≥
`org.jabref.logic.importer.fetcher.DoiFetcher.asyncPerformSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javae e( 2≥
`org.jabref.logic.importer.fetcher.DoiFetcher.asyncPerformSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javah) h(32∏
eorg.jabref.logic.importer.fetcher.DoiFetcher.asyncPerformSearchById(java.lang.String)?e@105.38:105.39CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaj. j(/2∏
`org.jabref.logic.importer.fetcher.DoiFetcher.asyncPerformSearchById(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javadR d(\2ø
eorg.jabref.logic.importer.fetcher.DoiFetcher.asyncPerformSearchById(java.lang.String)?e@105.38:105.39DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javai& i('2Ä
&java.util.concurrent.CompletableFutureRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javad d(2u
java.util.OptionalRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javad  d((2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javad) d(1Û
`org.jabref.logic.importer.fetcher.DoiFetcher.asyncPerformSearchById(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javadR d(\"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javadK d(Qì
eorg.jabref.logic.importer.fetcher.DoiFetcher.asyncPerformSearchById(java.lang.String)?e@105.38:105.39VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javai& i('"
typeFetcherException"
isFinalfalse"'
declarationStringFetcherException e*e2}
*org.jabref.logic.importer.FetcherExceptionTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javai i(%∏~
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)METHODI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javap p(/"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;BibEntry&gt; <mark class="method">performSearchById</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<BibEntry>*performSearchById2ê
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaq  q(%2q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javat t(2∞
]org.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax* x(32k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax8 x(;2q
java.util.Optional.isPresent()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javay y($2Ü
3java.lang.String.equalsIgnoreCase(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javay2 y(B2k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javayJ y(M2•
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaz' z(82é
;org.jabref.model.entry.identifier.DOI.getURIAsASCIIString()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java|/ |(B2k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java|) |(,2î
Aorg.jabref.logic.importer.WebFetcher.getUrlDownload(java.net.URL)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java' (52£
Norg.jabref.logic.net.URLDownload.addHeader(java.lang.String, java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÄ Ä("2Ü
1org.jabref.logic.net.URLDownload.openConnection()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÖ. Ö(<2l
java.lang.String.trim()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÜH Ü(L2ñ
Aorg.jabref.logic.net.URLDownload.asString(java.net.URLConnection)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÜ/ Ü(72s
java.lang.Throwable.getCause()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaâ â("2ô
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaë ë(&2s
java.util.Optional.isPresent()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaî î($2à
3java.lang.String.equalsIgnoreCase(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaî5 î(E2m
java.util.Optional.get()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaîM î(P2Ø
Zorg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaï ï()2s
java.util.Optional.isPresent()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaô! ô(*2°
Lorg.jabref.model.entry.BibEntry.hasField(org.jabref.model.entry.field.Field)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaôC ô(K2m
java.util.Optional.get()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaô= ô(@2m
java.util.Optional.get()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaö2 ö(52¡
lorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaõ õ($2m
java.util.Optional.get()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaõN õ(Q2°
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaõ2 õ(:2°
Lorg.jabref.model.entry.BibEntry.hasField(org.jabref.model.entry.field.Field)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaõ_ õ(g2Ã
worg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaú ú(/2m
java.util.Optional.get()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaúY ú(\2°
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaú= ú(E2|
'java.net.HttpURLConnection.disconnect()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java° °()2£
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java•8 •(<2£
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java®4 ®(82Ç
/org.jabref.logic.importer.fetcher.Medra.Medra()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaz z($2u
"java.net.URL.URL(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java|! |($2¢
Morg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java• •(*2∑
borg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String, java.lang.Throwable)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java® ®(&2∑
borg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String, java.lang.Throwable)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java™ ™(&2Æ
[org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaq& q(02µ
borg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doi@113.22:113.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javat t(2µ
borg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doi@113.22:113.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax4 x(72∏
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?agency@120.33:120.39CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javay y(2∏
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?agency@120.33:120.39CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javayC y(I2Æ
[org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaz9 z(C2µ
borg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doi@113.22:113.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java|% |((2∏
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doiURL@124.20:124.26CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java6 (<2º
gorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?download@127.28:127.36CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÄ Ä(2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?openConnection@131.30:131.44CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÖ Ö("2º
gorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?download@127.28:127.36CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÖ% Ö(-2¿
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?bibtexString@130.23:130.35CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÜ Ü( 2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?openConnection@131.30:131.44CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÜ8 Ü(F2µ
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@135.37:135.38CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaâ â(2µ
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@135.37:135.38CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaå å(2¿
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?fetchedEntry@117.35:117.47CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaê ê(2¿
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?bibtexString@130.23:130.35CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaê= ê(I2ô
Dorg.jabref.logic.importer.fetcher.DoiFetcher?preferences@61.42:61.53CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaêK ê(V2¿
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?fetchedEntry@117.35:117.47CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaë ë(2∫
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?agency@120.33:120.39CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaî î(2∫
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?agency@120.33:120.39CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaîF î(L2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?openConnection@131.30:131.44CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaï* ï(82¿
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?fetchedEntry@117.35:117.47CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaô ô( 2¿
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?fetchedEntry@117.35:117.47CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaô0 ô(<2¿
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?fetchedEntry@117.35:117.47CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaö% ö(12π
dorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?entry@154.29:154.34CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaõ% õ(*2π
dorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?entry@154.29:154.34CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaõ, õ(12π
dorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?entry@154.29:154.34CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaõY õ(^2π
dorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?entry@154.29:154.34CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaú0 ú(52π
dorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?entry@154.29:154.34CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaú7 ú(<2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?openConnection@131.30:131.44CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java† †("2¿
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?fetchedEntry@117.35:117.47CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java£ £(#2∞
[org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)!identifierCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java•S •(]2µ
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@167.29:167.30CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java®N ®(O2µ
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@169.32:169.33CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java™G ™(H2µ
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@171.31:171.32CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java¨Q ¨(R2∞
[org.jabref.logic.importer.fetcher.DoiFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaë' ë(:2£
Lorg.jabref.logic.importer.IdBasedFetcher.performSearchById(java.lang.String)OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javap p(/2≥
[org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javap7 p(A2º
borg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doi@113.22:113.25DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaq q(2≈
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?fetchedEntry@117.35:117.47DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javau# u(/2ø
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?agency@120.33:120.39DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax! x('2ø
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doiURL@124.20:124.26DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java| |(2¡
gorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?download@127.28:127.36DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java ($2«
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?bibtexString@130.23:130.35DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÇ Ç(#2…
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?openConnection@131.30:131.44DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÉ É(,2¿
dorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?entry@154.29:154.34DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaö ö("2º
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@135.37:135.38DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaá% á(&2º
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@167.29:167.30DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaß ß(2º
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@169.32:169.33DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java©  ©(!2º
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@171.31:171.32DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java´ ´( 2l
java.util.OptionalRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javap p(2Ç
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javap p(ñ
borg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doi@113.22:113.25VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaq q("
typeOptional<DOI>"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = DOI.parse(identifier)*doi2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaq q(2Å
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaq q(2ê
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaq  q(%2Æ
[org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaq& q(0ÿ
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?fetchedEntry@117.35:117.47VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javau# u(/"
typeOptional<BibEntry>"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark>*fetchedEntry2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javau u(2{
org.jabref.model.entry.BibEntryTYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javau u(!£
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?agency@120.33:120.39VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax! x('"
typeOptional<String>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Optional<String> <mark class="class-field">agency</mark> = getAgency(doi.get())*agency2e
java.util.OptionalTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax x(2l
java.lang.StringTYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax x(2∞
]org.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax* x(32k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax8 x(;2µ
borg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doi@113.22:113.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javax4 x(7˛
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doiURL@124.20:124.26VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java| |("
typeURL"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>URL <mark class="class-field">doiURL</mark> = new URL(doi.get().getURIAsASCIIString())*doiURL2_
java.net.URLTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java| |(2é
;org.jabref.model.entry.identifier.DOI.getURIAsASCIIString()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java|/ |(B2k
java.util.Optional.get()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java|) |(,2u
"java.net.URL.URL(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java|! |($2µ
borg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doi@113.22:113.25CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java|% |((ª
gorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?download@127.28:127.36VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java ($"
typeURLDownload"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>URLDownload <mark class="class-field">download</mark> = getUrlDownload(doiURL)*download2s
 org.jabref.logic.net.URLDownloadTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java (2î
Aorg.jabref.logic.importer.WebFetcher.getUrlDownload(java.net.URL)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java' (52∏
eorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?doiURL@124.20:124.26CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java6 (<≈
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?bibtexString@130.23:130.35VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÇ Ç(#"
typeString"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>String <mark class="class-field">bibtexString</mark>*bibtexString2e
java.lang.StringTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÇ Ç(ﬂ
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?openConnection@131.30:131.44VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÉ É(,"
typeURLConnection"
isFinalfalse"q
declarationString\<mark class="modifier"> </mark>URLConnection <mark class="class-field">openConnection</mark>*openConnection2k
java.net.URLConnectionTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÉ É(ä
dorg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?entry@154.29:154.34VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaö ö(""
typeBibEntry"
isFinalfalse"x
declarationStringc<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = fetchedEntry.get()*entry2t
org.jabref.model.entry.BibEntryTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaö ö(2m
java.util.Optional.get()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaö2 ö(52¿
korg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?fetchedEntry@117.35:117.47CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaö% ö(1Ó
[org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javap7 p(A"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javap0 p(6Ò
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@135.37:135.38VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaá% á(&"
typeIOException"
isFinalfalse""
declarationStringIOException e*e2h
java.io.IOExceptionTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaá á($Ò
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@167.29:167.30VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaß ß("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2h
java.io.IOExceptionTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaß ß(å
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@169.32:169.33VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java©  ©(!"
typeParseException"
isFinalfalse"%
declarationStringParseException e*e2}
(org.jabref.logic.importer.ParseExceptionTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java© ©(Å
`org.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)?e@171.31:171.32VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java´ ´( "
typeJSONException"
isFinalfalse"$
declarationStringJSONException e*e2t
kong.unirest.json.JSONExceptionTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java´ ´(¡
[org.jabref.logic.importer.fetcher.DoiFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)METHODK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∞ ∞("
isFinalfalse"ò
declarationStringÇ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">doPostCleanup</mark>(BibEntry entry)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*doPostCleanup2¨
Worg.jabref.logic.cleanup.FieldFormatterCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java±V ±(]2¨
Worg.jabref.logic.cleanup.FieldFormatterCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java≤K ≤(R2‚
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java± ±(!2Æ
Yorg.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter.NormalizePagesFormatter()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java±; ±(R2‚
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java≤ ≤(!2ú
Gorg.jabref.logic.formatter.bibtexfields.ClearFormatter.ClearFormatter()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java≤9 ≤(G2∂
aorg.jabref.logic.importer.fetcher.DoiFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java±^ ±(c2∂
aorg.jabref.logic.importer.fetcher.DoiFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java≤S ≤(X2ª
aorg.jabref.logic.importer.fetcher.DoiFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∞( ∞(-2`
voidRETURN_TYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∞ ∞(Å
aorg.jabref.logic.importer.fetcher.DoiFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∞( ∞(-"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2t
org.jabref.model.entry.BibEntryTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∞ ∞('‚(
Zorg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)METHODK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaµ µ(&"
isFinalfalse"≤
declarationStringú<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">updateCrossrefAPIRate</mark>(URLConnection existingConnection)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*updateCrossrefAPIRate2î
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∏c ∏(m2å
7java.net.URLConnection.getHeaderField(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∏; ∏(I2å
7java.net.URLConnection.getHeaderField(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaπ3 π(A2É
.java.lang.Double.parseDouble(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaª$ ª(/2É
.java.lang.Double.parseDouble(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaªE ª(P2o
java.lang.Math.abs(double)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaø ø(2Ñ
/java.lang.String.formatted(java.lang.Object...)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java¿P ¿(Y2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)!existingConnectionCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∏( ∏(:2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)!existingConnectionCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaπ  π(22»
sorg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?xRateLimit@185.19:185.29CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaª0 ª(:2–
{org.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?xRateLimitInterval@184.19:184.37CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaªQ ª(c2ß
Rorg.jabref.logic.importer.fetcher.DoiFetcher?CROSSREF_DCN_RATE_LIMITER@59.37:59.62CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaº º(62≈
porg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?newRate@187.19:187.26CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaø ø( 2≈
porg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?oldRate@188.19:188.26CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaø# ø(*2î
?org.jabref.logic.importer.fetcher.DoiFetcher?LOGGER@47.32:47.38CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java¿ ¿(2≈
porg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?oldRate@188.19:188.26CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java¿Z ¿(a2≈
porg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?newRate@187.19:187.26CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java¿c ¿(j2ß
Rorg.jabref.logic.importer.fetcher.DoiFetcher?CROSSREF_DCN_RATE_LIMITER@59.37:59.62CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java¡ ¡()2≈
porg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?newRate@187.19:187.26CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java¡2 ¡(92î
?org.jabref.logic.importer.fetcher.DoiFetcher?LOGGER@47.32:47.38CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaƒ ƒ(2«
morg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)!existingConnection	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaµ5 µ(G2◊
{org.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?xRateLimitInterval@184.19:184.37DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∏ ∏(%2œ
sorg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?xRateLimit@185.19:185.29DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaπ π(2Ã
porg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?newRate@187.19:187.26DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaª ª(2Ã
porg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?oldRate@188.19:188.26DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaº º(2∆
jorg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?e@195.65:195.66DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java√A √(B2`
voidRETURN_TYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaµ µ(Ã
{org.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?xRateLimitInterval@184.19:184.37VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∏ ∏(%"
typeString"
isFinalfalse"Ì
declarationString◊<mark class="modifier"> </mark>String <mark class="class-field">xRateLimitInterval</mark> = existingConnection.getHeaderField("X-Rate-Limit-Interval").replaceAll("[^\\.0123456789]"<mark class="modifier">,</mark> "")*xRateLimitInterval2e
java.lang.StringTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∏ ∏(2î
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∏c ∏(m2å
7java.net.URLConnection.getHeaderField(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∏; ∏(I2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)!existingConnectionCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java∏( ∏(:Ÿ
sorg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?xRateLimit@185.19:185.29VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaπ π("
typeString"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>String <mark class="class-field">xRateLimit</mark> = existingConnection.getHeaderField("X-Rate-Limit-Limit")*
xRateLimit2e
java.lang.StringTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaπ π(2å
7java.net.URLConnection.getHeaderField(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaπ3 π(A2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)!existingConnectionCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaπ  π(2 	
porg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?newRate@187.19:187.26VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaª ª("
typedouble"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark><mark class="modifier">double</mark> <mark class="class-field">newRate</mark> = Double.parseDouble(xRateLimit) / Double.parseDouble(xRateLimitInterval)*newRate2[
doubleTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaª ª(2É
.java.lang.Double.parseDouble(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaª$ ª(/2É
.java.lang.Double.parseDouble(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaªE ª(P2»
sorg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?xRateLimit@185.19:185.29CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaª0 ª(:2–
{org.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?xRateLimitInterval@184.19:184.37CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaªQ ª(c¶
porg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?oldRate@188.19:188.26VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaº º("
typedouble"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark><mark class="modifier">double</mark> <mark class="class-field">oldRate</mark> = CROSSREF_DCN_RATE_LIMITER.getRate()*oldRate2[
doubleTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaº º(2ß
Rorg.jabref.logic.importer.fetcher.DoiFetcher?CROSSREF_DCN_RATE_LIMITER@59.37:59.62CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaº º(6®
morg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)!existingConnection	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaµ5 µ(G"
typeURLConnection"
isFinalfalse"5
declarationString URLConnection existingConnection*existingConnection2k
java.net.URLConnectionTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaµ' µ(4Ù
jorg.jabref.logic.importer.fetcher.DoiFetcher.updateCrossrefAPIRate(java.net.URLConnection)?e@195.65:195.66VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java√A √(B"7
type/NullPointerException | IllegalArgumentException"
isFinalfalse"F
declarationString1NullPointerException | IllegalArgumentException e*e2ò
Cjava.lang.NullPointerException | java.lang.IllegalArgumentExceptionTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java√ √(@È
[org.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)METHODK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java… …('"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;BibEntry&gt; <mark class="method">performSearch</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*performSearch2°
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java %  (-2s
java.util.Optional.isPresent()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÀ À(2ï
@org.jabref.model.util.OptionalUtil.toList(java.util.Optional<T>)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÃ  Ã(&2•
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÃ' Ã(82m
java.util.Optional.get()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÃ= Ã(@2v
!java.util.Collections.emptyList()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaŒ Œ((2∂
aorg.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)!entryCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java   ($2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)?doi@202.25:202.28CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÀ À(2¬
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)?doi@202.25:202.28CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÃ9 Ã(<2≥
Zorg.jabref.logic.importer.EntryBasedFetcher.performSearch(org.jabref.model.entry.BibEntry)OVERRIDEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java… …('2ª
aorg.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)!entry	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java…1 …(62…
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)?doi@202.25:202.28DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java   (2j
java.util.ListRETURN_TYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java… …(2Ñ
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java… …(Ω
morg.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)?doi@202.25:202.28VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java   ("
typeOptional<String>"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>Optional<String> <mark class="class-field">doi</mark> = entry.getField(StandardField.DOI)*doi2g
java.util.OptionalTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java   (2n
java.lang.StringTYPE_ARGUMENTK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java   (2°
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java %  (-2∂
aorg.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)!entryCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java   ($Å
aorg.jabref.logic.importer.fetcher.DoiFetcher.performSearch(org.jabref.model.entry.BibEntry)!entry	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java…1 …(6"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2t
org.jabref.model.entry.BibEntryTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java…( …(0§
]org.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)METHODK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java◊ ◊(%"
isFinalfalse"œ
declarationStringπ<mark class="modifier">public </mark>Optional&lt;String&gt; <mark class="method">getAgency</mark>(DOI doi)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<String>*	getAgency2o
java.util.Optional.empty()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÿ+ ÿ(02ñ
Aorg.jabref.logic.importer.WebFetcher.getUrlDownload(java.net.URL)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄# ⁄(12É
.org.jabref.model.entry.identifier.DOI.getDOI()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄Z ⁄(`2Ä
+org.jabref.logic.net.URLDownload.asString()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java€9 €(A2o
java.util.Optional.empty()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java· ·(!2w
"java.net.URL.URL(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄6 ⁄(92∂
aorg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)!doiCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄V ⁄(Y2…
torg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?download@218.24:218.32CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java€0 €(82…
torg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?response@219.23:219.31CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java‹ ‹(2«
rorg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?agency@216.25:216.31CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java› ›(2…
torg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?response@219.23:219.31CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java›- ›(52î
?org.jabref.logic.importer.fetcher.DoiFetcher?LOGGER@47.32:47.38CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java‡ ‡(2«
rorg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?agency@216.25:216.31CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java‰ ‰(2ª
aorg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)!doi	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java◊* ◊(-2Œ
rorg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?agency@216.25:216.31DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÿ ÿ(2–
torg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?download@218.24:218.32DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄ ⁄( 2–
torg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?response@219.23:219.31DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java€ €(2…
morg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?e@223.31:223.32DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaﬂ ﬂ( 2n
java.util.OptionalRETURN_TYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java◊ ◊(2u
java.lang.StringRETURN_TYPE_ARGUMENTK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java◊ ◊( 
rorg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?agency@216.25:216.31VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÿ ÿ("
typeOptional<String>"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>Optional<String> <mark class="class-field">agency</mark> = Optional.empty()*agency2g
java.util.OptionalTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÿ ÿ(2n
java.lang.StringTYPE_ARGUMENTK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÿ ÿ(2o
java.util.Optional.empty()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÿ+ ÿ(0˜
torg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?download@218.24:218.32VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄ ⁄( "
typeURLDownload"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>URLDownload <mark class="class-field">download</mark> = getUrlDownload(new URL(DOI.AGENCY_RESOLVER + "/" + doi.getDOI()))*download2u
 org.jabref.logic.net.URLDownloadTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄ ⁄(2ñ
Aorg.jabref.logic.importer.WebFetcher.getUrlDownload(java.net.URL)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄# ⁄(12É
.org.jabref.model.entry.identifier.DOI.getDOI()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄Z ⁄(`2w
"java.net.URL.URL(java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄6 ⁄(92∂
aorg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)!doiCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java⁄V ⁄(Y·
torg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?response@219.23:219.31VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java€ €("
type
JSONObject"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>JSONObject <mark class="class-field">response</mark> = new JSONArray(download.asString()).getJSONObject(0)*response2q
kong.unirest.json.JSONObjectTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java€ €(2Ä
+org.jabref.logic.net.URLDownload.asString()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java€9 €(A2…
torg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?download@218.24:218.32CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java€0 €(8˘
aorg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)!doi	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java◊* ◊(-"
typeDOI"
isFinalfalse"
declarationStringDOI doi*doi2z
%org.jabref.model.entry.identifier.DOITYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java◊& ◊()é
morg.jabref.logic.importer.fetcher.DoiFetcher.getAgency(org.jabref.model.entry.identifier.DOI)?e@223.31:223.32VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaﬂ ﬂ( "
typeJSONException"
isFinalfalse"$
declarationStringJSONException e*e2t
kong.unirest.json.JSONExceptionTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaﬂ ﬂ(‹
worg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)METHODK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÁ Á(("
isFinalfalse"Ú
declarationString‹<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">setPageCountToArticleId</mark>(BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> String doiAsString)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*setPageCountToArticleId2t
java.lang.String.substring(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË' Ë(02v
!java.lang.String.lastIndexOf(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË= Ë(H2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÈ È(2Ÿ
Éorg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË Ë(&2Ÿ
Éorg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË1 Ë(<2“
}org.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)!entryCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÈ È(2Â
èorg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)?articleId@232.15:232.24CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÈ, È(52◊
}org.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)!entry	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÁ2 Á(72ﬁ
Éorg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsString	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÁ@ Á(K2Ï
èorg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)?articleId@232.15:232.24DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË Ë(2`
voidRETURN_TYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÁ Á(∆	
èorg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)?articleId@232.15:232.24VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË Ë("
typeString"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>String <mark class="class-field">articleId</mark> = doiAsString.substring(doiAsString.lastIndexOf('.') + 1)*	articleId2e
java.lang.StringTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË Ë(2t
java.lang.String.substring(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË' Ë(02v
!java.lang.String.lastIndexOf(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË= Ë(H2Ÿ
Éorg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË Ë(&2Ÿ
Éorg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaË1 Ë(<ù
}org.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)!entry	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÁ2 Á(7"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2t
org.jabref.model.entry.BibEntryTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÁ) Á(1ù
Éorg.jabref.logic.importer.fetcher.DoiFetcher.setPageCountToArticleId(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsString	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÁ@ Á(K"
typeString"
isFinalfalse"'
declarationStringString doiAsString*doiAsString2e
java.lang.StringTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÁ9 Á(?ß%
lorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)METHODK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÌ Ì( "
isFinalfalse"Í
declarationString‘<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">isAPSJournal</mark>(BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> String doiAsString)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*isAPSJournal2~
)java.lang.Object.equals(java.lang.Object)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÓ Ó(#2~
)org.jabref.model.entry.BibEntry.getType()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÓ Ó(2t
java.lang.String.substring(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ$ Ò(-2v
!java.lang.String.lastIndexOf(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ: Ò(E2y
$java.lang.String.substring(int, int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ, Ú(52r
java.lang.String.indexOf(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚB Ú(I2r
java.lang.String.indexOf(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ` Ú(g2~
)java.lang.String.equals(java.lang.Object)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÛ Û($2v
!java.util.regex.Matcher.matches()CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÛc Û(j2å
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÛS Û(Z2«
rorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!entryCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÓ Ó(2Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ Ò(#2Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ. Ò(92Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ  Ú(+2Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ6 Ú(A2Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚT Ú(_2ﬂ
âorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)?organizationId@242.15:242.29CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÛ Û(2§
Oorg.jabref.logic.importer.fetcher.DoiFetcher?APS_JOURNAL_ORG_DOI_ID@43.32:43.54CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÛ% Û(;2†
Korg.jabref.logic.importer.fetcher.DoiFetcher?APS_SUFFIX_PATTERN@45.33:45.51CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÛ@ Û(R2◊
Åorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)?suffix@241.15:241.21CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÛ[ Û(a2Ã
rorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!entry	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÌ* Ì(/2“
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsString	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÌ8 Ì(C2ﬁ
Åorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)?suffix@241.15:241.21DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ Ò(2Ê
âorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)?organizationId@242.15:242.29DECLARATIONK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ Ú(2c
booleanRETURN_TYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÌ Ì(ö	
Åorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)?suffix@241.15:241.21VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ Ò("
typeString"
isFinalfalse"ù
declarationStringá<mark class="modifier"> </mark>String <mark class="class-field">suffix</mark> = doiAsString.substring(doiAsString.lastIndexOf('/') + 1)*suffix2e
java.lang.StringTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ Ò(2t
java.lang.String.substring(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ$ Ò(-2v
!java.lang.String.lastIndexOf(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ: Ò(E2Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ Ò(#2Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÒ. Ò(9ç
âorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)?organizationId@242.15:242.29VARIABLEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ Ú("
typeString"
isFinalfalse"ª
declarationString•<mark class="modifier"> </mark>String <mark class="class-field">organizationId</mark> = doiAsString.substring(doiAsString.indexOf('.') + 1, doiAsString.indexOf('/'))*organizationId2e
java.lang.StringTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ Ú(2y
$java.lang.String.substring(int, int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ, Ú(52r
java.lang.String.indexOf(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚB Ú(I2r
java.lang.String.indexOf(int)CALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ` Ú(g2Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ  Ú(+2Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚ6 Ú(A2Õ
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsStringCALLK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÚT Ú(_í
rorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!entry	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÌ* Ì(/"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2t
org.jabref.model.entry.BibEntryTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÌ! Ì()ë
xorg.jabref.logic.importer.fetcher.DoiFetcher.isAPSJournal(org.jabref.model.entry.BibEntry, java.lang.String)!doiAsString	PARAMETERK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÌ8 Ì(C"
typeString"
isFinalfalse"'
declarationStringString doiAsString*doiAsString2e
java.lang.StringTYPEK
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.javaÌ1 Ì(7˝
=org.jabref.logic.importer.fetcher.DoiFetcher?NAME@41.31:41.35VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java) )(#"
isFinaltrue"
typeString"π
declarationString£<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">NAME</mark> = "DOI";"
isStatictrue"
accesspublic*NAME2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java) )(∂
Oorg.jabref.logic.importer.fetcher.DoiFetcher?APS_JOURNAL_ORG_DOI_ID@43.32:43.54VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java+  +(6"
isFinaltrue"
typeString"Õ
declarationString∑<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">APS_JOURNAL_ORG_DOI_ID</mark> = "1103";"
isStatictrue"
accessprivate*APS_JOURNAL_ORG_DOI_ID2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java+ +(¨
Corg.jabref.logic.importer.fetcher.DoiFetcher?APS_SUFFIX@44.32:44.42VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java,  ,(*"
isFinaltrue"
typeString"€
declarationString≈<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">APS_SUFFIX</mark> = "([\\w]+\\.)([\\w]+\\.)([\\w]+)";"
isStatictrue"
accessprivate*
APS_SUFFIX2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java, ,(Ë
Korg.jabref.logic.importer.fetcher.DoiFetcher?APS_SUFFIX_PATTERN@45.33:45.51VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java-! -(3"
isFinaltrue"
typePattern"ﬂ
declarationString…<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">APS_SUFFIX_PATTERN</mark> = Pattern.compile(APS_SUFFIX);"
isStatictrue"
accessprivate*APS_SUFFIX_PATTERN2j
java.util.regex.PatternTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java- -( 2Ñ
1java.util.regex.Pattern.compile(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java-> -(E2ñ
Corg.jabref.logic.importer.fetcher.DoiFetcher?APS_SUFFIX@44.32:44.42CALLI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java-F -(P©
?org.jabref.logic.importer.fetcher.DoiFetcher?LOGGER@47.32:47.38VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java/  /(&"
isFinaltrue"
typeLogger"‡
declarationString <mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(DoiFetcher.class);"
isStatictrue"
accessprivate*LOGGER2c
org.slf4j.LoggerTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java/ /(¸
Sorg.jabref.logic.importer.fetcher.DoiFetcher?DATA_CITE_DCN_RATE_LIMITER@50.37:50.63VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java2% 2(?"
isFinaltrue"
typeRateLimiter"Ë
declarationString“<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>RateLimiter <mark class="class-field">DATA_CITE_DCN_RATE_LIMITER</mark> = RateLimiter.create(3.33);"
isStatictrue"
accessprivate*DATA_CITE_DCN_RATE_LIMITER2Ä
-com.google.common.util.concurrent.RateLimiterTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java2 2($˘
Rorg.jabref.logic.importer.fetcher.DoiFetcher?CROSSREF_DCN_RATE_LIMITER@59.37:59.62VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java;% ;(>"
isFinaltrue"
typeRateLimiter"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>RateLimiter <mark class="class-field">CROSSREF_DCN_RATE_LIMITER</mark> = RateLimiter.create(50.0);"
isStatictrue"
accessprivate*CROSSREF_DCN_RATE_LIMITER2Ä
-com.google.common.util.concurrent.RateLimiterTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java; ;($ê
Dorg.jabref.logic.importer.fetcher.DoiFetcher?preferences@61.42:61.53VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java=* =(5"
isFinaltrue"
typeImportFormatPreferences"§
declarationStringé<mark class="modifier">private </mark><mark class="modifier">final </mark>ImportFormatPreferences <mark class="class-field">preferences</mark>"
isStaticfalse"
accessprivate*preferences2j
ImportFormatPreferencesTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java= =()