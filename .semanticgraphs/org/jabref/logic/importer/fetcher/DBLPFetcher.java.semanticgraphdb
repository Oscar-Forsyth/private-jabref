
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaÇ
-org.jabref.logic.importer.fetcher.DBLPFetcherCLASSJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java! !(",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"Ø
declarationStringô<mark class="modifier">public </mark><mark class="modifier">class </mark>DBLPFetcher<mark class="modifier"><br>implements </mark>SearchBasedParserFetcher"
accesspublic*DBLPFetcher2f
DBLPFetcherDECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java( ((2‘
yorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java. .(2î
9org.jabref.logic.importer.fetcher.DBLPFetcher.getParser()DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java: :(2∑
\org.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java? ?(2í
7org.jabref.logic.importer.fetcher.DBLPFetcher.getName()DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaM M(2ñ
;org.jabref.logic.importer.fetcher.DBLPFetcher.getHelpPage()DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaR R()2°
Forg.jabref.logic.importer.fetcher.DBLPFetcher?FETCHER_NAME@34.31:34.43DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java" "(+2•
Jorg.jabref.logic.importer.fetcher.DBLPFetcher?BASIC_SEARCH_URL@36.32:36.48DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java$  $(02¨
Qorg.jabref.logic.importer.fetcher.DBLPFetcher?importFormatPreferences@38.42:38.65DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java&* &(A2à
2org.jabref.logic.importer.SearchBasedParserFetcherEXTENDJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java!$ !(<ª
DBLPFetcherCONSTRUCTORJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java( (("í
declarationString}<mark class="modifier">public </mark><mark class="method">DBLPFetcher</mark>(ImportFormatPreferences importFormatPreferences)*DBLPFetcher2•
Qorg.jabref.logic.importer.fetcher.DBLPFetcher?importFormatPreferences@38.42:38.65CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java* *($2à
-org.jabref.logic.importer.fetcher.DBLPFetcherRETURN_TYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java( ((Ô
importFormatPreferences	PARAMETERJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java(/ ((F"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2k
ImportFormatPreferencesTYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java( ((.Î
yorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)METHODJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java. .("
isFinalfalse"•
declarationStringè<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URL <mark class="method">getURLForQuery</mark>(QueryNode luceneQuery)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURL*getURLForQuery2q
java.lang.String.valueOf(int)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java1, 1(32q
java.lang.String.valueOf(int)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java2, 2(32q
java.lang.String.valueOf(int)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java3, 3(32Æ
Zorg.jabref.logic.importer.fetcher.transformers.DBLPQueryTransformer.DBLPQueryTransformer()CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java0) 0(=2û
Jorg.jabref.logic.importer.fetcher.DBLPFetcher?BASIC_SEARCH_URL@36.32:36.48CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java// /(?2Â
êorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@47.19:47.29CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java0 0(2⁄
Öorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQueryCALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java0U 0(`2Â
êorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@47.19:47.29CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java1 1(2Â
êorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@47.19:47.29CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java2 2(2Â
êorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@47.19:47.29CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java3 3(2Â
êorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@47.19:47.29CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java4 4(2Â
êorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@47.19:47.29CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java6 6(2÷
~org.jabref.logic.importer.SearchBasedParserFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)OVERRIDEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java. .(2ﬂ
Öorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java.( .(32Ï
êorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@47.19:47.29DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java/ /(2g
java.net.URLRETURN_TYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java. .(…
êorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@47.19:47.29VARIABLEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java/ /("
type
URIBuilder"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>URIBuilder <mark class="class-field">uriBuilder</mark> = new URIBuilder(BASIC_SEARCH_URL)*
uriBuilder2{
'org.apache.http.client.utils.URIBuilderTYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java/ /(2û
Jorg.jabref.logic.importer.fetcher.DBLPFetcher?BASIC_SEARCH_URL@36.32:36.48CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java// /(?œ
Öorg.jabref.logic.importer.fetcher.DBLPFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java.( .(3"
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2è
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java. .('Œ
9org.jabref.logic.importer.fetcher.DBLPFetcher.getParser()METHODJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java: :("
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Parser <mark class="method">getParser</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParser*	getParser2•
Qorg.jabref.logic.importer.fetcher.DBLPFetcher?importFormatPreferences@38.42:38.65CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java;  ;(72ñ
>org.jabref.logic.importer.SearchBasedParserFetcher.getParser()OVERRIDEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java: :(2{
 org.jabref.logic.importer.ParserRETURN_TYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java: :(É
\org.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)METHODJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java? ?("
isFinalfalse"≈
declarationStringØ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">doPostCleanup</mark>(BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*doPostCleanup2†
Lorg.jabref.logic.cleanup.DoiCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaA A(2k
java.util.List.of(E, E)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaD D(2µ
aorg.jabref.logic.cleanup.FieldFormatterCleanups.applySaveActions(org.jabref.model.entry.BibEntry)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaI I(!2Ñ
0org.jabref.logic.cleanup.DoiCleanup.DoiCleanup()CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java@$ @(.2‰
èorg.jabref.logic.cleanup.FieldFormatterCleanups.FieldFormatterCleanups(boolean, java.util.List<org.jabref.logic.cleanup.FieldFormatterCleanup>)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaC. C(D2·
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaE E(12õ
Gorg.jabref.logic.formatter.bibtexfields.ClearFormatter.ClearFormatter()CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaEO E(]2·
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaG G(12–
|org.jabref.logic.layout.LayoutFormatterBasedFormatter.LayoutFormatterBasedFormatter(org.jabref.logic.layout.LayoutFormatter)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaGI G(f2Ø
Zorg.jabref.logic.layout.format.RemoveLatexCommandsFormatter.RemoveLatexCommandsFormatter()CALLK
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaGk G(á2«
sorg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)?doiCleaner@64.19:64.29CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaA A(2∂
borg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaA A( 2≈
qorg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)?cleanups@67.31:67.39CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaI I(2∂
borg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaI" I('2π
aorg.jabref.logic.importer.SearchBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)OVERRIDEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java? ?(2ª
borg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java?' ?(,2Œ
sorg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)?doiCleaner@64.19:64.29DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java@ @(2Ã
qorg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)?cleanups@67.31:67.39DECLARATIONJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaC C('2_
voidRETURN_TYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java? ?(¸
sorg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)?doiCleaner@64.19:64.29VARIABLEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java@ @("
type
DoiCleanup"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>DoiCleanup <mark class="class-field">doiCleaner</mark> = new DoiCleanup()*
doiCleaner2w
#org.jabref.logic.cleanup.DoiCleanupTYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java@ @(2Ñ
0org.jabref.logic.cleanup.DoiCleanup.DoiCleanup()CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java@$ @(.≈
qorg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)?cleanups@67.31:67.39VARIABLEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaC C('"
typeFieldFormatterCleanups"
isFinalfalse"¯
declarationString‚<mark class="modifier"> </mark>FieldFormatterCleanups <mark class="class-field">cleanups</mark> = new FieldFormatterCleanups(true, List.of(new FieldFormatterCleanup(StandardField.TIMESTAMP, new ClearFormatter())<mark class="modifier">,</mark> // unescape the the contents of the URL field, e.g.<mark class="modifier">,</mark> some\_url\_part becomes some_url_part
new FieldFormatterCleanup(StandardField.URL, new LayoutFormatterBasedFormatter(new RemoveLatexCommandsFormatter()))))*cleanups2É
/org.jabref.logic.cleanup.FieldFormatterCleanupsTYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaC C(2k
java.util.List.of(E, E)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaD D(2‰
èorg.jabref.logic.cleanup.FieldFormatterCleanups.FieldFormatterCleanups(boolean, java.util.List<org.jabref.logic.cleanup.FieldFormatterCleanup>)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaC. C(D2·
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaE E(12õ
Gorg.jabref.logic.formatter.bibtexfields.ClearFormatter.ClearFormatter()CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaEO E(]2·
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaG G(12–
|org.jabref.logic.layout.LayoutFormatterBasedFormatter.LayoutFormatterBasedFormatter(org.jabref.logic.layout.LayoutFormatter)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaGI G(f2Ø
Zorg.jabref.logic.layout.format.RemoveLatexCommandsFormatter.RemoveLatexCommandsFormatter()CALLK
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaGk G(áÄ
borg.jabref.logic.importer.fetcher.DBLPFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java?' ?(,"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2s
org.jabref.model.entry.BibEntryTYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java? ?(&ú
7org.jabref.logic.importer.fetcher.DBLPFetcher.getName()METHODJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaM M("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2ö
Forg.jabref.logic.importer.fetcher.DBLPFetcher?FETCHER_NAME@34.31:34.43CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaN N(2Ü
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaM M(2k
java.lang.StringRETURN_TYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaM M(£
;org.jabref.logic.importer.fetcher.DBLPFetcher.getHelpPage()METHODJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaR R()"
isFinalfalse"´
declarationStringï<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;HelpFile&gt; <mark class="method">getHelpPage</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<HelpFile>*getHelpPage2l
java.util.Optional.of(T)CALLJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaS S(2ä
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaR R()2m
java.util.OptionalRETURN_TYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaR R(2Ç
org.jabref.logic.help.HelpFileRETURN_TYPE_ARGUMENTJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.javaR R(ô
Forg.jabref.logic.importer.fetcher.DBLPFetcher?FETCHER_NAME@34.31:34.43VALUEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java" "(+"
isFinaltrue"
typeString"¬
declarationString¨<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FETCHER_NAME</mark> = "DBLP";"
isStatictrue"
accesspublic*FETCHER_NAME2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java" "(√
Jorg.jabref.logic.importer.fetcher.DBLPFetcher?BASIC_SEARCH_URL@36.32:36.48VALUEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java$  $(0"
isFinaltrue"
typeString"„
declarationStringÕ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">BASIC_SEARCH_URL</mark> = "https://dblp.org/search/publ/api";"
isStatictrue"
accessprivate*BASIC_SEARCH_URL2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java$ $(∑
Qorg.jabref.logic.importer.fetcher.DBLPFetcher?importFormatPreferences@38.42:38.65VALUEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java&* &(A"
isFinaltrue"
typeImportFormatPreferences"∞
declarationStringö<mark class="modifier">private </mark><mark class="modifier">final </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accessprivate*importFormatPreferences2k
ImportFormatPreferencesTYPEJ
@src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java& &()