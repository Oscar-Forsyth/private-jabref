
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaÃ
0org.jabref.logic.importer.fetcher.MathSciNetTestCLASSM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"ò
declarationStringÇ<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>MathSciNetTest"
accesspackage_private*MathSciNetTest2ñ
8org.jabref.logic.importer.fetcher.MathSciNetTest.setUp()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java	 (2®
Jorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java4	 4( 2¨
Norg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java@	 @($2®
Jorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByQueryFindsEntry()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaJ	 J( 2•
Gorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdFindsEntry()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaR	 R(2¢
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java (2•
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java (û/
8org.jabref.logic.importer.fetcher.MathSciNetTest.setUp()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java	 ("
isFinalfalse"¯
declarationString‚<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2¶
Oorg.jabref.model.entry.BibEntry.setType(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java$ $(2ó
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java% %(!2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java& &(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java' '(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java( ((2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java) )(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java* *(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java+ +(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java, ,(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java- -(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java. .(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java/ /(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java0 0(2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java# #(!2≥
\org.jabref.logic.importer.fetcher.MathSciNetTest.setUp()?importFormatPreferences@30.32:30.55CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java ($2õ
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java! !(2≥
\org.jabref.logic.importer.fetcher.MathSciNetTest.setUp()?importFormatPreferences@30.32:30.55CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java!! !(82û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java# #(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java$ $(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java% %(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java& &(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java' '(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java( ((2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java) )(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java* *(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java+ +(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java, ,(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java- -(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java. .(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java/ /(2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java0 0(2∫
\org.jabref.logic.importer.fetcher.MathSciNetTest.setUp()?importFormatPreferences@30.32:30.55DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java  (72b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java (Ω
\org.jabref.logic.importer.fetcher.MathSciNetTest.setUp()?importFormatPreferences@30.32:30.55VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java  (7"
typeImportFormatPreferences"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark> = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS)*importFormatPreferences2n
ImportFormatPreferencesTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java (Ê
Jorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java4	 4( "
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByEntryFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByEntryFindsEntry2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java6 6(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java7 7(2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java8 8(2∑
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java:0 :(=2}
&java.util.Collections.singletonList(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java;! ;(.2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java5# 5(+2π
borg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?searchEntry@53.17:53.28CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java6 6(2π
borg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?searchEntry@53.17:53.28CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java7 7(2π
borg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?searchEntry@53.17:53.28CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java8 8(2õ
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java:( :(/2π
borg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?searchEntry@53.17:53.28CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java:> :(I2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java;/ ;(92º
eorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?fetchedEntries@58.23:58.37CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java;< ;(J2¿
borg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?searchEntry@53.17:53.28DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java5 5(2√
eorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?fetchedEntries@58.23:58.37DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java: :(%2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java4 4(Ê
borg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?searchEntry@53.17:53.28VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java5 5("
typeBibEntry"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibEntry <mark class="class-field">searchEntry</mark> = new BibEntry()*searchEntry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java5 5(2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java5# 5(+ë	
eorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?fetchedEntries@58.23:58.37VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java: :(%"
typeList<BibEntry>"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch(searchEntry)*fetchedEntries2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java: :(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java: :(2∑
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java:0 :(=2õ
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java:( :(/2π
borg.jabref.logic.importer.fetcher.MathSciNetTest.searchByEntryFindsEntry()?searchEntry@53.17:53.28CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java:> :(I˚
Norg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java@	 @($"
isFinalfalse"Â
declarationStringœ <br><mark class="annotation">@DisabledOnCIServer("CI</mark> server has no subscription to MathSciNet and thus gets 401 response") <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByIdInEntryFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByIdInEntryFindsEntry2µ
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaB B(2∑
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD0 D(=2}
&java.util.Collections.singletonList(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaE! E(.2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaA# A(+2Ω
forg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()?searchEntry@65.17:65.28CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaB B(2õ
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD( D(/2Ω
forg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()?searchEntry@65.17:65.28CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD> D(I2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaE/ E(92¿
iorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()?fetchedEntries@68.23:68.37CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaE< E(J2ƒ
forg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()?searchEntry@65.17:65.28DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaA A(2«
iorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()?fetchedEntries@68.23:68.37DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD D(%2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java@ @(Í
forg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()?searchEntry@65.17:65.28VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaA A("
typeBibEntry"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>BibEntry <mark class="class-field">searchEntry</mark> = new BibEntry()*searchEntry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaA A(2Å
*org.jabref.model.entry.BibEntry.BibEntry()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaA# A(+ô	
iorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()?fetchedEntries@68.23:68.37VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD D(%"
typeList<BibEntry>"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch(searchEntry)*fetchedEntries2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD D(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD D(2∑
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD0 D(=2õ
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD( D(/2Ω
forg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdInEntryFindsEntry()?searchEntry@65.17:65.28CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaD> D(IÒ
Jorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByQueryFindsEntry()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaJ	 J( "
isFinalfalse"·
declarationStringÀ <br><mark class="annotation">@DisabledOnCIServer("CI</mark> server has no subscription to MathSciNet and thus gets 401 response") <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByQueryFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByQueryFindsEntry2£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaK0 K(=2o
java.util.List.isEmpty()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaL# L(*2n
java.util.List.get(int)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaM0 M(32õ
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaK( K(/2º
eorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByQueryFindsEntry()?fetchedEntries@75.23:75.37CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaL L("2û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaM M(2º
eorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByQueryFindsEntry()?fetchedEntries@75.23:75.37CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaM! M(/2√
eorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByQueryFindsEntry()?fetchedEntries@75.23:75.37DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaK K(%2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaJ J(Ä
eorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByQueryFindsEntry()?fetchedEntries@75.23:75.37VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaK K(%"
typeList<BibEntry>"
isFinalfalse"◊
declarationString¡<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = fetcher.performSearch("Existence and uniqueness theorems Two-Dimensional Ericksen Leslie System")*fetchedEntries2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaK K(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaK K(2£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaK0 K(=2õ
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaK( K(/µ
Gorg.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdFindsEntry()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaR	 R("
isFinalfalse"ﬁ
declarationString» <br><mark class="annotation">@DisabledOnCIServer("CI</mark> server has no subscription to MathSciNet and thus gets 401 response") <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">searchByIdFindsEntry</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*searchByIdFindsEntry2©
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaS2 S(C2o
java.util.Optional.of(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaT T( 2õ
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaS* S(12û
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaT! T(+2∑
`org.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdFindsEntry()?fetchedEntry@83.27:83.39CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaT. T(:2æ
`org.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdFindsEntry()?fetchedEntry@83.27:83.39DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaS S('2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaR R(Ã
`org.jabref.logic.importer.fetcher.MathSciNetTest.searchByIdFindsEntry()?fetchedEntry@83.27:83.39VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaS S('"
typeOptional<BibEntry>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>Optional<BibEntry> <mark class="class-field">fetchedEntry</mark> = fetcher.performSearchById("3537908")*fetchedEntry2i
java.util.OptionalTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaS S(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaS S(2©
Rorg.jabref.logic.importer.IdBasedParserFetcher.performSearchById(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaS2 S(C2õ
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.javaS* S(1Î
Dorg.jabref.logic.importer.fetcher.MathSciNetTest?fetcher@25.15:25.22VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java ("
isFinalfalse"
type
MathSciNet"g
declarationStringR<mark class="modifier"> </mark>MathSciNet <mark class="class-field">fetcher</mark>"
isStaticfalse"
accesspackage_private*fetcher2É
,org.jabref.logic.importer.fetcher.MathSciNetTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java (·
Gorg.jabref.logic.importer.fetcher.MathSciNetTest?ratiuEntry@26.21:26.31VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java ("
isFinalfalse"
typeBibEntry"o
declarationStringZ<mark class="modifier">private </mark>BibEntry <mark class="class-field">ratiuEntry</mark>"
isStaticfalse"
accessprivate*
ratiuEntry2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\MathSciNetTest.java (