
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java“
3org.jabref.logic.importer.fetcher.DoiResolutionTestCLASSP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"õ
declarationStringÖ<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>DoiResolutionTest"
accesspackage_private*DoiResolutionTest2ú
;org.jabref.logic.importer.fetcher.DoiResolutionTest.setup()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java	 (2¨
Korg.jabref.logic.importer.fetcher.DoiResolutionTest.linkWithPdfInTitleTag()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java"	 "(2∑
Vorg.jabref.logic.importer.fetcher.DoiResolutionTest.linkWithPdfStringLeadsToFulltext()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java,	 ,()2µ
Torg.jabref.logic.importer.fetcher.DoiResolutionTest.citationMetaTagLeadsToFulltext()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java2	 2('2¡
`org.jabref.logic.importer.fetcher.DoiResolutionTest.notReturnAnythingWhenMultipleLinksAreFound()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java8	 8(32æ
]org.jabref.logic.importer.fetcher.DoiResolutionTest.returnAnythingWhenBehindSpringerPayWall()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java>	 >(02§
Corg.jabref.logic.importer.fetcher.DoiResolutionTest.notFoundByDOI()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaG	 G(2ß
Forg.jabref.logic.importer.fetcher.DoiResolutionTest.entityWithoutDoi()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaM	 M(2°
@org.jabref.logic.importer.fetcher.DoiResolutionTest.trustLevel()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaR	 R(2ß
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java ( 2¶
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (ﬂ
;org.jabref.logic.importer.fetcher.DoiResolutionTest.setup()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java	 ("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setup</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setup2ì
9org.jabref.logic.preferences.DOIPreferences.isUseCustom()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java ('2ƒ
jorg.jabref.logic.importer.fetcher.DoiResolution.DoiResolution(org.jabref.logic.preferences.DOIPreferences)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java ("2Ñ
*org.jabref.model.entry.BibEntry.BibEntry()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (2∞
Vorg.jabref.logic.importer.fetcher.DoiResolutionTest.setup()?doiPreferences@27.23:27.37CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (2†
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (2∞
Vorg.jabref.logic.importer.fetcher.DoiResolutionTest.setup()?doiPreferences@27.23:27.37CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java# (12ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (2∑
Vorg.jabref.logic.importer.fetcher.DoiResolutionTest.setup()?doiPreferences@27.23:27.37DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (%2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (à
Vorg.jabref.logic.importer.fetcher.DoiResolutionTest.setup()?doiPreferences@27.23:27.37VARIABLEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (%"
typeDOIPreferences"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>DOIPreferences <mark class="class-field">doiPreferences</mark> = mock(DOIPreferences.class)*doiPreferences2Ö
+org.jabref.logic.preferences.DOIPreferencesTYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (›
Korg.jabref.logic.importer.fetcher.DoiResolutionTest.linkWithPdfInTitleTag()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java"	 "("
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">linkWithPdfInTitleTag</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*linkWithPdfInTitleTag2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java# #(2r
java.util.Optional.of(T)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java% %(2∑
]org.jabref.logic.importer.fetcher.DoiResolution.findFullText(org.jabref.model.entry.BibEntry)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java& &(#2|
"java.net.URL.URL(java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java%  %(#2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java# #(2†
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java& &(2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java&$ &()2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java" "(©
Vorg.jabref.logic.importer.fetcher.DoiResolutionTest.linkWithPdfStringLeadsToFulltext()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java,	 ,()"
isFinalfalse"π
declarationString£ fetch due to Cloudflare protection") <br><mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">linkWithPdfStringLeadsToFulltext</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* linkWithPdfStringLeadsToFulltext2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java- -(2r
java.util.Optional.of(T)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java. .( 2∑
]org.jabref.logic.importer.fetcher.DoiResolution.findFullText(org.jabref.model.entry.BibEntry)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java.p .(|2|
"java.net.URL.URL(java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java.% .((2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java- -(2†
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java.i .(o2†
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLQ
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java.} .(Ç2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java, ,(˚
Torg.jabref.logic.importer.fetcher.DoiResolutionTest.citationMetaTagLeadsToFulltext()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java2	 2('"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">citationMetaTagLeadsToFulltext</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*citationMetaTagLeadsToFulltext2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java3 3(2r
java.util.Optional.of(T)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java4 4( 2∏
]org.jabref.logic.importer.fetcher.DoiResolution.findFullText(org.jabref.model.entry.BibEntry)CALLQ
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java4| 4(à2|
"java.net.URL.URL(java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java4% 4((2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java3 3(2†
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java4u 4({2°
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLR
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java4â 4(é2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java2 2(†
`org.jabref.logic.importer.fetcher.DoiResolutionTest.notReturnAnythingWhenMultipleLinksAreFound()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java8	 8(3"
isFinalfalse"ô
declarationStringÉ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">notReturnAnythingWhenMultipleLinksAreFound</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid**notReturnAnythingWhenMultipleLinksAreFound2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java9 9(2t
java.util.Optional.empty()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java: :(#2∑
]org.jabref.logic.importer.fetcher.DoiResolution.findFullText(org.jabref.model.entry.BibEntry)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java:. :(:2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java9 9(2†
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java:' :(-2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java:; :(@2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java8 8(ñ
]org.jabref.logic.importer.fetcher.DoiResolutionTest.returnAnythingWhenBehindSpringerPayWall()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java>	 >(0"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">returnAnythingWhenBehindSpringerPayWall</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'returnAnythingWhenBehindSpringerPayWall2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaB B(2r
java.util.Optional.of(T)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaC C( 2∏
]org.jabref.logic.importer.fetcher.DoiResolution.findFullText(org.jabref.model.entry.BibEntry)CALLQ
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaC| C(à2|
"java.net.URL.URL(java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaC% C((2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaB B(2†
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaCu C({2°
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLR
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaCâ C(é2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java> >(…
Corg.jabref.logic.importer.fetcher.DoiResolutionTest.notFoundByDOI()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaG	 G("
isFinalfalse"¸
declarationStringÊ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">notFoundByDOI</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*notFoundByDOI2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaH H(2t
java.util.Optional.empty()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaI I(#2∑
]org.jabref.logic.importer.fetcher.DoiResolution.findFullText(org.jabref.model.entry.BibEntry)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaI. I(:2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaH H(2†
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaI' I(-2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaI; I(@2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaG G(ı	
Forg.jabref.logic.importer.fetcher.DoiResolutionTest.entityWithoutDoi()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaM	 M("
isFinalfalse"ˇ
declarationStringÈ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">entityWithoutDoi</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*entityWithoutDoi2t
java.util.Optional.empty()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaN N(#2∑
]org.jabref.logic.importer.fetcher.DoiResolution.findFullText(org.jabref.model.entry.BibEntry)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaN. N(:2†
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaN' N(-2ü
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaN; N(@2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaM M(ﬁ
@org.jabref.logic.importer.fetcher.DoiResolutionTest.trustLevel()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaR	 R("
isFinalfalse"™
declarationStringî<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">trustLevel</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*
trustLevel2ô
?org.jabref.logic.importer.fetcher.DoiResolution.getTrustLevel()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaS/ S(<2†
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaS( S(.2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.javaR R(˘
Forg.jabref.logic.importer.fetcher.DoiResolutionTest?finder@22.26:22.32VARIABLEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java ( "
isFinalfalse"
typeDoiResolution"p
declarationString[<mark class="modifier">private </mark>DoiResolution <mark class="class-field">finder</mark>"
isStaticfalse"
accessprivate*finder2â
/org.jabref.logic.importer.fetcher.DoiResolutionTYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (€
Eorg.jabref.logic.importer.fetcher.DoiResolutionTest?entry@23.21:23.26VARIABLEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java ("
isFinalfalse"
typeBibEntry"j
declarationStringU<mark class="modifier">private </mark>BibEntry <mark class="class-field">entry</mark>"
isStaticfalse"
accessprivate*entry2y
org.jabref.model.entry.BibEntryTYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\DoiResolutionTest.java (