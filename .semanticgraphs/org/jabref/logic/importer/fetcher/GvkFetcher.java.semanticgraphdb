
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java≠
,org.jabref.logic.importer.fetcher.GvkFetcherCLASSI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"Ë
declarationString“<mark class="modifier">public </mark><mark class="modifier">class </mark>GvkFetcher<mark class="modifier"> extends </mark>AbstractIsbnFetcher<mark class="modifier"><br>implements </mark>SearchBasedParserFetcher"
accesspublic*
GvkFetcher2d

GvkFetcherDECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java# #(2ê
6org.jabref.logic.importer.fetcher.GvkFetcher.getName()DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java( ((2î
:org.jabref.logic.importer.fetcher.GvkFetcher.getHelpPage()DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java- -()2“
xorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java2 2(2¨
Rorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java@ @("2í
8org.jabref.logic.importer.fetcher.GvkFetcher.getParser()DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaO O(2µ
[org.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaT T(2û
Dorg.jabref.logic.importer.fetcher.GvkFetcher?URL_PATTERN@27.32:27.43DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java  (+2ù
Corg.jabref.logic.importer.fetcher.GvkFetcher?searchKeys@33.37:33.47DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java!% !(/2á
2org.jabref.logic.importer.SearchBasedParserFetcherEXTENDI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java? (W2ä
5org.jabref.logic.importer.fetcher.AbstractIsbnFetcherEXTENDI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java  (3ç

GvkFetcherCONSTRUCTORI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java# #("ë
declarationString|<mark class="modifier">public </mark><mark class="method">GvkFetcher</mark>(ImportFormatPreferences importFormatPreferences)*
GvkFetcher2Ü
,org.jabref.logic.importer.fetcher.GvkFetcherRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java# #(Ì
importFormatPreferences	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java#. #(E"
typeImportFormatPreferences"
isFinalfalse"D
declarationString/ImportFormatPreferences importFormatPreferences*importFormatPreferences2j
ImportFormatPreferencesTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java# #(-É
6org.jabref.logic.importer.fetcher.GvkFetcher.getName()METHODI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java( (("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2Ö
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java( ((2Ö
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java( ((2j
java.lang.StringRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java( ((∆	
:org.jabref.logic.importer.fetcher.GvkFetcher.getHelpPage()METHODI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java- -()"
isFinalfalse"´
declarationStringï<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;HelpFile&gt; <mark class="method">getHelpPage</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<HelpFile>*getHelpPage2k
java.util.Optional.of(T)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java. .(2â
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java- -()2ö
Corg.jabref.logic.importer.fetcher.AbstractIsbnFetcher.getHelpPage()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java- -()2â
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java- -()2l
java.util.OptionalRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java- -(2Å
org.jabref.logic.help.HelpFileRETURN_TYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java- -(æ
xorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)METHODI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java2 2("
isFinalfalse"•
declarationStringè<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URL <mark class="method">getURLForQuery</mark>(QueryNode luceneQuery)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURL*getURLForQuery2´
Xorg.jabref.logic.importer.fetcher.transformers.GVKQueryTransformer.GVKQueryTransformer()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java6- 6(@2ó
Dorg.jabref.logic.importer.fetcher.GvkFetcher?URL_PATTERN@27.32:27.43CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java3/ 3(:2„
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java4 4(2„
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java5 5(2„
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java6 6(2ÿ
Ñorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQueryCALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java6X 6(c2„
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java7 7(2„
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java8 8(2„
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java9 9(2„
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java;% ;(/2„
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java< <(2’
~org.jabref.logic.importer.SearchBasedParserFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java2 2(2›
Ñorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java2( 2(32Í
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java3 3(2f
java.net.URLRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java2 2(∫
èorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)?uriBuilder@51.19:51.29VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java3 3("
type
URIBuilder"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>URIBuilder <mark class="class-field">uriBuilder</mark> = new URIBuilder(URL_PATTERN)*
uriBuilder2z
'org.apache.http.client.utils.URIBuilderTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java3 3(2ó
Dorg.jabref.logic.importer.fetcher.GvkFetcher?URL_PATTERN@27.32:27.43CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java3/ 3(:Ã
Ñorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)!luceneQuery	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java2( 2(3"
type	QueryNode"
isFinalfalse"*
declarationStringQueryNode luceneQuery*luceneQuery2é
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java2 2('˝
Rorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)METHODI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java@ @(""
isFinalfalse"¶
declarationStringê<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>URL <mark class="method">getUrlForIdentifier</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeURL*getUrlForIdentifier2∞
]org.jabref.logic.importer.fetcher.AbstractIsbnFetcher.ensureThatIsbnIsValid(java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaA A("2∞
]org.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaA# A(-2ó
Dorg.jabref.logic.importer.fetcher.GvkFetcher?URL_PATTERN@27.32:27.43CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaB/ B(:2º
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaC C(2º
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaD D(2º
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaE E(2∞
]org.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)!identifierCALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaE7 E(A2º
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaF F(2º
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaG G(2º
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaH H(2º
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaJ% J(/2º
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaK K(2´
Torg.jabref.logic.importer.IdBasedParserFetcher.getUrlForIdentifier(java.lang.String)OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java@ @("2µ
]org.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java@* @(42√
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaB B(2f
java.net.URLRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java@ @(ì
iorg.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)?uriBuilder@66.19:66.29VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaB B("
type
URIBuilder"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>URIBuilder <mark class="class-field">uriBuilder</mark> = new URIBuilder(URL_PATTERN)*
uriBuilder2z
'org.apache.http.client.utils.URIBuilderTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaB B(2ó
Dorg.jabref.logic.importer.fetcher.GvkFetcher?URL_PATTERN@27.32:27.43CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaB/ B(:
]org.jabref.logic.importer.fetcher.GvkFetcher.getUrlForIdentifier(java.lang.String)!identifier	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java@* @(4"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java@# @()È
8org.jabref.logic.importer.fetcher.GvkFetcher.getParser()METHODI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaO O("
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Parser <mark class="method">getParser</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeParser*	getParser2ï
Borg.jabref.logic.importer.fileformat.PicaXmlParser.PicaXmlParser()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaP P( 2ï
>org.jabref.logic.importer.SearchBasedParserFetcher.getParser()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaO O(2ò
Aorg.jabref.logic.importer.fetcher.AbstractIsbnFetcher.getParser()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaO O(2ë
:org.jabref.logic.importer.IdBasedParserFetcher.getParser()OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaO O(2z
 org.jabref.logic.importer.ParserRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaO O(≈"
[org.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)METHODI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaT T("
isFinalfalse"≈
declarationStringØ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">doPostCleanup</mark>(BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*doPostCleanup2∞
]org.jabref.logic.importer.IdBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaU U(2ó
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaX0 X(92ü
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaX X(2±
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaY Y(2í
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaY> Y(H2™
Worg.jabref.logic.cleanup.FieldFormatterCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaZZ Z(a2™
Worg.jabref.logic.cleanup.FieldFormatterCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java[W [(^2‡
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaZ Z(!2¨
Yorg.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter.NormalizePagesFormatter()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaZ? Z(V2‡
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java[ [(!2¨
Yorg.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter.NormalizeNamesFormatter()CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java[< [(S2¥
aorg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaU U(!2¥
aorg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaX X(2¥
aorg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaY Y(2¿
morg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)?pages@88.58:88.63CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaY8 Y(=2¥
aorg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaZb Z(g2¥
aorg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entryCALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java[_ [(d2∏
aorg.jabref.logic.importer.SearchBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaT T(2¥
]org.jabref.logic.importer.IdBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)OVERRIDEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaT T(2π
aorg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaT' T(,2«
morg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)?pages@88.58:88.63DECLARATIONI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaX: X(?2^
voidRETURN_TYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaT T(˝
aorg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaT' T(,"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2r
org.jabref.model.entry.BibEntryTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaT T(&ä
morg.jabref.logic.importer.fetcher.GvkFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)?pages@88.58:88.63VARIABLEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.javaX: X(?"
type"
isFinalfalse"
declarationString pages*pages2TYPE¥
Dorg.jabref.logic.importer.fetcher.GvkFetcher?URL_PATTERN@27.32:27.43VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java  (+"
isFinaltrue"
typeString"·
declarationStringÀ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">URL_PATTERN</mark> = "https://sru.k10plus.de/opac-de-627?";"
isStatictrue"
accessprivate*URL_PATTERN2c
java.lang.StringTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java (Í
Corg.jabref.logic.importer.fetcher.GvkFetcher?searchKeys@33.37:33.47VALUEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java!% !(/"
isFinaltrue"
typeCollection<String>"®
declarationStringí<mark class="modifier">private </mark><mark class="modifier">final </mark>Collection<String> <mark class="class-field">searchKeys</mark> = Arrays.asList("all"<mark class="modifier">,</mark> "tit"<mark class="modifier">,</mark> "per"<mark class="modifier">,</mark> "thm"<mark class="modifier">,</mark> "slw"<mark class="modifier">,</mark> "txt"<mark class="modifier">,</mark> "num"<mark class="modifier">,</mark> "kon"<mark class="modifier">,</mark> "ppn"<mark class="modifier">,</mark> "bkl"<mark class="modifier">,</mark> "erj");"
isStaticfalse"
accessprivate*
searchKeys2g
java.util.CollectionTYPEI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java! !(2l
java.lang.StringTYPE_ARGUMENTI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java! !(#2p
java.util.Arrays.asList(T...)CALLI
?src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java!9 !(?