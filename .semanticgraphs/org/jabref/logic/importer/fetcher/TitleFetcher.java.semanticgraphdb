
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java´

.org.jabref.logic.importer.fetcher.TitleFetcherCLASSK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"¶
declarationStringê<mark class="modifier">public </mark><mark class="modifier">class </mark>TitleFetcher<mark class="modifier"><br>implements </mark>IdBasedFetcher"
accesspublic*TitleFetcher2h
TitleFetcherDECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (2î
8org.jabref.logic.importer.fetcher.TitleFetcher.getName()DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (2ò
<org.jabref.logic.importer.fetcher.TitleFetcher.getHelpPage()DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java ()2Æ
Rorg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java! !(/2¢
Forg.jabref.logic.importer.fetcher.TitleFetcher?preferences@16.42:16.53DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java* (52
(org.jabref.logic.importer.IdBasedFetcherEXTENDK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java% (3´
TitleFetcherCONSTRUCTORK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java ("á
declarationStringr<mark class="modifier">public </mark><mark class="method">TitleFetcher</mark>(ImportFormatPreferences preferences)*TitleFetcher2õ
Forg.jabref.logic.importer.fetcher.TitleFetcher?preferences@16.42:16.53CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (2ä
.org.jabref.logic.importer.fetcher.TitleFetcherRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (Õ
preferences	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java0 (;"
typeImportFormatPreferences"
isFinalfalse"8
declarationString#ImportFormatPreferences preferences*preferences2l
ImportFormatPreferencesTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (/É
8org.jabref.logic.importer.fetcher.TitleFetcher.getName()METHODK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java ("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2á
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (2l
java.lang.StringRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (©
<org.jabref.logic.importer.fetcher.TitleFetcher.getHelpPage()METHODK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java ()"
isFinalfalse"´
declarationStringï<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;HelpFile&gt; <mark class="method">getHelpPage</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<HelpFile>*getHelpPage2m
java.util.Optional.of(T)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (2ã
2org.jabref.logic.importer.WebFetcher.getHelpPage()OVERRIDEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java ()2n
java.util.OptionalRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (2É
org.jabref.logic.help.HelpFileRETURN_TYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java (ö!
Rorg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)METHODK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java! !(/"
isFinalfalse"ñ
declarationStringÄ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;BibEntry&gt; <mark class="method">performSearchById</mark>(String identifier)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<BibEntry>*performSearchById2í
=org.jabref.model.strings.StringUtil.isBlank(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java" "(2o
java.util.Optional.empty()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java# #(!2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java&( &(12q
java.util.Optional.isEmpty()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java) )(2o
java.util.Optional.empty()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java* *(!2•
Porg.jabref.logic.importer.fetcher.DoiFetcher.performSearchById(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java. .(+2É
.org.jabref.model.entry.identifier.DOI.getDOI()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java.6 .(<2m
java.util.Optional.get()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java.0 .(32
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java& &(%2≤
]org.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)!identifierCALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java" "()2≤
]org.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)!identifierCALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java&G &(Q2π
dorg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?entry@38.17:38.22CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java(\ ((a2∑
borg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?doi@40.22:40.25CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java) )(2æ
iorg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?doiFetcher@45.19:45.29CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java. .(2∑
borg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?doi@40.22:40.25CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java., .(/2õ
Forg.jabref.logic.importer.fetcher.TitleFetcher?preferences@16.42:16.53CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java-4 -(?2•
Lorg.jabref.logic.importer.IdBasedFetcher.performSearchById(java.lang.String)OVERRIDEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java! !(/2∑
]org.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)!identifier	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java!7 !(A2¿
dorg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?entry@38.17:38.22DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java& &(2æ
borg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?doi@40.22:40.25DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java( ((2≈
iorg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?doiFetcher@45.19:45.29DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java- -(2n
java.util.OptionalRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java! !(2Ñ
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java! !(Ó
dorg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?entry@38.17:38.22VARIABLEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java& &("
typeBibEntry"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry().withField(StandardField.TITLE, identifier)*entry2t
org.jabref.model.entry.BibEntryTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java& &(2¥
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java&( &(12
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java& &(%2≤
]org.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)!identifierCALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java&G &(Q«
borg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?doi@40.22:40.25VARIABLEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java( (("
typeOptional<DOI>"
isFinalfalse"∞
declarationStringö<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = WebFetchers.getIdFetcherForIdentifier(DOI.class).findIdentifier(entry)*doi2g
java.util.OptionalTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java( ((2É
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java( ((2π
dorg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?entry@38.17:38.22CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java(\ ((a≈
iorg.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)?doiFetcher@45.19:45.29VARIABLEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java- -("
type
DoiFetcher"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark>DoiFetcher <mark class="class-field">doiFetcher</mark> = new DoiFetcher(<mark class="modifier">this</mark>.preferences)*
doiFetcher2Å
,org.jabref.logic.importer.fetcher.DoiFetcherTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java- -(2õ
Forg.jabref.logic.importer.fetcher.TitleFetcher?preferences@16.42:16.53CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java-4 -(?Ù
]org.jabref.logic.importer.fetcher.TitleFetcher.performSearchById(java.lang.String)!identifier	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java!7 !(A"
typeString"
isFinalfalse"&
declarationStringString identifier*
identifier2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java!0 !(6ñ
Forg.jabref.logic.importer.fetcher.TitleFetcher?preferences@16.42:16.53VALUEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java* (5"
isFinaltrue"
typeImportFormatPreferences"§
declarationStringé<mark class="modifier">private </mark><mark class="modifier">final </mark>ImportFormatPreferences <mark class="class-field">preferences</mark>"
isStaticfalse"
accessprivate*preferences2l
ImportFormatPreferencesTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java ()