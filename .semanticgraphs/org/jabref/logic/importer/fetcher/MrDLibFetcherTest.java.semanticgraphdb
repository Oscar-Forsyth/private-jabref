
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.javaã

3org.jabref.logic.importer.fetcher.MrDLibFetcherTestCLASSP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"°
declarationStringã<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>MrDLibFetcherTest"
accesspublic*MrDLibFetcherTest2ú
;org.jabref.logic.importer.fetcher.MrDLibFetcherTest.setUp()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (2§
Corg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java! !(2¥
Sorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java) )(-2û
=org.jabref.logic.importer.fetcher.MrDLibFetcherTest.getName()DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java> >(2®
Gorg.jabref.logic.importer.fetcher.MrDLibFetcherTest?fetcher@20.26:20.33DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (!Ì
;org.jabref.logic.importer.fetcher.MrDLibFetcherTest.setUp()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java ("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2è
5org.jabref.logic.util.Version.parse(java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java0 (52∏
^org.jabref.preferences.MrDlibPreferences.MrDlibPreferences(boolean, boolean, boolean, boolean)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java2 (C2Û
òorg.jabref.logic.importer.fetcher.MrDLibFetcher.MrDLibFetcher(java.lang.String, org.jabref.logic.util.Version, org.jabref.preferences.MrDlibPreferences)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (#2°
Gorg.jabref.logic.importer.fetcher.MrDLibFetcherTest?fetcher@20.26:20.33CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (2≥
Yorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.setUp()?mrDlibPreferences@24.26:24.43CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java; (L2∫
Yorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.setUp()?mrDlibPreferences@24.26:24.43DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (+2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (¸
Yorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.setUp()?mrDlibPreferences@24.26:24.43VARIABLEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (+"
typeMrDlibPreferences"
isFinalfalse"¬
declarationString¨<mark class="modifier"> </mark>MrDlibPreferences <mark class="class-field">mrDlibPreferences</mark> = new MrDlibPreferences(true, <mark class="modifier">false</mark><mark class="modifier">,</mark> <mark class="modifier">false</mark><mark class="modifier">,</mark> <mark class="modifier">false</mark>)*mrDlibPreferences2Ç
(org.jabref.preferences.MrDlibPreferencesTYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (2∏
^org.jabref.preferences.MrDlibPreferences.MrDlibPreferences(boolean, boolean, boolean, boolean)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java2 (Cß
Corg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java! !("
isFinalfalse"á
declarationStringÒ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearch</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearch2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java# #(2∏
^org.jabref.logic.importer.fetcher.MrDLibFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$+ $(82r
java.util.List.isEmpty()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java% %(%2Ñ
*org.jabref.model.entry.BibEntry.BibEntry()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java"  "((2≤
Xorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()?bibEntry@34.17:34.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java# #(2°
Gorg.jabref.logic.importer.fetcher.MrDLibFetcherTest?fetcher@20.26:20.33CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$# $(*2≤
Xorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()?bibEntry@34.17:34.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$9 $(A2≥
Yorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()?bibEntrys@36.23:36.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java% %(2π
Xorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()?bibEntry@34.17:34.25DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java" "(2∫
Yorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()?bibEntrys@36.23:36.32DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$ $( 2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java! !(ﬂ
Xorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()?bibEntry@34.17:34.25VARIABLEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java" "("
typeBibEntry"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>BibEntry <mark class="class-field">bibEntry</mark> = new BibEntry()*bibEntry2y
org.jabref.model.entry.BibEntryTYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java" "(2Ñ
*org.jabref.model.entry.BibEntry.BibEntry()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java"  "((Å	
Yorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()?bibEntrys@36.23:36.32VARIABLEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$ $( "
typeList<BibEntry>"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntrys</mark> = fetcher.performSearch(bibEntry)*	bibEntrys2h
java.util.ListTYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$ $(2Ç
org.jabref.model.entry.BibEntryTYPE_ARGUMENTP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$ $(2∏
^org.jabref.logic.importer.fetcher.MrDLibFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$+ $(82°
Gorg.jabref.logic.importer.fetcher.MrDLibFetcherTest?fetcher@20.26:20.33CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$# $(*2≤
Xorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearch()?bibEntry@34.17:34.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java$9 $(Aâ7
Sorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java) )(-"
isFinalfalse"ó
declarationStringÅ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchForHornecker2006</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearchForHornecker20062ö
@org.jabref.model.entry.BibEntry.setCitationKey(java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java+ +(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java, ,(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java- -(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java. .(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java/ /(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java0 0(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java1 1(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java2 2(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java3 3(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java4 4(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java5 5(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java6 6(2∏
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java7 7(2∏
^org.jabref.logic.importer.fetcher.MrDLibFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java9+ 9(82r
java.util.List.isEmpty()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java: :(%2Ñ
*org.jabref.model.entry.BibEntry.BibEntry()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java*  *((2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java+ +(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java, ,(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java- -(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java. .(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java/ /(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java0 0(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java1 1(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java2 2(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java3 3(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java4 4(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java5 5(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java6 6(2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java7 7(2°
Gorg.jabref.logic.importer.fetcher.MrDLibFetcherTest?fetcher@20.26:20.33CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java9# 9(*2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java99 9(A2√
iorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntrys@57.23:57.32CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java: :(2…
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java* *(2 
iorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntrys@57.23:57.32DECLARATIONP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java9 9( 2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java) )(Ô
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25VARIABLEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java* *("
typeBibEntry"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>BibEntry <mark class="class-field">bibEntry</mark> = new BibEntry()*bibEntry2y
org.jabref.model.entry.BibEntryTYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java* *(2Ñ
*org.jabref.model.entry.BibEntry.BibEntry()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java*  *((°	
iorg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntrys@57.23:57.32VARIABLEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java9 9( "
typeList<BibEntry>"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">bibEntrys</mark> = fetcher.performSearch(bibEntry)*	bibEntrys2h
java.util.ListTYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java9 9(2Ç
org.jabref.model.entry.BibEntryTYPE_ARGUMENTP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java9 9(2∏
^org.jabref.logic.importer.fetcher.MrDLibFetcher.performSearch(org.jabref.model.entry.BibEntry)CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java9+ 9(82°
Gorg.jabref.logic.importer.fetcher.MrDLibFetcherTest?fetcher@20.26:20.33CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java9# 9(*2¬
horg.jabref.logic.importer.fetcher.MrDLibFetcherTest.performSearchForHornecker2006()?bibEntry@42.17:42.25CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java99 9(AÕ
=org.jabref.logic.importer.fetcher.MrDLibFetcherTest.getName()METHODP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java> >("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getName2ì
9org.jabref.logic.importer.fetcher.MrDLibFetcher.getName()CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java?, ?(32°
Gorg.jabref.logic.importer.fetcher.MrDLibFetcherTest?fetcher@20.26:20.33CALLP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java?$ ?(+2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java> >(¸
Gorg.jabref.logic.importer.fetcher.MrDLibFetcherTest?fetcher@20.26:20.33VARIABLEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (!"
isFinalfalse"
typeMrDLibFetcher"q
declarationString\<mark class="modifier">private </mark>MrDLibFetcher <mark class="class-field">fetcher</mark>"
isStaticfalse"
accessprivate*fetcher2â
/org.jabref.logic.importer.fetcher.MrDLibFetcherTYPEP
Fsrc\test\java\org\jabref\logic\importer\fetcher\MrDLibFetcherTest.java (