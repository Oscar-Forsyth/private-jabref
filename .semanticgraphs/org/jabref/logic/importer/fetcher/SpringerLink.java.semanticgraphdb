
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java˘
.org.jabref.logic.importer.fetcher.SpringerLinkCLASSK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"ø
declarationString©<mark class="modifier">public </mark><mark class="modifier">class </mark>SpringerLink<mark class="modifier"><br>implements </mark>FulltextFetcher, CustomizableKeyFetcher"
accesspublic*SpringerLink2∆
jorg.jabref.logic.importer.fetcher.SpringerLink.SpringerLink(org.jabref.logic.importer.ImporterPreferences)DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java& &(2∏
\org.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java+ +(%2ö
>org.jabref.logic.importer.fetcher.SpringerLink.getTrustLevel()DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaJ J(#2î
8org.jabref.logic.importer.fetcher.SpringerLink.getName()DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaO O(2£
Gorg.jabref.logic.importer.fetcher.SpringerLink?FETCHER_NAME@28.31:28.43DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java (+2ù
Aorg.jabref.logic.importer.fetcher.SpringerLink?LOGGER@30.32:30.38DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java  (&2û
Borg.jabref.logic.importer.fetcher.SpringerLink?API_URL@32.32:32.39DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java    ('2û
Borg.jabref.logic.importer.fetcher.SpringerLink?API_KEY@33.32:33.39DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java!  !('2£
Gorg.jabref.logic.importer.fetcher.SpringerLink?CONTENT_HOST@34.32:34.44DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java"  "(,2™
Norg.jabref.logic.importer.fetcher.SpringerLink?importerPreferences@36.38:36.57DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java$& $(92Ä
)org.jabref.logic.importer.FulltextFetcherEXTENDK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java% (42è
8org.jabref.logic.importer.fetcher.CustomizableKeyFetcherEXTENDK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java6 (L∆
jorg.jabref.logic.importer.fetcher.SpringerLink.SpringerLink(org.jabref.logic.importer.ImporterPreferences)CONSTRUCTORK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java& &("ã
declarationStringv<mark class="modifier">public </mark><mark class="method">SpringerLink</mark>(ImporterPreferences importerPreferences)*SpringerLink2”
~org.jabref.logic.importer.fetcher.SpringerLink.SpringerLink(org.jabref.logic.importer.ImporterPreferences)!importerPreferencesCALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java'# '(62£
Norg.jabref.logic.importer.fetcher.SpringerLink?importerPreferences@36.38:36.57CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java' '( 2ÿ
~org.jabref.logic.importer.fetcher.SpringerLink.SpringerLink(org.jabref.logic.importer.ImporterPreferences)!importerPreferences	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java&, &(?2ä
.org.jabref.logic.importer.fetcher.SpringerLinkRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java& &(ﬂ
~org.jabref.logic.importer.fetcher.SpringerLink.SpringerLink(org.jabref.logic.importer.ImporterPreferences)!importerPreferences	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java&, &(?"
typeImporterPreferences"
isFinalfalse"<
declarationString'ImporterPreferences importerPreferences*importerPreferences2Ç
-org.jabref.logic.importer.ImporterPreferencesTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java& &(+–:
\org.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)METHODK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java+ +(%"
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;URL&gt; <mark class="method">findFullText</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<URL>*findFullText2x
#java.util.Objects.requireNonNull(T)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java, ,(2¬
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/> /(E2°
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/" /(*2q
java.util.Optional.isEmpty()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java1 1(2o
java.util.Optional.empty()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java2 2(!2r
java.util.Optional.orElse(T)CALLL
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7z 7(Ä2û
Iorg.jabref.logic.importer.ImporterPreferences.getApiKey(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7e 7(n2ç
8org.jabref.logic.importer.fetcher.SpringerLink.getName()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7o 7(v2Ñ
/java.lang.String.formatted(java.lang.Object...)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java8T 8(]2É
.org.jabref.model.entry.identifier.DOI.getDOI()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java8h 8(n2m
java.util.Optional.get()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java8b 8(e2m
java.util.Optional.of(T)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java@$ @(&2Ñ
/java.lang.String.formatted(java.lang.Object...)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java@[ @(d2É
.org.jabref.model.entry.identifier.DOI.getDOI()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java@o @(u2m
java.util.Optional.get()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java@i @(l2o
java.util.Optional.empty()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaF F(2õ
Fjava.net.URL.URL(java.lang.String, java.lang.String, java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java@+ @(.2∑
borg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)!entryCALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java, ,($2∑
borg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)!entryCALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/ /(!2¡
lorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?doi@47.22:47.25CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java1 1(2ó
Borg.jabref.logic.importer.fetcher.SpringerLink?API_URL@32.32:32.39CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java6> 6(E2£
Norg.jabref.logic.importer.fetcher.SpringerLink?importerPreferences@36.38:36.57CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7Q 7(d2ô
Borg.jabref.logic.importer.fetcher.SpringerLink?API_KEY@33.32:33.39CALLM
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7Å 7(à2¡
lorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?doi@47.22:47.25CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java8^ 8(a2 
uorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?jsonResponse@54.35:54.47CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java: :(2 
uorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?jsonResponse@54.35:54.47CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java;" ;(.2¬
morg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?json@59.27:59.31CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java< <("2≈
porg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?results@60.20:60.27CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java> >(2ñ
Aorg.jabref.logic.importer.fetcher.SpringerLink?LOGGER@30.32:30.38CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java? ?(2ú
Gorg.jabref.logic.importer.fetcher.SpringerLink?CONTENT_HOST@34.32:34.44CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java@7 @(C2¡
lorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?doi@47.22:47.25CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java@e @(h2ñ
Aorg.jabref.logic.importer.fetcher.SpringerLink?LOGGER@30.32:30.38CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaD D(2ø
jorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?e@67.34:67.35CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaD; D(<2í
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/F /(P2∞
Worg.jabref.logic.importer.FulltextFetcher.findFullText(org.jabref.model.entry.BibEntry)OVERRIDEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java+ +(%2º
borg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java+/ +(42»
lorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?doi@47.22:47.25DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/ /(2—
uorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?jsonResponse@54.35:54.47DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java6# 6(/2…
morg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?json@59.27:59.31DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java; ;(2Ã
porg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?results@60.20:60.27DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java< <(2∆
jorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?e@67.34:67.35DECLARATIONK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaC" C(#2n
java.util.OptionalRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java+ +(2q
java.net.URLRETURN_TYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java+ +(º

lorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?doi@47.22:47.25VARIABLEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/ /("
typeOptional<DOI>"
isFinalfalse"ü
declarationStringâ<mark class="modifier"> </mark>Optional<DOI> <mark class="class-field">doi</mark> = entry.getField(StandardField.DOI).flatMap(DOI::parse)*doi2g
java.util.OptionalTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/ /(2É
%org.jabref.model.entry.identifier.DOITYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/ /(2¬
mjava.util.Optional.flatMap(java.util.function.Function<? super T, ? extends java.util.Optional<? extends U>>)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/> /(E2°
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/" /(*2∑
borg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)!entryCALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/ /(!2í
=org.jabref.model.entry.identifier.DOI.parse(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java/F /(Pñ
uorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?jsonResponse@54.35:54.47VARIABLEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java6# 6(/"
typeHttpResponse<JsonNode>"
isFinalfalse"ﬂ
declarationString…<mark class="modifier"> </mark>HttpResponse<JsonNode> <mark class="class-field">jsonResponse</mark> = Unirest.get(API_URL).queryString("api_key"<mark class="modifier">,</mark> importerPreferences.getApiKey(getName()).orElse(API_KEY)).queryString("q"<mark class="modifier">,</mark> "doi:%s".formatted(doi.get().getDOI())).asJson()*jsonResponse2n
kong.unirest.HttpResponseTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java6 6(2s
kong.unirest.JsonNodeTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java6 6(!2r
java.util.Optional.orElse(T)CALLL
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7z 7(Ä2û
Iorg.jabref.logic.importer.ImporterPreferences.getApiKey(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7e 7(n2ç
8org.jabref.logic.importer.fetcher.SpringerLink.getName()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7o 7(v2Ñ
/java.lang.String.formatted(java.lang.Object...)CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java8T 8(]2É
.org.jabref.model.entry.identifier.DOI.getDOI()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java8h 8(n2m
java.util.Optional.get()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java8b 8(e2ó
Borg.jabref.logic.importer.fetcher.SpringerLink?API_URL@32.32:32.39CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java6> 6(E2£
Norg.jabref.logic.importer.fetcher.SpringerLink?importerPreferences@36.38:36.57CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7Q 7(d2ô
Borg.jabref.logic.importer.fetcher.SpringerLink?API_KEY@33.32:33.39CALLM
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java7Å 7(à2¡
lorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?doi@47.22:47.25CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java8^ 8(aæ
morg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?json@59.27:59.31VARIABLEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java; ;("
type
JSONObject"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>JSONObject <mark class="class-field">json</mark> = jsonResponse.getBody().getObject()*json2q
kong.unirest.json.JSONObjectTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java; ;(2 
uorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?jsonResponse@54.35:54.47CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java;" ;(.—
porg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?results@60.20:60.27VARIABLEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java< <("
typeint"
isFinalfalse"æ
declarationString®<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">results</mark> = json.getJSONArray("result").getJSONObject(0).getInt("total")*results2X
intTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java< <(2¬
morg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?json@59.27:59.31CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java< <("Ç
borg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java+/ +(4"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2t
org.jabref.model.entry.BibEntryTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java+& +(.è
jorg.jabref.logic.importer.fetcher.SpringerLink.findFullText(org.jabref.model.entry.BibEntry)?e@67.34:67.35VARIABLEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaC" C(#"
typeUnirestException"
isFinalfalse"'
declarationStringUnirestException e*e2r
kong.unirest.UnirestExceptionTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaC C(!∆
>org.jabref.logic.importer.fetcher.SpringerLink.getTrustLevel()METHODK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaJ J(#"
isFinalfalse"ü
declarationStringâ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>TrustLevel <mark class="method">getTrustLevel</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
TrustLevel*getTrustLevel2í
9org.jabref.logic.importer.FulltextFetcher.getTrustLevel()OVERRIDEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaJ J(#2à
,org.jabref.logic.importer.fetcher.TrustLevelRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaJ J(¢
8org.jabref.logic.importer.fetcher.SpringerLink.getName()METHODK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaO O("
isFinalfalse"î
declarationString<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeString*getName2ú
Gorg.jabref.logic.importer.fetcher.SpringerLink?FETCHER_NAME@28.31:28.43CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaP P(2á
.org.jabref.logic.importer.WebFetcher.getName()OVERRIDEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaO O(2l
java.lang.StringRETURN_TYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.javaO O(†
Gorg.jabref.logic.importer.fetcher.SpringerLink?FETCHER_NAME@28.31:28.43VALUEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java (+"
isFinaltrue"
typeString"∆
declarationString∞<mark class="modifier">public </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">FETCHER_NAME</mark> = "Springer";"
isStatictrue"
accesspublic*FETCHER_NAME2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java (±
Aorg.jabref.logic.importer.fetcher.SpringerLink?LOGGER@30.32:30.38VALUEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java  (&"
isFinaltrue"
typeLogger"‚
declarationStringÃ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(SpringerLink.class);"
isStatictrue"
accessprivate*LOGGER2e
org.slf4j.LoggerTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java (∞
Borg.jabref.logic.importer.fetcher.SpringerLink?API_URL@32.32:32.39VALUEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java    ('"
isFinaltrue"
typeString"ﬂ
declarationString…<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">API_URL</mark> = "https://api.springer.com/meta/v1/json";"
isStatictrue"
accessprivate*API_URL2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java   (∞
Borg.jabref.logic.importer.fetcher.SpringerLink?API_KEY@33.32:33.39VALUEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java!  !('"
isFinaltrue"
typeString"‹
declarationString∆<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">API_KEY</mark> = new BuildInfo().springerNatureAPIKey;"
isStatictrue"
accessprivate*API_KEY2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java! !(2Ä
+org.jabref.logic.util.BuildInfo.BuildInfo()CALLK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java!. !(7´
Gorg.jabref.logic.importer.fetcher.SpringerLink?CONTENT_HOST@34.32:34.44VALUEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java"  "(,"
isFinaltrue"
typeString"–
declarationString∫<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">CONTENT_HOST</mark> = "link.springer.com";"
isStatictrue"
accessprivate*CONTENT_HOST2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java" "(Ω
Norg.jabref.logic.importer.fetcher.SpringerLink?importerPreferences@36.38:36.57VALUEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java$& $(9"
isFinaltrue"
typeImporterPreferences"®
declarationStringí<mark class="modifier">private </mark><mark class="modifier">final </mark>ImporterPreferences <mark class="class-field">importerPreferences</mark>"
isStaticfalse"
accessprivate*importerPreferences2Ç
-org.jabref.logic.importer.ImporterPreferencesTYPEK
Asrc\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java$ $(%