
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaÑ
0org.jabref.logic.importer.fetcher.GvkFetcherTestCLASSM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java (",
package!org.jabref.logic.importer.fetcher"
isFinalfalse"
inner classfalse"

isAbstractfalse"û
declarationStringà<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>GvkFetcherTest"
accesspublic*GvkFetcherTest2ñ
8org.jabref.logic.importer.fetcher.GvkFetcherTest.setUp()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java! !(2ò
:org.jabref.logic.importer.fetcher.GvkFetcherTest.getName()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java? ?(2¨
Norg.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaD D(+2≠
Oorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaL L(,2µ
Worg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchMatchingMultipleEntries()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaT T(42ß
Iorg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch591166003()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java[ [(&2ß
Iorg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch66391437X()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaa a(&2£
Eorg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchEmpty()DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javag g("2¢
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java (2Ø
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN591166003@29.21:29.41DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java ()2Ø
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN66391437X@30.21:30.41DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java ()√+
8org.jabref.logic.importer.fetcher.GvkFetcherTest.setUp()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java! !("
isFinalfalse"±
declarationStringõ<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java0 0(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java/ /(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java. .(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java- -(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java, ,(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java+ +(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java* *(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java) )(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java( ((2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java' '(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java& &(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java% %(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java; ;(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java: :(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java9 9(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java8 8(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java7 7(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java6 6(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java5 5(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java4 4(2∂
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java3 3(2ß
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java$# $(+2ü
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java/ /(+2ß
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java2# 2(+2ü
Horg.jabref.model.entry.field.UnknownField.UnknownField(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java: :(+2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java" "(2®
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN591166003@29.21:29.41CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java$ $(2®
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN66391437X@30.21:30.41CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java2 2(2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java! !(∏
:org.jabref.logic.importer.fetcher.GvkFetcherTest.getName()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java? ?("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getName</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getName2ç
6org.jabref.logic.importer.fetcher.GvkFetcher.getName()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java@$ @(+2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java@ @(#2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java? ?(
Norg.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaD D(+"
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">simpleSearchQueryURLCorrect</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*simpleSearchQueryURLCorrect2œ
xorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaG G((2p
java.net.URL.toString()CALLO
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaH… H(—2∑
`org.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?query@69.15:69.20CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaFA F(F2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaG G(2Ω
forg.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?luceneQuery@70.18:70.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaG) G(42∑
^org.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?url@71.12:71.15CALLO
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaH≈ H(»2æ
`org.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?query@69.15:69.20DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaE E(2ƒ
forg.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?luceneQuery@70.18:70.29DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaF F(2º
^org.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?url@71.12:71.15DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaG G(2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaD D(Ω
`org.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?query@69.15:69.20VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaE E("
typeString"
isFinalfalse"n
declarationStringY<mark class="modifier"> </mark>String <mark class="class-field">query</mark> = "java jdk"*query2g
java.lang.StringTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaE E(Ü
forg.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?luceneQuery@70.18:70.29VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaF F("
type	QueryNode"
isFinalfalse"¡
declarationString´<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(query, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2í
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaF F(2∑
`org.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?query@69.15:69.20CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaFA F(F˜
^org.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?url@71.12:71.15VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaG G("
typeURL"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>URL <mark class="class-field">url</mark> = fetcher.getURLForQuery(luceneQuery)*url2c
java.net.URLTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaG G(2œ
xorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaG G((2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaG G(2Ω
forg.jabref.logic.importer.fetcher.GvkFetcherTest.simpleSearchQueryURLCorrect()?luceneQuery@70.18:70.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaG) G(4˘
Oorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaL L(,"
isFinalfalse"è
declarationString˘<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">complexSearchQueryURLCorrect</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*complexSearchQueryURLCorrect2œ
xorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaO O((2p
java.net.URL.toString()CALLO
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaP… P(—2∏
aorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?query@77.15:77.20CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaNA N(F2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaO O(2æ
gorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?luceneQuery@78.18:78.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaO) O(42∏
_org.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?url@79.12:79.15CALLO
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaP≈ P(»2ø
aorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?query@77.15:77.20DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaM M(2≈
gorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?luceneQuery@78.18:78.29DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaN N(2Ω
_org.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?url@79.12:79.15DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaO O(2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaL L(∆
aorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?query@77.15:77.20VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaM M("
typeString"
isFinalfalse"v
declarationStringa<mark class="modifier"> </mark>String <mark class="class-field">query</mark> = "kon:java tit:jdk"*query2g
java.lang.StringTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaM M(à
gorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?luceneQuery@78.18:78.29VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaN N("
type	QueryNode"
isFinalfalse"¡
declarationString´<mark class="modifier"> </mark>QueryNode <mark class="class-field">luceneQuery</mark> = new StandardSyntaxParser().parse(query, AbstractQueryTransformer.NO_EXPLICIT_FIELD)*luceneQuery2í
;org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaN N(2∏
aorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?query@77.15:77.20CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaNA N(F˘
_org.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?url@79.12:79.15VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaO O("
typeURL"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>URL <mark class="class-field">url</mark> = fetcher.getURLForQuery(luceneQuery)*url2c
java.net.URLTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaO O(2œ
xorg.jabref.logic.importer.fetcher.GvkFetcher.getURLForQuery(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaO O((2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaO O(2æ
gorg.jabref.logic.importer.fetcher.GvkFetcherTest.complexSearchQueryURLCorrect()?luceneQuery@78.18:78.29CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaO) O(4∫
Worg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchMatchingMultipleEntries()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaT T(4"
isFinalfalse"û
declarationStringà<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchMatchingMultipleEntries</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*$performSearchMatchingMultipleEntries2£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaU. U(;2Ä
)java.util.List.contains(java.lang.Object)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaV  V((2Ä
)java.util.List.contains(java.lang.Object)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaW  W((2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaU& U(-2«
porg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchMatchingMultipleEntries()?searchResult@85.23:85.35CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaV V(2®
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN591166003@29.21:29.41CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaV) V(=2«
porg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchMatchingMultipleEntries()?searchResult@85.23:85.35CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaW W(2®
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN66391437X@30.21:30.41CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaW) W(=2Œ
porg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchMatchingMultipleEntries()?searchResult@85.23:85.35DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaU U(#2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaT T(◊
porg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchMatchingMultipleEntries()?searchResult@85.23:85.35VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaU U(#"
typeList<BibEntry>"
isFinalfalse"•
declarationStringè<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">searchResult</mark> = fetcher.performSearch("title:\"effective java\"")*searchResult2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaU U(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaU U(2£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaU. U(;2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaU& U(-¯
Iorg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch591166003()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java[ [(&"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearch591166003</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearch5911660032£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java\. \(;2}
&java.util.Collections.singletonList(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java]! ](.2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java\& \(-2®
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN591166003@29.21:29.41CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java]/ ](C2π
borg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch591166003()?searchResult@92.23:92.35CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java]F ](R2¿
borg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch591166003()?searchResult@92.23:92.35DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java\ \(#2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java[ [(æ
borg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch591166003()?searchResult@92.23:92.35VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java\ \(#"
typeList<BibEntry>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">searchResult</mark> = fetcher.performSearch("ppn:591166003")*searchResult2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java\ \(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java\ \(2£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java\. \(;2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java\& \(-¯
Iorg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch66391437X()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaa a(&"
isFinalfalse"ê
declarationString˙<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearch66391437X</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearch66391437X2£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javab. b(;2}
&java.util.Collections.singletonList(T)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javac! c(.2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javab& b(-2®
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN66391437X@30.21:30.41CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javac/ c(C2π
borg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch66391437X()?searchResult@98.23:98.35CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javacF c(R2¿
borg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch66391437X()?searchResult@98.23:98.35DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javab b(#2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javaa a(æ
borg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearch66391437X()?searchResult@98.23:98.35VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javab b(#"
typeList<BibEntry>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">searchResult</mark> = fetcher.performSearch("ppn:66391437X")*searchResult2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javab b(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javab b(2£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javab. b(;2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javab& b(-∏
Eorg.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchEmpty()METHODM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javag g(""
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">performSearchEmpty</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*performSearchEmpty2£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javah. h(;2x
!java.util.Collections.emptyList()CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javai! i(*2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javah& h(-2∑
`org.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchEmpty()?searchResult@104.23:104.35CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javai. i(:2æ
`org.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchEmpty()?searchResult@104.23:104.35DECLARATIONM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javah h(#2b
voidRETURN_TYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javag g(Æ
`org.jabref.logic.importer.fetcher.GvkFetcherTest.performSearchEmpty()?searchResult@104.23:104.35VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javah h(#"
typeList<BibEntry>"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">searchResult</mark> = fetcher.performSearch("")*searchResult2e
java.util.ListTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javah h(2
org.jabref.model.entry.BibEntryTYPE_ARGUMENTM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javah h(2£
Lorg.jabref.logic.importer.SearchBasedFetcher.performSearch(java.lang.String)CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javah. h(;2õ
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30CALLM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.javah& h(-Í
Dorg.jabref.logic.importer.fetcher.GvkFetcherTest?fetcher@28.23:28.30VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java ("
isFinalfalse"
type
GvkFetcher"n
declarationStringY<mark class="modifier">private </mark>GvkFetcher <mark class="class-field">fetcher</mark>"
isStaticfalse"
accessprivate*fetcher2É
,org.jabref.logic.importer.fetcher.GvkFetcherTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java (ˇ
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN591166003@29.21:29.41VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java ()"
isFinalfalse"
typeBibEntry"y
declarationStringd<mark class="modifier">private </mark>BibEntry <mark class="class-field">bibEntryPPN591166003</mark>"
isStaticfalse"
accessprivate*bibEntryPPN5911660032v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java (ˇ
Qorg.jabref.logic.importer.fetcher.GvkFetcherTest?bibEntryPPN66391437X@30.21:30.41VARIABLEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java ()"
isFinalfalse"
typeBibEntry"y
declarationStringd<mark class="modifier">private </mark>BibEntry <mark class="class-field">bibEntryPPN66391437X</mark>"
isStaticfalse"
accessprivate*bibEntryPPN66391437X2v
org.jabref.model.entry.BibEntryTYPEM
Csrc\test\java\org\jabref\logic\importer\fetcher\GvkFetcherTest.java (