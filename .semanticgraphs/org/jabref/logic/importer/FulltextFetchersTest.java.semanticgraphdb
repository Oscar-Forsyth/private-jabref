
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java“	
.org.jabref.logic.importer.FulltextFetchersTestCLASSK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (!"$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"§
declarationStringé<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>FulltextFetchersTest"
accesspublic*FulltextFetchersTest2ö
>org.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (2ù
Aorg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java! !( 2ô
=org.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java* *(2°
Eorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java3 3($2ú
@org.jabref.logic.importer.FulltextFetchersTest?entry@22.21:22.26DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (©
>org.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()METHODK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java ("
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">acceptPdfUrls</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>MalformedURLException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*acceptPdfUrls2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java/ (12h
java.util.Set.of(E)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java< (>2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java ( 2∞
[org.jabref.logic.importer.FulltextFetchers.findFullTextPDF(org.jabref.model.entry.BibEntry)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java2 (A2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (2 
uorg.jabref.logic.importer.FulltextFetchers.FulltextFetchers(java.util.Set<org.jabref.logic.importer.FulltextFetcher>)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java' (72¶
Qorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?pdfUrl@26.12:26.18CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java2 (82¶
Qorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?finder@27.24:27.30CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java? (E2¶
Qorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?pdfUrl@26.12:26.18CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java! ('2ß
Rorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?fetcher@28.25:28.32CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java* (12ï
@org.jabref.logic.importer.FulltextFetchersTest?entry@22.21:22.26CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.javaB (G2≠
Qorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?pdfUrl@26.12:26.18DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (2≠
Qorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?finder@27.24:27.30DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (2Æ
Rorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?fetcher@28.25:28.32DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java ( 2®
Lorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?e@27.33:27.34DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java! ("2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (Ÿ
Qorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?pdfUrl@26.12:26.18VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java ("
typeURL"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>URL <mark class="class-field">pdfUrl</mark> = new URL("http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf")*pdfUrl2a
java.net.URLTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (˛
Qorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?finder@27.24:27.30VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java ("
typeFulltextFetcher"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>FulltextFetcher <mark class="class-field">finder</mark> = e -> Optional.of(pdfUrl)*finder2~
)org.jabref.logic.importer.FulltextFetcherTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java/ (12¶
Qorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?pdfUrl@26.12:26.18CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java2 (8ÿ
Rorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?fetcher@28.25:28.32VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java ( "
typeFulltextFetchers"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>FulltextFetchers <mark class="class-field">fetcher</mark> = new FulltextFetchers(Set.of(finder))*fetcher2
*org.jabref.logic.importer.FulltextFetchersTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (2h
java.util.Set.of(E)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java< (>2 
uorg.jabref.logic.importer.FulltextFetchers.FulltextFetchers(java.util.Set<org.jabref.logic.importer.FulltextFetcher>)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java' (72¶
Qorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?finder@27.24:27.30CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java? (E„
Lorg.jabref.logic.importer.FulltextFetchersTest.acceptPdfUrls()?e@27.33:27.34VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java! (""
type"
isFinalfalse"
declarationString e*e2TYPE†
Aorg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()METHODK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java! !( "
isFinalfalse"è
declarationString˘<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">rejectNonPdfUrls</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>MalformedURLException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*rejectNonPdfUrls2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java#/ #(12h
java.util.Set.of(E)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java$< $(>2o
java.util.Optional.empty()CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java& &(#2∞
[org.jabref.logic.importer.FulltextFetchers.findFullTextPDF(org.jabref.model.entry.BibEntry)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java&/ &(>2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java" "(2 
uorg.jabref.logic.importer.FulltextFetchers.FulltextFetchers(java.util.Set<org.jabref.logic.importer.FulltextFetcher>)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java$' $(72©
Torg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?pdfUrl@34.12:34.18CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java#2 #(82©
Torg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?finder@35.24:35.30CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java$? $(E2™
Uorg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?fetcher@36.25:36.32CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java&' &(.2ï
@org.jabref.logic.importer.FulltextFetchersTest?entry@22.21:22.26CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java&? &(D2∞
Torg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?pdfUrl@34.12:34.18DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java" "(2∞
Torg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?finder@35.24:35.30DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java# #(2±
Uorg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?fetcher@36.25:36.32DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java$ $( 2´
Oorg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?e@35.33:35.34DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java#! #("2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java! !(◊
Torg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?pdfUrl@34.12:34.18VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java" "("
typeURL"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>URL <mark class="class-field">pdfUrl</mark> = new URL("https://github.com/JabRef/jabref/blob/master/README.md")*pdfUrl2a
java.net.URLTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java" "(2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java" "(Ñ
Torg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?finder@35.24:35.30VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java# #("
typeFulltextFetcher"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>FulltextFetcher <mark class="class-field">finder</mark> = e -> Optional.of(pdfUrl)*finder2~
)org.jabref.logic.importer.FulltextFetcherTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java# #(2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java#/ #(12©
Torg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?pdfUrl@34.12:34.18CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java#2 #(8ﬁ
Uorg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?fetcher@36.25:36.32VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java$ $( "
typeFulltextFetchers"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>FulltextFetchers <mark class="class-field">fetcher</mark> = new FulltextFetchers(Set.of(finder))*fetcher2
*org.jabref.logic.importer.FulltextFetchersTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java$ $(2h
java.util.Set.of(E)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java$< $(>2 
uorg.jabref.logic.importer.FulltextFetchers.FulltextFetchers(java.util.Set<org.jabref.logic.importer.FulltextFetcher>)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java$' $(72©
Torg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?finder@35.24:35.30CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java$? $(EÊ
Oorg.jabref.logic.importer.FulltextFetchersTest.rejectNonPdfUrls()?e@35.33:35.34VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java#! #(""
type"
isFinalfalse"
declarationString e*e2TYPEû
=org.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()METHODK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java* *("
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">noTrustLevel</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>MalformedURLException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*noTrustLevel2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java,/ ,(12h
java.util.Set.of(E)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java-< -(>2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java/ /( 2∞
[org.jabref.logic.importer.FulltextFetchers.findFullTextPDF(org.jabref.model.entry.BibEntry)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java/2 /(A2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java+ +(2 
uorg.jabref.logic.importer.FulltextFetchers.FulltextFetchers(java.util.Set<org.jabref.logic.importer.FulltextFetcher>)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java-' -(72•
Porg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?pdfUrl@43.12:43.18CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java,2 ,(82•
Porg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?finder@44.24:44.30CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java-? -(E2•
Porg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?pdfUrl@43.12:43.18CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java/! /('2¶
Qorg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?fetcher@45.25:45.32CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java/* /(12ï
@org.jabref.logic.importer.FulltextFetchersTest?entry@22.21:22.26CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java/B /(G2¨
Porg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?pdfUrl@43.12:43.18DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java+ +(2¨
Porg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?finder@44.24:44.30DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java, ,(2≠
Qorg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?fetcher@45.25:45.32DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java- -( 2ß
Korg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?e@44.33:44.34DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java,! ,("2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java* *(ÿ
Porg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?pdfUrl@43.12:43.18VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java+ +("
typeURL"
isFinalfalse"©
declarationStringì<mark class="modifier"> </mark>URL <mark class="class-field">pdfUrl</mark> = new URL("http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf")*pdfUrl2a
java.net.URLTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java+ +(2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java+ +(¸
Porg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?finder@44.24:44.30VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java, ,("
typeFulltextFetcher"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>FulltextFetcher <mark class="class-field">finder</mark> = e -> Optional.of(pdfUrl)*finder2~
)org.jabref.logic.importer.FulltextFetcherTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java, ,(2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java,/ ,(12•
Porg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?pdfUrl@43.12:43.18CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java,2 ,(8÷
Qorg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?fetcher@45.25:45.32VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java- -( "
typeFulltextFetchers"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>FulltextFetchers <mark class="class-field">fetcher</mark> = new FulltextFetchers(Set.of(finder))*fetcher2
*org.jabref.logic.importer.FulltextFetchersTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java- -(2h
java.util.Set.of(E)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java-< -(>2 
uorg.jabref.logic.importer.FulltextFetchers.FulltextFetchers(java.util.Set<org.jabref.logic.importer.FulltextFetcher>)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java-' -(72•
Porg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?finder@44.24:44.30CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java-? -(E‚
Korg.jabref.logic.importer.FulltextFetchersTest.noTrustLevel()?e@44.33:44.34VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java,! ,(""
type"
isFinalfalse"
declarationString e*e2TYPEû.
Eorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()METHODK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java3 3($"
isFinalfalse"◊
declarationString¡<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">higherTrustLevelWins</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*higherTrustLevelWins2é
9org.jabref.logic.importer.FulltextFetcher.getTrustLevel()CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java5 5(%2¨
Worg.jabref.logic.importer.FulltextFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java7 7($2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java7A 7(C2é
9org.jabref.logic.importer.FulltextFetcher.getTrustLevel()CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java: :($2¨
Worg.jabref.logic.importer.FulltextFetcher.findFullText(org.jabref.model.entry.BibEntry)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java< <(#2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java<@ <(B2k
java.util.Set.of(E, E)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java>< >(>2≥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.javaA A(2m
java.util.Optional.of(T)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.javaC C( 2∞
[org.jabref.logic.importer.FulltextFetchers.findFullTextPDF(org.jabref.model.entry.BibEntry)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.javaC3 C(B2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java6  6(#2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java; ;("2 
uorg.jabref.logic.importer.FulltextFetchers.FulltextFetchers(java.util.Set<org.jabref.logic.importer.FulltextFetcher>)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java>' >(72±
\org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderHigh@52.24:52.34CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java5 5(2±
\org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderHigh@52.24:52.34CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java7 7(2ï
@org.jabref.logic.importer.FulltextFetchersTest?entry@22.21:22.26CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java7% 7(*2Æ
Yorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?highUrl@54.18:54.25CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java7D 7(K2∞
[org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderLow@57.24:57.33CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java: :(2∞
[org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderLow@57.24:57.33CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java< <(2ï
@org.jabref.logic.importer.FulltextFetchersTest?entry@22.21:22.26CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java<$ <()2≠
Xorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?lowUrl@59.18:59.24CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java<C <(I2∞
[org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderLow@57.24:57.33CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java>? >(H2±
\org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderHigh@52.24:52.34CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java>J >(T2ï
@org.jabref.logic.importer.FulltextFetchersTest?entry@22.21:22.26CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.javaA A(2Æ
Yorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?highUrl@54.18:54.25CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.javaC! C((2Æ
Yorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?fetcher@62.25:62.32CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.javaC+ C(22ï
@org.jabref.logic.importer.FulltextFetchersTest?entry@22.21:22.26CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.javaCC C(H2∏
\org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderHigh@52.24:52.34DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java4 4("2µ
Yorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?highUrl@54.18:54.25DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java6 6(2∑
[org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderLow@57.24:57.33DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java9 9(!2¥
Xorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?lowUrl@59.18:59.24DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java; ;(2µ
Yorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?fetcher@62.25:62.32DECLARATIONK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java> >( 2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java3 3(¸
\org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderHigh@52.24:52.34VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java4 4(""
typeFulltextFetcher"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>FulltextFetcher <mark class="class-field">finderHigh</mark> = mock(FulltextFetcher.class)*
finderHigh2~
)org.jabref.logic.importer.FulltextFetcherTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java4 4(É
Yorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?highUrl@54.18:54.25VALUEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java6 6("
typeURL"
isFinaltrue"Œ
declarationString∏<mark class="modifier"> </mark><mark class="modifier">final </mark>URL <mark class="class-field">highUrl</mark> = new URL("http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf")*highUrl2a
java.net.URLTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java6 6(2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java6  6(#˘
[org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderLow@57.24:57.33VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java9 9(!"
typeFulltextFetcher"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>FulltextFetcher <mark class="class-field">finderLow</mark> = mock(FulltextFetcher.class)*	finderLow2~
)org.jabref.logic.importer.FulltextFetcherTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java9 9(å
Xorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?lowUrl@59.18:59.24VALUEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java; ;("
typeURL"
isFinaltrue"Ÿ
declarationString√<mark class="modifier"> </mark><mark class="modifier">final </mark>URL <mark class="class-field">lowUrl</mark> = new URL("http://docs.oasis-open.org/opencsa/sca-bpel/sca-bpel-1.1-spec-cd-01.pdf")*lowUrl2a
java.net.URLTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java; ;(2w
"java.net.URL.URL(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java; ;("∞	
Yorg.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?fetcher@62.25:62.32VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java> >( "
typeFulltextFetchers"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>FulltextFetchers <mark class="class-field">fetcher</mark> = new FulltextFetchers(Set.of(finderLow, finderHigh))*fetcher2
*org.jabref.logic.importer.FulltextFetchersTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java> >(2k
java.util.Set.of(E, E)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java>< >(>2 
uorg.jabref.logic.importer.FulltextFetchers.FulltextFetchers(java.util.Set<org.jabref.logic.importer.FulltextFetcher>)CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java>' >(72∞
[org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderLow@57.24:57.33CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java>? >(H2±
\org.jabref.logic.importer.FulltextFetchersTest.higherTrustLevelWins()?finderHigh@52.24:52.34CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java>J >(Tﬂ
@org.jabref.logic.importer.FulltextFetchersTest?entry@22.21:22.26VARIABLEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java ("
isFinalfalse"
typeBibEntry"|
declarationStringg<mark class="modifier">private </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry();"
isStaticfalse"
accessprivate*entry2t
org.jabref.model.entry.BibEntryTYPEK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java (2
*org.jabref.model.entry.BibEntry.BibEntry()CALLK
Asrc\test\java\org\jabref\logic\importer\FulltextFetchersTest.java! ()