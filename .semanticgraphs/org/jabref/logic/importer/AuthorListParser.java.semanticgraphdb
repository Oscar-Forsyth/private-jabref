
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‚
*org.jabref.logic.importer.AuthorListParserCLASSG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java ("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"n
declarationStringY<mark class="modifier">public </mark><mark class="modifier">class </mark>AuthorListParser"
accesspublic*AuthorListParser2›
Ñorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaA! A(/2ö
Borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java` `(2ê
6org.jabref.logic.importer.AuthorListParser.getAuthor()DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≤ ≤(&2À
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË Ë(2è
5org.jabref.logic.importer.AuthorListParser.getToken()DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaì ì(2®
Porg.jabref.logic.importer.AuthorListParser?AVOID_TERMS_IN_LOWER_CASE@19.37:19.62DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java% (>2°
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (/2õ
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java ()2†
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_ABBR@27.29:27.46DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (.2†
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_TERM@29.29:29.46DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (.2ò
@org.jabref.logic.importer.AuthorListParser?TEX_NAMES@32.37:32.46DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java %  (.2ó
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java% %(2ô
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java) )(2ó
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java- -(2õ
Corg.jabref.logic.importer.AuthorListParser?tokenAbbrEnd@50.16:50.28DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java2 2(2ò
@org.jabref.logic.importer.AuthorListParser?tokenTerm@54.17:54.26DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java6 6(2ò
@org.jabref.logic.importer.AuthorListParser?tokenCase@58.20:58.29DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java: :(2ä
0org.jabref.logic.importer.AuthorListParser.TokenDECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÊ Ê(∏9
Ñorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)METHODG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaA! A(/"
isFinalfalse"ò
declarationStringÇ<mark class="modifier">private </mark><mark class="modifier">static </mark>StringBuilder <mark class="method">buildWithAffix</mark>(Collection&lt;Integer&gt; indexArray<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; nameList)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStringBuilder*buildWithAffix2f
java.util.List.size()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaE% E()2Ä
/java.util.Collection.contains(java.lang.Object)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaF F(#2Å
0java.lang.StringBuilder.append(java.lang.String)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaH H($2h
java.util.List.get(int)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaH. H(12u
$java.lang.StringBuilder.append(char)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaI I($2Å
0java.lang.StringBuilder.append(java.lang.String)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaL L($2h
java.util.List.get(int)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaL. L(12u
$java.lang.StringBuilder.append(char)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaO" O((2u
$java.lang.StringBuilder.append(char)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaS" S((2x
'java.lang.StringBuilder.StringBuilder()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaB* B(72‰
íorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?i@69.17:69.18CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaE E(2ﬂ
çorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)!nameListCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaE E($2‰
íorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?i@69.17:69.18CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaE- E(.2·
èorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)!indexArrayCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaF F(2‰
íorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?i@69.17:69.18CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaF$ F(%2
ûorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?stringBuilder@66.22:66.35CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaH H(2ﬂ
çorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)!nameListCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaH% H(-2‰
íorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?i@69.17:69.18CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaH2 H(32
ûorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?stringBuilder@66.22:66.35CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaI I(2Ô
ùorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?avoidedTimes@68.12:68.24CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaJ J(2
ûorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?stringBuilder@66.22:66.35CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaL L(2ﬂ
çorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)!nameListCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaL% L(-2‰
íorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?i@69.17:69.18CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaL2 L(32‰
íorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?i@69.17:69.18CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaM M(2Ô
ùorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?avoidedTimes@68.12:68.24CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaM M(&2
ûorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?stringBuilder@66.22:66.35CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaO O(!2
ûorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?stringBuilder@66.22:66.35CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaS S(!2
ûorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?stringBuilder@66.22:66.35CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaW W(2Ê
èorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)!indexArray	PARAMETERG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaAD A(N2‰
çorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)!nameList	PARAMETERG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaA] A(e2˜
ûorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?stringBuilder@66.22:66.35DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaB B(#2ˆ
ùorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?avoidedTimes@68.12:68.24DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaD D(2Î
íorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?i@69.17:69.18DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaE E(2o
java.lang.StringBuilderRETURN_TYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaA A( ô
ûorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?stringBuilder@66.22:66.35VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaB B(#"
typeStringBuilder"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>StringBuilder <mark class="class-field">stringBuilder</mark> = new StringBuilder()*stringBuilder2h
java.lang.StringBuilderTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaB B(2x
'java.lang.StringBuilder.StringBuilder()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaB* B(7Ä
ùorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?avoidedTimes@68.12:68.24VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaD D("
typeint"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">avoidedTimes</mark> = 0*avoidedTimes2T
intTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaD D(ﬁ
íorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)?i@69.17:69.18VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaE E("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2T
intTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaE E(™
èorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)!indexArray	PARAMETERG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaAD A(N"
typeCollection<Integer>"
isFinalfalse"3
declarationStringCollection<Integer> indexArray*
indexArray2e
java.util.CollectionTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaA0 A(:2k
java.lang.IntegerTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaA; A(Bè
çorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)!nameList	PARAMETERG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaA] A(e"
typeList<String>"
isFinalfalse"*
declarationStringList<String> nameList*nameList2_
java.util.ListTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaAP A(T2j
java.lang.StringTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaAU A([€~
Borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)METHODG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java` `("
isFinalfalse"z
declarationStringe<mark class="modifier">public </mark>AuthorList <mark class="method">parse</mark>(String listOfNames)"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
AuthorList*parse2t
#java.util.Objects.requireNonNull(T)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaa a(2h
java.lang.String.trim()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javae" e(&2´
Zorg.jabref.model.strings.StringUtil.endsWithIgnoreCase(java.lang.String, java.lang.String)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javah h()2≠
\org.jabref.model.strings.StringUtil.removeStringAtTheEnd(java.lang.String, java.lang.String)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaj% j(92Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaqR q(Z2
.java.lang.String.toUpperCase(java.util.Locale)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaq6 q(A2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javar? r(G2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javas< s(D2j
java.lang.String.length()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javatC t(I2j
java.lang.String.length()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javatk t(q2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javatZ t(a2n
java.util.Arrays.asList(T...)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javav0 v(62y
(java.lang.String.split(java.lang.String)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javavC v(H2è
>java.util.List.replaceAll(java.util.function.UnaryOperator<E>)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javay y($2p
java.util.stream.Stream.count()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java}4 }(92ò
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|= |(C2n
java.util.Collection.stream()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|4 |(:2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|Q |(Y2f
java.util.List.size()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java}M }(Q2õ
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÉ* É(12h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaâ4 â(82h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaç2 ç(62{
(java.util.Set.contains(java.lang.Object)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaé2 é(:2Å
.java.lang.String.toLowerCase(java.util.Locale)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaéP é([2j
java.util.List.get(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaéI é(L2n
java.util.Collection.add(E)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaè# è(&2u
"java.lang.StringBuilder.toString()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañL ñ(T2ÿ
Ñorg.jabref.logic.importer.AuthorListParser.buildWithAffix(java.util.Collection<java.lang.Integer>, java.util.List<java.lang.String>)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ" ñ(02l
java.lang.String.length()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¢% ¢(+2ó
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java£ £(!2â
6org.jabref.logic.importer.AuthorListParser.getAuthor()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java£ £(2h
java.util.List.add(E)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaß ß(2¶
Sorg.jabref.model.entry.AuthorList.of(java.util.List<org.jabref.model.entry.Author>)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java™ ™(2n
java.util.HashSet.HashSet()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaã5 ã(>2u
"java.util.ArrayList.ArrayList(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java°# °(.2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaa a(*2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javae e(2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javae e(!2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javah* h(52±
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?andOthersSuffix@102.21:102.36CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javah7 h(F2≤
aorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?andOthersPresent@103.22:103.38CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javai i(2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaj j(2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaj: j(E2≤
aorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?andOthersPresent@103.22:103.38CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javal l(2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaq* q(52ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javar3 r(>2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javas0 s(;2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javat7 t(B2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javatN t(Y2≥
borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainAND@113.22:113.39CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javau u(2º
korg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainOpeningBrace@114.22:114.48CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javau# u(=2π
horg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainSemicolon@115.22:115.45CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javauB u(Y2ø
norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainTwoOrMoreCommas@116.22:116.51CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javau] u(z2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javav7 v(B2Ø
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javay y(2Ø
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|& |(32¶
Uorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?name@124.68:124.72CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|L |(P2Ø
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java}? }(L2≥
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?spaceInAllParts@124.20:124.35CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ Ç(2°
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÉ É(2°
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÉ É()2±
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaâ& â(32•
Rorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?i@141.25:141.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaç  ç(!2±
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaç$ ç(12•
Rorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?i@141.25:141.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaç: ç(;2£
Porg.jabref.logic.importer.AuthorListParser?AVOID_TERMS_IN_LOWER_CASE@19.37:19.62CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaé é(12±
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaé; é(H2•
Rorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?i@141.25:141.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaéM é(N2Æ
[org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?avoidIndex@139.36:139.46CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaè è("2•
Rorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?i@141.25:141.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaè' è((2≥
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?valuePartsCount@137.20:137.35CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaê ê('2≥
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?valuePartsCount@137.20:137.35CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaî î($2°
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ(2Æ
[org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?avoidIndex@139.36:139.46CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ1 ñ(;2±
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ= ñ(J2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaú ú(2°
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaú ú(2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaù ù(2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaû û(2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¢ ¢(2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¢ ¢($2¥
aorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?andOthersPresent@103.22:103.38CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¶ ¶(2´
Xorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authors@161.21:161.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaß ß(2´
Xorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authors@161.21:161.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java™ ™($2h
java.lang.String.trim()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javay% y(12h
java.util.List.add(E)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java£" £(.2§
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNames	PARAMETERG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java`# `(.2∏
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?andOthersSuffix@102.21:102.36DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaf f($2π
aorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?andOthersPresent@103.22:103.38DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javag g(&2∫
borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainAND@113.22:113.39DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaq q('2√
korg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainOpeningBrace@114.22:114.48DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javar r(02¿
horg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainSemicolon@115.22:115.45DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javas s(-2∆
norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainTwoOrMoreCommas@116.22:116.51DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javat t(32∂
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javav v(&2∏
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?spaceInAllParts@124.20:124.35DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java| |(#2∫
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?valuePartsCount@137.20:137.35DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaâ â(#2µ
[org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?avoidIndex@139.36:139.46DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaã$ ã(.2¨
Rorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?i@141.25:141.26DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaç ç(2≤
Xorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authors@161.21:161.28DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java° °(2≠
Uorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?name@124.68:124.72DECLARATIONG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|D |(H2y
!org.jabref.model.entry.AuthorListRETURN_TYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java` `(Í
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?andOthersSuffix@102.21:102.36VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaf f($"
typeString"
isFinaltrue"†
declarationStringä<mark class="modifier"> </mark><mark class="modifier">final </mark>String <mark class="class-field">andOthersSuffix</mark> = " and others"*andOthersSuffix2a
java.lang.StringTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaf f(Ù
aorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?andOthersPresent@103.22:103.38VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javag g(&"
typeboolean"
isFinaltrue"∞
declarationStringö<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">boolean</mark> <mark class="class-field">andOthersPresent</mark>*andOthersPresent2X
booleanTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javag g(€
borg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainAND@113.22:113.39VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaq q('"
typeboolean"
isFinaltrue"Ì
declarationString◊<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">boolean</mark> <mark class="class-field">authorsContainAND</mark> = listOfNames.toUpperCase(Locale.ENGLISH).contains(" AND ")*authorsContainAND2X
booleanTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaq q(2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaqR q(Z2
.java.lang.String.toUpperCase(java.util.Locale)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaq6 q(A2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaq* q(5’
korg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainOpeningBrace@114.22:114.48VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javar r(0"
typeboolean"
isFinaltrue"÷
declarationString¿<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">boolean</mark> <mark class="class-field">authorsContainOpeningBrace</mark> = listOfNames.contains("{")*authorsContainOpeningBrace2X
booleanTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javar r(2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javar? r(G2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javar3 r(>Ã
horg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainSemicolon@115.22:115.45VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javas s(-"
typeboolean"
isFinaltrue"”
declarationStringΩ<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">boolean</mark> <mark class="class-field">authorsContainSemicolon</mark> = listOfNames.contains(";")*authorsContainSemicolon2X
booleanTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javas s(2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javas< s(D2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javas0 s(;’

norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authorsContainTwoOrMoreCommas@116.22:116.51VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javat t(3"
typeboolean"
isFinaltrue"ø
declarationString©<mark class="modifier"> </mark><mark class="modifier">final </mark><mark class="modifier">boolean</mark> <mark class="class-field">authorsContainTwoOrMoreCommas</mark> = (listOfNames.length() - listOfNames.replace("<mark class="modifier">,</mark>"<mark class="modifier">,</mark> "").length()) >= 2*authorsContainTwoOrMoreCommas2X
booleanTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javat t(2j
java.lang.String.length()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javatC t(I2j
java.lang.String.length()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javatk t(q2ô
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javatZ t(a2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javat7 t(B2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javatN t(Y˝
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javav v(&"
typeList<String>"
isFinalfalse"∂
declarationString†<mark class="modifier"> </mark>List<String> <mark class="class-field">arrayNameList</mark> = Arrays.asList(listOfNames.split("<mark class="modifier">,</mark>"))*arrayNameList2_
java.util.ListTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javav v(2j
java.lang.StringTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javav v(2n
java.util.Arrays.asList(T...)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javav0 v(62y
(java.lang.String.split(java.lang.String)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javavC v(H2ü
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNamesCALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javav7 v(B§
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?spaceInAllParts@124.20:124.35VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java| |(#"
typeboolean"
isFinalfalse"Á
declarationString—<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">spaceInAllParts</mark> = arrayNameList.stream().filter(name -> name.contains(" ")).count() == arrayNameList.size()*spaceInAllParts2X
booleanTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java| |(2p
java.util.stream.Stream.count()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java}4 }(92ò
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|= |(C2n
java.util.Collection.stream()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|4 |(:2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|Q |(Y2f
java.util.List.size()CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java}M }(Q2Ø
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|& |(32¶
Uorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?name@124.68:124.72CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|L |(P2Ø
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java}? }(L˛
`org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?valuePartsCount@137.20:137.35VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaâ â(#"
typeint"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">valuePartsCount</mark> = arrayNameList.size()*valuePartsCount2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaâ â(2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaâ4 â(82±
^org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?arrayNameList@118.25:118.38CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaâ& â(3Ω
[org.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?avoidIndex@139.36:139.46VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaã$ ã(."
typeCollection<Integer>"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark>Collection<Integer> <mark class="class-field">avoidIndex</mark> = new HashSet<>()*
avoidIndex2g
java.util.CollectionTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaã ã(2m
java.lang.IntegerTYPE_ARGUMENTI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaã ã("2n
java.util.HashSet.HashSet()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaã5 ã(>°
Rorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?i@141.25:141.26VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaç ç("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaç ç(µ
Xorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?authors@161.21:161.28VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java° °("
typeList<Author>"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>List<Author> <mark class="class-field">authors</mark> = new ArrayList<>(5)*authors2a
java.util.ListTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java° °(2y
org.jabref.model.entry.AuthorTYPE_ARGUMENTI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java° °(2u
"java.util.ArrayList.ArrayList(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java°# °(.ﬂ
Norg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)!listOfNames	PARAMETERG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java`# `(."
typeString"
isFinalfalse"'
declarationStringString listOfNames*listOfNames2a
java.lang.StringTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java` `("Ó
Uorg.jabref.logic.importer.AuthorListParser.parse(java.lang.String)?name@124.68:124.72VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java|D |(H"
type"
isFinalfalse"
declarationString name*name2TYPEˇü
6org.jabref.logic.importer.AuthorListParser.getAuthor()METHODI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≤ ≤(&"
isFinalfalse"y
declarationStringd<mark class="modifier">private </mark>Optional&lt;Author&gt; <mark class="method">getAuthor</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeOptional<Author>*	getAuthor2à
5org.jabref.logic.importer.AuthorListParser.getToken()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaº º("2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaƒ, ƒ(02h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∆- ∆(12h
java.util.List.add(E)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   (2w
$java.lang.String.substring(int, int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (  (12h
java.util.List.add(E)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ À(2w
$java.lang.String.substring(int, int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ( À(12h
java.util.List.add(E)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ Ã(2h
java.util.List.add(E)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ Õ(2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷< ÷(@2|
)java.lang.Object.equals(java.lang.Object)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊Z ◊(`2j
java.util.List.get(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊C ◊(F2|
)java.lang.Object.equals(java.lang.Object)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java›R ›(X2j
java.util.List.get(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java›? ›(B2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‚. ‚(22h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÊ+ Ê(/2k
java.util.List.isEmpty()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÒ Ò(2m
java.util.Optional.empty()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÚ Ú(!2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÄ% Ä()2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÅ' Å(+2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ$ Ç((2j
java.util.List.get(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÑ6 Ñ(92h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaè) è(-2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaì( ì(,2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaù" ù(&2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java 7  (C2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ7 À(C2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ3 Ã(?2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ5 Õ(A2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ1 Œ(=2|
)java.lang.String.equals(java.lang.Object)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java–B –(H2Å
.java.lang.String.toUpperCase(java.util.Locale)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java–R –(]2l
java.lang.String.length()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java–y –(2|
)java.lang.Character.UnicodeScript.of(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java—, —(.2o
java.lang.String.charAt(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java—8 —(>2k
java.util.Optional.of(T)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java’ ’(2k
java.util.Optional.of(T)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊ ◊(2r
java.util.ArrayList.ArrayList()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≥" ≥(-2—
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java’# ’()2—
~org.jabref.model.entry.Author.Author(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊# ◊()2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?continueLoop@186.16:186.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaª ª(2ù
Jorg.jabref.logic.importer.AuthorListParser.getAuthor()?token@188.18:188.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaΩ Ω(2á
4org.jabref.logic.importer.AuthorListParser.Token?EOFCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaæ æ(2á
4org.jabref.logic.importer.AuthorListParser.Token?ANDCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaø ø(2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?continueLoop@186.16:186.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¿ ¿( 2â
6org.jabref.logic.importer.AuthorListParser.Token?COMMACALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¬ ¬(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java√ √("2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaƒ ƒ("2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaƒ% ƒ(+2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?commaSecond@183.12:183.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≈ ≈(*2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?commaSecond@183.12:183.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∆ ∆(#2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∆& ∆(,2à
5org.jabref.logic.importer.AuthorListParser.Token?WORDCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java… …(2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   (2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   ('2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java 2  (<2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java >  (F2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ À(2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ À('2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ2 À(<2ñ
Corg.jabref.logic.importer.AuthorListParser?tokenAbbrEnd@50.16:50.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ> À(J2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ Ã(2ì
@org.jabref.logic.importer.AuthorListParser?tokenTerm@54.17:54.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ Ã((2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ Õ(2ì
@org.jabref.logic.importer.AuthorListParser?tokenCase@58.20:58.29CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ Õ((2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ Œ("2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?lastStart@181.12:181.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java— —(!2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?vonStart@180.12:180.20CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‘ ‘( 2ì
@org.jabref.logic.importer.AuthorListParser?tokenCase@58.20:58.29CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java’ ’(&2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷5 ÷(;2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷E ÷(W2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷Z ÷(l2ú
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_TERM@29.29:29.46CALLJ
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷p ÷(Å2©
Vorg.jabref.logic.importer.AuthorListParser.getAuthor()?previousTermToken@214.32:214.49CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊! ◊(22û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊< ◊(B2©
Vorg.jabref.logic.importer.AuthorListParser.getAuthor()?previousTermToken@214.32:214.49CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊G ◊(X2©
Vorg.jabref.logic.importer.AuthorListParser.getAuthor()?previousTermToken@214.32:214.49CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‹0 ‹(A2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‹D ‹(V2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?thisTermToken@220.32:220.45CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java›! ›(.2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java›8 ›(>2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?thisTermToken@220.32:220.45CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java›C ›(P2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?vonStart@180.12:180.20CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‚ ‚($2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‚' ‚(-2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‚7 ‚(I2ì
@org.jabref.logic.importer.AuthorListParser?tokenCase@58.20:58.29CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÂ Â((2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?lastStart@181.12:181.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÊ Ê(!2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÊ$ Ê(*2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÊ4 Ê(F2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÒ Ò(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˛ ˛(2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?vonStart@180.12:180.20CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaˇ ˇ(2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÄ Ä(2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÄ Ä($2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÅ Å(2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÅ  Å(&2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÅ0 Å(B2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ Ç(#2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ2 Ç(D2õ
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_TERM@29.29:29.46CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇI Ç(Z2ù
Jorg.jabref.logic.importer.AuthorListParser.getAuthor()?index@258.20:258.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÉ É(2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÑ/ Ñ(52ù
Jorg.jabref.logic.importer.AuthorListParser.getAuthor()?index@258.20:258.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÑ: Ñ(?2ö
Gorg.jabref.logic.importer.AuthorListParser.getAuthor()?ch@260.30:260.32CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÖ Ö(2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÜ Ü(%2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÜ) Ü(;2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaâ â(2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaâ â(,2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaä ä( 2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaã ã("2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?lastStart@181.12:181.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaé é(2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaè è(2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaè" è((2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaê ê(!2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?lastStart@181.12:181.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaê$ ê(-2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaë ë(2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaë! ë(.2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaì ì(2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaì! ì('2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaï ï(2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?vonStart@180.12:180.20CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaï ï('2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ(2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ(+2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaó ó( 2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaò ò("2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaù ù(2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaù ù(!2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?commaSecond@183.12:183.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaû û(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java† †(2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java†! †(-2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java° °("2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java°% °(/2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?commaSecond@183.12:183.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java• •(2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java•" •(.2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¶ ¶("2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?commaSecond@183.12:183.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¶% ¶(02°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartEnd@253.12:253.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java® ®(2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?commaSecond@183.12:183.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java® ®('2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java© ©(2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartEnd@253.12:253.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java©! ©(*2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartStart@249.12:249.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java™ ™(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java™" ™(,2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?vonStart@180.12:180.20CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≠ ≠(2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?lastStart@181.12:181.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÆ Æ(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaØ Ø(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaØ! Ø(+2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java± ±(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java±" ±(,2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≤ ≤(!2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?lastStart@181.12:181.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≤$ ≤(-2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≥ ≥(2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≥! ≥(.2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaµ µ(2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∑ ∑(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∑ ∑((2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∏ ∏(2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaπ π(!2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaæ æ(2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaæ' æ(42§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaæ@ æ(L2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java√ √(2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java√ √((2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaƒ ƒ(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaƒ ƒ($2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≈ ≈(2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∆ ∆(2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   ()2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java D  (J2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java L  (Z2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java \  (h2ñ
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java j  (v2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ À()2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀD À(J2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀL À(Z2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ\ À(h2õ
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_ABBR@27.29:27.46CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀj À({2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ Ã(%2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ@ Ã(F2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃH Ã(T2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃV Ã(`2ñ
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃb Ã(n2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ Õ('2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕB Õ(H2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕJ Õ(W2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕY Õ(d2ñ
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕf Õ(r2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartStart@249.12:249.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ Œ(#2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ> Œ(D2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartStart@249.12:249.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒF Œ(Q2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartEnd@253.12:253.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒS Œ(\2ñ
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ^ Œ(j2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPart@330.15:330.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java– –(2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java–$ –(,2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java–9 –(A2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java–I –(Q2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java–p –(x2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java—/ —(72†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java’* ’(22†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java’4 ’(<2ü
Lorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPart@332.15:332.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java’> ’(E2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPart@330.15:330.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java’G ’(P2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPart@334.15:334.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java’R ’(X2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPart@330.15:330.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊* ◊(32°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?firstAbbr@331.15:331.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊5 ◊(>2ü
Lorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPart@332.15:332.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊@ ◊(G2†
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊I ◊(Q2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPart@334.15:334.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java◊S ◊(Y2•
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≥ ≥(2ß
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?vonStart@180.12:180.20DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¥ ¥(2®
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?lastStart@181.12:181.21DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaµ µ(2©
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∂ ∂(2™
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?commaSecond@183.12:183.23DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∑ ∑(2´
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?continueLoop@186.16:186.28DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∫ ∫(2§
Jorg.jabref.logic.importer.AuthorListParser.getAuthor()?token@188.18:188.23DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaº º(2∞
Vorg.jabref.logic.importer.AuthorListParser.getAuthor()?previousTermToken@214.32:214.49DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷  ÷(12¨
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?thisTermToken@220.32:220.45DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‹  ‹(-2≠
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaˆ ˆ(2´
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˜ ˜(2¨
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¯ ¯(2™
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartStart@249.12:249.23DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˘ ˘(2´
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˙ ˙(2©
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˚ ˚(2™
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¸ ¸(2®
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartEnd@253.12:253.21DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˝ ˝(2§
Jorg.jabref.logic.importer.AuthorListParser.getAuthor()?index@258.20:258.25DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ Ç(2°
Gorg.jabref.logic.importer.AuthorListParser.getAuthor()?ch@260.30:260.32DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÑ Ñ( 2®
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPart@330.15:330.24DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   (2®
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?firstAbbr@331.15:331.24DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ À(2¶
Lorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPart@332.15:332.22DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ Ã(2ß
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ Õ(2•
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPart@334.15:334.21DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ Œ(2l
java.util.OptionalRETURN_TYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≤ ≤(2Ä
org.jabref.model.entry.AuthorRETURN_TYPE_ARGUMENTI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≤ ≤(ï
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≥ ≥("
typeList<Object>"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>List<Object> <mark class="class-field">tokens</mark> = new ArrayList<>()*tokens2a
java.util.ListTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≥ ≥(2l
java.lang.ObjectTYPE_ARGUMENTI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≥ ≥(2r
java.util.ArrayList.ArrayList()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≥" ≥(-¨
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?vonStart@180.12:180.20VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¥ ¥("
typeint"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">vonStart</mark> = -1*vonStart2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¥ ¥(Ø
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?lastStart@181.12:181.21VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaµ µ("
typeint"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">lastStart</mark> = -1*	lastStart2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaµ µ(≤
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?commaFirst@182.12:182.22VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∂ ∂("
typeint"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">commaFirst</mark> = -1*
commaFirst2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∂ ∂(µ
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?commaSecond@183.12:183.23VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∑ ∑("
typeint"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">commaSecond</mark> = -1*commaSecond2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∑ ∑(∆
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?continueLoop@186.16:186.28VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∫ ∫("
typeboolean"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">continueLoop</mark> = true*continueLoop2Z
booleanTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∫ ∫(…
Jorg.jabref.logic.importer.AuthorListParser.getAuthor()?token@188.18:188.23VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaº º("
typeToken"
isFinalfalse"m
declarationStringX<mark class="modifier"> </mark>Token <mark class="class-field">token</mark> = getToken()*token2É
0org.jabref.logic.importer.AuthorListParser.TokenTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaº º(2à
5org.jabref.logic.importer.AuthorListParser.getToken()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaº º("˚	
Vorg.jabref.logic.importer.AuthorListParser.getAuthor()?previousTermToken@214.32:214.49VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷  ÷(1"
typeint"
isFinalfalse"Ÿ
declarationString√<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">previousTermToken</mark> = (tokens.size() - TOKEN_GROUP_LENGTH - TOKEN_GROUP_LENGTH) + OFFSET_TOKEN_TERM*previousTermToken2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷ ÷(2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷< ÷(@2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷5 ÷(;2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷E ÷(W2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷Z ÷(l2ú
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_TERM@29.29:29.46CALLJ
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷p ÷(Å´
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?thisTermToken@220.32:220.45VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‹  ‹(-"
typeint"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">thisTermToken</mark> = previousTermToken + TOKEN_GROUP_LENGTH*thisTermToken2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‹ ‹(2©
Vorg.jabref.logic.importer.AuthorListParser.getAuthor()?previousTermToken@214.32:214.49CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‹0 ‹(A2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‹D ‹(Væ
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaˆ ˆ("
typeint"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">firstPartStart</mark> = -1*firstPartStart2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaˆ ˆ(∏
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˜ ˜("
typeint"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">vonPartStart</mark> = -1*vonPartStart2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˜ ˜(ª
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¯ ¯("
typeint"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">lastPartStart</mark> = -1*lastPartStart2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¯ ¯(µ
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartStart@249.12:249.23VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˘ ˘("
typeint"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">jrPartStart</mark> = -1*jrPartStart2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˘ ˘(≥
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˙ ˙("
typeint"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">firstPartEnd</mark>*firstPartEnd2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˙ ˙(±
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˚ ˚("
typeint"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">vonPartEnd</mark> = 0*
vonPartEnd2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˚ ˚(¥
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¸ ¸("
typeint"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">lastPartEnd</mark> = 0*lastPartEnd2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¸ ¸(Æ
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartEnd@253.12:253.21VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˝ ˝("
typeint"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">jrPartEnd</mark> = 0*	jrPartEnd2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java˝ ˝(®
Jorg.jabref.logic.importer.AuthorListParser.getAuthor()?index@258.20:258.25VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ Ç("
typeint"
isFinalfalse"æ
declarationString®<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">index</mark> = (tokens.size() - (2 * TOKEN_GROUP_LENGTH)) + OFFSET_TOKEN_TERM*index2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ Ç(2h
java.util.List.size()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ$ Ç((2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ Ç(#2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇ2 Ç(D2õ
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_TERM@29.29:29.46CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÇI Ç(Z‡
Gorg.jabref.logic.importer.AuthorListParser.getAuthor()?ch@260.30:260.32VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÑ Ñ( "
type	Character"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>Character <mark class="class-field">ch</mark> = (Character) tokens.get(index)*ch2f
java.lang.CharacterTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÑ Ñ(2j
java.util.List.get(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÑ6 Ñ(92û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÑ/ Ñ(52ù
Jorg.jabref.logic.importer.AuthorListParser.getAuthor()?index@258.20:258.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÑ: Ñ(?º
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPart@330.15:330.24VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   ("
typeString"
isFinalfalse"à
declarationStringÚ<mark class="modifier"> </mark>String <mark class="class-field">firstPart</mark> = firstPartStart < 0 ? <mark class="modifier">null</mark> : concatTokens(tokens, firstPartStart, firstPartEnd, OFFSET_TOKEN, <mark class="modifier">false</mark>)*	firstPart2c
java.lang.StringTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   (2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java 7  (C2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   ()2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java D  (J2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java L  (Z2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java \  (h2ñ
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java j  (vß
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?firstAbbr@331.15:331.24VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ À("
typeString"
isFinalfalse"Ó
declarationStringÿ<mark class="modifier"> </mark>String <mark class="class-field">firstAbbr</mark> = firstPartStart < 0 ? <mark class="modifier">null</mark> : concatTokens(tokens, firstPartStart, firstPartEnd, OFFSET_TOKEN_ABBR, true)*	firstAbbr2c
java.lang.StringTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ À(2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ7 À(C2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ À()2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀD À(J2¶
Sorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartStart@246.12:246.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀL À(Z2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?firstPartEnd@250.12:250.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ\ À(h2õ
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_ABBR@27.29:27.46CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀj À({™
Lorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPart@332.15:332.22VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ Ã("
typeString"
isFinalfalse"Ä
declarationStringÍ<mark class="modifier"> </mark>String <mark class="class-field">vonPart</mark> = vonPartStart < 0 ? <mark class="modifier">null</mark> : concatTokens(tokens, vonPartStart, vonPartEnd, OFFSET_TOKEN, <mark class="modifier">false</mark>)*vonPart2c
java.lang.StringTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ Ã(2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ3 Ã(?2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ Ã(%2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃ@ Ã(F2§
Qorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartStart@247.12:247.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃH Ã(T2¢
Oorg.jabref.logic.importer.AuthorListParser.getAuthor()?vonPartEnd@251.12:251.22CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃV Ã(`2ñ
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÃb Ã(n≥
Morg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPart@333.15:333.23VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ Õ("
typeString"
isFinalfalse"Ñ
declarationStringÓ<mark class="modifier"> </mark>String <mark class="class-field">lastPart</mark> = lastPartStart < 0 ? <mark class="modifier">null</mark> : concatTokens(tokens, lastPartStart, lastPartEnd, OFFSET_TOKEN, <mark class="modifier">false</mark>)*lastPart2c
java.lang.StringTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ Õ(2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ5 Õ(A2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕ Õ('2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕB Õ(H2•
Rorg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartStart@248.12:248.25CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕJ Õ(W2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?lastPartEnd@252.12:252.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕY Õ(d2ñ
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÕf Õ(r°
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPart@334.15:334.21VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ Œ("
typeString"
isFinalfalse"¸
declarationStringÊ<mark class="modifier"> </mark>String <mark class="class-field">jrPart</mark> = jrPartStart < 0 ? <mark class="modifier">null</mark> : concatTokens(tokens, jrPartStart, jrPartEnd, OFFSET_TOKEN, <mark class="modifier">false</mark>)*jrPart2c
java.lang.StringTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ Œ(2ƒ
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ1 Œ(=2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartStart@249.12:249.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ Œ(#2û
Korg.jabref.logic.importer.AuthorListParser.getAuthor()?tokens@179.21:179.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ> Œ(D2£
Porg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartStart@249.12:249.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒF Œ(Q2°
Norg.jabref.logic.importer.AuthorListParser.getAuthor()?jrPartEnd@253.12:253.21CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒS Œ(\2ñ
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ^ Œ(j¶C
qorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)METHODI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË Ë("
isFinalfalse"†
declarationStringä<mark class="modifier">private </mark>String <mark class="method">concatTokens</mark>(List&lt;Object&gt; tokens<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> start<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> end<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> offset<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> dotAfter)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*concatTokens2É
0java.lang.StringBuilder.append(java.lang.String)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÎ Î(2j
java.util.List.get(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÎ& Î()2w
$java.lang.StringBuilder.append(char)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÌ Ì(2É
0java.lang.StringBuilder.append(java.lang.Object)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÒ Ò(2j
java.util.List.get(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÒ! Ò($2É
0java.lang.StringBuilder.append(java.lang.String)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÚ Ú(2j
java.util.List.get(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÚ* Ú(-2w
$java.lang.StringBuilder.append(char)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÙ Ù(2u
"java.lang.StringBuilder.toString()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¯ ¯(2z
'java.lang.StringBuilder.StringBuilder()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÈ# È(02⁄
Üorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?result@361.22:361.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÎ Î(2À
xorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!tokensCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÎ Î(%2 
worg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!startCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÎ* Î(/2À
xorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!offsetCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÎ2 Î(82Õ
zorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!dotAfterCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÏ Ï(2⁄
Üorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?result@361.22:361.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÌ Ì(2 
worg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!startCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÔ Ô( 2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÔ# Ô(52‡
åorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?updatedStart@367.12:367.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (2»
uorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!endCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (!2⁄
Üorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?result@361.22:361.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÒ Ò(2À
xorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!tokensCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÒ Ò( 2‡
åorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?updatedStart@367.12:367.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÒ& Ò(22ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÒ5 Ò(G2õ
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_TERM@29.29:29.46CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÒK Ò(\2⁄
Üorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?result@361.22:361.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÚ Ú(2À
xorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!tokensCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÚ# Ú()2‡
åorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?updatedStart@367.12:367.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÚ. Ú(:2À
xorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!offsetCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÚ= Ú(C2Õ
zorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!dotAfterCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÛ Û(2⁄
Üorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?result@361.22:361.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÙ Ù(2‡
åorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?updatedStart@367.12:367.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaˆ ˆ(2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaˆ ˆ(.2⁄
Üorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?result@361.22:361.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¯ ¯(2–
xorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!tokens	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË- Ë(32œ
worg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!start	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË9 Ë(>2Õ
uorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!end	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaËD Ë(G2–
xorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!offset	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaËM Ë(S2“
zorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!dotAfter	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË] Ë(e2·
Üorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?result@361.22:361.28DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÈ È(2Á
åorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?updatedStart@367.12:367.24DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÔ Ô(2j
java.lang.StringRETURN_TYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË Ë(¯
Üorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?result@361.22:361.28VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÈ È("
typeStringBuilder"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>StringBuilder <mark class="class-field">result</mark> = new StringBuilder()*result2j
java.lang.StringBuilderTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÈ È(2z
'java.lang.StringBuilder.StringBuilder()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÈ# È(0˘
åorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)?updatedStart@367.12:367.24VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÔ Ô("
typeint"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">updatedStart</mark> = start + TOKEN_GROUP_LENGTH*updatedStart2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÔ Ô(2 
worg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!startCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÔ Ô( 2ú
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÔ# Ô(5˚
xorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!tokens	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË- Ë(3"
typeList<Object>"
isFinalfalse"(
declarationStringList<Object> tokens*tokens2a
java.util.ListTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË  Ë($2l
java.lang.ObjectTYPE_ARGUMENTI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË% Ë(+ã
worg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!start	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË9 Ë(>"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> start*start2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË5 Ë(8Ö
uorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!end	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaËD Ë(G"
typeint"
isFinalfalse":
declarationString%<mark class="modifier">int</mark> end*end2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË@ Ë(Cé
xorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!offset	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaËM Ë(S"
typeint"
isFinalfalse"=
declarationString(<mark class="modifier">int</mark> offset*offset2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaËI Ë(L†
zorg.jabref.logic.importer.AuthorListParser.concatTokens(java.util.List<java.lang.Object>, int, int, int, boolean)!dotAfter	PARAMETERI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË] Ë(e"
typeboolean"
isFinalfalse"C
declarationString.<mark class="modifier">boolean</mark> dotAfter*dotAfter2Z
booleanTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaËU Ë(\ﬁÇ
5org.jabref.logic.importer.AuthorListParser.getToken()METHODI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaì ì("
isFinalfalse"g
declarationStringR<mark class="modifier">private </mark>Token <mark class="method">getToken</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeToken*getToken2l
java.lang.String.length()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaï% ï(+2o
java.lang.String.charAt(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ($2y
&java.lang.Character.isWhitespace(char)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaó8 ó(D2l
java.lang.String.length()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaù# ù()2o
java.lang.String.charAt(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java† †(2o
java.lang.String.charAt(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java• •(2l
java.lang.String.length()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaØ# Ø()2o
java.lang.String.charAt(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∞ ∞($2u
"java.lang.Character.isLetter(char)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaªK ª(S2x
%java.lang.Character.isUpperCase(char)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaΩ* Ω(52|
)java.lang.Character.UnicodeScript.of(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaΩU Ω(W2u
"java.lang.Character.isLetter(char)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∆6 ∆(>2w
$java.lang.String.substring(int, int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java»1 »(:2{
(java.util.Set.contains(java.lang.Object)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java…" …(*2x
%java.lang.Character.isUpperCase(char)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java .  (92o
java.lang.String.charAt(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java E  (K2p
java.lang.String.indexOf(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java”. ”(52y
&java.lang.Character.isWhitespace(char)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java”M ”(Y2l
java.lang.String.length()CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java€! €('2o
java.lang.String.charAt(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java€8 €(>2Ü
3java.lang.String.equalsIgnoreCase(java.lang.String)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaﬁ ﬁ("2w
$java.lang.String.substring(int, int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaﬁ, ﬁ(52î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaî î(2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaî î(2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaï ï(2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaï ï($2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ(2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ% ñ(/2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@406.17:406.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaó ó(2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@406.17:406.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaó! ó("2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@406.17:406.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaóE ó(F2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaö ö(2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaú ú(2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaú ú(2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaù ù(2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaù ù("2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java† †(2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java† †(&2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java° °(2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java• •(2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java• •(&2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¶ ¶(2ñ
Corg.jabref.logic.importer.AuthorListParser?tokenAbbrEnd@50.16:50.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java© ©(2ì
@org.jabref.logic.importer.AuthorListParser?tokenTerm@54.17:54.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java™ ™(2ì
@org.jabref.logic.importer.AuthorListParser?tokenCase@58.20:58.29CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java´ ´(2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaØ Ø(2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaØ Ø("2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∞ ∞(2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∞% ∞(-2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java± ±(2¢
Oorg.jabref.logic.importer.AuthorListParser.getToken()?bracesLevel@428.12:428.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≤ ≤(2©
Vorg.jabref.logic.importer.AuthorListParser.getToken()?firstLetterIsFound@430.16:430.34CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaµ µ("2ñ
Corg.jabref.logic.importer.AuthorListParser?tokenAbbrEnd@50.16:50.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaµ' µ(32¢
Oorg.jabref.logic.importer.AuthorListParser.getToken()?bracesLevel@428.12:428.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaµ> µ(I2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaµT µ(U2ñ
Corg.jabref.logic.importer.AuthorListParser?tokenAbbrEnd@50.16:50.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∂ ∂(2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∂ ∂('2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∏ ∏(2¢
Oorg.jabref.logic.importer.AuthorListParser.getToken()?bracesLevel@428.12:428.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∏ ∏(*2¢
Oorg.jabref.logic.importer.AuthorListParser.getToken()?bracesLevel@428.12:428.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaπ π(2©
Vorg.jabref.logic.importer.AuthorListParser.getToken()?firstLetterIsFound@430.16:430.34CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaª ª(#2ß
Torg.jabref.logic.importer.AuthorListParser.getToken()?currentBackslash@429.12:429.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaª( ª(82ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaªT ª(U2¢
Oorg.jabref.logic.importer.AuthorListParser.getToken()?bracesLevel@428.12:428.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaº º(2ì
@org.jabref.logic.importer.AuthorListParser?tokenCase@58.20:58.29CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaΩ Ω(2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaΩ6 Ω(72ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaΩX Ω(Y2ì
@org.jabref.logic.importer.AuthorListParser?tokenCase@58.20:58.29CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¬ ¬(2©
Vorg.jabref.logic.importer.AuthorListParser.getToken()?firstLetterIsFound@430.16:430.34CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaƒ ƒ("2ß
Torg.jabref.logic.importer.AuthorListParser.getToken()?currentBackslash@429.12:429.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∆ ∆(!2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∆? ∆(@2©
Vorg.jabref.logic.importer.AuthorListParser.getToken()?firstLetterIsFound@430.16:430.34CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java« «('2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java»( »(02ß
Torg.jabref.logic.importer.AuthorListParser.getToken()?currentBackslash@429.12:429.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java»; »(K2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java»Q »(Y2ì
@org.jabref.logic.importer.AuthorListParser?TEX_NAMES@32.37:32.46CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java… …(!2°
Norg.jabref.logic.importer.AuthorListParser.getToken()?texCmdName@456.27:456.37CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java…+ …(52ì
@org.jabref.logic.importer.AuthorListParser?tokenCase@58.20:58.29CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   (!2°
Norg.jabref.logic.importer.AuthorListParser.getToken()?texCmdName@456.27:456.37CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java :  (D2©
Vorg.jabref.logic.importer.AuthorListParser.getToken()?firstLetterIsFound@430.16:430.34CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÀ À(*2ß
Torg.jabref.logic.importer.AuthorListParser.getToken()?currentBackslash@429.12:429.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŒ Œ( 2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java– –(2ß
Torg.jabref.logic.importer.AuthorListParser.getToken()?currentBackslash@429.12:429.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java— —( 2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java—# —(+2¢
Oorg.jabref.logic.importer.AuthorListParser.getToken()?bracesLevel@428.12:428.23CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java” ”(2ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java”6 ”(72ò
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java”Z ”([2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java÷ ÷(2ñ
Corg.jabref.logic.importer.AuthorListParser?tokenAbbrEnd@50.16:50.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÿ ÿ(2ñ
Corg.jabref.logic.importer.AuthorListParser?tokenAbbrEnd@50.16:50.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŸ Ÿ(2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaŸ Ÿ(#2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java€ €(2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java€ €( 2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java€/ €(72í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java€? €(G2ì
@org.jabref.logic.importer.AuthorListParser?tokenTerm@54.17:54.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java‹ ‹(2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaﬁ# ﬁ(+2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaﬁ6 ﬁ(@2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaﬁB ﬁ(J2á
4org.jabref.logic.importer.AuthorListParser.Token?EOFCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaû û(2â
6org.jabref.logic.importer.AuthorListParser.Token?COMMACALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¢ ¢(2á
4org.jabref.logic.importer.AuthorListParser.Token?ANDCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaß ß(2á
4org.jabref.logic.importer.AuthorListParser.Token?ANDCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaﬂ ﬂ(2à
5org.jabref.logic.importer.AuthorListParser.Token?WORDCALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java· ·(2ü
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@406.17:406.18DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ(2©
Oorg.jabref.logic.importer.AuthorListParser.getToken()?bracesLevel@428.12:428.23DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¨ ¨(2Æ
Torg.jabref.logic.importer.AuthorListParser.getToken()?currentBackslash@429.12:429.28DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≠ ≠(2∞
Vorg.jabref.logic.importer.AuthorListParser.getToken()?firstLetterIsFound@430.16:430.34DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÆ Æ("2ü
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∞ ∞(2®
Norg.jabref.logic.importer.AuthorListParser.getToken()?texCmdName@456.27:456.37DECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java» »(%2ä
0org.jabref.logic.importer.AuthorListParser.TokenRETURN_TYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaì ì(∞
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@406.17:406.18VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ("
typechar"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>char <mark class="class-field">c</mark> = original.charAt(tokenStart)*c2W
charTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ(2o
java.lang.String.charAt(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ($2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ ñ(2î
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javañ% ñ(/≥
Oorg.jabref.logic.importer.AuthorListParser.getToken()?bracesLevel@428.12:428.23VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¨ ¨("
typeint"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">bracesLevel</mark> = 0*bracesLevel2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java¨ ¨(√
Torg.jabref.logic.importer.AuthorListParser.getToken()?currentBackslash@429.12:429.28VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≠ ≠("
typeint"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">currentBackslash</mark> = -1*currentBackslash2V
intTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java≠ ≠(˜
Vorg.jabref.logic.importer.AuthorListParser.getToken()?firstLetterIsFound@430.16:430.34VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÆ Æ(""
typeboolean"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">firstLetterIsFound</mark> = <mark class="modifier">false</mark>*firstLetterIsFound2Z
booleanTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÆ Æ(¨
Eorg.jabref.logic.importer.AuthorListParser.getToken()?c@432.17:432.18VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∞ ∞("
typechar"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>char <mark class="class-field">c</mark> = original.charAt(tokenEnd)*c2W
charTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∞ ∞(2o
java.lang.String.charAt(int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∞ ∞($2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∞ ∞(2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java∞% ∞(-§
Norg.jabref.logic.importer.AuthorListParser.getToken()?texCmdName@456.27:456.37VARIABLEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java» »(%"
typeString"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>String <mark class="class-field">texCmdName</mark> = original.substring(currentBackslash + 1, tokenEnd)*
texCmdName2c
java.lang.StringTYPEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java» »(2w
$java.lang.String.substring(int, int)CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java»1 »(:2í
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java»( »(02ß
Torg.jabref.logic.importer.AuthorListParser.getToken()?currentBackslash@429.12:429.28CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java»; »(K2í
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24CALLI
=src\main\java\org\jabref\logic\importer\AuthorListParser.java»Q »(YÆ
Porg.jabref.logic.importer.AuthorListParser?AVOID_TERMS_IN_LOWER_CASE@19.37:19.62VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java% (>"
isFinaltrue"
typeSet<String>"‹
declarationString∆<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Set<String> <mark class="class-field">AVOID_TERMS_IN_LOWER_CASE</mark> = Set.of("jr"<mark class="modifier">,</mark> "sr"<mark class="modifier">,</mark> "jnr"<mark class="modifier">,</mark> "snr"<mark class="modifier">,</mark> "von"<mark class="modifier">,</mark> "zu"<mark class="modifier">,</mark> "van"<mark class="modifier">,</mark> "der");"
isStatictrue"
accessprivate*AVOID_TERMS_IN_LOWER_CASE2^
java.util.SetTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (2j
java.lang.StringTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (#2y
(java.util.Set.of(E, E, E, E, E, E, E, E)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaE (G™
Iorg.jabref.logic.importer.AuthorListParser?TOKEN_GROUP_LENGTH@22.29:22.47VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (/"
isFinaltrue"
typeint"ﬂ
declarationString…<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">TOKEN_GROUP_LENGTH</mark> = 4;"
isStatictrue"
accessprivate*TOKEN_GROUP_LENGTH2T
intTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (ò
Corg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN@25.29:25.41VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java ()"
isFinaltrue"
typeint"Ÿ
declarationString√<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">OFFSET_TOKEN</mark> = 0;"
isStatictrue"
accessprivate*OFFSET_TOKEN2T
intTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (ß
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_ABBR@27.29:27.46VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (."
isFinaltrue"
typeint"ﬁ
declarationString»<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">OFFSET_TOKEN_ABBR</mark> = 1;"
isStatictrue"
accessprivate*OFFSET_TOKEN_ABBR2T
intTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (ß
Horg.jabref.logic.importer.AuthorListParser?OFFSET_TOKEN_TERM@29.29:29.46VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (."
isFinaltrue"
typeint"ﬁ
declarationString»<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark><mark class="modifier">int</mark> <mark class="class-field">OFFSET_TOKEN_TERM</mark> = 2;"
isStatictrue"
accessprivate*OFFSET_TOKEN_TERM2T
intTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java (Ò
@org.jabref.logic.importer.AuthorListParser?TEX_NAMES@32.37:32.46VALUEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java %  (."
isFinaltrue"
typeSet<String>"—
declarationStringª<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Set<String> <mark class="class-field">TEX_NAMES</mark> = Set.of("aa"<mark class="modifier">,</mark> "ae"<mark class="modifier">,</mark> "l"<mark class="modifier">,</mark> "o"<mark class="modifier">,</mark> "oe"<mark class="modifier">,</mark> "i"<mark class="modifier">,</mark> "AA"<mark class="modifier">,</mark> "AE"<mark class="modifier">,</mark> "L"<mark class="modifier">,</mark> "O"<mark class="modifier">,</mark> "OE"<mark class="modifier">,</mark> "j");"
isStatictrue"
accessprivate*	TEX_NAMES2^
java.util.SetTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   (2j
java.lang.StringTYPE_ARGUMENTG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java   (#2g
java.util.Set.of(E...)CALLG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java 5  (7∂
?org.jabref.logic.importer.AuthorListParser?original@37.19:37.27VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java% %("
isFinalfalse"
typeString"k
declarationStringV<mark class="modifier">private </mark>String <mark class="class-field">original</mark>"
isStaticfalse"
accessprivate*original2a
java.lang.StringTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java% %(à
Aorg.jabref.logic.importer.AuthorListParser?tokenStart@41.16:41.26VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java) )("
isFinalfalse"
typeint"»
declarationString≤<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="class-field">tokenStart</mark> =2
 */
private <mark class="modifier">int</mark> tokenStart;"
isStaticfalse"
accessprivate*
tokenStart2T
intTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java) )(Ä
?org.jabref.logic.importer.AuthorListParser?tokenEnd@45.16:45.24VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java- -("
isFinalfalse"
typeint"ƒ
declarationStringÆ<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="class-field">tokenEnd</mark> =5
 */
private <mark class="modifier">int</mark> tokenEnd;"
isStaticfalse"
accessprivate*tokenEnd2T
intTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java- -(Ê
Corg.jabref.logic.importer.AuthorListParser?tokenAbbrEnd@50.16:50.28VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java2 2("
isFinalfalse"
typeint"¢
declarationStringå<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="class-field">tokenAbbrEnd</mark> = tokenEnd)<mark class="modifier">,</mark> only valid if getToken returns
 * Token.WORD
 */
private <mark class="modifier">int</mark> tokenAbbrEnd;"
isStaticfalse"
accessprivate*tokenAbbrEnd2T
intTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java2 2(©
@org.jabref.logic.importer.AuthorListParser?tokenTerm@54.17:54.26VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java6 6("
isFinalfalse"
typechar"j
declarationStringU<mark class="modifier">private </mark>char <mark class="class-field">tokenTerm</mark>"
isStaticfalse"
accessprivate*	tokenTerm2U
charTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java6 6(—
@org.jabref.logic.importer.AuthorListParser?tokenCase@58.20:58.29VARIABLEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java: :("
isFinalfalse"
typeboolean"ã
declarationStringv<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="class-field">tokenCase</mark>"
isStaticfalse"
accessprivate*	tokenCase2X
booleanTYPEG
=src\main\java\org\jabref\logic\importer\AuthorListParser.java: :(ê
0org.jabref.logic.importer.AuthorListParser.TokenENUMI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÊ Ê("=
declarationString(<mark class="modifier">enum </mark>Token*Token2é
4org.jabref.logic.importer.AuthorListParser.Token?EOFDECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÁ Á(2é
4org.jabref.logic.importer.AuthorListParser.Token?ANDDECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË Ë(2ê
6org.jabref.logic.importer.AuthorListParser.Token?COMMADECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÈ È(2è
5org.jabref.logic.importer.AuthorListParser.Token?WORDDECLARATIONI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÍ Í(õ
4org.jabref.logic.importer.AuthorListParser.Token?EOFVALUEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÁ Á("
enumtrue*EOFõ
4org.jabref.logic.importer.AuthorListParser.Token?ANDVALUEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaË Ë("
enumtrue*ANDü
6org.jabref.logic.importer.AuthorListParser.Token?COMMAVALUEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÈ È("
enumtrue*COMMAù
5org.jabref.logic.importer.AuthorListParser.Token?WORDVALUEI
=src\main\java\org\jabref\logic\importer\AuthorListParser.javaÍ Í("
enumtrue*WORD