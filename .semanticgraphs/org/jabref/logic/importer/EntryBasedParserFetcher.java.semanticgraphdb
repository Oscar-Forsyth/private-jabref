
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaª

1org.jabref.logic.importer.EntryBasedParserFetcherTRAITN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java (("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"≤
declarationStringú<mark class="modifier">public </mark><mark class="modifier">interface </mark>EntryBasedParserFetcher<mark class="modifier"> extends </mark>EntryBasedFetcher"
accesspublic*EntryBasedParserFetcher2¿
aorg.jabref.logic.importer.EntryBasedParserFetcher.getURLForEntry(org.jabref.model.entry.BibEntry)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java (2ú
=org.jabref.logic.importer.EntryBasedParserFetcher.getParser()DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java! !(2ø
`org.jabref.logic.importer.EntryBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java1 1(2ø
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java6 6((2Ö
+org.jabref.logic.importer.EntryBasedFetcherEXTENDN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java1 (BŒ
aorg.jabref.logic.importer.EntryBasedParserFetcher.getURLForEntry(org.jabref.model.entry.BibEntry)METHODN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java ("
isFinalfalse"Í
declarationString‘<mark class="modifier"> </mark>URL <mark class="method">getURLForEntry</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>URISyntaxException<mark class="modifier"><mark class="modifier">,</mark></mark> MalformedURLException<mark class="modifier"><mark class="modifier">,</mark></mark> FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeURL*getURLForEntry2ƒ
gorg.jabref.logic.importer.EntryBasedParserFetcher.getURLForEntry(org.jabref.model.entry.BibEntry)!entry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java  (%2k
java.net.URLRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java (ç
gorg.jabref.logic.importer.EntryBasedParserFetcher.getURLForEntry(org.jabref.model.entry.BibEntry)!entry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java  (%"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2w
org.jabref.model.entry.BibEntryTYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java (Ï
=org.jabref.logic.importer.EntryBasedParserFetcher.getParser()METHODN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java! !("
isFinalfalse"b
declarationStringM<mark class="modifier"> </mark>Parser <mark class="method">getParser</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeParser*	getParser2
 org.jabref.logic.importer.ParserRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java! !(
Í
`org.jabref.logic.importer.EntryBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)METHODN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java1 1("
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">doPostCleanup</mark>(BibEntry entry)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*doPostCleanup2√
forg.jabref.logic.importer.EntryBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java1( 1(-2c
voidRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java1 1(å
forg.jabref.logic.importer.EntryBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)!entry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java1( 1(-"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2w
org.jabref.model.entry.BibEntryTYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java1 1('π2
`org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)METHODN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java6 6(("
isFinalfalse"Ö
declarationStringÔ<mark class="annotation">@Override</mark> <br><mark class="modifier"> </mark>List&lt;BibEntry&gt; <mark class="method">performSearch</mark>(BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>FetcherException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeList<BibEntry>*performSearch2{
#java.util.Objects.requireNonNull(T)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java7 7(2π
aorg.jabref.logic.importer.EntryBasedParserFetcher.getURLForEntry(org.jabref.model.entry.BibEntry)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java; ;(-2y
!java.util.Collections.emptyList()CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java<# <(,2q
java.net.URL.openStream()CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaBF B(P2ö
Borg.jabref.logic.importer.Parser.parseEntries(java.io.InputStream)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaC8 C(D2ï
=org.jabref.logic.importer.EntryBasedParserFetcher.getParser()CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaC, C(52ö
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaF F("2∫
borg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String, java.lang.Throwable)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java? ?(&2ú
Djava.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaB& B(92∫
borg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String, java.lang.Throwable)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaK K(&2∫
borg.jabref.logic.importer.FetcherException.FetcherException(java.lang.String, java.lang.Throwable)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaM M(&2æ
forg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)!entryCALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java7 7($2–
xorg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?UrlForEntry@57.12:57.23CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java; ;(2æ
forg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)!entryCALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java;. ;(32∆
norg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?e@62.60:62.61CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java?B ?(C2–
xorg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?UrlForEntry@57.12:57.23CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaB: B(E2À
sorg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?stream@66.25:66.31CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaCE C(K2”
{org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?fetchedEntries@67.27:67.41CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaF F(2”
{org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?fetchedEntries@67.27:67.41CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaH H(!2∆
norg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?e@73.29:73.30CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaKC K(D2∆
norg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?e@76.32:76.33CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaML M(M2∏
`org.jabref.logic.importer.EntryBasedParserFetcher.doPostCleanup(org.jabref.model.entry.BibEntry)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaF# F(62∂
Zorg.jabref.logic.importer.EntryBasedFetcher.performSearch(org.jabref.model.entry.BibEntry)OVERRIDEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java6 6((2√
forg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)!entry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java62 6(72◊
xorg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?UrlForEntry@57.12:57.23DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java9 9(2“
sorg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?stream@66.25:66.31DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaB B(2⁄
{org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?fetchedEntries@67.27:67.41DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaC C()2Õ
norg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?e@62.60:62.61DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java>< >(=2Õ
norg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?e@73.29:73.30DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaI I(2Õ
norg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?e@76.32:76.33DECLARATIONN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaL  L(!2m
java.util.ListRETURN_TYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java6 6(2á
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java6 6(Ã
xorg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?UrlForEntry@57.12:57.23VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java9 9("
typeURL"
isFinalfalse"d
declarationStringO<mark class="modifier"> </mark>URL <mark class="class-field">UrlForEntry</mark>*UrlForEntry2d
java.net.URLTYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java9 9(Ô
sorg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?stream@66.25:66.31VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaB B("
typeInputStream"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>InputStream <mark class="class-field">stream</mark> = new BufferedInputStream(UrlForEntry.openStream())*stream2k
java.io.InputStreamTYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaB B(2q
java.net.URL.openStream()CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaBF B(P2ú
Djava.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaB& B(92–
xorg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?UrlForEntry@57.12:57.23CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaB: B(Eò	
{org.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?fetchedEntries@67.27:67.41VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaC C()"
typeList<BibEntry>"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">fetchedEntries</mark> = getParser().parseEntries(stream)*fetchedEntries2f
java.util.ListTYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaC C(2Ä
org.jabref.model.entry.BibEntryTYPE_ARGUMENTN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaC C(2ö
Borg.jabref.logic.importer.Parser.parseEntries(java.io.InputStream)CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaC8 C(D2ï
=org.jabref.logic.importer.EntryBasedParserFetcher.getParser()CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaC, C(52À
sorg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?stream@66.25:66.31CALLN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaCE C(Kå
forg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)!entry	PARAMETERN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java62 6(7"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2w
org.jabref.model.entry.BibEntryTYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java6) 6(1Ì
norg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?e@62.60:62.61VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java>< >(="2
type*MalformedURLException | URISyntaxException"
isFinalfalse"A
declarationString,MalformedURLException | URISyntaxException e*e2î
<java.net.MalformedURLException | java.net.URISyntaxExceptionTYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java> >(;Ö
norg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?e@73.29:73.30VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaI I("
typeIOException"
isFinalfalse""
declarationStringIOException e*e2k
java.io.IOExceptionTYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaI I(°
norg.jabref.logic.importer.EntryBasedParserFetcher.performSearch(org.jabref.model.entry.BibEntry)?e@76.32:76.33VARIABLEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaL  L(!"
typeParseException"
isFinalfalse"%
declarationStringParseException e*e2Ä
(org.jabref.logic.importer.ParseExceptionTYPEN
Dsrc\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.javaL L(