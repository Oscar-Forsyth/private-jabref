
9src\test\java\org\jabref\logic\importer\ImporterTest.javaŸ
&org.jabref.logic.importer.ImporterTestCLASSC
9src\test\java\org\jabref\logic\importer\ImporterTest.java& &("$
packageorg.jabref.logic.importer"
isFinalfalse"
inner classfalse"

isAbstractfalse"j
declarationStringU<mark class="modifier">public </mark><mark class="modifier">class </mark>ImporterTest"
accesspublic*ImporterTest2⁄
Öorg.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.java* *(J2—
}org.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForStringThrowsException(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.java0 0(B2÷
Åorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.java6 6(F2Õ
yorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForStringThrowsException(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.java< <(>2¿
lorg.jabref.logic.importer.ImporterTest.getFormatterNameDoesNotReturnNull(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaB B(12ª
gorg.jabref.logic.importer.ImporterTest.getFileTypeDoesNotReturnNull(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaH H(,2µ
aorg.jabref.logic.importer.ImporterTest.getIdDoesNotReturnNull(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaN N(&2º
horg.jabref.logic.importer.ImporterTest.getIdDoesNotContainWhitespace(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaT T(-2—
}org.jabref.logic.importer.ImporterTest.getIdStripsSpecialCharactersAndConvertsToLowercase(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.java[ [(B2æ
jorg.jabref.logic.importer.ImporterTest.getDescriptionDoesNotReturnNull(org.jabref.logic.importer.Importer)DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.javac c(/2å
8org.jabref.logic.importer.ImporterTest.instancesToTest()DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.javag# g(2≥

Öorg.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.java* *(J"
isFinalfalse"è
declarationString˘ <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormatWithNullForBufferedReaderThrowsException</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*:isRecognizedFormatWithNullForBufferedReaderThrowsException2ö
Morg.jabref.logic.importer.Importer.isRecognizedFormat(java.io.BufferedReader)CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java+> +(P2⁄
åorg.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)!formatCALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java+7 +(=2ﬂ
åorg.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java*T *(Z2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java* *(¢
åorg.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java*T *(Z"
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java*K *(SÑ

}org.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForStringThrowsException(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.java0 0(B"
isFinalfalse"á
declarationStringÒ <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">isRecognizedFormatWithNullForStringThrowsException</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*2isRecognizedFormatWithNullForStringThrowsException2î
Gorg.jabref.logic.importer.Importer.isRecognizedFormat(java.lang.String)CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java1> 1(P2“
Ñorg.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForStringThrowsException(org.jabref.logic.importer.Importer)!formatCALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java17 1(=2◊
Ñorg.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForStringThrowsException(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java0L 0(R2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java0 0(ö
Ñorg.jabref.logic.importer.ImporterTest.isRecognizedFormatWithNullForStringThrowsException(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java0L 0(R"
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java0C 0(Kõ

Åorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.java6 6(F"
isFinalfalse"ã
declarationStringı <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importDatabaseWithNullForBufferedReaderThrowsException</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*6importDatabaseWithNullForBufferedReaderThrowsException2ñ
Iorg.jabref.logic.importer.Importer.importDatabase(java.io.BufferedReader)CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java7> 7(L2÷
àorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)!formatCALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java77 7(=2€
àorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java6P 6(V2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java6 6(û
àorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForBufferedReaderThrowsException(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java6P 6(V"
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java6G 6(OÏ	
yorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForStringThrowsException(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.java< <(>"
isFinalfalse"É
declarationStringÌ <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">importDatabaseWithNullForStringThrowsException</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*.importDatabaseWithNullForStringThrowsException2ê
Corg.jabref.logic.importer.Importer.importDatabase(java.lang.String)CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java=> =(L2Œ
Äorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForStringThrowsException(org.jabref.logic.importer.Importer)!formatCALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java=7 =(=2”
Äorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForStringThrowsException(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java<H <(N2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java< <(ñ
Äorg.jabref.logic.importer.ImporterTest.importDatabaseWithNullForStringThrowsException(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java<H <(N"
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java<? <(Gë	
lorg.jabref.logic.importer.ImporterTest.getFormatterNameDoesNotReturnNull(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaB B(1"
isFinalfalse"ˆ
declarationString‡ <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFormatterNameDoesNotReturnNull</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*!getFormatterNameDoesNotReturnNull2y
,org.jabref.logic.importer.Importer.getName()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaC C($2¿
sorg.jabref.logic.importer.ImporterTest.getFormatterNameDoesNotReturnNull(org.jabref.logic.importer.Importer)!formatCALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaC C(2≈
sorg.jabref.logic.importer.ImporterTest.getFormatterNameDoesNotReturnNull(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaB; B(A2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaB B(à
sorg.jabref.logic.importer.ImporterTest.getFormatterNameDoesNotReturnNull(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaB; B(A"
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaB2 B(:¸
gorg.jabref.logic.importer.ImporterTest.getFileTypeDoesNotReturnNull(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaH H(,"
isFinalfalse"Ò
declarationString€ <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getFileTypeDoesNotReturnNull</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getFileTypeDoesNotReturnNull2}
0org.jabref.logic.importer.Importer.getFileType()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaI I((2ª
norg.jabref.logic.importer.ImporterTest.getFileTypeDoesNotReturnNull(org.jabref.logic.importer.Importer)!formatCALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaI I(2¿
norg.jabref.logic.importer.ImporterTest.getFileTypeDoesNotReturnNull(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaH6 H(<2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaH H(É
norg.jabref.logic.importer.ImporterTest.getFileTypeDoesNotReturnNull(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaH6 H(<"
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaH- H(5ÿ
aorg.jabref.logic.importer.ImporterTest.getIdDoesNotReturnNull(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaN N(&"
isFinalfalse"Î
declarationString’ <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getIdDoesNotReturnNull</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getIdDoesNotReturnNull2w
*org.jabref.logic.importer.Importer.getId()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaO O("2µ
horg.jabref.logic.importer.ImporterTest.getIdDoesNotReturnNull(org.jabref.logic.importer.Importer)!formatCALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaO O(2∫
horg.jabref.logic.importer.ImporterTest.getIdDoesNotReturnNull(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaN0 N(62X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaN N(˝
horg.jabref.logic.importer.ImporterTest.getIdDoesNotReturnNull(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaN0 N(6"
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaN' N(/§
horg.jabref.logic.importer.ImporterTest.getIdDoesNotContainWhitespace(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaT T(-"
isFinalfalse"Ú
declarationString‹ <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getIdDoesNotContainWhitespace</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getIdDoesNotContainWhitespace2~
1java.util.regex.Pattern.compile(java.lang.String)CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaU, U(32k
java.util.regex.Matcher.find()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaV> V(B2Ñ
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaV& V(-2w
*org.jabref.logic.importer.Importer.getId()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaV5 V(:2‘
Üorg.jabref.logic.importer.ImporterTest.getIdDoesNotContainWhitespace(org.jabref.logic.importer.Importer)?whitespacePattern@85.16:85.33CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaV V(%2º
oorg.jabref.logic.importer.ImporterTest.getIdDoesNotContainWhitespace(org.jabref.logic.importer.Importer)!formatCALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaV. V(42¡
oorg.jabref.logic.importer.ImporterTest.getIdDoesNotContainWhitespace(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaT7 T(=2€
Üorg.jabref.logic.importer.ImporterTest.getIdDoesNotContainWhitespace(org.jabref.logic.importer.Importer)?whitespacePattern@85.16:85.33DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaU U(!2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaT T(˛
Üorg.jabref.logic.importer.ImporterTest.getIdDoesNotContainWhitespace(org.jabref.logic.importer.Importer)?whitespacePattern@85.16:85.33VARIABLEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaU U(!"
typePattern"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark>Pattern <mark class="class-field">whitespacePattern</mark> = Pattern.compile("\\s")*whitespacePattern2d
java.util.regex.PatternTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaU U(2~
1java.util.regex.Pattern.compile(java.lang.String)CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaU, U(3Ñ
oorg.jabref.logic.importer.ImporterTest.getIdDoesNotContainWhitespace(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaT7 T(="
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaT. T(6º
}org.jabref.logic.importer.ImporterTest.getIdStripsSpecialCharactersAndConvertsToLowercase(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.java[ [(B"
isFinalfalse"á
declarationStringÒ <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getIdStripsSpecialCharactersAndConvertsToLowercase</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*2getIdStripsSpecialCharactersAndConvertsToLowercase2y
,org.jabref.logic.importer.Importer.getName()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java] ](2w
*org.jabref.logic.importer.Importer.getId()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java^. ^(32‡
íorg.jabref.logic.importer.ImporterTest.getIdStripsSpecialCharactersAndConvertsToLowercase(org.jabref.logic.importer.Importer)?importer@92.17:92.25CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java] ](2‡
íorg.jabref.logic.importer.ImporterTest.getIdStripsSpecialCharactersAndConvertsToLowercase(org.jabref.logic.importer.Importer)?importer@92.17:92.25CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java^% ^(-2◊
Ñorg.jabref.logic.importer.ImporterTest.getIdStripsSpecialCharactersAndConvertsToLowercase(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java[L [(R2Á
íorg.jabref.logic.importer.ImporterTest.getIdStripsSpecialCharactersAndConvertsToLowercase(org.jabref.logic.importer.Importer)?importer@92.17:92.25DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.java\ \(2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java[ [(†
íorg.jabref.logic.importer.ImporterTest.getIdStripsSpecialCharactersAndConvertsToLowercase(org.jabref.logic.importer.Importer)?importer@92.17:92.25VARIABLEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java\ \("
typeImporter"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Importer <mark class="class-field">importer</mark> = mock(Importer.class, Mockito.CALLS_REAL_METHODS)*importer2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java\ \(ö
Ñorg.jabref.logic.importer.ImporterTest.getIdStripsSpecialCharactersAndConvertsToLowercase(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.java[L [(R"
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.java[C [(Kè	
jorg.jabref.logic.importer.ImporterTest.getDescriptionDoesNotReturnNull(org.jabref.logic.importer.Importer)METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.javac c(/"
isFinalfalse"Ù
declarationStringﬁ <br><mark class="annotation">@MethodSource("instancesToTest")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">getDescriptionDoesNotReturnNull</mark>(Importer format)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*getDescriptionDoesNotReturnNull2Ä
3org.jabref.logic.importer.Importer.getDescription()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javad d(+2æ
qorg.jabref.logic.importer.ImporterTest.getDescriptionDoesNotReturnNull(org.jabref.logic.importer.Importer)!formatCALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javad d(2√
qorg.jabref.logic.importer.ImporterTest.getDescriptionDoesNotReturnNull(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javac9 c(?2X
voidRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javac c(Ü
qorg.jabref.logic.importer.ImporterTest.getDescriptionDoesNotReturnNull(org.jabref.logic.importer.Importer)!format	PARAMETERC
9src\test\java\org\jabref\logic\importer\ImporterTest.javac9 c(?"
typeImporter"
isFinalfalse"$
declarationStringImporter format*format2o
"org.jabref.logic.importer.ImporterTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javac0 c(8≥!
8org.jabref.logic.importer.ImporterTest.instancesToTest()METHODC
9src\test\java\org\jabref\logic\importer\ImporterTest.javag# g(2"
isFinalfalse"§
declarationStringé<mark class="modifier">public </mark><mark class="modifier">static </mark>Stream&lt;Importer&gt; <mark class="method">instancesToTest</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeStream<Importer>*instancesToTest2m
 java.util.stream.Stream.of(T...)CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javao o(2õ
Norg.jabref.logic.importer.fileformat.BiblioscapeImporter.BiblioscapeImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javap p('2í
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaq@ q(V2è
Borg.jabref.logic.importer.fileformat.CopacImporter.CopacImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javar r(!2ì
Forg.jabref.logic.importer.fileformat.EndnoteImporter.EndnoteImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javas s(#2ë
Dorg.jabref.logic.importer.fileformat.InspecImporter.InspecImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javat t("2ã
>org.jabref.logic.importer.fileformat.IsiImporter.IsiImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javau u(2ì
Forg.jabref.logic.importer.fileformat.MedlineImporter.MedlineImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javav v(#2ù
Porg.jabref.logic.importer.fileformat.MedlinePlainImporter.MedlinePlainImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaw w((2è
Borg.jabref.logic.importer.fileformat.MsBibImporter.MsBibImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javay y(!2ç
@org.jabref.logic.importer.fileformat.OvidImporter.OvidImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaz z( 2ô
Lorg.jabref.logic.importer.fileformat.PdfContentImporter.PdfContentImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java{ {(&2¥
gorg.jabref.logic.importer.fileformat.PdfXmpImporter.PdfXmpImporter(org.jabref.logic.xmp.XmpPreferences)CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java| |("2ã
>org.jabref.logic.importer.fileformat.RisImporter.RisImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java~ ~(2ü
Rorg.jabref.logic.importer.fileformat.SilverPlatterImporter.SilverPlatterImporter()CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java ()2ô
Jorg.jabref.logic.importer.fileformat.CitaviXmlImporter.CitaviXmlImporter()CALLE
9src\test\java\org\jabref\logic\importer\ImporterTest.javaÄ Ä(%2´
^org.jabref.logic.importer.ImporterTest.instancesToTest()?importFormatPreferences@107.32:107.55CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javal l($2´
^org.jabref.logic.importer.ImporterTest.instancesToTest()?importFormatPreferences@107.32:107.55CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javaq# q(:2´
^org.jabref.logic.importer.ImporterTest.instancesToTest()?importFormatPreferences@107.32:107.55CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.javax! x(82¢
Uorg.jabref.logic.importer.ImporterTest.instancesToTest()?xmpPreferences@109.23:109.37CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java|# |(12´
^org.jabref.logic.importer.ImporterTest.instancesToTest()?importFormatPreferences@107.32:107.55CALLC
9src\test\java\org\jabref\logic\importer\ImporterTest.java}% }(<2≤
^org.jabref.logic.importer.ImporterTest.instancesToTest()?importFormatPreferences@107.32:107.55DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.javak  k(72©
Uorg.jabref.logic.importer.ImporterTest.instancesToTest()?xmpPreferences@109.23:109.37DECLARATIONC
9src\test\java\org\jabref\logic\importer\ImporterTest.javam m(%2k
java.util.stream.StreamRETURN_TYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javag g(2
"org.jabref.logic.importer.ImporterRETURN_TYPE_ARGUMENTC
9src\test\java\org\jabref\logic\importer\ImporterTest.javag g(!´
^org.jabref.logic.importer.ImporterTest.instancesToTest()?importFormatPreferences@107.32:107.55VARIABLEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javak  k(7"
typeImportFormatPreferences"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark> = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS)*importFormatPreferences2d
ImportFormatPreferencesTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javak k(‰
Uorg.jabref.logic.importer.ImporterTest.instancesToTest()?xmpPreferences@109.23:109.37VARIABLEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javam m(%"
typeXmpPreferences"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>XmpPreferences <mark class="class-field">xmpPreferences</mark> = mock(XmpPreferences.class)*xmpPreferences2p
#org.jabref.logic.xmp.XmpPreferencesTYPEC
9src\test\java\org\jabref\logic\importer\ImporterTest.javam m(