
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaä	
1org.jabref.logic.importer.util.MetaDataParserTestCLASSN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java (")
packageorg.jabref.logic.importer.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"p
declarationString[<mark class="modifier">public </mark><mark class="modifier">class </mark>MetaDataParserTest"
accesspublic*MetaDataParserTest2√
dorg.jabref.logic.importer.util.MetaDataParserTest.parseDirectory(java.lang.String, java.lang.String)DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java&	 &(2´
Lorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType()DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java-$ -(<2Ë
àorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType(org.jabref.model.entry.BibEntryTypeBuilder, java.lang.String)DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java@	 @(!2û
?org.jabref.logic.importer.util.MetaDataParserTest.saveActions()DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaE E(˚
dorg.jabref.logic.importer.util.MetaDataParserTest.parseDirectory(java.lang.String, java.lang.String)METHODN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java&	 &("
isFinalfalse"ï
declarationStringˇ <br><mark class="annotation">@CsvSource({</mark> "C:\\temp\\test<mark class="modifier"><mark class="modifier">,</mark></mark>                 C:\\temp\\test"<mark class="modifier"><mark class="modifier">,</mark></mark> "\\\\servername\\path\\to\\file<mark class="modifier"><mark class="modifier">,</mark></mark> \\\\\\\\servername\\\\path\\\\to\\\\file"<mark class="modifier"><mark class="modifier">,</mark></mark> "\\\\servername\\path\\to\\file<mark class="modifier"><mark class="modifier">,</mark></mark> \\\\servername\\path\\to\\file"<mark class="modifier"><mark class="modifier">,</mark></mark> "//servername/path/to/file<mark class="modifier"><mark class="modifier">,</mark></mark>      //servername/path/to/file"<mark class="modifier"><mark class="modifier">,</mark></mark> ".\\pdfs<mark class="modifier"><mark class="modifier">,</mark></mark>                        .\\pdfs<mark class="modifier"><mark class="modifier">,</mark></mark>"<mark class="modifier"><mark class="modifier">,</mark></mark> ".\\pdfs<mark class="modifier"><mark class="modifier">,</mark></mark>                        .\\\\pdfs<mark class="modifier"><mark class="modifier">,</mark></mark>"<mark class="modifier"><mark class="modifier">,</mark></mark> ".<mark class="modifier"><mark class="modifier">,</mark></mark>                              ." }) <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseDirectory</mark>(String expected<mark class="modifier"><mark class="modifier">,</mark></mark> String input)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseDirectory2¶
Norg.jabref.logic.importer.util.MetaDataParser.parseDirectory(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java'. '(<2≈
morg.jabref.logic.importer.util.MetaDataParserTest.parseDirectory(java.lang.String, java.lang.String)!expectedCALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java' '(2¬
jorg.jabref.logic.importer.util.MetaDataParserTest.parseDirectory(java.lang.String, java.lang.String)!inputCALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java'= '(B2 
morg.jabref.logic.importer.util.MetaDataParserTest.parseDirectory(java.lang.String, java.lang.String)!expected	PARAMETERN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java& &('2«
jorg.jabref.logic.importer.util.MetaDataParserTest.parseDirectory(java.lang.String, java.lang.String)!input	PARAMETERN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java&0 &(52c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java& &(Ü
morg.jabref.logic.importer.util.MetaDataParserTest.parseDirectory(java.lang.String, java.lang.String)!expected	PARAMETERN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java& &('"
typeString"
isFinalfalse"$
declarationStringString expected*expected2h
java.lang.StringTYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java& &(˝
jorg.jabref.logic.importer.util.MetaDataParserTest.parseDirectory(java.lang.String, java.lang.String)!input	PARAMETERN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java&0 &(5"
typeString"
isFinalfalse"!
declarationStringString input*input2h
java.lang.StringTYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java&) &(/Û
Lorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType()METHODN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java-$ -(<"
isFinalfalse"Æ
declarationStringò<mark class="modifier">public </mark><mark class="modifier">static </mark>Stream&lt;Arguments&gt; <mark class="method">parseCustomizedEntryType</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeStream<Arguments>*parseCustomizedEntryType2º
dorg.jabref.model.entry.BibEntryTypeBuilder.withRequiredFields(org.jabref.model.entry.field.Field...)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java2! 2(32≥
[org.jabref.model.entry.BibEntryTypeBuilder.withType(org.jabref.model.entry.types.EntryType)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java1! 1()2£
Korg.jabref.model.entry.field.UnknownField.fromDisplayName(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java2A 2(P2£
Korg.jabref.model.entry.field.UnknownField.fromDisplayName(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java2h 2(w2º
dorg.jabref.model.entry.BibEntryTypeBuilder.withRequiredFields(org.jabref.model.entry.field.Field...)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java8! 8(32≥
[org.jabref.model.entry.BibEntryTypeBuilder.withType(org.jabref.model.entry.types.EntryType)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java7! 7()2£
Korg.jabref.model.entry.field.UnknownField.fromDisplayName(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java8A 8(P2£
Korg.jabref.model.entry.field.UnknownField.fromDisplayName(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java8g 8(v2ò
@org.jabref.model.entry.BibEntryTypeBuilder.BibEntryTypeBuilder()CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java0 0(/2®
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java1. 1(>2ò
@org.jabref.model.entry.BibEntryTypeBuilder.BibEntryTypeBuilder()CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java6 6(/2®
Porg.jabref.model.entry.types.UnknownEntryType.UnknownEntryType(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java7. 7(>2v
java.util.stream.StreamRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java- -(2ì
+org.junit.jupiter.params.provider.ArgumentsRETURN_TYPE_ARGUMENTN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java- -("‹
àorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType(org.jabref.model.entry.BibEntryTypeBuilder, java.lang.String)METHODN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java@	 @(!"
isFinalfalse"¨
declarationStringñ <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">parseCustomizedEntryType</mark>(BibEntryTypeBuilder expected<mark class="modifier"><mark class="modifier">,</mark></mark> String source)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*parseCustomizedEntryType2p
java.util.Optional.of(T)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaA A( 2ä
2org.jabref.model.entry.BibEntryTypeBuilder.build()CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaA* A(/2¨
Torg.jabref.logic.importer.util.MetaDataParser.parseCustomEntryType(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaAC A(W2Í
ëorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType(org.jabref.model.entry.BibEntryTypeBuilder, java.lang.String)!expectedCALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaA! A()2Ë
èorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType(org.jabref.model.entry.BibEntryTypeBuilder, java.lang.String)!sourceCALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaAX A(^2Ô
ëorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType(org.jabref.model.entry.BibEntryTypeBuilder, java.lang.String)!expected	PARAMETERN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java@6 @(>2Ì
èorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType(org.jabref.model.entry.BibEntryTypeBuilder, java.lang.String)!source	PARAMETERN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java@G @(M2c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java@ @(‡
ëorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType(org.jabref.model.entry.BibEntryTypeBuilder, java.lang.String)!expected	PARAMETERN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java@6 @(>"
typeBibEntryTypeBuilder"
isFinalfalse"1
declarationStringBibEntryTypeBuilder expected*expected2Ç
*org.jabref.model.entry.BibEntryTypeBuilderTYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java@" @(5•
èorg.jabref.logic.importer.util.MetaDataParserTest.parseCustomizedEntryType(org.jabref.model.entry.BibEntryTypeBuilder, java.lang.String)!source	PARAMETERN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java@G @(M"
typeString"
isFinalfalse""
declarationStringString source*source2h
java.lang.StringTYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.java@@ @(FÆ#
?org.jabref.logic.importer.util.MetaDataParserTest.saveActions()METHODN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaE E("
isFinalfalse"˛
declarationStringË<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">saveActions</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*saveActions2n
java.util.Map.of(K, V)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaF' F()2¯
üorg.jabref.logic.importer.util.MetaDataParser.parse(org.jabref.model.metadata.MetaData, java.util.Map<java.lang.String, java.lang.String>, java.lang.Character)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH) H(.2l
java.util.List.of(E)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaK^ K(`2∫
borg.jabref.model.metadata.MetaData.setSaveActions(org.jabref.logic.cleanup.FieldFormatterCleanups)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaL L(2Ω
eorg.jabref.logic.importer.util.MetaDataParser.MetaDataParser(org.jabref.model.util.FileUpdateMonitor)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaG, G(:2ù
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaG? G(U2Ö
-org.jabref.model.metadata.MetaData.MetaData()CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH3 H(;2Ö
-org.jabref.model.metadata.MetaData.MetaData()CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaJ  J((2Ë
èorg.jabref.logic.cleanup.FieldFormatterCleanups.FieldFormatterCleanups(boolean, java.util.List<org.jabref.logic.cleanup.FieldFormatterCleanup>)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaK< K(R2Â
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaKe K(z2®
Norg.jabref.logic.formatter.casechanger.LowerCaseFormatter.LowerCaseFormatter()CALLP
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaKî K(¶2≤
Zorg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?metaDataParser@71.23:71.37CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH H((2®
Porg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?data@70.28:70.32CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH? H(C2¨
Torg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?expected@74.17:74.25CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaL L(2∫
borg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?fieldFormatterCleanups@75.31:75.53CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaL  L(62¨
Torg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?expected@74.17:74.25CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaM M(2™
Rorg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?parsed@72.17:72.23CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaM M(%2Ø
Porg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?data@70.28:70.32DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaF F( 2π
Zorg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?metaDataParser@71.23:71.37DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaG G(%2±
Rorg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?parsed@72.17:72.23DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH H(2≥
Torg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?expected@74.17:74.25DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaJ J(2¡
borg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?fieldFormatterCleanups@75.31:75.53DECLARATIONN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaK K(52c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaE E(‚
Porg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?data@70.28:70.32VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaF F( "
typeMap<String, String>"
isFinalfalse"¡
declarationString´<mark class="modifier"> </mark>Map<String, String> <mark class="class-field">data</mark> = Map.of("saveActions"<mark class="modifier">,</mark> "enabled;title[lower_case]")*data2e
java.util.MapTYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaF F(2q
java.lang.StringTYPE_ARGUMENTN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaF F(2q
java.lang.StringTYPE_ARGUMENTN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaF F(2n
java.util.Map.of(K, V)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaF' F()Å
Zorg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?metaDataParser@71.23:71.37VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaG G(%"
typeMetaDataParser"
isFinalfalse"¶
declarationStringê<mark class="modifier"> </mark>MetaDataParser <mark class="class-field">metaDataParser</mark> = new MetaDataParser(new DummyFileUpdateMonitor())*metaDataParser2Ö
-org.jabref.logic.importer.util.MetaDataParserTYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaG G(2Ω
eorg.jabref.logic.importer.util.MetaDataParser.MetaDataParser(org.jabref.model.util.FileUpdateMonitor)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaG, G(:2ù
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaG? G(Uè

Rorg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?parsed@72.17:72.23VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH H("
typeMetaData"
isFinalfalse"”
declarationStringΩ<mark class="modifier"> </mark>MetaData <mark class="class-field">parsed</mark> = metaDataParser.parse(new MetaData()<mark class="modifier">,</mark> data, '<mark class="modifier">,</mark>')*parsed2z
"org.jabref.model.metadata.MetaDataTYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH H(2¯
üorg.jabref.logic.importer.util.MetaDataParser.parse(org.jabref.model.metadata.MetaData, java.util.Map<java.lang.String, java.lang.String>, java.lang.Character)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH) H(.2Ö
-org.jabref.model.metadata.MetaData.MetaData()CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH3 H(;2≤
Zorg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?metaDataParser@71.23:71.37CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH H((2®
Porg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?data@70.28:70.32CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaH? H(C€
Torg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?expected@74.17:74.25VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaJ J("
typeMetaData"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>MetaData <mark class="class-field">expected</mark> = new MetaData()*expected2z
"org.jabref.model.metadata.MetaDataTYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaJ J(2Ö
-org.jabref.model.metadata.MetaData.MetaData()CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaJ  J((˙

borg.jabref.logic.importer.util.MetaDataParserTest.saveActions()?fieldFormatterCleanups@75.31:75.53VARIABLEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaK K(5"
typeFieldFormatterCleanups"
isFinalfalse"˘
declarationString„<mark class="modifier"> </mark>FieldFormatterCleanups <mark class="class-field">fieldFormatterCleanups</mark> = new FieldFormatterCleanups(true, List.of(new FieldFormatterCleanup(StandardField.TITLE, new LowerCaseFormatter())))*fieldFormatterCleanups2á
/org.jabref.logic.cleanup.FieldFormatterCleanupsTYPEN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaK K(2l
java.util.List.of(E)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaK^ K(`2Ë
èorg.jabref.logic.cleanup.FieldFormatterCleanups.FieldFormatterCleanups(boolean, java.util.List<org.jabref.logic.cleanup.FieldFormatterCleanup>)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaK< K(R2Â
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLN
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaKe K(z2®
Norg.jabref.logic.formatter.casechanger.LowerCaseFormatter.LowerCaseFormatter()CALLP
Dsrc\test\java\org\jabref\logic\importer\util\MetaDataParserTest.javaKî K(¶