
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java‹	
-org.jabref.logic.importer.util.JsonReaderTestCLASSJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java (")
packageorg.jabref.logic.importer.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"f
declarationStringQ<mark class="modifier"> </mark><mark class="modifier">class </mark>JsonReaderTest"
accesspackage_private*JsonReaderTest2Ø
Torg.jabref.logic.importer.util.JsonReaderTest.nullStreamThrowsNullPointerException()DECLARATIONJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java	 (-2´
Porg.jabref.logic.importer.util.JsonReaderTest.invalidJsonThrowsParserException()DECLARATIONJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java	 ()2™
Oorg.jabref.logic.importer.util.JsonReaderTest.emptyStringResultsInEmptyObject()DECLARATIONJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java	 ((2•
Jorg.jabref.logic.importer.util.JsonReaderTest.arrayThrowsParserException()DECLARATIONJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java#	 #(#2ß
Lorg.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()DECLARATIONJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java+	 +(%˝
Torg.jabref.logic.importer.util.JsonReaderTest.nullStreamThrowsNullPointerException()METHODJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java	 (-"
isFinalfalse"ƒ
declarationStringÆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">nullStreamThrowsNullPointerException</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$nullStreamThrowsNullPointerException2ü
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java (#2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java (Ú
Porg.jabref.logic.importer.util.JsonReaderTest.invalidJsonThrowsParserException()METHODJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java	 ()"
isFinalfalse"¿
declarationString™<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">invalidJsonThrowsParserException</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* invalidJsonThrowsParserException2ü
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java (#2o
java.lang.String.getBytes()CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.javaL (T2ç
9java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java( (<2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java (µ
Oorg.jabref.logic.importer.util.JsonReaderTest.emptyStringResultsInEmptyObject()METHODJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java	 (("
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">emptyStringResultsInEmptyObject</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*emptyStringResultsInEmptyObject2ü
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java' (32o
java.lang.String.getBytes()CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.javaP (X2ç
9java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java8 (L2∂
borg.jabref.logic.importer.util.JsonReaderTest.emptyStringResultsInEmptyObject()?result@30.19:30.25CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java (!2Ω
borg.jabref.logic.importer.util.JsonReaderTest.emptyStringResultsInEmptyObject()?result@30.19:30.25DECLARATIONJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java (2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java (™
borg.jabref.logic.importer.util.JsonReaderTest.emptyStringResultsInEmptyObject()?result@30.19:30.25VARIABLEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java ("
type
JSONObject"
isFinalfalse"™
declarationStringî<mark class="modifier"> </mark>JSONObject <mark class="class-field">result</mark> = JsonReader.toJsonObject(new ByteArrayInputStream("".getBytes()))*result2p
kong.unirest.json.JSONObjectTYPEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java (2ü
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java' (32o
java.lang.String.getBytes()CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.javaP (X2ç
9java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java8 (L‡
Jorg.jabref.logic.importer.util.JsonReaderTest.arrayThrowsParserException()METHODJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java#	 #(#"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">arrayThrowsParserException</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*arrayThrowsParserException2ü
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java& &(#2o
java.lang.String.getBytes()CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java&B &(J2ç
9java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java&( &(<2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java# #(Ã
Lorg.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()METHODJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java+	 +(%"
isFinalfalse"â
declarationStringÛ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">exampleJsonResultsInSameJson</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*exampleJsonResultsInSameJson2ü
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java-' -(32o
java.lang.String.getBytes()CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java-S -([2ç
9java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java-8 -(L2≤
^org.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()?input@44.15:44.20CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java-M -(R2≤
^org.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()?input@44.15:44.20CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java. .(2≥
_org.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()?result@45.19:45.25CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java. .("2π
^org.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()?input@44.15:44.20DECLARATIONJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java, ,(2∫
_org.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()?result@45.19:45.25DECLARATIONJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java- -(2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java+ +(¿
^org.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()?input@44.15:44.20VARIABLEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java, ,("
typeString"
isFinalfalse"y
declarationStringd<mark class="modifier"> </mark>String <mark class="class-field">input</mark> = "{\"name\":\"test\"}"*input2d
java.lang.StringTYPEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java, ,(ﬂ
_org.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()?result@45.19:45.25VARIABLEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java- -("
type
JSONObject"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>JSONObject <mark class="class-field">result</mark> = JsonReader.toJsonObject(new ByteArrayInputStream(input.getBytes()))*result2p
kong.unirest.json.JSONObjectTYPEJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java- -(2ü
Korg.jabref.logic.importer.util.JsonReader.toJsonObject(java.io.InputStream)CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java-' -(32o
java.lang.String.getBytes()CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java-S -([2ç
9java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java-8 -(L2≤
^org.jabref.logic.importer.util.JsonReaderTest.exampleJsonResultsInSameJson()?input@44.15:44.20CALLJ
@src\test\java\org\jabref\logic\importer\util\JsonReaderTest.java-M -(R