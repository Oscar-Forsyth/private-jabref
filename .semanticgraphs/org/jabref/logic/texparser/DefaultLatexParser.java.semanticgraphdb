
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaó
-org.jabref.logic.texparser.DefaultLatexParserCLASSJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java ("%
packageorg.jabref.logic.texparser"
isFinalfalse"
inner classfalse"

isAbstractfalse"©
declarationStringì<mark class="modifier">public </mark><mark class="modifier">class </mark>DefaultLatexParser<mark class="modifier"><br>implements </mark>LatexParser"
accesspublic*DefaultLatexParser2ù
Borg.jabref.logic.texparser.DefaultLatexParser.DefaultLatexParser()DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java5 5(2ü
Dorg.jabref.logic.texparser.DefaultLatexParser.getLatexParserResult()DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java9 9(12†
Eorg.jabref.logic.texparser.DefaultLatexParser.parse(java.lang.String)DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java> >("2¢
Gorg.jabref.logic.texparser.DefaultLatexParser.parse(java.nio.file.Path)DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaD D("2≤
Worg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaI I("2¡
forg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw w(2Ω
`org.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)DECLARATIONL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÑ Ñ(2â
´org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)DECLARATIONL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô ô( 2õ
@org.jabref.logic.texparser.DefaultLatexParser?LOGGER@25.32:25.38DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java  (&2ú
Aorg.jabref.logic.texparser.DefaultLatexParser?TEX_EXT@26.32:26.39DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java  ('2ú
Aorg.jabref.logic.texparser.DefaultLatexParser?BIB_EXT@27.32:27.39DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java  ('2¢
Gorg.jabref.logic.texparser.DefaultLatexParser?CITE_COMMANDS@33.34:33.47DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java!" !(/2ü
Dorg.jabref.logic.texparser.DefaultLatexParser?CITE_GROUP@38.32:38.42DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java&  &(*2°
Forg.jabref.logic.texparser.DefaultLatexParser?CITE_PATTERN@39.33:39.45DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java'! '(-2ß
Lorg.jabref.logic.texparser.DefaultLatexParser?BIBLIOGRAPHY_GROUP@43.32:43.50DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java+  +(22©
Norg.jabref.logic.texparser.DefaultLatexParser?BIBLIOGRAPHY_PATTERN@44.33:44.53DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java,! ,(52¢
Gorg.jabref.logic.texparser.DefaultLatexParser?INCLUDE_GROUP@47.32:47.45DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java/  /(-2§
Iorg.jabref.logic.texparser.DefaultLatexParser?INCLUDE_PATTERN@48.33:48.48DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java0! 0(02¶
Korg.jabref.logic.texparser.DefaultLatexParser?latexParserResult@51.36:51.53DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java3$ 3(52|
&org.jabref.logic.texparser.LatexParserEXTENDJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java+ (6·
Borg.jabref.logic.texparser.DefaultLatexParser.DefaultLatexParser()CONSTRUCTORJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java5 5("j
declarationStringU<mark class="modifier">public </mark><mark class="method">DefaultLatexParser</mark>()*DefaultLatexParser2î
@org.jabref.model.texparser.LatexParserResult.LatexParserResult()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java6% 6(62ü
Korg.jabref.logic.texparser.DefaultLatexParser?latexParserResult@51.36:51.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java6 6(2à
-org.jabref.logic.texparser.DefaultLatexParserRETURN_TYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java5 5(√
Dorg.jabref.logic.texparser.DefaultLatexParser.getLatexParserResult()METHODJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java9 9(1"
isFinalfalse"~
declarationStringi<mark class="modifier">public </mark>LatexParserResult <mark class="method">getLatexParserResult</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeLatexParserResult*getLatexParserResult2ü
Korg.jabref.logic.texparser.DefaultLatexParser?latexParserResult@51.36:51.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java: :( 2á
,org.jabref.model.texparser.LatexParserResultRETURN_TYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java9 9(£
Eorg.jabref.logic.texparser.DefaultLatexParser.parse(java.lang.String)METHODJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java> >(""
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>LatexParserResult <mark class="method">parse</mark>(String citeString)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeLatexParserResult*parse2∫
forg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java? ?(2ê
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java? ?(2§
Porg.jabref.logic.texparser.DefaultLatexParser.parse(java.lang.String)!citeStringCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java?& ?(02ü
Korg.jabref.logic.texparser.DefaultLatexParser?latexParserResult@51.36:51.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java@ @( 2ñ
>org.jabref.logic.texparser.LatexParser.parse(java.lang.String)OVERRIDEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java> >("2©
Porg.jabref.logic.texparser.DefaultLatexParser.parse(java.lang.String)!citeString	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java>* >(42á
,org.jabref.model.texparser.LatexParserResultRETURN_TYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java> >(Â
Porg.jabref.logic.texparser.DefaultLatexParser.parse(java.lang.String)!citeString	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java>* >(4"
typeString"
isFinalfalse"&
declarationStringString citeString*
citeString2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java># >()ﬁ

Gorg.jabref.logic.texparser.DefaultLatexParser.parse(java.nio.file.Path)METHODJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaD D(""
isFinalfalse"¨
declarationStringñ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>LatexParserResult <mark class="method">parse</mark>(Path latexFile)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeLatexParserResult*parse2´
Worg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaE E(2z
&java.util.Collections.singletonList(T)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaE! E(.2•
Qorg.jabref.logic.texparser.DefaultLatexParser.parse(java.nio.file.Path)!latexFileCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaE/ E(82ò
@org.jabref.logic.texparser.LatexParser.parse(java.nio.file.Path)OVERRIDEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaD D("2™
Qorg.jabref.logic.texparser.DefaultLatexParser.parse(java.nio.file.Path)!latexFile	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaD( D(12á
,org.jabref.model.texparser.LatexParserResultRETURN_TYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaD D(‚
Qorg.jabref.logic.texparser.DefaultLatexParser.parse(java.nio.file.Path)!latexFile	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaD( D(1"
typePath"
isFinalfalse"#
declarationStringPath latexFile*	latexFile2f
java.nio.file.PathTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaD# D('ÎV
Worg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)METHODJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaI I(""
isFinalfalse"π
declarationString£<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>LatexParserResult <mark class="method">parse</mark>(List&lt;Path&gt; latexFiles)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeLatexParserResult*parse2≠
Yorg.jabref.model.texparser.LatexParserResult.addFiles(java.util.List<java.nio.file.Path>)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaJ J("2i
java.io.File.exists()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaN N(%2o
java.nio.file.Path.toFile()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaN N(2ß
Sjava.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaT4 T(B2w
#java.io.LineNumberReader.readLine()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaW4 W(<2w
#java.io.LineNumberReader.readLine()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaWf W(n2n
java.lang.String.isEmpty()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaY$ Y(+2k
java.lang.String.trim()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaY Y(!2p
java.lang.String.charAt(int)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaY= Y(C2k
java.lang.String.trim()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaY6 Y(:2∫
forg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java\ \(!2|
(java.io.LineNumberReader.getLineNumber()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java\9 \(F2¥
`org.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java] ]( 2Ä
´org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java^ ^(#2l
java.util.List.isEmpty()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javal l($2´
Worg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javan n(2s
java.util.ArrayList.ArrayList()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaK) K(42Æ
Zjava.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.nio.charset.Charset)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaU( U(92ç
9java.io.LineNumberReader.LineNumberReader(java.io.Reader)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaV< V(L2ü
Korg.jabref.logic.texparser.DefaultLatexParser?latexParserResult@51.36:51.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaJ J(2∂
borg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)!latexFilesCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaJ# J(-2∂
borg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)!latexFilesCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaM M(#2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaN N(2î
@org.jabref.logic.texparser.DefaultLatexParser?LOGGER@25.32:25.38CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaO O(2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaO8 O(<2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaTC T(G2√
oorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?inputStream@84.32:84.43CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaU: U(E2æ
jorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?reader@85.27:85.33CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaVM V(S2»
torg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?lineNumberReader@86.37:86.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaW# W(32º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?line@87.28:87.32CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaW@ W(D2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?line@87.28:87.32CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaWN W(R2»
torg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?lineNumberReader@86.37:86.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaWU W(e2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?line@87.28:87.32CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaY Y(2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?line@87.28:87.32CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaY1 Y(52º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java\" \(&2»
torg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?lineNumberReader@86.37:86.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java\( \(82º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?line@87.28:87.32CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java\J \(N2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java]! ](%2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?line@87.28:87.32CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java]' ](+2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java^$ ^((2∂
borg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)!latexFilesCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java^* ^(42«
sorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?referencedFiles@75.19:75.34CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java^6 ^(E2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?line@87.28:87.32CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java^G ^(K2î
@org.jabref.logic.texparser.DefaultLatexParser?LOGGER@25.32:25.38CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javac c(2î
@org.jabref.logic.texparser.DefaultLatexParser?LOGGER@25.32:25.38CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javag g(2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javag; g(?2ª
gorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?e@100.56:100.57CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javagA g(B2«
sorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?referencedFiles@75.19:75.34CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javal l(2«
sorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?referencedFiles@75.19:75.34CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javan n(!2ü
Korg.jabref.logic.texparser.DefaultLatexParser?latexParserResult@51.36:51.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaq q( 2®
Porg.jabref.logic.texparser.LatexParser.parse(java.util.List<java.nio.file.Path>)OVERRIDEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaI I("2ª
borg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)!latexFiles	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaI. I(82Œ
sorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?referencedFiles@75.19:75.34DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaK K("2√
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaM M(2 
oorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?inputStream@84.32:84.43DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaT  T(+2≈
jorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?reader@85.27:85.33DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaU U(!2œ
torg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?lineNumberReader@86.37:86.53DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaV% V(52√
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?line@87.28:87.32DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaW W( 2¿
eorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?e@96.44:96.45DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java`, `(-2¬
gorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?e@100.56:100.57DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javad8 d(92á
,org.jabref.model.texparser.LatexParserResultRETURN_TYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaI I(“
sorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?referencedFiles@75.19:75.34VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaK K(""
type
List<Path>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>List<Path> <mark class="class-field">referencedFiles</mark> = new ArrayList<>()*referencedFiles2b
java.util.ListTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaK K(2o
java.nio.file.PathTYPE_ARGUMENTJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaK K(2s
java.util.ArrayList.ArrayList()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaK) K(4Æ
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaM M("
typePath"
isFinalfalse"^
declarationStringI<mark class="modifier"> </mark>Path <mark class="class-field">file</mark>*file2f
java.nio.file.PathTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaM M(Ÿ
oorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?inputStream@84.32:84.43VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaT  T(+"
typeInputStream"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>InputStream <mark class="class-field">inputStream</mark> = Files.newInputStream(file)*inputStream2g
java.io.InputStreamTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaT T(2ß
Sjava.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaT4 T(B2º
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?file@77.18:77.22CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaTC T(GÍ
jorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?reader@85.27:85.33VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaU U(!"
typeReader"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>Reader <mark class="class-field">reader</mark> = new InputStreamReader(inputStream, StandardCharsets.UTF_8)*reader2b
java.io.ReaderTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaU U(2Æ
Zjava.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.nio.charset.Charset)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaU( U(92√
oorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?inputStream@84.32:84.43CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaU: U(E‚
torg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?lineNumberReader@86.37:86.53VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaV% V(5"
typeLineNumberReader"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>LineNumberReader <mark class="class-field">lineNumberReader</mark> = new LineNumberReader(reader)*lineNumberReader2l
java.io.LineNumberReaderTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaV V($2ç
9java.io.LineNumberReader.LineNumberReader(java.io.Reader)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaV< V(L2æ
jorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?reader@85.27:85.33CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaVM V(Sí
horg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?line@87.28:87.32VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaW W( "
typeString"
isFinalfalse"~
declarationStringi<mark class="modifier"> </mark>String <mark class="class-field">line</mark> = lineNumberReader.readLine()*line2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaW W(2w
#java.io.LineNumberReader.readLine()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaW4 W(<2»
torg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?lineNumberReader@86.37:86.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaW# W(3Ó
borg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)!latexFiles	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaI. I(8"
type
List<Path>"
isFinalfalse"*
declarationStringList<Path> latexFiles*
latexFiles2b
java.util.ListTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaI# I('2o
java.nio.file.PathTYPE_ARGUMENTJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaI( I(,ü
eorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?e@96.44:96.45VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java`, `(-"
typeClosedChannelException"
isFinalfalse"-
declarationStringClosedChannelException e*e2|
(java.nio.channels.ClosedChannelExceptionTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java` `(+ƒ
gorg.jabref.logic.texparser.DefaultLatexParser.parse(java.util.List<java.nio.file.Path>)?e@100.56:100.57VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javad8 d(9"*
type"IOException | UncheckedIOException"
isFinalfalse"9
declarationString$IOException | UncheckedIOException e*e2Ü
2java.io.IOException | java.io.UncheckedIOExceptionTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javad d(7î(
forg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)METHODJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw w("
isFinalfalse"∆
declarationString∞<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">matchCitation</mark>(Path file<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> lineNumber<mark class="modifier"><mark class="modifier">,</mark></mark> String line)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*matchCitation2ã
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javax) x(02r
java.util.regex.Matcher.find()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaz z(2|
(java.lang.String.split(java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java{: {(?2É
/java.util.regex.Matcher.group(java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java{( {(-2Œ
zorg.jabref.model.texparser.LatexParserResult.addKey(java.lang.String, java.nio.file.Path, int, int, int, java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|" |((2k
java.lang.String.trim()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|- |(12s
java.util.regex.Matcher.start()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|Q |(V2q
java.util.regex.Matcher.end()CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|d |(g2ö
Forg.jabref.logic.texparser.DefaultLatexParser?CITE_PATTERN@39.33:39.45CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javax x((2ø
korg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!lineCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javax1 x(52“
~org.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)?citeMatch@120.16:120.25CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaz z(2“
~org.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)?citeMatch@120.16:120.25CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java{ {('2ò
Dorg.jabref.logic.texparser.DefaultLatexParser?CITE_GROUP@38.32:38.42CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java{. {(82ü
Korg.jabref.logic.texparser.DefaultLatexParser?latexParserResult@51.36:51.53CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java| |(!2Ã
xorg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)?key@123.24:123.27CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|) |(,2ø
korg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!fileCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|5 |(92≈
qorg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!lineNumberCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|; |(E2“
~org.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)?citeMatch@120.16:120.25CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|G |(P2“
~org.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)?citeMatch@120.16:120.25CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|Z |(c2ø
korg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!lineCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java|k |(o2ƒ
korg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!file	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw$ w((2 
qorg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!lineNumber	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw. w(82ƒ
korg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!line	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javawA w(E2Ÿ
~org.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)?citeMatch@120.16:120.25DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javax x(2”
xorg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)?key@123.24:123.27DECLARATIONJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java{ {(2_
voidRETURN_TYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw w(‰
~org.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)?citeMatch@120.16:120.25VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javax x("
typeMatcher"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Matcher <mark class="class-field">citeMatch</mark> = CITE_PATTERN.matcher(line)*	citeMatch2k
java.util.regex.MatcherTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javax x(2ã
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javax) x(02ö
Forg.jabref.logic.texparser.DefaultLatexParser?CITE_PATTERN@39.33:39.45CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javax x((2ø
korg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!lineCALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javax1 x(5æ
xorg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)?key@123.24:123.27VARIABLEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java{ {("
typeString"
isFinalfalse"_
declarationStringJ<mark class="modifier"> </mark>String <mark class="class-field">key</mark>*key2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java{ {(Ú
korg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!file	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw$ w(("
typePath"
isFinalfalse"
declarationString	Path file*file2f
java.nio.file.PathTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw w(#ë
qorg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!lineNumber	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw. w(8"
typeint"
isFinalfalse"A
declarationString,<mark class="modifier">int</mark> lineNumber*
lineNumber2W
intTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw* w(-Ù
korg.jabref.logic.texparser.DefaultLatexParser.matchCitation(java.nio.file.Path, int, java.lang.String)!line	PARAMETERJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javawA w(E"
typeString"
isFinalfalse" 
declarationStringString line*line2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaw: w(@ÿ2
`org.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)METHODL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÑ Ñ("
isFinalfalse"€
declarationString≈<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">matchBibFile</mark>(Path file<mark class="modifier"><mark class="modifier">,</mark></mark> String line)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*matchBibFile2ç
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÖ9 Ö(@2t
java.util.regex.Matcher.find()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaá! á(%2~
(java.lang.String.split(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaàP à(U2Ö
/java.util.regex.Matcher.group(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaà6 à(;2m
java.lang.String.trim()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaâ& â(*2Ç
,java.nio.file.Path.resolve(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaä0 ä(72t
java.nio.file.Path.getParent()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaä$ ä(-2Å
+java.lang.String.endsWith(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaã" ã(*2Ö
/java.lang.String.formatted(java.lang.Object...)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaç) ç(22k
java.io.File.exists()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaè% è(+2q
java.nio.file.Path.toFile()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaè è("2µ
_org.jabref.model.texparser.LatexParserResult.addBibFile(java.nio.file.Path, java.nio.file.Path)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaê& ê(02§
Norg.jabref.logic.texparser.DefaultLatexParser?BIBLIOGRAPHY_PATTERN@44.33:44.53CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÖ$ Ö(82ª
eorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)!lineCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÖA Ö(E2◊
Äorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibliographyMatch@133.16:133.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaá á( 2◊
Äorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibliographyMatch@133.16:133.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaà$ à(52¢
Lorg.jabref.logic.texparser.DefaultLatexParser?BIBLIOGRAPHY_GROUP@43.32:43.50CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaà< à(N2Œ
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaâ â(2Œ
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaâ â(%2ª
eorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)!fileCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaä ä(#2Œ
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaã ã(!2ó
Aorg.jabref.logic.texparser.DefaultLatexParser?BIB_EXT@27.32:27.39CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaã+ ã(22Œ
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaå" å(+2Œ
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaç3 ç(<2ó
Aorg.jabref.logic.texparser.DefaultLatexParser?BIB_EXT@27.32:27.39CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaç> ç(E2Ã
vorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibFile@138.21:138.28CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaè è(2°
Korg.jabref.logic.texparser.DefaultLatexParser?latexParserResult@51.36:51.53CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaê ê(%2ª
eorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)!fileCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaê1 ê(52Ã
vorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibFile@138.21:138.28CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaê7 ê(>2¿
eorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)!file	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÑ# Ñ('2¿
eorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)!line	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÑ0 Ñ(42ﬁ
Äorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibliographyMatch@133.16:133.33DECLARATIONL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÖ Ö(!2’
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33DECLARATIONL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaà à(!2”
vorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibFile@138.21:138.28DECLARATIONL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaä ä(2a
voidRETURN_TYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÑ Ñ(ã
Äorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibliographyMatch@133.16:133.33VARIABLEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÖ Ö(!"
typeMatcher"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>Matcher <mark class="class-field">bibliographyMatch</mark> = BIBLIOGRAPHY_PATTERN.matcher(line)*bibliographyMatch2m
java.util.regex.MatcherTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÖ Ö(2ç
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÖ9 Ö(@2§
Norg.jabref.logic.texparser.DefaultLatexParser?BIBLIOGRAPHY_PATTERN@44.33:44.53CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÖ$ Ö(82ª
eorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)!lineCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÖA Ö(EŒ
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33VARIABLEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaà à(!"
typeString"
isFinalfalse"e
declarationStringP<mark class="modifier"> </mark>String <mark class="class-field">bibString</mark>*	bibString2f
java.lang.StringTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaà à(ü
vorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibFile@138.21:138.28VARIABLEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaä ä("
typePath"
isFinalfalse"Õ
declarationString∑<mark class="modifier"> </mark>Path <mark class="class-field">bibFile</mark> = file.getParent().resolve(bibString.endsWith(BIB_EXT) ? bibString : "%s%s".formatted(bibString, BIB_EXT))*bibFile2h
java.nio.file.PathTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaä ä(2Ç
,java.nio.file.Path.resolve(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaä0 ä(72t
java.nio.file.Path.getParent()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaä$ ä(-2Å
+java.lang.String.endsWith(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaã" ã(*2Ö
/java.lang.String.formatted(java.lang.Object...)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaç) ç(22ª
eorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)!fileCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaä ä(#2Œ
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaã ã(!2ó
Aorg.jabref.logic.texparser.DefaultLatexParser?BIB_EXT@27.32:27.39CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaã+ ã(22Œ
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaå" å(+2Œ
xorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)?bibString@136.24:136.33CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaç3 ç(<2ó
Aorg.jabref.logic.texparser.DefaultLatexParser?BIB_EXT@27.32:27.39CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaç> ç(E
eorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)!file	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÑ# Ñ('"
typePath"
isFinalfalse"
declarationString	Path file*file2h
java.nio.file.PathTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÑ Ñ("Ú
eorg.jabref.logic.texparser.DefaultLatexParser.matchBibFile(java.nio.file.Path, java.lang.String)!line	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÑ0 Ñ(4"
typeString"
isFinalfalse" 
declarationStringString line*line2f
java.lang.StringTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaÑ) Ñ(/´E
´org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)METHODL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô ô( "
isFinalfalse"ñ
declarationStringÄ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">matchNestedFile</mark>(Path texFile<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;Path&gt; texFiles<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;Path&gt; referencedFiles<mark class="modifier"><mark class="modifier">,</mark></mark> String line)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*matchNestedFile2ç
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaö/ ö(62t
java.util.regex.Matcher.find()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaú ú( 2Ö
/java.util.regex.Matcher.group(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaù: ù(?2Å
+java.lang.String.endsWith(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaû9 û(A2Ö
/java.lang.String.formatted(java.lang.Object...)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java† †(&2Ç
,java.nio.file.Path.resolve(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java°2 °(92t
java.nio.file.Path.getParent()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java°& °(/2k
java.io.File.exists()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java¢$ ¢(*2q
java.nio.file.Path.toFile()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java¢ ¢(!2
)java.util.List.contains(java.lang.Object)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java¢: ¢(B2k
java.util.List.add(E)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java£  £(#2ü
Iorg.jabref.logic.texparser.DefaultLatexParser?INCLUDE_PATTERN@48.33:48.48CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaö ö(.2á
∞org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!lineCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaö7 ö(;2ù
∆org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?includeMatch@154.16:154.28CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaú ú(2ù
∆org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?includeMatch@154.16:154.28CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaù- ù(92ù
Gorg.jabref.logic.texparser.DefaultLatexParser?INCLUDE_GROUP@47.32:47.45CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaù@ ù(M2®
—org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?filenamePassedToInclude@157.19:157.42CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaû! û(82ó
Aorg.jabref.logic.texparser.DefaultLatexParser?TEX_EXT@26.32:26.39CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaûB û(I2®
—org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?filenamePassedToInclude@157.19:157.42CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaü ü(-2®
—org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?filenamePassedToInclude@157.19:157.42CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java†' †(>2ó
Aorg.jabref.logic.texparser.DefaultLatexParser?TEX_EXT@26.32:26.39CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java†@ †(G2ä
≥org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!texFileCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java° °(%2ú
≈org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?texFileName@158.19:158.30CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java°: °(E2õ
ƒorg.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?nestedFile@161.17:161.27CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java¢ ¢(2ã
¥org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!texFilesCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java¢1 ¢(92õ
ƒorg.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?nestedFile@161.17:161.27CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java¢C ¢(M2í
ªorg.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!referencedFilesCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java£ £(2õ
ƒorg.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?nestedFile@161.17:161.27CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java£$ £(.2è
≥org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!texFile	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô& ô(-2ê
¥org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!texFiles	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô: ô(B2ó
ªorg.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!referencedFiles	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaôO ô(^2å
∞org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!line	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaôg ô(k2§
∆org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?includeMatch@154.16:154.28DECLARATIONL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaö ö(2Ø
—org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?filenamePassedToInclude@157.19:157.42DECLARATIONL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaù ù(*2£
≈org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?texFileName@158.19:158.30DECLARATIONL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaû û(2¢
ƒorg.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?nestedFile@161.17:161.27DECLARATIONL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java° °(2a
voidRETURN_TYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô ô(â	
∆org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?includeMatch@154.16:154.28VARIABLEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaö ö("
typeMatcher"
isFinalfalse"â
declarationStringt<mark class="modifier"> </mark>Matcher <mark class="class-field">includeMatch</mark> = INCLUDE_PATTERN.matcher(line)*includeMatch2m
java.util.regex.MatcherTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaö ö(2ç
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaö/ ö(62ü
Iorg.jabref.logic.texparser.DefaultLatexParser?INCLUDE_PATTERN@48.33:48.48CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaö ö(.2á
∞org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!lineCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaö7 ö(;≤	
—org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?filenamePassedToInclude@157.19:157.42VARIABLEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaù ù(*"
typeString"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>String <mark class="class-field">filenamePassedToInclude</mark> = includeMatch.group(INCLUDE_GROUP)*filenamePassedToInclude2f
java.lang.StringTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaù ù(2Ö
/java.util.regex.Matcher.group(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaù: ù(?2ù
∆org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?includeMatch@154.16:154.28CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaù- ù(92ù
Gorg.jabref.logic.texparser.DefaultLatexParser?INCLUDE_GROUP@47.32:47.45CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaù@ ù(Mﬁ
≈org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?texFileName@158.19:158.30VARIABLEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaû û("
typeString"
isFinalfalse"„
declarationStringÕ<mark class="modifier"> </mark>String <mark class="class-field">texFileName</mark> = filenamePassedToInclude.endsWith(TEX_EXT) ? filenamePassedToInclude : "%s%s".formatted(filenamePassedToInclude, TEX_EXT)*texFileName2f
java.lang.StringTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaû û(2Å
+java.lang.String.endsWith(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaû9 û(A2Ö
/java.lang.String.formatted(java.lang.Object...)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java† †(&2®
—org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?filenamePassedToInclude@157.19:157.42CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaû! û(82ó
Aorg.jabref.logic.texparser.DefaultLatexParser?TEX_EXT@26.32:26.39CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaûB û(I2®
—org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?filenamePassedToInclude@157.19:157.42CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaü ü(-2®
—org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?filenamePassedToInclude@157.19:157.42CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java†' †(>2ó
Aorg.jabref.logic.texparser.DefaultLatexParser?TEX_EXT@26.32:26.39CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java†@ †(GÓ

ƒorg.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?nestedFile@161.17:161.27VARIABLEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java° °("
typePath"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>Path <mark class="class-field">nestedFile</mark> = texFile.getParent().resolve(texFileName)*
nestedFile2h
java.nio.file.PathTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java° °(2Ç
,java.nio.file.Path.resolve(java.lang.String)CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java°2 °(92t
java.nio.file.Path.getParent()CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java°& °(/2ä
≥org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!texFileCALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java° °(%2ú
≈org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)?texFileName@158.19:158.30CALLL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java°: °(E≈
≥org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!texFile	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô& ô(-"
typePath"
isFinalfalse"!
declarationStringPath texFile*texFile2h
java.nio.file.PathTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô! ô(%√
¥org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!texFiles	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô: ô(B"
type
List<Path>"
isFinalfalse"(
declarationStringList<Path> texFiles*texFiles2d
java.util.ListTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô/ ô(32q
java.nio.file.PathTYPE_ARGUMENTL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô4 ô(8ÿ
ªorg.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!referencedFiles	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaôO ô(^"
type
List<Path>"
isFinalfalse"/
declarationStringList<Path> referencedFiles*referencedFiles2d
java.util.ListTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaôD ô(H2q
java.nio.file.PathTYPE_ARGUMENTL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaôI ô(Mæ
∞org.jabref.logic.texparser.DefaultLatexParser.matchNestedFile(java.nio.file.Path, java.util.List<java.nio.file.Path>, java.util.List<java.nio.file.Path>, java.lang.String)!line	PARAMETERL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaôg ô(k"
typeString"
isFinalfalse" 
declarationStringString line*line2f
java.lang.StringTYPEL
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.javaô` ô(f¥
@org.jabref.logic.texparser.DefaultLatexParser?LOGGER@25.32:25.38VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java  (&"
isFinaltrue"
typeLogger"Ë
declarationString“<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(DefaultLatexParser.class);"
isStatictrue"
accessprivate*LOGGER2d
org.slf4j.LoggerTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java (å
Aorg.jabref.logic.texparser.DefaultLatexParser?TEX_EXT@26.32:26.39VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java  ('"
isFinaltrue"
typeString"æ
declarationString®<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">TEX_EXT</mark> = ".tex";"
isStatictrue"
accessprivate*TEX_EXT2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java (å
Aorg.jabref.logic.texparser.DefaultLatexParser?BIB_EXT@27.32:27.39VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java  ('"
isFinaltrue"
typeString"æ
declarationString®<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">BIB_EXT</mark> = ".bib";"
isStatictrue"
accessprivate*BIB_EXT2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java (ÿ
Gorg.jabref.logic.texparser.DefaultLatexParser?CITE_COMMANDS@33.34:33.47VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java!" !(/"
isFinaltrue"
typeString"¸
declarationStringÊ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String[] <mark class="class-field">CITE_COMMANDS</mark> = { "[cC]ite(alt|alp|author|authorfull|date|num|p|t|text|title|url|year|yearpar)?"<mark class="modifier">,</mark> "([aA]|[aA]uto|fnote|foot|footfull|full|no|[nN]ote|[pP]aren|[pP]note|[tT]ext|[sS]mart|super)cite([s*]?)"<mark class="modifier">,</mark> "footcitetext"<mark class="modifier">,</mark> "(block|text)cquote" };"
isStatictrue"
accessprivate*CITE_COMMANDS2f
java.lang.String[]TYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java! !(!î
Dorg.jabref.logic.texparser.DefaultLatexParser?CITE_GROUP@38.32:38.42VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java&  &(*"
isFinaltrue"
typeString"¿
declarationString™<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">CITE_GROUP</mark> = "key";"
isStatictrue"
accessprivate*
CITE_GROUP2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java& &(÷
Forg.jabref.logic.texparser.DefaultLatexParser?CITE_PATTERN@39.33:39.45VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java'! '(-"
isFinaltrue"
typePattern"ê
declarationString˙<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">CITE_PATTERN</mark> = Pattern.compile("\\\\(%s)\\*?(?:\\[(?:[^\\]]*)\\]){0,2}\\{(?<%s>[^\\}]*)\\}(?:\\{[^\\}]*\\})?".formatted(String.join("|"<mark class="modifier">,</mark> CITE_COMMANDS)<mark class="modifier">,</mark> CITE_GROUP));"
isStatictrue"
accessprivate*CITE_PATTERN2k
java.util.regex.PatternTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java' '( 2Ö
1java.util.regex.Pattern.compile(java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java'8 '(?2É
/java.lang.String.formatted(java.lang.Object...)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java([ ((d2ú
Hjava.lang.String.join(java.lang.CharSequence, java.lang.CharSequence...)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java) )(2õ
Gorg.jabref.logic.texparser.DefaultLatexParser?CITE_COMMANDS@33.34:33.47CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java)% )(22ò
Dorg.jabref.logic.texparser.DefaultLatexParser?CITE_GROUP@38.32:38.42CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java)5 )(?¨
Lorg.jabref.logic.texparser.DefaultLatexParser?BIBLIOGRAPHY_GROUP@43.32:43.50VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java+  +(2"
isFinaltrue"
typeString"»
declarationString≤<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">BIBLIOGRAPHY_GROUP</mark> = "bib";"
isStatictrue"
accessprivate*BIBLIOGRAPHY_GROUP2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java+ +(œ
Norg.jabref.logic.texparser.DefaultLatexParser?BIBLIOGRAPHY_PATTERN@44.33:44.53VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java,! ,(5"
isFinaltrue"
typePattern"Æ
declarationStringò<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">BIBLIOGRAPHY_PATTERN</mark> = Pattern.compile("\\\\(?:bibliography|addbibresource)\\{(?<%s>[^\\}]*)\\}".formatted(BIBLIOGRAPHY_GROUP));"
isStatictrue"
accessprivate*BIBLIOGRAPHY_PATTERN2k
java.util.regex.PatternTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java, ,( 2Ö
1java.util.regex.Pattern.compile(java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java,@ ,(G2É
/java.lang.String.formatted(java.lang.Object...)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java-F -(O2†
Lorg.jabref.logic.texparser.DefaultLatexParser?BIBLIOGRAPHY_GROUP@43.32:43.50CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java-P -(bû
Gorg.jabref.logic.texparser.DefaultLatexParser?INCLUDE_GROUP@47.32:47.45VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java/  /(-"
isFinaltrue"
typeString"ƒ
declarationStringÆ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">INCLUDE_GROUP</mark> = "file";"
isStatictrue"
accessprivate*INCLUDE_GROUP2d
java.lang.StringTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java/ /(®
Iorg.jabref.logic.texparser.DefaultLatexParser?INCLUDE_PATTERN@48.33:48.48VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java0! 0(0"
isFinaltrue"
typePattern"ñ
declarationStringÄ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">INCLUDE_PATTERN</mark> = Pattern.compile("\\\\(?:include|input)\\{(?<%s>[^\\}]*)\\}".formatted(INCLUDE_GROUP));"
isStatictrue"
accessprivate*INCLUDE_PATTERN2k
java.util.regex.PatternTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java0 0( 2Ö
1java.util.regex.Pattern.compile(java.lang.String)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java0; 0(B2É
/java.lang.String.formatted(java.lang.Object...)CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java18 1(A2õ
Gorg.jabref.logic.texparser.DefaultLatexParser?INCLUDE_GROUP@47.32:47.45CALLJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java1B 1(OØ
Korg.jabref.logic.texparser.DefaultLatexParser?latexParserResult@51.36:51.53VALUEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java3$ 3(5"
isFinaltrue"
typeLatexParserResult"§
declarationStringé<mark class="modifier">private </mark><mark class="modifier">final </mark>LatexParserResult <mark class="class-field">latexParserResult</mark>"
isStaticfalse"
accessprivate*latexParserResult2Ä
,org.jabref.model.texparser.LatexParserResultTYPEJ
@src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java3 3(#