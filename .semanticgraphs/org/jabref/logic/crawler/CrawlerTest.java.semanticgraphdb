
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java∫
$org.jabref.logic.crawler.CrawlerTestCLASSA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java& &("#
packageorg.jabref.logic.crawler"
isFinalfalse"
inner classfalse"

isAbstractfalse"î
declarationString<mark class="annotation">@FetcherTest</mark> <br><mark class="modifier"> </mark><mark class="modifier">class </mark>CrawlerTest"
accesspackage_private*CrawlerTest2~
,org.jabref.logic.crawler.CrawlerTest.setUp()DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java7 7(2à
6org.jabref.logic.crawler.CrawlerTest.setUpRepository()DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaR R( 2ï
Corg.jabref.logic.crawler.CrawlerTest.setUpTestStudyDefinitionFile()DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java` `(-2í
@org.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javag g()2ï
Corg.jabref.logic.crawler.CrawlerTest.getPathToStudyDefinitionFile()DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java| |(-2ô
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java(	 (( 2ö
Horg.jabref.logic.crawler.CrawlerTest?importFormatPreferences@41.28:41.51DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java) )(32ñ
Dorg.jabref.logic.crawler.CrawlerTest?importerPreferences@42.24:42.43DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java* *(+2î
Borg.jabref.logic.crawler.CrawlerTest?saveConfiguration@43.22:43.39DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java+ +('2î
Borg.jabref.logic.crawler.CrawlerTest?entryTypesManager@44.25:44.42DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java, ,(*2ç
;org.jabref.logic.crawler.CrawlerTest?gitHandler@45.18:45.28DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java- -(2í
@org.jabref.logic.crawler.CrawlerTest?hashCodeQuantum@46.11:46.26DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java. .(2ô
Gorg.jabref.logic.crawler.CrawlerTest?hashCodeCloudComputing@47.11:47.33DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java/ /(!2ï
Corg.jabref.logic.crawler.CrawlerTest?preferencesService@49.23:49.41DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java1 1()±
,org.jabref.logic.crawler.CrawlerTest.setUp()METHODA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java7 7("
isFinalfalse"˛
declarationStringË<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2Å
6org.jabref.logic.crawler.CrawlerTest.setUpRepository()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java8 8(2•
Zorg.jabref.logic.citationkeypattern.GlobalCitationKeyPattern.fromPattern(java.lang.String)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaB) B(42Ö
:org.jabref.logic.exporter.SaveConfiguration.getSaveOrder()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaI I(+2Ñ
9org.jabref.model.metadata.SaveOrder.getDefaultSaveOrder()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaID I(W2Ö
:org.jabref.logic.importer.ImporterPreferences.getApiKeys()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaJ! J(+2ó
Lorg.jabref.preferences.PreferencesService.getCitationKeyPatternPreferences()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaM  M(@2Æ
‚org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.CitationKeyPatternPreferences(boolean, boolean, boolean, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.KeySuffix, java.lang.String, java.lang.String, java.lang.String, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern, java.lang.String, java.lang.Character)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java:J :(g2ç
Borg.jabref.model.entry.BibEntryTypesManager.BibEntryTypesManager()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaO  O(42ì
Horg.jabref.logic.crawler.CrawlerTest?importFormatPreferences@41.28:41.51CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaF F(2è
Dorg.jabref.logic.crawler.CrawlerTest?importerPreferences@42.24:42.43CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaG G(2ç
Borg.jabref.logic.crawler.CrawlerTest?saveConfiguration@43.22:43.39CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaH H(2ç
Borg.jabref.logic.crawler.CrawlerTest?saveConfiguration@43.22:43.39CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaI I(2è
Dorg.jabref.logic.crawler.CrawlerTest?importerPreferences@42.24:42.43CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaJ J( 2ì
Horg.jabref.logic.crawler.CrawlerTest?importFormatPreferences@41.28:41.51CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaK K($2é
Corg.jabref.logic.crawler.CrawlerTest?preferencesService@49.23:49.41CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaM M(2°
Vorg.jabref.logic.crawler.CrawlerTest.setUp()?citationKeyPatternPreferences@58.38:58.67CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaMO M(l2ç
Borg.jabref.logic.crawler.CrawlerTest?entryTypesManager@44.25:44.42CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaO O(2®
Vorg.jabref.logic.crawler.CrawlerTest.setUp()?citationKeyPatternPreferences@58.38:58.67DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java:& :(C2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java7 7(ó
Vorg.jabref.logic.crawler.CrawlerTest.setUp()?citationKeyPatternPreferences@58.38:58.67VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java:& :(C"%
typeCitationKeyPatternPreferences"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark>CitationKeyPatternPreferences <mark class="class-field">citationKeyPatternPreferences</mark> = new CitationKeyPatternPreferences(<mark class="modifier">false</mark><mark class="modifier">,</mark> <mark class="modifier">false</mark><mark class="modifier">,</mark> <mark class="modifier">false</mark><mark class="modifier">,</mark> CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A, ""<mark class="modifier">,</mark> ""<mark class="modifier">,</mark> DEFAULT_UNWANTED_CHARACTERS, GlobalCitationKeyPattern.fromPattern("[auth][year]")<mark class="modifier">,</mark> ""<mark class="modifier">,</mark> '<mark class="modifier">,</mark>')*citationKeyPatternPreferences2å
Aorg.jabref.logic.citationkeypattern.CitationKeyPatternPreferencesTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java: :(%2•
Zorg.jabref.logic.citationkeypattern.GlobalCitationKeyPattern.fromPattern(java.lang.String)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaB) B(42Æ
‚org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.CitationKeyPatternPreferences(boolean, boolean, boolean, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.KeySuffix, java.lang.String, java.lang.String, java.lang.String, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern, java.lang.String, java.lang.Character)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java:J :(gà
6org.jabref.logic.crawler.CrawlerTest.setUpRepository()METHODA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaR R( "
isFinalfalse"Ÿ
declarationString√<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">setUpRepository</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*setUpRepository2f
java.nio.file.Path.toFile()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaT; T(A2é
Corg.jabref.logic.crawler.CrawlerTest.setUpTestStudyDefinitionFile()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaV V($2í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaT# T(:2ë
Forg.jabref.logic.crawler.CrawlerTest.setUpRepository()?git@83.12:83.15CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaW W(2ë
Forg.jabref.logic.crawler.CrawlerTest.setUpRepository()?git@83.12:83.15CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaZ Z(2ë
Forg.jabref.logic.crawler.CrawlerTest.setUpRepository()?git@83.12:83.15CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java] ](2ò
Forg.jabref.logic.crawler.CrawlerTest.setUpRepository()?git@83.12:83.15DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaS S(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaR R(æ
Forg.jabref.logic.crawler.CrawlerTest.setUpRepository()?git@83.12:83.15VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaS S("
typeGit"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>Git <mark class="class-field">git</mark> = Git.init().setDirectory(tempRepositoryDirectory.toFile()).call()*git2c
org.eclipse.jgit.api.GitTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaS S(2f
java.nio.file.Path.toFile()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaT; T(A2í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaT# T(:Ó
Corg.jabref.logic.crawler.CrawlerTest.setUpTestStudyDefinitionFile()METHODA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java` `(-"
isFinalfalse"Ê
declarationString–<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">setUpTestStudyDefinitionFile</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*setUpTestStudyDefinitionFile2w
,java.nio.file.Path.resolve(java.lang.String)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaa3 a(:2x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javab. b(92f
java.lang.Object.getClass()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javab# b(+2¶
[org.jabref.logic.util.io.FileUtil.copyFile(java.nio.file.Path, java.nio.file.Path, boolean)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javac c(2n
#java.nio.file.Path.of(java.net.URI)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javac c(!2_
java.net.URL.toURI()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javac2 c(72í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaa a(22™
_org.jabref.logic.crawler.CrawlerTest.setUpTestStudyDefinitionFile()?studyDefinition@98.12:98.27CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javac" c(12¶
[org.jabref.logic.crawler.CrawlerTest.setUpTestStudyDefinitionFile()?destination@97.13:97.24CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javac< c(G2≠
[org.jabref.logic.crawler.CrawlerTest.setUpTestStudyDefinitionFile()?destination@97.13:97.24DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaa a(2±
_org.jabref.logic.crawler.CrawlerTest.setUpTestStudyDefinitionFile()?studyDefinition@98.12:98.27DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javab b(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java` `(˚
[org.jabref.logic.crawler.CrawlerTest.setUpTestStudyDefinitionFile()?destination@97.13:97.24VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaa a("
typePath"
isFinalfalse"¥
declarationStringû<mark class="modifier"> </mark>Path <mark class="class-field">destination</mark> = tempRepositoryDirectory.resolve(StudyRepository.STUDY_DEFINITION_FILE_NAME)*destination2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaa a(2w
,java.nio.file.Path.resolve(java.lang.String)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaa3 a(:2í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaa a(2Ì
_org.jabref.logic.crawler.CrawlerTest.setUpTestStudyDefinitionFile()?studyDefinition@98.12:98.27VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javab b("
typeURL"
isFinalfalse"—
declarationStringª<mark class="modifier"> </mark>URL <mark class="class-field">studyDefinition</mark> = <mark class="modifier">this</mark>.getClass().getResource(StudyRepository.STUDY_DEFINITION_FILE_NAME)*studyDefinition2W
java.net.URLTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javab b(2x
-java.lang.Class.getResource(java.lang.String)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javab. b(92f
java.lang.Object.getClass()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javab# b(+¯2
@org.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()METHODA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javag g()"
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">whetherAllFilesAreCreated</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*whetherAllFilesAreCreated2é
Corg.jabref.logic.crawler.CrawlerTest.getPathToStudyDefinitionFile()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javah* h(F2z
/org.jabref.logic.crawler.Crawler.performCrawl()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javan n( 2ñ
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javap p(2á
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javap% p('2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javap@ p(H2ñ
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaq q(2á
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaq% q('2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaq@ q(H2h
java.util.List.of(E, E, E, E)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javas* s(,2ç
Bjava.lang.Iterable.forEach(java.util.function.Consumer<? super T>)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javat t(2ñ
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javav% v(+2á
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javav1 v(32h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javavL v(T2ñ
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaw% w(+2á
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaw1 w(32h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javawL w(T2ñ
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javay y(2á
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javay% y('2h
java.nio.file.Path.toString()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javay@ y(H2≠
·org.jabref.logic.crawler.Crawler.Crawler(java.nio.file.Path, org.jabref.logic.git.SlrGitHandler, org.jabref.preferences.PreferencesService, org.jabref.model.entry.BibEntryTypesManager, org.jabref.model.util.FileUpdateMonitor)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javah" h()2ê
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javal l(*2Ü
;org.jabref.logic.crawler.CrawlerTest?gitHandler@45.18:45.28CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javai i(2é
Corg.jabref.logic.crawler.CrawlerTest?preferencesService@49.23:49.41CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaj j("2ç
Borg.jabref.logic.crawler.CrawlerTest?entryTypesManager@44.25:44.42CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javak k(!2•
Zorg.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?testCrawler@104.16:104.27CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javan n(2í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javap( p(?2ã
@org.jabref.logic.crawler.CrawlerTest?hashCodeQuantum@46.11:46.26CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javapL p([2í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaq( q(?2í
Gorg.jabref.logic.crawler.CrawlerTest?hashCodeCloudComputing@47.11:47.33CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaqL q(b2ß
\org.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?filesToAssert@115.21:115.34CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javat t(2í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javav4 v(K2ã
@org.jabref.logic.crawler.CrawlerTest?hashCodeQuantum@46.11:46.26CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javavX v(g2£
Worg.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?fileName@117.16:117.24CALLB
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javavx v(Ä2í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaw4 w(K2í
Gorg.jabref.logic.crawler.CrawlerTest?hashCodeCloudComputing@47.11:47.33CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javawX w(n2§
Worg.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?fileName@117.16:117.24CALLC
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javawá w(è2í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javay( y(?2¨
Zorg.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?testCrawler@104.16:104.27DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javah h(2Æ
\org.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?filesToAssert@115.21:115.34DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javas s("2©
Worg.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?fileName@117.16:117.24DECLARATIONA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javau u(2V
voidRETURN_TYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javag g(Õ
Zorg.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?testCrawler@104.16:104.27VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javah h("
typeCrawler"
isFinalfalse"Ü
declarationString<mark class="modifier"> </mark>Crawler <mark class="class-field">testCrawler</mark> = new Crawler(getPathToStudyDefinitionFile()<mark class="modifier">,</mark> gitHandler, preferencesService, entryTypesManager, new DummyFileUpdateMonitor())*testCrawler2k
 org.jabref.logic.crawler.CrawlerTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javah h(2é
Corg.jabref.logic.crawler.CrawlerTest.getPathToStudyDefinitionFile()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javah* h(F2≠
·org.jabref.logic.crawler.Crawler.Crawler(java.nio.file.Path, org.jabref.logic.git.SlrGitHandler, org.jabref.preferences.PreferencesService, org.jabref.model.entry.BibEntryTypesManager, org.jabref.model.util.FileUpdateMonitor)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javah" h()2ê
Eorg.jabref.model.util.DummyFileUpdateMonitor.DummyFileUpdateMonitor()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javal l(*2Ü
;org.jabref.logic.crawler.CrawlerTest?gitHandler@45.18:45.28CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javai i(2é
Corg.jabref.logic.crawler.CrawlerTest?preferencesService@49.23:49.41CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javaj j("2ç
Borg.jabref.logic.crawler.CrawlerTest?entryTypesManager@44.25:44.42CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javak k(!•
\org.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?filesToAssert@115.21:115.34VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javas s(""
typeList<String>"
isFinalfalse"ï
declarationStringˇ<mark class="modifier"> </mark>List<String> <mark class="class-field">filesToAssert</mark> = List.of("ArXiv.bib"<mark class="modifier">,</mark> "Springer.bib"<mark class="modifier">,</mark> "result.bib"<mark class="modifier">,</mark> "Medline_PubMed.bib")*filesToAssert2Y
java.util.ListTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javas s(2d
java.lang.StringTYPE_ARGUMENTA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javas s(2h
java.util.List.of(E, E, E, E)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javas* s(,Ú
Worg.jabref.logic.crawler.CrawlerTest.whetherAllFilesAreCreated()?fileName@117.16:117.24VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.javau u("
type"
isFinalfalse"
declarationString	 fileName*fileName2TYPEÄ
Corg.jabref.logic.crawler.CrawlerTest.getPathToStudyDefinitionFile()METHODA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java| |(-"
isFinalfalse"z
declarationStringe<mark class="modifier">private </mark>Path <mark class="method">getPathToStudyDefinitionFile</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"
typePath*getPathToStudyDefinitionFile2í
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java} }(&2d
java.nio.file.PathRETURN_TYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java| |(œ
Gorg.jabref.logic.crawler.CrawlerTest?tempRepositoryDirectory@40.9:40.32VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java(	 (( "
isFinalfalse"
typePath"q
declarationString\<mark class="modifier"> </mark>Path <mark class="class-field">tempRepositoryDirectory</mark>"
isStaticfalse"
accesspackage_private*tempRepositoryDirectory2]
java.nio.file.PathTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java( ((¸
Horg.jabref.logic.crawler.CrawlerTest?importFormatPreferences@41.28:41.51VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java) )(3"
isFinalfalse"
typeImportFormatPreferences"Ñ
declarationStringo<mark class="modifier"> </mark>ImportFormatPreferences <mark class="class-field">importFormatPreferences</mark>"
isStaticfalse"
accesspackage_private*importFormatPreferences2b
ImportFormatPreferencesTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java) )(˝
Dorg.jabref.logic.crawler.CrawlerTest?importerPreferences@42.24:42.43VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java* *(+"
isFinalfalse"
typeImporterPreferences"|
declarationStringg<mark class="modifier"> </mark>ImporterPreferences <mark class="class-field">importerPreferences</mark>"
isStaticfalse"
accesspackage_private*importerPreferences2x
-org.jabref.logic.importer.ImporterPreferencesTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java* *(Ò
Borg.jabref.logic.crawler.CrawlerTest?saveConfiguration@43.22:43.39VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java+ +('"
isFinalfalse"
typeSaveConfiguration"x
declarationStringc<mark class="modifier"> </mark>SaveConfiguration <mark class="class-field">saveConfiguration</mark>"
isStaticfalse"
accesspackage_private*saveConfiguration2v
+org.jabref.logic.exporter.SaveConfigurationTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java+ +(˜
Borg.jabref.logic.crawler.CrawlerTest?entryTypesManager@44.25:44.42VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java, ,(*"
isFinalfalse"
typeBibEntryTypesManager"{
declarationStringf<mark class="modifier"> </mark>BibEntryTypesManager <mark class="class-field">entryTypesManager</mark>"
isStaticfalse"
accesspackage_private*entryTypesManager2v
+org.jabref.model.entry.BibEntryTypesManagerTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java, ,(Ñ
;org.jabref.logic.crawler.CrawlerTest?gitHandler@45.18:45.28VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java- -("
isFinalfalse"
typeSlrGitHandler"•
declarationStringè<mark class="modifier"> </mark>SlrGitHandler <mark class="class-field">gitHandler</mark> = mock(SlrGitHandler.class, Answers.RETURNS_DEFAULTS);"
isStaticfalse"
accesspackage_private*
gitHandler2m
"org.jabref.logic.git.SlrGitHandlerTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java- -(µ
@org.jabref.logic.crawler.CrawlerTest?hashCodeQuantum@46.11:46.26VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java. .("
isFinalfalse"
typeString"ì
declarationString~<mark class="modifier"> </mark>String <mark class="class-field">hashCodeQuantum</mark> = String.valueOf("Quantum".hashCode());"
isStaticfalse"
accesspackage_private*hashCodeQuantum2[
java.lang.StringTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java. .(
2h
java.lang.String.valueOf(int)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java.$ .(+2f
java.lang.String.hashCode()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java.6 .(>”
Gorg.jabref.logic.crawler.CrawlerTest?hashCodeCloudComputing@47.11:47.33VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java/ /(!"
isFinalfalse"
typeString"£
declarationStringç<mark class="modifier"> </mark>String <mark class="class-field">hashCodeCloudComputing</mark> = String.valueOf("Cloud Computing".hashCode());"
isStaticfalse"
accesspackage_private*hashCodeCloudComputing2[
java.lang.StringTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java/ /(
2h
java.lang.String.valueOf(int)CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java/+ /(22f
java.lang.String.hashCode()CALLA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java/E /(M¥
Corg.jabref.logic.crawler.CrawlerTest?preferencesService@49.23:49.41VARIABLEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java1 1()"
isFinalfalse"
typePreferencesService"π
declarationString£<mark class="modifier"> </mark>PreferencesService <mark class="class-field">preferencesService</mark> = mock(PreferencesService.class, Answers.RETURNS_DEEP_STUBS);"
isStaticfalse"
accesspackage_private*preferencesService2t
)org.jabref.preferences.PreferencesServiceTYPEA
7src\test\java\org\jabref\logic\crawler\CrawlerTest.java1 1(