
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java∏
-org.jabref.logic.shared.security.PasswordTestCLASSJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java
 
("+
package org.jabref.logic.shared.security"
isFinalfalse"
inner classfalse"

isAbstractfalse"d
declarationStringO<mark class="modifier"> </mark><mark class="modifier">class </mark>PasswordTest"
accesspackage_private*PasswordTest2ö
?org.jabref.logic.shared.security.PasswordTest.passwordAESTest()DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java	 (2ù
Borg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java	 (◊
?org.jabref.logic.shared.security.PasswordTest.passwordAESTest()METHODJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java	 ("
isFinalfalse"Â
declarationStringœ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">passwordAESTest</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>GeneralSecurityException<mark class="modifier"><mark class="modifier">,</mark></mark> UnsupportedEncodingException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*passwordAESTest2á
3org.jabref.logic.shared.security.Password.encrypt()CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java, (32™
Vorg.jabref.logic.shared.security.Password.Password(java.lang.String, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java  ((2¶
Rorg.jabref.logic.shared.security.PasswordTest.passwordAESTest()?phrase@14.15:14.21CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java) (/2®
Torg.jabref.logic.shared.security.PasswordTest.passwordAESTest()?password@15.17:15.25CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java# (+2¶
Rorg.jabref.logic.shared.security.PasswordTest.passwordAESTest()?phrase@14.15:14.21CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2±
]org.jabref.logic.shared.security.PasswordTest.passwordAESTest()?encryptedPassword@16.15:16.32CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java  (12≠
Rorg.jabref.logic.shared.security.PasswordTest.passwordAESTest()?phrase@14.15:14.21DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2Ø
Torg.jabref.logic.shared.security.PasswordTest.passwordAESTest()?password@15.17:15.25DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2∏
]org.jabref.logic.shared.security.PasswordTest.passwordAESTest()?encryptedPassword@16.15:16.32DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ( 2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (´
Rorg.jabref.logic.shared.security.PasswordTest.passwordAESTest()?phrase@14.15:14.21VARIABLEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ("
typeString"
isFinalfalse"o
declarationStringZ<mark class="modifier"> </mark>String <mark class="class-field">phrase</mark> = "Password"*phrase2d
java.lang.StringTYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (∫
Torg.jabref.logic.shared.security.PasswordTest.passwordAESTest()?password@15.17:15.25VARIABLEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ("
typePassword"
isFinalfalse"à
declarationStrings<mark class="modifier"> </mark>Password <mark class="class-field">password</mark> = new Password(phrase, "someKey")*password2}
)org.jabref.logic.shared.security.PasswordTYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2™
Vorg.jabref.logic.shared.security.Password.Password(java.lang.String, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java  ((2¶
Rorg.jabref.logic.shared.security.PasswordTest.passwordAESTest()?phrase@14.15:14.21CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java) (/ä
]org.jabref.logic.shared.security.PasswordTest.passwordAESTest()?encryptedPassword@16.15:16.32VARIABLEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ( "
typeString"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>String <mark class="class-field">encryptedPassword</mark> = password.encrypt()*encryptedPassword2d
java.lang.StringTYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2á
3org.jabref.logic.shared.security.Password.encrypt()CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java, (32®
Torg.jabref.logic.shared.security.PasswordTest.passwordAESTest()?password@15.17:15.25CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java# (+›
Borg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()METHODJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java	 ("
isFinalfalse"Ë
declarationString“<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">passwordAsCharTest</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>GeneralSecurityException<mark class="modifier"><mark class="modifier">,</mark></mark> UnsupportedEncodingException"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*passwordAsCharTest2r
java.lang.String.toCharArray()CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java' (22á
3org.jabref.logic.shared.security.Password.encrypt()CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java4 (;2á
3org.jabref.logic.shared.security.Password.encrypt()CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java8 (?2†
Lorg.jabref.logic.shared.security.Password.Password(char[], java.lang.String)CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java$ (,2™
Vorg.jabref.logic.shared.security.Password.Password(java.lang.String, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java& (.2≠
Yorg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charPhrase@22.15:22.25CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java- (72Ø
[org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charPassword@23.17:23.29CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java' (32Ø
[org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringPhrase@26.15:26.27CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java/ (;2±
]org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringPassword@27.17:27.31CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java) (72∏
dorg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charEncryptedPassword@24.15:24.36CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (*2∫
forg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringEncryptedPassword@28.15:28.38CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java, (C2¥
Yorg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charPhrase@22.15:22.25DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2∂
[org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charPassword@23.17:23.29DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2ø
dorg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charEncryptedPassword@24.15:24.36DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ($2∂
[org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringPhrase@26.15:26.27DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2∏
]org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringPassword@27.17:27.31DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2¡
forg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringEncryptedPassword@28.15:28.38DECLARATIONJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (&2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (±
Yorg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charPhrase@22.15:22.25VARIABLEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ("
typechar"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>char[] <mark class="class-field">charPhrase</mark> = "Password".toCharArray()*
charPhrase2Z
char[]TYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2r
java.lang.String.toCharArray()CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java' (2 
[org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charPassword@23.17:23.29VARIABLEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ("
typePassword"
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark>Password <mark class="class-field">charPassword</mark> = new Password(charPhrase, "someKey")*charPassword2}
)org.jabref.logic.shared.security.PasswordTYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2†
Lorg.jabref.logic.shared.security.Password.Password(char[], java.lang.String)CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java$ (,2≠
Yorg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charPhrase@22.15:22.25CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java- (7§
dorg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charEncryptedPassword@24.15:24.36VARIABLEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ($"
typeString"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>String <mark class="class-field">charEncryptedPassword</mark> = charPassword.encrypt()*charEncryptedPassword2d
java.lang.StringTYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2á
3org.jabref.logic.shared.security.Password.encrypt()CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java4 (;2Ø
[org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?charPassword@23.17:23.29CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java' (3¿
[org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringPhrase@26.15:26.27VARIABLEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ("
typeString"
isFinalfalse"u
declarationString`<mark class="modifier"> </mark>String <mark class="class-field">stringPhrase</mark> = "Password"*stringPhrase2d
java.lang.StringTYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (ﬁ
]org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringPassword@27.17:27.31VARIABLEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java ("
typePassword"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Password <mark class="class-field">stringPassword</mark> = new Password(stringPhrase, "someKey")*stringPassword2}
)org.jabref.logic.shared.security.PasswordTYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2™
Vorg.jabref.logic.shared.security.Password.Password(java.lang.String, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java& (.2Ø
[org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringPhrase@26.15:26.27CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java/ (;Æ
forg.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringEncryptedPassword@28.15:28.38VARIABLEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (&"
typeString"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>String <mark class="class-field">stringEncryptedPassword</mark> = stringPassword.encrypt()*stringEncryptedPassword2d
java.lang.StringTYPEJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java (2á
3org.jabref.logic.shared.security.Password.encrypt()CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java8 (?2±
]org.jabref.logic.shared.security.PasswordTest.passwordAsCharTest()?stringPassword@27.17:27.31CALLJ
@src\test\java\org\jabref\logic\shared\security\PasswordTest.java) (7