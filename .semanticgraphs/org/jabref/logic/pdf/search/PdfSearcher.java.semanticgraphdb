
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java«

'org.jabref.logic.pdf.search.PdfSearcherCLASSD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java ("&
packageorg.jabref.logic.pdf.search"
isFinaltrue"
inner classfalse"

isAbstractfalse"ç
declarationStringx<mark class="modifier">public </mark><mark class="modifier">final </mark><mark class="modifier">class </mark>PdfSearcher"
accesspublic*PdfSearcher2∞
[org.jabref.logic.pdf.search.PdfSearcher.PdfSearcher(org.jabref.logic.pdf.search.PdfIndexer)DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java# #(2ß
Rorg.jabref.logic.pdf.search.PdfSearcher.of(org.jabref.logic.pdf.search.PdfIndexer)DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java' '( 2ö
Eorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java2 2("2è
:org.jabref.logic.pdf.search.PdfSearcher?LOGGER@30.32:30.38DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java  (&2ê
;org.jabref.logic.pdf.search.PdfSearcher?indexer@32.29:32.36DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java   ($2ú
Gorg.jabref.logic.pdf.search.PdfSearcher?englishStemAnalyzer@33.32:33.51DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java!  !(3¨
[org.jabref.logic.pdf.search.PdfSearcher.PdfSearcher(org.jabref.logic.pdf.search.PdfIndexer)CONSTRUCTORD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java# #("v
declarationStringa<mark class="modifier">private </mark><mark class="method">PdfSearcher</mark>(PdfIndexer indexer)*PdfSearcher2±
corg.jabref.logic.pdf.search.PdfSearcher.PdfSearcher(org.jabref.logic.pdf.search.PdfIndexer)!indexerCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java$ $(2â
;org.jabref.logic.pdf.search.PdfSearcher?indexer@32.29:32.36CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java$ $(2∂
corg.jabref.logic.pdf.search.PdfSearcher.PdfSearcher(org.jabref.logic.pdf.search.PdfIndexer)!indexer	PARAMETERD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java## #(*2|
'org.jabref.logic.pdf.search.PdfSearcherRETURN_TYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java# #(Ñ
corg.jabref.logic.pdf.search.PdfSearcher.PdfSearcher(org.jabref.logic.pdf.search.PdfIndexer)!indexer	PARAMETERD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java## #(*"
type
PdfIndexer"
isFinalfalse"'
declarationStringPdfIndexer indexer*indexer2t
&org.jabref.logic.pdf.search.PdfIndexerTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java# #("˚
Rorg.jabref.logic.pdf.search.PdfSearcher.of(org.jabref.logic.pdf.search.PdfIndexer)METHODD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java' '( "
isFinalfalse"Ì
declarationString◊<mark class="modifier">public </mark><mark class="modifier">static </mark>PdfSearcher <mark class="method">of</mark>(PdfIndexer indexer)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStatictrue"
accesspublic"

isAbstractfalse"
typePdfSearcher*of2©
[org.jabref.logic.pdf.search.PdfSearcher.PdfSearcher(org.jabref.logic.pdf.search.PdfIndexer)CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java( ((2®
Zorg.jabref.logic.pdf.search.PdfSearcher.of(org.jabref.logic.pdf.search.PdfIndexer)!indexerCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java( ((&2≠
Zorg.jabref.logic.pdf.search.PdfSearcher.of(org.jabref.logic.pdf.search.PdfIndexer)!indexer	PARAMETERD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java', '(32|
'org.jabref.logic.pdf.search.PdfSearcherRETURN_TYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java' '(˚
Zorg.jabref.logic.pdf.search.PdfSearcher.of(org.jabref.logic.pdf.search.PdfIndexer)!indexer	PARAMETERD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java', '(3"
type
PdfIndexer"
isFinalfalse"'
declarationStringPdfIndexer indexer*indexer2t
&org.jabref.logic.pdf.search.PdfIndexerTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java'! '(+Å>
Eorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)METHODD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java2 2(""
isFinalfalse"≈
declarationStringØ<mark class="modifier">public </mark>PdfSearchResults <mark class="method">search</mark>(final String searchString<mark class="modifier"><mark class="modifier">,</mark></mark> final <mark class="modifier">int</mark> maxHits)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typePdfSearchResults*search2ã
=org.jabref.model.strings.StringUtil.isBlank(java.lang.String)CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java3 3(2É
5java.util.Objects.requireNonNull(T, java.lang.String)CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java3' 3(52Ö
7org.jabref.logic.pdf.search.PdfIndexer.getIndexWriter()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java=< =(J2j
java.util.Optional.isEmpty()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java>  >('2f
java.util.Optional.get()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaBK B(N2c
java.util.List.add(E)CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaG G(2ç
?org.jabref.model.pdf.search.PdfSearchResults.PdfSearchResults()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java4 4('2õ
Mjava.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java7 7(.2m
java.util.ArrayList.ArrayList()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java:, :(72ç
?org.jabref.model.pdf.search.PdfSearchResults.PdfSearchResults()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java@ @('2Ô
†org.jabref.model.pdf.search.SearchResult.SearchResult(org.apache.lucene.search.IndexSearcher, org.apache.lucene.search.Query, org.apache.lucene.search.ScoreDoc)CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaG# G(/2≈
worg.jabref.model.pdf.search.PdfSearchResults.PdfSearchResults(java.util.List<org.jabref.model.pdf.search.SearchResult>)CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaI I('2ç
?org.jabref.model.pdf.search.PdfSearchResults.PdfSearchResults()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaL L('2†
Rorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!searchStringCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java36 3(B2õ
Morg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!maxHitsCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java6 6(2õ
Morg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!maxHitsCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java7` 7(g2â
;org.jabref.logic.pdf.search.PdfSearcher?indexer@32.29:32.36CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java=4 =(;2≥
eorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?optionalIndexWriter@61.30:61.49CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java> >(2à
:org.jabref.logic.pdf.search.PdfSearcher?LOGGER@30.32:30.38CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java? ?(2≥
eorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?optionalIndexWriter@61.30:61.49CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaB7 B(J2ï
Gorg.jabref.logic.pdf.search.PdfSearcher?englishStemAnalyzer@33.32:33.51CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaC@ C(S2†
Rorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!searchStringCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaC[ C(g2¶
Xorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?reader@66.25:66.31CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaD7 D(=2®
Zorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?searcher@68.26:68.34CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaE E(&2•
Worg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?query@67.18:67.23CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaE. E(32õ
Morg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!maxHitsCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaE5 E(<2ß
Yorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?results@69.20:69.27CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaF% F(,2™
\org.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?resultDocs@58.27:58.37CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaG G(2®
Zorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?searcher@68.26:68.34CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaG0 G(82•
Worg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?query@67.18:67.23CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaG: G(?2®
Zorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?scoreDoc@70.26:70.34CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaGA G(I2™
\org.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?resultDocs@58.27:58.37CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaI( I(22à
:org.jabref.logic.pdf.search.PdfSearcher?LOGGER@30.32:30.38CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaK K(2†
Rorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!searchStringCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaK7 K(C2°
Sorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?e@74.32:74.33CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaKE K(F2•
Rorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!searchString	PARAMETERD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java20 2(<2†
Morg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!maxHits	PARAMETERD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java2H 2(O2±
\org.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?resultDocs@58.27:58.37DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java: :(%2∫
eorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?optionalIndexWriter@61.30:61.49DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java= =(12≠
Xorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?reader@66.25:66.31DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaB B(2¨
Worg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?query@67.18:67.23DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaC C(2Ø
Zorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?searcher@68.26:68.34DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaD D("2Æ
Yorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?results@69.20:69.27DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaE E(2Ø
Zorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?scoreDoc@70.26:70.34DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaF F("2®
Sorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?e@74.32:74.33DECLARATIOND
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaJ  J(!2Å
,org.jabref.model.pdf.search.PdfSearchResultsRETURN_TYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java2 2(ø
\org.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?resultDocs@58.27:58.37VARIABLED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java: :(%"
typeList<SearchResult>"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>List<SearchResult> <mark class="class-field">resultDocs</mark> = new ArrayList<>()*
resultDocs2\
java.util.ListTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java: :(2
(org.jabref.model.pdf.search.SearchResultTYPE_ARGUMENTD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java: :(2m
java.util.ArrayList.ArrayList()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java:, :(7å
eorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?optionalIndexWriter@61.30:61.49VARIABLED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java= =(1"
typeOptional<IndexWriter>"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>Optional<IndexWriter> <mark class="class-field">optionalIndexWriter</mark> = indexer.getIndexWriter()*optionalIndexWriter2`
java.util.OptionalTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java= =(2z
#org.apache.lucene.index.IndexWriterTYPE_ARGUMENTD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java= =(2Ö
7org.jabref.logic.pdf.search.PdfIndexer.getIndexWriter()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java=< =(J2â
;org.jabref.logic.pdf.search.PdfSearcher?indexer@32.29:32.36CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java=4 =(;á
Xorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?reader@66.25:66.31VARIABLED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaB B("
typeIndexReader"
isFinalfalse"ö
declarationStringÑ<mark class="modifier"> </mark>IndexReader <mark class="class-field">reader</mark> = DirectoryReader.open(optionalIndexWriter.get())*reader2q
#org.apache.lucene.index.IndexReaderTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaB B(2f
java.util.Optional.get()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaBK B(N2≥
eorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?optionalIndexWriter@61.30:61.49CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaB7 B(JØ
Worg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?query@67.18:67.23VARIABLED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaC C("
typeQuery"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>Query <mark class="class-field">query</mark> = new MultiFieldQueryParser(PDF_FIELDS, englishStemAnalyzer).parse(searchString)*query2l
org.apache.lucene.search.QueryTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaC C(2ï
Gorg.jabref.logic.pdf.search.PdfSearcher?englishStemAnalyzer@33.32:33.51CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaC@ C(S2†
Rorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!searchStringCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaC[ C(gà
Zorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?searcher@68.26:68.34VARIABLED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaD D(""
typeIndexSearcher"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark>IndexSearcher <mark class="class-field">searcher</mark> = new IndexSearcher(reader)*searcher2t
&org.apache.lucene.search.IndexSearcherTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaD D(2¶
Xorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?reader@66.25:66.31CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaD7 D(=¡
Yorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?results@69.20:69.27VARIABLED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaE E("
typeTopDocs"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>TopDocs <mark class="class-field">results</mark> = searcher.search(query, maxHits)*results2n
 org.apache.lucene.search.TopDocsTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaE E(2®
Zorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?searcher@68.26:68.34CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaE E(&2•
Worg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?query@67.18:67.23CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaE. E(32õ
Morg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!maxHitsCALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaE5 E(<≥
Zorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?scoreDoc@70.26:70.34VARIABLED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaF F(""
typeScoreDoc"
isFinalfalse"f
declarationStringQ<mark class="modifier"> </mark>ScoreDoc <mark class="class-field">scoreDoc</mark>*scoreDoc2o
!org.apache.lucene.search.ScoreDocTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaF F(ﬁ
Rorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!searchString	PARAMETERD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java20 2(<"
typeString"
isFinaltrue"(
declarationStringString searchString*searchString2^
java.lang.StringTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java2) 2(/⁄
Morg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)!maxHits	PARAMETERD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java2H 2(O"
typeint"
isFinaltrue">
declarationString)<mark class="modifier">int</mark> maxHits*maxHits2Q
intTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java2D 2(G˛
Sorg.jabref.logic.pdf.search.PdfSearcher.search(java.lang.String, int)?e@74.32:74.33VARIABLED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaJ  J(!"
typeParseException"
isFinalfalse"%
declarationStringParseException e*e2Ç
4org.apache.lucene.queryparser.classic.ParseExceptionTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.javaJ J(ö
:org.jabref.logic.pdf.search.PdfSearcher?LOGGER@30.32:30.38VALUED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java  (&"
isFinaltrue"
typeLogger"‡
declarationString <mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(LibraryTab.class);"
isStatictrue"
accessprivate*LOGGER2^
org.slf4j.LoggerTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java (È
;org.jabref.logic.pdf.search.PdfSearcher?indexer@32.29:32.36VALUED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java   ($"
isFinaltrue"
type
PdfIndexer"í
declarationString}<mark class="modifier">private </mark><mark class="modifier">final </mark>PdfIndexer <mark class="class-field">indexer</mark>"
isStaticfalse"
accessprivate*indexer2t
&org.jabref.logic.pdf.search.PdfIndexerTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java   (º
Gorg.jabref.logic.pdf.search.PdfSearcher?englishStemAnalyzer@33.32:33.51VARIABLED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java!  !(3"
isFinalfalse"
typeEnglishStemAnalyzer"°
declarationStringã<mark class="modifier">private </mark>EnglishStemAnalyzer <mark class="class-field">englishStemAnalyzer</mark> = new EnglishStemAnalyzer();"
isStaticfalse"
accessprivate*englishStemAnalyzer2}
/org.jabref.model.pdf.search.EnglishStemAnalyzerTYPED
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java! !(2ì
Eorg.jabref.model.pdf.search.EnglishStemAnalyzer.EnglishStemAnalyzer()CALLD
:src\main\java\org\jabref\logic\pdf\search\PdfSearcher.java!: !(M