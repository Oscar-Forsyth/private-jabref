
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî0
+org.jabref.logic.exporter.BibDatabaseWriterCLASSH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java6 6('"$
packageorg.jabref.logic.exporter"
isFinalfalse"
inner classfalse"

isAbstracttrue"ó
declarationStringÅ<mark class="modifier">public </mark><mark class="modifier">abstract </mark><mark class="modifier">class </mark>BibDatabaseWriter"
accesspublic*BibDatabaseWriter2Ê
åorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaA A(2Î
ëorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaL% L(52€
Åorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(org.jabref.model.entry.BibEntry, org.jabref.model.metadata.MetaData)DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javae$ e(42º
corg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javai. i(@2˚
üorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ! Ñ(12£
Horg.jabref.logic.exporter.BibDatabaseWriter.getSaveActionsFieldChanges()DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaê ê(72¡
forg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó ó(2˘
ùorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§ §("2⁄
org.jabref.logic.exporter.BibDatabaseWriter.writeProlog(org.jabref.model.database.BibDatabaseContext, java.nio.charset.Charset)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java€ €('2ﬁ
Çorg.jabref.logic.exporter.BibDatabaseWriter.writeEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java› ›(&2¶
Korg.jabref.logic.exporter.BibDatabaseWriter.writeEpilogue(java.lang.String)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaﬂ ﬂ()2˜
õorg.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‰ ‰( 2—
vorg.jabref.logic.exporter.BibDatabaseWriter.writeMetaDataItem(java.util.Map.Entry<java.lang.String, java.lang.String>)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÔ Ô(-2¶
Korg.jabref.logic.exporter.BibDatabaseWriter.writePreamble(java.lang.String)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÒ Ò()2®
Morg.jabref.logic.exporter.BibDatabaseWriter.writeDatabaseID(java.lang.String)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÛ Û(+2∫
_org.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˚ ˚(2É
ßorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî î(2º
aorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, int)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆ Æ('2⁄
org.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinitions(java.util.SortedSet<org.jabref.model.entry.BibEntryType>)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java± ±(,2ƒ
iorg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinition(org.jabref.model.entry.BibEntryType)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑ ∑(42˚
üorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaº  º(42¢
Iorg.jabref.logic.exporter.BibDatabaseWriter?REFERENCE_PATTERN@58.33:58.50DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java:! :(22ö
Aorg.jabref.logic.exporter.BibDatabaseWriter?bibWriter@59.30:59.39DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java; ;('2¢
Iorg.jabref.logic.exporter.BibDatabaseWriter?saveConfiguration@60.51:60.68DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java<3 <(D2¶
Morg.jabref.logic.exporter.BibDatabaseWriter?keyPatternPreferences@61.50:61.71DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java=2 =(G2®
Oorg.jabref.logic.exporter.BibDatabaseWriter?saveActionsFieldChanges@62.38:62.61DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java>& >(=2¢
Iorg.jabref.logic.exporter.BibDatabaseWriter?entryTypesManager@63.41:63.58DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java?) ?(:2ç
4org.jabref.logic.exporter.BibDatabaseWriter.SaveTypeDECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java8 8(‰)
åorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)CONSTRUCTORH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaA A("¿
declarationString™<mark class="modifier">public </mark><mark class="method">BibDatabaseWriter</mark>(BibWriter bibWriter<mark class="modifier"><mark class="modifier">,</mark></mark> SelfContainedSaveConfiguration saveConfiguration<mark class="modifier"><mark class="modifier">,</mark></mark> CitationKeyPatternPreferences keyPatternPreferences<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntryTypesManager entryTypesManager)*BibDatabaseWriter2u
#java.util.Objects.requireNonNull(T)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaE! E(/2Ñ
2org.jabref.model.metadata.SaveOrder.getOrderType()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaI0 I(<2å
:org.jabref.logic.exporter.SaveConfiguration.getSaveOrder()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaI! I(-2È
ñorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!bibWriterCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaE0 E(92Ò
ûorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!saveConfigurationCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaF! F(22ı
¢org.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!keyPatternPreferencesCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaG% G(:2Ò
ûorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!entryTypesManagerCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaH! H(22Ò
ûorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!saveConfigurationCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaI I( 2ì
Aorg.jabref.logic.exporter.BibDatabaseWriter?bibWriter@59.30:59.39CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaE E(2õ
Iorg.jabref.logic.exporter.BibDatabaseWriter?saveConfiguration@60.51:60.68CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaF F(2ü
Morg.jabref.logic.exporter.BibDatabaseWriter?keyPatternPreferences@61.50:61.71CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaG G("2õ
Iorg.jabref.logic.exporter.BibDatabaseWriter?entryTypesManager@63.41:63.58CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaH H(2Ó
ñorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!bibWriter	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaA' A(02ˆ
ûorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!saveConfiguration	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaB< B(M2˙
¢org.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!keyPatternPreferences	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaC; C(P2ˆ
ûorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!entryTypesManager	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaD2 D(C2Ñ
+org.jabref.logic.exporter.BibDatabaseWriterRETURN_TYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaA A(ø
ñorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!bibWriter	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaA' A(0"
type	BibWriter"
isFinalfalse"(
declarationStringBibWriter bibWriter*	bibWriter2u
#org.jabref.logic.exporter.BibWriterTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaA A(&ó
ûorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!saveConfiguration	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaB< B(M"&
typeSelfContainedSaveConfiguration"
isFinalfalse"E
declarationString0SelfContainedSaveConfiguration saveConfiguration*saveConfiguration2ä
8org.jabref.logic.exporter.SelfContainedSaveConfigurationTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaB B(;™
¢org.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!keyPatternPreferences	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaC; C(P"%
typeCitationKeyPatternPreferences"
isFinalfalse"H
declarationString3CitationKeyPatternPreferences keyPatternPreferences*keyPatternPreferences2ì
Aorg.jabref.logic.citationkeypattern.CitationKeyPatternPreferencesTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaC C(:ı
ûorg.jabref.logic.exporter.BibDatabaseWriter.BibDatabaseWriter(org.jabref.logic.exporter.BibWriter, org.jabref.logic.exporter.SelfContainedSaveConfiguration, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.model.entry.BibEntryTypesManager)!entryTypesManager	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaD2 D(C"
typeBibEntryTypesManager"
isFinalfalse";
declarationString&BibEntryTypesManager entryTypesManager*entryTypesManager2}
+org.jabref.model.entry.BibEntryTypesManagerTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaD D(1∏B
ëorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)METHODH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaL% L(5"
isFinalfalse"ì
declarationString˝<mark class="modifier">private </mark><mark class="modifier">static </mark>List&lt;FieldChange&gt; <mark class="method">applySaveActions</mark>(List&lt;BibEntry&gt; toChange<mark class="modifier"><mark class="modifier">,</mark></mark> MetaData metaData)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeList<FieldChange>*applySaveActions2Ö
3org.jabref.model.metadata.MetaData.getSaveActions()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaO@ O(N2ñ
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaP P(2ä
8java.util.List.addAll(java.util.Collection<? extends E>)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaS S(2≥
aorg.jabref.logic.cleanup.FieldFormatterCleanups.applySaveActions(org.jabref.model.entry.BibEntry)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaS' S(72r
 java.util.stream.Stream.toList()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java[ [(2¢
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaZ Z(2o
java.util.stream.Stream.of(T)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaY Y(2ä
8java.util.List.addAll(java.util.Collection<? extends E>)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java^ ^(2©
Worg.jabref.logic.cleanup.FieldFormatterCleanup.cleanup(org.jabref.model.entry.BibEntry)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java^) ^(02q
java.util.ArrayList.ArrayList()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaM( M(32´
Yorg.jabref.logic.formatter.bibtexfields.TrimWhitespaceFormatter.TrimWhitespaceFormatter()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaY Y(52ﬂ
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaZ, Z(A2Ì
öorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)!metaDataCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaO7 O(?2¸
©org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?saveActions@79.41:79.52CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaP P(2Ì
öorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)!toChangeCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaR" R(*2¯
•org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?changes@77.26:77.33CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaS S(2¯
•org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?actions@80.30:80.37CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaS S(&2ˆ
£org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?entry@82.26:82.31CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaS8 S(=2˙
ßorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?formatter@90.27:90.36CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaZd Z(m2Ä
≠org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?preSaveCleanups@88.36:88.51CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java\/ \(>2Ì
öorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)!toChangeCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java]" ](*2¯
•org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?changes@77.26:77.33CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java^ ^(2˙
ßorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?formatter@92.35:92.44CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java^ ^((2ˆ
£org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?entry@93.26:93.31CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java^1 ^(62¯
•org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?changes@77.26:77.33CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javab b(2Ú
öorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)!toChange	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaLE L(M2Ú
öorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)!metaData	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaLX L(`2ˇ
•org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?changes@77.26:77.33DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaM M(!2É
©org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?saveActions@79.41:79.52DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaO) O(42˝
£org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?entry@82.26:82.31DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaR R(2á
≠org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?preSaveCleanups@88.36:88.51DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaX$ X(32Å
ßorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?formatter@92.35:92.44DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java\# \(,2˝
£org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?entry@93.26:93.31DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java] ](2ˇ
•org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?actions@80.30:80.37DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaP P(%2Å
ßorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?formatter@90.27:90.36DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaZ Z($2g
java.util.ListRETURN_TYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaL L(2~
org.jabref.model.FieldChangeRETURN_TYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaL L(#Ö
•org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?changes@77.26:77.33VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaM M(!"
typeList<FieldChange>"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>List<FieldChange> <mark class="class-field">changes</mark> = new ArrayList<>()*changes2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaM M(2w
org.jabref.model.FieldChangeTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaM M(2q
java.util.ArrayList.ArrayList()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaM( M(3’
©org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?saveActions@79.41:79.52VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaO) O(4"(
type Optional<FieldFormatterCleanups>"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>Optional<FieldFormatterCleanups> <mark class="class-field">saveActions</mark> = metaData.getSaveActions()*saveActions2d
java.util.OptionalTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaO O(2ä
/org.jabref.logic.cleanup.FieldFormatterCleanupsTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaO O('2Ö
3org.jabref.model.metadata.MetaData.getSaveActions()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaO@ O(N2Ì
öorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)!metaDataCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaO7 O(?˝
£org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?entry@82.26:82.31VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaR R("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2q
org.jabref.model.entry.BibEntryTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaR R(‚
≠org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?preSaveCleanups@88.36:88.51VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaX$ X(3"#
typeList<FieldFormatterCleanup>"
isFinalfalse"é
declarationString¯<mark class="modifier"> </mark>List<FieldFormatterCleanup> <mark class="class-field">preSaveCleanups</mark> = Stream.of(new TrimWhitespaceFormatter()).map(formatter -> new FieldFormatterCleanup(InternalField.INTERNAL_ALL_FIELD, formatter)).toList()*preSaveCleanups2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaX X(2â
.org.jabref.logic.cleanup.FieldFormatterCleanupTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaX X("2r
 java.util.stream.Stream.toList()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java[ [(2¢
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaZ Z(2o
java.util.stream.Stream.of(T)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaY Y(2´
Yorg.jabref.logic.formatter.bibtexfields.TrimWhitespaceFormatter.TrimWhitespaceFormatter()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaY Y(52ﬂ
åorg.jabref.logic.cleanup.FieldFormatterCleanup.FieldFormatterCleanup(org.jabref.model.entry.field.Field, org.jabref.logic.cleanup.Formatter)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaZ, Z(A2˙
ßorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?formatter@90.27:90.36CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaZd Z(m≥
ßorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?formatter@92.35:92.44VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java\# \(,"
typeFieldFormatterCleanup"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>FieldFormatterCleanup <mark class="class-field">formatter</mark>*	formatter2Ä
.org.jabref.logic.cleanup.FieldFormatterCleanupTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java\ \("˝
£org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?entry@93.26:93.31VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java] ]("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2q
org.jabref.model.entry.BibEntryTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java] ](≤
öorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)!toChange	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaLE L(M"
typeList<BibEntry>"
isFinalfalse",
declarationStringList<BibEntry> toChange*toChange2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaL6 L(:2z
org.jabref.model.entry.BibEntryTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaL; L(Cæ
öorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)!metaData	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaLX L(`"
typeMetaData"
isFinalfalse"&
declarationStringMetaData metaData*metaData2t
"org.jabref.model.metadata.MetaDataTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaLO L(W∆
•org.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?actions@80.30:80.37VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaP P(%"
type"
isFinalfalse"
declarationString actions*actions2TYPEÃ
ßorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)?formatter@90.27:90.36VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaZ Z($"
type"
isFinalfalse"
declarationString
 formatter*	formatter2TYPE¢
Åorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(org.jabref.model.entry.BibEntry, org.jabref.model.metadata.MetaData)METHODH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javae$ e(4"
isFinalfalse"É
declarationStringÌ<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;FieldChange&gt; <mark class="method">applySaveActions</mark>(BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> MetaData metaData)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<FieldChange>*applySaveActions2‰
ëorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaf f(2x
&java.util.Collections.singletonList(T)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaf, f(92⁄
áorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(org.jabref.model.entry.BibEntry, org.jabref.model.metadata.MetaData)!entryCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaf: f(?2›
äorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(org.jabref.model.entry.BibEntry, org.jabref.model.metadata.MetaData)!metaDataCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javafB f(J2ﬂ
áorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(org.jabref.model.entry.BibEntry, org.jabref.model.metadata.MetaData)!entry	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javae> e(C2‚
äorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(org.jabref.model.entry.BibEntry, org.jabref.model.metadata.MetaData)!metaData	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaeN e(V2g
java.util.ListRETURN_TYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javae e(2~
org.jabref.model.FieldChangeRETURN_TYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javae e("¢
áorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(org.jabref.model.entry.BibEntry, org.jabref.model.metadata.MetaData)!entry	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javae> e(C"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2q
org.jabref.model.entry.BibEntryTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javae5 e(=Æ
äorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(org.jabref.model.entry.BibEntry, org.jabref.model.metadata.MetaData)!metaData	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaeN e(V"
typeMetaData"
isFinalfalse"&
declarationStringMetaData metaData*metaData2t
"org.jabref.model.metadata.MetaDataTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaeE e(Mº%
corg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)METHODH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javai. i(@"
isFinalfalse"À
declarationStringµ<mark class="modifier">private </mark><mark class="modifier">static </mark>List&lt;Comparator&lt;BibEntry&gt;&gt; <mark class="method">getSaveComparators</mark>(SaveOrder saveOrder)"
isStatictrue"
accessprivate"

isAbstractfalse""
typeList<Comparator<BibEntry>>*getSaveComparators2g
java.util.List.add(E)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javan n(2Ñ
2org.jabref.model.metadata.SaveOrder.getOrderType()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javap p("2g
java.util.List.add(E)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javar r(2¢
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javav? v(B2o
java.util.Collection.stream()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javauQ u(W2á
5org.jabref.model.metadata.SaveOrder.getSortCriteria()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javau? u(N2ä
8java.util.List.addAll(java.util.Collection<? extends E>)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javax x(2g
java.util.List.add(E)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javay y(2q
java.util.ArrayList.ArrayList()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaj5 j(@2¶
Torg.jabref.logic.bibtex.comparator.CrossRefEntryComparator.CrossRefEntryComparator()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javan n(32ê
>org.jabref.logic.bibtex.comparator.IdComparator.IdComparator()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javar  r(,2∏
forg.jabref.logic.bibtex.comparator.FieldComparator.FieldComparator(org.jabref.model.entry.field.Field)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javay  y(/2œ
}org.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?comparators@106.35:106.46CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javan n(2ø
morg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)!saveOrderCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javap p(2œ
}org.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?comparators@106.35:106.46CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javar r(2ø
morg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)!saveOrderCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javau5 u(>2œ
}org.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?comparators@106.35:106.46CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javax x(2’
Çorg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?fieldComparators@117.34:117.50CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javax x(/2œ
}org.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?comparators@106.35:106.46CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javay y(2œ
}org.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?comparators@106.35:106.46CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java| |(2ƒ
morg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)!saveOrder	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaiK i(T2÷
}org.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?comparators@106.35:106.46DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaj# j(.2‹
Çorg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?fieldComparators@117.34:117.50DECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javau" u(22g
java.util.ListRETURN_TYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javai i(2v
java.util.ComparatorRETURN_TYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javai i("2Å
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javai# i(+Í
}org.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?comparators@106.35:106.46VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaj# j(.""
typeList<Comparator<BibEntry>>"
isFinalfalse"è
declarationStringz<mark class="modifier"> </mark>List<Comparator<BibEntry>> <mark class="class-field">comparators</mark> = new ArrayList<>()*comparators2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaj j(2o
java.util.ComparatorTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaj j(2z
org.jabref.model.entry.BibEntryTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaj j( 2q
java.util.ArrayList.ArrayList()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaj5 j(@≠
Çorg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)?fieldComparators@117.34:117.50VARIABLEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javau" u(2"
typeList<FieldComparator>"
isFinalfalse"∆
declarationString∞<mark class="modifier"> </mark>List<FieldComparator> <mark class="class-field">fieldComparators</mark> = saveOrder.getSortCriteria().stream().map(FieldComparator::new).toList()*fieldComparators2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javau u(2ç
2org.jabref.logic.bibtex.comparator.FieldComparatorTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javau u( 2r
 java.util.stream.Stream.toList()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaw? w(E2¢
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javav? v(B2o
java.util.Collection.stream()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javauQ u(W2á
5org.jabref.model.metadata.SaveOrder.getSortCriteria()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javau? u(N2ø
morg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)!saveOrderCALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javau5 u(>ï
morg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)!saveOrder	PARAMETERH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaiK i(T"
type	SaveOrder"
isFinalfalse"(
declarationStringSaveOrder saveOrder*	saveOrder2u
#org.jabref.model.metadata.SaveOrderTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaiA i(JÒ'
üorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ! Ñ(1"
isFinalfalse"£
declarationStringç<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;BibEntry&gt; <mark class="method">getSortedEntries</mark>(List&lt;BibEntry&gt; entriesToSort<mark class="modifier"><mark class="modifier">,</mark></mark> SelfContainedSaveOrder saveOrder)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<BibEntry>*getSortedEntries2w
#java.util.Objects.requireNonNull(T)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÖ Ö(2w
#java.util.Objects.requireNonNull(T)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÜ Ü(2∑
corg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaà1 à(C2à
4java.util.List.sort(java.util.Comparator<? super E>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaå å(2î
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã$ ã(/2Ç
≠org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!entriesToSortCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÖ Ö(,2˛
©org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!saveOrderCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÜ Ü((2˛
©org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!saveOrderCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaàD à(M2é
πorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?comparators@136.35:136.46CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâT â(_2Ç
≠org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!entriesToSortCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã0 ã(=2â
¥org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?sorted@139.23:139.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaå å(2í
Ωorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?comparatorStack@137.39:137.54CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaå å(#2â
¥org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?sorted@139.23:139.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaç ç(2á
≠org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!entriesToSort	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑA Ñ(N2É
©org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!saveOrder	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑg Ñ(p2ï
πorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?comparators@136.35:136.46DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaà# à(.2ô
Ωorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?comparatorStack@137.39:137.54DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâ' â(62ê
¥org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?sorted@139.23:139.29DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã ã(2i
java.util.ListRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ Ñ(2É
org.jabref.model.entry.BibEntryRETURN_TYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ Ñ(Ñ

πorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?comparators@136.35:136.46VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaà# à(.""
typeList<Comparator<BibEntry>>"
isFinalfalse"ú
declarationStringÜ<mark class="modifier"> </mark>List<Comparator<BibEntry>> <mark class="class-field">comparators</mark> = getSaveComparators(saveOrder)*comparators2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaà à(2q
java.util.ComparatorTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaà à(2|
org.jabref.model.entry.BibEntryTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaà à( 2∑
corg.jabref.logic.exporter.BibDatabaseWriter.getSaveComparators(org.jabref.model.metadata.SaveOrder)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaà1 à(C2˛
©org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!saveOrderCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaàD à(MØ
Ωorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?comparatorStack@137.39:137.54VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâ' â(6"&
typeFieldComparatorStack<BibEntry>"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>FieldComparatorStack<BibEntry> <mark class="class-field">comparatorStack</mark> = new FieldComparatorStack<>(comparators)*comparatorStack2ã
7org.jabref.logic.bibtex.comparator.FieldComparatorStackTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâ â(2|
org.jabref.model.entry.BibEntryTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâ â(%2é
πorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?comparators@136.35:136.46CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâT â(_À
¥org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)?sorted@139.23:139.29VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã ã("
typeList<BibEntry>"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">sorted</mark> = new ArrayList<>(entriesToSort)*sorted2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã ã(2|
org.jabref.model.entry.BibEntryTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã ã(2î
@java.util.ArrayList.ArrayList(java.util.Collection<? extends E>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã$ ã(/2Ç
≠org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!entriesToSortCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã0 ã(=’
≠org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!entriesToSort	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑA Ñ(N"
typeList<BibEntry>"
isFinalfalse"1
declarationStringList<BibEntry> entriesToSort*entriesToSort2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ2 Ñ(62|
org.jabref.model.entry.BibEntryTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ7 Ñ(?˛
©org.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)!saveOrder	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑg Ñ(p"
typeSelfContainedSaveOrder"
isFinalfalse"5
declarationString SelfContainedSaveOrder saveOrder*	saveOrder2Ñ
0org.jabref.model.metadata.SelfContainedSaveOrderTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑP Ñ(f‹
Horg.jabref.logic.exporter.BibDatabaseWriter.getSaveActionsFieldChanges()METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaê ê(7"
isFinalfalse"ä
declarationStringu<mark class="modifier">public </mark>List&lt;FieldChange&gt; <mark class="method">getSaveActionsFieldChanges</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<FieldChange>*getSaveActionsFieldChanges2ó
Cjava.util.Collections.unmodifiableList(java.util.List<? extends T>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaë ë(+2£
Oorg.jabref.logic.exporter.BibDatabaseWriter?saveActionsFieldChanges@62.38:62.61CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaë, ë(C2i
java.util.ListRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaê ê(2Ä
org.jabref.model.FieldChangeRETURN_TYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaê ê(ﬁ
forg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó ó("
isFinalfalse"¸
declarationStringÊ<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">saveDatabase</mark>(BibDatabaseContext bibDatabaseContext)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*saveDatabase2Ü
2org.jabref.model.database.BibDatabase.getEntries()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaòB ò(L2é
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaò4 ò(?2Ú
ùorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú ú(2Õ
yorg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaò! ò(32Œ
zorg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)?entry@154.56:154.61CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaöB ö(G2Õ
yorg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú ú(-2–
|org.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)?entries@152.23:152.30CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú/ ú(62“
yorg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)!bibDatabaseContext	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó0 ó(B2◊
|org.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)?entries@152.23:152.30DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaò ò(2’
zorg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)?entry@154.56:154.61DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaö8 ö(=2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó ó(˜

|org.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)?entries@152.23:152.30VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaò ò("
typeList<BibEntry>"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">entries</mark> = bibDatabaseContext.getDatabase().getEntries().stream().filter(entry -> !entry.isEmpty()).toList()*entries2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaò ò(2|
org.jabref.model.entry.BibEntryTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaò ò(2Ü
2org.jabref.model.database.BibDatabase.getEntries()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaòB ò(L2é
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaò4 ò(?2Õ
yorg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaò! ò(32Œ
zorg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)?entry@154.56:154.61CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaöB ö(G”
yorg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)!bibDatabaseContext	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó0 ó(B"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2Ä
,org.jabref.model.database.BibDatabaseContextTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó ó(/ò
zorg.jabref.logic.exporter.BibDatabaseWriter.saveDatabase(org.jabref.model.database.BibDatabaseContext)?entry@154.56:154.61VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaö8 ö(="
type"
isFinalfalse"
declarationString entry*entry2TYPE˝í
ùorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§ §(""
isFinalfalse"‹
declarationString∆<mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">savePartOfDatabase</mark>(BibDatabaseContext bibDatabaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;BibEntry&gt; entries)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*savePartOfDatabase2è
;org.jabref.model.database.BibDatabase.getSharedDatabaseID()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java•U •(h2é
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java•G •(R2ç
9org.jabref.logic.exporter.SaveConfiguration.getSaveType()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java© ©()2p
java.util.Optional.orElse(T)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™M ™(S2Ñ
0org.jabref.model.metadata.MetaData.getEncoding()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™? ™(J2é
:org.jabref.model.database.BibDatabaseContext.getMetaData()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™1 ™(<2”
org.jabref.logic.exporter.BibDatabaseWriter.writeProlog(org.jabref.model.database.BibDatabaseContext, java.nio.charset.Charset)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java´ ´(2Ö
1org.jabref.logic.exporter.BibWriter.finishBlock()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆ Æ(2ü
Korg.jabref.logic.exporter.BibDatabaseWriter.writePreamble(java.lang.String)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java± ±(2p
java.util.Optional.orElse(T)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java±E ±(K2á
3org.jabref.model.database.BibDatabase.getPreamble()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java±7 ±(B2é
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java±) ±(42≥
_org.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¥ ¥(2é
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¥( ¥(32Ù
üorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑' ∑(72®
Torg.jabref.logic.exporter.SelfContainedSaveConfiguration.getSelfContainedSaveOrder()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑S ∑(l2Ê
ëorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏. ∏(>2é
:org.jabref.model.database.BibDatabaseContext.getMetaData()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏a ∏(l2å
8java.util.List.addAll(java.util.Collection<? extends E>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaπ  π(&2∫
forg.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.shouldGenerateCiteKeysBeforeSaving()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∫" ∫(D2Ù
üorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaª+ ª(?2å
8java.util.List.addAll(java.util.Collection<? extends E>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaº$ º(*2‡
ãorg.jabref.model.entry.BibEntryTypesManager.isCustomType(org.jabref.model.entry.types.EntryType, org.jabref.model.database.BibDatabaseMode)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∆" ∆(.2}
)org.jabref.model.entry.BibEntry.getType()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∆5 ∆(<2ä
6org.jabref.model.database.BibDatabaseContext.getMode()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∆S ∆(Z2ò
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java…X …(a2⁄
Öorg.jabref.model.entry.BibEntryTypesManager.enrich(org.jabref.model.entry.types.EntryType, org.jabref.model.database.BibDatabaseMode)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java…" …((2}
)org.jabref.model.entry.BibEntry.getType()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java…/ …(62ä
6org.jabref.model.database.BibDatabaseContext.getMode()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java…M …(T2◊
Çorg.jabref.logic.exporter.BibDatabaseWriter.writeEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÃ Ã(2ä
6org.jabref.model.database.BibDatabaseContext.getMode()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÃ1 Ã(82ç
9org.jabref.logic.exporter.SaveConfiguration.getSaveType()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaœ œ()2
õorg.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java— —(2é
:org.jabref.model.database.BibDatabaseContext.getMetaData()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java—- —(82•
Qorg.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.getKeyPattern()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java—R —(_2”
org.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinitions(java.util.SortedSet<org.jabref.model.entry.BibEntryType>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‘ ‘(%2ü
Korg.jabref.logic.exporter.BibDatabaseWriter.writeEpilogue(java.lang.String)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÿ ÿ(2Ö
1org.jabref.model.database.BibDatabase.getEpilog()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÿ7 ÿ(@2é
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÿ) ÿ(42o
java.util.TreeSet.TreeSet()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿3 ¿(<2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java•4 •(F2ô
ƒorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sharedDatabaseIDOptional@165.25:165.49CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶ ¶( 2É
Æorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?id@166.62:166.64CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶T ¶(V2ù
Iorg.jabref.logic.exporter.BibDatabaseWriter?saveConfiguration@60.51:60.68CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java© ©(2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™ ™(02Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java´ ´(*2à
≥org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?charset@170.20:170.27CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java´, ´(32ï
Aorg.jabref.logic.exporter.BibDatabaseWriter?bibWriter@59.30:59.39CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆ Æ(2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java± ±((2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¥ ¥('2˙
•org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑8 ∑(?2ù
Iorg.jabref.logic.exporter.BibDatabaseWriter?saveConfiguration@60.51:60.68CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑A ∑(R2é
πorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sortedEntries@183.23:183.36CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏? ∏(L2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏N ∏(`2£
Oorg.jabref.logic.exporter.BibDatabaseWriter?saveActionsFieldChanges@62.38:62.61CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaπ π(2í
Ωorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?saveActionChanges@184.26:184.43CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaπ' π(82°
Morg.jabref.logic.exporter.BibDatabaseWriter?keyPatternPreferences@61.50:61.71CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∫ ∫(!2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaª@ ª(R2é
πorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sortedEntries@183.23:183.36CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaªT ª(a2£
Oorg.jabref.logic.exporter.BibDatabaseWriter?saveActionsFieldChanges@62.38:62.61CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaº º(#2ã
∂org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?keyChanges@187.30:187.40CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaº+ º(52é
πorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sortedEntries@183.23:183.36CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬ ¬(+2ù
Iorg.jabref.logic.exporter.BibDatabaseWriter?entryTypesManager@63.41:63.58CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∆ ∆(!2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@194.22:194.27CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∆/ ∆(42Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∆@ ∆(R2ù
Iorg.jabref.logic.exporter.BibDatabaseWriter?entryTypesManager@63.41:63.58CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java… …(!2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@194.22:194.27CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java…) …(.2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java…: …(L2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@194.22:194.27CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÃ Ã(2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÃ Ã(02ù
Iorg.jabref.logic.exporter.BibDatabaseWriter?saveConfiguration@60.51:60.68CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaœ œ(2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java— —(,2°
Morg.jabref.logic.exporter.BibDatabaseWriter?keyPatternPreferences@61.50:61.71CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java—< —(Q2ç
∏org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?typesToWrite@192.32:192.44CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‘& ‘(22Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÿ ÿ((2û
Jorg.jabref.logic.exporter.BibDatabaseWriter.SaveType?WITH_JABREF_META_DATACALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java©8 ©(M2û
Jorg.jabref.logic.exporter.BibDatabaseWriter.SaveType?WITH_JABREF_META_DATACALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaœ8 œ(M2h
java.util.Set.add(E)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java…b …(s2ä
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContext	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§6 §(H2ˇ
•org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§Y §(`2†
ƒorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sharedDatabaseIDOptional@165.25:165.49DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java• •(12è
≥org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?charset@170.20:170.27DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™ ™(2ï
πorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sortedEntries@183.23:183.36DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑ ∑($2ô
Ωorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?saveActionChanges@184.26:184.43DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏ ∏(+2í
∂org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?keyChanges@187.30:187.40DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaª ª((2î
∏org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?typesToWrite@192.32:192.44DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿  ¿(,2ç
±org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@194.22:194.27DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬ ¬(2ä
Æorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?id@166.62:166.64DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶> ¶(@2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§ §(†

ƒorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sharedDatabaseIDOptional@165.25:165.49VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java• •(1"
typeOptional<String>"
isFinalfalse"∏
declarationString¢<mark class="modifier"> </mark>Optional<String> <mark class="class-field">sharedDatabaseIDOptional</mark> = bibDatabaseContext.getDatabase().getSharedDatabaseID()*sharedDatabaseIDOptional2f
java.util.OptionalTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java• •(2m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java• •(2è
;org.jabref.model.database.BibDatabase.getSharedDatabaseID()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java•U •(h2é
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java•G •(R2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java•4 •(F	
≥org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?charset@170.20:170.27VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™ ™("
typeCharset"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>Charset <mark class="class-field">charset</mark> = bibDatabaseContext.getMetaData().getEncoding().orElse(StandardCharsets.UTF_8)*charset2l
java.nio.charset.CharsetTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™ ™(2p
java.util.Optional.orElse(T)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™M ™(S2Ñ
0org.jabref.model.metadata.MetaData.getEncoding()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™? ™(J2é
:org.jabref.model.database.BibDatabaseContext.getMetaData()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™1 ™(<2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java™ ™(0¨
πorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sortedEntries@183.23:183.36VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑ ∑($"
typeList<BibEntry>"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">sortedEntries</mark> = getSortedEntries(entries, saveConfiguration.getSelfContainedSaveOrder())*sortedEntries2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑ ∑(2|
org.jabref.model.entry.BibEntryTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑ ∑(2Ù
üorg.jabref.logic.exporter.BibDatabaseWriter.getSortedEntries(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.SelfContainedSaveOrder)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑' ∑(72®
Torg.jabref.logic.exporter.SelfContainedSaveConfiguration.getSelfContainedSaveOrder()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑S ∑(l2˙
•org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑8 ∑(?2ù
Iorg.jabref.logic.exporter.BibDatabaseWriter?saveConfiguration@60.51:60.68CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑A ∑(Rà
Ωorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?saveActionChanges@184.26:184.43VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏ ∏(+"
typeList<FieldChange>"
isFinalfalse"Ω
declarationStringß<mark class="modifier"> </mark>List<FieldChange> <mark class="class-field">saveActionChanges</mark> = applySaveActions(sortedEntries, bibDatabaseContext.getMetaData())*saveActionChanges2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏ ∏(2y
org.jabref.model.FieldChangeTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏ ∏(2Ê
ëorg.jabref.logic.exporter.BibDatabaseWriter.applySaveActions(java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.metadata.MetaData)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏. ∏(>2é
:org.jabref.model.database.BibDatabaseContext.getMetaData()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏a ∏(l2é
πorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sortedEntries@183.23:183.36CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏? ∏(L2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∏N ∏(`Ê
∂org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?keyChanges@187.30:187.40VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaª ª(("
typeList<FieldChange>"
isFinalfalse"¨
declarationStringñ<mark class="modifier"> </mark>List<FieldChange> <mark class="class-field">keyChanges</mark> = generateCitationKeys(bibDatabaseContext, sortedEntries)*
keyChanges2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaª ª(2y
org.jabref.model.FieldChangeTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaª ª(2Ù
üorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaª+ ª(?2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaª@ ª(R2é
πorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?sortedEntries@183.23:183.36CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaªT ª(aΩ
∏org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?typesToWrite@192.32:192.44VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿  ¿(,"
typeSortedSet<BibEntryType>"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>SortedSet<BibEntryType> <mark class="class-field">typesToWrite</mark> = new TreeSet<>()*typesToWrite2g
java.util.SortedSetTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿ ¿(2Ä
#org.jabref.model.entry.BibEntryTypeTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿ ¿(2o
java.util.TreeSet.TreeSet()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿3 ¿(<è
±org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?entry@194.22:194.27VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬ ¬("
typeBibEntry"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark>*entry2s
org.jabref.model.entry.BibEntryTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬ ¬(ã
∞org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!bibDatabaseContext	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§6 §(H"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2Ä
,org.jabref.model.database.BibDatabaseContextTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§# §(5¡
•org.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§Y §(`"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§J §(N2|
org.jabref.model.entry.BibEntryTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java§O §(W«
Æorg.jabref.logic.exporter.BibDatabaseWriter.savePartOfDatabase(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?id@166.62:166.64VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶> ¶(@"
type"
isFinalfalse"
declarationString id*id2TYPEÈ	
org.jabref.logic.exporter.BibDatabaseWriter.writeProlog(org.jabref.model.database.BibDatabaseContext, java.nio.charset.Charset)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java€ €('"
isFinalfalse"Û
declarationString›<mark class="modifier">protected </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">writeProlog</mark>(BibDatabaseContext bibDatabaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> Charset encoding)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstracttrue"
typevoid*writeProlog2Ï
íorg.jabref.logic.exporter.BibDatabaseWriter.writeProlog(org.jabref.model.database.BibDatabaseContext, java.nio.charset.Charset)!bibDatabaseContext	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java€; €(M2‚
àorg.jabref.logic.exporter.BibDatabaseWriter.writeProlog(org.jabref.model.database.BibDatabaseContext, java.nio.charset.Charset)!encoding	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java€W €(_2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java€ €(Ì
íorg.jabref.logic.exporter.BibDatabaseWriter.writeProlog(org.jabref.model.database.BibDatabaseContext, java.nio.charset.Charset)!bibDatabaseContext	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java€; €(M"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2Ä
,org.jabref.model.database.BibDatabaseContextTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java€( €(:§
àorg.jabref.logic.exporter.BibDatabaseWriter.writeProlog(org.jabref.model.database.BibDatabaseContext, java.nio.charset.Charset)!encoding	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java€W €(_"
typeCharset"
isFinalfalse"%
declarationStringCharset encoding*encoding2l
java.nio.charset.CharsetTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java€O €(VÕ	
Çorg.jabref.logic.exporter.BibDatabaseWriter.writeEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java› ›(&"
isFinalfalse"ﬂ
declarationString…<mark class="modifier">protected </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">writeEntry</mark>(BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> BibDatabaseMode mode)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstracttrue"
typevoid*
writeEntry2‚
àorg.jabref.logic.exporter.BibDatabaseWriter.writeEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!entry	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java›0 ›(52·
áorg.jabref.logic.exporter.BibDatabaseWriter.writeEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!mode	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java›G ›(K2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java› ›(ß
àorg.jabref.logic.exporter.BibDatabaseWriter.writeEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!entry	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java›0 ›(5"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2s
org.jabref.model.entry.BibEntryTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java›' ›(/º
áorg.jabref.logic.exporter.BibDatabaseWriter.writeEntry(org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabaseMode)!mode	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java›G ›(K"
typeBibDatabaseMode"
isFinalfalse")
declarationStringBibDatabaseMode mode*mode2}
)org.jabref.model.database.BibDatabaseModeTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java›7 ›(F±
Korg.jabref.logic.exporter.BibDatabaseWriter.writeEpilogue(java.lang.String)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaﬂ ﬂ()"
isFinalfalse"ë
declarationString˚<mark class="modifier">protected </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">writeEpilogue</mark>(String epilogue)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstracttrue"
typevoid*writeEpilogue2≠
Torg.jabref.logic.exporter.BibDatabaseWriter.writeEpilogue(java.lang.String)!epilogue	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaﬂ1 ﬂ(92_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaﬂ ﬂ(Â
Torg.jabref.logic.exporter.BibDatabaseWriter.writeEpilogue(java.lang.String)!epilogue	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaﬂ1 ﬂ(9"
typeString"
isFinalfalse"$
declarationStringString epilogue*epilogue2d
java.lang.StringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaﬂ* ﬂ(0¢
õorg.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‰ ‰( "
isFinalfalse"◊
declarationString¡<mark class="modifier">protected </mark><mark class="modifier">void</mark> <mark class="method">writeMetaData</mark>(MetaData metaData<mark class="modifier"><mark class="modifier">,</mark></mark> GlobalCitationKeyPattern globalCiteKeyPattern)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstractfalse"
typevoid*writeMetaData2w
#java.util.Objects.requireNonNull(T)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÂ Â(2˙
•org.jabref.logic.exporter.MetaDataSerializer.getSerializedStringMap(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÁD Á(Z2l
java.util.Map.entrySet()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÍE Í(M2 
vorg.jabref.logic.exporter.BibDatabaseWriter.writeMetaDataItem(java.util.Map.Entry<java.lang.String, java.lang.String>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÎ Î(2˘
§org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)!metaDataCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÂ Â('2˘
§org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)!metaDataCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÁ[ Á(c2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)!globalCiteKeyPatternCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaË Ë($2ë
ºorg.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)?serializedMetaData@231.28:231.46CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÍ2 Í(D2á
≤org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)?metaItem@234.39:234.47CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÎ Î(&2˛
§org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)!metaData	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‰* ‰(22ä
∞org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)!globalCiteKeyPattern	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‰M ‰(a2ò
ºorg.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)?serializedMetaData@231.28:231.46DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÁ Á(.2é
≤org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)?metaItem@234.39:234.47DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÍ' Í(/2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‰ ‰(Â
ºorg.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)?serializedMetaData@231.28:231.46VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÁ Á(."
typeMap<String, String>"
isFinalfalse"»
declarationString≤<mark class="modifier"> </mark>Map<String, String> <mark class="class-field">serializedMetaData</mark> = MetaDataSerializer.getSerializedStringMap(metaData, globalCiteKeyPattern)*serializedMetaData2a
java.util.MapTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÁ Á(2m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÁ Á(2m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÁ Á(2˙
•org.jabref.logic.exporter.MetaDataSerializer.getSerializedStringMap(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÁD Á(Z2˘
§org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)!metaDataCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÁ[ Á(c2Ö
∞org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)!globalCiteKeyPatternCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaË Ë($ä
≤org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)?metaItem@234.39:234.47VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÍ' Í(/"!
typeMap.Entry<String, String>"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>Map.Entry<String, String> <mark class="class-field">metaItem</mark>*metaItem2g
java.util.Map.EntryTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÍ Í(2m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÍ Í(2m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÍ Í(Ã
§org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)!metaData	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‰* ‰(2"
typeMetaData"
isFinalfalse"&
declarationStringMetaData metaData*metaData2v
"org.jabref.model.metadata.MetaDataTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‰! ‰()´
∞org.jabref.logic.exporter.BibDatabaseWriter.writeMetaData(org.jabref.model.metadata.MetaData, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern)!globalCiteKeyPattern	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‰M ‰(a" 
typeGlobalCitationKeyPattern"
isFinalfalse"B
declarationString-GlobalCitationKeyPattern globalCiteKeyPattern*globalCiteKeyPattern2ê
<org.jabref.logic.citationkeypattern.GlobalCitationKeyPatternTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java‰4 ‰(L‰
vorg.jabref.logic.exporter.BibDatabaseWriter.writeMetaDataItem(java.util.Map.Entry<java.lang.String, java.lang.String>)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÔ Ô(-"
isFinalfalse"Í
declarationString‘<mark class="modifier">protected </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">writeMetaDataItem</mark>(Map.Entry&lt;String<mark class="modifier"><mark class="modifier">,</mark></mark> String&gt; metaItem)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstracttrue"
typevoid*writeMetaDataItem2ÿ
org.jabref.logic.exporter.BibDatabaseWriter.writeMetaDataItem(java.util.Map.Entry<java.lang.String, java.lang.String>)!metaItem	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÔH Ô(P2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÔ Ô(ó
org.jabref.logic.exporter.BibDatabaseWriter.writeMetaDataItem(java.util.Map.Entry<java.lang.String, java.lang.String>)!metaItem	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÔH Ô(P"!
typeMap.Entry<String, String>"
isFinalfalse"7
declarationString"Map.Entry<String, String> metaItem*metaItem2g
java.util.Map.EntryTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÔ2 Ô(72m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÔ. Ô(12m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÔ8 Ô(>±
Korg.jabref.logic.exporter.BibDatabaseWriter.writePreamble(java.lang.String)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÒ Ò()"
isFinalfalse"ë
declarationString˚<mark class="modifier">protected </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">writePreamble</mark>(String preamble)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstracttrue"
typevoid*writePreamble2≠
Torg.jabref.logic.exporter.BibDatabaseWriter.writePreamble(java.lang.String)!preamble	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÒ1 Ò(92_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÒ Ò(Â
Torg.jabref.logic.exporter.BibDatabaseWriter.writePreamble(java.lang.String)!preamble	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÒ1 Ò(9"
typeString"
isFinalfalse"$
declarationStringString preamble*preamble2d
java.lang.StringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÒ* Ò(0…
Morg.jabref.logic.exporter.BibDatabaseWriter.writeDatabaseID(java.lang.String)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÛ Û(+"
isFinalfalse"õ
declarationStringÖ<mark class="modifier">protected </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">writeDatabaseID</mark>(String sharedDatabaseID)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstracttrue"
typevoid*writeDatabaseID2∑
^org.jabref.logic.exporter.BibDatabaseWriter.writeDatabaseID(java.lang.String)!sharedDatabaseID	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÛ3 Û(C2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÛ Û(ˇ
^org.jabref.logic.exporter.BibDatabaseWriter.writeDatabaseID(java.lang.String)!sharedDatabaseID	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÛ3 Û(C"
typeString"
isFinalfalse",
declarationStringString sharedDatabaseID*sharedDatabaseID2d
java.lang.StringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÛ, Û(2Ã>
_org.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˚ ˚("
isFinalfalse"Ï
declarationString÷<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">writeStrings</mark>(BibDatabase database)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*writeStrings2ì
?java.util.stream.Stream.sorted(java.util.Comparator<? super T>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaˇ. ˇ(42§
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˛. ˛(12q
java.util.Collection.stream()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˝. ˝(42ã
7org.jabref.model.database.BibDatabase.getStringKeySet()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¸. ¸(=2k
java.util.Map.put(K, V)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÖ Ö(2Å
-org.jabref.model.entry.BibtexString.getName()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÖ! Ö((2p
java.lang.Math.max(int, int)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÜ  Ü(#2m
java.lang.String.length()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÜC Ü(I2Å
-org.jabref.model.entry.BibtexString.getName()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÜ9 Ü(@2Ö
1org.jabref.model.entry.BibtexString.Type.values()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâ5 â(;2
+java.util.Map.containsKey(java.lang.Object)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã ã()2Å
-org.jabref.model.entry.BibtexString.getName()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã- ã(42Å
-org.jabref.model.entry.BibtexString.getType()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã? ã(F2¸
ßorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaå å(2Ö
1org.jabref.logic.exporter.BibWriter.finishBlock()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaë ë(2≠
Yorg.jabref.logic.bibtex.comparator.BibtexStringComparator.BibtexStringComparator(boolean)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaˇ9 ˇ(O2o
java.util.HashMap.HashMap()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÇ2 Ç(;2º
horg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)!databaseCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¸% ¸(-2…
uorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?strings@252.27:252.34CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ# Ñ(*2À
worg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?remaining@258.34:258.43CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÖ Ö(2»
torg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?string@260.26:260.32CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÖ Ö( 2»
torg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?string@260.26:260.32CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÖ, Ö(22Œ
zorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?maxKeyLength@259.12:259.24CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÜ Ü(2Œ
zorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?maxKeyLength@259.12:259.24CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÜ$ Ü(02»
torg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?string@260.26:260.32CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÜ2 Ü(82…
uorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?strings@252.27:252.34CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaä# ä(*2À
worg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?remaining@258.34:258.43CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã ã(2ƒ
porg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?bs@266.30:266.32CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã* ã(,2ƒ
porg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?bs@266.30:266.32CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaã< ã(>2√
oorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?t@265.31:265.32CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaãL ã(M2ƒ
porg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?bs@266.30:266.32CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaå  å("2À
worg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?remaining@258.34:258.43CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaå$ å(-2Œ
zorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?maxKeyLength@259.12:259.24CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaå/ å(;2ï
Aorg.jabref.logic.exporter.BibDatabaseWriter?bibWriter@59.30:59.39CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaë ë(2ï
Aorg.jabref.model.database.BibDatabase.getString(java.lang.String)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˛2 ˛(E2¡
horg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)!database	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˚* ˚(22–
uorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?strings@252.27:252.34DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¸ ¸("2“
worg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?remaining@258.34:258.43DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÇ" Ç(+2’
zorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?maxKeyLength@259.12:259.24DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÉ É(2œ
torg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?string@260.26:260.32DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ Ñ( 2 
oorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?t@265.31:265.32DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâ â( 2À
porg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?bs@266.30:266.32DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaä ä( 2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˚ ˚(î
uorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?strings@252.27:252.34VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¸ ¸(""
typeList<BibtexString>"
isFinalfalse"·
declarationStringÀ<mark class="modifier"> </mark>List<BibtexString> <mark class="class-field">strings</mark> = database.getStringKeySet().stream().map(database::getString).sorted(new BibtexStringComparator(true)).toList()*strings2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¸ ¸(2Ä
#org.jabref.model.entry.BibtexStringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¸ ¸(2ì
?java.util.stream.Stream.sorted(java.util.Comparator<? super T>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaˇ. ˇ(42§
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˛. ˛(12q
java.util.Collection.stream()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˝. ˝(42ã
7org.jabref.model.database.BibDatabase.getStringKeySet()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¸. ¸(=2≠
Yorg.jabref.logic.bibtex.comparator.BibtexStringComparator.BibtexStringComparator(boolean)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaˇ9 ˇ(O2º
horg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)!databaseCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¸% ¸(-2ï
Aorg.jabref.model.database.BibDatabase.getString(java.lang.String)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˛2 ˛(E‚
worg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?remaining@258.34:258.43VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÇ" Ç(+"!
typeMap<String, BibtexString>"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>Map<String, BibtexString> <mark class="class-field">remaining</mark> = new HashMap<>()*	remaining2a
java.util.MapTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÇ Ç(2m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÇ Ç(2Ä
#org.jabref.model.entry.BibtexStringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÇ Ç( 2o
java.util.HashMap.HashMap()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÇ2 Ç(;‚
zorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?maxKeyLength@259.12:259.24VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÉ É("
typeint"
isFinalfalse"á
declarationStringr<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">maxKeyLength</mark> = 0*maxKeyLength2W
intTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÉ É(˛
torg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?string@260.26:260.32VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ Ñ( "
typeBibtexString"
isFinalfalse"Ü
declarationStringq<mark class="modifier"> </mark>BibtexString <mark class="class-field"><mark class="modifier">string</mark></mark>*string2w
#org.jabref.model.entry.BibtexStringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÑ Ñ(ﬂ
oorg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?t@265.31:265.32VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâ â( "
typeBibtexString.Type"
isFinalfalse"h
declarationStringS<mark class="modifier"> </mark>BibtexString.Type <mark class="class-field">t</mark>*t2|
(org.jabref.model.entry.BibtexString.TypeTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaâ â(”
porg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)?bs@266.30:266.32VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaä ä( "
typeBibtexString"
isFinalfalse"d
declarationStringO<mark class="modifier"> </mark>BibtexString <mark class="class-field">bs</mark>*bs2w
#org.jabref.model.entry.BibtexStringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaä ä(ò
horg.jabref.logic.exporter.BibDatabaseWriter.writeStrings(org.jabref.model.database.BibDatabase)!database	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˚* ˚(2"
typeBibDatabase"
isFinalfalse")
declarationStringBibDatabase database*database2y
%org.jabref.model.database.BibDatabaseTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java˚ ˚()«]
ßorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî î("
isFinalfalse"Å
declarationStringÎ<mark class="modifier">protected </mark><mark class="modifier">void</mark> <mark class="method">writeString</mark>(BibtexString bibtexString<mark class="modifier"><mark class="modifier">,</mark></mark> Map&lt;String<mark class="modifier"><mark class="modifier">,</mark></mark> BibtexString&gt; remaining<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> maxKeyLength)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstractfalse"
typevoid*writeString2z
&java.util.Map.remove(java.lang.Object)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó ó(2Å
-org.jabref.model.entry.BibtexString.getName()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó& ó(-2Ñ
0org.jabref.model.entry.BibtexString.getContent()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú& ú(02r
java.util.regex.Matcher.find()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaû8 û(<2ã
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaû& û(-2v
"java.util.regex.Matcher.group(int)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaü" ü('2~
*java.lang.String.indexOf(java.lang.String)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java†$ †(+2m
java.lang.String.length()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java†E †(K2s
java.lang.String.substring(int)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java° °('2x
$java.lang.String.substring(int, int)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢& ¢(/2m
java.lang.String.length()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢> ¢(D2
+java.util.Map.containsKey(java.lang.Object)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java• •(%2w
#java.util.Map.get(java.lang.Object)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶2 ¶(52¸
ßorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaß ß(2µ
aorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, int)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java´ ´(2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!remainingCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó ó(2â
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!bibtexStringCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaó ó(%2â
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!bibtexStringCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú ú(%2å
∑org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?m@285.16:285.17CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaû û(2ù
Iorg.jabref.logic.exporter.BibDatabaseWriter?REFERENCE_PATTERN@58.33:58.50CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaû û(%2í
Ωorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?content@284.15:284.22CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaû. û(52å
∑org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?m@285.16:285.17CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaü  ü(!2í
Ωorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?content@284.15:284.22CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java† †(#2ï
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java†, †(62ï
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java†: †(D2í
Ωorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?content@284.15:284.22CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java° °(2í
Ωorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?content@284.15:284.22CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java° °(2î
øorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?restIndex@288.16:288.25CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java°( °(12ï
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢ ¢(%2ï
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢3 ¢(=2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!remainingCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java• •(2ê
ªorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?label@290.19:290.24CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java•& •(+2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!remainingCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶( ¶(12ê
ªorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?label@290.19:290.24CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶6 ¶(;2ì
æorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?referred@294.29:294.37CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaß ß($2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!remainingCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaß& ß(/2â
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!maxKeyLengthCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaß1 ß(=2â
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!bibtexStringCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java´ ´( 2â
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!maxKeyLengthCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java´" ´(.2é
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!bibtexString	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî, î(82ã
±org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!remaining	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaîT î(]2é
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!maxKeyLength	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaîc î(o2ô
Ωorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?content@284.15:284.22DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú ú(2ì
∑org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?m@285.16:285.17DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaù ù(2ú
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaü ü(2õ
øorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?restIndex@288.16:288.25DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java† †(2ó
ªorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?label@290.19:290.24DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢ ¢(2ö
æorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?referred@294.29:294.37DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶ ¶(%2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî î(ª
Ωorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?content@284.15:284.22VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú ú("
typeString"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>String <mark class="class-field">content</mark> = bibtexString.getContent()*content2d
java.lang.StringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú ú(2Ñ
0org.jabref.model.entry.BibtexString.getContent()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú& ú(02â
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!bibtexStringCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaú ú(%É
∑org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?m@285.16:285.17VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaù ù("
typeMatcher"
isFinalfalse"^
declarationStringI<mark class="modifier"> </mark>Matcher <mark class="class-field">m</mark>*m2k
java.util.regex.MatcherTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaù ù(©
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaü ü("
typeString"
isFinalfalse"s
declarationString^<mark class="modifier"> </mark>String <mark class="class-field">foundLabel</mark> = m.group(1)*
foundLabel2d
java.lang.StringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaü ü(2v
"java.util.regex.Matcher.group(int)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaü" ü('2å
∑org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?m@285.16:285.17CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaü  ü(!á
øorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?restIndex@288.16:288.25VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java† †("
typeint"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">restIndex</mark> = content.indexOf(foundLabel) + foundLabel.length()*	restIndex2W
intTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java† †(2~
*java.lang.String.indexOf(java.lang.String)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java†$ †(+2m
java.lang.String.length()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java†E †(K2í
Ωorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?content@284.15:284.22CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java† †(#2ï
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java†, †(62ï
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java†: †(D”

ªorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?label@290.19:290.24VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢ ¢("
typeString"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>String <mark class="class-field">label</mark> = foundLabel.substring(1, foundLabel.length() - 1)*label2d
java.lang.StringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢ ¢(2x
$java.lang.String.substring(int, int)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢& ¢(/2m
java.lang.String.length()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢> ¢(D2ï
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢ ¢(%2ï
¿org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?foundLabel@287.19:287.29CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¢3 ¢(=€	
æorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?referred@294.29:294.37VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶ ¶(%"
typeBibtexString"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>BibtexString <mark class="class-field">referred</mark> = remaining.get(label)*referred2w
#org.jabref.model.entry.BibtexStringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶ ¶(2w
#java.util.Map.get(java.lang.Object)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶2 ¶(52Ü
±org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!remainingCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶( ¶(12ê
ªorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)?label@290.19:290.24CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¶6 ¶(;Ì
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!bibtexString	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî, î(8"
typeBibtexString"
isFinalfalse".
declarationStringBibtexString bibtexString*bibtexString2w
#org.jabref.model.entry.BibtexStringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî î(+⁄
±org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!remaining	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaîT î(]"!
typeMap<String, BibtexString>"
isFinalfalse"8
declarationString#Map<String, BibtexString> remaining*	remaining2a
java.util.MapTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî: î(=2m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî> î(D2Ä
#org.jabref.model.entry.BibtexStringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaîF î(RŸ
¥org.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, java.util.Map<java.lang.String, org.jabref.model.entry.BibtexString>, int)!maxKeyLength	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaîc î(o"
typeint"
isFinalfalse"C
declarationString.<mark class="modifier">int</mark> maxKeyLength*maxKeyLength2W
intTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaî_ î(bù	
aorg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, int)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆ Æ('"
isFinalfalse"Ö
declarationStringÔ<mark class="modifier">protected </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">writeString</mark>(BibtexString bibtexString<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> maxKeyLength)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstracttrue"
typevoid*writeString2«
norg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, int)!bibtexString	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆ5 Æ(A2«
norg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, int)!maxKeyLength	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆG Æ(S2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆ Æ(¶
norg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, int)!bibtexString	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆ5 Æ(A"
typeBibtexString"
isFinalfalse".
declarationStringBibtexString bibtexString*bibtexString2w
#org.jabref.model.entry.BibtexStringTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆ( Æ(4í
norg.jabref.logic.exporter.BibDatabaseWriter.writeString(org.jabref.model.entry.BibtexString, int)!maxKeyLength	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆG Æ(S"
typeint"
isFinalfalse"C
declarationString.<mark class="modifier">int</mark> maxKeyLength*maxKeyLength2W
intTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaÆC Æ(Fï
org.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinitions(java.util.SortedSet<org.jabref.model.entry.BibEntryType>)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java± ±(,"
isFinalfalse"ä
declarationStringÙ<mark class="modifier">protected </mark><mark class="modifier">void</mark> <mark class="method">writeEntryTypeDefinitions</mark>(SortedSet&lt;BibEntryType&gt; types)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstractfalse"
typevoid*writeEntryTypeDefinitions2Ω
iorg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinition(org.jabref.model.entry.BibEntryType)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java≥ ≥($2⁄
Öorg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinitions(java.util.SortedSet<org.jabref.model.entry.BibEntryType>)!typesCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java≤! ≤(&2Á
íorg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinitions(java.util.SortedSet<org.jabref.model.entry.BibEntryType>)?type@306.26:306.30CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java≥% ≥()2ﬂ
Öorg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinitions(java.util.SortedSet<org.jabref.model.entry.BibEntryType>)!types	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java±E ±(J2Ó
íorg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinitions(java.util.SortedSet<org.jabref.model.entry.BibEntryType>)?type@306.26:306.30DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java≤ ≤(2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java± ±(˙
íorg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinitions(java.util.SortedSet<org.jabref.model.entry.BibEntryType>)?type@306.26:306.30VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java≤ ≤("
typeBibEntryType"
isFinalfalse"f
declarationStringQ<mark class="modifier"> </mark>BibEntryType <mark class="class-field">type</mark>*type2w
#org.jabref.model.entry.BibEntryTypeTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java≤ ≤(π
Öorg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinitions(java.util.SortedSet<org.jabref.model.entry.BibEntryType>)!types	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java±E ±(J"
typeSortedSet<BibEntryType>"
isFinalfalse"2
declarationStringSortedSet<BibEntryType> types*types2g
java.util.SortedSetTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java±- ±(62Ä
#org.jabref.model.entry.BibEntryTypeTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java±7 ±(Cç
iorg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinition(org.jabref.model.entry.BibEntryType)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑ ∑(4"
isFinalfalse"§
declarationStringé<mark class="modifier">protected </mark><mark class="modifier">abstract </mark><mark class="modifier">void</mark> <mark class="method">writeEntryTypeDefinition</mark>(BibEntryType customType)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
access	protected"

isAbstracttrue"
typevoid*writeEntryTypeDefinition2Õ
torg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinition(org.jabref.model.entry.BibEntryType)!customType	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑B ∑(L2_
voidRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑ ∑(®
torg.jabref.logic.exporter.BibDatabaseWriter.writeEntryTypeDefinition(org.jabref.model.entry.BibEntryType)!customType	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑B ∑(L"
typeBibEntryType"
isFinalfalse",
declarationStringBibEntryType customType*
customType2w
#org.jabref.model.entry.BibEntryTypeTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∑5 ∑(A”0
üorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)METHODJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaº  º(4"
isFinalfalse"Ñ
declarationStringÓ<mark class="modifier">protected </mark>List&lt;FieldChange&gt; <mark class="method">generateCitationKeys</mark>(BibDatabaseContext databaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;BibEntry&gt; entries)"
isStaticfalse"
access	protected"

isAbstractfalse"
typeList<FieldChange>*generateCitationKeys2Ñ
0org.jabref.model.entry.BibEntry.getCitationKey()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿* ¿(82•
Qorg.jabref.model.strings.StringUtil.isBlank(java.util.Optional<java.lang.String>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¡ ¡("2ø
korg.jabref.logic.citationkeypattern.CitationKeyGenerator.generateAndSetKey(org.jabref.model.entry.BibEntry)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬< ¬(M2ò
Djava.util.Optional.ifPresent(java.util.function.Consumer<? super T>)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java√ √( 2s
java.util.ArrayList.ArrayList()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaΩ( Ω(32ì
æorg.jabref.logic.citationkeypattern.CitationKeyGenerator.CitationKeyGenerator(org.jabref.model.database.BibDatabaseContext, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaæ0 æ(D2Ñ
Øorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!databaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaæE æ(T2°
Morg.jabref.logic.exporter.BibDatabaseWriter?keyPatternPreferences@61.50:61.71CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaæV æ(k2¸
ßorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaø ø(#2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?bes@319.22:319.25CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿& ¿()2â
¥org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?oldKey@320.29:320.35CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¡# ¡()2è
∫org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?keyGenerator@318.29:318.41CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬/ ¬(;2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?bes@319.22:319.25CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬N ¬(Q2â
¥org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?change@322.38:322.44CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java√ √(2ä
µorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?changes@317.26:317.33CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java∆ ∆(2i
java.util.List.add(E)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java√! √(-2â
Øorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!databaseContext	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaºH º(W2Å
ßorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaºh º(o2ë
µorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?changes@317.26:317.33DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaΩ Ω(!2ñ
∫org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?keyGenerator@318.29:318.41DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaæ æ()2ç
±org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?bes@319.22:319.25DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaø ø(2ê
¥org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?oldKey@320.29:320.35DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿ ¿(#2ê
¥org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?change@322.38:322.44DECLARATIONJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬& ¬(,2i
java.util.ListRETURN_TYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaº º(2Ä
org.jabref.model.FieldChangeRETURN_TYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaº º(ù
µorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?changes@317.26:317.33VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaΩ Ω(!"
typeList<FieldChange>"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>List<FieldChange> <mark class="class-field">changes</mark> = new ArrayList<>()*changes2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaΩ Ω(2y
org.jabref.model.FieldChangeTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaΩ Ω(2s
java.util.ArrayList.ArrayList()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaΩ( Ω(3ﬁ

∫org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?keyGenerator@318.29:318.41VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaæ æ()"
typeCitationKeyGenerator"
isFinalfalse"∫
declarationString§<mark class="modifier"> </mark>CitationKeyGenerator <mark class="class-field">keyGenerator</mark> = new CitationKeyGenerator(databaseContext, keyPatternPreferences)*keyGenerator2å
8org.jabref.logic.citationkeypattern.CitationKeyGeneratorTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaæ æ(2ì
æorg.jabref.logic.citationkeypattern.CitationKeyGenerator.CitationKeyGenerator(org.jabref.model.database.BibDatabaseContext, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaæ0 æ(D2Ñ
Øorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!databaseContextCALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaæE æ(T2°
Morg.jabref.logic.exporter.BibDatabaseWriter?keyPatternPreferences@61.50:61.71CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaæV æ(kã
±org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?bes@319.22:319.25VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaø ø("
typeBibEntry"
isFinalfalse"a
declarationStringL<mark class="modifier"> </mark>BibEntry <mark class="class-field">bes</mark>*bes2s
org.jabref.model.entry.BibEntryTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaø ø(Æ
¥org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?oldKey@320.29:320.35VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿ ¿(#"
typeOptional<String>"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Optional<String> <mark class="class-field">oldKey</mark> = bes.getCitationKey()*oldKey2f
java.util.OptionalTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿ ¿(2m
java.lang.StringTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿ ¿(2Ñ
0org.jabref.model.entry.BibEntry.getCitationKey()CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿* ¿(82Ü
±org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?bes@319.22:319.25CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¿& ¿()°
¥org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?change@322.38:322.44VARIABLEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬& ¬(,"
typeOptional<FieldChange>"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>Optional<FieldChange> <mark class="class-field">change</mark> = keyGenerator.generateAndSetKey(bes)*change2f
java.util.OptionalTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬ ¬(2y
org.jabref.model.FieldChangeTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬ ¬($2ø
korg.jabref.logic.citationkeypattern.CitationKeyGenerator.generateAndSetKey(org.jabref.model.entry.BibEntry)CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬< ¬(M2è
∫org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?keyGenerator@318.29:318.41CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬/ ¬(;2Ü
±org.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)?bes@319.22:319.25CALLJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java¬N ¬(QÑ
Øorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!databaseContext	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaºH º(W"
typeBibDatabaseContext"
isFinalfalse"7
declarationString"BibDatabaseContext databaseContext*databaseContext2Ä
,org.jabref.model.database.BibDatabaseContextTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaº5 º(G√
ßorg.jabref.logic.exporter.BibDatabaseWriter.generateCitationKeys(org.jabref.model.database.BibDatabaseContext, java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaºh º(o"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2b
java.util.ListTYPEJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaºY º(]2|
org.jabref.model.entry.BibEntryTYPE_ARGUMENTJ
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.javaº^ º(fÕ
Iorg.jabref.logic.exporter.BibDatabaseWriter?REFERENCE_PATTERN@58.33:58.50VALUEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java:! :(2"
isFinaltrue"
typePattern"„
declarationStringÕ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">REFERENCE_PATTERN</mark> = Pattern.compile("(#[A-Za-z]+#)");"
isStatictrue"
accessprivate*REFERENCE_PATTERN2i
java.util.regex.PatternTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java: :( 2É
1java.util.regex.Pattern.compile(java.lang.String)CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java:= :(D˚
Aorg.jabref.logic.exporter.BibDatabaseWriter?bibWriter@59.30:59.39VALUEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java; ;('"
isFinaltrue"
type	BibWriter"ñ
declarationStringÄ<mark class="modifier">protected </mark><mark class="modifier">final </mark>BibWriter <mark class="class-field">bibWriter</mark>"
isStaticfalse"
access	protected*	bibWriter2u
#org.jabref.logic.exporter.BibWriterTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java; ;(”
Iorg.jabref.logic.exporter.BibDatabaseWriter?saveConfiguration@60.51:60.68VALUEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java<3 <(D"
isFinaltrue"&
typeSelfContainedSaveConfiguration"≥
declarationStringù<mark class="modifier">protected </mark><mark class="modifier">final </mark>SelfContainedSaveConfiguration <mark class="class-field">saveConfiguration</mark>"
isStaticfalse"
access	protected*saveConfiguration2ä
8org.jabref.logic.exporter.SelfContainedSaveConfigurationTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java< <(2Ê
Morg.jabref.logic.exporter.BibDatabaseWriter?keyPatternPreferences@61.50:61.71VALUEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java=2 =(G"
isFinaltrue"%
typeCitationKeyPatternPreferences"∂
declarationString†<mark class="modifier">protected </mark><mark class="modifier">final </mark>CitationKeyPatternPreferences <mark class="class-field">keyPatternPreferences</mark>"
isStaticfalse"
access	protected*keyPatternPreferences2ì
Aorg.jabref.logic.citationkeypattern.CitationKeyPatternPreferencesTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java= =(1°
Oorg.jabref.logic.exporter.BibDatabaseWriter?saveActionsFieldChanges@62.38:62.61VALUEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java>& >(="
isFinaltrue"
typeList<FieldChange>"¡
declarationString´<mark class="modifier">protected </mark><mark class="modifier">final </mark>List<FieldChange> <mark class="class-field">saveActionsFieldChanges</mark> = new ArrayList<>();"
isStaticfalse"
access	protected*saveActionsFieldChanges2`
java.util.ListTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java> >(2w
org.jabref.model.FieldChangeTYPE_ARGUMENTH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java> >($2q
java.util.ArrayList.ArrayList()CALLH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java>D >(O±
Iorg.jabref.logic.exporter.BibDatabaseWriter?entryTypesManager@63.41:63.58VALUEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java?) ?(:"
isFinaltrue"
typeBibEntryTypesManager"©
declarationStringì<mark class="modifier">protected </mark><mark class="modifier">final </mark>BibEntryTypesManager <mark class="class-field">entryTypesManager</mark>"
isStaticfalse"
access	protected*entryTypesManager2}
+org.jabref.model.entry.BibEntryTypesManagerTYPEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java? ?((ï
4org.jabref.logic.exporter.BibDatabaseWriter.SaveTypeENUMH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java8 8("@
declarationString+<mark class="modifier">enum </mark>SaveType*SaveType2£
Jorg.jabref.logic.exporter.BibDatabaseWriter.SaveType?WITH_JABREF_META_DATADECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java8 8(02ö
Aorg.jabref.logic.exporter.BibDatabaseWriter.SaveType?PLAIN_BIBTEXDECLARATIONH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java82 8(>¬
Jorg.jabref.logic.exporter.BibDatabaseWriter.SaveType?WITH_JABREF_META_DATAVALUEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java8 8(0"
enumtrue*WITH_JABREF_META_DATA∞
Aorg.jabref.logic.exporter.BibDatabaseWriter.SaveType?PLAIN_BIBTEXVALUEH
>src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java82 8(>"
enumtrue*PLAIN_BIBTEX