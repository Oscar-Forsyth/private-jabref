
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java∫
*org.jabref.logic.exporter.YamlExporterTestCLASSG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java ("$
packageorg.jabref.logic.exporter"
isFinalfalse"
inner classfalse"

isAbstractfalse"n
declarationStringY<mark class="modifier">public </mark><mark class="modifier">class </mark>YamlExporterTest"
accesspublic*YamlExporterTest2ä
2org.jabref.logic.exporter.YamlExporterTest.setUp()DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java (2∂
^org.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java, ,(52¨
Torg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java4 4(+2¨
Torg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaP P(+2¨
Torg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javal	 l(2≤
Xorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)DECLARATIONI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaà	 à("2õ
Corg.jabref.logic.exporter.YamlExporterTest?yamlExporter@25.28:25.40DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java ((2û
Forg.jabref.logic.exporter.YamlExporterTest?databaseContext@26.38:26.53DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java& (5Ò
2org.jabref.logic.exporter.YamlExporterTest.setUp()METHODG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java ("
isFinalfalse"œ
declarationStringπ<mark class="annotation">@BeforeAll</mark> <br><mark class="modifier"> </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2ä
9org.jabref.model.metadata.SaveOrder.getDefaultSaveOrder()CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java% %(-2í
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java( ((02î
Corg.jabref.logic.exporter.YamlExporterTest?yamlExporter@25.28:25.40CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java (2ó
Forg.jabref.logic.exporter.YamlExporterTest?databaseContext@26.38:26.53CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java( ((2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java (∂
^org.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)METHODG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java, ,(5"
isFinaltrue"«
declarationString± <br><mark class="modifier">public </mark><mark class="modifier">final </mark><mark class="modifier">void</mark> <mark class="method">exportForNoEntriesWritesNothing</mark>(<mark class="annotation">@TempDir</mark> Path tempFile)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*exportForNoEntriesWritesNothing2}
,java.nio.file.Path.resolve(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java- -($2…
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java. .(2Ó
úorg.jabref.logic.exporter.Exporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java/ /(2r
!java.util.Collections.emptyList()CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java/C /(L2r
!java.util.Collections.emptyList()CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java0! 0(*2Ö
4java.nio.file.Files.readAllLines(java.nio.file.Path)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java04 0(@2∏
gorg.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)!tempFileCALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java- -(2¿
oorg.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)?file@45.13:45.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java. .(2î
Corg.jabref.logic.exporter.YamlExporterTest?yamlExporter@25.28:25.40CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java/ /(2ó
Forg.jabref.logic.exporter.YamlExporterTest?databaseContext@26.38:26.53CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java/ /(+2∏
gorg.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)!tempFileCALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java/- /(52¿
oorg.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)?file@45.13:45.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java0A 0(E2Ω
gorg.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)!tempFile	PARAMETERG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java,D ,(L2«
oorg.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)?file@45.13:45.17DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java- -(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java, ,(ô
oorg.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)?file@45.13:45.17VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java- -("
typePath"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = tempFile.resolve("ThisIsARandomlyNamedFile")*file2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java- -(2}
,java.nio.file.Path.resolve(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java- -($2∏
gorg.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)!tempFileCALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java- -(ô
gorg.jabref.logic.exporter.YamlExporterTest.exportForNoEntriesWritesNothing(java.nio.file.Path)!tempFile	PARAMETERG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java,D ,(L"
typePath"
isFinalfalse"K
declarationString6<mark class="annotation">@TempDir</mark> Path tempFile*tempFile2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java,? ,(C˘%
Torg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)METHODG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java4 4(+"
isFinaltrue"Ω
declarationStringß <br><mark class="modifier">public </mark><mark class="modifier">final </mark><mark class="modifier">void</mark> <mark class="method">exportsCorrectContent</mark>(<mark class="annotation">@TempDir</mark> Path tempFile)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*exportsCorrectContent2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java: :(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java9 9(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java8 8(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java7 7(2í
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java6 6( 2}
,java.nio.file.Path.resolve(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java< <($2…
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java= =(2Ó
úorg.jabref.logic.exporter.Exporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java> >(2w
&java.util.Collections.singletonList(T)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java>? >(L2Ä
/java.util.List.of(E, E, E, E, E, E, E, E, E, E)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java@% @('2Ö
4java.nio.file.Files.readAllLines(java.nio.file.Path)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaL% L(12°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java5 5(%2Æ
]org.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)!tempFileCALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java< <(2∂
eorg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?file@60.13:60.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java= =(2î
Corg.jabref.logic.exporter.YamlExporterTest?yamlExporter@25.28:25.40CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java> >(2ó
Forg.jabref.logic.exporter.YamlExporterTest?databaseContext@26.38:26.53CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java> >(+2∂
eorg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?file@60.13:60.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java>- >(12∑
forg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?entry@53.17:53.22CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java>M >(R2∫
iorg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?expected@64.21:64.29CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaL L(2∂
eorg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?file@60.13:60.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaL2 L(62≥
]org.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)!tempFile	PARAMETERG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java4: 4(B2æ
forg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?entry@53.17:53.22DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java5 5(2Ω
eorg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?file@60.13:60.17DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java< <(2¡
iorg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?expected@64.21:64.29DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java@ @(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java4 4(¡
forg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?entry@53.17:53.22VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java5 5("
typeBibEntry"
isFinalfalse"·
declarationStringÀ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Test Author").withField(StandardField.TITLE, "Test Title").withField(StandardField.URL, "http://example.com").withField(StandardField.DATE, "2020-10-14")*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java5 5(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java: :(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java9 9(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java8 8(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java7 7(2í
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java6 6( 2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java5 5(%˚
eorg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?file@60.13:60.17VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java< <("
typePath"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = tempFile.resolve("RandomFileName")*file2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java< <(2}
,java.nio.file.Path.resolve(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java< <($2Æ
]org.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)!tempFileCALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java< <(Å	
iorg.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)?expected@64.21:64.29VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java@ @("
typeList<String>"
isFinalfalse"æ
declarationString®<mark class="modifier"> </mark>List<String> <mark class="class-field">expected</mark> = List.of("---"<mark class="modifier">,</mark> "references:"<mark class="modifier">,</mark> "- id: test"<mark class="modifier">,</mark> "  type: article"<mark class="modifier">,</mark> "  author:"<mark class="modifier">,</mark> "  - literal: \"Test Author\""<mark class="modifier">,</mark> "  title: \"Test Title\""<mark class="modifier">,</mark> "  issued: 2020-10-14"<mark class="modifier">,</mark> "  url: http://example.com"<mark class="modifier">,</mark> "---")*expected2_
java.util.ListTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java@ @(2j
java.lang.StringTYPE_ARGUMENTG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java@ @(2Ä
/java.util.List.of(E, E, E, E, E, E, E, E, E, E)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java@% @('è
]org.jabref.logic.exporter.YamlExporterTest.exportsCorrectContent(java.nio.file.Path)!tempFile	PARAMETERG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java4: 4(B"
typePath"
isFinalfalse"K
declarationString6<mark class="annotation">@TempDir</mark> Path tempFile*tempFile2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java45 4(9˘%
Torg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)METHODG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaP P(+"
isFinaltrue"Ω
declarationStringß <br><mark class="modifier">public </mark><mark class="modifier">final </mark><mark class="modifier">void</mark> <mark class="method">formatsContentCorrect</mark>(<mark class="annotation">@TempDir</mark> Path tempFile)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*formatsContentCorrect2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaV V(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaU U(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaT T(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaS S(2í
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaR R( 2}
,java.nio.file.Path.resolve(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaX X($2…
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaY Y(2Ó
úorg.jabref.logic.exporter.Exporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaZ Z(2w
&java.util.Collections.singletonList(T)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaZ? Z(L2Ä
/java.util.List.of(E, E, E, E, E, E, E, E, E, E)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java\% \('2Ö
4java.nio.file.Files.readAllLines(java.nio.file.Path)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javah% h(12°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaQ Q(%2Æ
]org.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)!tempFileCALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaX X(2∂
eorg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?file@88.13:88.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaY Y(2î
Corg.jabref.logic.exporter.YamlExporterTest?yamlExporter@25.28:25.40CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaZ Z(2ó
Forg.jabref.logic.exporter.YamlExporterTest?databaseContext@26.38:26.53CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaZ Z(+2∂
eorg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?file@88.13:88.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaZ- Z(12∑
forg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?entry@81.17:81.22CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaZM Z(R2∫
iorg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?expected@92.21:92.29CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javah h(2∂
eorg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?file@88.13:88.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javah2 h(62≥
]org.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)!tempFile	PARAMETERG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaP: P(B2æ
forg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?entry@81.17:81.22DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaQ Q(2Ω
eorg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?file@88.13:88.17DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaX X(2¡
iorg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?expected@92.21:92.29DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java\ \(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaP P(æ
forg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?entry@81.17:81.22VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaQ Q("
typeBibEntry"
isFinalfalse"ﬁ
declarationString»<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Misc).withCitationKey("test").withField(StandardField.AUTHOR, "Test Author").withField(StandardField.TITLE, "Test Title").withField(StandardField.URL, "http://example.com").withField(StandardField.DATE, "2020-10-14")*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaQ Q(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaV V(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaU U(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaT T(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaS S(2í
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaR R( 2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaQ Q(%˚
eorg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?file@88.13:88.17VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaX X("
typePath"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = tempFile.resolve("RandomFileName")*file2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaX X(2}
,java.nio.file.Path.resolve(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaX X($2Æ
]org.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)!tempFileCALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaX X(Å	
iorg.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)?expected@92.21:92.29VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java\ \("
typeList<String>"
isFinalfalse"æ
declarationString®<mark class="modifier"> </mark>List<String> <mark class="class-field">expected</mark> = List.of("---"<mark class="modifier">,</mark> "references:"<mark class="modifier">,</mark> "- id: test"<mark class="modifier">,</mark> "  type: no-type"<mark class="modifier">,</mark> "  author:"<mark class="modifier">,</mark> "  - literal: \"Test Author\""<mark class="modifier">,</mark> "  title: \"Test Title\""<mark class="modifier">,</mark> "  issued: 2020-10-14"<mark class="modifier">,</mark> "  url: http://example.com"<mark class="modifier">,</mark> "---")*expected2_
java.util.ListTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java\ \(2j
java.lang.StringTYPE_ARGUMENTG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java\ \(2Ä
/java.util.List.of(E, E, E, E, E, E, E, E, E, E)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java\% \('è
]org.jabref.logic.exporter.YamlExporterTest.formatsContentCorrect(java.nio.file.Path)!tempFile	PARAMETERG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaP: P(B"
typePath"
isFinalfalse"K
declarationString6<mark class="annotation">@TempDir</mark> Path tempFile*tempFile2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaP5 P(9Ô%
Torg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)METHODG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javal	 l("
isFinalfalse"ì
declarationString˝ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">passesModifiedCharset</mark>(<mark class="annotation">@TempDir</mark> Path tempFile)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*passesModifiedCharset2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javar r(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaq q(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javap p(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javao o(2í
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javan n(2}
,java.nio.file.Path.resolve(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javat t($2…
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javau u(2Ó
úorg.jabref.logic.exporter.Exporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javav v(2w
&java.util.Collections.singletonList(T)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javav? v(L2Ä
/java.util.List.of(E, E, E, E, E, E, E, E, E, E)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javax% x('2á
4java.nio.file.Files.readAllLines(java.nio.file.Path)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaÑ% Ñ(12°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javam m(%2Æ
]org.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)!tempFileCALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javat t(2∏
gorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?file@116.13:116.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javau u(2î
Corg.jabref.logic.exporter.YamlExporterTest?yamlExporter@25.28:25.40CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javav v(2ó
Forg.jabref.logic.exporter.YamlExporterTest?databaseContext@26.38:26.53CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javav v(+2∏
gorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?file@116.13:116.17CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javav- v(12π
horg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?entry@109.17:109.22CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javavM v(R2æ
korg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?expected@120.21:120.29CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaÑ Ñ(2∫
gorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?file@116.13:116.17CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaÑ2 Ñ(62≥
]org.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)!tempFile	PARAMETERG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javal- l(52¿
horg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?entry@109.17:109.22DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javam m(2ø
gorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?file@116.13:116.17DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javat t(2√
korg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?expected@120.21:120.29DECLARATIONG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javax x(2\
voidRETURN_TYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javal l(ƒ
horg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?entry@109.17:109.22VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javam m("
typeBibEntry"
isFinalfalse"‚
declarationStringÃ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ë∞∑Â¥é ÊΩ§‰∏ÄÈÉé").withField(StandardField.TITLE, "Á¥∞Èõ™").withField(StandardField.URL, "http://example.com").withField(StandardField.DATE, "2020-10-14")*entry2p
org.jabref.model.entry.BibEntryTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javam m(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javar r(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaq q(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javap p(2∞
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javao o(2í
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javan n(2°
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javam m(%˝
gorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?file@116.13:116.17VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javat t("
typePath"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = tempFile.resolve("RandomFileName")*file2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javat t(2}
,java.nio.file.Path.resolve(java.lang.String)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javat t($2Æ
]org.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)!tempFileCALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javat t(Ñ	
korg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)?expected@120.21:120.29VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javax x("
typeList<String>"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>List<String> <mark class="class-field">expected</mark> = List.of("---"<mark class="modifier">,</mark> "references:"<mark class="modifier">,</mark> "- id: test"<mark class="modifier">,</mark> "  type: article"<mark class="modifier">,</mark> "  author:"<mark class="modifier">,</mark> "  - literal: \"Ë∞∑Â¥é ÊΩ§‰∏ÄÈÉé\""<mark class="modifier">,</mark> "  title: \"Á¥∞Èõ™\""<mark class="modifier">,</mark> "  issued: 2020-10-14"<mark class="modifier">,</mark> "  url: http://example.com"<mark class="modifier">,</mark> "---")*expected2_
java.util.ListTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javax x(2j
java.lang.StringTYPE_ARGUMENTG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javax x(2Ä
/java.util.List.of(E, E, E, E, E, E, E, E, E, E)CALLG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javax% x('è
]org.jabref.logic.exporter.YamlExporterTest.passesModifiedCharset(java.nio.file.Path)!tempFile	PARAMETERG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javal- l(5"
typePath"
isFinalfalse"K
declarationString6<mark class="annotation">@TempDir</mark> Path tempFile*tempFile2c
java.nio.file.PathTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javal( l(,—&
Xorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)METHODI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaà	 à(""
isFinalfalse"ó
declarationStringÅ <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">passesModifiedCharsetNull</mark>(<mark class="annotation">@TempDir</mark> Path tempFile)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*passesModifiedCharsetNull2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaé é(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaç ç(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaå å(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaã ã(2î
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaä ä(2
,java.nio.file.Path.resolve(java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaê ê($2À
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaë ë(2
úorg.jabref.logic.exporter.Exporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaí í(2y
&java.util.Collections.singletonList(T)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaí? í(L2Ç
/java.util.List.of(E, E, E, E, E, E, E, E, E, E)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaî% î('2á
4java.nio.file.Files.readAllLines(java.nio.file.Path)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaü% ü(12£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaâ â(%2¥
aorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)!tempFileCALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaê ê(2æ
korg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?file@144.13:144.17CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaë ë(2ñ
Corg.jabref.logic.exporter.YamlExporterTest?yamlExporter@25.28:25.40CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaí í(2ô
Forg.jabref.logic.exporter.YamlExporterTest?databaseContext@26.38:26.53CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaí í(+2æ
korg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?file@144.13:144.17CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaí- í(12ø
lorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?entry@137.17:137.22CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaíM í(R2¬
oorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?expected@148.21:148.29CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaü ü(2æ
korg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?file@144.13:144.17CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaü2 ü(62π
aorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)!tempFile	PARAMETERI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaà1 à(92∆
lorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?entry@137.17:137.22DECLARATIONI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaâ â(2≈
korg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?file@144.13:144.17DECLARATIONI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaê ê(2…
oorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?expected@148.21:148.29DECLARATIONI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaî î(2^
voidRETURN_TYPEI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaà à(ÿ
lorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?entry@137.17:137.22VARIABLEI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaâ â("
typeBibEntry"
isFinalfalse"‚
declarationStringÃ<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(StandardEntryType.Article).withCitationKey("test").withField(StandardField.AUTHOR, "Ë∞∑Â¥é ÊΩ§‰∏ÄÈÉé").withField(StandardField.TITLE, "Á¥∞Èõ™").withField(StandardField.URL, "http://example.com").withField(StandardField.DATE, "2020-10-14")*entry2r
org.jabref.model.entry.BibEntryTYPEI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaâ â(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaé é(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaç ç(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaå å(2≤
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaã ã(2î
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaä ä(2£
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaâ â(%ç
korg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?file@144.13:144.17VARIABLEI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaê ê("
typePath"
isFinalfalse"É
declarationStringn<mark class="modifier"> </mark>Path <mark class="class-field">file</mark> = tempFile.resolve("RandomFileName")*file2e
java.nio.file.PathTYPEI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaê ê(2
,java.nio.file.Path.resolve(java.lang.String)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaê ê($2¥
aorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)!tempFileCALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaê ê(ê	
oorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)?expected@148.21:148.29VARIABLEI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaî î("
typeList<String>"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>List<String> <mark class="class-field">expected</mark> = List.of("---"<mark class="modifier">,</mark> "references:"<mark class="modifier">,</mark> "- id: test"<mark class="modifier">,</mark> "  type: article"<mark class="modifier">,</mark> "  author:"<mark class="modifier">,</mark> "  - literal: \"Ë∞∑Â¥é ÊΩ§‰∏ÄÈÉé\""<mark class="modifier">,</mark> "  title: \"Á¥∞Èõ™\""<mark class="modifier">,</mark> "  issued: 2020-10-14"<mark class="modifier">,</mark> "  url: http://example.com"<mark class="modifier">,</mark> "---")*expected2a
java.util.ListTYPEI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaî î(2l
java.lang.StringTYPE_ARGUMENTI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaî î(2Ç
/java.util.List.of(E, E, E, E, E, E, E, E, E, E)CALLI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaî% î('ó
aorg.jabref.logic.exporter.YamlExporterTest.passesModifiedCharsetNull(java.nio.file.Path)!tempFile	PARAMETERI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaà1 à(9"
typePath"
isFinalfalse"K
declarationString6<mark class="annotation">@TempDir</mark> Path tempFile*tempFile2e
java.nio.file.PathTYPEI
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.javaà, à(0˛
Corg.jabref.logic.exporter.YamlExporterTest?yamlExporter@25.28:25.40VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java (("
isFinalfalse"
typeExporter"ó
declarationStringÅ<mark class="modifier">private </mark><mark class="modifier">static </mark>Exporter <mark class="class-field">yamlExporter</mark>"
isStatictrue"
accessprivate*yamlExporter2s
"org.jabref.logic.exporter.ExporterTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java (•
Forg.jabref.logic.exporter.YamlExporterTest?databaseContext@26.38:26.53VARIABLEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java& (5"
isFinalfalse"
typeBibDatabaseContext"§
declarationStringé<mark class="modifier">private </mark><mark class="modifier">static </mark>BibDatabaseContext <mark class="class-field">databaseContext</mark>"
isStatictrue"
accessprivate*databaseContext2}
,org.jabref.model.database.BibDatabaseContextTYPEG
=src\test\java\org\jabref\logic\exporter\YamlExporterTest.java (%