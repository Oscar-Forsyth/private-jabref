
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.javaÚ	
(org.jabref.logic.exporter.XmpPdfExporterCLASSE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java ("$
packageorg.jabref.logic.exporter"
isFinalfalse"
inner classfalse"

isAbstractfalse"ú
declarationStringÜ<mark class="modifier">public </mark><mark class="modifier">class </mark>XmpPdfExporter<mark class="modifier"> extends </mark>Exporter"
accesspublic*XmpPdfExporter2≤
\org.jabref.logic.exporter.XmpPdfExporter.XmpPdfExporter(org.jabref.logic.xmp.XmpPreferences)DECLARATIONE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java (2˘
¢org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)DECLARATIONE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java" "(2ë
;org.jabref.logic.exporter.XmpPdfExporter?LOGGER@24.32:24.38DECLARATIONE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java  (&2ô
Corg.jabref.logic.exporter.XmpPdfExporter?xmpPreferences@26.33:26.47DECLARATIONE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java! (/2s
"org.jabref.logic.exporter.ExporterEXTENDE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java$ (,Ω

\org.jabref.logic.exporter.XmpPdfExporter.XmpPdfExporter(org.jabref.logic.xmp.XmpPreferences)CONSTRUCTORE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java ("É
declarationStringn<mark class="modifier">public </mark><mark class="method">XmpPdfExporter</mark>(XmpPreferences xmpPreferences)*XmpPdfExporter2ù
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java" (&2æ
oorg.jabref.logic.exporter.Exporter.Exporter(java.lang.String, java.lang.String, org.jabref.logic.util.FileType)CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java (2∫
korg.jabref.logic.exporter.XmpPdfExporter.XmpPdfExporter(org.jabref.logic.xmp.XmpPreferences)!xmpPreferencesCALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java (,2í
Corg.jabref.logic.exporter.XmpPdfExporter?xmpPreferences@26.33:26.47CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java (2ø
korg.jabref.logic.exporter.XmpPdfExporter.XmpPdfExporter(org.jabref.logic.xmp.XmpPreferences)!xmpPreferences	PARAMETERE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java) (72~
(org.jabref.logic.exporter.XmpPdfExporterRETURN_TYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java (°
korg.jabref.logic.exporter.XmpPdfExporter.XmpPdfExporter(org.jabref.logic.xmp.XmpPreferences)!xmpPreferences	PARAMETERE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java) (7"
typeXmpPreferences"
isFinalfalse"2
declarationStringXmpPreferences xmpPreferences*xmpPreferences2r
#org.jabref.logic.xmp.XmpPreferencesTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java ((ÈN
¢org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)METHODE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java" "("
isFinalfalse"√
declarationString≠<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">export</mark>(BibDatabaseContext databaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> Path pdfFile<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;BibEntry&gt; entries)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*export2r
#java.util.Objects.requireNonNull(T)CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java# #(2r
#java.util.Objects.requireNonNull(T)CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java$ $(2r
#java.util.Objects.requireNonNull(T)CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java% %(2r
#java.nio.file.Path.toAbsolutePath()CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java'  '(.2ö
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java) )(2l
java.nio.file.Path.toString()CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java5' 5(/2Á
óorg.jabref.logic.xmp.XmpUtilWriter.writeXmp(java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>, org.jabref.model.database.BibDatabase)CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java9. 9(62â
:org.jabref.model.database.BibDatabaseContext.getDatabase()CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java9Y 9(d2§
Uorg.jabref.logic.xmp.XmpUtilWriter.XmpUtilWriter(org.jabref.logic.xmp.XmpPreferences)CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java9 9(2Ç
≤org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!databaseContextCALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java# #(.2˙
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!pdfFileCALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java$ $(&2˙
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java% %(&2˙
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!pdfFileCALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java' '(2á
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?filePath@39.13:39.21CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java) )("2á
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?document@42.28:42.36CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java, ,(2É
≥org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?page@43.23:43.27CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java,! ,(%2á
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?document@42.28:42.36CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java.Q .(Y2É
≥org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?page@43.23:43.27CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java.[ .(_2å
ºorg.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?contentStream@46.41:46.54CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java/ /(!2å
ºorg.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?contentStream@46.41:46.54CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java0 0(!2å
ºorg.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?contentStream@46.41:46.54CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java1 1(!2å
ºorg.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?contentStream@46.41:46.54CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java2 2(!2å
ºorg.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?contentStream@46.41:46.54CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java3 3(!2á
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?document@42.28:42.36CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java5 5(2á
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?filePath@39.13:39.21CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java5 5(&2ä
;org.jabref.logic.exporter.XmpPdfExporter?LOGGER@24.32:24.38CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java7 7(2Ä
∞org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?e@54.33:54.34CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java7: 7(;2í
Corg.jabref.logic.exporter.XmpPdfExporter?xmpPreferences@26.33:26.47CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java9 9(,2˙
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!pdfFileCALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java97 9(>2˙
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!entriesCALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java9@ 9(G2Ç
≤org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!databaseContextCALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java9I 9(X2
úorg.jabref.logic.exporter.Exporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)OVERRIDEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java" "(2á
≤org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!databaseContext	PARAMETERE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java"* "(92ˇ
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!pdfFile	PARAMETERE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java"@ "(G2ˇ
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java"X "(_2é
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?filePath@39.13:39.21DECLARATIONE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java' '(2é
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?document@42.28:42.36DECLARATIONE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java* *($2ä
≥org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?page@43.23:43.27DECLARATIONE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java+ +(2ì
ºorg.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?contentStream@46.41:46.54DECLARATIONE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java.) .(62á
∞org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?e@54.33:54.34DECLARATIONE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java6! 6("2Z
voidRETURN_TYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java" "(à
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?filePath@39.13:39.21VARIABLEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java' '("
typePath"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>Path <mark class="class-field">filePath</mark> = pdfFile.toAbsolutePath()*filePath2a
java.nio.file.PathTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java' '(2r
#java.nio.file.Path.toAbsolutePath()CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java'  '(.2˙
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!pdfFileCALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java' '(≠
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?document@42.28:42.36VARIABLEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java* *($"
type
PDDocument"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>PDDocument <mark class="class-field">document</mark> = new PDDocument()*document2s
$org.apache.pdfbox.pdmodel.PDDocumentTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java* *(ë
≥org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?page@43.23:43.27VARIABLEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java+ +("
typePDPage"
isFinalfalse"o
declarationStringZ<mark class="modifier"> </mark>PDPage <mark class="class-field">page</mark> = new PDPage()*page2o
 org.apache.pdfbox.pdmodel.PDPageTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java+ +(Ä	
ºorg.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?contentStream@46.41:46.54VARIABLEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java.) .(6"
typePDPageContentStream"
isFinalfalse"°
declarationStringã<mark class="modifier"> </mark>PDPageContentStream <mark class="class-field">contentStream</mark> = new PDPageContentStream(document, page)*contentStream2|
-org.apache.pdfbox.pdmodel.PDPageContentStreamTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java. .((2á
∑org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?document@42.28:42.36CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java.Q .(Y2É
≥org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?page@43.23:43.27CALLE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java.[ .(_¸
≤org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!databaseContext	PARAMETERE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java"* "(9"
typeBibDatabaseContext"
isFinalfalse"7
declarationString"BibDatabaseContext databaseContext*databaseContext2{
,org.jabref.model.database.BibDatabaseContextTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java" "()Æ
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!pdfFile	PARAMETERE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java"@ "(G"
typePath"
isFinalfalse"!
declarationStringPath pdfFile*pdfFile2a
java.nio.file.PathTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java"; "(?∑
™org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)!entries	PARAMETERE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java"X "(_"
typeList<BibEntry>"
isFinalfalse"+
declarationStringList<BibEntry> entries*entries2]
java.util.ListTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java"I "(M2w
org.jabref.model.entry.BibEntryTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java"N "(V∂
∞org.jabref.logic.exporter.XmpPdfExporter.export(org.jabref.model.database.BibDatabaseContext, java.nio.file.Path, java.util.List<org.jabref.model.entry.BibEntry>)?e@54.33:54.34VARIABLEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java6! 6(""
typeIOException"
isFinalfalse""
declarationStringIOException e*e2b
java.io.IOExceptionTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java6 6( °
;org.jabref.logic.exporter.XmpPdfExporter?LOGGER@24.32:24.38VALUEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java  (&"
isFinaltrue"
typeLogger"‰
declarationStringŒ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(XmpPdfExporter.class);"
isStatictrue"
accessprivate*LOGGER2_
org.slf4j.LoggerTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java (á
Corg.jabref.logic.exporter.XmpPdfExporter?xmpPreferences@26.33:26.47VALUEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java! (/"
isFinaltrue"
typeXmpPreferences"û
declarationStringà<mark class="modifier">private </mark><mark class="modifier">final </mark>XmpPreferences <mark class="class-field">xmpPreferences</mark>"
isStaticfalse"
accessprivate*xmpPreferences2r
#org.jabref.logic.xmp.XmpPreferencesTYPEE
;src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java ( 