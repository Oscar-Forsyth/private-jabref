
9src\main\java\org\jabref\logic\integrity\TypeChecker.javaπ
&org.jabref.logic.integrity.TypeCheckerCLASSC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java ("%
packageorg.jabref.logic.integrity"
isFinalfalse"
inner classfalse"

isAbstractfalse"£
declarationStringç<mark class="modifier">public </mark><mark class="modifier">class </mark>TypeChecker<mark class="modifier"><br>implements </mark>EntryChecker"
accesspublic*TypeChecker2°
Morg.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)DECLARATIONC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java" ('2v
'org.jabref.logic.integrity.EntryCheckerEXTENDC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java$ (0¶
Morg.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)METHODC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java" ('"
isFinalfalse"∑
declarationString°<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;IntegrityMessage&gt; <mark class="method">check</mark>(BibEntry entry)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<IntegrityMessage>*check2ô
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java' (/2i
java.util.Optional.isEmpty()CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java (2n
!java.util.Collections.emptyList()CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java ((2v
)org.jabref.model.entry.BibEntry.getType()CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java3 (:2s
&java.util.Collections.singletonList(T)CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java (,2õ
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java! (%2n
!java.util.Collections.emptyList()CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java ($2·
ìorg.jabref.logic.integrity.IntegrityMessage.IntegrityMessage(java.lang.String, org.jabref.model.entry.BibEntry, org.jabref.model.entry.field.Field)CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java1 (A2†
Sorg.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)!entryCALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java! (&2¨
_org.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)?value@15.25:15.30CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java (2†
Sorg.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)!entryCALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java- (22†
Sorg.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)!entryCALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java[ (`2ü
Norg.jabref.logic.integrity.EntryChecker.check(org.jabref.model.entry.BibEntry)OVERRIDEC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java" ('2•
Sorg.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)!entry	PARAMETERC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java1 (62≥
_org.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)?value@15.25:15.30DECLARATIONC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java (2b
java.util.ListRETURN_TYPEC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java (2à
+org.jabref.logic.integrity.IntegrityMessageRETURN_TYPE_ARGUMENTC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java ( ˇ
_org.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)?value@15.25:15.30VARIABLEC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java ("
typeOptional<String>"
isFinalfalse"ë
declarationString|<mark class="modifier"> </mark>Optional<String> <mark class="class-field">value</mark> = entry.getField(StandardField.PAGES)*value2_
java.util.OptionalTYPEC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java (2f
java.lang.StringTYPE_ARGUMENTC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java (2ô
Lorg.jabref.model.entry.BibEntry.getField(org.jabref.model.entry.field.Field)CALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java' (/2†
Sorg.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)!entryCALLC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java! (&„
Sorg.jabref.logic.integrity.TypeChecker.check(org.jabref.model.entry.BibEntry)!entry	PARAMETERC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java1 (6"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2l
org.jabref.model.entry.BibEntryTYPEC
9src\main\java\org\jabref\logic\integrity\TypeChecker.java( (0