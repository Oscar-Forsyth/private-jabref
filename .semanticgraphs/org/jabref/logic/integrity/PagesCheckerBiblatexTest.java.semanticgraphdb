
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.javaú
3org.jabref.logic.integrity.PagesCheckerBiblatexTestCLASSP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (%"%
packageorg.jabref.logic.integrity"
isFinalfalse"
inner classfalse"

isAbstractfalse"v
declarationStringa<mark class="modifier">public </mark><mark class="modifier">class </mark>PagesCheckerBiblatexTest"
accesspublic*PagesCheckerBiblatexTest2ú
;org.jabref.logic.integrity.PagesCheckerBiblatexTest.setUp()DECLARATIONP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java	 (2§
Corg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexAccepts()DECLARATIONP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java! (.2¥
Sorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexAccepts(java.lang.String)DECLARATIONP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java-	 -(2§
Corg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexRejects()DECLARATIONP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java1! 1(.2¥
Sorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexRejects(java.lang.String)DECLARATIONP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java>	 >(2®
Gorg.jabref.logic.integrity.PagesCheckerBiblatexTest?checker@17.25:17.32DECLARATIONP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java ( ·
;org.jabref.logic.integrity.PagesCheckerBiblatexTest.setUp()METHODP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java	 ("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2π
_org.jabref.model.database.BibDatabaseContext.setMode(org.jabref.model.database.BibDatabaseMode)CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (2õ
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java* (<2º
borg.jabref.logic.integrity.PagesChecker.PagesChecker(org.jabref.model.database.BibDatabaseContext)CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java ("2™
Porg.jabref.logic.integrity.PagesCheckerBiblatexTest.setUp()?database@21.27:21.35CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (2°
Gorg.jabref.logic.integrity.PagesCheckerBiblatexTest?checker@17.25:17.32CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (2™
Porg.jabref.logic.integrity.PagesCheckerBiblatexTest.setUp()?database@21.27:21.35CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java# (+2±
Porg.jabref.logic.integrity.PagesCheckerBiblatexTest.setUp()?database@21.27:21.35DECLARATIONP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (#2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (õ
Porg.jabref.logic.integrity.PagesCheckerBiblatexTest.setUp()?database@21.27:21.35VARIABLEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (#"
typeBibDatabaseContext"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">database</mark> = new BibDatabaseContext()*database2Ü
,org.jabref.model.database.BibDatabaseContextTYPEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (2õ
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java* (<¶
Corg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexAccepts()METHODP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java! (."
isFinalfalse"†
declarationStringä<mark class="modifier">public </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">bibtexAccepts</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeStream<String>*bibtexAccepts2z
 java.util.stream.Stream.of(T...)CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (2x
java.util.stream.StreamRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (2z
java.lang.StringRETURN_TYPE_ARGUMENTP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (Ä
Sorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexAccepts(java.lang.String)METHODP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java-	 -("
isFinalfalse"«
declarationString± <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bibtexAccepts</mark>(String source)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*bibtexAccepts2t
java.util.Optional.empty()CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java. .(#2û
Dorg.jabref.logic.integrity.PagesChecker.checkValue(java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java./ .(92°
Gorg.jabref.logic.integrity.PagesCheckerBiblatexTest?checker@17.25:17.32CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java.' .(.2¥
Zorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexAccepts(java.lang.String)!sourceCALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java.: .(@2π
Zorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexAccepts(java.lang.String)!source	PARAMETERP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java- -($2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java- -(Û
Zorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexAccepts(java.lang.String)!source	PARAMETERP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java- -($"
typeString"
isFinalfalse""
declarationStringString source*source2j
java.lang.StringTYPEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java- -(¶
Corg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexRejects()METHODP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java1! 1(."
isFinalfalse"†
declarationStringä<mark class="modifier">public </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">bibtexRejects</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeStream<String>*bibtexRejects2z
 java.util.stream.Stream.of(T...)CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java2 2(2x
java.util.stream.StreamRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java1 1(2z
java.lang.StringRETURN_TYPE_ARGUMENTP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java1 1(Ä
Sorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexRejects(java.lang.String)METHODP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java>	 >("
isFinalfalse"«
declarationString± <br><mark class="annotation">@MethodSource</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bibtexRejects</mark>(String source)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*bibtexRejects2t
java.util.Optional.empty()CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java?! ?(&2û
Dorg.jabref.logic.integrity.PagesChecker.checkValue(java.lang.String)CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java?2 ?(<2°
Gorg.jabref.logic.integrity.PagesCheckerBiblatexTest?checker@17.25:17.32CALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java?* ?(12¥
Zorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexRejects(java.lang.String)!sourceCALLP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java?= ?(C2π
Zorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexRejects(java.lang.String)!source	PARAMETERP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java> >($2e
voidRETURN_TYPEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java> >(Û
Zorg.jabref.logic.integrity.PagesCheckerBiblatexTest.bibtexRejects(java.lang.String)!source	PARAMETERP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java> >($"
typeString"
isFinalfalse""
declarationStringString source*source2j
java.lang.StringTYPEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java> >(Ú
Gorg.jabref.logic.integrity.PagesCheckerBiblatexTest?checker@17.25:17.32VARIABLEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java ( "
isFinalfalse"
typePagesChecker"p
declarationString[<mark class="modifier">private </mark>PagesChecker <mark class="class-field">checker</mark>"
isStaticfalse"
accessprivate*checker2Å
'org.jabref.logic.integrity.PagesCheckerTYPEP
Fsrc\test\java\org\jabref\logic\integrity\PagesCheckerBiblatexTest.java (