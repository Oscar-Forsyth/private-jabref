
9src\main\java\org\jabref\logic\integrity\YearChecker.javaÖ	
&org.jabref.logic.integrity.YearCheckerCLASSC
9src\main\java\org\jabref\logic\integrity\YearChecker.java	 	("%
packageorg.jabref.logic.integrity"
isFinalfalse"
inner classfalse"

isAbstractfalse"£
declarationStringç<mark class="modifier">public </mark><mark class="modifier">class </mark>YearChecker<mark class="modifier"><br>implements </mark>ValueChecker"
accesspublic*YearChecker2ó
Corg.jabref.logic.integrity.YearChecker.checkValue(java.lang.String)DECLARATIONC
9src\main\java\org\jabref\logic\integrity\YearChecker.java (&2ö
Forg.jabref.logic.integrity.YearChecker?CONTAINS_FOUR_DIGIT@11.43:11.62DECLARATIONC
9src\main\java\org\jabref\logic\integrity\YearChecker.java+ (>2õ
Gorg.jabref.logic.integrity.YearChecker?ENDS_WITH_FOUR_DIGIT@13.43:13.63DECLARATIONC
9src\main\java\org\jabref\logic\integrity\YearChecker.java+ (?2ò
Dorg.jabref.logic.integrity.YearChecker?PUNCTUATION_MARKS@14.32:14.49DECLARATIONC
9src\main\java\org\jabref\logic\integrity\YearChecker.java  (12v
'org.jabref.logic.integrity.ValueCheckerEXTENDC
9src\main\java\org\jabref\logic\integrity\YearChecker.java	$ 	(0ò
Corg.jabref.logic.integrity.YearChecker.checkValue(java.lang.String)METHODC
9src\main\java\org\jabref\logic\integrity\YearChecker.java (&"
isFinalfalse"¥
declarationStringû<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;String&gt; <mark class="method">checkValue</mark>(String value)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<String>*
checkValue2ä
=org.jabref.model.strings.StringUtil.isBlank(java.lang.String)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java (2g
java.util.Optional.empty()CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java (!2q
$java.util.function.Predicate.test(T)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java! (%2d
java.lang.String.trim()CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java, (02e
java.util.Optional.of(T)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java (2õ
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java, (02q
$java.util.function.Predicate.test(T)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java!" !(&2å
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java!- !(72e
java.util.Optional.of(T)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java" "(2õ
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java", "(02g
java.util.Optional.empty()CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java% %(2ñ
Iorg.jabref.logic.integrity.YearChecker.checkValue(java.lang.String)!valueCALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java ($2ì
Forg.jabref.logic.integrity.YearChecker?CONTAINS_FOUR_DIGIT@11.43:11.62CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java ( 2ñ
Iorg.jabref.logic.integrity.YearChecker.checkValue(java.lang.String)!valueCALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java& (+2î
Gorg.jabref.logic.integrity.YearChecker?ENDS_WITH_FOUR_DIGIT@13.43:13.63CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java! !(!2ñ
Iorg.jabref.logic.integrity.YearChecker.checkValue(java.lang.String)!valueCALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java!' !(,2ë
Dorg.jabref.logic.integrity.YearChecker?PUNCTUATION_MARKS@14.32:14.49CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java!8 !(I2ï
Dorg.jabref.logic.integrity.ValueChecker.checkValue(java.lang.String)OVERRIDEC
9src\main\java\org\jabref\logic\integrity\YearChecker.java (&2õ
Iorg.jabref.logic.integrity.YearChecker.checkValue(java.lang.String)!value	PARAMETERC
9src\main\java\org\jabref\logic\integrity\YearChecker.java. (32f
java.util.OptionalRETURN_TYPEC
9src\main\java\org\jabref\logic\integrity\YearChecker.java (2m
java.lang.StringRETURN_TYPE_ARGUMENTC
9src\main\java\org\jabref\logic\integrity\YearChecker.java (∆
Iorg.jabref.logic.integrity.YearChecker.checkValue(java.lang.String)!value	PARAMETERC
9src\main\java\org\jabref\logic\integrity\YearChecker.java. (3"
typeString"
isFinalfalse"!
declarationStringString value*value2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\integrity\YearChecker.java' (-–
Forg.jabref.logic.integrity.YearChecker?CONTAINS_FOUR_DIGIT@11.43:11.62VALUEC
9src\main\java\org\jabref\logic\integrity\YearChecker.java+ (>"
isFinaltrue"
typePredicate<String>"å
declarationStringˆ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Predicate<String> <mark class="class-field">CONTAINS_FOUR_DIGIT</mark> = Pattern.compile("([^0-9]|^)[0-9]{4}([^0-9]|$)").asPredicate();"
isStatictrue"
accessprivate*CONTAINS_FOUR_DIGIT2i
java.util.function.PredicateTYPEC
9src\main\java\org\jabref\logic\integrity\YearChecker.java ("2f
java.lang.StringTYPE_ARGUMENTC
9src\main\java\org\jabref\logic\integrity\YearChecker.java# ()2r
%java.util.regex.Pattern.asPredicate()CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.javaI (T2~
1java.util.regex.Pattern.compile(java.lang.String)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.javaI (P¿
Gorg.jabref.logic.integrity.YearChecker?ENDS_WITH_FOUR_DIGIT@13.43:13.63VALUEC
9src\main\java\org\jabref\logic\integrity\YearChecker.java+ (?"
isFinaltrue"
typePredicate<String>"˙
declarationString‰<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Predicate<String> <mark class="class-field">ENDS_WITH_FOUR_DIGIT</mark> = Pattern.compile("[0-9]{4}$").asPredicate();"
isStatictrue"
accessprivate*ENDS_WITH_FOUR_DIGIT2i
java.util.function.PredicateTYPEC
9src\main\java\org\jabref\logic\integrity\YearChecker.java ("2f
java.lang.StringTYPE_ARGUMENTC
9src\main\java\org\jabref\logic\integrity\YearChecker.java# ()2r
%java.util.regex.Pattern.asPredicate()CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.java_ (j2~
1java.util.regex.Pattern.compile(java.lang.String)CALLC
9src\main\java\org\jabref\logic\integrity\YearChecker.javaJ (Qø
Dorg.jabref.logic.integrity.YearChecker?PUNCTUATION_MARKS@14.32:14.49VALUEC
9src\main\java\org\jabref\logic\integrity\YearChecker.java  (1"
isFinaltrue"
typeString"Ú
declarationString‹<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">PUNCTUATION_MARKS</mark> = "[(){}<mark class="modifier">,</mark>.;!?<>%&$]";"
isStatictrue"
accessprivate*PUNCTUATION_MARKS2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\integrity\YearChecker.java (