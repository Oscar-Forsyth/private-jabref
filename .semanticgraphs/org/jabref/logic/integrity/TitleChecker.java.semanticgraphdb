
:src\main\java\org\jabref\logic\integrity\TitleChecker.java‡
'org.jabref.logic.integrity.TitleCheckerCLASSD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java
 
("%
packageorg.jabref.logic.integrity"
isFinalfalse"
inner classfalse"

isAbstractfalse"§
declarationStringé<mark class="modifier">public </mark><mark class="modifier">class </mark>TitleChecker<mark class="modifier"><br>implements </mark>ValueChecker"
accesspublic*TitleChecker2∑
borg.jabref.logic.integrity.TitleChecker.TitleChecker(org.jabref.model.database.BibDatabaseContext)DECLARATIOND
:src\main\java\org\jabref\logic\integrity\TitleChecker.java (2ô
Dorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)DECLARATIOND
:src\main\java\org\jabref\logic\integrity\TitleChecker.java! !(&2ù
Horg.jabref.logic.integrity.TitleChecker?INSIDE_CURLY_BRAKETS@12.33:12.53DECLARATIOND
:src\main\java\org\jabref\logic\integrity\TitleChecker.java! (52ì
>org.jabref.logic.integrity.TitleChecker?DELIMITERS@13.33:13.43DECLARATIOND
:src\main\java\org\jabref\logic\integrity\TitleChecker.java! (+2ú
Gorg.jabref.logic.integrity.TitleChecker?HAS_CAPITAL_LETTERS@14.43:14.62DECLARATIOND
:src\main\java\org\jabref\logic\integrity\TitleChecker.java+ (>2ò
Corg.jabref.logic.integrity.TitleChecker?databaseContext@16.37:16.52DECLARATIOND
:src\main\java\org\jabref\logic\integrity\TitleChecker.java% (42w
'org.jabref.logic.integrity.ValueCheckerEXTENDD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java
% 
(1Î
borg.jabref.logic.integrity.TitleChecker.TitleChecker(org.jabref.model.database.BibDatabaseContext)CONSTRUCTORD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java ("Ü
declarationStringq<mark class="modifier">public </mark><mark class="method">TitleChecker</mark>(BibDatabaseContext databaseContext)*TitleChecker2¿
rorg.jabref.logic.integrity.TitleChecker.TitleChecker(org.jabref.model.database.BibDatabaseContext)!databaseContextCALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java (.2ë
Corg.jabref.logic.integrity.TitleChecker?databaseContext@16.37:16.52CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java (2≈
rorg.jabref.logic.integrity.TitleChecker.TitleChecker(org.jabref.model.database.BibDatabaseContext)!databaseContext	PARAMETERD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java+ (:2|
'org.jabref.logic.integrity.TitleCheckerRETURN_TYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java (π
rorg.jabref.logic.integrity.TitleChecker.TitleChecker(org.jabref.model.database.BibDatabaseContext)!databaseContext	PARAMETERD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java+ (:"
typeBibDatabaseContext"
isFinalfalse"7
declarationString"BibDatabaseContext databaseContext*databaseContext2z
,org.jabref.model.database.BibDatabaseContextTYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java (*ò+
Dorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)METHODD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java! !(&"
isFinalfalse"¥
declarationStringû<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;String&gt; <mark class="method">checkValue</mark>(String value)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<String>*
checkValue2ã
=org.jabref.model.strings.StringUtil.isBlank(java.lang.String)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java" "(2h
java.util.Optional.empty()CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java# #(!2ã
=org.jabref.model.database.BibDatabaseContext.isBiblatexMode()CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java& &(*2h
java.util.Optional.empty()CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java' '(!2Ç
4java.util.regex.Matcher.replaceAll(java.lang.String)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java*V *(`2Ö
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java*G *(N2É
5java.util.regex.Pattern.split(java.lang.CharSequence)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java,) ,(.2e
java.lang.String.trim()CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java.  .($2h
java.lang.String.isEmpty()CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java/ /(!2m
java.lang.String.substring(int)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java0$ 0(-2r
$java.util.function.Predicate.test(T)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java1( 1(,2f
java.util.Optional.of(T)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java2$ 2(&2ú
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java24 2(82h
java.util.Optional.empty()CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java7 7(2ò
Jorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)!valueCALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java" "($2ë
Corg.jabref.logic.integrity.TitleChecker?databaseContext@16.37:16.52CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java& &(2ñ
Horg.jabref.logic.integrity.TitleChecker?INSIDE_CURLY_BRAKETS@12.33:12.53CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java*2 *(F2ò
Jorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)!valueCALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java*O *(T2å
>org.jabref.logic.integrity.TitleChecker?DELIMITERS@13.33:13.43CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java, ,((2ø
qorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?valueOnlySpacesWithinCurlyBraces@42.15:42.47CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java,/ ,(O2©
[org.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?splitTitle@44.17:44.27CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java- -()2ß
Yorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?subTitle@45.20:45.28CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java. .(2ß
Yorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?subTitle@45.20:45.28CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java. .(2ß
Yorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?subTitle@45.20:45.28CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java/ /(2ß
Yorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?subTitle@45.20:45.28CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java0 0(2ß
Yorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?subTitle@45.20:45.28CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java0 0(#2ï
Gorg.jabref.logic.integrity.TitleChecker?HAS_CAPITAL_LETTERS@14.43:14.62CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java1 1('2ß
Yorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?subTitle@45.20:45.28CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java1- 1(52ñ
Dorg.jabref.logic.integrity.ValueChecker.checkValue(java.lang.String)OVERRIDED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java! !(&2ù
Jorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)!value	PARAMETERD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java!. !(32∆
qorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?valueOnlySpacesWithinCurlyBraces@42.15:42.47DECLARATIOND
:src\main\java\org\jabref\logic\integrity\TitleChecker.java* *(/2∞
[org.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?splitTitle@44.17:44.27DECLARATIOND
:src\main\java\org\jabref\logic\integrity\TitleChecker.java, ,(2Æ
Yorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?subTitle@45.20:45.28DECLARATIOND
:src\main\java\org\jabref\logic\integrity\TitleChecker.java- -(2g
java.util.OptionalRETURN_TYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java! !(2n
java.lang.StringRETURN_TYPE_ARGUMENTD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java! !(›
qorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?valueOnlySpacesWithinCurlyBraces@42.15:42.47VARIABLED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java* *(/"
typeString"
isFinalfalse"≤
declarationStringú<mark class="modifier"> </mark>String <mark class="class-field">valueOnlySpacesWithinCurlyBraces</mark> = INSIDE_CURLY_BRAKETS.matcher(value).replaceAll("")* valueOnlySpacesWithinCurlyBraces2^
java.lang.StringTYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java* *(2Ç
4java.util.regex.Matcher.replaceAll(java.lang.String)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java*V *(`2Ö
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java*G *(N2ñ
Horg.jabref.logic.integrity.TitleChecker?INSIDE_CURLY_BRAKETS@12.33:12.53CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java*2 *(F2ò
Jorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)!valueCALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java*O *(Tµ
[org.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?splitTitle@44.17:44.27VARIABLED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java, ,("
typeString"
isFinalfalse"û
declarationStringà<mark class="modifier"> </mark>String[] <mark class="class-field">splitTitle</mark> = DELIMITERS.split(valueOnlySpacesWithinCurlyBraces)*
splitTitle2`
java.lang.String[]TYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java, ,(2É
5java.util.regex.Pattern.split(java.lang.CharSequence)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java,) ,(.2å
>org.jabref.logic.integrity.TitleChecker?DELIMITERS@13.33:13.43CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java, ,((2ø
qorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?valueOnlySpacesWithinCurlyBraces@42.15:42.47CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java,/ ,(Où
Yorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)?subTitle@45.20:45.28VARIABLED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java- -("
typeString"
isFinalfalse"d
declarationStringO<mark class="modifier"> </mark>String <mark class="class-field">subTitle</mark>*subTitle2^
java.lang.StringTYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java- -(…
Jorg.jabref.logic.integrity.TitleChecker.checkValue(java.lang.String)!value	PARAMETERD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java!. !(3"
typeString"
isFinalfalse"!
declarationStringString value*value2^
java.lang.StringTYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java!' !(-∆
Horg.jabref.logic.integrity.TitleChecker?INSIDE_CURLY_BRAKETS@12.33:12.53VALUED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java! (5"
isFinaltrue"
typePattern"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">INSIDE_CURLY_BRAKETS</mark> = Pattern.compile("\\{[^}\\{]*\\}");"
isStatictrue"
accessprivate*INSIDE_CURLY_BRAKETS2e
java.util.regex.PatternTYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java ( 2
1java.util.regex.Pattern.compile(java.lang.String)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java@ (G±
>org.jabref.logic.integrity.TitleChecker?DELIMITERS@13.33:13.43VALUED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java! (+"
isFinaltrue"
typePattern"Ê
declarationString–<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">DELIMITERS</mark> = Pattern.compile("\\.|\\!|\\?|\\;|\\:|\\[");"
isStatictrue"
accessprivate*
DELIMITERS2e
java.util.regex.PatternTYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java ( 2
1java.util.regex.Pattern.compile(java.lang.String)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java6 (= 
Gorg.jabref.logic.integrity.TitleChecker?HAS_CAPITAL_LETTERS@14.43:14.62VALUED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java+ (>"
isFinaltrue"
typePredicate<String>"Ä
declarationStringÍ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Predicate<String> <mark class="class-field">HAS_CAPITAL_LETTERS</mark> = Pattern.compile("[\\p{Lu}\\p{Lt}]").asPredicate();"
isStatictrue"
accessprivate*HAS_CAPITAL_LETTERS2j
java.util.function.PredicateTYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java ("2g
java.lang.StringTYPE_ARGUMENTD
:src\main\java\org\jabref\logic\integrity\TitleChecker.java# ()2s
%java.util.regex.Pattern.asPredicate()CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.javae (p2
1java.util.regex.Pattern.compile(java.lang.String)CALLD
:src\main\java\org\jabref\logic\integrity\TitleChecker.javaI (Pò
Corg.jabref.logic.integrity.TitleChecker?databaseContext@16.37:16.52VALUED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java% (4"
isFinaltrue"
typeBibDatabaseContext"£
declarationStringç<mark class="modifier">private </mark><mark class="modifier">final </mark>BibDatabaseContext <mark class="class-field">databaseContext</mark>"
isStaticfalse"
accessprivate*databaseContext2z
,org.jabref.model.database.BibDatabaseContextTYPED
:src\main\java\org\jabref\logic\integrity\TitleChecker.java ($