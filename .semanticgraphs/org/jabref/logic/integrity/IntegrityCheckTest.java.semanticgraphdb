
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÚ
-org.jabref.logic.integrity.IntegrityCheckTestCLASSJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java. .("%
packageorg.jabref.logic.integrity"
isFinalfalse"
inner classfalse"

isAbstractfalse"j
declarationStringU<mark class="modifier"> </mark><mark class="modifier">class </mark>IntegrityCheckTest"
accesspackage_private*IntegrityCheckTest2©
Norg.jabref.logic.integrity.IntegrityCheckTest.bibTexAcceptsStandardEntryType()DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java1	 1('2Ø
Torg.jabref.logic.integrity.IntegrityCheckTest.bibTexDoesNotAcceptIEEETranEntryType()DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java6	 6(-2´
Porg.jabref.logic.integrity.IntegrityCheckTest.bibLaTexAcceptsIEEETranEntryType()DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java;	 ;()2´
Porg.jabref.logic.integrity.IntegrityCheckTest.bibLaTexAcceptsStandardEntryType()DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java@	 @()2∏
]org.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksCorrectFormat(java.lang.String)DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaF	 F(&2∫
_org.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksIncorrectFormat(java.lang.String)DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaN	 N((2ü
Dorg.jabref.logic.integrity.IntegrityCheckTest.provideCorrectFormat()DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaT" T(62°
Forg.jabref.logic.integrity.IntegrityCheckTest.provideIncorrectFormat()DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaX" X(82ï
:org.jabref.logic.integrity.IntegrityCheckTest.fileChecks()DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java`	 `(2¡
forg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javam	 m(-2¶
Korg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaz	 z($2˜
ôorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaó ó(,2Û
ïorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaü ü(,2Œ
qorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaß ß(,2ƒ
gorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java≠ ≠(2∆
iorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∫ ∫(2∞
Sorg.jabref.logic.integrity.IntegrityCheckTest.createCitationKeyPatternPreferences()DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java…* …(M2Ì
èorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java◊ ◊('Æ

Norg.jabref.logic.integrity.IntegrityCheckTest.bibTexAcceptsStandardEntryType()METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java1	 1('"
isFinalfalse"ã
declarationStringı<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bibTexAcceptsStandardEntryType</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*bibTexAcceptsStandardEntryType2Ω
iorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java2 2(2‰
èorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java2 2(2Ó
ôorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java2 2(,2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java1 1(æ

Torg.jabref.logic.integrity.IntegrityCheckTest.bibTexDoesNotAcceptIEEETranEntryType()METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java6	 6(-"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bibTexDoesNotAcceptIEEETranEntryType</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$bibTexDoesNotAcceptIEEETranEntryType2ª
gorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java7 7(2‰
èorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java7 7(2Ó
ôorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java7 7(*2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java6 6(¥

Porg.jabref.logic.integrity.IntegrityCheckTest.bibLaTexAcceptsIEEETranEntryType()METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java;	 ;()"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bibLaTexAcceptsIEEETranEntryType</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* bibLaTexAcceptsIEEETranEntryType2Ω
iorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java< <(2‰
èorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java< <(2Ó
ôorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java<  <(-2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java; ;(¥

Porg.jabref.logic.integrity.IntegrityCheckTest.bibLaTexAcceptsStandardEntryType()METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java@	 @()"
isFinalfalse"ç
declarationString˜<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">bibLaTexAcceptsStandardEntryType</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid* bibLaTexAcceptsStandardEntryType2Ω
iorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaA A(2‰
èorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaA A(2Ó
ôorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaA A(,2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java@ @(Â
]org.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksCorrectFormat(java.lang.String)METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaF	 F(&"
isFinalfalse"ª
declarationString• <br><mark class="annotation">@MethodSource("provideCorrectFormat")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">authorNameChecksCorrectFormat</mark>(String input)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*authorNameChecksCorrectFormat2ì
?org.jabref.model.entry.field.FieldFactory.getPersonNameFields()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaG( G(;2Ω
iorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaH H(2‰
èorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaH H("2≈
qorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaH# H(02√
oorg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksCorrectFormat(java.lang.String)?field@71.19:71.24CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaH1 H(62∑
corg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksCorrectFormat(java.lang.String)!inputCALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaH8 H(=2º
corg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksCorrectFormat(java.lang.String)!input	PARAMETERJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaF. F(32 
oorg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksCorrectFormat(java.lang.String)?field@71.19:71.24DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaG G(2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaF F(…
oorg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksCorrectFormat(java.lang.String)?field@71.19:71.24VARIABLEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaG G("
typeField"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>Field <mark class="class-field">field</mark>*field2v
"org.jabref.model.entry.field.FieldTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaG G(Ó
corg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksCorrectFormat(java.lang.String)!input	PARAMETERJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaF. F(3"
typeString"
isFinalfalse"!
declarationStringString input*input2d
java.lang.StringTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaF' F(-Û
_org.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksIncorrectFormat(java.lang.String)METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaN	 N(("
isFinalfalse"ø
declarationString© <br><mark class="annotation">@MethodSource("provideIncorrectFormat")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">authorNameChecksIncorrectFormat</mark>(String input)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*authorNameChecksIncorrectFormat2ì
?org.jabref.model.entry.field.FieldFactory.getPersonNameFields()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaO( O(;2ª
gorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaP P(2‰
èorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaP P( 2≈
qorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaP! P(.2≈
qorg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksIncorrectFormat(java.lang.String)?field@79.19:79.24CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaP/ P(42π
eorg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksIncorrectFormat(java.lang.String)!inputCALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaP6 P(;2æ
eorg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksIncorrectFormat(java.lang.String)!input	PARAMETERJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaN0 N(52Ã
qorg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksIncorrectFormat(java.lang.String)?field@79.19:79.24DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaO O(2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaN N(À
qorg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksIncorrectFormat(java.lang.String)?field@79.19:79.24VARIABLEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaO O("
typeField"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>Field <mark class="class-field">field</mark>*field2v
"org.jabref.model.entry.field.FieldTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaO O(
eorg.jabref.logic.integrity.IntegrityCheckTest.authorNameChecksIncorrectFormat(java.lang.String)!input	PARAMETERJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaN0 N(5"
typeString"
isFinalfalse"!
declarationStringString input*input2d
java.lang.StringTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaN) N(/ü
Dorg.jabref.logic.integrity.IntegrityCheckTest.provideCorrectFormat()METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaT" T(6"
isFinalfalse"®
declarationStringí<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">provideCorrectFormat</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*provideCorrectFormat2t
 java.util.stream.Stream.of(T...)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaU U(2r
java.util.stream.StreamRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaT T(2t
java.lang.StringRETURN_TYPE_ARGUMENTJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaT T( •
Forg.jabref.logic.integrity.IntegrityCheckTest.provideIncorrectFormat()METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaX" X(8"
isFinalfalse"™
declarationStringî<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">provideIncorrectFormat</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*provideIncorrectFormat2t
 java.util.stream.Stream.of(T...)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaY Y(2r
java.util.stream.StreamRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaX X(2t
java.lang.StringRETURN_TYPE_ARGUMENTJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaX X( “
:org.jabref.logic.integrity.IntegrityCheckTest.fileChecks()METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java`	 `("
isFinalfalse"˜
declarationString·<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fileChecks</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*
fileChecks2ê
<org.jabref.model.metadata.MetaData.getDefaultFileDirectory()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javab b(52l
java.util.Optional.of(T)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javabM b(O2n
java.util.Optional.empty()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javac[ c(`2Ä
,org.jabref.model.metadata.MetaData.getMode()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javae e(%2l
java.util.Optional.of(T)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javae= e(?2Ω
iorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javag g(2Í
ïorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javag g(#2Ω
iorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javah h(2Í
ïorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javah h(#2ª
gorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javai i(2Í
ïorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javai i(!2£
Oorg.jabref.logic.integrity.IntegrityCheckTest.fileChecks()?metaData@97.17:97.25CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javab b(2£
Oorg.jabref.logic.integrity.IntegrityCheckTest.fileChecks()?metaData@97.17:97.25CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javac c(2£
Oorg.jabref.logic.integrity.IntegrityCheckTest.fileChecks()?metaData@97.17:97.25CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javae e(2£
Oorg.jabref.logic.integrity.IntegrityCheckTest.fileChecks()?metaData@97.17:97.25CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javagP g(X2£
Oorg.jabref.logic.integrity.IntegrityCheckTest.fileChecks()?metaData@97.17:97.25CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javah[ h(c2£
Oorg.jabref.logic.integrity.IntegrityCheckTest.fileChecks()?metaData@97.17:97.25CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaiL i(T2™
Oorg.jabref.logic.integrity.IntegrityCheckTest.fileChecks()?metaData@97.17:97.25DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaa a(2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java` `(Ã
Oorg.jabref.logic.integrity.IntegrityCheckTest.fileChecks()?metaData@97.17:97.25VARIABLEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaa a("
typeMetaData"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>MetaData <mark class="class-field">metaData</mark> = mock(MetaData.class)*metaData2v
"org.jabref.model.metadata.MetaDataTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaa a(≈!
forg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javam	 m(-"
isFinalfalse"§
declarationStringé <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">fileCheckFindsFilesRelativeToBibFile</mark>(<mark class="annotation">@TempDir</mark> Path testFolder)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*$fileCheckFindsFilesRelativeToBibFile2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javan" n()2Ã
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javao o(2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javap" p()2Ã
xjava.nio.file.Files.createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute<? extends java.lang.Object>...)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaq q(2≈
qorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javas- s(:2§
Porg.jabref.model.database.BibDatabaseContext.setDatabasePath(java.nio.file.Path)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javat t('2Ω
iorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javav v(2≈
qorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)!testFolderCALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javan n(!2–
|org.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?bibFile@110.13:110.20CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javao o( 2≈
qorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)!testFolderCALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javap p(!2–
|org.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?pdfFile@112.13:112.20CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaq q( 2Ÿ
Ñorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?databaseContext@115.27:115.42CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javat t(2–
|org.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?bibFile@110.13:110.20CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javat( t(/2Ÿ
Ñorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?databaseContext@115.27:115.42CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javav v(%2 
qorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)!testFolder	PARAMETERJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javam< m(F2◊
|org.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?bibFile@110.13:110.20DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javan n(2◊
|org.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?pdfFile@112.13:112.20DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javap p(2‡
Ñorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?databaseContext@115.27:115.42DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javas s(*2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javam m(¥
|org.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?bibFile@110.13:110.20VARIABLEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javan n("
typePath"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>Path <mark class="class-field">bibFile</mark> = testFolder.resolve("lit.bib")*bibFile2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javan n(2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javan" n()2≈
qorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)!testFolderCALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javan n(!µ
|org.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?pdfFile@112.13:112.20VARIABLEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javap p("
typePath"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark>Path <mark class="class-field">pdfFile</mark> = testFolder.resolve("file.pdf")*pdfFile2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javap p(2Ä
,java.nio.file.Path.resolve(java.lang.String)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javap" p()2≈
qorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)!testFolderCALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javap p(!ó
Ñorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)?databaseContext@115.27:115.42VARIABLEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javas s(*"
typeBibDatabaseContext"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">databaseContext</mark> = createContext(StandardField.FILE, ":file.pdf:PDF")*databaseContext2Ä
,org.jabref.model.database.BibDatabaseContextTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javas s(2≈
qorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javas- s(:≠
qorg.jabref.logic.integrity.IntegrityCheckTest.fileCheckFindsFilesRelativeToBibFile(java.nio.file.Path)!testFolder	PARAMETERJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javam< m(F"
typePath"
isFinalfalse"M
declarationString8<mark class="annotation">@TempDir</mark> Path testFolder*
testFolder2f
java.nio.file.PathTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javam7 m(;Ï0
Korg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()METHODJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaz	 z($"
isFinalfalse"à
declarationStringÚ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">entryIsUnchangedAfterChecks</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*entryIsUnchangedAfterChecks2è
;org.jabref.model.entry.field.FieldFactory.getCommonFields()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java~( ~(72≤
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java (2m
java.util.UUID.toString()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java4 (<2o
java.util.UUID.randomUUID()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java' (12¥
^org.jabref.model.entry.BibEntry.setField(org.jabref.model.entry.field.Field, java.lang.String)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÇ Ç(2o
java.util.UUID.toString()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÇ? Ç(G2q
java.util.UUID.randomUUID()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÇ2 Ç(<2}
'org.jabref.model.entry.BibEntry.clone()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÖ0 Ö(52®
Rorg.jabref.model.database.BibDatabase.insertEntry(org.jabref.model.entry.BibEntry)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaà à(2•
Oorg.jabref.logic.journals.predatory.PredatoryJournalListLoader.loadRepository()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaã` ã(n2á
1org.jabref.logic.integrity.IntegrityCheck.check()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaë ë(2©
Sorg.jabref.logic.integrity.IntegrityCheckTest.createCitationKeyPatternPreferences()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaé é(72°
Korg.jabref.logic.journals.JournalAbbreviationLoader.loadBuiltInRepository()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaè. è(C2~
*org.jabref.model.entry.BibEntry.BibEntry()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java{ {(%2â
3org.jabref.model.database.BibDatabase.BibDatabase()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaá& á(12º
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaâ) â(;2≥
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?entry@123.17:123.22CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java (2≥
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?field@126.19:126.24CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java ( 2µ
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?entry@123.17:123.22CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÇ Ç(2µ
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?entry@123.17:123.22CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÖ* Ö(/2ª
eorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?bibDatabase@135.20:135.31CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaà à(2µ
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?entry@123.17:123.22CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaà  à(%2ª
eorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?bibDatabase@135.20:135.31CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaâ< â(G2∑
aorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?context@137.27:137.34CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaå å(&2 
torg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?predatoryJournalRepository@139.40:139.66CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaê ê(.2ª
eorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?clonedEntry@133.17:133.28CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaî î( 2µ
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?entry@123.17:123.22CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaî" î('2∫
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?entry@123.17:123.22DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java{ {(2∫
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?field@126.19:126.24DECLARATIONJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java~ ~(2¬
eorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?clonedEntry@133.17:133.28DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÖ Ö(2¬
eorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?bibDatabase@135.20:135.31DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaá á(2æ
aorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?context@137.27:137.34DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaâ â("2—
torg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?predatoryJournalRepository@139.40:139.66DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaã( ã(B2_
voidRETURN_TYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaz z(Õ
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?entry@123.17:123.22VARIABLEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java{ {("
typeBibEntry"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry()*entry2s
org.jabref.model.entry.BibEntryTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java{ {(2~
*org.jabref.model.entry.BibEntry.BibEntry()CALLJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java{ {(%π
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?field@126.19:126.24VARIABLEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java~ ~("
typeField"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>Field <mark class="class-field">field</mark>*field2v
"org.jabref.model.entry.field.FieldTYPEJ
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java~ ~(•
eorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?clonedEntry@133.17:133.28VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÖ Ö("
typeBibEntry"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>BibEntry <mark class="class-field">clonedEntry</mark> = (BibEntry) entry.clone()*clonedEntry2u
org.jabref.model.entry.BibEntryTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÖ Ö(2}
'org.jabref.model.entry.BibEntry.clone()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÖ0 Ö(52µ
_org.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?entry@123.17:123.22CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÖ* Ö(/ˇ
eorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?bibDatabase@135.20:135.31VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaá á("
typeBibDatabase"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>BibDatabase <mark class="class-field">bibDatabase</mark> = new BibDatabase()*bibDatabase2{
%org.jabref.model.database.BibDatabaseTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaá á(2â
3org.jabref.model.database.BibDatabase.BibDatabase()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaá& á(1ç
aorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?context@137.27:137.34VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaâ â(""
typeBibDatabaseContext"
isFinalfalse"ñ
declarationStringÄ<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">context</mark> = new BibDatabaseContext(bibDatabase)*context2Ç
,org.jabref.model.database.BibDatabaseContextTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaâ â(2º
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaâ) â(;2ª
eorg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?bibDatabase@135.20:135.31CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaâ< â(Gõ
torg.jabref.logic.integrity.IntegrityCheckTest.entryIsUnchangedAfterChecks()?predatoryJournalRepository@139.40:139.66VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaã( ã(B""
typePredatoryJournalRepository"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>PredatoryJournalRepository <mark class="class-field">predatoryJournalRepository</mark> = PredatoryJournalListLoader.loadRepository()*predatoryJournalRepository2î
>org.jabref.logic.journals.predatory.PredatoryJournalRepositoryTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaã ã('2•
Oorg.jabref.logic.journals.predatory.PredatoryJournalListLoader.loadRepository()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaã` ã(në#
ôorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)METHODL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaó ó(,"
isFinalfalse"õ
declarationStringÖ<mark class="modifier">private </mark>BibDatabaseContext <mark class="method">createContext</mark>(Field field<mark class="modifier"><mark class="modifier">,</mark></mark> String value<mark class="modifier"><mark class="modifier">,</mark></mark> EntryType type)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibDatabaseContext*createContext2µ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaô ô(2®
Rorg.jabref.model.database.BibDatabase.insertEntry(org.jabref.model.entry.BibEntry)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaõ õ(2¶
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaò ò(%2â
3org.jabref.model.database.BibDatabase.BibDatabase()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaö& ö(12º
forg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaú ú(%2ı
ûorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!typeCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaò& ò(*2ˆ
üorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!fieldCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaô ô( 2ˆ
üorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!valueCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaô" ô('2ä
≥org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)?bibDatabase@154.20:154.31CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaõ õ(2Ñ
≠org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)?entry@152.17:152.22CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaõ  õ(%2ä
≥org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)?bibDatabase@154.20:154.31CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaú& ú(12˚
üorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!field	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaó3 ó(82˚
üorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!value	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaóA ó(F2˙
ûorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!type	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaóR ó(V2ã
≠org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)?entry@152.17:152.22DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaò ò(2ë
≥org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)?bibDatabase@154.20:154.31DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaö ö(2â
,org.jabref.model.database.BibDatabaseContextRETURN_TYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaó ó(à
≠org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)?entry@152.17:152.22VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaò ò("
typeBibEntry"
isFinalfalse"ê
declarationString{<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry(type).withField(field, value)*entry2u
org.jabref.model.entry.BibEntryTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaò ò(2µ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaô ô(2¶
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaò ò(%2ı
ûorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!typeCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaò& ò(*2ˆ
üorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!fieldCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaô ô( 2ˆ
üorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!valueCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaô" ô('Œ
≥org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)?bibDatabase@154.20:154.31VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaö ö("
typeBibDatabase"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>BibDatabase <mark class="class-field">bibDatabase</mark> = new BibDatabase()*bibDatabase2{
%org.jabref.model.database.BibDatabaseTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaö ö(2â
3org.jabref.model.database.BibDatabase.BibDatabase()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaö& ö(1ø
üorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!field	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaó3 ó(8"
typeField"
isFinalfalse" 
declarationStringField field*field2x
"org.jabref.model.entry.field.FieldTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaó- ó(2Ø
üorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!value	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaóA ó(F"
typeString"
isFinalfalse"!
declarationStringString value*value2f
java.lang.StringTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaó: ó(@»
ûorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.entry.types.EntryType)!type	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaóR ó(V"
type	EntryType"
isFinalfalse"#
declarationStringEntryType type*type2|
&org.jabref.model.entry.types.EntryTypeTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaóH ó(QÎ"
ïorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)METHODL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaü ü(,"
isFinalfalse"û
declarationStringà<mark class="modifier">private </mark>BibDatabaseContext <mark class="method">createContext</mark>(Field field<mark class="modifier"><mark class="modifier">,</mark></mark> String value<mark class="modifier"><mark class="modifier">,</mark></mark> MetaData metaData)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibDatabaseContext*createContext2µ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java° °(2®
Rorg.jabref.model.database.BibDatabase.insertEntry(org.jabref.model.entry.BibEntry)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java£ £(2Ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java† †(%2â
3org.jabref.model.database.BibDatabase.BibDatabase()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java¢& ¢(12·
äorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext(org.jabref.model.database.BibDatabase, org.jabref.model.metadata.MetaData)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java§ §(%2Ú
õorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!fieldCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java° °( 2Ú
õorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!valueCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java°" °('2Ü
Øorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)?bibDatabase@162.20:162.31CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java£ £(2Ä
©org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)?entry@160.17:160.22CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java£  £(%2Ü
Øorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)?bibDatabase@162.20:162.31CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java§& §(12ı
ûorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!metaDataCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java§3 §(;2˜
õorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!field	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaü3 ü(82˜
õorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!value	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaüA ü(F2˙
ûorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!metaData	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaüQ ü(Y2á
©org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)?entry@160.17:160.22DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java† †(2ç
Øorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)?bibDatabase@162.20:162.31DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java¢ ¢(2â
,org.jabref.model.database.BibDatabaseContextRETURN_TYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaü ü(⁄

©org.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)?entry@160.17:160.22VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java† †("
typeBibEntry"
isFinalfalse"å
declarationStringw<mark class="modifier"> </mark>BibEntry <mark class="class-field">entry</mark> = new BibEntry().withField(field, value)*entry2u
org.jabref.model.entry.BibEntryTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java† †(2µ
_org.jabref.model.entry.BibEntry.withField(org.jabref.model.entry.field.Field, java.lang.String)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java° °(2Ä
*org.jabref.model.entry.BibEntry.BibEntry()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java† †(%2Ú
õorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!fieldCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java° °( 2Ú
õorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!valueCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java°" °(' 
Øorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)?bibDatabase@162.20:162.31VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java¢ ¢("
typeBibDatabase"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>BibDatabase <mark class="class-field">bibDatabase</mark> = new BibDatabase()*bibDatabase2{
%org.jabref.model.database.BibDatabaseTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java¢ ¢(2â
3org.jabref.model.database.BibDatabase.BibDatabase()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java¢& ¢(1ª
õorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!field	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaü3 ü(8"
typeField"
isFinalfalse" 
declarationStringField field*field2x
"org.jabref.model.entry.field.FieldTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaü- ü(2´
õorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!value	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaüA ü(F"
typeString"
isFinalfalse"!
declarationStringString value*value2f
java.lang.StringTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaü: ü(@ 
ûorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)!metaData	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaüQ ü(Y"
typeMetaData"
isFinalfalse"&
declarationStringMetaData metaData*metaData2x
"org.jabref.model.metadata.MetaDataTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaüH ü(Pπ
qorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)METHODL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaß ß(,"
isFinalfalse"œ
declarationStringπ<mark class="modifier">private </mark>BibDatabaseContext <mark class="method">createContext</mark>(Field field<mark class="modifier"><mark class="modifier">,</mark></mark> String value)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibDatabaseContext*createContext2´
Uorg.jabref.model.metadata.MetaData.setMode(org.jabref.model.database.BibDatabaseMode)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java© ©(2Ï
ïorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String, org.jabref.model.metadata.MetaData)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java™ ™(2É
-org.jabref.model.metadata.MetaData.MetaData()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java®  ®((2ﬂ
àorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)?metaData@168.17:168.25CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java© ©(2Õ
worg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)!fieldCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java™ ™("2Õ
worg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)!valueCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java™$ ™()2ﬂ
àorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)?metaData@168.17:168.25CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java™+ ™(32“
worg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)!field	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaß3 ß(82“
worg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)!value	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaßA ß(F2Ê
àorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)?metaData@168.17:168.25DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java® ®(2â
,org.jabref.model.database.BibDatabaseContextRETURN_TYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaß ß(ä
àorg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)?metaData@168.17:168.25VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java® ®("
typeMetaData"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>MetaData <mark class="class-field">metaData</mark> = new MetaData()*metaData2x
"org.jabref.model.metadata.MetaDataTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java® ®(2É
-org.jabref.model.metadata.MetaData.MetaData()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java®  ®((ñ
worg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)!field	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaß3 ß(8"
typeField"
isFinalfalse" 
declarationStringField field*field2x
"org.jabref.model.entry.field.FieldTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaß- ß(2Ü
worg.jabref.logic.integrity.IntegrityCheckTest.createContext(org.jabref.model.entry.field.Field, java.lang.String)!value	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaßA ß(F"
typeString"
isFinalfalse"!
declarationStringString value*value2f
java.lang.StringTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaß: ß(@Û
gorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)METHODL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java≠ ≠("
isFinalfalse"Ô
declarationStringŸ<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">assertWrong</mark>(BibDatabaseContext context)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*assertWrong2•
Oorg.jabref.logic.journals.predatory.PredatoryJournalListLoader.loadRepository()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaØ` Ø(n2á
1org.jabref.logic.integrity.IntegrityCheck.check()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaµ µ(2©
Sorg.jabref.logic.integrity.IntegrityCheckTest.createCitationKeyPatternPreferences()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java≤ ≤(72°
Korg.jabref.logic.journals.JournalAbbreviationLoader.loadBuiltInRepository()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java≥. ≥(C2w
!java.util.Collections.emptyList()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∑$ ∑(-2‘
~org.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)?messages@174.31:174.39CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∞ ∞(2≈
oorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)!contextCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∞* ∞(12Á
êorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)?predatoryJournalRepository@175.40:175.66CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java¥ ¥(.2‘
~org.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)?messages@174.31:174.39CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∑1 ∑(92 
oorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)!context	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java≠0 ≠(72€
~org.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)?messages@174.31:174.39DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÆ Æ('2Ó
êorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)?predatoryJournalRepository@175.40:175.66DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaØ( Ø(B2a
voidRETURN_TYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java≠ ≠(˝
~org.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)?messages@174.31:174.39VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÆ Æ('"
typeList<IntegrityMessage>"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>List<IntegrityMessage> <mark class="class-field">messages</mark>*messages2d
java.util.ListTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÆ Æ(2ä
+org.jabref.logic.integrity.IntegrityMessageTYPE_ARGUMENTL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÆ Æ(∏
êorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)?predatoryJournalRepository@175.40:175.66VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaØ( Ø(B""
typePredatoryJournalRepository"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>PredatoryJournalRepository <mark class="class-field">predatoryJournalRepository</mark> = PredatoryJournalListLoader.loadRepository()*predatoryJournalRepository2î
>org.jabref.logic.journals.predatory.PredatoryJournalRepositoryTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaØ Ø('2•
Oorg.jabref.logic.journals.predatory.PredatoryJournalListLoader.loadRepository()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaØ` Ø(n∑
oorg.jabref.logic.integrity.IntegrityCheckTest.assertWrong(org.jabref.model.database.BibDatabaseContext)!context	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java≠0 ≠(7"
typeBibDatabaseContext"
isFinalfalse"/
declarationStringBibDatabaseContext context*context2Ç
,org.jabref.model.database.BibDatabaseContextTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java≠ ≠(/ê!
iorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)METHODL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∫ ∫("
isFinalfalse"Ò
declarationString€<mark class="modifier">private </mark><mark class="modifier">void</mark> <mark class="method">assertCorrect</mark>(BibDatabaseContext context)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accessprivate"

isAbstractfalse"
typevoid*assertCorrect2†
Jorg.jabref.preferences.FilePreferences.shouldStoreFilesRelativeToBibFile()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaº! º(B2•
Oorg.jabref.logic.journals.predatory.PredatoryJournalListLoader.loadRepository()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaæ` æ(n2á
1org.jabref.logic.integrity.IntegrityCheck.check()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaƒ ƒ(2©
Sorg.jabref.logic.integrity.IntegrityCheckTest.createCitationKeyPatternPreferences()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java¡ ¡(72°
Korg.jabref.logic.journals.JournalAbbreviationLoader.loadBuiltInRepository()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java¬. ¬(C2w
!java.util.Collections.emptyList()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∆! ∆(*2™
”org.jabref.logic.integrity.IntegrityCheck.IntegrityCheck(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences, org.jabref.logic.journals.JournalAbbreviationRepository, org.jabref.logic.journals.predatory.PredatoryJournalRepository, boolean)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaø ø()2‚
ãorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?filePreferencesMock@187.24:187.43CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaº º( 2◊
Äorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?messages@189.31:189.39CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaø ø(2«
qorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)!contextCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaø* ø(12‚
ãorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?filePreferencesMock@187.24:187.43CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java¿ ¿('2È
íorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?predatoryJournalRepository@190.40:190.66CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java√ √(.2◊
Äorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?messages@189.31:189.39CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∆. ∆(62Ã
qorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)!context	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∫2 ∫(92È
ãorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?filePreferencesMock@187.24:187.43DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaª ª(+2ﬁ
Äorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?messages@189.31:189.39DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaΩ Ω('2
íorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?predatoryJournalRepository@190.40:190.66DECLARATIONL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaæ( æ(B2a
voidRETURN_TYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∫ ∫(æ
ãorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?filePreferencesMock@187.24:187.43VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaª ª(+"
typeFilePreferences"
isFinalfalse"ó
declarationStringÅ<mark class="modifier"> </mark>FilePreferences <mark class="class-field">filePreferencesMock</mark> = mock(FilePreferences.class)*filePreferencesMock2|
&org.jabref.preferences.FilePreferencesTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaª ª(Ä
Äorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?messages@189.31:189.39VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaΩ Ω('"
typeList<IntegrityMessage>"
isFinalfalse"t
declarationString_<mark class="modifier"> </mark>List<IntegrityMessage> <mark class="class-field">messages</mark>*messages2d
java.util.ListTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaΩ Ω(2ä
+org.jabref.logic.integrity.IntegrityMessageTYPE_ARGUMENTL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaΩ Ω(∫
íorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)?predatoryJournalRepository@190.40:190.66VARIABLEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaæ( æ(B""
typePredatoryJournalRepository"
isFinalfalse"π
declarationString£<mark class="modifier"> </mark>PredatoryJournalRepository <mark class="class-field">predatoryJournalRepository</mark> = PredatoryJournalListLoader.loadRepository()*predatoryJournalRepository2î
>org.jabref.logic.journals.predatory.PredatoryJournalRepositoryTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaæ æ('2•
Oorg.jabref.logic.journals.predatory.PredatoryJournalListLoader.loadRepository()CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaæ` æ(nπ
qorg.jabref.logic.integrity.IntegrityCheckTest.assertCorrect(org.jabref.model.database.BibDatabaseContext)!context	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∫2 ∫(9"
typeBibDatabaseContext"
isFinalfalse"/
declarationStringBibDatabaseContext context*context2Ç
,org.jabref.model.database.BibDatabaseContextTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java∫ ∫(1Ú	
Sorg.jabref.logic.integrity.IntegrityCheckTest.createCitationKeyPatternPreferences()METHODL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java…* …(M"
isFinalfalse"õ
declarationStringÖ<mark class="modifier">private </mark>CitationKeyPatternPreferences <mark class="method">createCitationKeyPatternPreferences</mark>()"
isStaticfalse"
accessprivate"

isAbstractfalse"%
typeCitationKeyPatternPreferences*#createCitationKeyPatternPreferences2∞
Zorg.jabref.logic.citationkeypattern.GlobalCitationKeyPattern.fromPattern(java.lang.String)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java“) “(42π
‚org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.CitationKeyPatternPreferences(boolean, boolean, boolean, org.jabref.logic.citationkeypattern.CitationKeyPatternPreferences.KeySuffix, java.lang.String, java.lang.String, java.lang.String, org.jabref.logic.citationkeypattern.GlobalCitationKeyPattern, java.lang.String, java.lang.Character)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java   (02û
Aorg.jabref.logic.citationkeypattern.CitationKeyPatternPreferencesRETURN_TYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java… …()º
èorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)METHODL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java◊ ◊('"
isFinalfalse"·
declarationStringÀ<mark class="modifier">private </mark>BibDatabaseContext <mark class="method">withMode</mark>(BibDatabaseContext context<mark class="modifier"><mark class="modifier">,</mark></mark> BibDatabaseMode mode)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeBibDatabaseContext*withMode2µ
_org.jabref.model.database.BibDatabaseContext.setMode(org.jabref.model.database.BibDatabaseMode)CALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÿ ÿ(2Ó
óorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)!contextCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÿ ÿ(2Î
îorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)!modeCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaÿ ÿ(2Ó
óorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)!contextCALLL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.javaŸ Ÿ(2Û
óorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)!context	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java◊; ◊(B2
îorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)!mode	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java◊T ◊(X2â
,org.jabref.model.database.BibDatabaseContextRETURN_TYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java◊ ◊(‡
óorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)!context	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java◊; ◊(B"
typeBibDatabaseContext"
isFinalfalse"/
declarationStringBibDatabaseContext context*context2Ç
,org.jabref.model.database.BibDatabaseContextTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java◊( ◊(:Õ
îorg.jabref.logic.integrity.IntegrityCheckTest.withMode(org.jabref.model.database.BibDatabaseContext, org.jabref.model.database.BibDatabaseMode)!mode	PARAMETERL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java◊T ◊(X"
typeBibDatabaseMode"
isFinalfalse")
declarationStringBibDatabaseMode mode*mode2
)org.jabref.model.database.BibDatabaseModeTYPEL
@src\test\java\org\jabref\logic\integrity\IntegrityCheckTest.java◊D ◊(S