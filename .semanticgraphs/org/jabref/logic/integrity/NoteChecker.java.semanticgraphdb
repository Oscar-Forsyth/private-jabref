
9src\main\java\org\jabref\logic\integrity\NoteChecker.java´	
&org.jabref.logic.integrity.NoteCheckerCLASSC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java ("%
packageorg.jabref.logic.integrity"
isFinalfalse"
inner classfalse"

isAbstractfalse"£
declarationStringç<mark class="modifier">public </mark><mark class="modifier">class </mark>NoteChecker<mark class="modifier"><br>implements </mark>ValueChecker"
accesspublic*NoteChecker2¥
`org.jabref.logic.integrity.NoteChecker.NoteChecker(org.jabref.model.database.BibDatabaseContext)DECLARATIONC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (2ó
Corg.jabref.logic.integrity.NoteChecker.checkValue(java.lang.String)DECLARATIONC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (&2ü
Korg.jabref.logic.integrity.NoteChecker?FIRST_LETTER_CAPITALIZED@13.43:13.67DECLARATIONC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java+ (C2†
Lorg.jabref.logic.integrity.NoteChecker?bibDatabaseContextEdition@15.37:15.62DECLARATIONC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java% (>2v
'org.jabref.logic.integrity.ValueCheckerEXTENDC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java$ (0·
`org.jabref.logic.integrity.NoteChecker.NoteChecker(org.jabref.model.database.BibDatabaseContext)CONSTRUCTORC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java ("à
declarationStrings<mark class="modifier">public </mark><mark class="method">NoteChecker</mark>(BibDatabaseContext bibDatabaseContext)*NoteChecker2p
#java.util.Objects.requireNonNull(T)CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java1 (?2¿
sorg.jabref.logic.integrity.NoteChecker.NoteChecker(org.jabref.model.database.BibDatabaseContext)!bibDatabaseContextCALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java@ (R2ô
Lorg.jabref.logic.integrity.NoteChecker?bibDatabaseContextEdition@15.37:15.62CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (&2≈
sorg.jabref.logic.integrity.NoteChecker.NoteChecker(org.jabref.model.database.BibDatabaseContext)!bibDatabaseContext	PARAMETERC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java* (<2z
&org.jabref.logic.integrity.NoteCheckerRETURN_TYPEC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (æ
sorg.jabref.logic.integrity.NoteChecker.NoteChecker(org.jabref.model.database.BibDatabaseContext)!bibDatabaseContext	PARAMETERC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java* (<"
typeBibDatabaseContext"
isFinalfalse":
declarationString%BibDatabaseContext bibDatabaseContext*bibDatabaseContext2y
,org.jabref.model.database.BibDatabaseContextTYPEC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java ()˚
Corg.jabref.logic.integrity.NoteChecker.checkValue(java.lang.String)METHODC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (&"
isFinalfalse"¥
declarationStringû<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>Optional&lt;String&gt; <mark class="method">checkValue</mark>(String value)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeOptional<String>*
checkValue2ä
=org.jabref.model.strings.StringUtil.isBlank(java.lang.String)CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (2g
java.util.Optional.empty()CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (!2ä
=org.jabref.model.database.BibDatabaseContext.isBiblatexMode()CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java"' "(52q
$java.util.function.Predicate.test(T)CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java"U "(Y2d
java.lang.String.trim()CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java"` "(d2e
java.util.Optional.of(T)CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java# #(2õ
Norg.jabref.logic.l10n.Localization.lang(java.lang.String, java.lang.Object...)CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java#, #(02g
java.util.Optional.empty()CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java& &(2ñ
Iorg.jabref.logic.integrity.NoteChecker.checkValue(java.lang.String)!valueCALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java ($2ô
Lorg.jabref.logic.integrity.NoteChecker?bibDatabaseContextEdition@15.37:15.62CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java" "(&2ò
Korg.jabref.logic.integrity.NoteChecker?FIRST_LETTER_CAPITALIZED@13.43:13.67CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java"< "(T2ñ
Iorg.jabref.logic.integrity.NoteChecker.checkValue(java.lang.String)!valueCALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java"Z "(_2ï
Dorg.jabref.logic.integrity.ValueChecker.checkValue(java.lang.String)OVERRIDEC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (&2õ
Iorg.jabref.logic.integrity.NoteChecker.checkValue(java.lang.String)!value	PARAMETERC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java. (32f
java.util.OptionalRETURN_TYPEC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (2m
java.lang.StringRETURN_TYPE_ARGUMENTC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java (∆
Iorg.jabref.logic.integrity.NoteChecker.checkValue(java.lang.String)!value	PARAMETERC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java. (3"
typeString"
isFinalfalse"!
declarationStringString value*value2]
java.lang.StringTYPEC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java' (- 
Korg.jabref.logic.integrity.NoteChecker?FIRST_LETTER_CAPITALIZED@13.43:13.67VALUEC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java+ (C"
isFinaltrue"
typePredicate<String>"¸
declarationStringÊ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Predicate<String> <mark class="class-field">FIRST_LETTER_CAPITALIZED</mark> = Pattern.compile("^[^a-z]").asPredicate();"
isStatictrue"
accessprivate*FIRST_LETTER_CAPITALIZED2i
java.util.function.PredicateTYPEC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java ("2f
java.lang.StringTYPE_ARGUMENTC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java# ()2r
%java.util.regex.Pattern.asPredicate()CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.javaa (l2~
1java.util.regex.Pattern.compile(java.lang.String)CALLC
9src\main\java\org\jabref\logic\integrity\NoteChecker.javaN (U≥
Lorg.jabref.logic.integrity.NoteChecker?bibDatabaseContextEdition@15.37:15.62VALUEC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java% (>"
isFinaltrue"
typeBibDatabaseContext"≠
declarationStringó<mark class="modifier">private </mark><mark class="modifier">final </mark>BibDatabaseContext <mark class="class-field">bibDatabaseContextEdition</mark>"
isStaticfalse"
accessprivate*bibDatabaseContextEdition2y
,org.jabref.model.database.BibDatabaseContextTYPEC
9src\main\java\org\jabref\logic\integrity\NoteChecker.java ($