
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.javaç
.org.jabref.logic.integrity.BracesCorrectorTestCLASSK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java ( "%
packageorg.jabref.logic.integrity"
isFinalfalse"
inner classfalse"

isAbstractfalse"q
declarationString\<mark class="modifier">public </mark><mark class="modifier">class </mark>BracesCorrectorTest"
accesspublic*BracesCorrectorTest2ò
<org.jabref.logic.integrity.BracesCorrectorTest.inputIsNull()DECLARATIONK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java
 
(2ô
=org.jabref.logic.integrity.BracesCorrectorTest.inputIsEmpty()DECLARATIONK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (2ü
Corg.jabref.logic.integrity.BracesCorrectorTest.inputWithoutBraces()DECLARATIONK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java ("2†
Dorg.jabref.logic.integrity.BracesCorrectorTest.inputAlreadyCorrect()DECLARATIONK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (#2†
Dorg.jabref.logic.integrity.BracesCorrectorTest.inputMissingClosing()DECLARATIONK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (#2†
Dorg.jabref.logic.integrity.BracesCorrectorTest.inputMissingOpening()DECLARATIONK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java# #(#2¢
Forg.jabref.logic.integrity.BracesCorrectorTest.inputWithMaskedBraces()DECLARATIONK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java( ((%2°
Eorg.jabref.logic.integrity.BracesCorrectorTest.inputWithMixedBraces()DECLARATIONK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java- -($™
<org.jabref.logic.integrity.BracesCorrectorTest.inputIsNull()METHODK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java
 
("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">inputIsNull</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*inputIsNull2ó
Borg.jabref.logic.integrity.BracesCorrector.apply(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java# ((2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java
 
(≠
=org.jabref.logic.integrity.BracesCorrectorTest.inputIsEmpty()METHODK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java ("
isFinalfalse"≤
declarationStringú<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">inputIsEmpty</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*inputIsEmpty2ó
Borg.jabref.logic.integrity.BracesCorrector.apply(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java) (.2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (ø
Corg.jabref.logic.integrity.BracesCorrectorTest.inputWithoutBraces()METHODK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (""
isFinalfalse"∏
declarationString¢<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">inputWithoutBraces</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*inputWithoutBraces2ó
Borg.jabref.logic.integrity.BracesCorrector.apply(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java/ (42`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (¬
Dorg.jabref.logic.integrity.BracesCorrectorTest.inputAlreadyCorrect()METHODK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">inputAlreadyCorrect</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*inputAlreadyCorrect2ó
Borg.jabref.logic.integrity.BracesCorrector.apply(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java1 (62`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (¬
Dorg.jabref.logic.integrity.BracesCorrectorTest.inputMissingClosing()METHODK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">inputMissingClosing</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*inputMissingClosing2ó
Borg.jabref.logic.integrity.BracesCorrector.apply(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java1 (62`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java (¬
Dorg.jabref.logic.integrity.BracesCorrectorTest.inputMissingOpening()METHODK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java# #(#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">inputMissingOpening</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*inputMissingOpening2ó
Borg.jabref.logic.integrity.BracesCorrector.apply(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java$1 $(62`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java# #(»
Forg.jabref.logic.integrity.BracesCorrectorTest.inputWithMaskedBraces()METHODK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java( ((%"
isFinalfalse"ª
declarationString•<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">inputWithMaskedBraces</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*inputWithMaskedBraces2ó
Borg.jabref.logic.integrity.BracesCorrector.apply(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java)6 )(;2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java( ((≈
Eorg.jabref.logic.integrity.BracesCorrectorTest.inputWithMixedBraces()METHODK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java- -($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">inputWithMixedBraces</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*inputWithMixedBraces2ó
Borg.jabref.logic.integrity.BracesCorrector.apply(java.lang.String)CALLK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java.: .(?2`
voidRETURN_TYPEK
Asrc\test\java\org\jabref\logic\integrity\BracesCorrectorTest.java- -(