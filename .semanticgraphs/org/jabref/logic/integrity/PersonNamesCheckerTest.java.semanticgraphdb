
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaà
1org.jabref.logic.integrity.PersonNamesCheckerTestCLASSN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (#"%
packageorg.jabref.logic.integrity"
isFinalfalse"
inner classfalse"

isAbstractfalse"t
declarationString_<mark class="modifier">public </mark><mark class="modifier">class </mark>PersonNamesCheckerTest"
accesspublic*PersonNamesCheckerTest2ò
9org.jabref.logic.integrity.PersonNamesCheckerTest.setUp()DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (2≠
Norg.jabref.logic.integrity.PersonNamesCheckerTest.validNames(java.lang.String)DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java! !(2§
Eorg.jabref.logic.integrity.PersonNamesCheckerTest.provideValidNames()DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java%" %(32Ω
^org.jabref.logic.integrity.PersonNamesCheckerTest.complainAboutPersonStringWithTwoManyCommas()DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java7 7(:2Œ
oorg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInCorrectFormatsShouldNotComplain(java.lang.String)DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java> >(;2Õ
norg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInIncorrectFormatsShouldComplain(java.lang.String)DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaD D(:2®
Iorg.jabref.logic.integrity.PersonNamesCheckerTest.provideCorrectFormats()DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaH" H(72™
Korg.jabref.logic.integrity.PersonNamesCheckerTest.provideIncorrectFormats()DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaO" O(92§
Eorg.jabref.logic.integrity.PersonNamesCheckerTest?checker@18.31:18.38DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (&2•
Forg.jabref.logic.integrity.PersonNamesCheckerTest?checkerb@19.31:19.39DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java ('Ú
9org.jabref.logic.integrity.PersonNamesCheckerTest.setUp()METHODN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java ("
isFinalfalse"˛
declarationStringË<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>Exception"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*setUp2∑
_org.jabref.model.database.BibDatabaseContext.setMode(org.jabref.model.database.BibDatabaseMode)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (2∑
_org.jabref.model.database.BibDatabaseContext.setMode(org.jabref.model.database.BibDatabaseMode)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (2ô
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java1 (C2∆
norg.jabref.logic.integrity.PersonNamesChecker.PersonNamesChecker(org.jabref.model.database.BibDatabaseContext)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java ((2ô
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java* (<2∆
norg.jabref.logic.integrity.PersonNamesChecker.PersonNamesChecker(org.jabref.model.database.BibDatabaseContext)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java ()2≠
Uorg.jabref.logic.integrity.PersonNamesCheckerTest.setUp()?databaseContext@23.27:23.42CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (2ù
Eorg.jabref.logic.integrity.PersonNamesCheckerTest?checker@18.31:18.38CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (2≠
Uorg.jabref.logic.integrity.PersonNamesCheckerTest.setUp()?databaseContext@23.27:23.42CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java) (82¶
Norg.jabref.logic.integrity.PersonNamesCheckerTest.setUp()?database@26.27:26.35CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (2û
Forg.jabref.logic.integrity.PersonNamesCheckerTest?checkerb@19.31:19.39CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (2¶
Norg.jabref.logic.integrity.PersonNamesCheckerTest.setUp()?database@26.27:26.35CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java* (22¥
Uorg.jabref.logic.integrity.PersonNamesCheckerTest.setUp()?databaseContext@23.27:23.42DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (*2≠
Norg.jabref.logic.integrity.PersonNamesCheckerTest.setUp()?database@26.27:26.35DECLARATIONN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (#2c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (®
Uorg.jabref.logic.integrity.PersonNamesCheckerTest.setUp()?databaseContext@23.27:23.42VARIABLEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (*"
typeBibDatabaseContext"
isFinalfalse"í
declarationString}<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">databaseContext</mark> = new BibDatabaseContext()*databaseContext2Ñ
,org.jabref.model.database.BibDatabaseContextTYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (2ô
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java1 (Cì
Norg.jabref.logic.integrity.PersonNamesCheckerTest.setUp()?database@26.27:26.35VARIABLEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (#"
typeBibDatabaseContext"
isFinalfalse"ã
declarationStringv<mark class="modifier"> </mark>BibDatabaseContext <mark class="class-field">database</mark> = new BibDatabaseContext()*database2Ñ
,org.jabref.model.database.BibDatabaseContextTYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (2ô
Aorg.jabref.model.database.BibDatabaseContext.BibDatabaseContext()CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java* (<Ì

Norg.jabref.logic.integrity.PersonNamesCheckerTest.validNames(java.lang.String)METHODN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java! !("
isFinalfalse"›
declarationString« <br><mark class="annotation">@MethodSource("provideValidNames")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">validNames</mark>(String name)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*
validNames2r
java.util.Optional.empty()CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java" "(#2¢
Jorg.jabref.logic.integrity.PersonNamesChecker.checkValue(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java"/ "(92ù
Eorg.jabref.logic.integrity.PersonNamesCheckerTest?checker@18.31:18.38CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java"' "(.2´
Sorg.jabref.logic.integrity.PersonNamesCheckerTest.validNames(java.lang.String)!nameCALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java": "(>2∞
Sorg.jabref.logic.integrity.PersonNamesCheckerTest.validNames(java.lang.String)!name	PARAMETERN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java!" !(&2c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java! !(‰
Sorg.jabref.logic.integrity.PersonNamesCheckerTest.validNames(java.lang.String)!name	PARAMETERN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java!" !(&"
typeString"
isFinalfalse" 
declarationStringString name*name2h
java.lang.StringTYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java! !(!™
Eorg.jabref.logic.integrity.PersonNamesCheckerTest.provideValidNames()METHODN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java%" %(3"
isFinalfalse"•
declarationStringè<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">provideValidNames</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*provideValidNames2x
 java.util.stream.Stream.of(T...)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java& &(2v
java.util.stream.StreamRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java% %(2x
java.lang.StringRETURN_TYPE_ARGUMENTN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java% %( ≠
^org.jabref.logic.integrity.PersonNamesCheckerTest.complainAboutPersonStringWithTwoManyCommas()METHODN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java7 7(:"
isFinalfalse"–
declarationString∫<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">complainAboutPersonStringWithTwoManyCommas</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid**complainAboutPersonStringWithTwoManyCommas2p
java.util.Optional.of(T)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java8 8( 2¢
Jorg.jabref.logic.integrity.PersonNamesChecker.checkValue(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java9 9("2ù
Eorg.jabref.logic.integrity.PersonNamesCheckerTest?checker@18.31:18.38CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java9 9(2c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java7 7(ö
oorg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInCorrectFormatsShouldNotComplain(java.lang.String)METHODN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java> >(;"
isFinalfalse"É
declarationStringÌ <br><mark class="annotation">@MethodSource("provideCorrectFormats")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">authorNameInCorrectFormatsShouldNotComplain</mark>(String input)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*+authorNameInCorrectFormatsShouldNotComplain2r
java.util.Optional.empty()CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java? ?(#2¢
Jorg.jabref.logic.integrity.PersonNamesChecker.checkValue(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java?0 ?(:2û
Forg.jabref.logic.integrity.PersonNamesCheckerTest?checkerb@19.31:19.39CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java?' ?(/2Õ
uorg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInCorrectFormatsShouldNotComplain(java.lang.String)!inputCALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java?; ?(@2“
uorg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInCorrectFormatsShouldNotComplain(java.lang.String)!input	PARAMETERN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java>C >(H2c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java> >(à
uorg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInCorrectFormatsShouldNotComplain(java.lang.String)!input	PARAMETERN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java>C >(H"
typeString"
isFinalfalse"!
declarationStringString input*input2h
java.lang.StringTYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java>< >(Bó
norg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInIncorrectFormatsShouldComplain(java.lang.String)METHODN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaD D(:"
isFinalfalse"Ñ
declarationStringÓ <br><mark class="annotation">@MethodSource("provideIncorrectFormats")</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">authorNameInIncorrectFormatsShouldComplain</mark>(String input)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid**authorNameInIncorrectFormatsShouldComplain2r
java.util.Optional.empty()CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaE! E(&2¢
Jorg.jabref.logic.integrity.PersonNamesChecker.checkValue(java.lang.String)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaE3 E(=2û
Forg.jabref.logic.integrity.PersonNamesCheckerTest?checkerb@19.31:19.39CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaE* E(22Ã
torg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInIncorrectFormatsShouldComplain(java.lang.String)!inputCALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaE> E(C2—
torg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInIncorrectFormatsShouldComplain(java.lang.String)!input	PARAMETERN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaDB D(G2c
voidRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaD D(á
torg.jabref.logic.integrity.PersonNamesCheckerTest.authorNameInIncorrectFormatsShouldComplain(java.lang.String)!input	PARAMETERN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaDB D(G"
typeString"
isFinalfalse"!
declarationStringString input*input2h
java.lang.StringTYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaD; D(A∂
Iorg.jabref.logic.integrity.PersonNamesCheckerTest.provideCorrectFormats()METHODN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaH" H(7"
isFinalfalse"©
declarationStringì<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">provideCorrectFormats</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*provideCorrectFormats2x
 java.util.stream.Stream.of(T...)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaI I(2v
java.util.stream.StreamRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaH H(2x
java.lang.StringRETURN_TYPE_ARGUMENTN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaH H( º
Korg.jabref.logic.integrity.PersonNamesCheckerTest.provideIncorrectFormats()METHODN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaO" O(9"
isFinalfalse"´
declarationStringï<mark class="modifier">private </mark><mark class="modifier">static </mark>Stream&lt;String&gt; <mark class="method">provideIncorrectFormats</mark>()"
isStatictrue"
accessprivate"

isAbstractfalse"
typeStream<String>*provideIncorrectFormats2x
 java.util.stream.Stream.of(T...)CALLN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaP P(2v
java.util.stream.StreamRETURN_TYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaO O(2x
java.lang.StringRETURN_TYPE_ARGUMENTN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.javaO O( ˛
Eorg.jabref.logic.integrity.PersonNamesCheckerTest?checker@18.31:18.38VARIABLEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (&"
isFinalfalse"
typePersonNamesChecker"v
declarationStringa<mark class="modifier">private </mark>PersonNamesChecker <mark class="class-field">checker</mark>"
isStaticfalse"
accessprivate*checker2Ö
-org.jabref.logic.integrity.PersonNamesCheckerTYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (Å
Forg.jabref.logic.integrity.PersonNamesCheckerTest?checkerb@19.31:19.39VARIABLEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java ('"
isFinalfalse"
typePersonNamesChecker"w
declarationStringb<mark class="modifier">private </mark>PersonNamesChecker <mark class="class-field">checkerb</mark>"
isStaticfalse"
accessprivate*checkerb2Ö
-org.jabref.logic.integrity.PersonNamesCheckerTYPEN
Dsrc\test\java\org\jabref\logic\integrity\PersonNamesCheckerTest.java (