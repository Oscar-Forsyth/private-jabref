
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaã
(org.jabref.logic.integrity.FieldCheckersCLASSE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java ("%
packageorg.jabref.logic.integrity"
isFinalfalse"
inner classfalse"

isAbstractfalse"k
declarationStringV<mark class="modifier">public </mark><mark class="modifier">class </mark>FieldCheckers"
accesspublic*FieldCheckers2•
Œorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)DECLARATIONE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (2°
 org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)DECLARATIONE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java1 (:2á
1org.jabref.logic.integrity.FieldCheckers.getAll()DECLARATIONE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java< <($2Æ
Xorg.jabref.logic.integrity.FieldCheckers.getForField(org.jabref.model.entry.field.Field)DECLARATIONE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaD$ D(/2ó
Aorg.jabref.logic.integrity.FieldCheckers?fieldChecker@19.48:19.60DECLARATIONE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java0 (<Á
Œorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)CONSTRUCTORE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java ("Œ
declarationString∏<mark class="modifier">public </mark><mark class="method">FieldCheckers</mark>(BibDatabaseContext databaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> FilePreferences filePreferences<mark class="modifier"><mark class="modifier">,</mark></mark> JournalAbbreviationRepository abbreviationRepository<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> allowIntegerEdition)*FieldCheckers2ö
 org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java ( 2ê
Aorg.jabref.logic.integrity.FieldCheckers?fieldChecker@19.48:19.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (2Æ
ﬁorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java! (02Æ
ﬁorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!filePreferencesCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java2 (A2µ
Âorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!abbreviationRepositoryCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaC (Y2≤
‚org.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!allowIntegerEditionCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java[ (n2≥
ﬁorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContext	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java, (;2≥
ﬁorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!filePreferences	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaM (\2∫
Âorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!abbreviationRepository	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java7 (M2∑
‚org.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!allowIntegerEdition	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaW (j2~
(org.jabref.logic.integrity.FieldCheckersRETURN_TYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (®
ﬁorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContext	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java, (;"
typeBibDatabaseContext"
isFinalfalse"7
declarationString"BibDatabaseContext databaseContext*databaseContext2{
,org.jabref.model.database.BibDatabaseContextTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (+ú
ﬁorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!filePreferences	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaM (\"
typeFilePreferences"
isFinalfalse"4
declarationStringFilePreferences filePreferences*filePreferences2u
&org.jabref.preferences.FilePreferencesTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java= (Lﬂ
Âorg.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!abbreviationRepository	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java7 (M"%
typeJournalAbbreviationRepository"
isFinalfalse"I
declarationString4JournalAbbreviationRepository abbreviationRepository*abbreviationRepository2Ü
7org.jabref.logic.journals.JournalAbbreviationRepositoryTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (6ó
‚org.jabref.logic.integrity.FieldCheckers.FieldCheckers(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!allowIntegerEdition	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaW (j"
typeboolean"
isFinalfalse"N
declarationString9<mark class="modifier">boolean</mark> allowIntegerEdition*allowIntegerEdition2V
booleanTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaO (Vÿç
 org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)METHODE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java1 (:"
isFinalfalse"œ
declarationStringπ<mark class="modifier">private </mark><mark class="modifier">static </mark>Multimap&lt;Field<mark class="modifier"><mark class="modifier">,</mark></mark>ValueChecker&gt; <mark class="method">getAllMap</mark>(BibDatabaseContext databaseContext<mark class="modifier"><mark class="modifier">,</mark></mark> FilePreferences filePreferences<mark class="modifier"><mark class="modifier">,</mark></mark> JournalAbbreviationRepository abbreviationRepository<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">boolean</mark> allowIntegerEdition)"
isStatictrue"
accessprivate"

isAbstractfalse"%
typeMultimap<Field, ValueChecker>*	getAllMap2é
?org.jabref.model.entry.field.FieldFactory.getPersonNameFields()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java( (;2å
=org.jabref.model.database.BibDatabaseContext.isBiblatexMode()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java2 2(*2Ω
norg.jabref.logic.integrity.PersonNamesChecker.PersonNamesChecker(org.jabref.model.database.BibDatabaseContext)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java) (;2ç
>org.jabref.logic.integrity.BooktitleChecker.BooktitleChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java 7  (G2â
:org.jabref.logic.integrity.BracketChecker.BracketChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java!3 !(A2±
borg.jabref.logic.integrity.TitleChecker.TitleChecker(org.jabref.model.database.BibDatabaseContext)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java"3 "(?2ë
Borg.jabref.logic.integrity.DoiValidityChecker.DoiValidityChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java#1 #(C2æ
oorg.jabref.logic.integrity.EditionChecker.EditionChecker(org.jabref.model.database.BibDatabaseContext, boolean)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java$5 $(C2ÿ
àorg.jabref.logic.integrity.FileChecker.FileChecker(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java%2 %(=2ø
porg.jabref.logic.integrity.HowPublishedChecker.HowPublishedChecker(org.jabref.model.database.BibDatabaseContext)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java&: &(M2É
4org.jabref.logic.integrity.ISBNChecker.ISBNChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java'2 '(=2É
4org.jabref.logic.integrity.ISSNChecker.ISSNChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java(2 ((=2±
borg.jabref.logic.integrity.MonthChecker.MonthChecker(org.jabref.model.database.BibDatabaseContext)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java)3 )(?2±
borg.jabref.logic.integrity.MonthChecker.MonthChecker(org.jabref.model.database.BibDatabaseContext)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java*8 *(D2Ø
`org.jabref.logic.integrity.NoteChecker.NoteChecker(org.jabref.model.database.BibDatabaseContext)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java+2 +(=2±
borg.jabref.logic.integrity.PagesChecker.PagesChecker(org.jabref.model.database.BibDatabaseContext)CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java,3 ,(?2Å
2org.jabref.logic.integrity.UrlChecker.UrlChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java-1 -(;2É
4org.jabref.logic.integrity.YearChecker.YearChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java.2 .(=2õ
Lorg.jabref.logic.integrity.ValidCitationKeyChecker.ValidCitationKeyChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java/1 /(H2õ
Lorg.jabref.logic.integrity.ValidCitationKeyChecker.ValidCitationKeyChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java07 0(N2É
4org.jabref.logic.integrity.DateChecker.DateChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java36 3(A2É
4org.jabref.logic.integrity.DateChecker.DateChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java49 4(D2É
4org.jabref.logic.integrity.DateChecker.DateChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java5; 5(F2É
4org.jabref.logic.integrity.DateChecker.DateChecker()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java6: 6(E2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (2¨
‹org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?field@29.19:29.24CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (#2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java< (K2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java   (2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java! !(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java" "(2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java"@ "(O2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java# #(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java$ $(2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java$D $(S2Æ
ﬁorg.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!allowIntegerEditionCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java$U $(h2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java% %(2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java%> %(M2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!filePreferencesCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java%O %(^2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java& &(2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java&N &(]2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java' '(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java( ((2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java) )(2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java)@ )(O2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java* *(2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java*E *(T2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java+ +(2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java+> +(M2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java, ,(2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java,@ ,(O2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java- -(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java. .(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java/ /(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java0 0(2™
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContextCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java2 2(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java3 3(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java4 4(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java5 5(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java6 6(2¥
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java9 9(2Ø
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContext	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaN (]2Ø
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!filePreferences	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javao (~2∏
·org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!abbreviationRepository	PARAMETERG
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaû (¥2µ
ﬁorg.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!allowIntegerEdition	PARAMETERG
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaæ (—2ª
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60DECLARATIONE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java/ (<2≥
‹org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?field@29.19:29.24DECLARATIONE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (2x
"com.google.common.collect.MultimapRETURN_TYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (2Å
"org.jabref.model.entry.field.FieldRETURN_TYPE_ARGUMENTE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (!2Ü
'org.jabref.logic.integrity.ValueCheckerRETURN_TYPE_ARGUMENTE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java# (/≤
‰org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?fieldCheckers@27.47:27.60VARIABLEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java/ (<".
type&ArrayListMultimap<Field, ValueChecker>"
isFinalfalse"≠
declarationStringó<mark class="modifier"> </mark>ArrayListMultimap<Field, ValueChecker> <mark class="class-field">fieldCheckers</mark> = ArrayListMultimap.create(50, 10)*fieldCheckers2z
+com.google.common.collect.ArrayListMultimapTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (2z
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (2
'org.jabref.logic.integrity.ValueCheckerTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java! (-≠
‹org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)?field@29.19:29.24VARIABLEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java ("
typeField"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>Field <mark class="class-field">field</mark>*field2q
"org.jabref.model.entry.field.FieldTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (§
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!databaseContext	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaN (]"
typeBibDatabaseContext"
isFinalfalse"7
declarationString"BibDatabaseContext databaseContext*databaseContext2{
,org.jabref.model.database.BibDatabaseContextTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java; (Mò
⁄org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!filePreferences	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javao (~"
typeFilePreferences"
isFinalfalse"4
declarationStringFilePreferences filePreferences*filePreferences2u
&org.jabref.preferences.FilePreferencesTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java_ (nﬂ
·org.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!abbreviationRepository	PARAMETERG
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaû (¥"%
typeJournalAbbreviationRepository"
isFinalfalse"I
declarationString4JournalAbbreviationRepository abbreviationRepository*abbreviationRepository2à
7org.jabref.logic.journals.JournalAbbreviationRepositoryTYPEG
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaÄ (ùó
ﬁorg.jabref.logic.integrity.FieldCheckers.getAllMap(org.jabref.model.database.BibDatabaseContext, org.jabref.preferences.FilePreferences, org.jabref.logic.journals.JournalAbbreviationRepository, boolean)!allowIntegerEdition	PARAMETERG
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaæ (—"
typeboolean"
isFinalfalse"N
declarationString9<mark class="modifier">boolean</mark> allowIntegerEdition*allowIntegerEdition2X
booleanTYPEG
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java∂ (Ω•

1org.jabref.logic.integrity.FieldCheckers.getAll()METHODE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java< <($"
isFinalfalse"w
declarationStringb<mark class="modifier">public </mark>List&lt;FieldChecker&gt; <mark class="method">getAll</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<FieldChecker>*getAll2s
$java.util.stream.Collectors.toList()CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaA$ A(*2ê
Aorg.jabref.logic.integrity.FieldCheckers?fieldChecker@19.48:19.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java= =(2ë
Borg.jabref.logic.integrity.FieldCheckers.getAll()?pair@64.21:64.25CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java@. @(22ë
Borg.jabref.logic.integrity.FieldCheckers.getAll()?pair@64.21:64.25CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java@= @(A2ò
Borg.jabref.logic.integrity.FieldCheckers.getAll()?pair@64.21:64.25DECLARATIONE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java@ @(2d
java.util.ListRETURN_TYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java< <(2Ü
'org.jabref.logic.integrity.FieldCheckerRETURN_TYPE_ARGUMENTE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java< <(Ÿ
Borg.jabref.logic.integrity.FieldCheckers.getAll()?pair@64.21:64.25VARIABLEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java@ @("
type"
isFinalfalse"
declarationString pair*pair2TYPE°	
Xorg.jabref.logic.integrity.FieldCheckers.getForField(org.jabref.model.entry.field.Field)METHODE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaD$ D(/"
isFinalfalse"ç
declarationStringx<mark class="modifier">public </mark>Collection&lt;ValueChecker&gt; <mark class="method">getForField</mark>(Field field)"
isStaticfalse"
accesspublic"

isAbstractfalse" 
typeCollection<ValueChecker>*getForField2ê
Aorg.jabref.logic.integrity.FieldCheckers?fieldChecker@19.48:19.60CALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaE E(2≠
^org.jabref.logic.integrity.FieldCheckers.getForField(org.jabref.model.entry.field.Field)!fieldCALLE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaF F(2≤
^org.jabref.logic.integrity.FieldCheckers.getForField(org.jabref.model.entry.field.Field)!field	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaD6 D(;2j
java.util.CollectionRETURN_TYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaD D(2Ü
'org.jabref.logic.integrity.ValueCheckerRETURN_TYPE_ARGUMENTE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaD D("Ô
^org.jabref.logic.integrity.FieldCheckers.getForField(org.jabref.model.entry.field.Field)!field	PARAMETERE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaD6 D(;"
typeField"
isFinalfalse" 
declarationStringField field*field2q
"org.jabref.model.entry.field.FieldTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.javaD0 D(5õ
Aorg.jabref.logic.integrity.FieldCheckers?fieldChecker@19.48:19.60VALUEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java0 (<"
isFinaltrue"%
typeMultimap<Field, ValueChecker>"´
declarationStringï<mark class="modifier">private </mark><mark class="modifier">final </mark>Multimap<Field, ValueChecker> <mark class="class-field">fieldChecker</mark>"
isStaticfalse"
accessprivate*fieldChecker2q
"com.google.common.collect.MultimapTYPEE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java (2z
"org.jabref.model.entry.field.FieldTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java ( 2
'org.jabref.logic.integrity.ValueCheckerTYPE_ARGUMENTE
;src\main\java\org\jabref\logic\integrity\FieldCheckers.java" (.