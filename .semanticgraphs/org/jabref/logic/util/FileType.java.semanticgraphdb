
1src\main\java\org\jabref\logic\util\FileType.javaÃ
org.jabref.logic.util.FileTypeTRAIT;
1src\main\java\org\jabref\logic\util\FileType.java (" 
packageorg.jabref.logic.util"
isFinalfalse"
inner classfalse"

isAbstractfalse"j
declarationStringU<mark class="modifier">public </mark><mark class="modifier">interface </mark>FileType"
accesspublic*FileType2å
@org.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()DECLARATION;
1src\main\java\org\jabref\logic\util\FileType.java
 
(82z
.org.jabref.logic.util.FileType.getExtensions()DECLARATION;
1src\main\java\org\jabref\logic\util\FileType.java (2t
(org.jabref.logic.util.FileType.getName()DECLARATION;
1src\main\java\org\jabref\logic\util\FileType.java (ê
@org.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()METHOD;
1src\main\java\org\jabref\logic\util\FileType.java
 
(8"
isFinalfalse"Ñ
declarationStringo<mark class="modifier"> </mark>List&lt;String&gt; <mark class="method">getExtensionsWithAsteriskAndDot</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeList<String>*getExtensionsWithAsteriskAndDot2ë
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALL;
1src\main\java\org\jabref\logic\util\FileType.java (&2ï
Pjava.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)CALL;
1src\main\java\org\jabref\logic\util\FileType.java ("2b
java.util.Collection.stream()CALL;
1src\main\java\org\jabref\logic\util\FileType.java (%2s
.org.jabref.logic.util.FileType.getExtensions()CALL;
1src\main\java\org\jabref\logic\util\FileType.java (2i
$java.util.stream.Collectors.toList()CALL;
1src\main\java\org\jabref\logic\util\FileType.java2 (82õ
Vorg.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()?extension@12.35:12.44CALL;
1src\main\java\org\jabref\logic\util\FileType.java7 (@2¢
Vorg.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()?extension@12.35:12.44DECLARATION;
1src\main\java\org\jabref\logic\util\FileType.java# (,2Z
java.util.ListRETURN_TYPE;
1src\main\java\org\jabref\logic\util\FileType.java
 
(2e
java.lang.StringRETURN_TYPE_ARGUMENT;
1src\main\java\org\jabref\logic\util\FileType.java
 
(Ì
Vorg.jabref.logic.util.FileType.getExtensionsWithAsteriskAndDot()?extension@12.35:12.44VARIABLE;
1src\main\java\org\jabref\logic\util\FileType.java# (,"
type"
isFinalfalse"
declarationString
 extension*	extension2TYPE¶
.org.jabref.logic.util.FileType.getExtensions()METHOD;
1src\main\java\org\jabref\logic\util\FileType.java ("
isFinalfalse"r
declarationString]<mark class="modifier"> </mark>List&lt;String&gt; <mark class="method">getExtensions</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeList<String>*getExtensions2Z
java.util.ListRETURN_TYPE;
1src\main\java\org\jabref\logic\util\FileType.java (2e
java.lang.StringRETURN_TYPE_ARGUMENT;
1src\main\java\org\jabref\logic\util\FileType.java	 (ù
(org.jabref.logic.util.FileType.getName()METHOD;
1src\main\java\org\jabref\logic\util\FileType.java ("
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>String <mark class="method">getName</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeString*getName2\
java.lang.StringRETURN_TYPE;
1src\main\java\org\jabref\logic\util\FileType.java (
