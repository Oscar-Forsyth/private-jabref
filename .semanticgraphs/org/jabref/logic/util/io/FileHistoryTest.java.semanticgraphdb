
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java¶
(org.jabref.logic.util.io.FileHistoryTestCLASSE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java ("#
packageorg.jabref.logic.util.io"
isFinalfalse"
inner classfalse"

isAbstractfalse"g
declarationStringR<mark class="modifier"> </mark><mark class="modifier">class </mark>FileHistoryTest"
accesspackage_private*FileHistoryTest2Ü
0org.jabref.logic.util.io.FileHistoryTest.setUp()DECLARATIONE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java	 (2ù
Gorg.jabref.logic.util.io.FileHistoryTest.newItemsAreAddedInRightOrder()DECLARATIONE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java	 (%2ü
Iorg.jabref.logic.util.io.FileHistoryTest.itemsAlreadyInListIsMovedToTop()DECLARATIONE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java	 ('2®
Rorg.jabref.logic.util.io.FileHistoryTest.removeItemsLeavesOtherItemsInRightOrder()DECLARATIONE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java%	 %(02â
3org.jabref.logic.util.io.FileHistoryTest.sizeTest()DECLARATIONE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java0	 0(2å
6org.jabref.logic.util.io.FileHistoryTest.isEmptyTest()DECLARATIONE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java9	 9(2é
8org.jabref.logic.util.io.FileHistoryTest.getFileAtTest()DECLARATIONE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java@	 @(2í
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31DECLARATIONE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (í
0org.jabref.logic.util.io.FileHistoryTest.setUp()METHODE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java	 ("
isFinalfalse"´
declarationStringï<mark class="annotation">@BeforeEach</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2ö
Korg.jabref.logic.util.io.FileHistory.of(java.util.List<java.nio.file.Path>)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java ( 2p
!java.util.Collections.emptyList()CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java- (62ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (®
Gorg.jabref.logic.util.io.FileHistoryTest.newItemsAreAddedInRightOrder()METHODE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java	 (%"
isFinalfalse"º
declarationString¶<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">newItemsAreAddedInRightOrder</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*newItemsAreAddedInRightOrder2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2l
java.util.Arrays.asList(T...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java ("2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java( (*2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java7 (92ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaB (I2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (‹
Iorg.jabref.logic.util.io.FileHistoryTest.itemsAlreadyInListIsMovedToTop()METHODE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java	 ('"
isFinalfalse"æ
declarationString®<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">itemsAlreadyInListIsMovedToTop</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*itemsAlreadyInListIsMovedToTop2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java   (2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java   (2l
java.util.Arrays.asList(T...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java! !("2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java!( !(*2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java!7 !(92ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java   (2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java!B !(I2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (®
Rorg.jabref.logic.util.io.FileHistoryTest.removeItemsLeavesOtherItemsInRightOrder()METHODE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java%	 %(0"
isFinalfalse"«
declarationString±<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">removeItemsLeavesOtherItemsInRightOrder</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*'removeItemsLeavesOtherItemsInRightOrder2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java& &(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java& &(2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java' '(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java' '(2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java( ((2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java( ((2í
Corg.jabref.logic.util.io.FileHistory.removeItem(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java* *(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java*  *("2l
java.util.Arrays.asList(T...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java, ,("2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java,( ,(*2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java,7 ,(92ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java& &(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java' '(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java( ((2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java* *(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java,B ,(I2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java% %(Ú
3org.jabref.logic.util.io.FileHistoryTest.sizeTest()METHODE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java0	 0("
isFinalfalse"®
declarationStringí<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">sizeTest</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*sizeTest2z
+org.jabref.logic.util.io.FileHistory.size()CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java1  1($2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java2 2(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java2 2(2z
+org.jabref.logic.util.io.FileHistory.size()CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java3  3($2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java4 4(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java4 4(2z
+org.jabref.logic.util.io.FileHistory.size()CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java5  5($2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java1 1(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java2 2(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java3 3(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java4 4(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java5 5(2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java0 0(À	
6org.jabref.logic.util.io.FileHistoryTest.isEmptyTest()METHODE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java9	 9("
isFinalfalse"´
declarationStringï<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">isEmptyTest</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*isEmptyTest2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java; ;(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java; ;(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java: :(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java; ;(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java< <(2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java9 9(´
8org.jabref.logic.util.io.FileHistoryTest.getFileAtTest()METHODE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java@	 @("
isFinalfalse"≠
declarationStringó<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getFileAtTest</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getFileAtTest2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaA A(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaA A(2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaB B(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaB B(2è
@org.jabref.logic.util.io.FileHistory.newFile(java.nio.file.Path)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaC C(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaC C(2ã
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaD D(2|
-org.jabref.logic.util.io.FileHistory.get(int)CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaD, D(/2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaA A(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaB B(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaC C(2ã
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31CALLE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.javaD$ D(+2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java@ @(À
<org.jabref.logic.util.io.FileHistoryTest?history@14.24:14.31VARIABLEE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java ("
isFinalfalse"
typeFileHistory"o
declarationStringZ<mark class="modifier">private </mark>FileHistory <mark class="class-field">history</mark>"
isStaticfalse"
accessprivate*history2s
$org.jabref.logic.util.io.FileHistoryTYPEE
;src\test\java\org\jabref\logic\util\io\FileHistoryTest.java (