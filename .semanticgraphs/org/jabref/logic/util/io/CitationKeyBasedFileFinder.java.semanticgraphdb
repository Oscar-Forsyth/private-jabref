
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaâ
3org.jabref.logic.util.io.CitationKeyBasedFileFinderCLASSP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java ( "#
packageorg.jabref.logic.util.io"
isFinalfalse"
inner classfalse"

isAbstractfalse"™
declarationStringî<mark class="modifier"> </mark><mark class="modifier">class </mark>CitationKeyBasedFileFinder<mark class="modifier"><br>implements </mark>FileFinder"
accesspackage_private*CitationKeyBasedFileFinder2∏
Worg.jabref.logic.util.io.CitationKeyBasedFileFinder.CitationKeyBasedFileFinder(boolean)DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java (2ê
Æorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java   ()2¿
_org.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaB B(2
éorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaP P(*2≠
Lorg.jabref.logic.util.io.CitationKeyBasedFileFinder?exactKeyOnly@25.26:25.38DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java (&2
#org.jabref.logic.util.io.FileFinderEXTENDP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java, (6Ω
Worg.jabref.logic.util.io.CitationKeyBasedFileFinder.CitationKeyBasedFileFinder(boolean)CONSTRUCTORP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java ("ü
declarationStringâ<mark class="modifier"> </mark><mark class="method">CitationKeyBasedFileFinder</mark>(<mark class="modifier">boolean</mark> exactKeyOnly)*CitationKeyBasedFileFinder2æ
dorg.jabref.logic.util.io.CitationKeyBasedFileFinder.CitationKeyBasedFileFinder(boolean)!exactKeyOnlyCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java ((2¶
Lorg.jabref.logic.util.io.CitationKeyBasedFileFinder?exactKeyOnly@25.26:25.38CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java (2√
dorg.jabref.logic.util.io.CitationKeyBasedFileFinder.CitationKeyBasedFileFinder(boolean)!exactKeyOnly	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java' (32î
3org.jabref.logic.util.io.CitationKeyBasedFileFinderRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java (†
dorg.jabref.logic.util.io.CitationKeyBasedFileFinder.CitationKeyBasedFileFinder(boolean)!exactKeyOnly	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java' (3"
typeboolean"
isFinalfalse"G
declarationString2<mark class="modifier">boolean</mark> exactKeyOnly*exactKeyOnly2a
booleanTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java (&˜a
Æorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)METHODP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java   ()"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;Path&gt; <mark class="method">findAssociatedFiles</mark>(BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;Path&gt; directories<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; extensions)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
List<Path>*findAssociatedFiles2}
#java.util.Objects.requireNonNull(T)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java! !(2}
#java.util.Objects.requireNonNull(T)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java" "(2ä
0org.jabref.model.entry.BibEntry.getCitationKey()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java$1 $(?2´
Qorg.jabref.model.strings.StringUtil.isBlank(java.util.Optional<java.lang.String>)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java% %(2{
!java.util.Collections.emptyList()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java& &((2r
java.util.Optional.get()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java() ((,2È
éorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java-' -(;2w
java.nio.file.Path.toString()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java1- 1(52z
 java.nio.file.Path.getFileName()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java1 1(*2ô
?org.jabref.logic.util.io.FileUtil.getBaseName(java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java23 2(>2É
)java.lang.String.equals(java.lang.Object)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java5% 5(+2o
java.util.List.add(E)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java6 6(2π
_org.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java:! :((2o
java.util.List.add(E)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java; ;(2¶
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java?( ?(/2z
 java.util.stream.Stream.sorted()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java? ?(%2w
java.util.Collection.stream()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java? ?(2~
$java.util.stream.Collectors.toList()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java?; ?(A2y
java.util.ArrayList.ArrayList()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java*  *(+2ï
∫org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directoriesCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java! !(*2è
¥org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!entryCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java" "($2è
¥org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!entryCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java$+ $(02•
 org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?citeKeyOptional@36.25:36.40CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java% %(.2•
 org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?citeKeyOptional@36.25:36.40CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java( (((2ï
∫org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directoriesCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java-< -(G2î
πorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensionsCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java-I -(S2®
Õorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?filesWithExtension@45.18:45.36CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java0 0(+2ö
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?file@48.18:48.22CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java1 1(2ö
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?name@49.19:49.23CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java2? 2(C2™
œorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?nameWithoutExtension@50.19:50.39CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java5 5($2ù
¬org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?citeKey@40.15:40.22CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java5, 5(32ú
¡org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?result@42.19:42.25CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java6 6(2ö
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?file@48.18:48.22CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java6 6(2¶
Lorg.jabref.logic.util.io.CitationKeyBasedFileFinder?exactKeyOnly@25.26:25.38CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java: :(2ö
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?name@49.19:49.23CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java:) :(-2ù
¬org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?citeKey@40.15:40.22CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java:/ :(62ú
¡org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?result@42.19:42.25CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java; ;(2ö
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?file@48.18:48.22CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java; ;(2ú
¡org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?result@42.19:42.25CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java? ?(2˝
ûorg.jabref.logic.util.io.FileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)OVERRIDEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java   ()2î
¥org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!entry	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java 3  (82ö
∫org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directories	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java E  (P2ô
πorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensions	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java _  (i2¨
 org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?citeKeyOptional@36.25:36.40DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java$ $((2§
¬org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?citeKey@40.15:40.22DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java( ((2£
¡org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?result@42.19:42.25DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java* *(2Ø
Õorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?filesWithExtension@45.18:45.36DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java- -($2°
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?file@48.18:48.22DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java0 0(2°
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?name@49.19:49.23DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java1 1(2±
œorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?nameWithoutExtension@50.19:50.39DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java2 2('2o
java.util.ListRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java   (2|
java.nio.file.PathRETURN_TYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java   (˘
 org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?citeKeyOptional@36.25:36.40VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java$ $(("
typeOptional<String>"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>Optional<String> <mark class="class-field">citeKeyOptional</mark> = entry.getCitationKey()*citeKeyOptional2l
java.util.OptionalTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java$ $(2s
java.lang.StringTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java$ $(2ä
0org.jabref.model.entry.BibEntry.getCitationKey()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java$1 $(?2è
¥org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!entryCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java$+ $(0—
¬org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?citeKey@40.15:40.22VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java( (("
typeString"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>String <mark class="class-field">citeKey</mark> = citeKeyOptional.get()*citeKey2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java( ((2r
java.util.Optional.get()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java() ((,2•
 org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?citeKeyOptional@36.25:36.40CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java( (((¶
¡org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?result@42.19:42.25VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java* *("
type
List<Path>"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>List<Path> <mark class="class-field">result</mark> = new ArrayList<>()*result2h
java.util.ListTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java* *(2u
java.nio.file.PathTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java* *(2y
java.util.ArrayList.ArrayList()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java*  *(+Ö
Õorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?filesWithExtension@45.18:45.36VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java- -($"
type	Set<Path>"
isFinalfalse"¢
declarationStringå<mark class="modifier"> </mark>Set<Path> <mark class="class-field">filesWithExtension</mark> = findFilesByExtension(directories, extensions)*filesWithExtension2g
java.util.SetTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java- -(2u
java.nio.file.PathTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java- -(2È
éorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java-' -(;2ï
∫org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directoriesCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java-< -(G2î
πorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensionsCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java-I -(Sí
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?file@48.18:48.22VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java0 0("
typePath"
isFinalfalse"^
declarationStringI<mark class="modifier"> </mark>Path <mark class="class-field">file</mark>*file2l
java.nio.file.PathTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java0 0(«
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?name@49.19:49.23VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java1 1("
typeString"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark>String <mark class="class-field">name</mark> = file.getFileName().toString()*name2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java1 1(2w
java.nio.file.Path.toString()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java1- 1(52z
 java.nio.file.Path.getFileName()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java1 1(*2ö
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?file@48.18:48.22CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java1 1(õ
œorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?nameWithoutExtension@50.19:50.39VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java2 2('"
typeString"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>String <mark class="class-field">nameWithoutExtension</mark> = FileUtil.getBaseName(name)*nameWithoutExtension2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java2 2(2ô
?org.jabref.logic.util.io.FileUtil.getBaseName(java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java23 2(>2ö
øorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?name@49.19:49.23CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java2? 2(Cﬂ
¥org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!entry	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java 3  (8"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2y
org.jabref.model.entry.BibEntryTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java *  (2€
∫org.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directories	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java E  (P"
type
List<Path>"
isFinalfalse"+
declarationStringList<Path> directories*directories2h
java.util.ListTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java :  (>2u
java.nio.file.PathTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java ?  (C⁄
πorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensions	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java _  (i"
typeList<String>"
isFinalfalse",
declarationStringList<String> extensions*
extensions2h
java.util.ListTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java R  (V2s
java.lang.StringTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java W  (]¢
_org.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)METHODP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaB B("
isFinalfalse"‚
declarationStringÃ<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">matches</mark>(String filename<mark class="modifier"><mark class="modifier">,</mark></mark> String citeKey)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*matches2á
-java.lang.String.startsWith(java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaC) C(32¢
Horg.jabref.logic.util.io.FileNameCleaner.cleanFileName(java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaCD C(Q2v
java.lang.String.charAt(int)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG) G(/2s
java.lang.String.length()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG8 G(>2ã
1java.lang.String.contains(java.lang.CharSequence)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaH= H(E2|
"java.lang.Character.toString(char)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaHP H(X2¬
horg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!filenameCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaC  C((2¡
gorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!citeKeyCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaCR C(Y2”
yorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)?startsWithKey@67.16:67.29CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaD D(2¬
horg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!filenameCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG  G((2¡
gorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!citeKeyCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG0 G(72“
xorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)?charAfterKey@71.17:71.29CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaHY H(e2«
horg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!filename	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaB# B(+2∆
gorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!citeKey	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaB4 B(;2⁄
yorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)?startsWithKey@67.16:67.29DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaC C(2Ÿ
xorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)?charAfterKey@71.17:71.29DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG G(2h
booleanRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaB B(Ó	
yorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)?startsWithKey@67.16:67.29VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaC C("
typeboolean"
isFinalfalse"«
declarationString±<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="class-field">startsWithKey</mark> = filename.startsWith(FileNameCleaner.cleanFileName(citeKey))*startsWithKey2a
booleanTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaC C(2á
-java.lang.String.startsWith(java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaC) C(32¢
Horg.jabref.logic.util.io.FileNameCleaner.cleanFileName(java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaCD C(Q2¬
horg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!filenameCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaC  C((2¡
gorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!citeKeyCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaCR C(YÁ
xorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)?charAfterKey@71.17:71.29VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG G("
typechar"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>char <mark class="class-field">charAfterKey</mark> = filename.charAt(citeKey.length())*charAfterKey2^
charTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG G(2v
java.lang.String.charAt(int)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG) G(/2s
java.lang.String.length()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG8 G(>2¬
horg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!filenameCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG  G((2¡
gorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!citeKeyCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaG0 G(7Ö
horg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!filename	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaB# B(+"
typeString"
isFinalfalse"$
declarationStringString filename*filename2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaB B("Ç
gorg.jabref.logic.util.io.CitationKeyBasedFileFinder.matches(java.lang.String, java.lang.String)!citeKey	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaB4 B(;"
typeString"
isFinalfalse"#
declarationStringString citeKey*citeKey2j
java.lang.StringTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaB- B(3≥@
éorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)METHODP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaP P(*"
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier">private </mark>Set&lt;Path&gt; <mark class="method">findFilesByExtension</mark>(List&lt;Path&gt; directories<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; extensions)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
type	Set<Path>*findFilesByExtension2è
5java.util.Objects.requireNonNull(T, java.lang.String)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaQ Q(2™
Pjava.nio.file.Files.isDirectory(java.nio.file.Path, java.nio.file.LinkOption...)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaSi S(t2É
)java.util.List.contains(java.lang.Object)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaT T(&2v
java.util.Optional.orElse(T)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaTG T(M2†
Forg.jabref.logic.util.io.FileUtil.getFileExtension(java.nio.file.Path)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaT0 T(@2•
Kjava.nio.file.Files.exists(java.nio.file.Path, java.nio.file.LinkOption...)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaX X(2è
¥java.nio.file.Files.find(java.nio.file.Path, int, java.util.function.BiPredicate<java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes>, java.nio.file.FileVisitOption...)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaY5 Y(92ë
7java.util.Set.addAll(java.util.Collection<? extends E>)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaZ Z(!2¶
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaZ- Z(42}
#java.util.stream.Collectors.toSet()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaZ@ Z(E2u
java.util.HashSet.HashSet()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaV V((2†
Fjava.io.IOException.IOException(java.lang.String, java.lang.Throwable)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java\ \()2Ù
ôorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensionsCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaQ Q()2˙
üorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?path@83.77:83.81CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaSu S(y2Ù
ôorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensionsCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaT T(2˙
üorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?path@83.77:83.81CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaTA T(E2ı
öorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directoriesCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaW W()2ˇ
§org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?directory@87.18:87.27CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaX X(&2ˇ
§org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?directory@87.18:87.27CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaY: Y(C2ê
µorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?isFileWithCorrectExtension@83.47:83.73CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaYX Y(r2¸
°org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?result@86.18:86.24CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaZ Z(2Ä
•org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?pathStream@89.34:89.44CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaZ" Z(,2˜
úorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?e@91.46:91.47CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java\F \(G2¸
°org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?result@86.18:86.24CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java` `(2˙
öorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directories	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaP6 P(A2˘
ôorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensions	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaPP P(Z2ó
µorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?isFileWithCorrectExtension@83.47:83.73DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaS/ S(I2É
°org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?result@86.18:86.24DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaV V(2Ü
§org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?directory@87.18:87.27DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaW W(2á
•org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?pathStream@89.34:89.44DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaY" Y(,2Å
üorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?path@83.77:83.81DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaSM S(Q2á
•org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?attributes@83.83:83.93DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaSS S(]2˛
úorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?e@91.46:91.47DECLARATIONP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java[. [(/2n
java.util.SetRETURN_TYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaP P(2|
java.nio.file.PathRETURN_TYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaP P(¡
µorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?isFileWithCorrectExtension@83.47:83.73VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaS/ S(I".
type&BiPredicate<Path, BasicFileAttributes>"
isFinalfalse"ã
declarationStringı<mark class="modifier"> </mark>BiPredicate<Path, BasicFileAttributes> <mark class="class-field">isFileWithCorrectExtension</mark> = (path, attributes) -> !Files.isDirectory(path) && extensions.contains(FileUtil.getFileExtension(path).orElse(""))*isFileWithCorrectExtension2x
java.util.function.BiPredicateTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaS S(2é
+java.nio.file.attribute.BasicFileAttributesTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaS S(2u
java.nio.file.PathTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaS S(-2™
Pjava.nio.file.Files.isDirectory(java.nio.file.Path, java.nio.file.LinkOption...)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaSi S(t2É
)java.util.List.contains(java.lang.Object)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaT T(&2v
java.util.Optional.orElse(T)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaTG T(M2†
Forg.jabref.logic.util.io.FileUtil.getFileExtension(java.nio.file.Path)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaT0 T(@2˙
üorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?path@83.77:83.81CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaSu S(y2Ù
ôorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensionsCALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaT T(2˙
üorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?path@83.77:83.81CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaTA T(E˝
°org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?result@86.18:86.24VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaV V("
type	Set<Path>"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>Set<Path> <mark class="class-field">result</mark> = new HashSet<>()*result2g
java.util.SetTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaV V(2u
java.nio.file.PathTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaV V(2u
java.util.HashSet.HashSet()CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaV V((Å
§org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?directory@87.18:87.27VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaW W("
typePath"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>Path <mark class="class-field">directory</mark>*	directory2l
java.nio.file.PathTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaW W(û
•org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?pathStream@89.34:89.44VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaY" Y(,"
typeStream<Path>"
isFinalfalse"“
declarationStringº<mark class="modifier"> </mark>Stream<Path> <mark class="class-field">pathStream</mark> = Files.find(directory, Integer.MAX_VALUE, isFileWithCorrectExtension, FileVisitOption.FOLLOW_LINKS)*
pathStream2q
java.util.stream.StreamTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaY Y(2u
java.nio.file.PathTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaY Y( 2è
¥java.nio.file.Files.find(java.nio.file.Path, int, java.util.function.BiPredicate<java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes>, java.nio.file.FileVisitOption...)CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaY5 Y(92ˇ
§org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?directory@87.18:87.27CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaY: Y(C2ê
µorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?isFileWithCorrectExtension@83.47:83.73CALLP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaYX Y(rª
öorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directories	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaP6 P(A"
type
List<Path>"
isFinalfalse"+
declarationStringList<Path> directories*directories2h
java.util.ListTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaP+ P(/2u
java.nio.file.PathTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaP0 P(4∫
ôorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensions	PARAMETERP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaPP P(Z"
typeList<String>"
isFinalfalse",
declarationStringList<String> extensions*
extensions2h
java.util.ListTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaPC P(G2s
java.lang.StringTYPE_ARGUMENTP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaPH P(N¬
üorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?path@83.77:83.81VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaSM S(Q"
type"
isFinalfalse"
declarationString path*path2TYPE‘
•org.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?attributes@83.83:83.93VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.javaSS S(]"
type"
isFinalfalse" 
declarationString attributes*
attributes2TYPE”
úorg.jabref.logic.util.io.CitationKeyBasedFileFinder.findFilesByExtension(java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?e@91.46:91.47VARIABLEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java[. [(/"
typeUncheckedIOException"
isFinalfalse"+
declarationStringUncheckedIOException e*e2v
java.io.UncheckedIOExceptionTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java[ [(-ñ
Lorg.jabref.logic.util.io.CitationKeyBasedFileFinder?exactKeyOnly@25.26:25.38VALUEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java (&"
isFinaltrue"
typeboolean"≥
declarationStringù<mark class="modifier">private </mark><mark class="modifier">final </mark><mark class="modifier">boolean</mark> <mark class="class-field">exactKeyOnly</mark>"
isStaticfalse"
accessprivate*exactKeyOnly2a
booleanTYPEP
Fsrc\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java (