
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÂ
.org.jabref.logic.util.io.RegExpBasedFileFinderCLASSK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java ("#
packageorg.jabref.logic.util.io"
isFinalfalse"
inner classfalse"

isAbstractfalse"•
declarationStringè<mark class="modifier"> </mark><mark class="modifier">class </mark>RegExpBasedFileFinder<mark class="modifier"><br>implements </mark>FileFinder"
accesspackage_private*RegExpBasedFileFinder2«
korg.jabref.logic.util.io.RegExpBasedFileFinder.RegExpBasedFileFinder(java.lang.String, java.lang.Character)DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java# #(2Ë
ãorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java- -()2¨
Porg.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaH H()2Ü
©org.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX X()2Î
éorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{ {(2Ô
êorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaá á(2√
eorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java÷ ÷("2°
Eorg.jabref.logic.util.io.RegExpBasedFileFinder?EXT_MARKER@25.32:25.42DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java  (*2•
Iorg.jabref.logic.util.io.RegExpBasedFileFinder?ESCAPE_PATTERN@27.33:27.47DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java! (/2ù
Aorg.jabref.logic.util.io.RegExpBasedFileFinder?regExp@29.25:29.31DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java (2ß
Korg.jabref.logic.util.io.RegExpBasedFileFinder?keywordDelimiter@30.28:30.44DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java (,2z
#org.jabref.logic.util.io.FileFinderEXTENDK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java' (1Ω
korg.jabref.logic.util.io.RegExpBasedFileFinder.RegExpBasedFileFinder(java.lang.String, java.lang.Character)CONSTRUCTORK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java# #("Õ
declarationString∑<mark class="modifier"> </mark><mark class="method">RegExpBasedFileFinder</mark>(String regExp<mark class="modifier"><mark class="modifier">,</mark></mark> Character keywordDelimiter)*RegExpBasedFileFinder2«
rorg.jabref.logic.util.io.RegExpBasedFileFinder.RegExpBasedFileFinder(java.lang.String, java.lang.Character)!regExpCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java$ $(2—
|org.jabref.logic.util.io.RegExpBasedFileFinder.RegExpBasedFileFinder(java.lang.String, java.lang.Character)!keywordDelimiterCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java%  %(02ñ
Aorg.jabref.logic.util.io.RegExpBasedFileFinder?regExp@29.25:29.31CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java$ $(2†
Korg.jabref.logic.util.io.RegExpBasedFileFinder?keywordDelimiter@30.28:30.44CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java% %(2Ã
rorg.jabref.logic.util.io.RegExpBasedFileFinder.RegExpBasedFileFinder(java.lang.String, java.lang.Character)!regExp	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java#! #('2÷
|org.jabref.logic.util.io.RegExpBasedFileFinder.RegExpBasedFileFinder(java.lang.String, java.lang.Character)!keywordDelimiter	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java#3 #(C2ä
.org.jabref.logic.util.io.RegExpBasedFileFinderRETURN_TYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java# #(Å
rorg.jabref.logic.util.io.RegExpBasedFileFinder.RegExpBasedFileFinder(java.lang.String, java.lang.Character)!regExp	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java#! #('"
typeString"
isFinalfalse""
declarationStringString regExp*regExp2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java# #( ®
|org.jabref.logic.util.io.RegExpBasedFileFinder.RegExpBasedFileFinder(java.lang.String, java.lang.Character)!keywordDelimiter	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java#3 #(C"
type	Character"
isFinalfalse"/
declarationStringCharacter keywordDelimiter*keywordDelimiter2h
java.lang.CharacterTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java#) #(2¨?
ãorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)METHODK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java- -()"
isFinalfalse"¯
declarationString‚<mark class="modifier">private </mark>Pattern <mark class="method">createFileNamePattern</mark>(String[] fileParts<mark class="modifier"><mark class="modifier">,</mark></mark> String extensionRegExp<mark class="modifier"><mark class="modifier">,</mark></mark> BibEntry entry)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
typePattern*createFileNamePattern2ù
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/: /(A2¸
¶org.jabref.logic.citationkeypattern.BracketedPattern.expandBracketContent(java.lang.Character, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2B 2(V2≠
Xjava.util.function.Function.andThen(java.util.function.Function<? super R, ? extends V>)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4H 4(O2Ï
ñorg.jabref.logic.citationkeypattern.BracketedPattern.expandBrackets(java.lang.String, java.util.function.Function<java.lang.String, java.lang.String>)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java6A 6(O2î
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java: :(2î
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java9 9(2ã
6java.util.regex.Pattern.compile(java.lang.String, int)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java< <("2Ñ
/java.lang.String.formatted(java.lang.Object...)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java>r >({2õ
Fjava.io.IOException.IOException(java.lang.String, java.lang.Throwable)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java> >(!2Î
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!filePartsCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/ /(#2Î
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!filePartsCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/$ /(-2ö
Eorg.jabref.logic.util.io.RegExpBasedFileFinder?EXT_MARKER@25.32:25.42CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/Q /([2†
Korg.jabref.logic.util.io.RegExpBasedFileFinder?keywordDelimiter@30.28:30.44CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2W 2(g2Á
ëorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!entryCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2i 2(n2˚
•org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?expandBracket@50.33:50.46CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4: 4(G2ˆ
†org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?filePart@47.15:47.23CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java6P 6(X2Ñ
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?bracketToFileNameRegex@52.33:52.55CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java6Z 6(p2å
∂org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?expandedBracketAsFileNameRegex@54.15:54.45CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java8! 8(?2ö
Eorg.jabref.logic.util.io.RegExpBasedFileFinder?EXT_MARKER@25.32:25.42CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java9 9(&2Ò
õorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!extensionRegExpCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java9( 9(72˝
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?fileNamePattern@56.15:56.30CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java<) <(82˛
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?fileNamePattern@56.15:56.30CALLL
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java>| >(ã2Ò
ôorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?e@61.40:61.41CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java>é >(è2•
Porg.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4P 4(v2
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!fileParts	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java-3 -(<2ˆ
õorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!extensionRegExp	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java-E -(T2Ï
ëorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java-_ -(d2˝
†org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?filePart@47.15:47.23DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/ /(2Ç
•org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?expandBracket@50.33:50.46DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2! 2(.2ã
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?bracketToFileNameRegex@52.33:52.55DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4! 4(72ì
∂org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?expandedBracketAsFileNameRegex@54.15:54.45DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java6 6(-2Ñ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?fileNamePattern@56.15:56.30DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java8 8(2ˆ
ôorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?e@61.40:61.41DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java=( =()2s
java.util.regex.PatternRETURN_TYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java- -(Ò

†org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?filePart@47.15:47.23VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/ /("
typeString"
isFinalfalse"»
declarationString≤<mark class="modifier"> </mark>String <mark class="class-field">filePart</mark> = fileParts[fileParts.length - 1].replace("[extension]"<mark class="modifier">,</mark> EXT_MARKER)*filePart2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/ /(2ù
Hjava.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/: /(A2Î
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!filePartsCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/ /(#2Î
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!filePartsCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/$ /(-2ö
Eorg.jabref.logic.util.io.RegExpBasedFileFinder?EXT_MARKER@25.32:25.42CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java/Q /([Ñ
•org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?expandBracket@50.33:50.46VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2! 2(." 
typeFunction<String, String>"
isFinalfalse"·
declarationStringÀ<mark class="modifier"> </mark>Function<String, String> <mark class="class-field">expandBracket</mark> = BracketedPattern.expandBracketContent(keywordDelimiter, entry, <mark class="modifier">null</mark>)*expandBracket2p
java.util.function.FunctionTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2 2(2n
java.lang.StringTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2 2(2n
java.lang.StringTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2 2(2¸
¶org.jabref.logic.citationkeypattern.BracketedPattern.expandBracketContent(java.lang.Character, org.jabref.model.entry.BibEntry, org.jabref.model.database.BibDatabase)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2B 2(V2†
Korg.jabref.logic.util.io.RegExpBasedFileFinder?keywordDelimiter@30.28:30.44CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2W 2(g2Á
ëorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!entryCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java2i 2(nƒ
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?bracketToFileNameRegex@52.33:52.55VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4! 4(7" 
typeFunction<String, String>"
isFinalfalse"≈
declarationStringØ<mark class="modifier"> </mark>Function<String, String> <mark class="class-field">bracketToFileNameRegex</mark> = expandBracket.andThen(RegExpBasedFileFinder::toFileNameRegex)*bracketToFileNameRegex2p
java.util.function.FunctionTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4 4(2n
java.lang.StringTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4 4(2n
java.lang.StringTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4 4(2≠
Xjava.util.function.Function.andThen(java.util.function.Function<? super R, ? extends V>)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4H 4(O2˚
•org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?expandBracket@50.33:50.46CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4: 4(G2•
Porg.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java4P 4(vÍ

∂org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?expandedBracketAsFileNameRegex@54.15:54.45VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java6 6(-"
typeString"
isFinalfalse"ø
declarationString©<mark class="modifier"> </mark>String <mark class="class-field">expandedBracketAsFileNameRegex</mark> = BracketedPattern.expandBrackets(filePart, bracketToFileNameRegex)*expandedBracketAsFileNameRegex2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java6 6(2Ï
ñorg.jabref.logic.citationkeypattern.BracketedPattern.expandBrackets(java.lang.String, java.util.function.Function<java.lang.String, java.lang.String>)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java6A 6(O2ˆ
†org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?filePart@47.15:47.23CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java6P 6(X2Ñ
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?bracketToFileNameRegex@52.33:52.55CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java6Z 6(pˇ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?fileNamePattern@56.15:56.30VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java8 8("
typeString"
isFinalfalse"ì
declarationString˝<mark class="modifier"> </mark>String <mark class="class-field">fileNamePattern</mark> = expandedBracketAsFileNameRegex.replaceAll(EXT_MARKER, // Replace the extension marker
extensionRegExp).replaceAll("\\\\\\\\"<mark class="modifier">,</mark> "\\\\")*fileNamePattern2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java8 8(2î
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java: :(2î
?java.lang.String.replaceAll(java.lang.String, java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java9 9(2å
∂org.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?expandedBracketAsFileNameRegex@54.15:54.45CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java8! 8(?2ö
Eorg.jabref.logic.util.io.RegExpBasedFileFinder?EXT_MARKER@25.32:25.42CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java9 9(&2Ò
õorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!extensionRegExpCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java9( 9(7±
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!fileParts	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java-3 -(<"
typeString[]"
isFinalfalse"'
declarationStringString[] fileParts*	fileParts2g
java.lang.String[]TYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java-* -(2Ω
õorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!extensionRegExp	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java-E -(T"
typeString"
isFinalfalse"+
declarationStringString extensionRegExp*extensionRegExp2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java-> -(D≤
ëorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java-_ -(d"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2t
org.jabref.model.entry.BibEntryTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java-V -(^‘
ôorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)?e@61.40:61.41VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java=( =()"
typePatternSyntaxException"
isFinalfalse"-
declarationStringPatternSyntaxException e*e2{
&java.util.regex.PatternSyntaxExceptionTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java= =('“
Porg.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)METHODK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaH H()"
isFinalfalse"´
declarationStringï<mark class="modifier">private </mark><mark class="modifier">static </mark>String <mark class="method">toFileNameRegex</mark>(String expandedContent)"
isStatictrue"
accessprivate"

isAbstractfalse"
typeString*toFileNameRegex2ù
Horg.jabref.logic.util.io.FileNameCleaner.cleanFileName(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaI- I(:2~
)java.lang.String.equals(java.lang.Object)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaJ J(%2Ñ
/java.util.regex.Pattern.quote(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaJ@ J(E2Ñ
/java.util.regex.Pattern.quote(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaK K(#2Ñ
/java.util.regex.Pattern.quote(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaKG K(L2µ
`org.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)!expandedContentCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaI; I(J2µ
`org.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)!expandedContentCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaJ J(2¿
korg.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)?cleanedContent@73.12:73.26CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaJ& J(42µ
`org.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)!expandedContentCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaJF J(U2µ
`org.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)!expandedContentCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaK$ K(32¿
korg.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)?cleanedContent@73.12:73.26CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaKM K([2∫
`org.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)!expandedContent	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaH1 H(@2«
korg.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)?cleanedContent@73.12:73.26DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaI I(2l
java.lang.StringRETURN_TYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaH H(Œ
korg.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)?cleanedContent@73.12:73.26VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaI I("
typevar"
isFinalfalse"ô
declarationStringÉ<mark class="modifier"> </mark>var <mark class="class-field">cleanedContent</mark> = FileNameCleaner.cleanFileName(expandedContent)*cleanedContent2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaI I(2ù
Horg.jabref.logic.util.io.FileNameCleaner.cleanFileName(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaI- I(:2µ
`org.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)!expandedContentCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaI; I(JÅ
`org.jabref.logic.util.io.RegExpBasedFileFinder.toFileNameRegex(java.lang.String)!expandedContent	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaH1 H(@"
typeString"
isFinalfalse"+
declarationStringString expandedContent*expandedContent2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaH* H(0–
©org.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)METHODK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX X()"
isFinalfalse"Ω
declarationStringß<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;Path&gt; <mark class="method">findAssociatedFiles</mark>(BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;Path&gt; directories<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;String&gt; extensions)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accesspublic"

isAbstractfalse"
type
List<Path>*findAssociatedFiles2∏
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaY. Y(22‰
éorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaZ Z(2ä
¥org.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensionsCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaY8 Y(B2Ö
Øorg.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!entryCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaZ Z(2ã
µorg.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directoriesCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaZ Z(*2õ
≈org.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?extensionRegExp@89.15:89.30CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaZ, Z(;2¯
ûorg.jabref.logic.util.io.FileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)OVERRIDEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX X()2ä
Øorg.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX3 X(82ê
µorg.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directories	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaXE X(P2è
¥org.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensions	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX_ X(i2¢
≈org.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?extensionRegExp@89.15:89.30DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaY Y(2j
java.util.ListRETURN_TYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX X(2w
java.nio.file.PathRETURN_TYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX X(π
≈org.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)?extensionRegExp@89.15:89.30VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaY Y("
typeString"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>String <mark class="class-field">extensionRegExp</mark> = '(' + String.join("|"<mark class="modifier">,</mark> extensions) + ')'*extensionRegExp2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaY Y(2∏
cjava.lang.String.join(java.lang.CharSequence, java.lang.Iterable<? extends java.lang.CharSequence>)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaY. Y(22ä
¥org.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensionsCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaY8 Y(B–
Øorg.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX3 X(8"
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2t
org.jabref.model.entry.BibEntryTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX* X(2«
µorg.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!directories	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaXE X(P"
type
List<Path>"
isFinalfalse"+
declarationStringList<Path> directories*directories2c
java.util.ListTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX: X(>2p
java.nio.file.PathTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX? X(C∆
¥org.jabref.logic.util.io.RegExpBasedFileFinder.findAssociatedFiles(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.util.List<java.lang.String>)!extensions	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaX_ X(i"
typeList<String>"
isFinalfalse",
declarationStringList<String> extensions*
extensions2c
java.util.ListTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaXR X(V2n
java.lang.StringTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaXW X(]‡!
éorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)METHODK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{ {("
isFinalfalse"˜
declarationString·<mark class="modifier">private </mark>List&lt;Path&gt; <mark class="method">findFile</mark>(BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> List&lt;Path&gt; dirs<mark class="modifier"><mark class="modifier">,</mark></mark> String extensionRegExp)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
type
List<Path>*findFile2ç
8java.util.List.addAll(java.util.Collection<? extends E>)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java~ ~(2Ê
êorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java~ ~(2t
java.util.ArrayList.ArrayList()CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java| |((2È
ìorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)!dirsCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java} }("2ˆ
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)?res@124.19:124.22CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java~ ~(2Í
îorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)!entryCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java~  ~(%2¸
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)?directory@125.18:125.27CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java~' ~(02ñ
Aorg.jabref.logic.util.io.RegExpBasedFileFinder?regExp@29.25:29.31CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java~2 ~(82Ù
ûorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)!extensionRegExpCALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java~: ~(I2¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)?res@124.19:124.22CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÄ Ä(2Ô
îorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{) {(.2Ó
ìorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)!dirs	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{; {(?2˘
ûorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)!extensionRegExp	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{H {(W2˝
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)?res@124.19:124.22DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java| |(2É
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)?directory@125.18:125.27DECLARATIONK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java} }(2j
java.util.ListRETURN_TYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{ {(2w
java.nio.file.PathRETURN_TYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{ {(Î
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)?res@124.19:124.22VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java| |("
type
List<Path>"
isFinalfalse"w
declarationStringb<mark class="modifier"> </mark>List<Path> <mark class="class-field">res</mark> = new ArrayList<>()*res2c
java.util.ListTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java| |(2p
java.nio.file.PathTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java| |(2t
java.util.ArrayList.ArrayList()CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java| |((˘
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)?directory@125.18:125.27VARIABLEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java} }("
typePath"
isFinalfalse"c
declarationStringN<mark class="modifier"> </mark>Path <mark class="class-field">directory</mark>*	directory2g
java.nio.file.PathTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java} }(µ
îorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)!entry	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{) {(."
typeBibEntry"
isFinalfalse"#
declarationStringBibEntry entry*entry2t
org.jabref.model.entry.BibEntryTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{  {((ó
ìorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)!dirs	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{; {(?"
type
List<Path>"
isFinalfalse"$
declarationStringList<Path> dirs*dirs2c
java.util.ListTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{0 {(42p
java.nio.file.PathTYPE_ARGUMENTK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{5 {(9¿
ûorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.util.List<java.nio.file.Path>, java.lang.String)!extensionRegExp	PARAMETERK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{H {(W"
typeString"
isFinalfalse"+
declarationStringString extensionRegExp*extensionRegExp2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java{A {(G¥Ñ
êorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)METHODM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaá á("
isFinalfalse"—
declarationStringª<mark class="modifier">private </mark>List&lt;Path&gt; <mark class="method">findFile</mark>(final BibEntry entry<mark class="modifier"><mark class="modifier">,</mark></mark> final Path directory<mark class="modifier"><mark class="modifier">,</mark></mark> final String file<mark class="modifier"><mark class="modifier">,</mark></mark> final String extensionRegExp)<mark class="modifier"> <mark class="modifier">throws</mark> </mark>IOException"
isStaticfalse"
accessprivate"

isAbstractfalse"
type
List<Path>*findFile2Ñ
-java.lang.String.startsWith(java.lang.String)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaå å(2ì
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaç# ç(%2v
java.lang.String.substring(int)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaé  é()2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaî# î(*2u
java.util.regex.Matcher.find()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javañ ñ(2´
Tjava.util.regex.Matcher.appendReplacement(java.lang.StringBuilder, java.lang.String)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaó ó(2y
"java.util.regex.Matcher.group(int)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaó% ó(*2y
"java.util.regex.Matcher.group(int)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaó8 ó(=2í
;java.util.regex.Matcher.appendTail(java.lang.StringBuilder)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaô
 ô(2y
"java.lang.StringBuilder.toString()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaö ö(2
(java.lang.String.split(java.lang.String)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaõ& õ(+2Å
*java.lang.String.matches(java.lang.String)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java§ §($2ì
<java.nio.file.Path.of(java.lang.String, java.lang.String...)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java•' •()2Ä
)java.lang.String.equals(java.lang.Object)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java® ®(2Ä
)java.lang.String.equals(java.lang.Object)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java´ ´(2u
java.nio.file.Path.getParent()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¨2 ¨(;2Ä
)java.lang.String.equals(java.lang.Object)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaØ Ø(2o
java.io.File.listFiles()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java∞: ∞(C2r
java.nio.file.Path.toFile()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java∞1 ∞(72Ø
Xorg.jabref.model.strings.StringUtil.join(java.lang.String[], java.lang.String, int, int)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤9 ≤(=2q
java.io.File.isDirectory()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¥# ¥(.2è
8java.util.List.addAll(java.util.Collection<? extends E>)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaµ( µ(.2Ë
êorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaµ/ µ(72l
java.io.File.toPath()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaµF µ(L2Ä
)java.lang.String.equals(java.lang.Object)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaª ª(2Ø
Xorg.jabref.model.strings.StringUtil.join(java.lang.String[], java.lang.String, int, int)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaº5 º(92•
Njava.nio.file.Files.walk(java.nio.file.Path, java.nio.file.FileVisitOption...)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaø5 ø(92£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡j ¡(q2û
Gjava.util.stream.Stream.filter(java.util.function.Predicate<? super T>)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡0 ¡(62º
eorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡B ¡(P2|
$java.util.stream.Collectors.toList()CALLN
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡} ¡(É2è
8java.util.List.addAll(java.util.Collection<? extends E>)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¬$ ¬(*2Ë
êorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¬+ ¬(32~
'java.io.UncheckedIOException.getCause()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≈ ≈(&2„
ãorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀ À(/2y
!java.util.regex.Matcher.matches()CALLN
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ~ Ã(Ö2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃW Ã(^2t
java.nio.file.Path.toString()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃr Ã(z2w
 java.nio.file.Path.getFileName()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃd Ã(o2å
¥java.nio.file.Files.find(java.nio.file.Path, int, java.util.function.BiPredicate<java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes>, java.nio.file.FileVisitOption...)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕ- Õ(12è
8java.util.List.addAll(java.util.Collection<? extends E>)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaŒ Œ(2£
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaŒ* Œ(12{
$java.util.stream.Collectors.toList()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaŒ= Œ(C2~
'java.io.UncheckedIOException.getCause()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java—' —(/2v
java.util.ArrayList.ArrayList()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaà% à(02~
'java.lang.StringBuilder.StringBuilder()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaï ï(+2Ì
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!fileCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaä ä(2ˇ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaå å(2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaç ç(2ˇ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaé é(2ˇ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaé é(2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaê ê(2Ú
öorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!directoryCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaê ê('2†
Iorg.jabref.logic.util.io.RegExpBasedFileFinder?ESCAPE_PATTERN@27.33:27.47CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaî î("2ˇ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaî+ î(32¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?m@148.16:148.17CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javañ ñ(2¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?m@148.16:148.17CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaó ó(2¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?s@149.22:149.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaó  ó(!2¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?m@148.16:148.17CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaó# ó($2¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?m@148.16:148.17CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaó6 ó(72¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?m@148.16:148.17CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaô ô(	2¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?s@149.22:149.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaô ô(2ˇ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaö ö(2¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?s@149.22:149.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaö ö(2ˇ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaõ õ(%2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaù ù(2Ç
™org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?resultFiles@136.19:136.30CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaû û(2¸
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java° °(!2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java°% °(.2¸
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java°< °(A2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¢" ¢(+2¸
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¢, ¢(12É
´org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?dirToProcess@162.19:162.31CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java§ §(2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java• •(2É
´org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?dirToProcess@162.19:162.31CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java•* •(62É
´org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?dirToProcess@162.19:162.31CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java® ®('2É
´org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?dirToProcess@162.19:162.31CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java´ ´((2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¨ ¨(2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¨" ¨(12É
´org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?dirToProcess@162.19:162.31CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaØ Ø('2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java∞! ∞(02˛
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?subDirs@176.23:176.30CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java± ±(2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤> ≤(G2¸
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤N ≤(S2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤Y ≤(b2˛
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?subDirs@176.23:176.30CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≥' ≥(.2˝
•org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?subDir@179.30:179.36CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¥ ¥("2Ç
™org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?resultFiles@136.19:136.30CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaµ µ('2Ó
ñorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!entryCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaµ8 µ(=2˝
•org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?subDir@179.30:179.36CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaµ? µ(E2á
Øorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?restOfFileString@178.27:178.43CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaµP µ(`2¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!extensionRegExpCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaµb µ(q2É
´org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?dirToProcess@162.19:162.31CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaª ª((2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaº: º(C2¸
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaºJ º(O2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaºU º(^2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaæ+ æ(:2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaø: ø(I2Å
©org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?pathStream@191.34:191.44CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡% ¡(/2Ñ
¨org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?rootDirectory@190.27:190.40CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡Q ¡(^2˛
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?element@193.55:193.62CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡` ¡(g2Ç
™org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?resultFiles@136.19:136.30CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¬ ¬(#2Ó
ñorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!entryCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¬4 ¬(92˚
£org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?path@193.30:193.34CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¬; ¬(?2á
Øorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?restOfFileString@188.23:188.39CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¬A ¬(Q2¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!extensionRegExpCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¬S ¬(b2˙
¢org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?ioe@196.46:196.49CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≈ ≈(2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀ0 À(92¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!extensionRegExpCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀ; À(J2Ó
ñorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!entryCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀL À(Q2˛
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?toMatch@203.16:203.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃO Ã(V2˚
£org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?path@204.58:204.62CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ_ Ã(c2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕ2 Õ(A2˛
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?matcher@204.47:204.54CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕF Õ(M2Ç
™org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?resultFiles@136.19:136.30CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaŒ Œ(2Å
©org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?pathStream@205.26:205.36CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaŒ Œ()2ã
≥org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?uncheckedIOException@207.38:207.58CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java— —(&2Ç
™org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?resultFiles@136.19:136.30CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java” ”(2Û
ñorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!entry	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaá/ á(42˜
öorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!directory	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaáA á(J2Ú
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!file	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaáY á(]2˝
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!extensionRegExp	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaál á({2â
™org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?resultFiles@136.19:136.30DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaà à(2Ü
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaä ä(2ç
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaã ã(2ˇ
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?m@148.16:148.17DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaî î(2ˇ
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?s@149.22:149.23DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaï ï(2á
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaõ õ(2É
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java° °(2ä
´org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?dirToProcess@162.19:162.31DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¢ ¢(2Ö
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?subDirs@176.23:176.30DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java∞ ∞(2é
Øorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?restOfFileString@178.27:178.43DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤ ≤(+2Ñ
•org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?subDir@179.30:179.36DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≥ ≥($2é
Øorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?restOfFileString@188.23:188.39DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaº º('2ã
¨org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?rootDirectory@190.27:190.40DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaæ æ((2à
©org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?pathStream@191.34:191.44DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaø" ø(,2Ç
£org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?path@193.30:193.34DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡ ¡("2Ö
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?toMatch@203.16:203.23DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀ À(2Ö
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?matcher@204.47:204.54DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ/ Ã(62à
©org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?pathStream@205.26:205.36DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕ Õ($2Ö
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?element@193.55:193.62DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡7 ¡(>2Å
¢org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?ioe@196.46:196.49DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaƒ. ƒ(12Ç
£org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?path@204.58:204.62DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ: Ã(>2à
©org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?attributes@204.64:204.74DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ@ Ã(J2í
≥org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?uncheckedIOException@207.38:207.58DECLARATIONM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaœ& œ(:2l
java.util.ListRETURN_TYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaá á(2y
java.nio.file.PathRETURN_TYPE_ARGUMENTM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaá á(ç
™org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?resultFiles@136.19:136.30VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaà à("
type
List<Path>"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>List<Path> <mark class="class-field">resultFiles</mark> = new ArrayList<>()*resultFiles2e
java.util.ListTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaà à(2r
java.nio.file.PathTYPE_ARGUMENTM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaà à(2v
java.util.ArrayList.ArrayList()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaà% à(0ı
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaä ä("
typeString"
isFinalfalse"k
declarationStringV<mark class="modifier"> </mark>String <mark class="class-field">fileName</mark> = file*fileName2g
java.lang.StringTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaä ä(2Ì
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!fileCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaä ä(ë
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaã ã("
typePath"
isFinalfalse"i
declarationStringT<mark class="modifier"> </mark>Path <mark class="class-field">actualDirectory</mark>*actualDirectory2i
java.nio.file.PathTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaã ã(Ã
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?m@148.16:148.17VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaî î("
typeMatcher"
isFinalfalse"Å
declarationStringl<mark class="modifier"> </mark>Matcher <mark class="class-field">m</mark> = ESCAPE_PATTERN.matcher(fileName)*m2n
java.util.regex.MatcherTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaî î(2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaî# î(*2†
Iorg.jabref.logic.util.io.RegExpBasedFileFinder?ESCAPE_PATTERN@27.33:27.47CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaî î("2ˇ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaî+ î(3î
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?s@149.22:149.23VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaï ï("
typeStringBuilder"
isFinalfalse"z
declarationStringe<mark class="modifier"> </mark>StringBuilder <mark class="class-field">s</mark> = new StringBuilder()*s2n
java.lang.StringBuilderTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaï ï(2~
'java.lang.StringBuilder.StringBuilder()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaï ï(+û
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaõ õ("
typeString"
isFinalfalse"}
declarationStringh<mark class="modifier"> </mark>String[] <mark class="class-field">fileParts</mark> = fileName.split("/")*	fileParts2i
java.lang.String[]TYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaõ õ(2
(java.lang.String.split(java.lang.String)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaõ& õ(+2ˇ
ßorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileName@138.15:138.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaõ õ(%Ö
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java° °("
typeint"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">index</mark> = 0*index2Z
intTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java° °(ü
´org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?dirToProcess@162.19:162.31VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¢ ¢("
typeString"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>String <mark class="class-field">dirToProcess</mark> = fileParts[index]*dirToProcess2g
java.lang.StringTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¢ ¢(2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¢" ¢(+2¸
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¢, ¢(1ç
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?subDirs@176.23:176.30VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java∞ ∞("
typeFile"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>File[] <mark class="class-field">subDirs</mark> = actualDirectory.toFile().listFiles()*subDirs2e
java.io.File[]TYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java∞ ∞(2o
java.io.File.listFiles()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java∞: ∞(C2r
java.nio.file.Path.toFile()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java∞1 ∞(72Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java∞! ∞(0¨
Øorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?restOfFileString@178.27:178.43VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤ ≤(+"
typeString"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>String <mark class="class-field">restOfFileString</mark> = StringUtil.join(fileParts, "/"<mark class="modifier">,</mark> index + 1, fileParts.length)*restOfFileString2g
java.lang.StringTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤ ≤(2Ø
Xorg.jabref.model.strings.StringUtil.join(java.lang.String[], java.lang.String, int, int)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤9 ≤(=2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤> ≤(G2¸
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤N ≤(S2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≤Y ≤(b
•org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?subDir@179.30:179.36VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≥ ≥($"
typeFile"
isFinalfalse"`
declarationStringK<mark class="modifier"> </mark>File <mark class="class-field">subDir</mark>*subDir2c
java.io.FileTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java≥ ≥(¨
Øorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?restOfFileString@188.23:188.39VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaº º('"
typeString"
isFinalfalse" 
declarationString¥<mark class="modifier"> </mark>String <mark class="class-field">restOfFileString</mark> = StringUtil.join(fileParts, "/"<mark class="modifier">,</mark> index + 1, fileParts.length)*restOfFileString2g
java.lang.StringTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaº º(2Ø
Xorg.jabref.model.strings.StringUtil.join(java.lang.String[], java.lang.String, int, int)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaº5 º(92Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaº: º(C2¸
§org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?index@161.17:161.22CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaºJ º(O2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaºU º(^»
¨org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?rootDirectory@190.27:190.40VALUEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaæ æ(("
typePath"
isFinaltrue"û
declarationStringà<mark class="modifier"> </mark><mark class="modifier">final </mark>Path <mark class="class-field">rootDirectory</mark> = actualDirectory*rootDirectory2i
java.nio.file.PathTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaæ æ(2Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaæ+ æ(:€
©org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?pathStream@191.34:191.44VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaø" ø(,"
typeStream<Path>"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>Stream<Path> <mark class="class-field">pathStream</mark> = Files.walk(actualDirectory)*
pathStream2n
java.util.stream.StreamTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaø ø(2r
java.nio.file.PathTYPE_ARGUMENTM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaø ø( 2•
Njava.nio.file.Files.walk(java.nio.file.Path, java.nio.file.FileVisitOption...)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaø5 ø(92Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaø: ø(I
£org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?path@193.30:193.34VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡ ¡(""
typePath"
isFinalfalse"^
declarationStringI<mark class="modifier"> </mark>Path <mark class="class-field">path</mark>*path2i
java.nio.file.PathTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡ ¡(ñ
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?toMatch@203.16:203.23VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀ À("
typePattern"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>Pattern <mark class="class-field">toMatch</mark> = createFileNamePattern(fileParts, extensionRegExp, entry)*toMatch2n
java.util.regex.PatternTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀ À(2„
ãorg.jabref.logic.util.io.RegExpBasedFileFinder.createFileNamePattern(java.lang.String[], java.lang.String, org.jabref.model.entry.BibEntry)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀ À(/2Ä
®org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?fileParts@155.17:155.26CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀ0 À(92¯
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!extensionRegExpCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀ; À(J2Ó
ñorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!entryCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÀL À(Qò
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?matcher@204.47:204.54VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ/ Ã(6".
type&BiPredicate<Path, BasicFileAttributes>"
isFinalfalse"’
declarationStringø<mark class="modifier"> </mark>BiPredicate<Path, BasicFileAttributes> <mark class="class-field">matcher</mark> = (path, attributes) -> toMatch.matcher(path.getFileName().toString()).matches()*matcher2u
java.util.function.BiPredicateTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ Ã(2ã
+java.nio.file.attribute.BasicFileAttributesTYPE_ARGUMENTM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ Ã(2r
java.nio.file.PathTYPE_ARGUMENTM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ Ã(-2y
!java.util.regex.Matcher.matches()CALLN
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ~ Ã(Ö2é
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃW Ã(^2t
java.nio.file.Path.toString()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃr Ã(z2w
 java.nio.file.Path.getFileName()CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃd Ã(o2˛
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?toMatch@203.16:203.23CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃO Ã(V2˚
£org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?path@204.58:204.62CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ_ Ã(cÓ
©org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?pathStream@205.26:205.36VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕ Õ($"
typeStream<Path>"
isFinalfalse"µ
declarationStringü<mark class="modifier"> </mark>Stream<Path> <mark class="class-field">pathStream</mark> = Files.find(actualDirectory, 1, matcher, FileVisitOption.FOLLOW_LINKS)*
pathStream2n
java.util.stream.StreamTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕ Õ(2r
java.nio.file.PathTYPE_ARGUMENTM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕ Õ(2å
¥java.nio.file.Files.find(java.nio.file.Path, int, java.util.function.BiPredicate<java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes>, java.nio.file.FileVisitOption...)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕ- Õ(12Ü
Æorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?actualDirectory@139.13:139.28CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕ2 Õ(A2˛
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?matcher@204.47:204.54CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÕF Õ(M∫
ñorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!entry	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaá/ á(4"
typeBibEntry"
isFinaltrue"#
declarationStringBibEntry entry*entry2v
org.jabref.model.entry.BibEntryTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaá& á(.±
öorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!directory	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaáA á(J"
typePath"
isFinaltrue"#
declarationStringPath directory*	directory2i
java.nio.file.PathTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaá< á(@§
ïorg.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!file	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaáY á(]"
typeString"
isFinaltrue" 
declarationStringString file*file2g
java.lang.StringTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaáR á(X≈
†org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)!extensionRegExp	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaál á({"
typeString"
isFinaltrue"+
declarationStringString extensionRegExp*extensionRegExp2g
java.lang.StringTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaáe á(kÃ
¶org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?element@193.55:193.62VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java¡7 ¡(>"
type"
isFinalfalse"
declarationString element*element2TYPE◊
¢org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?ioe@196.46:196.49VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaƒ. ƒ(1"
typeUncheckedIOException"
isFinalfalse"-
declarationStringUncheckedIOException ioe*ioe2s
java.io.UncheckedIOExceptionTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaƒ ƒ(-√
£org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?path@204.58:204.62VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ: Ã(>"
type"
isFinalfalse"
declarationString path*path2TYPE’
©org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?attributes@204.64:204.74VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaÃ@ Ã(J"
type"
isFinalfalse" 
declarationString attributes*
attributes2TYPEä
≥org.jabref.logic.util.io.RegExpBasedFileFinder.findFile(org.jabref.model.entry.BibEntry, java.nio.file.Path, java.lang.String, java.lang.String)?uncheckedIOException@207.38:207.58VARIABLEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaœ& œ(:"
typeUncheckedIOException"
isFinalfalse">
declarationString)UncheckedIOException uncheckedIOException*uncheckedIOException2s
java.io.UncheckedIOExceptionTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.javaœ œ(%ú
eorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)METHODM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java÷ ÷(""
isFinalfalse"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="method">isSubDirectory</mark>(Path rootDirectory<mark class="modifier"><mark class="modifier">,</mark></mark> Path path)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeboolean*isSubDirectory2Ç
+java.nio.file.Path.equals(java.lang.Object)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java◊ ◊($2ß
Pjava.nio.file.Files.isDirectory(java.nio.file.Path, java.nio.file.LinkOption...)CALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java◊4 ◊(?2 
sorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)!rootDirectoryCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java◊ ◊(2¡
jorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)!pathCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java◊% ◊()2¡
jorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)!pathCALLM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java◊@ ◊(D2œ
sorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)!rootDirectory	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java÷( ÷(52∆
jorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)!path	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java÷< ÷(@2e
booleanRETURN_TYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java÷ ÷(í
sorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)!rootDirectory	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java÷( ÷(5"
typePath"
isFinalfalse"'
declarationStringPath rootDirectory*rootDirectory2i
java.nio.file.PathTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java÷# ÷('˜
jorg.jabref.logic.util.io.RegExpBasedFileFinder.isSubDirectory(java.nio.file.Path, java.nio.file.Path)!path	PARAMETERM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java÷< ÷(@"
typePath"
isFinalfalse"
declarationString	Path path*path2i
java.nio.file.PathTYPEM
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java÷7 ÷(;°
Eorg.jabref.logic.util.io.RegExpBasedFileFinder?EXT_MARKER@25.32:25.42VALUEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java  (*"
isFinaltrue"
typeString" 
declarationString¥<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>String <mark class="class-field">EXT_MARKER</mark> = "__EXTENSION__";"
isStatictrue"
accessprivate*
EXT_MARKER2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java (Ÿ
Iorg.jabref.logic.util.io.RegExpBasedFileFinder?ESCAPE_PATTERN@27.33:27.47VALUEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java! (/"
isFinaltrue"
typePattern"È
declarationString”<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">ESCAPE_PATTERN</mark> = Pattern.compile("([^\\\\])\\\\([^\\\\])");"
isStatictrue"
accessprivate*ESCAPE_PATTERN2l
java.util.regex.PatternTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java ( 2Ü
1java.util.regex.Pattern.compile(java.lang.String)CALLK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java: (A›
Aorg.jabref.logic.util.io.RegExpBasedFileFinder?regExp@29.25:29.31VALUEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java ("
isFinaltrue"
typeString"ç
declarationStringx<mark class="modifier">private </mark><mark class="modifier">final </mark>String <mark class="class-field">regExp</mark>"
isStaticfalse"
accessprivate*regExp2e
java.lang.StringTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java (Ö
Korg.jabref.logic.util.io.RegExpBasedFileFinder?keywordDelimiter@30.28:30.44VALUEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java (,"
isFinaltrue"
type	Character"õ
declarationStringÖ<mark class="modifier">private </mark><mark class="modifier">final </mark>Character <mark class="class-field">keywordDelimiter</mark>"
isStaticfalse"
accessprivate*keywordDelimiter2h
java.lang.CharacterTYPEK
Asrc\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java (