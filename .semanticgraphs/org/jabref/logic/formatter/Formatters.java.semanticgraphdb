
8src\main\java\org\jabref\logic\formatter\Formatters.javaË
%org.jabref.logic.formatter.FormattersCLASSB
8src\main\java\org\jabref\logic\formatter\Formatters.java) )("%
packageorg.jabref.logic.formatter"
isFinalfalse"
inner classfalse"

isAbstractfalse"h
declarationStringS<mark class="modifier">public </mark><mark class="modifier">class </mark>Formatters"
accesspublic*
Formatters2Ö
2org.jabref.logic.formatter.Formatters.Formatters()DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.java2 2(2à
5org.jabref.logic.formatter.Formatters.getConverters()DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.java5" 5(/2ä
7org.jabref.logic.formatter.Formatters.getCaseChangers()DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.java>" >(12Ñ
1org.jabref.logic.formatter.Formatters.getOthers()DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.javaH" H(+2Å
.org.jabref.logic.formatter.Formatters.getAll()DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.java^" ^((2ù
Jorg.jabref.logic.formatter.Formatters.getFormatterForKey(java.lang.String)DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.javaf& f(82¢
Oorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.javak& k(=2ï
Borg.jabref.logic.formatter.Formatters?TRUNCATE_PATTERN@42.33:42.49DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.java*! *(12ñ
Corg.jabref.logic.formatter.Formatters?keyToFormatterMap@44.42:44.59DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.java,* ,(;2ò
Ljava.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java/. /(52i
java.util.Collection.stream()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java/% /(+2z
.org.jabref.logic.formatter.Formatters.getAll()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java/ /("2ÿ
ãjava.util.stream.Collectors.toMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends U>)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java/A /(F2è
Corg.jabref.logic.formatter.Formatters?keyToFormatterMap@44.42:44.59CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java/ /(2
3org.jabref.logic.formatter.Formatters?f@47.90:47.91CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java/_ /(`2w
+org.jabref.logic.cleanup.Formatter.getKey()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java/G /(X
2org.jabref.logic.formatter.Formatters.Formatters()CONSTRUCTORB
8src\main\java\org\jabref\logic\formatter\Formatters.java2 2("c
declarationStringN<mark class="modifier">private </mark><mark class="method">Formatters</mark>()*
Formatters2x
%org.jabref.logic.formatter.FormattersRETURN_TYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.java2 2(˜

5org.jabref.logic.formatter.Formatters.getConverters()METHODB
8src\main\java\org\jabref\logic\formatter\Formatters.java5" 5(/"
isFinalfalse"°
declarationStringã<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;Formatter&gt; <mark class="method">getConverters</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<Formatter>*getConverters2i
java.util.Arrays.asList(T...)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java6 6(2ü
Sorg.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter.HtmlToLatexFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java7 7((2£
Worg.jabref.logic.formatter.bibtexfields.HtmlToUnicodeFormatter.HtmlToUnicodeFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java8 8(*2ú
Porg.jabref.logic.layout.format.LatexToUnicodeFormatter.LatexToUnicodeFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java9 9(+2•
Yorg.jabref.logic.formatter.bibtexfields.UnicodeToLatexFormatter.UnicodeToLatexFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java: :(+2a
java.util.ListRETURN_TYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.java5 5(2~
"org.jabref.logic.cleanup.FormatterRETURN_TYPE_ARGUMENTB
8src\main\java\org\jabref\logic\formatter\Formatters.java5 5( á
7org.jabref.logic.formatter.Formatters.getCaseChangers()METHODB
8src\main\java\org\jabref\logic\formatter\Formatters.java>" >(1"
isFinalfalse"£
declarationStringç<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;Formatter&gt; <mark class="method">getCaseChangers</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<Formatter>*getCaseChangers2i
java.util.Arrays.asList(T...)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java? ?(2ú
Porg.jabref.logic.formatter.casechanger.CapitalizeFormatter.CapitalizeFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java@ @('2ö
Norg.jabref.logic.formatter.casechanger.LowerCaseFormatter.LowerCaseFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaA A(&2†
Torg.jabref.logic.formatter.casechanger.SentenceCaseFormatter.SentenceCaseFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaB B()2ö
Norg.jabref.logic.formatter.casechanger.TitleCaseFormatter.TitleCaseFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaC C(&2ö
Norg.jabref.logic.formatter.casechanger.UpperCaseFormatter.UpperCaseFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaD D(&2a
java.util.ListRETURN_TYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.java> >(2~
"org.jabref.logic.cleanup.FormatterRETURN_TYPE_ARGUMENTB
8src\main\java\org\jabref\logic\formatter\Formatters.java> >( Ù
1org.jabref.logic.formatter.Formatters.getOthers()METHODB
8src\main\java\org\jabref\logic\formatter\Formatters.javaH" H(+"
isFinalfalse"ù
declarationStringá<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;Formatter&gt; <mark class="method">getOthers</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<Formatter>*	getOthers2i
java.util.Arrays.asList(T...)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaI I(2ì
Gorg.jabref.logic.formatter.bibtexfields.ClearFormatter.ClearFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaJ J("2ù
Qorg.jabref.logic.formatter.bibtexfields.CleanupUrlFormatter.CleanupUrlFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaK K('2°
Uorg.jabref.logic.formatter.bibtexfields.LatexCleanupFormatter.LatexCleanupFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaL L()2°
Uorg.jabref.logic.formatter.minifier.MinifyNameListFormatter.MinifyNameListFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaM M(+2£
Worg.jabref.logic.formatter.bibtexfields.NormalizeDateFormatter.NormalizeDateFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaN N(*2•
Yorg.jabref.logic.formatter.bibtexfields.NormalizeMonthFormatter.NormalizeMonthFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaO O(+2•
Yorg.jabref.logic.formatter.bibtexfields.NormalizeNamesFormatter.NormalizeNamesFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaP P(+2•
Yorg.jabref.logic.formatter.bibtexfields.NormalizePagesFormatter.NormalizePagesFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaQ Q(+2≥
gorg.jabref.logic.formatter.bibtexfields.OrdinalsToSuperscriptFormatter.OrdinalsToSuperscriptFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaR R(22°
Uorg.jabref.logic.formatter.bibtexfields.RemoveBracesFormatter.RemoveBracesFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaS S()2°
Uorg.jabref.logic.formatter.bibtexfields.UnitsToLatexFormatter.UnitsToLatexFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaT T()2´
_org.jabref.logic.formatter.bibtexfields.EscapeUnderscoresFormatter.EscapeUnderscoresFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaU U(.2©
]org.jabref.logic.formatter.bibtexfields.EscapeAmpersandsFormatter.EscapeAmpersandsFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaV V(-2©
]org.jabref.logic.formatter.bibtexfields.EscapeDollarSignFormatter.EscapeDollarSignFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaW W(-2ù
Qorg.jabref.logic.formatter.bibtexfields.ShortenDOIFormatter.ShortenDOIFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaX X('2Æ
borg.jabref.logic.layout.format.ReplaceUnicodeLigaturesFormatter.ReplaceUnicodeLigaturesFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaY Y(42§
Xorg.jabref.logic.formatter.casechanger.UnprotectTermsFormatter.UnprotectTermsFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaZ Z(+2a
java.util.ListRETURN_TYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.javaH H(2~
"org.jabref.logic.cleanup.FormatterRETURN_TYPE_ARGUMENTB
8src\main\java\org\jabref\logic\formatter\Formatters.javaH H( ª
.org.jabref.logic.formatter.Formatters.getAll()METHODB
8src\main\java\org\jabref\logic\formatter\Formatters.java^" ^(("
isFinalfalse"ö
declarationStringÑ<mark class="modifier">public </mark><mark class="modifier">static </mark>List&lt;Formatter&gt; <mark class="method">getAll</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeList<Formatter>*getAll2Ñ
8java.util.List.addAll(java.util.Collection<? extends E>)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java` `(2Å
5org.jabref.logic.formatter.Formatters.getConverters()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java` `( 2Ñ
8java.util.List.addAll(java.util.Collection<? extends E>)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaa a(2É
7org.jabref.logic.formatter.Formatters.getCaseChangers()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaa a("2Ñ
8java.util.List.addAll(java.util.Collection<? extends E>)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javab b(2}
1org.jabref.logic.formatter.Formatters.getOthers()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javab b(2k
java.util.ArrayList.ArrayList()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java_" _(-2ä
>org.jabref.logic.formatter.Formatters.getAll()?all@95.24:95.27CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java` `(2ä
>org.jabref.logic.formatter.Formatters.getAll()?all@95.24:95.27CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javaa a(2ä
>org.jabref.logic.formatter.Formatters.getAll()?all@95.24:95.27CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javab b(2ä
>org.jabref.logic.formatter.Formatters.getAll()?all@95.24:95.27CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javac c(2ë
>org.jabref.logic.formatter.Formatters.getAll()?all@95.24:95.27DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.java_ _(2a
java.util.ListRETURN_TYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.java^ ^(2~
"org.jabref.logic.cleanup.FormatterRETURN_TYPE_ARGUMENTB
8src\main\java\org\jabref\logic\formatter\Formatters.java^ ^( ˛
>org.jabref.logic.formatter.Formatters.getAll()?all@95.24:95.27VARIABLEB
8src\main\java\org\jabref\logic\formatter\Formatters.java_ _("
typeList<Formatter>"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark>List<Formatter> <mark class="class-field">all</mark> = new ArrayList<>()*all2Z
java.util.ListTYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.java_ _(2w
"org.jabref.logic.cleanup.FormatterTYPE_ARGUMENTB
8src\main\java\org\jabref\logic\formatter\Formatters.java_ _(2k
java.util.ArrayList.ArrayList()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java_" _(-˝
Jorg.jabref.logic.formatter.Formatters.getFormatterForKey(java.lang.String)METHODB
8src\main\java\org\jabref\logic\formatter\Formatters.javaf& f(8"
isFinalfalse"µ
declarationStringü<mark class="modifier">public </mark><mark class="modifier">static </mark>Optional&lt;Formatter&gt; <mark class="method">getFormatterForKey</mark>(String name)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOptional<Formatter>*getFormatterForKey2o
#java.util.Objects.requireNonNull(T)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javag g(2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javah! h(,2d
java.util.Optional.of(T)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javah> h(@2o
#java.util.Map.get(java.lang.Object)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javahS h(V2f
java.util.Optional.empty()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javahi h(n2õ
Oorg.jabref.logic.formatter.Formatters.getFormatterForKey(java.lang.String)!nameCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javag g(#2è
Corg.jabref.logic.formatter.Formatters?keyToFormatterMap@44.42:44.59CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javah h( 2õ
Oorg.jabref.logic.formatter.Formatters.getFormatterForKey(java.lang.String)!nameCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javah- h(12è
Corg.jabref.logic.formatter.Formatters?keyToFormatterMap@44.42:44.59CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javahA h(R2õ
Oorg.jabref.logic.formatter.Formatters.getFormatterForKey(java.lang.String)!nameCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javahW h([2†
Oorg.jabref.logic.formatter.Formatters.getFormatterForKey(java.lang.String)!name	PARAMETERB
8src\main\java\org\jabref\logic\formatter\Formatters.javaf@ f(D2e
java.util.OptionalRETURN_TYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.javaf f(2~
"org.jabref.logic.cleanup.FormatterRETURN_TYPE_ARGUMENTB
8src\main\java\org\jabref\logic\formatter\Formatters.javaf f($»
Oorg.jabref.logic.formatter.Formatters.getFormatterForKey(java.lang.String)!name	PARAMETERB
8src\main\java\org\jabref\logic\formatter\Formatters.javaf@ f(D"
typeString"
isFinalfalse" 
declarationStringString name*name2\
java.lang.StringTYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.javaf9 f(?›-
Oorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)METHODB
8src\main\java\org\jabref\logic\formatter\Formatters.javak& k(="
isFinalfalse"æ
declarationString®<mark class="modifier">public </mark><mark class="modifier">static </mark>Optional&lt;Formatter&gt; <mark class="method">getFormatterForModifier</mark>(String modifier)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOptional<Formatter>*getFormatterForModifier2o
#java.util.Objects.requireNonNull(T)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javal l(2d
java.util.Optional.of(T)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javap  p("2d
java.util.Optional.of(T)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javar  r("2d
java.util.Optional.of(T)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javat  t("2d
java.util.Optional.of(T)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javav  v("2d
java.util.Optional.of(T)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javax  x("2y
-java.lang.String.startsWith(java.lang.String)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java{ {(2k
java.lang.String.substring(int)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java|$ |(-2e
java.lang.String.length()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java|A |(G2d
java.util.Optional.of(T)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java} }(2m
!java.util.regex.Matcher.matches()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java~6 ~(=2É
7java.util.regex.Pattern.matcher(java.lang.CharSequence)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java~$ ~(+2x
,java.lang.Integer.parseInt(java.lang.String)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java( (02k
java.lang.String.substring(int)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java: (C2f
java.util.Optional.of(T)CALLD
8src\main\java\org\jabref\logic\formatter\Formatters.javaÄ Ä(2ò
Jorg.jabref.logic.formatter.Formatters.getFormatterForKey(java.lang.String)CALLD
8src\main\java\org\jabref\logic\formatter\Formatters.javaÇ Ç(%2ö
Norg.jabref.logic.formatter.casechanger.LowerCaseFormatter.LowerCaseFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javap' p(92ö
Norg.jabref.logic.formatter.casechanger.UpperCaseFormatter.UpperCaseFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javar' r(92ú
Porg.jabref.logic.formatter.casechanger.CapitalizeFormatter.CapitalizeFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javat' t(:2ö
Norg.jabref.logic.formatter.casechanger.TitleCaseFormatter.TitleCaseFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javav' v(92†
Torg.jabref.logic.formatter.casechanger.SentenceCaseFormatter.SentenceCaseFormatter()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javax' x(<2£
Worg.jabref.logic.formatter.bibtexfields.RegexFormatter.RegexFormatter(java.lang.String)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java}# }(12ö
Lorg.jabref.logic.formatter.minifier.TruncateFormatter.TruncateFormatter(int)CALLD
8src\main\java\org\jabref\logic\formatter\Formatters.javaÄ# Ä(42§
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifierCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javal l('2§
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifierCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.javan n(2§
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifierCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java{ {(2§
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifierCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java| |(#2Ø
corg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)?regex@124.19:124.24CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java}2 }(72é
Borg.jabref.logic.formatter.Formatters?TRUNCATE_PATTERN@42.33:42.49CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java~ ~(#2§
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifierCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java~, ~(42§
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifierCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java1 (92π
korg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)?truncateAfter@127.16:127.29CALLD
8src\main\java\org\jabref\logic\formatter\Formatters.javaÄ5 Ä(B2¶
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifierCALLD
8src\main\java\org\jabref\logic\formatter\Formatters.javaÇ& Ç(.2©
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifier	PARAMETERB
8src\main\java\org\jabref\logic\formatter\Formatters.javakE k(M2∂
corg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)?regex@124.19:124.24DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.java| |(2æ
korg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)?truncateAfter@127.16:127.29DECLARATIONB
8src\main\java\org\jabref\logic\formatter\Formatters.java (2e
java.util.OptionalRETURN_TYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.javak k(2~
"org.jabref.logic.cleanup.FormatterRETURN_TYPE_ARGUMENTB
8src\main\java\org\jabref\logic\formatter\Formatters.javak k($À
corg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)?regex@124.19:124.24VARIABLEB
8src\main\java\org\jabref\logic\formatter\Formatters.java| |("
typeString"
isFinalfalse"ì
declarationString~<mark class="modifier"> </mark>String <mark class="class-field">regex</mark> = modifier.substring(RegexFormatter.KEY.length())*regex2\
java.lang.StringTYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.java| |(2k
java.lang.String.substring(int)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java|$ |(-2e
java.lang.String.length()CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java|A |(G2§
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifierCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java| |(#˙
korg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)?truncateAfter@127.16:127.29VARIABLEB
8src\main\java\org\jabref\logic\formatter\Formatters.java ("
typeint"
isFinalfalse"Ø
declarationStringô<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">truncateAfter</mark> = Integer.parseInt(modifier.substring(8))*truncateAfter2O
intTYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.java (2x
,java.lang.Integer.parseInt(java.lang.String)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java( (02k
java.lang.String.substring(int)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java: (C2§
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifierCALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java1 (9Ÿ
Xorg.jabref.logic.formatter.Formatters.getFormatterForModifier(java.lang.String)!modifier	PARAMETERB
8src\main\java\org\jabref\logic\formatter\Formatters.javakE k(M"
typeString"
isFinalfalse"$
declarationStringString modifier*modifier2\
java.lang.StringTYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.javak> k(D∂
Borg.jabref.logic.formatter.Formatters?TRUNCATE_PATTERN@42.33:42.49VALUEB
8src\main\java\org\jabref\logic\formatter\Formatters.java*! *(1"
isFinaltrue"
typePattern"Á
declarationString—<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Pattern <mark class="class-field">TRUNCATE_PATTERN</mark> = Pattern.compile("\\Atruncate\\d+\\z");"
isStatictrue"
accessprivate*TRUNCATE_PATTERN2c
java.util.regex.PatternTYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.java* *( 2}
1java.util.regex.Pattern.compile(java.lang.String)CALLB
8src\main\java\org\jabref\logic\formatter\Formatters.java*< *(CÂ
Corg.jabref.logic.formatter.Formatters?keyToFormatterMap@44.42:44.59VARIABLEB
8src\main\java\org\jabref\logic\formatter\Formatters.java,* ,(;"
isFinalfalse"
typeMap<String, Formatter>"™
declarationStringî<mark class="modifier">private </mark><mark class="modifier">static </mark>Map<String, Formatter> <mark class="class-field">keyToFormatterMap</mark>"
isStatictrue"
accessprivate*keyToFormatterMap2Y
java.util.MapTYPEB
8src\main\java\org\jabref\logic\formatter\Formatters.java, ,(2e
java.lang.StringTYPE_ARGUMENTB
8src\main\java\org\jabref\logic\formatter\Formatters.java, ,(2w
"org.jabref.logic.cleanup.FormatterTYPE_ARGUMENTB
8src\main\java\org\jabref\logic\formatter\Formatters.java, ,((