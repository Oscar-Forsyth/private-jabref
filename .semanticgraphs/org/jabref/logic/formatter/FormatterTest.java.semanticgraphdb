
;src\test\java\org\jabref\logic\formatter\FormatterTest.java˜
(org.jabref.logic.formatter.FormatterTestCLASSE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java ("%
packageorg.jabref.logic.formatter"
isFinalfalse"
inner classfalse"

isAbstractfalse"e
declarationStringP<mark class="modifier"> </mark><mark class="modifier">class </mark>FormatterTest"
accesspackage_private*FormatterTest2Ü
0org.jabref.logic.formatter.FormatterTest.setUp()DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java (2ö
Dorg.jabref.logic.formatter.FormatterTest.allFormatterKeysAreUnique()DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java( (()2∏
borg.jabref.logic.formatter.FormatterTest.getNameReturnsNotNull(org.jabref.logic.cleanup.Formatter)DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java6	 6(2π
corg.jabref.logic.formatter.FormatterTest.getNameReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java<	 <(2∑
aorg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotNull(org.jabref.logic.cleanup.Formatter)DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaB	 B(2∏
borg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaH	 H(2æ
horg.jabref.logic.formatter.FormatterTest.formatOfNullThrowsException(org.jabref.logic.cleanup.Formatter)DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaN	 N($2¬
lorg.jabref.logic.formatter.FormatterTest.formatOfEmptyStringReturnsEmpty(org.jabref.logic.cleanup.Formatter)DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaT	 T((2∑
aorg.jabref.logic.formatter.FormatterTest.formatNotReturnsNull(org.jabref.logic.cleanup.Formatter)DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaZ	 Z(2ø
iorg.jabref.logic.formatter.FormatterTest.getDescriptionAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java`	 `(%2¿
jorg.jabref.logic.formatter.FormatterTest.getExampleInputAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaf	 f(&2é
8org.jabref.logic.formatter.FormatterTest.getFormatters()DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaj$ j(12ü
Iorg.jabref.logic.formatter.FormatterTest?protectedTermsLoader@26.40:26.60DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java( (<ß
0org.jabref.logic.formatter.FormatterTest.setUp()METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java ("
isFinalfalse"œ
declarationStringπ<mark class="annotation">@BeforeAll</mark> <br><mark class="modifier"> </mark><mark class="modifier">static </mark><mark class="modifier">void</mark> <mark class="method">setUp</mark>()"
isStatictrue"
accesspackage_private"

isAbstractfalse"
typevoid*setUp2ñ
Gorg.jabref.logic.protectedterms.ProtectedTermsLoader.getInternalLists()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaC (S2p
!java.util.Collections.emptyList()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javac (l2p
!java.util.Collections.emptyList()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java $  (-2p
!java.util.Collections.emptyList()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java =  (F2‘
Ñorg.jabref.logic.protectedterms.ProtectedTermsLoader.ProtectedTermsLoader(org.jabref.logic.protectedterms.ProtectedTermsPreferences)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java# (72´
€org.jabref.logic.protectedterms.ProtectedTermsPreferences.ProtectedTermsPreferences(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<java.lang.String>)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java (-2ò
Iorg.jabref.logic.formatter.FormatterTest?protectedTermsLoader@26.40:26.60CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java (2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java (∫
Dorg.jabref.logic.formatter.FormatterTest.allFormatterKeysAreUnique()METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java( (()"
isFinalfalse"ø
declarationString©<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">allFormatterKeysAreUnique</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*allFormatterKeysAreUnique2p
!java.util.Collections.emptyList()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java*! *(*2á
8org.jabref.logic.formatter.FormatterTest.getFormatters()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java+ +(2ÿ
àjava.util.stream.Collectors.groupingBy(java.util.function.Function<? super T, ? extends K>, java.util.stream.Collector<? super T, A, D>)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java+3 +(=2u
&java.util.stream.Collectors.counting()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java-# -(+2s
$java.util.stream.Collectors.toList()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java13 1(92°
Rorg.jabref.logic.formatter.FormatterTest.allFormatterKeysAreUnique()?e@47.39:47.40CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java/, /(-2®
Rorg.jabref.logic.formatter.FormatterTest.allFormatterKeysAreUnique()?e@47.39:47.40DECLARATIONE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java/' /((2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java( ((„
Rorg.jabref.logic.formatter.FormatterTest.allFormatterKeysAreUnique()?e@47.39:47.40VARIABLEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java/' /(("
type"
isFinalfalse"
declarationString e*e2TYPE
borg.jabref.logic.formatter.FormatterTest.getNameReturnsNotNull(org.jabref.logic.cleanup.Formatter)METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java6	 6("
isFinalfalse"Ê
declarationString– <br><mark class="annotation">@MethodSource("getFormatters")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getNameReturnsNotNull</mark>(Formatter formatter)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getNameReturnsNotNull2{
,org.jabref.logic.cleanup.Formatter.getName()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java7  7('2ª
lorg.jabref.logic.formatter.FormatterTest.getNameReturnsNotNull(org.jabref.logic.cleanup.Formatter)!formatterCALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java7 7(2¿
lorg.jabref.logic.formatter.FormatterTest.getNameReturnsNotNull(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java6) 6(22Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java6 6(ç
lorg.jabref.logic.formatter.FormatterTest.getNameReturnsNotNull(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java6) 6(2"
type	Formatter"
isFinalfalse"(
declarationStringFormatter formatter*	formatter2q
"org.jabref.logic.cleanup.FormatterTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java6 6((ı
corg.jabref.logic.formatter.FormatterTest.getNameReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java<	 <("
isFinalfalse"Á
declarationString— <br><mark class="annotation">@MethodSource("getFormatters")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getNameReturnsNotEmpty</mark>(Formatter formatter)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getNameReturnsNotEmpty2{
,org.jabref.logic.cleanup.Formatter.getName()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java=& =(-2º
morg.jabref.logic.formatter.FormatterTest.getNameReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)!formatterCALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java= =(%2¡
morg.jabref.logic.formatter.FormatterTest.getNameReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java<* <(32Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java< <(é
morg.jabref.logic.formatter.FormatterTest.getNameReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java<* <(3"
type	Formatter"
isFinalfalse"(
declarationStringFormatter formatter*	formatter2q
"org.jabref.logic.cleanup.FormatterTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java<  <()Í
aorg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotNull(org.jabref.logic.cleanup.Formatter)METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaB	 B("
isFinalfalse"Â
declarationStringœ <br><mark class="annotation">@MethodSource("getFormatters")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getKeyReturnsNotNull</mark>(Formatter formatter)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getKeyReturnsNotNull2z
+org.jabref.logic.cleanup.Formatter.getKey()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaC  C(&2∫
korg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotNull(org.jabref.logic.cleanup.Formatter)!formatterCALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaC C(2ø
korg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotNull(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaB( B(12Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaB B(å
korg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotNull(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaB( B(1"
type	Formatter"
isFinalfalse"(
declarationStringFormatter formatter*	formatter2q
"org.jabref.logic.cleanup.FormatterTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaB B('Ô
borg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaH	 H("
isFinalfalse"Ê
declarationString– <br><mark class="annotation">@MethodSource("getFormatters")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getKeyReturnsNotEmpty</mark>(Formatter formatter)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getKeyReturnsNotEmpty2z
+org.jabref.logic.cleanup.Formatter.getKey()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaI& I(,2ª
lorg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)!formatterCALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaI I(%2¿
lorg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaH) H(22Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaH H(ç
lorg.jabref.logic.formatter.FormatterTest.getKeyReturnsNotEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaH) H(2"
type	Formatter"
isFinalfalse"(
declarationStringFormatter formatter*	formatter2q
"org.jabref.logic.cleanup.FormatterTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaH H((û	
horg.jabref.logic.formatter.FormatterTest.formatOfNullThrowsException(org.jabref.logic.cleanup.Formatter)METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaN	 N($"
isFinalfalse"Ï
declarationString÷ <br><mark class="annotation">@MethodSource("getFormatters")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">formatOfNullThrowsException</mark>(Formatter formatter)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*formatOfNullThrowsException2ä
;org.jabref.logic.cleanup.Formatter.format(java.lang.String)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaOA O(G2¡
rorg.jabref.logic.formatter.FormatterTest.formatOfNullThrowsException(org.jabref.logic.cleanup.Formatter)!formatterCALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaO7 O(@2∆
rorg.jabref.logic.formatter.FormatterTest.formatOfNullThrowsException(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaN/ N(82Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaN N(ì
rorg.jabref.logic.formatter.FormatterTest.formatOfNullThrowsException(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaN/ N(8"
type	Formatter"
isFinalfalse"(
declarationStringFormatter formatter*	formatter2q
"org.jabref.logic.cleanup.FormatterTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaN% N(.≤	
lorg.jabref.logic.formatter.FormatterTest.formatOfEmptyStringReturnsEmpty(org.jabref.logic.cleanup.Formatter)METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaT	 T(("
isFinalfalse"
declarationString⁄ <br><mark class="annotation">@MethodSource("getFormatters")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">formatOfEmptyStringReturnsEmpty</mark>(Formatter formatter)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*formatOfEmptyStringReturnsEmpty2ä
;org.jabref.logic.cleanup.Formatter.format(java.lang.String)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaU# U()2≈
vorg.jabref.logic.formatter.FormatterTest.formatOfEmptyStringReturnsEmpty(org.jabref.logic.cleanup.Formatter)!formatterCALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaU U("2 
vorg.jabref.logic.formatter.FormatterTest.formatOfEmptyStringReturnsEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaT3 T(<2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaT T(ó
vorg.jabref.logic.formatter.FormatterTest.formatOfEmptyStringReturnsEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaT3 T(<"
type	Formatter"
isFinalfalse"(
declarationStringFormatter formatter*	formatter2q
"org.jabref.logic.cleanup.FormatterTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaT) T(2˚
aorg.jabref.logic.formatter.FormatterTest.formatNotReturnsNull(org.jabref.logic.cleanup.Formatter)METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaZ	 Z("
isFinalfalse"Â
declarationStringœ <br><mark class="annotation">@MethodSource("getFormatters")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">formatNotReturnsNull</mark>(Formatter formatter)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*formatNotReturnsNull2ä
;org.jabref.logic.cleanup.Formatter.format(java.lang.String)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java[  [(&2∫
korg.jabref.logic.formatter.FormatterTest.formatNotReturnsNull(org.jabref.logic.cleanup.Formatter)!formatterCALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java[ [(2ø
korg.jabref.logic.formatter.FormatterTest.formatNotReturnsNull(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaZ( Z(12Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaZ Z(å
korg.jabref.logic.formatter.FormatterTest.formatNotReturnsNull(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaZ( Z(1"
type	Formatter"
isFinalfalse"(
declarationStringFormatter formatter*	formatter2q
"org.jabref.logic.cleanup.FormatterTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaZ Z('Ü

iorg.jabref.logic.formatter.FormatterTest.getDescriptionAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java`	 `(%"
isFinalfalse"Ì
declarationString◊ <br><mark class="annotation">@MethodSource("getFormatters")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getDescriptionAlwaysNonEmpty</mark>(Formatter formatter)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getDescriptionAlwaysNonEmpty2i
java.lang.String.isEmpty()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaa/ a(62Ç
3org.jabref.logic.cleanup.Formatter.getDescription()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaa a(,2¬
sorg.jabref.logic.formatter.FormatterTest.getDescriptionAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)!formatterCALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaa a(2«
sorg.jabref.logic.formatter.FormatterTest.getDescriptionAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java`0 `(92Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java` `(î
sorg.jabref.logic.formatter.FormatterTest.getDescriptionAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java`0 `(9"
type	Formatter"
isFinalfalse"(
declarationStringFormatter formatter*	formatter2q
"org.jabref.logic.cleanup.FormatterTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java`& `(/å

jorg.jabref.logic.formatter.FormatterTest.getExampleInputAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaf	 f(&"
isFinalfalse"Ó
declarationStringÿ <br><mark class="annotation">@MethodSource("getFormatters")</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">getExampleInputAlwaysNonEmpty</mark>(Formatter formatter)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*getExampleInputAlwaysNonEmpty2i
java.lang.String.isEmpty()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javag0 g(72É
4org.jabref.logic.cleanup.Formatter.getExampleInput()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javag g(-2√
torg.jabref.logic.formatter.FormatterTest.getExampleInputAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)!formatterCALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javag g(2»
torg.jabref.logic.formatter.FormatterTest.getExampleInputAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaf1 f(:2Z
voidRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaf f(ï
torg.jabref.logic.formatter.FormatterTest.getExampleInputAlwaysNonEmpty(org.jabref.logic.cleanup.Formatter)!formatter	PARAMETERE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaf1 f(:"
type	Formatter"
isFinalfalse"(
declarationStringFormatter formatter*	formatter2q
"org.jabref.logic.cleanup.FormatterTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaf' f(0◊
8org.jabref.logic.formatter.FormatterTest.getFormatters()METHODE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaj$ j(1"
isFinalfalse"£
declarationStringç<mark class="modifier">public </mark><mark class="modifier">static </mark>Stream&lt;Formatter&gt; <mark class="method">getFormatters</mark>()"
isStatictrue"
accesspublic"

isAbstractfalse"
typeStream<Formatter>*getFormatters2π
jjava.util.stream.Stream.concat(java.util.stream.Stream<? extends T>, java.util.stream.Stream<? extends T>)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javan n(2l
java.util.Collection.stream()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javao$ o(*2}
.org.jabref.logic.formatter.Formatters.getAll()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javao o(!2o
 java.util.stream.Stream.of(T...)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javat t(2è
@org.jabref.logic.formatter.IdentityFormatter.IdentityFormatter()CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javau u(-2ÿ
àorg.jabref.logic.formatter.casechanger.ProtectTermsFormatter.ProtectTermsFormatter(org.jabref.logic.protectedterms.ProtectedTermsLoader)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javav v(12õ
Lorg.jabref.logic.formatter.minifier.TruncateFormatter.TruncateFormatter(int)CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaw w(-2ò
Iorg.jabref.logic.formatter.FormatterTest?protectedTermsLoader@26.40:26.60CALLE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javav2 v(F2m
java.util.stream.StreamRETURN_TYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaj j(2Å
"org.jabref.logic.cleanup.FormatterRETURN_TYPE_ARGUMENTE
;src\test\java\org\jabref\logic\formatter\FormatterTest.javaj j("ª
Iorg.jabref.logic.formatter.FormatterTest?protectedTermsLoader@26.40:26.60VARIABLEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java( (<"
isFinalfalse"
typeProtectedTermsLoader"´
declarationStringï<mark class="modifier">private </mark><mark class="modifier">static </mark>ProtectedTermsLoader <mark class="class-field">protectedTermsLoader</mark>"
isStatictrue"
accessprivate*protectedTermsLoader2É
4org.jabref.logic.protectedterms.ProtectedTermsLoaderTYPEE
;src\test\java\org\jabref\logic\formatter\FormatterTest.java ('