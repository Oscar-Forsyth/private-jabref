
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¨
%org.jabref.logic.bst.BstVMVisitorTestCLASSB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java ("
packageorg.jabref.logic.bst"
isFinalfalse"
inner classfalse"

isAbstractfalse"h
declarationStringS<mark class="modifier"> </mark><mark class="modifier">class </mark>BstVMVisitorTest"
accesspackage_private*BstVMVisitorTest2é
;org.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (#2è
<org.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java& &($2è
<org.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java5	 5(2å
9org.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaC	 C(2å
9org.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaS	 S(2ã
8org.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javad	 d(2é
;org.jabref.logic.bst.BstVMVisitorTest.visitExecuteCommand()DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javax x(#2ê
;org.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÖ Ö(#2ê
;org.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaô ô(#2ç
8org.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java≠ ≠( 2å
7org.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaƒ	 ƒ(2ã
6org.jabref.logic.bst.BstVMVisitorTest.visitStackitem()DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‡	 ‡(å
;org.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()METHODB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (#"
isFinalfalse"π
declarationString£<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">visitStringsCommand</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*visitStringsCommand2§
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2m
!java.util.Collections.emptyList()CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java ('2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (&2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (&2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java   (2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java! !(&2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java" "(2~
2org.jabref.logic.bst.BstVM.BstVM(java.lang.String)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2ñ
Jorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?vm@24.14:24.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (
2ñ
Jorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?vm@24.14:24.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java& ((2õ
Oorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?strList@28.28:28.35CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2õ
Oorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?strList@28.28:28.35CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2õ
Oorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?strList@28.28:28.35CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2õ
Oorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?strList@28.28:28.35CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java   (2õ
Oorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?strList@28.28:28.35CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java! !(2õ
Oorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?strList@28.28:28.35CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java" "(2ù
Jorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?vm@24.14:24.16DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2¢
Oorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?strList@28.28:28.35DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (#2W
voidRETURN_TYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java ( 
Jorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?vm@24.14:24.16VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java ("
typeBstVM"
isFinalfalse"†
declarationStringä<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("STRINGS { test.string1 test.string2 test.string3 }")*vm2f
org.jabref.logic.bst.BstVMTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2~
2org.jabref.logic.bst.BstVM.BstVM(java.lang.String)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (©
Oorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?strList@28.28:28.35VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (#"
typeMap<String, String>"
isFinalfalse"ç
declarationStringx<mark class="modifier"> </mark>Map<String, String> <mark class="class-field">strList</mark> = vm.latestContext.strings()*strList2Y
java.util.MapTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2e
java.lang.StringTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2e
java.lang.StringTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2ñ
Jorg.jabref.logic.bst.BstVMVisitorTest.visitStringsCommand()?vm@24.14:24.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java& ((º
<org.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()METHODB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java& &($"
isFinalfalse"∫
declarationString§<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">visitIntegersCommand</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*visitIntegersCommand2§
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java) )(2m
!java.util.Collections.emptyList()CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java) )('2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java,  ,(+2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java-% -((2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java.  .(+2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java/% /((2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java0  0(+2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java1% 1((2~
2org.jabref.logic.bst.BstVM.BstVM(java.lang.String)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java' '(2ó
Korg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?vm@39.14:39.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java) )(
2ó
Korg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?vm@39.14:39.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java+, +(.2°
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?integersList@43.29:43.41CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java, ,(2°
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?integersList@43.29:43.41CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java- -($2°
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?integersList@43.29:43.41CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java. .(2°
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?integersList@43.29:43.41CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java/ /($2°
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?integersList@43.29:43.41CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java0 0(2°
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?integersList@43.29:43.41CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java1 1($2û
Korg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?vm@39.14:39.16DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java' '(2®
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?integersList@43.29:43.41DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java+ +()2W
voidRETURN_TYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java& &(∆
Korg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?vm@39.14:39.16VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java' '("
typeBstVM"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("INTEGERS { variable.a variable.b variable.c }")*vm2f
org.jabref.logic.bst.BstVMTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java' '(2~
2org.jabref.logic.bst.BstVM.BstVM(java.lang.String)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java' '(æ
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?integersList@43.29:43.41VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java+ +()"
typeMap<String, Integer>"
isFinalfalse"î
declarationString<mark class="modifier"> </mark>Map<String, Integer> <mark class="class-field">integersList</mark> = vm.latestContext.integers()*integersList2Y
java.util.MapTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java+ +(2e
java.lang.StringTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java+ +(2f
java.lang.IntegerTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java+ +(2ó
Korg.jabref.logic.bst.BstVMVisitorTest.visitIntegersCommand()?vm@39.14:39.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java+, +(.“
<org.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()METHODB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java5	 5("
isFinalfalse"¥
declarationStringû<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">visitFunctionCommand</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*visitFunctionCommand2§
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java; ;(2m
!java.util.Collections.emptyList()CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java; ;('2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java> >((2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java?  ?(#2ó
Korg.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()?vm@54.14:54.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java; ;(
2ó
Korg.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()?vm@54.14:54.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java=: =(<2û
Rorg.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()?functions@61.46:61.55CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java> >(2û
Rorg.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()?functions@61.46:61.55CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java? ?(2û
Korg.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()?vm@54.14:54.16DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java6 6(2•
Rorg.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()?functions@61.46:61.55DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java=. =(72W
voidRETURN_TYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java5 5(Ó
Korg.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()?vm@54.14:54.16VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java6 6("
typeBstVM"
isFinalfalse"√
declarationString≠<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("""
    FUNCTION { test.func } { #1 'test.var := }
    EXECUTE { test.func }
    """)*vm2f
org.jabref.logic.bst.BstVMTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java6 6(ˆ
Rorg.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()?functions@61.46:61.55VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java=. =(7"-
type%Map<String, BstFunctions.BstFunction>"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>Map<String, BstFunctions.BstFunction> <mark class="class-field">functions</mark> = vm.latestContext.functions()*	functions2Y
java.util.MapTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java= =(2e
java.lang.StringTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java= =(2Ç
-org.jabref.logic.bst.BstFunctions.BstFunctionTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java=! =(,2ó
Korg.jabref.logic.bst.BstVMVisitorTest.visitFunctionCommand()?vm@54.14:54.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java=: =(<Â
9org.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()METHODB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaC	 C("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">visitMacroCommand</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*visitMacroCommand2§
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaI I(2m
!java.util.Collections.emptyList()CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaI I('2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaL L((2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaM  M(#2î
Horg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?vm@68.14:68.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaI I(
2î
Horg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?vm@68.14:68.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaK: K(<2õ
Oorg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?functions@75.46:75.55CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaL L(2õ
Oorg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?functions@75.46:75.55CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaM M(2î
Horg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?vm@68.14:68.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaN  N("2î
Horg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?vm@68.14:68.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaO O(2õ
Horg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?vm@68.14:68.16DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaD D(2¢
Oorg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?functions@75.46:75.55DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaK. K(72W
voidRETURN_TYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaC C(÷
Horg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?vm@68.14:68.16VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaD D("
typeBstVM"
isFinalfalse"Æ
declarationStringò<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("""
    MACRO { jan } { "January" }
    EXECUTE { jan }
    """)*vm2f
org.jabref.logic.bst.BstVMTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaD D(
Oorg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?functions@75.46:75.55VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaK. K(7"-
type%Map<String, BstFunctions.BstFunction>"
isFinalfalse"§
declarationStringé<mark class="modifier"> </mark>Map<String, BstFunctions.BstFunction> <mark class="class-field">functions</mark> = vm.latestContext.functions()*	functions2Y
java.util.MapTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaK K(2e
java.lang.StringTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaK K(2Ç
-org.jabref.logic.bst.BstFunctions.BstFunctionTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaK! K(,2î
Horg.jabref.logic.bst.BstVMVisitorTest.visitMacroCommand()?vm@68.14:68.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaK: K(<„
9org.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()METHODB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaS	 S("
isFinalfalse"±
declarationStringõ<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">visitEntryCommand</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*visitEntryCommand2`
java.util.List.of(E)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaU* U(,2}
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaU7 U(G2§
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaW W(2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaZ# Z(.2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java[# [(.2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java\# \(.2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java]# ](.2w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java^* ^(52w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java_) _(42w
+java.util.Map.containsKey(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java`) `(42~
2org.jabref.logic.bst.BstVM.BstVM(java.lang.String)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaT T(2î
Horg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?vm@84.14:84.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaW W(
2ù
Qorg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?testEntries@85.23:85.34CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaW W(2î
Horg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?vm@84.14:84.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaY Y(2ö
Norg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?bstEntry@89.17:89.25CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaZ Z(2ö
Norg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?bstEntry@89.17:89.25CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java[ [(2ö
Norg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?bstEntry@89.17:89.25CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java\ \(2ö
Norg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?bstEntry@89.17:89.25CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java] ](2ö
Norg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?bstEntry@89.17:89.25CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java^ ^(2ö
Norg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?bstEntry@89.17:89.25CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java_ _(2ö
Norg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?bstEntry@89.17:89.25CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java` `(2õ
Horg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?vm@84.14:84.16DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaT T(2§
Qorg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?testEntries@85.23:85.34DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaU U("2°
Norg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?bstEntry@89.17:89.25DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaY Y(2W
voidRETURN_TYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaS S(–
Horg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?vm@84.14:84.16VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaT T("
typeBstVM"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("ENTRY { address author title type } { variable } { label }")*vm2f
org.jabref.logic.bst.BstVMTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaT T(2~
2org.jabref.logic.bst.BstVM.BstVM(java.lang.String)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaT T(¶
Qorg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?testEntries@85.23:85.34VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaU U(""
typeList<BibEntry>"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">testEntries</mark> = List.of(BstVMTest.defaultTestEntry())*testEntries2Z
java.util.ListTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaU U(2t
org.jabref.model.entry.BibEntryTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaU U(2`
java.util.List.of(E)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaU* U(,2}
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaU7 U(G€
Norg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?bstEntry@89.17:89.25VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaY Y("
typeBstEntry"
isFinalfalse"ä
declarationStringu<mark class="modifier"> </mark>BstEntry <mark class="class-field">bstEntry</mark> = vm.latestContext.entries().get(0)*bstEntry2i
org.jabref.logic.bst.BstEntryTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaY Y(2î
Horg.jabref.logic.bst.BstVMVisitorTest.visitEntryCommand()?vm@84.14:84.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaY Y(•
8org.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()METHODB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javad	 d("
isFinalfalse"∞
declarationStringö<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">visitReadCommand</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*visitReadCommand2`
java.util.List.of(E)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javai* i(,2}
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javai7 i(G2§
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javak k(2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javan[ n(^2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaoh o(k2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javapZ p(]2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaq$ q('2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javar& r()2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javas* s(-2o
#java.util.Map.get(java.lang.Object)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javatK t(N2ï
Iorg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?vm@101.14:101.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javak k(
2û
Rorg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?testEntries@105.23:105.34CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javak k(2ï
Iorg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?vm@101.14:101.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javam% m('2ô
Morg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?fields@109.28:109.34CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javanT n(Z2ô
Morg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?fields@109.28:109.34CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaoa o(g2ô
Morg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?fields@109.28:109.34CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javapS p(Y2ô
Morg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?fields@109.28:109.34CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaq q(#2ô
Morg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?fields@109.28:109.34CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javar r(%2ô
Morg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?fields@109.28:109.34CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javas# s()2ô
Morg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?fields@109.28:109.34CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javatD t(J2ú
Iorg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?vm@101.14:101.16DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javae e(2•
Rorg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?testEntries@105.23:105.34DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javai i("2†
Morg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?fields@109.28:109.34DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javam m("2W
voidRETURN_TYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javad d(Ú
Iorg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?vm@101.14:101.16VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javae e("
typeBstVM"
isFinalfalse"…
declarationString≥<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("""
    ENTRY { author title booktitle year owner timestamp url } { } { }
    READ
    """)*vm2f
org.jabref.logic.bst.BstVMTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javae e(ß
Rorg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?testEntries@105.23:105.34VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javai i(""
typeList<BibEntry>"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">testEntries</mark> = List.of(BstVMTest.defaultTestEntry())*testEntries2Z
java.util.ListTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javai i(2t
org.jabref.model.entry.BibEntryTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javai i(2`
java.util.List.of(E)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javai* i(,2}
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javai7 i(G≥
Morg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?fields@109.28:109.34VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javam m(""
typeMap<String, String>"
isFinalfalse"õ
declarationStringÖ<mark class="modifier"> </mark>Map<String, String> <mark class="class-field">fields</mark> = vm.latestContext.entries().get(0).fields*fields2Y
java.util.MapTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javam m(2e
java.lang.StringTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javam m(2e
java.lang.StringTYPE_ARGUMENTB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javam m(2ï
Iorg.jabref.logic.bst.BstVMVisitorTest.visitReadCommand()?vm@101.14:101.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javam% m('’

;org.jabref.logic.bst.BstVMVisitorTest.visitExecuteCommand()METHODB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javax x(#"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">visitExecuteCommand</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>RecognitionException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*visitExecuteCommand2§
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2m
!java.util.Collections.emptyList()CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java ('2ò
Lorg.jabref.logic.bst.BstVMVisitorTest.visitExecuteCommand()?vm@121.14:121.16CALLB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (
2ö
Lorg.jabref.logic.bst.BstVMVisitorTest.visitExecuteCommand()?vm@121.14:121.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÅ Å(2ü
Lorg.jabref.logic.bst.BstVMVisitorTest.visitExecuteCommand()?vm@121.14:121.16DECLARATIONB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javay y(2W
voidRETURN_TYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javax x(û
Lorg.jabref.logic.bst.BstVMVisitorTest.visitExecuteCommand()?vm@121.14:121.16VARIABLEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javay y("
typeBstVM"
isFinalfalse"Ú
declarationString‹<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("""
    INTEGERS { variable.a }
    FUNCTION { init.state.consts } { #5 'variable.a := }
    EXECUTE { init.state.consts }
    """)*vm2f
org.jabref.logic.bst.BstVMTYPEB
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javay y(ß
;org.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()METHODD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÖ Ö(#"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">visitIterateCommand</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>RecognitionException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*visitIterateCommand2e
java.util.List.of(E, E)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaå* å(,2
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaç ç(*2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaè è((2¶
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaë ë(2d
java.util.Deque.size()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaì& ì(*2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaì ì(#2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaî+ î(.2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaî  î((2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaï- ï(02s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaï" ï(*2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaé é(2ö
Lorg.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()?vm@134.14:134.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaë ë(
2£
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()?testEntries@140.23:140.34CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaë ë(2ö
Lorg.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()?vm@134.14:134.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaì ì(2ö
Lorg.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()?vm@134.14:134.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaî î(2ö
Lorg.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()?vm@134.14:134.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaï ï(!2°
Lorg.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()?vm@134.14:134.16DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÜ Ü(2™
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()?testEntries@140.23:140.34DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaå å("2Y
voidRETURN_TYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÖ Ö(Ä
Lorg.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()?vm@134.14:134.16VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÜ Ü("
typeBstVM"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("""
    ENTRY { } { } { }
    FUNCTION { test } { cite$ }
    READ
    ITERATE { test }
    """)*vm2h
org.jabref.logic.bst.BstVMTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÜ Ü(…	
Uorg.jabref.logic.bst.BstVMVisitorTest.visitIterateCommand()?testEntries@140.23:140.34VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaå å(""
typeList<BibEntry>"
isFinalfalse"˜
declarationString·<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">testEntries</mark> = List.of(BstVMTest.defaultTestEntry()<mark class="modifier">,</mark> new BibEntry(StandardEntryType.Article).withCitationKey("test"))*testEntries2\
java.util.ListTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaå å(2v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaå å(2e
java.util.List.of(E, E)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaå* å(,2
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaç ç(*2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaè è((2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaé é(ß
;org.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()METHODD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaô ô(#"
isFinalfalse"ë
declarationString˚<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">visitReverseCommand</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>RecognitionException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*visitReverseCommand2e
java.util.List.of(E, E)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java†* †(,2
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java° °(*2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java£ £((2¶
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java• •(2d
java.util.Deque.size()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaß& ß(*2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaß ß(#2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java®- ®(02s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java®" ®(*2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java©+ ©(.2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java©  ©((2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¢ ¢(2ö
Lorg.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()?vm@154.14:154.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java• •(
2£
Uorg.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()?testEntries@160.23:160.34CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java• •(2ö
Lorg.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()?vm@154.14:154.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaß ß(2ö
Lorg.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()?vm@154.14:154.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java® ®(!2ö
Lorg.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()?vm@154.14:154.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java© ©(2°
Lorg.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()?vm@154.14:154.16DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaö ö(2™
Uorg.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()?testEntries@160.23:160.34DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java† †("2Y
voidRETURN_TYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaô ô(Ä
Lorg.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()?vm@154.14:154.16VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaö ö("
typeBstVM"
isFinalfalse"–
declarationString∫<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("""
    ENTRY { } { } { }
    FUNCTION { test } { cite$ }
    READ
    REVERSE { test }
    """)*vm2h
org.jabref.logic.bst.BstVMTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaö ö(…	
Uorg.jabref.logic.bst.BstVMVisitorTest.visitReverseCommand()?testEntries@160.23:160.34VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java† †(""
typeList<BibEntry>"
isFinalfalse"˜
declarationString·<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">testEntries</mark> = List.of(BstVMTest.defaultTestEntry()<mark class="modifier">,</mark> new BibEntry(StandardEntryType.Article).withCitationKey("test"))*testEntries2\
java.util.ListTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java† †(2v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java† †(2e
java.util.List.of(E, E)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java†* †(,2
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java° °(*2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java£ £((2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¢ ¢(˘"
8org.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()METHODD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java≠ ≠( "
isFinalfalse"é
declarationString¯<mark class="annotation">@Test</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">visitSortCommand</mark>()<mark class="modifier"> <mark class="modifier">throws</mark> </mark>RecognitionException"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*visitSortCommand2k
java.util.List.of(E, E, E, E)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¥* ¥(,2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaµ8 µ(G2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∂8 ∂(G2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∑8 ∑(G2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∏8 ∏(G2¶
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∫ ∫(2f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaΩ Ω( 2f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaæ æ( 2e
java.util.List.get(int)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaæ5 æ(82f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaø ø( 2e
java.util.List.get(int)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaø5 ø(82f
java.util.Optional.of(T)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¿ ¿( 2e
java.util.List.get(int)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¿5 ¿(82û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaµ µ(2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∂ ∂(2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∑ ∑(2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∏ ∏(2ó
Iorg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?vm@174.14:174.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∫ ∫(
2†
Rorg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?testEntries@180.23:180.34CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∫ ∫(2ó
Iorg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?vm@174.14:174.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaº' º()2¢
Torg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?sortedEntries@188.23:188.36CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaΩ' Ω(42¢
Torg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?sortedEntries@188.23:188.36CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaæ' æ(42¢
Torg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?sortedEntries@188.23:188.36CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaø' ø(42¢
Torg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?sortedEntries@188.23:188.36CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¿' ¿(42û
Iorg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?vm@174.14:174.16DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÆ Æ(2ß
Rorg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?testEntries@180.23:180.34DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¥ ¥("2©
Torg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?sortedEntries@188.23:188.36DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaº º($2Y
voidRETURN_TYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java≠ ≠(ë
Iorg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?vm@174.14:174.16VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÆ Æ("
typeBstVM"
isFinalfalse"‰
declarationStringŒ<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("""
    ENTRY { } { } { }
    FUNCTION { presort } { cite$ 'sort.key$ := }
    ITERATE { presort }
    SORT
    """)*vm2h
org.jabref.logic.bst.BstVMTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÆ Æ(π
Rorg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?testEntries@180.23:180.34VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¥ ¥(""
typeList<BibEntry>"
isFinalfalse"Ã
declarationString∂<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">testEntries</mark> = List.of(new BibEntry(StandardEntryType.Article).withCitationKey("c")<mark class="modifier">,</mark> new BibEntry(StandardEntryType.Article).withCitationKey("b")<mark class="modifier">,</mark> new BibEntry(StandardEntryType.Article).withCitationKey("d")<mark class="modifier">,</mark> new BibEntry(StandardEntryType.Article).withCitationKey("a"))*testEntries2\
java.util.ListTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¥ ¥(2v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¥ ¥(2k
java.util.List.of(E, E, E, E)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java¥* ¥(,2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaµ8 µ(G2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∂8 ∂(G2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∑8 ∑(G2è
Aorg.jabref.model.entry.BibEntry.withCitationKey(java.lang.String)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∏8 ∏(G2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaµ µ(2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∂ ∂(2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∑ ∑(2û
Porg.jabref.model.entry.BibEntry.BibEntry(org.jabref.model.entry.types.EntryType)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java∏ ∏(ﬁ
Torg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?sortedEntries@188.23:188.36VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaº º($"
typeList<BstEntry>"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>List<BstEntry> <mark class="class-field">sortedEntries</mark> = vm.latestContext.entries()*sortedEntries2\
java.util.ListTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaº º(2t
org.jabref.logic.bst.BstEntryTYPE_ARGUMENTD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaº º(2ó
Iorg.jabref.logic.bst.BstVMVisitorTest.visitSortCommand()?vm@174.14:174.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaº' º()⁄
7org.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()METHODD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaƒ	 ƒ("
isFinalfalse"Ø
declarationStringô<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">visitIdentifier</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*visitIdentifier2b
java.util.List.of(E)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‘* ‘(,2
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‘7 ‘(G2¶
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java÷ ÷(2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÿ& ÿ()2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÿ ÿ(#2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaŸ2 Ÿ(52s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaŸ' Ÿ(/2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java⁄& ⁄()2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java⁄ ⁄(#2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java€+ €(.2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java€  €((2d
java.util.Deque.size()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‹& ‹(*2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‹ ‹(#2ñ
Horg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?vm@197.14:197.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java÷ ÷(
2ü
Qorg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?testEntries@212.23:212.34CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java÷ ÷(2ñ
Horg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?vm@197.14:197.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÿ ÿ(2ñ
Horg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?vm@197.14:197.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaŸ$ Ÿ(&2ñ
Horg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?vm@197.14:197.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java⁄ ⁄(2ñ
Horg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?vm@197.14:197.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java€ €(2ñ
Horg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?vm@197.14:197.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‹ ‹(2ù
Horg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?vm@197.14:197.16DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java≈ ≈(2¶
Qorg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?testEntries@212.23:212.34DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‘ ‘("2Y
voidRETURN_TYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaƒ ƒ(˝
Horg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?vm@197.14:197.16VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java≈ ≈("
typeBstVM"
isFinalfalse"—
declarationStringª<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("""
    ENTRY { } { local.variable } { local.label }
    READ
    STRINGS { label }
    INTEGERS { variable }
    FUNCTION { test } {
        #1 'local.variable :=
        #2 'variable :=
        "TEST" 'local.label :=
        "TEST-GLOBAL" 'label :=
        local.label local.variable
        label variable
    }
    ITERATE { test }
    """)*vm2h
org.jabref.logic.bst.BstVMTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java≈ ≈(∞
Qorg.jabref.logic.bst.BstVMVisitorTest.visitIdentifier()?testEntries@212.23:212.34VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‘ ‘(""
typeList<BibEntry>"
isFinalfalse"ò
declarationStringÇ<mark class="modifier"> </mark>List<BibEntry> <mark class="class-field">testEntries</mark> = List.of(BstVMTest.defaultTestEntry())*testEntries2\
java.util.ListTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‘ ‘(2v
org.jabref.model.entry.BibEntryTYPE_ARGUMENTD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‘ ‘(2b
java.util.List.of(E)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‘* ‘(,2
1org.jabref.logic.bst.BstVMTest.defaultTestEntry()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‘7 ‘(GÉ
6org.jabref.logic.bst.BstVMVisitorTest.visitStackitem()METHODD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‡	 ‡("
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Test</mark> <br><mark class="modifier"> </mark><mark class="modifier">void</mark> <mark class="method">visitStackitem</mark>()"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typevoid*visitStackitem2¶
Xorg.jabref.logic.bst.BstVM.render(java.util.Collection<org.jabref.model.entry.BibEntry>)CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÓ Ó(2o
!java.util.Collections.emptyList()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÓ Ó('2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java& ()2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (#2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÒ8 Ò(;2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÒ- Ò(52c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÚE Ú(H2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÚ: Ú(B2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÛ& Û()2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÛ Û(#2c
java.util.Deque.pop()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÙ, Ù(/2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÙ! Ù()2d
java.util.Deque.size()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaı& ı(*2s
%org.jabref.logic.bst.BstVM.getStack()CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaı ı(#2ï
Gorg.jabref.logic.bst.BstVMVisitorTest.visitStackitem()?vm@225.14:225.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÓ Ó(
2ï
Gorg.jabref.logic.bst.BstVMVisitorTest.visitStackitem()?vm@225.14:225.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java (2ï
Gorg.jabref.logic.bst.BstVMVisitorTest.visitStackitem()?vm@225.14:225.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÒ* Ò(,2ï
Gorg.jabref.logic.bst.BstVMVisitorTest.visitStackitem()?vm@225.14:225.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÚ7 Ú(92ï
Gorg.jabref.logic.bst.BstVMVisitorTest.visitStackitem()?vm@225.14:225.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÛ Û(2ï
Gorg.jabref.logic.bst.BstVMVisitorTest.visitStackitem()?vm@225.14:225.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaÙ Ù( 2ï
Gorg.jabref.logic.bst.BstVMVisitorTest.visitStackitem()?vm@225.14:225.16CALLD
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.javaı ı(2ú
Gorg.jabref.logic.bst.BstVMVisitorTest.visitStackitem()?vm@225.14:225.16DECLARATIOND
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java· ·(2Y
voidRETURN_TYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java‡ ‡(”
Gorg.jabref.logic.bst.BstVMVisitorTest.visitStackitem()?vm@225.14:225.16VARIABLED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java· ·("
typeBstVM"
isFinalfalse"®
declarationStringí<mark class="modifier"> </mark>BstVM <mark class="class-field">vm</mark> = new BstVM("""
    STRINGS { t }
    FUNCTION { test2 } { #3 }
    FUNCTION { test } {
        "HELLO"
        #1
        't
        { #2 }
        test2
    }
    EXECUTE { test }
    """)*vm2h
org.jabref.logic.bst.BstVMTYPED
8src\test\java\org\jabref\logic\bst\BstVMVisitorTest.java· ·(