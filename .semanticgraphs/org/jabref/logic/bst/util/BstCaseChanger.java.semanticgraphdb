
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaô
(org.jabref.logic.bst.util.BstCaseChangerCLASSE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (!"$
packageorg.jabref.logic.bst.util"
isFinaltrue"
inner classfalse"

isAbstractfalse"ê
declarationString{<mark class="modifier">public </mark><mark class="modifier">final </mark><mark class="modifier">class </mark>BstCaseChanger"
accesspublic*BstCaseChanger2è
9org.jabref.logic.bst.util.BstCaseChanger.BstCaseChanger()DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaE E(2–
zorg.jabref.logic.bst.util.BstCaseChanger.changeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaN N(#2“
|org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaR R(2Ô
ñorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê ê("2˛
•org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥ ≥(2Ó
ïorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘ ‘(!2˙
°org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ Â(-2ù
Eorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaä# ä(22ë
;org.jabref.logic.bst.util.BstCaseChanger?LOGGER@10.32:10.38DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java
  
(&2î
>org.jabref.logic.bst.util.BstCaseChanger?prevColon@13.20:13.29DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (2ï
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (2â
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeDECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (à
9org.jabref.logic.bst.util.BstCaseChanger.BstCaseChanger()CONSTRUCTORE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaE E("g
declarationStringR<mark class="modifier">private </mark><mark class="method">BstCaseChanger</mark>()*BstCaseChanger2~
(org.jabref.logic.bst.util.BstCaseChangerRETURN_TYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaE E(™
zorg.jabref.logic.bst.util.BstCaseChanger.changeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)METHODE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaN N(#"
isFinalfalse"Ê
declarationString–<mark class="modifier">public </mark><mark class="modifier">static </mark>String <mark class="method">changeCase</mark>(String s<mark class="modifier"><mark class="modifier">,</mark></mark> FormatMode format)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeString*
changeCase2À
|org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaO& O(22à
9org.jabref.logic.bst.util.BstCaseChanger.BstCaseChanger()CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaO O("2À
|org.jabref.logic.bst.util.BstCaseChanger.changeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaO3 O(42—
Åorg.jabref.logic.bst.util.BstCaseChanger.changeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaO6 O(<2–
|org.jabref.logic.bst.util.BstCaseChanger.changeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!s	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaN+ N(,2÷
Åorg.jabref.logic.bst.util.BstCaseChanger.changeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaN9 N(?2f
java.lang.StringRETURN_TYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaN N(ı
|org.jabref.logic.bst.util.BstCaseChanger.changeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!s	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaN+ N(,"
typeString"
isFinalfalse"
declarationStringString s*s2_
java.lang.StringTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaN$ N(*±
Åorg.jabref.logic.bst.util.BstCaseChanger.changeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaN9 N(?"
type
FormatMode"
isFinalfalse"&
declarationStringFormatMode format*format2Ç
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaN. N(8«s
|org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)METHODE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaR R("
isFinalfalse"ƒ
declarationStringÆ<mark class="modifier">private </mark>String <mark class="method">doChangeCase</mark>(String s<mark class="modifier"><mark class="modifier">,</mark></mark> FormatMode format)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeString*doChangeCase2m
java.lang.String.toCharArray()CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaS S( 2h
java.lang.String.length()CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaX X(2s
$java.lang.StringBuilder.append(char)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java_ _(2u
&java.lang.Character.isWhitespace(char)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javac` c(l2s
$java.lang.StringBuilder.append(char)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javad d(2Ê
ñorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javai i(&2s
$java.lang.StringBuilder.append(char)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javam m(2Ò
°org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javax x(12s
$java.lang.StringBuilder.append(char)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java{ {(2s
"java.lang.StringBuilder.toString()CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÅ Å(2v
'java.lang.StringBuilder.StringBuilder()CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaU U(,2Õ
~org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaS S(2Õ
~org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaX X(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaZ Z(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?n@88.12:88.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaZ Z(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java[ [(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java[ [(2é
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java\ \(2é
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java] ](2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java]+ ](,2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?n@88.12:88.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java]4 ](52⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java]; ](<2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java]= ](>2ç
>org.jabref.logic.bst.util.BstCaseChanger?prevColon@13.20:13.29CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java^ ^(2€
ãorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?sb@85.22:85.24CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java_ _(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java_ _(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java_  _(!2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java` `(2”
Éorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javac c(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javac= c(>2ç
>org.jabref.logic.bst.util.BstCaseChanger?prevColon@13.20:13.29CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javacI c(R2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javacm c(n2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaco c(p2€
ãorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?sb@85.22:85.24CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javad d(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javae e(2ç
>org.jabref.logic.bst.util.BstCaseChanger?prevColon@13.20:13.29CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaf f(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javai i(2€
ãorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?sb@85.22:85.24CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javai' i()2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javai+ i(,2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javai. i(/2”
Éorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javai1 i(72⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javal l(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javal l(2€
ãorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?sb@85.22:85.24CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javam m(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javam m(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javam m(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javan n(2é
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javao o(2ä
;org.jabref.logic.bst.util.BstCaseChanger?LOGGER@10.32:10.38CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javap p(2Õ
~org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javapH p(I2é
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javar r(2ç
>org.jabref.logic.bst.util.BstCaseChanger?prevColon@13.20:13.29CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javat t(2é
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaw w(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javax x(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javax2 x(32⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javax5 x(62€
ãorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?sb@85.22:85.24CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javax8 x(:2”
Éorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javax< x(B2€
ãorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?sb@85.22:85.24CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java{ {(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java{ {(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java{ {(2⁄
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java| |(2é
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java~ ~(2ä
;org.jabref.logic.bst.util.BstCaseChanger?LOGGER@10.32:10.38CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (2Õ
~org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaA (B2›
ãorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?sb@85.22:85.24CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÅ Å(2è
@org.jabref.logic.bst.util.BstCaseChanger.FormatMode?TITLE_LOWERSCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javac* c(62“
~org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!s	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaR' R((2ÿ
Éorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaR5 R(;2·
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaS S(2‚
ãorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?sb@85.22:85.24DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaU U(2·
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaW W(2·
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?n@88.12:88.13DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaX X(2f
java.lang.StringRETURN_TYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaR R(à
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?c@83.15:83.16VARIABLEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaS S("
typechar"
isFinalfalse"o
declarationStringZ<mark class="modifier"> </mark>char[] <mark class="class-field">c</mark> = s.toCharArray()*c2U
char[]TYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaS S(2m
java.lang.String.toCharArray()CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaS S( 2Õ
~org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaS S(È
ãorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?sb@85.22:85.24VARIABLEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaU U("
typeStringBuilder"
isFinalfalse"{
declarationStringf<mark class="modifier"> </mark>StringBuilder <mark class="class-field">sb</mark> = new StringBuilder()*sb2f
java.lang.StringBuilderTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaU U(2v
'java.lang.StringBuilder.StringBuilder()CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaU U(,“
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@87.12:87.13VARIABLEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaW W("
typeint"
isFinalfalse"|
declarationStringg<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = 0*i2R
intTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaW W(ñ
äorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?n@88.12:88.13VARIABLEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaX X("
typeint"
isFinalfalse"Ö
declarationStringp<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">n</mark> = s.length()*n2R
intTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaX X(2h
java.lang.String.length()CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaX X(2Õ
~org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaX X(˜
~org.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!s	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaR' R(("
typeString"
isFinalfalse"
declarationStringString s*s2_
java.lang.StringTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaR  R(&≥
Éorg.jabref.logic.bst.util.BstCaseChanger.doChangeCase(java.lang.String, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaR5 R(;"
type
FormatMode"
isFinalfalse"&
declarationStringFormatMode format*format2Ç
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaR* R(4≥`
ñorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)METHODG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê ê(""
isFinalfalse"ò
declarationStringÇ<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="method">convertSpecialChar</mark>(StringBuilder sb<mark class="modifier"><mark class="modifier">,</mark></mark> char[] c<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> start<mark class="modifier"><mark class="modifier">,</mark></mark> FormatMode format)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeint*convertSpecialChar2u
$java.lang.StringBuilder.append(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaì ì(2u
$java.lang.StringBuilder.append(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaó ó(2ñ
Eorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ0 õ(?2o
java.util.Optional.isPresent()CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaú ú(2˜
•org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaù ù(#2i
java.util.Optional.get()CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaù, ù(/2Á
ïorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¶ ¶(%2Ó
úorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!startCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaë ë(2Î
ôorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaì ì(
2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaì ì(2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaì ì(2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaî î(	2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javañ ñ(2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javañ ñ(2ê
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javañ" ñ(,2Î
ôorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaó ó(2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaó ó(2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaó ó(2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaò ò(2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ@ õ(A2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõC õ(D2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?s@155.29:155.30CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaú ú(2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaù ù(2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaù$ ù(%2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaù' ù((2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?s@155.29:155.30CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaù* ù(+2Î
ôorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaù3 ù(52Ô
ùorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaù7 ù(=2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java† †(2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java† †(2ê
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java†& †(02Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java†: †(;2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java†< †(=2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java° °(2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java° °(2ê
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¢ ¢(2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java£ £(2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java£ £(2ê
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java§ §(2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¶ ¶(2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¶& ¶('2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¶) ¶(*2Î
ôorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¶, ¶(.2Ô
ùorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¶0 ¶(62¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java© ©(2
ôorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sb	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê1 ê(32Ô
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê< ê(=2Û
úorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!start	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaêC ê(H2Ù
ùorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaêU ê([2ˇ
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaë ë(2ˇ
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?s@155.29:155.30DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ õ(2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê ê(Ë
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13VARIABLEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaë ë("
typeint"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = start*i2T
intTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaë ë(2Ó
úorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!startCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaë ë(é

¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?s@155.29:155.30VARIABLEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ õ("
typeOptional<String>"
isFinalfalse"é
declarationStringy<mark class="modifier"> </mark>Optional<String> <mark class="class-field">s</mark> = BstCaseChanger.findSpecialChar(c, i)*s2c
java.util.OptionalTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ õ(2j
java.lang.StringTYPE_ARGUMENTG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ õ(2ñ
Eorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ0 õ(?2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ@ õ(A2¯
¶org.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@145.12:145.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõC õ(DÆ
ôorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sb	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê1 ê(3"
typeStringBuilder"
isFinalfalse"%
declarationStringStringBuilder sb*sb2h
java.lang.StringBuilderTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê# ê(0å
òorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê< ê(="
typechar[]"
isFinalfalse"
declarationStringchar[] c*c2W
char[]TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê5 ê(;≠
úorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!start	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaêC ê(H"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> start*start2T
intTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê? ê(B—
ùorg.jabref.logic.bst.util.BstCaseChanger.convertSpecialChar(java.lang.StringBuilder, char[], int, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaêU ê(["
type
FormatMode"
isFinalfalse"&
declarationStringFormatMode format*format2Ñ
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaêJ ê(Tá[
•org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)METHODG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥ ≥("
isFinalfalse"€
declarationString≈<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="method">convertAccented</mark>(char[] c<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> start<mark class="modifier"><mark class="modifier">,</mark></mark> String s<mark class="modifier"><mark class="modifier">,</mark></mark> StringBuilder sb<mark class="modifier"><mark class="modifier">,</mark></mark> FormatMode format)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeint*convertAccented2j
java.lang.String.length()CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaµ µ(2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java∫# ∫(+2Å
0java.lang.StringBuilder.append(java.lang.String)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaª ª(2
.java.lang.String.toLowerCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaª  ª(+2Å
0java.lang.StringBuilder.append(java.lang.String)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaΩ Ω(2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¡# ¡(+2Å
0java.lang.StringBuilder.append(java.lang.String)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¬ ¬(2
.java.lang.String.toUpperCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¬  ¬(+2Ç
1java.lang.String.contains(java.lang.CharSequence)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java√$ √(,2z
)java.lang.StringBuilder.deleteCharAt(int)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaƒ ƒ(#2y
(java.lang.AbstractStringBuilder.length()CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaƒ' ƒ(-2Å
0java.lang.StringBuilder.append(java.lang.String)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≈ ≈(2
.java.lang.String.toUpperCase(java.util.Locale)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≈  ≈(+2w
&java.lang.Character.isWhitespace(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java∆9 ∆(E2Å
0java.lang.StringBuilder.append(java.lang.String)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java   (2˝
´org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!startCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¥ ¥(2â
∑org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@180.12:180.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaµ µ(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaµ µ(2˛
¨org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java∑ ∑(2ë
@org.jabref.logic.bst.util.BstCaseChanger.FormatMode?TITLE_LOWERSCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java∏ ∏(2è
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_LOWERSCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaπ π(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java∫, ∫(-2˙
®org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaª ª(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaª ª(2˙
®org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaΩ Ω(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaΩ Ω(2è
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_UPPERSCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¿ ¿(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¡, ¡(-2˙
®org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¬ ¬(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¬ ¬(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java√- √(.2˙
®org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaƒ ƒ(2˙
®org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaƒ$ ƒ(&2˙
®org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≈ ≈(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≈ ≈(2â
∑org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@180.12:180.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java∆ ∆(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java∆" ∆(#2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java∆F ∆(G2â
∑org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@180.12:180.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java∆H ∆(K2â
∑org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@180.12:180.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java« «(2˙
®org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java   (2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java   (2å
;org.jabref.logic.bst.util.BstCaseChanger?LOGGER@10.32:10.38CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaŒ Œ(2˛
¨org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaŒC Œ(I2â
∑org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@180.12:180.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java— —(2˛
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥' ≥((2Ç
´org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!start	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥. ≥(32˛
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!s	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥< ≥(=2ˇ
®org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sb	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥M ≥(O2É
¨org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥\ ≥(b2ê
∑org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@180.12:180.15DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¥ ¥(2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥ ≥(å
∑org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@180.12:180.15VARIABLEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¥ ¥("
typeint"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">pos</mark> = start*pos2T
intTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¥ ¥(2˝
´org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!startCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¥ ¥(õ
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥' ≥(("
typechar[]"
isFinalfalse"
declarationStringchar[] c*c2W
char[]TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥  ≥(&º
´org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!start	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥. ≥(3"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> start*start2T
intTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥* ≥(-•
ßorg.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!s	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥< ≥(="
typeString"
isFinalfalse"
declarationStringString s*s2a
java.lang.StringTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥5 ≥(;Ω
®org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sb	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥M ≥(O"
typeStringBuilder"
isFinalfalse"%
declarationStringStringBuilder sb*sb2h
java.lang.StringBuilderTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥? ≥(L‡
¨org.jabref.logic.bst.util.BstCaseChanger.convertAccented(char[], int, java.lang.String, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥\ ≥(b"
type
FormatMode"
isFinalfalse"&
declarationStringFormatMode format*format2Ñ
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java≥Q ≥([≥/
ïorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)METHODG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘ ‘(!"
isFinalfalse"ó
declarationStringÅ<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="method">convertNonControl</mark>(char[] c<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> start<mark class="modifier"><mark class="modifier">,</mark></mark> StringBuilder sb<mark class="modifier"><mark class="modifier">,</mark></mark> FormatMode format)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeint*convertNonControl2u
$java.lang.StringBuilder.append(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÿ ÿ(2v
%java.lang.Character.toLowerCase(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÿ$ ÿ(/2u
$java.lang.StringBuilder.append(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‹ ‹(2v
%java.lang.Character.toUpperCase(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‹$ ‹(/2Ì
õorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!startCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java’ ’(2Ó
úorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java÷ ÷(2ë
@org.jabref.logic.bst.util.BstCaseChanger.FormatMode?TITLE_LOWERSCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java◊ ◊(2è
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_LOWERSCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java◊ ◊()2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÿ ÿ(2È
óorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÿ0 ÿ(12˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@213.12:213.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÿ2 ÿ(52˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@213.12:213.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaŸ Ÿ(2è
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_UPPERSCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java€ €(2Í
òorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‹ ‹(2È
óorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‹0 ‹(12˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@213.12:213.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‹2 ‹(52˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@213.12:213.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java› ›(2å
;org.jabref.logic.bst.util.BstCaseChanger?LOGGER@10.32:10.38CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‡ ‡(2Ó
úorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‡I ‡(O2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@213.12:213.15CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‚ ‚(2Ó
óorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘) ‘(*2Ú
õorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!start	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘0 ‘(52Ô
òorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sb	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘E ‘(G2Û
úorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘T ‘(Z2Ä
ßorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@213.12:213.15DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java’ ’(2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘ ‘(Ï
ßorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?pos@213.12:213.15VARIABLEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java’ ’("
typeint"
isFinalfalse"Ç
declarationStringm<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">pos</mark> = start*pos2T
intTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java’ ’(2Ì
õorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!startCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java’ ’(ã
óorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘) ‘(*"
typechar[]"
isFinalfalse"
declarationStringchar[] c*c2W
char[]TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘" ‘((¨
õorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!start	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘0 ‘(5"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> start*start2T
intTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘, ‘(/≠
òorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sb	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘E ‘(G"
typeStringBuilder"
isFinalfalse"%
declarationStringStringBuilder sb*sb2h
java.lang.StringBuilderTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘7 ‘(D–
úorg.jabref.logic.bst.util.BstCaseChanger.convertNonControl(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘T ‘(Z"
type
FormatMode"
isFinalfalse"&
declarationStringFormatMode format*format2Ñ
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java‘I ‘(SçQ
°org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)METHODG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ Â(-"
isFinalfalse"£
declarationStringç<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="method">convertCharIfBraceLevelIsZero</mark>(char[] c<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> start<mark class="modifier"><mark class="modifier">,</mark></mark> StringBuilder sb<mark class="modifier"><mark class="modifier">,</mark></mark> FormatMode format)"
isStaticfalse"
accessprivate"

isAbstractfalse"
typeint*convertCharIfBraceLevelIsZero2w
&java.lang.Character.isWhitespace(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÈ8 È(D2u
$java.lang.StringBuilder.append(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÍ Í(2u
$java.lang.StringBuilder.append(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÏ Ï(2v
%java.lang.Character.toLowerCase(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÏ( Ï(32w
&java.lang.Character.isWhitespace(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java& (22u
$java.lang.StringBuilder.append(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaı ı(2v
%java.lang.Character.toLowerCase(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaı( ı(32u
$java.lang.StringBuilder.append(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java˜ ˜(2v
%java.lang.Character.toUpperCase(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java˜( ˜(32˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!startCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÊ Ê(2˙
®org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÁ Á(2ë
@org.jabref.logic.bst.util.BstCaseChanger.FormatMode?TITLE_LOWERSCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaË Ë(2É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÈ È(2è
>org.jabref.logic.bst.util.BstCaseChanger?prevColon@13.20:13.29CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÈ! È(*2ı
£org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÈE È(F2É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÈG È(H2ˆ
§org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÍ Í(2ı
£org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÍ Í(2É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÍ  Í(!2ˆ
§org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÏ Ï(2ı
£org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÏ4 Ï(52É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÏ6 Ï(72ı
£org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÓ Ó(2É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÓ Ó(2è
>org.jabref.logic.bst.util.BstCaseChanger?prevColon@13.20:13.29CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÔ Ô(2ı
£org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java3 (42É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java5 (62è
>org.jabref.logic.bst.util.BstCaseChanger?prevColon@13.20:13.29CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÒ Ò(2è
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_LOWERSCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÙ Ù(2ˆ
§org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaı ı(2ı
£org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaı4 ı(52É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaı6 ı(72è
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_UPPERSCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaˆ ˆ(2ˆ
§org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sbCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java˜ ˜(2ı
£org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java˜4 ˜(52É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java˜6 ˜(72å
;org.jabref.logic.bst.util.BstCaseChanger?LOGGER@10.32:10.38CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java˘ ˘(2˙
®org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!formatCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java˘U ˘([2É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java˚ ˚(	2É
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¸ ¸(2˙
£org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ5 Â(62˛
ßorg.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!start	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ< Â(A2˚
§org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sb	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂQ Â(S2ˇ
®org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ` Â(f2ä
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13DECLARATIONG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÊ Ê(2[
intRETURN_TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ Â(˛
±org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)?i@230.12:230.13VARIABLEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÊ Ê("
typeint"
isFinalfalse"Ä
declarationStringk<mark class="modifier"> </mark><mark class="modifier">int</mark> <mark class="class-field">i</mark> = start*i2T
intTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÊ Ê(2˘
ßorg.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!startCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÊ Ê(ó
£org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ5 Â(6"
typechar[]"
isFinalfalse"
declarationStringchar[] c*c2W
char[]TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ. Â(4∏
ßorg.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!start	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ< Â(A"
typeint"
isFinalfalse"<
declarationString'<mark class="modifier">int</mark> start*start2T
intTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ8 Â(;π
§org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!sb	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂQ Â(S"
typeStringBuilder"
isFinalfalse"%
declarationStringStringBuilder sb*sb2h
java.lang.StringBuilderTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂC Â(P‹
®org.jabref.logic.bst.util.BstCaseChanger.convertCharIfBraceLevelIsZero(char[], int, java.lang.StringBuilder, org.jabref.logic.bst.util.BstCaseChanger.FormatMode)!format	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂ` Â(f"
type
FormatMode"
isFinalfalse"&
declarationStringFormatMode format*format2Ñ
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaÂU Â(_ü;
Eorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)METHODG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaä# ä(2"
isFinalfalse"è
declarationString˘<mark class="modifier">public </mark><mark class="modifier">static </mark>Optional&lt;String&gt; <mark class="method">findSpecialChar</mark>(char[] c<mark class="modifier"><mark class="modifier">,</mark></mark> <mark class="modifier">int</mark> pos)"
isStatictrue"
accesspublic"

isAbstractfalse"
typeOptional<String>*findSpecialChar2i
java.util.Optional.of(T)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaç  ç("2i
java.util.Optional.of(T)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaê  ê("2i
java.util.Optional.of(T)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaì  ì("2i
java.util.Optional.of(T)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javañ  ñ("2i
java.util.Optional.of(T)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaô  ô("2i
java.util.Optional.of(T)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaú  ú("2i
java.util.Optional.of(T)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaü  ü("2n
java.lang.String.indexOf(int)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¢ ¢(2i
java.util.Optional.of(T)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java£ £(2o
java.lang.String.valueOf(char)CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java£& £(-2k
java.util.Optional.empty()CALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java• •(2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaã ã(2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaã ã(2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaå å(2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaå å(2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaå$ å(%2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaå& å()2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaè è(2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaè è(2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaè$ è(%2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaè& è()2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaí í(2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaí í(2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaí$ í(%2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaí& í()2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaï ï(2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaï ï(2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaï$ ï(%2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaï& ï()2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaò ò(2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaò ò(2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaò$ ò(%2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaò& ò()2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ õ(2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ õ(2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ$ õ(%2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaõ& õ()2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaû û(2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaû û(2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaû$ û(%2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaû& û()2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¢ ¢(2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java¢ ¢("2ò
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!cCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java£. £(/2ö
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!posCALLG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java£0 £(32ù
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaä: ä(;2ü
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!pos	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaäA ä(D2j
java.util.OptionalRETURN_TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaä ä(2q
java.lang.StringRETURN_TYPE_ARGUMENTG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaä ä(!∫
Gorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!c	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaä: ä(;"
typechar[]"
isFinalfalse"
declarationStringchar[] c*c2W
char[]TYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaä3 ä(9’
Iorg.jabref.logic.bst.util.BstCaseChanger.findSpecialChar(char[], int)!pos	PARAMETERG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaäA ä(D"
typeint"
isFinalfalse":
declarationString%<mark class="modifier">int</mark> pos*pos2T
intTYPEG
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaä= ä(@°
;org.jabref.logic.bst.util.BstCaseChanger?LOGGER@10.32:10.38VALUEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java
  
(&"
isFinaltrue"
typeLogger"‰
declarationStringŒ<mark class="modifier">private </mark><mark class="modifier">static </mark><mark class="modifier">final </mark>Logger <mark class="class-field">LOGGER</mark> = LoggerFactory.getLogger(BstCaseChanger.class);"
isStatictrue"
accessprivate*LOGGER2_
org.slf4j.LoggerTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java
 
(”
>org.jabref.logic.bst.util.BstCaseChanger?prevColon@13.20:13.29VARIABLEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java ("
isFinalfalse"
typeboolean"ì
declarationString~<mark class="modifier">private </mark><mark class="modifier">boolean</mark> <mark class="class-field">prevColon</mark> = true;"
isStaticfalse"
accessprivate*	prevColon2V
booleanTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (¬
?org.jabref.logic.bst.util.BstCaseChanger?braceLevel@16.16:16.26VARIABLEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java ("
isFinalfalse"
typeint"à
declarationStrings<mark class="modifier">private </mark><mark class="modifier">int</mark> <mark class="class-field">braceLevel</mark>"
isStaticfalse"
accessprivate*
braceLevel2R
intTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (†
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeENUME
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java ("B
declarationString-<mark class="modifier">enum </mark>FormatMode*
FormatMode2ö
Dorg.jabref.logic.bst.util.BstCaseChanger.FormatMode.FormatMode(char)DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java* *(2í
<org.jabref.logic.bst.util.BstCaseChanger.FormatMode.asChar()DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java. .(2í
<org.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java7! 7(#2û
Horg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(java.lang.String)DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java@! @(#2ú
Forg.jabref.logic.bst.util.BstCaseChanger.FormatMode?asChar@40.27:40.33DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java( ((!2ñ
@org.jabref.logic.bst.util.BstCaseChanger.FormatMode?TITLE_LOWERSDECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (2î
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_LOWERSDECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (2î
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_UPPERSDECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java (¨
@org.jabref.logic.bst.util.BstCaseChanger.FormatMode?TITLE_LOWERSVALUEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java ("
enumtrue*TITLE_LOWERS®
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_LOWERSVALUEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java ("
enumtrue*
ALL_LOWERS®
>org.jabref.logic.bst.util.BstCaseChanger.FormatMode?ALL_UPPERSVALUEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java ("
enumtrue*
ALL_UPPERSÚ
Dorg.jabref.logic.bst.util.BstCaseChanger.FormatMode.FormatMode(char)CONSTRUCTORE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java* *("g
declarationStringR<mark class="modifier"> </mark><mark class="method">FormatMode</mark>(char asChar)*
FormatMode2ö
Korg.jabref.logic.bst.util.BstCaseChanger.FormatMode.FormatMode(char)!asCharCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java+ +( 2ï
Forg.jabref.logic.bst.util.BstCaseChanger.FormatMode?asChar@40.27:40.33CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java+ +(2ü
Korg.jabref.logic.bst.util.BstCaseChanger.FormatMode.FormatMode(char)!asChar	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java* *(2â
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeRETURN_TYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java* *(æ
Korg.jabref.logic.bst.util.BstCaseChanger.FormatMode.FormatMode(char)!asChar	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java* *("
typechar"
isFinalfalse" 
declarationStringchar asChar*asChar2S
charTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java* *(»
<org.jabref.logic.bst.util.BstCaseChanger.FormatMode.asChar()METHODE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java. .("
isFinalfalse"c
declarationStringN<mark class="modifier">public </mark>char <mark class="method">asChar</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typechar*asChar2ï
Forg.jabref.logic.bst.util.BstCaseChanger.FormatMode?asChar@40.27:40.33CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java/ /(2Z
charRETURN_TYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java. .(Ï
<org.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)METHODE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java7! 7(#"
isFinalfalse"ü
declarationStringâ<mark class="modifier">public </mark><mark class="modifier">static </mark>FormatMode <mark class="method">of</mark>(final char bstFormat)"
isStatictrue"
accesspublic"

isAbstractfalse"
type
FormatMode*of2ã
<org.jabref.logic.bst.util.BstCaseChanger.FormatMode.values()CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java8. 8(42å
=java.lang.IllegalArgumentException.IllegalArgumentException()CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java= =(.2ú
Morg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)?mode@56.28:56.32CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java9 9(2ï
Forg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)!bstFormatCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java9# 9(,2ú
Morg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)?mode@56.28:56.32CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java: :(2ï
Forg.jabref.logic.bst.util.BstCaseChanger.FormatMode?asChar@40.27:40.33CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java9 9(2ö
Forg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)!bstFormat	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java7/ 7(82£
Morg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)?mode@56.28:56.32DECLARATIONE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java8 8( 2â
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeRETURN_TYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java7 7( ∑
Morg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)?mode@56.28:56.32VARIABLEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java8 8( "
type
FormatMode"
isFinalfalse"d
declarationStringO<mark class="modifier"> </mark>FormatMode <mark class="class-field">mode</mark>*mode2Ç
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java8 8(æ
Forg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)!bstFormat	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java7/ 7(8"
typechar"
isFinaltrue"#
declarationStringchar bstFormat*	bstFormat2S
charTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java7* 7(.Û	
Horg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(java.lang.String)METHODE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java@! @(#"
isFinalfalse"°
declarationStringã<mark class="modifier">public </mark><mark class="modifier">static </mark>FormatMode <mark class="method">of</mark>(final String bstFormat)"
isStatictrue"
accesspublic"

isAbstractfalse"
type
FormatMode*of2ã
<org.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(char)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaA A(2k
java.lang.String.charAt(int)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaA9 A(?2}
.java.lang.String.toLowerCase(java.util.Locale)CALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaA  A(+2°
Rorg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(java.lang.String)!bstFormatCALLE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.javaA A(2¶
Rorg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(java.lang.String)!bstFormat	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java@1 @(:2â
3org.jabref.logic.bst.util.BstCaseChanger.FormatModeRETURN_TYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java@ @( ⁄
Rorg.jabref.logic.bst.util.BstCaseChanger.FormatMode.of(java.lang.String)!bstFormat	PARAMETERE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java@1 @(:"
typeString"
isFinaltrue"%
declarationStringString bstFormat*	bstFormat2_
java.lang.StringTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java@* @(0∆
Forg.jabref.logic.bst.util.BstCaseChanger.FormatMode?asChar@40.27:40.33VALUEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java( ((!"
isFinaltrue"
typechar"ã
declarationStringv<mark class="modifier">private </mark><mark class="modifier">final </mark>char <mark class="class-field">asChar</mark>"
isStaticfalse"
accessprivate*asChar2S
charTYPEE
;src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java( ((